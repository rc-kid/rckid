    TEST(gbcemu, opcode_cb_bd) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB BD 0000
        gbc.setState(0xc4a1, 0xb4ed, 0xf520, 0xdf4c, 0xf6c, 0xf0d6, 0x1, 0x0);
        gbc.writeMem(0xc4a1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb4ed, gbc.sp());
        EXPECT(0xc4a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4a1));
        EXPECT(0xbd, gbc.readMem(0xc4a2));
        // CB BD 0001
        gbc.setState(0x9432, 0x44c3, 0x2e00, 0xd53a, 0xb407, 0x49cf, 0x0, 0x1);
        gbc.writeMem(0x9432, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x44c3, gbc.sp());
        EXPECT(0x9434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9432));
        EXPECT(0xbd, gbc.readMem(0x9433));
        // CB BD 0002
        gbc.setState(0x9f09, 0x902a, 0x5a90, 0x917c, 0x94c9, 0x8adf, 0x0, 0x0);
        gbc.writeMem(0x9f09, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x902a, gbc.sp());
        EXPECT(0x9f0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f09));
        EXPECT(0xbd, gbc.readMem(0x9f0a));
        // CB BD 0003
        gbc.setState(0x5866, 0x7059, 0xea00, 0x7730, 0x6870, 0x1886, 0x1, 0x0);
        gbc.writeMem(0x5866, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7059, gbc.sp());
        EXPECT(0x5868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0004
        gbc.setState(0xb903, 0x5a8c, 0x66e0, 0xb608, 0x84c3, 0xe9d2, 0x0, 0x0);
        gbc.writeMem(0xb903, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5a8c, gbc.sp());
        EXPECT(0xb905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb903));
        EXPECT(0xbd, gbc.readMem(0xb904));
        // CB BD 0005
        gbc.setState(0xb5a8, 0xa0bc, 0x17f0, 0x36ee, 0x34ad, 0x5e52, 0x1, 0x1);
        gbc.writeMem(0xb5a8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa0bc, gbc.sp());
        EXPECT(0xb5aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5a8));
        EXPECT(0xbd, gbc.readMem(0xb5a9));
        // CB BD 0006
        gbc.setState(0x4a55, 0x9f9c, 0x4110, 0x3663, 0xaf66, 0x62d8, 0x0, 0x0);
        gbc.writeMem(0x4a55, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9f9c, gbc.sp());
        EXPECT(0x4a57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0007
        gbc.setState(0x1bfb, 0x34fc, 0x7100, 0xe781, 0x1a6e, 0x352f, 0x1, 0x1);
        gbc.writeMem(0x1bfb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x34fc, gbc.sp());
        EXPECT(0x1bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0008
        gbc.setState(0x8753, 0xf3f0, 0x7b20, 0xbe14, 0x424a, 0x3a49, 0x1, 0x1);
        gbc.writeMem(0x8753, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf3f0, gbc.sp());
        EXPECT(0x8755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8753));
        EXPECT(0xbd, gbc.readMem(0x8754));
        // CB BD 0009
        gbc.setState(0x614a, 0x8257, 0xb7f0, 0xad35, 0x6dda, 0x9778, 0x0, 0x0);
        gbc.writeMem(0x614a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8257, gbc.sp());
        EXPECT(0x614c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 000A
        gbc.setState(0x73ab, 0x1021, 0x7820, 0xddd1, 0xc774, 0xd729, 0x0, 0x0);
        gbc.writeMem(0x73ab, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1021, gbc.sp());
        EXPECT(0x73ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 000B
        gbc.setState(0x78ae, 0x839a, 0x7da0, 0x9001, 0x93fd, 0xb41e, 0x1, 0x0);
        gbc.writeMem(0x78ae, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x839a, gbc.sp());
        EXPECT(0x78b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 000C
        gbc.setState(0xa7f4, 0xa659, 0x9d60, 0xbafa, 0xe482, 0xdb05, 0x1, 0x0);
        gbc.writeMem(0xa7f4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa659, gbc.sp());
        EXPECT(0xa7f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f4));
        EXPECT(0xbd, gbc.readMem(0xa7f5));
        // CB BD 000D
        gbc.setState(0x9a4b, 0xe71e, 0x8970, 0x884e, 0x2103, 0x40fc, 0x1, 0x0);
        gbc.writeMem(0x9a4b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe71e, gbc.sp());
        EXPECT(0x9a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a4b));
        EXPECT(0xbd, gbc.readMem(0x9a4c));
        // CB BD 000E
        gbc.setState(0x9e53, 0x606a, 0xfdb0, 0xd559, 0x5afa, 0x983d, 0x0, 0x0);
        gbc.writeMem(0x9e53, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x606a, gbc.sp());
        EXPECT(0x9e55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e53));
        EXPECT(0xbd, gbc.readMem(0x9e54));
        // CB BD 000F
        gbc.setState(0x3580, 0x55d4, 0x4be0, 0xc6e1, 0xd04c, 0xfa91, 0x1, 0x1);
        gbc.writeMem(0x3580, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x55d4, gbc.sp());
        EXPECT(0x3582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0010
        gbc.setState(0x54cd, 0x6fd8, 0xf230, 0x793e, 0x67e7, 0x9d3f, 0x1, 0x0);
        gbc.writeMem(0x54cd, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6fd8, gbc.sp());
        EXPECT(0x54cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0011
        gbc.setState(0xdaf3, 0xf4a3, 0xe870, 0x64e0, 0x5c6c, 0x71d, 0x0, 0x1);
        gbc.writeMem(0xdaf3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf4a3, gbc.sp());
        EXPECT(0xdaf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaf3));
        EXPECT(0xbd, gbc.readMem(0xdaf4));
        // CB BD 0012
        gbc.setState(0xbbfa, 0xef23, 0x2610, 0xd9f1, 0x95bb, 0x44f9, 0x1, 0x1);
        gbc.writeMem(0xbbfa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xef23, gbc.sp());
        EXPECT(0xbbfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbfa));
        EXPECT(0xbd, gbc.readMem(0xbbfb));
        // CB BD 0013
        gbc.setState(0x9b8a, 0x5d21, 0xae00, 0x2f9e, 0xac8f, 0x1913, 0x1, 0x1);
        gbc.writeMem(0x9b8a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5d21, gbc.sp());
        EXPECT(0x9b8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b8a));
        EXPECT(0xbd, gbc.readMem(0x9b8b));
        // CB BD 0015
        gbc.setState(0x594c, 0x9ceb, 0xccb0, 0x92af, 0xc5e5, 0xaa2d, 0x0, 0x0);
        gbc.writeMem(0x594c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9ceb, gbc.sp());
        EXPECT(0x594e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0017
        gbc.setState(0x10b7, 0xba8c, 0xf6f0, 0x81de, 0xa12, 0xb63e, 0x0, 0x0);
        gbc.writeMem(0x10b7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xba8c, gbc.sp());
        EXPECT(0x10b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0018
        gbc.setState(0x1e32, 0x3217, 0x6160, 0x115, 0x7bad, 0x16a, 0x0, 0x0);
        gbc.writeMem(0x1e32, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3217, gbc.sp());
        EXPECT(0x1e34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0019
        gbc.setState(0xad2, 0xde16, 0x3380, 0x935f, 0x7910, 0x1979, 0x0, 0x0);
        gbc.writeMem(0xad2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xde16, gbc.sp());
        EXPECT(0xad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 001A
        gbc.setState(0x5ce9, 0x7447, 0x3080, 0x6f0f, 0x3962, 0xfb82, 0x0, 0x0);
        gbc.writeMem(0x5ce9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7447, gbc.sp());
        EXPECT(0x5ceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 001B
        gbc.setState(0x83b5, 0x84d4, 0xb530, 0xb65b, 0x5cc, 0x4196, 0x0, 0x0);
        gbc.writeMem(0x83b5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x84d4, gbc.sp());
        EXPECT(0x83b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83b5));
        EXPECT(0xbd, gbc.readMem(0x83b6));
        // CB BD 001C
        gbc.setState(0x21ed, 0xc86d, 0xdd10, 0x6ce2, 0xa11, 0xfe1b, 0x1, 0x1);
        gbc.writeMem(0x21ed, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc86d, gbc.sp());
        EXPECT(0x21ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 001D
        gbc.setState(0x6d52, 0x1ebb, 0x7c20, 0x3b35, 0x4086, 0x5386, 0x0, 0x0);
        gbc.writeMem(0x6d52, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1ebb, gbc.sp());
        EXPECT(0x6d54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 001E
        gbc.setState(0xd9c7, 0xd8f8, 0x3d0, 0x18e3, 0x4f5a, 0xa009, 0x1, 0x1);
        gbc.writeMem(0xd9c7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd8f8, gbc.sp());
        EXPECT(0xd9c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c7));
        EXPECT(0xbd, gbc.readMem(0xd9c8));
        // CB BD 001F
        gbc.setState(0x2f65, 0xe7ef, 0x7cf0, 0x7f8d, 0xdeec, 0x5ffa, 0x0, 0x1);
        gbc.writeMem(0x2f65, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe7ef, gbc.sp());
        EXPECT(0x2f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0020
        gbc.setState(0x18f8, 0xbbb7, 0xa590, 0x51e3, 0xf571, 0xd53c, 0x1, 0x0);
        gbc.writeMem(0x18f8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xbbb7, gbc.sp());
        EXPECT(0x18fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0021
        gbc.setState(0x231c, 0x162a, 0x53b0, 0x9bc5, 0x2dac, 0xbd67, 0x0, 0x0);
        gbc.writeMem(0x231c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x162a, gbc.sp());
        EXPECT(0x231e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0022
        gbc.setState(0xb43, 0xfd56, 0x1700, 0xba98, 0xe243, 0xf494, 0x1, 0x1);
        gbc.writeMem(0xb43, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfd56, gbc.sp());
        EXPECT(0xb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0023
        gbc.setState(0xcf84, 0xc77a, 0x9b10, 0x232a, 0x7de7, 0x125b, 0x1, 0x0);
        gbc.writeMem(0xcf84, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc77a, gbc.sp());
        EXPECT(0xcf86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf84));
        EXPECT(0xbd, gbc.readMem(0xcf85));
        // CB BD 0024
        gbc.setState(0xbcc6, 0x3e60, 0x8590, 0xee2c, 0x847d, 0x3a3, 0x1, 0x0);
        gbc.writeMem(0xbcc6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3e60, gbc.sp());
        EXPECT(0xbcc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc6));
        EXPECT(0xbd, gbc.readMem(0xbcc7));
        // CB BD 0025
        gbc.setState(0x4fd6, 0xd8bb, 0x2850, 0x7a6b, 0x4af6, 0x94bf, 0x1, 0x1);
        gbc.writeMem(0x4fd6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd8bb, gbc.sp());
        EXPECT(0x4fd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0026
        gbc.setState(0xebc7, 0xc7c1, 0x4d80, 0xdab3, 0x6891, 0x33f4, 0x0, 0x0);
        gbc.writeMem(0xebc7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc7c1, gbc.sp());
        EXPECT(0xebc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebc7));
        EXPECT(0xbd, gbc.readMem(0xebc8));
        // CB BD 0027
        gbc.setState(0x3309, 0xf053, 0x9b00, 0x6177, 0xd8b6, 0xd9c2, 0x1, 0x0);
        gbc.writeMem(0x3309, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf053, gbc.sp());
        EXPECT(0x330b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0028
        gbc.setState(0x4f13, 0x1228, 0x79c0, 0x9dcc, 0x733f, 0x4794, 0x1, 0x1);
        gbc.writeMem(0x4f13, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1228, gbc.sp());
        EXPECT(0x4f15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0029
        gbc.setState(0x1b99, 0x193f, 0xf9a0, 0x728, 0xea7a, 0x6572, 0x0, 0x0);
        gbc.writeMem(0x1b99, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x193f, gbc.sp());
        EXPECT(0x1b9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 002A
        gbc.setState(0x5ea7, 0x22d6, 0x6b70, 0x9cd2, 0x4ad9, 0xb6b9, 0x1, 0x1);
        gbc.writeMem(0x5ea7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x22d6, gbc.sp());
        EXPECT(0x5ea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 002B
        gbc.setState(0x884d, 0x561f, 0x4c30, 0x49c, 0x7b51, 0x3fa9, 0x0, 0x0);
        gbc.writeMem(0x884d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x561f, gbc.sp());
        EXPECT(0x884f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x884d));
        EXPECT(0xbd, gbc.readMem(0x884e));
        // CB BD 002C
        gbc.setState(0x7964, 0x23df, 0xbd00, 0x9fa0, 0x4367, 0xe022, 0x1, 0x1);
        gbc.writeMem(0x7964, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x23df, gbc.sp());
        EXPECT(0x7966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 002D
        gbc.setState(0x4455, 0xf602, 0xc9b0, 0x301c, 0x739a, 0x79f6, 0x0, 0x0);
        gbc.writeMem(0x4455, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf602, gbc.sp());
        EXPECT(0x4457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 002E
        gbc.setState(0xdacd, 0x46fc, 0x2df0, 0xc53d, 0xdd8a, 0x78ca, 0x0, 0x0);
        gbc.writeMem(0xdacd, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x46fc, gbc.sp());
        EXPECT(0xdacf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdacd));
        EXPECT(0xbd, gbc.readMem(0xdace));
        // CB BD 002F
        gbc.setState(0x8b50, 0xcb, 0x5cb0, 0xa008, 0x29cd, 0x5539, 0x0, 0x1);
        gbc.writeMem(0x8b50, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xcb, gbc.sp());
        EXPECT(0x8b52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b50));
        EXPECT(0xbd, gbc.readMem(0x8b51));
        // CB BD 0030
        gbc.setState(0x39d, 0xf277, 0x2e10, 0xfc10, 0xef1d, 0x707a, 0x1, 0x1);
        gbc.writeMem(0x39d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf277, gbc.sp());
        EXPECT(0x39f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0031
        gbc.setState(0xb0e3, 0x16d9, 0x4eb0, 0x58cd, 0xfd1f, 0x5e68, 0x0, 0x0);
        gbc.writeMem(0xb0e3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x16d9, gbc.sp());
        EXPECT(0xb0e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e3));
        EXPECT(0xbd, gbc.readMem(0xb0e4));
        // CB BD 0032
        gbc.setState(0x6805, 0x6a68, 0x7e60, 0x624c, 0xab8c, 0x8a2d, 0x1, 0x1);
        gbc.writeMem(0x6805, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6a68, gbc.sp());
        EXPECT(0x6807, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0033
        gbc.setState(0x51b1, 0x1a08, 0x2880, 0x44a1, 0x63e, 0x6bef, 0x0, 0x1);
        gbc.writeMem(0x51b1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1a08, gbc.sp());
        EXPECT(0x51b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0034
        gbc.setState(0x3d9e, 0x3cbd, 0x2300, 0x326c, 0x2203, 0x65df, 0x1, 0x0);
        gbc.writeMem(0x3d9e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3cbd, gbc.sp());
        EXPECT(0x3da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0035
        gbc.setState(0x52b8, 0xa2af, 0xf630, 0x38c6, 0xd0f4, 0xf73b, 0x1, 0x0);
        gbc.writeMem(0x52b8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa2af, gbc.sp());
        EXPECT(0x52ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0036
        gbc.setState(0x56c, 0xcc89, 0x6440, 0xc920, 0xf685, 0xf6da, 0x0, 0x0);
        gbc.writeMem(0x56c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xcc89, gbc.sp());
        EXPECT(0x56e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0037
        gbc.setState(0x1417, 0xb112, 0x6980, 0xe622, 0xdddd, 0xc694, 0x1, 0x0);
        gbc.writeMem(0x1417, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb112, gbc.sp());
        EXPECT(0x1419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0038
        gbc.setState(0xd521, 0x4cea, 0x15a0, 0x750c, 0xdd4b, 0xd85b, 0x1, 0x0);
        gbc.writeMem(0xd521, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4cea, gbc.sp());
        EXPECT(0xd523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd521));
        EXPECT(0xbd, gbc.readMem(0xd522));
        // CB BD 0039
        gbc.setState(0x249e, 0x27cd, 0x9f40, 0x3777, 0x10a6, 0xc147, 0x0, 0x0);
        gbc.writeMem(0x249e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x27cd, gbc.sp());
        EXPECT(0x24a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 003A
        gbc.setState(0x15bc, 0xfc, 0x3d60, 0xeb5b, 0x10a8, 0x4515, 0x1, 0x1);
        gbc.writeMem(0x15bc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfc, gbc.sp());
        EXPECT(0x15be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 003B
        gbc.setState(0x3ad7, 0xb168, 0x9e0, 0x2c8a, 0x3a35, 0x15f8, 0x0, 0x0);
        gbc.writeMem(0x3ad7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb168, gbc.sp());
        EXPECT(0x3ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 003C
        gbc.setState(0x6f60, 0x8bca, 0xd970, 0x70b7, 0x7aa6, 0xf8ab, 0x0, 0x1);
        gbc.writeMem(0x6f60, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8bca, gbc.sp());
        EXPECT(0x6f62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 003D
        gbc.setState(0xef77, 0x7b8b, 0x250, 0x94a2, 0xb51d, 0x427c, 0x0, 0x0);
        gbc.writeMem(0xef77, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7b8b, gbc.sp());
        EXPECT(0xef79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef77));
        EXPECT(0xbd, gbc.readMem(0xef78));
        // CB BD 003E
        gbc.setState(0x4b5, 0x1a8c, 0xa1d0, 0x419f, 0x2859, 0xb8b1, 0x0, 0x0);
        gbc.writeMem(0x4b5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1a8c, gbc.sp());
        EXPECT(0x4b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 003F
        gbc.setState(0xb0bf, 0x3ce8, 0xce10, 0x80da, 0x7e12, 0x3f4a, 0x0, 0x0);
        gbc.writeMem(0xb0bf, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3ce8, gbc.sp());
        EXPECT(0xb0c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0bf));
        EXPECT(0xbd, gbc.readMem(0xb0c0));
        // CB BD 0040
        gbc.setState(0x8b26, 0x1e9d, 0xd390, 0xd45, 0x72cc, 0xa8fd, 0x0, 0x0);
        gbc.writeMem(0x8b26, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1e9d, gbc.sp());
        EXPECT(0x8b28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b26));
        EXPECT(0xbd, gbc.readMem(0x8b27));
        // CB BD 0041
        gbc.setState(0x3e8b, 0x7e57, 0x3300, 0x9f69, 0x2f95, 0x44d9, 0x1, 0x1);
        gbc.writeMem(0x3e8b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7e57, gbc.sp());
        EXPECT(0x3e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0042
        gbc.setState(0x9871, 0x2172, 0x4f90, 0xf242, 0x8f74, 0x32cd, 0x1, 0x0);
        gbc.writeMem(0x9871, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2172, gbc.sp());
        EXPECT(0x9873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9871));
        EXPECT(0xbd, gbc.readMem(0x9872));
        // CB BD 0044
        gbc.setState(0x5a15, 0x303a, 0x8ae0, 0x28a2, 0xf292, 0xde5f, 0x1, 0x0);
        gbc.writeMem(0x5a15, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x303a, gbc.sp());
        EXPECT(0x5a17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0045
        gbc.setState(0x3865, 0xdda1, 0x5320, 0x9eb7, 0xd822, 0xa6b7, 0x0, 0x0);
        gbc.writeMem(0x3865, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xdda1, gbc.sp());
        EXPECT(0x3867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0046
        gbc.setState(0x47cc, 0x5c15, 0x39b0, 0x198, 0x354a, 0x8038, 0x1, 0x1);
        gbc.writeMem(0x47cc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5c15, gbc.sp());
        EXPECT(0x47ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0047
        gbc.setState(0x127d, 0x3284, 0x2120, 0x44d6, 0x3df4, 0x7176, 0x1, 0x0);
        gbc.writeMem(0x127d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3284, gbc.sp());
        EXPECT(0x127f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0048
        gbc.setState(0x410d, 0x3f2a, 0x4820, 0xe320, 0xb979, 0x12cd, 0x1, 0x0);
        gbc.writeMem(0x410d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3f2a, gbc.sp());
        EXPECT(0x410f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0049
        gbc.setState(0x5897, 0xe733, 0xfd0, 0xb1, 0x17db, 0xf398, 0x1, 0x1);
        gbc.writeMem(0x5897, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe733, gbc.sp());
        EXPECT(0x5899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 004A
        gbc.setState(0xda, 0x5fff, 0x8900, 0xb863, 0x12ea, 0xb52f, 0x0, 0x1);
        gbc.writeMem(0xda, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5fff, gbc.sp());
        EXPECT(0xdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 004B
        gbc.setState(0x7e6a, 0xec29, 0xa140, 0x4534, 0xba9a, 0xd8b1, 0x1, 0x0);
        gbc.writeMem(0x7e6a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xec29, gbc.sp());
        EXPECT(0x7e6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 004C
        gbc.setState(0x8d46, 0xd2d3, 0x34d0, 0x5f17, 0xbe7d, 0xe6b9, 0x1, 0x1);
        gbc.writeMem(0x8d46, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd2d3, gbc.sp());
        EXPECT(0x8d48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d46));
        EXPECT(0xbd, gbc.readMem(0x8d47));
        // CB BD 004D
        gbc.setState(0x3505, 0x4b7d, 0xd570, 0x63bf, 0x468d, 0x8b78, 0x1, 0x1);
        gbc.writeMem(0x3505, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4b7d, gbc.sp());
        EXPECT(0x3507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 004E
        gbc.setState(0x5039, 0x89d1, 0xdfd0, 0xc78c, 0xd946, 0xba5, 0x0, 0x1);
        gbc.writeMem(0x5039, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x89d1, gbc.sp());
        EXPECT(0x503b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 004F
        gbc.setState(0xdfaa, 0x8d56, 0xcf60, 0x3fb0, 0xcf61, 0xf3f8, 0x1, 0x0);
        gbc.writeMem(0xdfaa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8d56, gbc.sp());
        EXPECT(0xdfac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfaa));
        EXPECT(0xbd, gbc.readMem(0xdfab));
        // CB BD 0050
        gbc.setState(0xa633, 0x50ad, 0x5780, 0xabca, 0xb697, 0x8b43, 0x1, 0x0);
        gbc.writeMem(0xa633, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x50ad, gbc.sp());
        EXPECT(0xa635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa633));
        EXPECT(0xbd, gbc.readMem(0xa634));
        // CB BD 0051
        gbc.setState(0x9b7, 0xc21b, 0xd940, 0xf944, 0xb7b1, 0x79f8, 0x0, 0x1);
        gbc.writeMem(0x9b7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc21b, gbc.sp());
        EXPECT(0x9b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0053
        gbc.setState(0x5f5, 0x3fc7, 0xc9f0, 0x766, 0xcaeb, 0x2714, 0x0, 0x1);
        gbc.writeMem(0x5f5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3fc7, gbc.sp());
        EXPECT(0x5f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0054
        gbc.setState(0x6cbd, 0x9fea, 0x340, 0x786f, 0xb5ea, 0xc0a6, 0x1, 0x0);
        gbc.writeMem(0x6cbd, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9fea, gbc.sp());
        EXPECT(0x6cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0055
        gbc.setState(0x6c5f, 0x7482, 0xc9b0, 0xa225, 0xcc2c, 0x746e, 0x0, 0x0);
        gbc.writeMem(0x6c5f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7482, gbc.sp());
        EXPECT(0x6c61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0056
        gbc.setState(0xedfe, 0x6f92, 0x4430, 0x69c9, 0x2bb8, 0xc5f8, 0x0, 0x0);
        gbc.writeMem(0xedfe, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6f92, gbc.sp());
        EXPECT(0xee00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedfe));
        EXPECT(0xbd, gbc.readMem(0xedff));
        // CB BD 0057
        gbc.setState(0x5d9e, 0xf3ec, 0x8de0, 0xa641, 0x7342, 0x72e9, 0x0, 0x0);
        gbc.writeMem(0x5d9e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf3ec, gbc.sp());
        EXPECT(0x5da0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0058
        gbc.setState(0x531e, 0x58f3, 0x6790, 0x60a4, 0xb1b1, 0x5714, 0x1, 0x0);
        gbc.writeMem(0x531e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x58f3, gbc.sp());
        EXPECT(0x5320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0059
        gbc.setState(0x991f, 0x8520, 0x21c0, 0x2f05, 0x2224, 0x56de, 0x0, 0x0);
        gbc.writeMem(0x991f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8520, gbc.sp());
        EXPECT(0x9921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x991f));
        EXPECT(0xbd, gbc.readMem(0x9920));
        // CB BD 005A
        gbc.setState(0x2041, 0x32a3, 0xde00, 0x4ac0, 0xddc2, 0xf6f0, 0x0, 0x0);
        gbc.writeMem(0x2041, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x32a3, gbc.sp());
        EXPECT(0x2043, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 005B
        gbc.setState(0xaf3a, 0xe676, 0x9ee0, 0xc8db, 0x9dbc, 0x4d0, 0x1, 0x0);
        gbc.writeMem(0xaf3a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe676, gbc.sp());
        EXPECT(0xaf3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf3a));
        EXPECT(0xbd, gbc.readMem(0xaf3b));
        // CB BD 005C
        gbc.setState(0xae35, 0x2df0, 0xcf30, 0xe1c0, 0x391d, 0x568e, 0x1, 0x0);
        gbc.writeMem(0xae35, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2df0, gbc.sp());
        EXPECT(0xae37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae35));
        EXPECT(0xbd, gbc.readMem(0xae36));
        // CB BD 005D
        gbc.setState(0x8a80, 0x4655, 0x5930, 0x204a, 0x3405, 0xc000, 0x0, 0x1);
        gbc.writeMem(0x8a80, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4655, gbc.sp());
        EXPECT(0x8a82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a80));
        EXPECT(0xbd, gbc.readMem(0x8a81));
        // CB BD 005F
        gbc.setState(0xc117, 0x35b3, 0xf610, 0x49b0, 0xd1dc, 0x62e4, 0x1, 0x0);
        gbc.writeMem(0xc117, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x35b3, gbc.sp());
        EXPECT(0xc119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc117));
        EXPECT(0xbd, gbc.readMem(0xc118));
        // CB BD 0061
        gbc.setState(0xd208, 0x1623, 0xcea0, 0x6373, 0xdeed, 0xb4af, 0x0, 0x1);
        gbc.writeMem(0xd208, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1623, gbc.sp());
        EXPECT(0xd20a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd208));
        EXPECT(0xbd, gbc.readMem(0xd209));
        // CB BD 0062
        gbc.setState(0x510d, 0xeda7, 0x2aa0, 0xde49, 0x6aa1, 0x5bf, 0x0, 0x1);
        gbc.writeMem(0x510d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xeda7, gbc.sp());
        EXPECT(0x510f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0063
        gbc.setState(0xcbb5, 0xe6c6, 0xd720, 0xbf83, 0x3d4d, 0x6e4b, 0x1, 0x0);
        gbc.writeMem(0xcbb5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe6c6, gbc.sp());
        EXPECT(0xcbb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb5));
        EXPECT(0xbd, gbc.readMem(0xcbb6));
        // CB BD 0064
        gbc.setState(0x411, 0x5783, 0x7d80, 0x66df, 0x5581, 0x1cf, 0x1, 0x0);
        gbc.writeMem(0x411, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5783, gbc.sp());
        EXPECT(0x413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0065
        gbc.setState(0xa03a, 0x7807, 0xcbb0, 0xe6c6, 0xd71a, 0x2ce7, 0x0, 0x1);
        gbc.writeMem(0xa03a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7807, gbc.sp());
        EXPECT(0xa03c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa03a));
        EXPECT(0xbd, gbc.readMem(0xa03b));
        // CB BD 0066
        gbc.setState(0xeb61, 0xc240, 0xb980, 0x8c1b, 0x4de1, 0x54f7, 0x0, 0x1);
        gbc.writeMem(0xeb61, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc240, gbc.sp());
        EXPECT(0xeb63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb61));
        EXPECT(0xbd, gbc.readMem(0xeb62));
        // CB BD 0067
        gbc.setState(0x1092, 0x54d2, 0xc170, 0xf4ea, 0xda42, 0x5c00, 0x1, 0x1);
        gbc.writeMem(0x1092, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x54d2, gbc.sp());
        EXPECT(0x1094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0068
        gbc.setState(0x6e15, 0xbf19, 0xe0e0, 0xecdf, 0xe3d8, 0xb766, 0x1, 0x1);
        gbc.writeMem(0x6e15, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbf19, gbc.sp());
        EXPECT(0x6e17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0069
        gbc.setState(0xafc1, 0x8adf, 0x7310, 0xab3f, 0x76b0, 0xcaa5, 0x0, 0x0);
        gbc.writeMem(0xafc1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8adf, gbc.sp());
        EXPECT(0xafc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc1));
        EXPECT(0xbd, gbc.readMem(0xafc2));
        // CB BD 006A
        gbc.setState(0xe87a, 0xf168, 0xead0, 0xa22d, 0xf502, 0xb52e, 0x0, 0x1);
        gbc.writeMem(0xe87a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf168, gbc.sp());
        EXPECT(0xe87c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe87a));
        EXPECT(0xbd, gbc.readMem(0xe87b));
        // CB BD 006B
        gbc.setState(0x34e7, 0x24d3, 0xd5b0, 0xaf, 0xbba7, 0x5c51, 0x0, 0x0);
        gbc.writeMem(0x34e7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x24d3, gbc.sp());
        EXPECT(0x34e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 006C
        gbc.setState(0xc567, 0x578c, 0xd1d0, 0x8073, 0x99a9, 0x7132, 0x1, 0x1);
        gbc.writeMem(0xc567, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x578c, gbc.sp());
        EXPECT(0xc569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc567));
        EXPECT(0xbd, gbc.readMem(0xc568));
        // CB BD 006D
        gbc.setState(0xbb88, 0x8eab, 0xf790, 0x85b3, 0x3c24, 0x173c, 0x0, 0x1);
        gbc.writeMem(0xbb88, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8eab, gbc.sp());
        EXPECT(0xbb8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb88));
        EXPECT(0xbd, gbc.readMem(0xbb89));
        // CB BD 006E
        gbc.setState(0xd13, 0xa11b, 0xe490, 0xa9f0, 0xff53, 0x1a7b, 0x1, 0x1);
        gbc.writeMem(0xd13, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa11b, gbc.sp());
        EXPECT(0xd15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 006F
        gbc.setState(0x90d3, 0x66d8, 0x2e30, 0x61db, 0xd60e, 0x8885, 0x1, 0x1);
        gbc.writeMem(0x90d3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x66d8, gbc.sp());
        EXPECT(0x90d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d3));
        EXPECT(0xbd, gbc.readMem(0x90d4));
        // CB BD 0070
        gbc.setState(0xd118, 0xfb5d, 0x6cf0, 0xef38, 0xe89d, 0xf03e, 0x0, 0x1);
        gbc.writeMem(0xd118, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfb5d, gbc.sp());
        EXPECT(0xd11a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd118));
        EXPECT(0xbd, gbc.readMem(0xd119));
        // CB BD 0071
        gbc.setState(0x385c, 0xe225, 0xe9f0, 0x7037, 0xfc11, 0x6ca2, 0x0, 0x1);
        gbc.writeMem(0x385c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe225, gbc.sp());
        EXPECT(0x385e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0072
        gbc.setState(0xa1e4, 0x53ae, 0x2100, 0xba17, 0x389d, 0xc4ea, 0x1, 0x0);
        gbc.writeMem(0xa1e4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x53ae, gbc.sp());
        EXPECT(0xa1e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1e4));
        EXPECT(0xbd, gbc.readMem(0xa1e5));
        // CB BD 0073
        gbc.setState(0x6ecf, 0x2734, 0x2b30, 0x80d6, 0x2572, 0xf865, 0x0, 0x1);
        gbc.writeMem(0x6ecf, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2734, gbc.sp());
        EXPECT(0x6ed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0074
        gbc.setState(0xabe4, 0x233b, 0x7a20, 0x5ce4, 0x2ee1, 0x218d, 0x1, 0x1);
        gbc.writeMem(0xabe4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x233b, gbc.sp());
        EXPECT(0xabe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabe4));
        EXPECT(0xbd, gbc.readMem(0xabe5));
        // CB BD 0075
        gbc.setState(0x3b14, 0x3ff2, 0xd980, 0x71da, 0xfd54, 0x9098, 0x1, 0x1);
        gbc.writeMem(0x3b14, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3ff2, gbc.sp());
        EXPECT(0x3b16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0076
        gbc.setState(0x4e63, 0xdf, 0xda10, 0xe45d, 0xc70, 0xc29a, 0x0, 0x0);
        gbc.writeMem(0x4e63, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdf, gbc.sp());
        EXPECT(0x4e65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0077
        gbc.setState(0x9dac, 0x98e4, 0xb070, 0x1a1, 0xd231, 0x8140, 0x0, 0x0);
        gbc.writeMem(0x9dac, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x98e4, gbc.sp());
        EXPECT(0x9dae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dac));
        EXPECT(0xbd, gbc.readMem(0x9dad));
        // CB BD 0078
        gbc.setState(0xea0e, 0xa14, 0xb690, 0x8244, 0xfdb3, 0x7da1, 0x0, 0x1);
        gbc.writeMem(0xea0e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa14, gbc.sp());
        EXPECT(0xea10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea0e));
        EXPECT(0xbd, gbc.readMem(0xea0f));
        // CB BD 0079
        gbc.setState(0x58cc, 0x90fc, 0xfb90, 0xc6d5, 0xb8b1, 0x63c8, 0x1, 0x1);
        gbc.writeMem(0x58cc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x90fc, gbc.sp());
        EXPECT(0x58ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 007A
        gbc.setState(0x14d7, 0x880a, 0xf5e0, 0x3941, 0x7fa5, 0x5e1e, 0x0, 0x0);
        gbc.writeMem(0x14d7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x880a, gbc.sp());
        EXPECT(0x14d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 007B
        gbc.setState(0xee2b, 0x3c9, 0x7830, 0x5c7, 0x1b70, 0xce8f, 0x1, 0x1);
        gbc.writeMem(0xee2b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3c9, gbc.sp());
        EXPECT(0xee2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee2b));
        EXPECT(0xbd, gbc.readMem(0xee2c));
        // CB BD 007C
        gbc.setState(0xb32a, 0x2312, 0x1520, 0x8d9d, 0x111a, 0xc86c, 0x0, 0x0);
        gbc.writeMem(0xb32a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2312, gbc.sp());
        EXPECT(0xb32c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32a));
        EXPECT(0xbd, gbc.readMem(0xb32b));
        // CB BD 007D
        gbc.setState(0x56, 0xfff5, 0xb1e0, 0x5822, 0x7ffc, 0xb194, 0x0, 0x1);
        gbc.writeMem(0x56, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfff5, gbc.sp());
        EXPECT(0x58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 007E
        gbc.setState(0x4669, 0x6471, 0x7ac0, 0x9da0, 0xc9c, 0xb2f7, 0x0, 0x0);
        gbc.writeMem(0x4669, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6471, gbc.sp());
        EXPECT(0x466b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 007F
        gbc.setState(0x42b3, 0xe132, 0x7ee0, 0xe7db, 0x73e7, 0x7a2a, 0x1, 0x0);
        gbc.writeMem(0x42b3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe132, gbc.sp());
        EXPECT(0x42b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0080
        gbc.setState(0xc94, 0xc384, 0xcaf0, 0xbaf4, 0xbb2c, 0x5baf, 0x0, 0x1);
        gbc.writeMem(0xc94, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc384, gbc.sp());
        EXPECT(0xc96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0081
        gbc.setState(0xdf0a, 0xe08c, 0xdfb0, 0x984b, 0x5e21, 0x57c8, 0x1, 0x0);
        gbc.writeMem(0xdf0a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe08c, gbc.sp());
        EXPECT(0xdf0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf0a));
        EXPECT(0xbd, gbc.readMem(0xdf0b));
        // CB BD 0082
        gbc.setState(0xe13c, 0x8313, 0x3710, 0x86bd, 0x3bcd, 0xbe94, 0x0, 0x0);
        gbc.writeMem(0xe13c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8313, gbc.sp());
        EXPECT(0xe13e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe13c));
        EXPECT(0xbd, gbc.readMem(0xe13d));
        // CB BD 0083
        gbc.setState(0xdbf, 0x87ea, 0x7080, 0x8582, 0xd46, 0x84a, 0x1, 0x1);
        gbc.writeMem(0xdbf, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x87ea, gbc.sp());
        EXPECT(0xdc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0084
        gbc.setState(0x3191, 0x1d1f, 0x9e90, 0x583, 0x6ba, 0xcc8f, 0x1, 0x1);
        gbc.writeMem(0x3191, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1d1f, gbc.sp());
        EXPECT(0x3193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0086
        gbc.setState(0x8797, 0xed46, 0x6830, 0x5f68, 0x7f75, 0xabff, 0x0, 0x1);
        gbc.writeMem(0x8797, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xed46, gbc.sp());
        EXPECT(0x8799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8797));
        EXPECT(0xbd, gbc.readMem(0x8798));
        // CB BD 0087
        gbc.setState(0x1b4e, 0xc0f1, 0x12a0, 0xa051, 0x7db7, 0x5721, 0x1, 0x1);
        gbc.writeMem(0x1b4e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc0f1, gbc.sp());
        EXPECT(0x1b50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0088
        gbc.setState(0x22ee, 0xf65e, 0x7a10, 0xd03a, 0x522e, 0x2a57, 0x0, 0x0);
        gbc.writeMem(0x22ee, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf65e, gbc.sp());
        EXPECT(0x22f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0089
        gbc.setState(0x6a6f, 0x7973, 0x9c40, 0x9538, 0x3dc9, 0x3ee5, 0x1, 0x0);
        gbc.writeMem(0x6a6f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7973, gbc.sp());
        EXPECT(0x6a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 008A
        gbc.setState(0x4039, 0x185, 0x6460, 0xbc6d, 0xa465, 0x5fb3, 0x1, 0x1);
        gbc.writeMem(0x4039, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x185, gbc.sp());
        EXPECT(0x403b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 008B
        gbc.setState(0x8694, 0xbcac, 0xe3f0, 0x5783, 0x2512, 0x15d7, 0x1, 0x1);
        gbc.writeMem(0x8694, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbcac, gbc.sp());
        EXPECT(0x8696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8694));
        EXPECT(0xbd, gbc.readMem(0x8695));
        // CB BD 008C
        gbc.setState(0x21e5, 0x52fc, 0xe70, 0xa49b, 0xd8d1, 0x5a24, 0x1, 0x1);
        gbc.writeMem(0x21e5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x52fc, gbc.sp());
        EXPECT(0x21e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 008D
        gbc.setState(0x31f3, 0x883f, 0xdd40, 0x2fab, 0x9c99, 0xbda7, 0x1, 0x1);
        gbc.writeMem(0x31f3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x883f, gbc.sp());
        EXPECT(0x31f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 008F
        gbc.setState(0x422e, 0x125a, 0x38a0, 0x3bc0, 0xe53f, 0xba14, 0x1, 0x1);
        gbc.writeMem(0x422e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x125a, gbc.sp());
        EXPECT(0x4230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0090
        gbc.setState(0x8bdc, 0x46c9, 0x4ff0, 0x66fe, 0x226, 0x1aab, 0x0, 0x1);
        gbc.writeMem(0x8bdc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x46c9, gbc.sp());
        EXPECT(0x8bde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bdc));
        EXPECT(0xbd, gbc.readMem(0x8bdd));
        // CB BD 0091
        gbc.setState(0xbb81, 0x9a5b, 0x84c0, 0x4efd, 0x8b0e, 0xd110, 0x0, 0x0);
        gbc.writeMem(0xbb81, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9a5b, gbc.sp());
        EXPECT(0xbb83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb81));
        EXPECT(0xbd, gbc.readMem(0xbb82));
        // CB BD 0092
        gbc.setState(0xc940, 0x3b98, 0x8fc0, 0x24e9, 0x36e0, 0x60d, 0x1, 0x1);
        gbc.writeMem(0xc940, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3b98, gbc.sp());
        EXPECT(0xc942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc940));
        EXPECT(0xbd, gbc.readMem(0xc941));
        // CB BD 0093
        gbc.setState(0x8a9b, 0x87b, 0xa910, 0x22c4, 0xed07, 0x7dbf, 0x1, 0x0);
        gbc.writeMem(0x8a9b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x87b, gbc.sp());
        EXPECT(0x8a9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a9b));
        EXPECT(0xbd, gbc.readMem(0x8a9c));
        // CB BD 0094
        gbc.setState(0x7a74, 0x1858, 0xfad0, 0x768f, 0x9084, 0x8ec, 0x1, 0x1);
        gbc.writeMem(0x7a74, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1858, gbc.sp());
        EXPECT(0x7a76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0095
        gbc.setState(0x7194, 0x5828, 0xb170, 0xa34a, 0x5c02, 0xa432, 0x0, 0x1);
        gbc.writeMem(0x7194, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5828, gbc.sp());
        EXPECT(0x7196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0096
        gbc.setState(0xd6f2, 0x62d4, 0x3d50, 0x82f8, 0xcd58, 0xa0a0, 0x1, 0x0);
        gbc.writeMem(0xd6f2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x62d4, gbc.sp());
        EXPECT(0xd6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f2));
        EXPECT(0xbd, gbc.readMem(0xd6f3));
        // CB BD 0098
        gbc.setState(0x9031, 0x2093, 0xf2d0, 0x65a0, 0xd924, 0x2c72, 0x1, 0x1);
        gbc.writeMem(0x9031, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2093, gbc.sp());
        EXPECT(0x9033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9031));
        EXPECT(0xbd, gbc.readMem(0x9032));
        // CB BD 0099
        gbc.setState(0x9d3a, 0x1ace, 0x1d10, 0x7f4b, 0x2174, 0xc609, 0x0, 0x0);
        gbc.writeMem(0x9d3a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1ace, gbc.sp());
        EXPECT(0x9d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d3a));
        EXPECT(0xbd, gbc.readMem(0x9d3b));
        // CB BD 009A
        gbc.setState(0x3307, 0xb2aa, 0x4e20, 0x723a, 0x7029, 0x1091, 0x1, 0x0);
        gbc.writeMem(0x3307, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb2aa, gbc.sp());
        EXPECT(0x3309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 009B
        gbc.setState(0x3ebc, 0x4688, 0xe170, 0x56fe, 0x6cd7, 0xcf51, 0x0, 0x0);
        gbc.writeMem(0x3ebc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4688, gbc.sp());
        EXPECT(0x3ebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 009C
        gbc.setState(0xed4b, 0x3f26, 0xf430, 0xeb61, 0x469e, 0xf9fe, 0x0, 0x1);
        gbc.writeMem(0xed4b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3f26, gbc.sp());
        EXPECT(0xed4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed4b));
        EXPECT(0xbd, gbc.readMem(0xed4c));
        // CB BD 009D
        gbc.setState(0x8485, 0x7077, 0xf100, 0xd2d2, 0x7cc3, 0x7466, 0x1, 0x1);
        gbc.writeMem(0x8485, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7077, gbc.sp());
        EXPECT(0x8487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8485));
        EXPECT(0xbd, gbc.readMem(0x8486));
        // CB BD 009E
        gbc.setState(0xbe8, 0x8c36, 0x3630, 0x1b6d, 0xc995, 0x3b9e, 0x0, 0x0);
        gbc.writeMem(0xbe8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8c36, gbc.sp());
        EXPECT(0xbea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 009F
        gbc.setState(0x9517, 0x5afc, 0x93a0, 0xa7f4, 0xc8a3, 0x13a7, 0x0, 0x1);
        gbc.writeMem(0x9517, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5afc, gbc.sp());
        EXPECT(0x9519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9517));
        EXPECT(0xbd, gbc.readMem(0x9518));
        // CB BD 00A0
        gbc.setState(0xe8a2, 0x30e8, 0xc570, 0xf0a2, 0x2c92, 0x8207, 0x0, 0x1);
        gbc.writeMem(0xe8a2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x30e8, gbc.sp());
        EXPECT(0xe8a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8a2));
        EXPECT(0xbd, gbc.readMem(0xe8a3));
        // CB BD 00A1
        gbc.setState(0xcb81, 0x5206, 0xc7d0, 0xbe8f, 0x6554, 0x35f8, 0x1, 0x0);
        gbc.writeMem(0xcb81, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5206, gbc.sp());
        EXPECT(0xcb83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb81));
        EXPECT(0xbd, gbc.readMem(0xcb82));
        // CB BD 00A2
        gbc.setState(0x5234, 0x2234, 0x78d0, 0xff52, 0x716b, 0x5292, 0x1, 0x0);
        gbc.writeMem(0x5234, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2234, gbc.sp());
        EXPECT(0x5236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00A3
        gbc.setState(0x2d05, 0xfe49, 0x7930, 0x5fa3, 0xa5d2, 0xede0, 0x0, 0x0);
        gbc.writeMem(0x2d05, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfe49, gbc.sp());
        EXPECT(0x2d07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00A4
        gbc.setState(0x1b29, 0xb070, 0x3c50, 0x69b4, 0x2558, 0xea3f, 0x1, 0x0);
        gbc.writeMem(0x1b29, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb070, gbc.sp());
        EXPECT(0x1b2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00A5
        gbc.setState(0x4eef, 0x7e12, 0x4b60, 0xc2b1, 0x5a5e, 0x69e4, 0x1, 0x1);
        gbc.writeMem(0x4eef, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7e12, gbc.sp());
        EXPECT(0x4ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 00A6
        gbc.setState(0x4ef0, 0x7f32, 0x49d0, 0x4714, 0xb8f4, 0x1f37, 0x1, 0x1);
        gbc.writeMem(0x4ef0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7f32, gbc.sp());
        EXPECT(0x4ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00A7
        gbc.setState(0x7ef, 0x274b, 0xe2b0, 0x98a, 0xe1ae, 0x7b87, 0x1, 0x1);
        gbc.writeMem(0x7ef, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x274b, gbc.sp());
        EXPECT(0x7f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00A8
        gbc.setState(0xa3af, 0xc999, 0xc540, 0xa8bd, 0xa532, 0x8d6a, 0x0, 0x1);
        gbc.writeMem(0xa3af, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc999, gbc.sp());
        EXPECT(0xa3b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3af));
        EXPECT(0xbd, gbc.readMem(0xa3b0));
        // CB BD 00A9
        gbc.setState(0x113b, 0x22b, 0xc710, 0x4c5d, 0x5ed3, 0x70d2, 0x1, 0x1);
        gbc.writeMem(0x113b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x22b, gbc.sp());
        EXPECT(0x113d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00AA
        gbc.setState(0x7f40, 0x5afd, 0x95d0, 0x69a5, 0x8688, 0xbabe, 0x1, 0x0);
        gbc.writeMem(0x7f40, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5afd, gbc.sp());
        EXPECT(0x7f42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00AB
        gbc.setState(0xd25e, 0x48a, 0xda90, 0x730f, 0x2c5c, 0xc88, 0x1, 0x0);
        gbc.writeMem(0xd25e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x48a, gbc.sp());
        EXPECT(0xd260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd25e));
        EXPECT(0xbd, gbc.readMem(0xd25f));
        // CB BD 00AC
        gbc.setState(0x2c5d, 0x204c, 0x86f0, 0xef2b, 0x1b89, 0x7013, 0x0, 0x1);
        gbc.writeMem(0x2c5d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x204c, gbc.sp());
        EXPECT(0x2c5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00AE
        gbc.setState(0xd898, 0x4da3, 0xa700, 0x10da, 0x5cbd, 0x754d, 0x0, 0x0);
        gbc.writeMem(0xd898, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4da3, gbc.sp());
        EXPECT(0xd89a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd898));
        EXPECT(0xbd, gbc.readMem(0xd899));
        // CB BD 00AF
        gbc.setState(0xdf91, 0xc9c5, 0x5180, 0x708e, 0x4a4f, 0x2c62, 0x1, 0x1);
        gbc.writeMem(0xdf91, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc9c5, gbc.sp());
        EXPECT(0xdf93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf91));
        EXPECT(0xbd, gbc.readMem(0xdf92));
        // CB BD 00B0
        gbc.setState(0x8d6e, 0x19d6, 0xdcf0, 0xbe82, 0xf384, 0xb980, 0x0, 0x0);
        gbc.writeMem(0x8d6e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x19d6, gbc.sp());
        EXPECT(0x8d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d6e));
        EXPECT(0xbd, gbc.readMem(0x8d6f));
        // CB BD 00B1
        gbc.setState(0x87db, 0x48dd, 0xda0, 0x1317, 0xbcde, 0x1c68, 0x0, 0x1);
        gbc.writeMem(0x87db, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x48dd, gbc.sp());
        EXPECT(0x87dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87db));
        EXPECT(0xbd, gbc.readMem(0x87dc));
        // CB BD 00B2
        gbc.setState(0x6730, 0x884a, 0x8290, 0x5348, 0x470c, 0xa86, 0x1, 0x1);
        gbc.writeMem(0x6730, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x884a, gbc.sp());
        EXPECT(0x6732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00B3
        gbc.setState(0xc5fa, 0x2999, 0xce70, 0xee8e, 0xd7b, 0xfa68, 0x1, 0x0);
        gbc.writeMem(0xc5fa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2999, gbc.sp());
        EXPECT(0xc5fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5fa));
        EXPECT(0xbd, gbc.readMem(0xc5fb));
        // CB BD 00B4
        gbc.setState(0x9a97, 0xaeda, 0x1f10, 0x6994, 0x1efe, 0x24fd, 0x1, 0x0);
        gbc.writeMem(0x9a97, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xaeda, gbc.sp());
        EXPECT(0x9a99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a97));
        EXPECT(0xbd, gbc.readMem(0x9a98));
        // CB BD 00B5
        gbc.setState(0xe712, 0x1ebb, 0xb6d0, 0xd8f9, 0xf0dd, 0x474a, 0x1, 0x1);
        gbc.writeMem(0xe712, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1ebb, gbc.sp());
        EXPECT(0xe714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe712));
        EXPECT(0xbd, gbc.readMem(0xe713));
        // CB BD 00B7
        gbc.setState(0xbb1d, 0xe658, 0x14e0, 0xd64a, 0xfba4, 0x4c5d, 0x0, 0x1);
        gbc.writeMem(0xbb1d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe658, gbc.sp());
        EXPECT(0xbb1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb1d));
        EXPECT(0xbd, gbc.readMem(0xbb1e));
        // CB BD 00B8
        gbc.setState(0x9822, 0x21cc, 0x12c0, 0xbadb, 0x8b9b, 0x1d27, 0x1, 0x1);
        gbc.writeMem(0x9822, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x21cc, gbc.sp());
        EXPECT(0x9824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9822));
        EXPECT(0xbd, gbc.readMem(0x9823));
        // CB BD 00B9
        gbc.setState(0x94b2, 0x89cb, 0xc5f0, 0xdcc9, 0x3c7e, 0x1881, 0x1, 0x0);
        gbc.writeMem(0x94b2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x89cb, gbc.sp());
        EXPECT(0x94b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94b2));
        EXPECT(0xbd, gbc.readMem(0x94b3));
        // CB BD 00BA
        gbc.setState(0xa4d0, 0x72b3, 0xf9c0, 0x8edd, 0x6c28, 0xdb7f, 0x1, 0x0);
        gbc.writeMem(0xa4d0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x72b3, gbc.sp());
        EXPECT(0xa4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4d0));
        EXPECT(0xbd, gbc.readMem(0xa4d1));
        // CB BD 00BB
        gbc.setState(0x2545, 0x3d10, 0x3af0, 0x9509, 0xed4b, 0x2c68, 0x0, 0x0);
        gbc.writeMem(0x2545, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3d10, gbc.sp());
        EXPECT(0x2547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00BC
        gbc.setState(0x9c3d, 0x6522, 0xee60, 0x3971, 0xce04, 0xa22e, 0x1, 0x0);
        gbc.writeMem(0x9c3d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6522, gbc.sp());
        EXPECT(0x9c3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c3d));
        EXPECT(0xbd, gbc.readMem(0x9c3e));
        // CB BD 00BD
        gbc.setState(0x2645, 0x523e, 0xc260, 0x6873, 0x8c8b, 0xc964, 0x0, 0x1);
        gbc.writeMem(0x2645, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x523e, gbc.sp());
        EXPECT(0x2647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 00BE
        gbc.setState(0x6a8f, 0x3c20, 0x84f0, 0x1a59, 0x1166, 0x1e24, 0x0, 0x1);
        gbc.writeMem(0x6a8f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3c20, gbc.sp());
        EXPECT(0x6a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00BF
        gbc.setState(0x9c3, 0x9a27, 0xb5e0, 0xe549, 0x67f6, 0xcee3, 0x1, 0x0);
        gbc.writeMem(0x9c3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9a27, gbc.sp());
        EXPECT(0x9c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 00C0
        gbc.setState(0xce15, 0x4c9d, 0x5980, 0x1d67, 0x51d5, 0xbea6, 0x0, 0x0);
        gbc.writeMem(0xce15, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4c9d, gbc.sp());
        EXPECT(0xce17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce15));
        EXPECT(0xbd, gbc.readMem(0xce16));
        // CB BD 00C1
        gbc.setState(0x97f1, 0x39d3, 0x9dd0, 0x2e44, 0xa721, 0x6cc0, 0x1, 0x0);
        gbc.writeMem(0x97f1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x39d3, gbc.sp());
        EXPECT(0x97f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f1));
        EXPECT(0xbd, gbc.readMem(0x97f2));
        // CB BD 00C2
        gbc.setState(0x6ed0, 0xfa39, 0x5330, 0x2b3a, 0x1529, 0xd536, 0x0, 0x0);
        gbc.writeMem(0x6ed0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfa39, gbc.sp());
        EXPECT(0x6ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00C3
        gbc.setState(0x9dfb, 0x1d5c, 0xa920, 0xa56, 0x219d, 0xac69, 0x0, 0x1);
        gbc.writeMem(0x9dfb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1d5c, gbc.sp());
        EXPECT(0x9dfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dfb));
        EXPECT(0xbd, gbc.readMem(0x9dfc));
        // CB BD 00C4
        gbc.setState(0x1747, 0x637d, 0xa0a0, 0xdf59, 0x34ca, 0x456, 0x1, 0x1);
        gbc.writeMem(0x1747, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x637d, gbc.sp());
        EXPECT(0x1749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 00C5
        gbc.setState(0x5216, 0xba00, 0xdbd0, 0x25bb, 0x1bd6, 0x3e75, 0x1, 0x1);
        gbc.writeMem(0x5216, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xba00, gbc.sp());
        EXPECT(0x5218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00C6
        gbc.setState(0x88fb, 0xc5fd, 0x2710, 0x5541, 0x338a, 0x718f, 0x0, 0x1);
        gbc.writeMem(0x88fb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc5fd, gbc.sp());
        EXPECT(0x88fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88fb));
        EXPECT(0xbd, gbc.readMem(0x88fc));
        // CB BD 00C7
        gbc.setState(0x465c, 0x810a, 0x3010, 0xcf82, 0x4e17, 0x804c, 0x0, 0x1);
        gbc.writeMem(0x465c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x810a, gbc.sp());
        EXPECT(0x465e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00C8
        gbc.setState(0x9529, 0x8a7e, 0xb990, 0x4ffc, 0xe987, 0xb7b, 0x1, 0x0);
        gbc.writeMem(0x9529, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8a7e, gbc.sp());
        EXPECT(0x952b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9529));
        EXPECT(0xbd, gbc.readMem(0x952a));
        // CB BD 00C9
        gbc.setState(0xc947, 0x646d, 0x9e0, 0x5a28, 0x2334, 0x4e0b, 0x1, 0x1);
        gbc.writeMem(0xc947, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x646d, gbc.sp());
        EXPECT(0xc949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc947));
        EXPECT(0xbd, gbc.readMem(0xc948));
        // CB BD 00CA
        gbc.setState(0x66c4, 0xf1b6, 0x7350, 0x64d8, 0x1b96, 0xd4f8, 0x1, 0x1);
        gbc.writeMem(0x66c4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf1b6, gbc.sp());
        EXPECT(0x66c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00CB
        gbc.setState(0xc8c0, 0x64f0, 0xf350, 0x4d4c, 0x8b56, 0x2aa3, 0x0, 0x1);
        gbc.writeMem(0xc8c0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x64f0, gbc.sp());
        EXPECT(0xc8c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c0));
        EXPECT(0xbd, gbc.readMem(0xc8c1));
        // CB BD 00CC
        gbc.setState(0xe75c, 0xe0c1, 0x8e40, 0xfcc4, 0xe428, 0x75ec, 0x1, 0x0);
        gbc.writeMem(0xe75c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe0c1, gbc.sp());
        EXPECT(0xe75e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe75c));
        EXPECT(0xbd, gbc.readMem(0xe75d));
        // CB BD 00CD
        gbc.setState(0xda27, 0xd1f9, 0x8910, 0x345e, 0xc14e, 0xc5f1, 0x1, 0x0);
        gbc.writeMem(0xda27, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd1f9, gbc.sp());
        EXPECT(0xda29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda27));
        EXPECT(0xbd, gbc.readMem(0xda28));
        // CB BD 00CE
        gbc.setState(0x13d4, 0xdfde, 0xcbd0, 0x4a2c, 0xcc3e, 0xf633, 0x1, 0x0);
        gbc.writeMem(0x13d4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xdfde, gbc.sp());
        EXPECT(0x13d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00CF
        gbc.setState(0x2044, 0x1014, 0xfc40, 0xd822, 0x9efc, 0x170a, 0x1, 0x1);
        gbc.writeMem(0x2044, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1014, gbc.sp());
        EXPECT(0x2046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 00D0
        gbc.setState(0x271f, 0xfbf8, 0xf9a0, 0xdac8, 0x8c62, 0xd372, 0x0, 0x1);
        gbc.writeMem(0x271f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xfbf8, gbc.sp());
        EXPECT(0x2721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 00D1
        gbc.setState(0x5b00, 0x4ec8, 0x5c90, 0xf75c, 0x4e1b, 0x19a9, 0x1, 0x0);
        gbc.writeMem(0x5b00, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4ec8, gbc.sp());
        EXPECT(0x5b02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00D2
        gbc.setState(0xa18e, 0xfc, 0x5700, 0xa5b8, 0x65a9, 0x5a00, 0x0, 0x1);
        gbc.writeMem(0xa18e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfc, gbc.sp());
        EXPECT(0xa190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa18e));
        EXPECT(0xbd, gbc.readMem(0xa18f));
        // CB BD 00D3
        gbc.setState(0xe084, 0x9291, 0xa7a0, 0xb7f, 0xc078, 0x4b82, 0x0, 0x0);
        gbc.writeMem(0xe084, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9291, gbc.sp());
        EXPECT(0xe086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe084));
        EXPECT(0xbd, gbc.readMem(0xe085));
        // CB BD 00D5
        gbc.setState(0x3a93, 0x9863, 0xb70, 0x2a97, 0x648f, 0x8258, 0x1, 0x1);
        gbc.writeMem(0x3a93, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9863, gbc.sp());
        EXPECT(0x3a95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00D6
        gbc.setState(0xe8f8, 0x45d5, 0x4680, 0xf0df, 0xe368, 0xae7b, 0x1, 0x1);
        gbc.writeMem(0xe8f8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x45d5, gbc.sp());
        EXPECT(0xe8fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8f8));
        EXPECT(0xbd, gbc.readMem(0xe8f9));
        // CB BD 00D7
        gbc.setState(0x158d, 0xe868, 0xefa0, 0xb08a, 0xce49, 0x9f38, 0x1, 0x0);
        gbc.writeMem(0x158d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe868, gbc.sp());
        EXPECT(0x158f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 00D8
        gbc.setState(0xa56c, 0x834d, 0xe970, 0xda47, 0x9f5c, 0x4b74, 0x1, 0x0);
        gbc.writeMem(0xa56c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x834d, gbc.sp());
        EXPECT(0xa56e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa56c));
        EXPECT(0xbd, gbc.readMem(0xa56d));
        // CB BD 00D9
        gbc.setState(0x9ad4, 0x9c55, 0xc3e0, 0x62fa, 0x2cfd, 0x1537, 0x1, 0x0);
        gbc.writeMem(0x9ad4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9c55, gbc.sp());
        EXPECT(0x9ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad4));
        EXPECT(0xbd, gbc.readMem(0x9ad5));
        // CB BD 00DA
        gbc.setState(0x6ef4, 0xa50d, 0x6400, 0x5a4f, 0x95ae, 0x1b05, 0x1, 0x0);
        gbc.writeMem(0x6ef4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa50d, gbc.sp());
        EXPECT(0x6ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 00DB
        gbc.setState(0xcee8, 0xfdcf, 0xde70, 0x94ff, 0x1bea, 0xfd95, 0x0, 0x1);
        gbc.writeMem(0xcee8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfdcf, gbc.sp());
        EXPECT(0xceea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee8));
        EXPECT(0xbd, gbc.readMem(0xcee9));
        // CB BD 00DC
        gbc.setState(0xdfde, 0x833a, 0xf5c0, 0xcfaa, 0xb48, 0x546c, 0x1, 0x1);
        gbc.writeMem(0xdfde, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x833a, gbc.sp());
        EXPECT(0xdfe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfde));
        EXPECT(0xbd, gbc.readMem(0xdfdf));
        // CB BD 00DD
        gbc.setState(0x57e, 0xe69e, 0x2190, 0xdc31, 0x2fb3, 0x6f29, 0x0, 0x0);
        gbc.writeMem(0x57e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe69e, gbc.sp());
        EXPECT(0x580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00DE
        gbc.setState(0xb801, 0xb8b6, 0x2e70, 0x1302, 0xfad6, 0x5958, 0x0, 0x1);
        gbc.writeMem(0xb801, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb8b6, gbc.sp());
        EXPECT(0xb803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb801));
        EXPECT(0xbd, gbc.readMem(0xb802));
        // CB BD 00DF
        gbc.setState(0x9eb5, 0x7931, 0x3770, 0xff0e, 0x9609, 0x8f51, 0x1, 0x0);
        gbc.writeMem(0x9eb5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7931, gbc.sp());
        EXPECT(0x9eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eb5));
        EXPECT(0xbd, gbc.readMem(0x9eb6));
        // CB BD 00E0
        gbc.setState(0x1636, 0xb260, 0xee0, 0x3a6b, 0xfa9e, 0x48b2, 0x1, 0x1);
        gbc.writeMem(0x1636, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb260, gbc.sp());
        EXPECT(0x1638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 00E1
        gbc.setState(0x8386, 0xa09f, 0x7f90, 0x6634, 0xf955, 0xff16, 0x1, 0x1);
        gbc.writeMem(0x8386, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa09f, gbc.sp());
        EXPECT(0x8388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8386));
        EXPECT(0xbd, gbc.readMem(0x8387));
        // CB BD 00E2
        gbc.setState(0x37de, 0x859e, 0xc8a0, 0xf9a7, 0x1f98, 0x26a0, 0x0, 0x1);
        gbc.writeMem(0x37de, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x859e, gbc.sp());
        EXPECT(0x37e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 00E3
        gbc.setState(0x94d, 0xc0, 0x7ea0, 0x2dc6, 0xbc5c, 0xd94c, 0x1, 0x1);
        gbc.writeMem(0x94d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc0, gbc.sp());
        EXPECT(0x94f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 00E4
        gbc.setState(0xea2, 0x9caf, 0xd250, 0x6a9d, 0xf938, 0x129b, 0x1, 0x0);
        gbc.writeMem(0xea2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9caf, gbc.sp());
        EXPECT(0xea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00E5
        gbc.setState(0x8ee7, 0xe278, 0x6ac0, 0xb614, 0x16d1, 0xd68e, 0x1, 0x0);
        gbc.writeMem(0x8ee7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe278, gbc.sp());
        EXPECT(0x8ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee7));
        EXPECT(0xbd, gbc.readMem(0x8ee8));
        // CB BD 00E6
        gbc.setState(0x8dfe, 0x72d7, 0x8460, 0xf6a6, 0xf141, 0x54ce, 0x1, 0x0);
        gbc.writeMem(0x8dfe, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x72d7, gbc.sp());
        EXPECT(0x8e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dfe));
        EXPECT(0xbd, gbc.readMem(0x8dff));
        // CB BD 00E7
        gbc.setState(0xdd01, 0xe03a, 0xe6a0, 0xb976, 0x8cf0, 0xa2cc, 0x0, 0x0);
        gbc.writeMem(0xdd01, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe03a, gbc.sp());
        EXPECT(0xdd03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd01));
        EXPECT(0xbd, gbc.readMem(0xdd02));
        // CB BD 00E8
        gbc.setState(0xb751, 0x7afe, 0xec50, 0x704b, 0xab2c, 0x6696, 0x0, 0x1);
        gbc.writeMem(0xb751, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7afe, gbc.sp());
        EXPECT(0xb753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb751));
        EXPECT(0xbd, gbc.readMem(0xb752));
        // CB BD 00E9
        gbc.setState(0xdbe5, 0x7f40, 0xc860, 0xdd46, 0xa464, 0x274b, 0x1, 0x1);
        gbc.writeMem(0xdbe5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7f40, gbc.sp());
        EXPECT(0xdbe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe5));
        EXPECT(0xbd, gbc.readMem(0xdbe6));
        // CB BD 00EA
        gbc.setState(0x39a7, 0x4344, 0x5bc0, 0xb355, 0x4bed, 0xf960, 0x1, 0x0);
        gbc.writeMem(0x39a7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4344, gbc.sp());
        EXPECT(0x39a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 00EC
        gbc.setState(0x3036, 0xeae9, 0x8f10, 0x8812, 0xc6bb, 0x6624, 0x1, 0x1);
        gbc.writeMem(0x3036, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xeae9, gbc.sp());
        EXPECT(0x3038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00ED
        gbc.setState(0x5b37, 0xa47a, 0x1f0, 0xdf67, 0x3a65, 0x277a, 0x1, 0x1);
        gbc.writeMem(0x5b37, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa47a, gbc.sp());
        EXPECT(0x5b39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00EE
        gbc.setState(0x7cd0, 0x1ff6, 0xb590, 0xe31, 0x39b6, 0x9406, 0x1, 0x1);
        gbc.writeMem(0x7cd0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1ff6, gbc.sp());
        EXPECT(0x7cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00EF
        gbc.setState(0x798f, 0x4194, 0x8a50, 0xd33b, 0xc8cf, 0x12fa, 0x0, 0x0);
        gbc.writeMem(0x798f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4194, gbc.sp());
        EXPECT(0x7991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00F0
        gbc.setState(0x35fe, 0x633e, 0xf730, 0x37b0, 0x4f1a, 0x32a6, 0x1, 0x1);
        gbc.writeMem(0x35fe, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x633e, gbc.sp());
        EXPECT(0x3600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00F1
        gbc.setState(0xefb8, 0x2aa6, 0x3de0, 0xf772, 0xb372, 0x9901, 0x1, 0x0);
        gbc.writeMem(0xefb8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2aa6, gbc.sp());
        EXPECT(0xefba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb8));
        EXPECT(0xbd, gbc.readMem(0xefb9));
        // CB BD 00F2
        gbc.setState(0xb47f, 0xee67, 0x3d90, 0x1271, 0x8beb, 0x5e2, 0x1, 0x1);
        gbc.writeMem(0xb47f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xee67, gbc.sp());
        EXPECT(0xb481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb47f));
        EXPECT(0xbd, gbc.readMem(0xb480));
        // CB BD 00F3
        gbc.setState(0xdbf5, 0x3de9, 0xeac0, 0x527d, 0xc7c, 0xacc9, 0x0, 0x0);
        gbc.writeMem(0xdbf5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3de9, gbc.sp());
        EXPECT(0xdbf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf5));
        EXPECT(0xbd, gbc.readMem(0xdbf6));
        // CB BD 00F4
        gbc.setState(0xb227, 0x996d, 0x73b0, 0x96bc, 0xb957, 0xea5d, 0x0, 0x1);
        gbc.writeMem(0xb227, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x996d, gbc.sp());
        EXPECT(0xb229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb227));
        EXPECT(0xbd, gbc.readMem(0xb228));
        // CB BD 00F5
        gbc.setState(0x68ec, 0x19a8, 0xa060, 0x8f58, 0xa64f, 0x356a, 0x0, 0x0);
        gbc.writeMem(0x68ec, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x19a8, gbc.sp());
        EXPECT(0x68ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 00F6
        gbc.setState(0xdf3c, 0xca96, 0x2e30, 0xc3b, 0xa5a8, 0x36f4, 0x0, 0x1);
        gbc.writeMem(0xdf3c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xca96, gbc.sp());
        EXPECT(0xdf3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf3c));
        EXPECT(0xbd, gbc.readMem(0xdf3d));
        // CB BD 00F9
        gbc.setState(0x5d73, 0xc5bb, 0x1970, 0x39e6, 0x460b, 0xcb, 0x1, 0x1);
        gbc.writeMem(0x5d73, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc5bb, gbc.sp());
        EXPECT(0x5d75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 00FA
        gbc.setState(0xb428, 0xfe56, 0x2340, 0xf5e1, 0xd6b6, 0x8ddf, 0x0, 0x1);
        gbc.writeMem(0xb428, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfe56, gbc.sp());
        EXPECT(0xb42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb428));
        EXPECT(0xbd, gbc.readMem(0xb429));
        // CB BD 00FB
        gbc.setState(0x1962, 0x4c4b, 0x8a40, 0xd74f, 0xaf81, 0xca91, 0x0, 0x0);
        gbc.writeMem(0x1962, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4c4b, gbc.sp());
        EXPECT(0x1964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 00FC
        gbc.setState(0x360c, 0x168d, 0x5280, 0x8934, 0x744a, 0x4333, 0x0, 0x1);
        gbc.writeMem(0x360c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x168d, gbc.sp());
        EXPECT(0x360e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 00FD
        gbc.setState(0x45ce, 0x31f1, 0xcde0, 0x5218, 0x8687, 0x5d08, 0x1, 0x0);
        gbc.writeMem(0x45ce, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x31f1, gbc.sp());
        EXPECT(0x45d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 00FE
        gbc.setState(0xb82d, 0xc0d0, 0x4740, 0x4325, 0x670d, 0xc5c0, 0x0, 0x1);
        gbc.writeMem(0xb82d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc0d0, gbc.sp());
        EXPECT(0xb82f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb82d));
        EXPECT(0xbd, gbc.readMem(0xb82e));
        // CB BD 00FF
        gbc.setState(0xe95b, 0x9672, 0x2670, 0x626c, 0x91c3, 0x198f, 0x0, 0x0);
        gbc.writeMem(0xe95b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9672, gbc.sp());
        EXPECT(0xe95d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe95b));
        EXPECT(0xbd, gbc.readMem(0xe95c));
        // CB BD 0100
        gbc.setState(0x352f, 0x7d68, 0x8020, 0x7c89, 0xd431, 0x95cb, 0x1, 0x0);
        gbc.writeMem(0x352f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7d68, gbc.sp());
        EXPECT(0x3531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0103
        gbc.setState(0xef46, 0xc1ab, 0x9270, 0xa402, 0x4bac, 0x8d16, 0x0, 0x0);
        gbc.writeMem(0xef46, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc1ab, gbc.sp());
        EXPECT(0xef48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef46));
        EXPECT(0xbd, gbc.readMem(0xef47));
        // CB BD 0104
        gbc.setState(0xbbd8, 0x9f97, 0xa90, 0x8d07, 0x267b, 0xa32e, 0x1, 0x0);
        gbc.writeMem(0xbbd8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9f97, gbc.sp());
        EXPECT(0xbbda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd8));
        EXPECT(0xbd, gbc.readMem(0xbbd9));
        // CB BD 0105
        gbc.setState(0xb3aa, 0x9d35, 0x5c0, 0xc2c4, 0xcb46, 0x79df, 0x0, 0x1);
        gbc.writeMem(0xb3aa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9d35, gbc.sp());
        EXPECT(0xb3ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3aa));
        EXPECT(0xbd, gbc.readMem(0xb3ab));
        // CB BD 0106
        gbc.setState(0x31de, 0x8afd, 0x96d0, 0xf6e0, 0xaf2c, 0xf763, 0x1, 0x1);
        gbc.writeMem(0x31de, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8afd, gbc.sp());
        EXPECT(0x31e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0107
        gbc.setState(0x28b2, 0x1661, 0x6280, 0x3069, 0xab74, 0xd199, 0x1, 0x0);
        gbc.writeMem(0x28b2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1661, gbc.sp());
        EXPECT(0x28b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0108
        gbc.setState(0x5d13, 0x8a19, 0xfc40, 0x74a1, 0xe839, 0x8960, 0x1, 0x1);
        gbc.writeMem(0x5d13, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8a19, gbc.sp());
        EXPECT(0x5d15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0109
        gbc.setState(0x9fed, 0xaf7c, 0xa0e0, 0x5e32, 0xdadd, 0xc605, 0x0, 0x0);
        gbc.writeMem(0x9fed, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xaf7c, gbc.sp());
        EXPECT(0x9fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fed));
        EXPECT(0xbd, gbc.readMem(0x9fee));
        // CB BD 010A
        gbc.setState(0x6501, 0xc7c8, 0xdf50, 0x922, 0x378b, 0x81d8, 0x1, 0x1);
        gbc.writeMem(0x6501, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc7c8, gbc.sp());
        EXPECT(0x6503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 010B
        gbc.setState(0x2cb5, 0x87bc, 0xb320, 0x4934, 0x5325, 0x8a6d, 0x0, 0x1);
        gbc.writeMem(0x2cb5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x87bc, gbc.sp());
        EXPECT(0x2cb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 010C
        gbc.setState(0xd933, 0x14b5, 0x5a20, 0x5d05, 0xd587, 0xaca8, 0x1, 0x0);
        gbc.writeMem(0xd933, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x14b5, gbc.sp());
        EXPECT(0xd935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd933));
        EXPECT(0xbd, gbc.readMem(0xd934));
        // CB BD 010D
        gbc.setState(0x87eb, 0xc934, 0xae50, 0x9479, 0xefcf, 0x7102, 0x1, 0x0);
        gbc.writeMem(0x87eb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc934, gbc.sp());
        EXPECT(0x87ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87eb));
        EXPECT(0xbd, gbc.readMem(0x87ec));
        // CB BD 010E
        gbc.setState(0x3e83, 0xcb36, 0xfe50, 0xbe46, 0x97e7, 0x419f, 0x1, 0x1);
        gbc.writeMem(0x3e83, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xcb36, gbc.sp());
        EXPECT(0x3e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 010F
        gbc.setState(0x932f, 0x3f4, 0xa3f0, 0x563a, 0x6a10, 0x99a8, 0x0, 0x1);
        gbc.writeMem(0x932f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3f4, gbc.sp());
        EXPECT(0x9331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x932f));
        EXPECT(0xbd, gbc.readMem(0x9330));
        // CB BD 0110
        gbc.setState(0x5167, 0x18c1, 0xba70, 0x813d, 0xb103, 0xab14, 0x0, 0x1);
        gbc.writeMem(0x5167, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x18c1, gbc.sp());
        EXPECT(0x5169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0111
        gbc.setState(0x1817, 0xcca6, 0xe140, 0x78f6, 0x872c, 0xfdec, 0x0, 0x0);
        gbc.writeMem(0x1817, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcca6, gbc.sp());
        EXPECT(0x1819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0112
        gbc.setState(0x6e5e, 0xce48, 0x1be0, 0x2eed, 0xe797, 0xb98b, 0x0, 0x0);
        gbc.writeMem(0x6e5e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xce48, gbc.sp());
        EXPECT(0x6e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0113
        gbc.setState(0x154a, 0xa66, 0x8160, 0x25a6, 0x77df, 0x3408, 0x0, 0x0);
        gbc.writeMem(0x154a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa66, gbc.sp());
        EXPECT(0x154c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0114
        gbc.setState(0xeb63, 0x294a, 0xa50, 0x57f0, 0xed72, 0xe687, 0x1, 0x1);
        gbc.writeMem(0xeb63, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x294a, gbc.sp());
        EXPECT(0xeb65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb63));
        EXPECT(0xbd, gbc.readMem(0xeb64));
        // CB BD 0115
        gbc.setState(0x3bbb, 0x70bb, 0x9ed0, 0xdc9d, 0xdfea, 0x3b8a, 0x1, 0x1);
        gbc.writeMem(0x3bbb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x70bb, gbc.sp());
        EXPECT(0x3bbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0117
        gbc.setState(0x1ee3, 0xb140, 0xd330, 0x8ae7, 0xdb45, 0x361a, 0x1, 0x1);
        gbc.writeMem(0x1ee3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb140, gbc.sp());
        EXPECT(0x1ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0118
        gbc.setState(0x8ab8, 0x6711, 0x4180, 0xf347, 0x6095, 0x471, 0x1, 0x0);
        gbc.writeMem(0x8ab8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6711, gbc.sp());
        EXPECT(0x8aba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab8));
        EXPECT(0xbd, gbc.readMem(0x8ab9));
        // CB BD 0119
        gbc.setState(0x68ea, 0x7882, 0xd530, 0x1e66, 0xb81, 0x8b55, 0x1, 0x1);
        gbc.writeMem(0x68ea, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7882, gbc.sp());
        EXPECT(0x68ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 011A
        gbc.setState(0x6341, 0xc691, 0xf710, 0x9b8a, 0x8f65, 0x1b13, 0x0, 0x1);
        gbc.writeMem(0x6341, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc691, gbc.sp());
        EXPECT(0x6343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 011B
        gbc.setState(0x32d, 0x9e74, 0x5f20, 0xb761, 0x5e5c, 0x6c56, 0x0, 0x0);
        gbc.writeMem(0x32d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9e74, gbc.sp());
        EXPECT(0x32f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 011C
        gbc.setState(0x8dc4, 0x5a32, 0x18f0, 0xa6b3, 0x31aa, 0xb5f2, 0x1, 0x0);
        gbc.writeMem(0x8dc4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5a32, gbc.sp());
        EXPECT(0x8dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc4));
        EXPECT(0xbd, gbc.readMem(0x8dc5));
        // CB BD 011D
        gbc.setState(0xe121, 0x242e, 0x2bc0, 0x1db0, 0x33b0, 0x3a95, 0x0, 0x1);
        gbc.writeMem(0xe121, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x242e, gbc.sp());
        EXPECT(0xe123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe121));
        EXPECT(0xbd, gbc.readMem(0xe122));
        // CB BD 011E
        gbc.setState(0x764e, 0xfb74, 0xafc0, 0x1f1c, 0xe1bc, 0x8e1d, 0x1, 0x1);
        gbc.writeMem(0x764e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfb74, gbc.sp());
        EXPECT(0x7650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 011F
        gbc.setState(0x1556, 0xcd6e, 0xb4f0, 0xfc66, 0x2e13, 0x278a, 0x1, 0x0);
        gbc.writeMem(0x1556, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcd6e, gbc.sp());
        EXPECT(0x1558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0120
        gbc.setState(0x9226, 0x9c1f, 0xe70, 0x6b3e, 0x1a00, 0x30ad, 0x0, 0x1);
        gbc.writeMem(0x9226, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9c1f, gbc.sp());
        EXPECT(0x9228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9226));
        EXPECT(0xbd, gbc.readMem(0x9227));
        // CB BD 0121
        gbc.setState(0xcea9, 0x5a0a, 0xdba0, 0xdeb0, 0xbe0b, 0xa486, 0x1, 0x1);
        gbc.writeMem(0xcea9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5a0a, gbc.sp());
        EXPECT(0xceab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea9));
        EXPECT(0xbd, gbc.readMem(0xceaa));
        // CB BD 0122
        gbc.setState(0x6b5d, 0xeeb4, 0xe2b0, 0x62c0, 0x9391, 0x4a03, 0x0, 0x0);
        gbc.writeMem(0x6b5d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xeeb4, gbc.sp());
        EXPECT(0x6b5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0123
        gbc.setState(0x5cf5, 0x13de, 0x56a0, 0xc725, 0xc135, 0xc88f, 0x1, 0x0);
        gbc.writeMem(0x5cf5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x13de, gbc.sp());
        EXPECT(0x5cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0124
        gbc.setState(0xa47d, 0x76e6, 0x67f0, 0xf8a, 0x5d34, 0x194f, 0x1, 0x0);
        gbc.writeMem(0xa47d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x76e6, gbc.sp());
        EXPECT(0xa47f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa47d));
        EXPECT(0xbd, gbc.readMem(0xa47e));
        // CB BD 0125
        gbc.setState(0x1bfa, 0xc8db, 0x4030, 0xbccb, 0x1017, 0x298b, 0x1, 0x1);
        gbc.writeMem(0x1bfa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc8db, gbc.sp());
        EXPECT(0x1bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0126
        gbc.setState(0x32a6, 0xeb4e, 0x670, 0x5c43, 0xdbc7, 0x1f54, 0x1, 0x1);
        gbc.writeMem(0x32a6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xeb4e, gbc.sp());
        EXPECT(0x32a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0127
        gbc.setState(0xcafe, 0xf6e6, 0x9550, 0x8ca5, 0x88d, 0xadd1, 0x1, 0x1);
        gbc.writeMem(0xcafe, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf6e6, gbc.sp());
        EXPECT(0xcb00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcafe));
        EXPECT(0xbd, gbc.readMem(0xcaff));
        // CB BD 0128
        gbc.setState(0x42f0, 0x6018, 0xb80, 0x9787, 0x971b, 0x3b18, 0x0, 0x0);
        gbc.writeMem(0x42f0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6018, gbc.sp());
        EXPECT(0x42f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0129
        gbc.setState(0x4b54, 0x6ff9, 0x9d40, 0x8d87, 0xdfdd, 0xe94c, 0x0, 0x1);
        gbc.writeMem(0x4b54, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6ff9, gbc.sp());
        EXPECT(0x4b56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 012A
        gbc.setState(0xab76, 0xe6b5, 0x7620, 0x7599, 0xe790, 0xf62c, 0x0, 0x1);
        gbc.writeMem(0xab76, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe6b5, gbc.sp());
        EXPECT(0xab78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab76));
        EXPECT(0xbd, gbc.readMem(0xab77));
        // CB BD 012B
        gbc.setState(0xe856, 0x6081, 0xe7a0, 0xdc21, 0xdf3a, 0xb872, 0x0, 0x1);
        gbc.writeMem(0xe856, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6081, gbc.sp());
        EXPECT(0xe858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe856));
        EXPECT(0xbd, gbc.readMem(0xe857));
        // CB BD 012C
        gbc.setState(0x9bda, 0xbb4b, 0xf360, 0x5bea, 0x3910, 0xaca3, 0x1, 0x1);
        gbc.writeMem(0x9bda, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbb4b, gbc.sp());
        EXPECT(0x9bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bda));
        EXPECT(0xbd, gbc.readMem(0x9bdb));
        // CB BD 012D
        gbc.setState(0x757a, 0xf32b, 0x3ea0, 0x67b3, 0x5fff, 0xc97b, 0x0, 0x0);
        gbc.writeMem(0x757a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf32b, gbc.sp());
        EXPECT(0x757c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 012E
        gbc.setState(0x52ec, 0x92bb, 0x41c0, 0x95ba, 0x9f54, 0x4051, 0x1, 0x0);
        gbc.writeMem(0x52ec, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x92bb, gbc.sp());
        EXPECT(0x52ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 012F
        gbc.setState(0xa15d, 0x7d2b, 0x57a0, 0xf558, 0x4d22, 0x1878, 0x1, 0x0);
        gbc.writeMem(0xa15d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7d2b, gbc.sp());
        EXPECT(0xa15f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa15d));
        EXPECT(0xbd, gbc.readMem(0xa15e));
        // CB BD 0130
        gbc.setState(0x57c2, 0xb48e, 0xae00, 0xd108, 0x5e73, 0x5cf, 0x1, 0x0);
        gbc.writeMem(0x57c2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb48e, gbc.sp());
        EXPECT(0x57c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0131
        gbc.setState(0x972f, 0xe8b, 0x7280, 0x4a3, 0x3aac, 0x860c, 0x1, 0x1);
        gbc.writeMem(0x972f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe8b, gbc.sp());
        EXPECT(0x9731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x972f));
        EXPECT(0xbd, gbc.readMem(0x9730));
        // CB BD 0132
        gbc.setState(0xb6cc, 0x12d4, 0xe4e0, 0x7f33, 0x8fb4, 0x15bc, 0x1, 0x0);
        gbc.writeMem(0xb6cc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x12d4, gbc.sp());
        EXPECT(0xb6ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6cc));
        EXPECT(0xbd, gbc.readMem(0xb6cd));
        // CB BD 0133
        gbc.setState(0xc4bf, 0x82c5, 0xb0f0, 0xa9ba, 0x4e38, 0xd62a, 0x1, 0x1);
        gbc.writeMem(0xc4bf, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x82c5, gbc.sp());
        EXPECT(0xc4c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4bf));
        EXPECT(0xbd, gbc.readMem(0xc4c0));
        // CB BD 0134
        gbc.setState(0x42ab, 0x6610, 0x3a80, 0x3ef2, 0x8b95, 0x9411, 0x0, 0x1);
        gbc.writeMem(0x42ab, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6610, gbc.sp());
        EXPECT(0x42ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0135
        gbc.setState(0x5517, 0xbe05, 0xc240, 0x7fcb, 0x3f51, 0x7479, 0x1, 0x0);
        gbc.writeMem(0x5517, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbe05, gbc.sp());
        EXPECT(0x5519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0136
        gbc.setState(0x594f, 0x9efd, 0x1720, 0x86e1, 0x2df6, 0x351a, 0x1, 0x1);
        gbc.writeMem(0x594f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9efd, gbc.sp());
        EXPECT(0x5951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0137
        gbc.setState(0x769, 0xaf5c, 0x5c90, 0xa96f, 0xb8a0, 0xb397, 0x0, 0x1);
        gbc.writeMem(0x769, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xaf5c, gbc.sp());
        EXPECT(0x76b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0138
        gbc.setState(0xdc7, 0x2c30, 0x73f0, 0x44fd, 0xdbf6, 0xa2b1, 0x0, 0x0);
        gbc.writeMem(0xdc7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2c30, gbc.sp());
        EXPECT(0xdc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0139
        gbc.setState(0xe156, 0x66e2, 0x8310, 0x596, 0xc7ca, 0x2179, 0x1, 0x1);
        gbc.writeMem(0xe156, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x66e2, gbc.sp());
        EXPECT(0xe158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe156));
        EXPECT(0xbd, gbc.readMem(0xe157));
        // CB BD 013A
        gbc.setState(0x74e5, 0x5aa9, 0xbca0, 0x9076, 0xe06e, 0x8b74, 0x0, 0x0);
        gbc.writeMem(0x74e5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5aa9, gbc.sp());
        EXPECT(0x74e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 013B
        gbc.setState(0x77e2, 0x1ad7, 0xf5f0, 0x310c, 0xadcc, 0x5a1, 0x0, 0x0);
        gbc.writeMem(0x77e2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1ad7, gbc.sp());
        EXPECT(0x77e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 013C
        gbc.setState(0xc77, 0x9a1c, 0x1bf0, 0xfef0, 0xe1d8, 0x1f7a, 0x1, 0x0);
        gbc.writeMem(0xc77, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9a1c, gbc.sp());
        EXPECT(0xc79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 013D
        gbc.setState(0x82b4, 0xf09f, 0xd130, 0x4104, 0xf732, 0xe9c3, 0x0, 0x0);
        gbc.writeMem(0x82b4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf09f, gbc.sp());
        EXPECT(0x82b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82b4));
        EXPECT(0xbd, gbc.readMem(0x82b5));
        // CB BD 013E
        gbc.setState(0x9f39, 0x733d, 0xf150, 0x7fb8, 0x4d47, 0x837, 0x0, 0x1);
        gbc.writeMem(0x9f39, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x733d, gbc.sp());
        EXPECT(0x9f3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f39));
        EXPECT(0xbd, gbc.readMem(0x9f3a));
        // CB BD 0140
        gbc.setState(0x293e, 0x1c37, 0xbf20, 0x1a84, 0x7093, 0xe107, 0x1, 0x0);
        gbc.writeMem(0x293e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1c37, gbc.sp());
        EXPECT(0x2940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0141
        gbc.setState(0x35cc, 0x4624, 0xd3c0, 0x106b, 0xaaf8, 0x41e1, 0x1, 0x1);
        gbc.writeMem(0x35cc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4624, gbc.sp());
        EXPECT(0x35ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0142
        gbc.setState(0x266d, 0x1e64, 0xc1e0, 0x2d6a, 0xedfd, 0x5722, 0x0, 0x0);
        gbc.writeMem(0x266d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1e64, gbc.sp());
        EXPECT(0x266f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0143
        gbc.setState(0x86fb, 0x5769, 0x4c60, 0x2a52, 0x8d28, 0x2ba1, 0x0, 0x1);
        gbc.writeMem(0x86fb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5769, gbc.sp());
        EXPECT(0x86fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fb));
        EXPECT(0xbd, gbc.readMem(0x86fc));
        // CB BD 0144
        gbc.setState(0x600a, 0x95f5, 0x280, 0x62cc, 0xb0df, 0x9c46, 0x1, 0x0);
        gbc.writeMem(0x600a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x95f5, gbc.sp());
        EXPECT(0x600c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0145
        gbc.setState(0x490a, 0x97a0, 0x90e0, 0x1071, 0x7610, 0x165a, 0x1, 0x1);
        gbc.writeMem(0x490a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x97a0, gbc.sp());
        EXPECT(0x490c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0147
        gbc.setState(0xa952, 0xed5f, 0x20a0, 0xd43e, 0x187e, 0x4e82, 0x1, 0x1);
        gbc.writeMem(0xa952, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xed5f, gbc.sp());
        EXPECT(0xa954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa952));
        EXPECT(0xbd, gbc.readMem(0xa953));
        // CB BD 0148
        gbc.setState(0x2a8c, 0x401a, 0x39c0, 0x2c08, 0x969, 0x33b6, 0x0, 0x1);
        gbc.writeMem(0x2a8c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x401a, gbc.sp());
        EXPECT(0x2a8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0149
        gbc.setState(0x3b39, 0x2637, 0x6780, 0xe4a0, 0x2479, 0xdce1, 0x0, 0x0);
        gbc.writeMem(0x3b39, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2637, gbc.sp());
        EXPECT(0x3b3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 014A
        gbc.setState(0x5edb, 0x656, 0xaff0, 0x3d20, 0x9a6f, 0x83a4, 0x0, 0x1);
        gbc.writeMem(0x5edb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x656, gbc.sp());
        EXPECT(0x5edd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 014B
        gbc.setState(0x81a, 0x4a24, 0xa3a0, 0xd0cc, 0xc4b, 0x2e03, 0x0, 0x0);
        gbc.writeMem(0x81a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4a24, gbc.sp());
        EXPECT(0x81c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 014C
        gbc.setState(0x69d, 0xd476, 0x2c60, 0xce6, 0xdd6b, 0x4bbd, 0x0, 0x0);
        gbc.writeMem(0x69d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd476, gbc.sp());
        EXPECT(0x69f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 014E
        gbc.setState(0x9677, 0x5853, 0x8190, 0x7a75, 0x5df2, 0x9f4, 0x1, 0x1);
        gbc.writeMem(0x9677, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5853, gbc.sp());
        EXPECT(0x9679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9677));
        EXPECT(0xbd, gbc.readMem(0x9678));
        // CB BD 014F
        gbc.setState(0x8db3, 0xd27a, 0x3980, 0x6dd8, 0x8302, 0x2624, 0x0, 0x0);
        gbc.writeMem(0x8db3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd27a, gbc.sp());
        EXPECT(0x8db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db3));
        EXPECT(0xbd, gbc.readMem(0x8db4));
        // CB BD 0150
        gbc.setState(0xa792, 0x689b, 0xa590, 0x1b76, 0x534f, 0x7ce7, 0x1, 0x1);
        gbc.writeMem(0xa792, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x689b, gbc.sp());
        EXPECT(0xa794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa792));
        EXPECT(0xbd, gbc.readMem(0xa793));
        // CB BD 0152
        gbc.setState(0x6016, 0x67f5, 0xb180, 0xde82, 0x43c1, 0x15cb, 0x0, 0x1);
        gbc.writeMem(0x6016, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x67f5, gbc.sp());
        EXPECT(0x6018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0153
        gbc.setState(0x41f7, 0xa2a, 0x6680, 0x1335, 0x3d, 0x14c0, 0x0, 0x0);
        gbc.writeMem(0x41f7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa2a, gbc.sp());
        EXPECT(0x41f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0154
        gbc.setState(0x4895, 0x1b25, 0x9f70, 0xc58d, 0x8d81, 0xeb70, 0x0, 0x0);
        gbc.writeMem(0x4895, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1b25, gbc.sp());
        EXPECT(0x4897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0155
        gbc.setState(0x7bbb, 0xb31a, 0xd140, 0x6364, 0xb061, 0x501e, 0x0, 0x1);
        gbc.writeMem(0x7bbb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb31a, gbc.sp());
        EXPECT(0x7bbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0156
        gbc.setState(0xcc81, 0x7260, 0x6150, 0x408e, 0x21cf, 0xa73e, 0x0, 0x0);
        gbc.writeMem(0xcc81, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7260, gbc.sp());
        EXPECT(0xcc83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc81));
        EXPECT(0xbd, gbc.readMem(0xcc82));
        // CB BD 0157
        gbc.setState(0x5bc7, 0x7dc9, 0xc4e0, 0x2591, 0x2077, 0xbe12, 0x1, 0x1);
        gbc.writeMem(0x5bc7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7dc9, gbc.sp());
        EXPECT(0x5bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0158
        gbc.setState(0xdba3, 0xe02b, 0x1310, 0xb75f, 0x3327, 0x2bcd, 0x1, 0x0);
        gbc.writeMem(0xdba3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe02b, gbc.sp());
        EXPECT(0xdba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdba3));
        EXPECT(0xbd, gbc.readMem(0xdba4));
        // CB BD 0159
        gbc.setState(0xd0f2, 0xd65d, 0x3790, 0x6fe3, 0xcbc4, 0x1045, 0x0, 0x1);
        gbc.writeMem(0xd0f2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd65d, gbc.sp());
        EXPECT(0xd0f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0f2));
        EXPECT(0xbd, gbc.readMem(0xd0f3));
        // CB BD 015A
        gbc.setState(0xbce2, 0x7961, 0xb0f0, 0x37bb, 0x3298, 0x598f, 0x0, 0x0);
        gbc.writeMem(0xbce2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7961, gbc.sp());
        EXPECT(0xbce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbce2));
        EXPECT(0xbd, gbc.readMem(0xbce3));
        // CB BD 015B
        gbc.setState(0x4e0f, 0xba02, 0x6520, 0x20c1, 0xb514, 0x34fe, 0x0, 0x1);
        gbc.writeMem(0x4e0f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xba02, gbc.sp());
        EXPECT(0x4e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 015D
        gbc.setState(0x4f5b, 0x75a3, 0xe80, 0xac36, 0x5992, 0xb3cf, 0x0, 0x0);
        gbc.writeMem(0x4f5b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x75a3, gbc.sp());
        EXPECT(0x4f5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 015E
        gbc.setState(0x1d5a, 0x2c70, 0x8150, 0x3319, 0xfc11, 0xc837, 0x0, 0x1);
        gbc.writeMem(0x1d5a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2c70, gbc.sp());
        EXPECT(0x1d5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0160
        gbc.setState(0xb98c, 0x2480, 0x2e70, 0xd9d7, 0x6647, 0x49de, 0x1, 0x1);
        gbc.writeMem(0xb98c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2480, gbc.sp());
        EXPECT(0xb98e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb98c));
        EXPECT(0xbd, gbc.readMem(0xb98d));
        // CB BD 0162
        gbc.setState(0x266d, 0x831e, 0xefc0, 0xe0f5, 0x2b3a, 0x9234, 0x1, 0x1);
        gbc.writeMem(0x266d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x831e, gbc.sp());
        EXPECT(0x266f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0163
        gbc.setState(0x6e8c, 0x3c77, 0xec00, 0xa6f2, 0x4ffb, 0xf8b7, 0x0, 0x0);
        gbc.writeMem(0x6e8c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3c77, gbc.sp());
        EXPECT(0x6e8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0164
        gbc.setState(0xe1c4, 0xd458, 0x6230, 0x1c9c, 0x2223, 0xe12b, 0x1, 0x1);
        gbc.writeMem(0xe1c4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd458, gbc.sp());
        EXPECT(0xe1c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c4));
        EXPECT(0xbd, gbc.readMem(0xe1c5));
        // CB BD 0165
        gbc.setState(0x19fe, 0x4a7f, 0x4230, 0x57c, 0x6c2, 0x2dee, 0x1, 0x0);
        gbc.writeMem(0x19fe, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4a7f, gbc.sp());
        EXPECT(0x1a00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0166
        gbc.setState(0xc665, 0x7459, 0xbe90, 0xb58c, 0xd89b, 0x8865, 0x0, 0x0);
        gbc.writeMem(0xc665, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7459, gbc.sp());
        EXPECT(0xc667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc665));
        EXPECT(0xbd, gbc.readMem(0xc666));
        // CB BD 0167
        gbc.setState(0x59fd, 0x193b, 0x5380, 0xdc5d, 0xe952, 0x5168, 0x1, 0x0);
        gbc.writeMem(0x59fd, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x193b, gbc.sp());
        EXPECT(0x59ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0168
        gbc.setState(0x287c, 0xcb4, 0x5f60, 0x1e23, 0xc367, 0x5661, 0x1, 0x0);
        gbc.writeMem(0x287c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xcb4, gbc.sp());
        EXPECT(0x287e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0169
        gbc.setState(0x12b9, 0x1019, 0xedc0, 0x3959, 0x528, 0xf3b3, 0x0, 0x0);
        gbc.writeMem(0x12b9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1019, gbc.sp());
        EXPECT(0x12bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 016A
        gbc.setState(0xea28, 0xd7e8, 0xbf40, 0x8242, 0xafe8, 0xc5fc, 0x0, 0x1);
        gbc.writeMem(0xea28, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd7e8, gbc.sp());
        EXPECT(0xea2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea28));
        EXPECT(0xbd, gbc.readMem(0xea29));
        // CB BD 016B
        gbc.setState(0x555d, 0x662c, 0xd4d0, 0x1c5c, 0x7332, 0xf1f, 0x1, 0x1);
        gbc.writeMem(0x555d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x662c, gbc.sp());
        EXPECT(0x555f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 016C
        gbc.setState(0xa4d8, 0xbe0a, 0xd320, 0xcb4a, 0xa779, 0x6131, 0x0, 0x1);
        gbc.writeMem(0xa4d8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbe0a, gbc.sp());
        EXPECT(0xa4da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4d8));
        EXPECT(0xbd, gbc.readMem(0xa4d9));
        // CB BD 016D
        gbc.setState(0x5ffa, 0x6b7, 0x45c0, 0xe53, 0x5868, 0x2bf8, 0x1, 0x1);
        gbc.writeMem(0x5ffa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6b7, gbc.sp());
        EXPECT(0x5ffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 016E
        gbc.setState(0x10f0, 0xf282, 0xee40, 0xde08, 0x75, 0x1cec, 0x1, 0x1);
        gbc.writeMem(0x10f0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf282, gbc.sp());
        EXPECT(0x10f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 016F
        gbc.setState(0x5925, 0x5733, 0xcca0, 0xeca3, 0x7ce, 0x5918, 0x0, 0x0);
        gbc.writeMem(0x5925, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5733, gbc.sp());
        EXPECT(0x5927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0170
        gbc.setState(0xde9f, 0xd013, 0x1620, 0x204c, 0x5eb1, 0x4e02, 0x1, 0x1);
        gbc.writeMem(0xde9f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd013, gbc.sp());
        EXPECT(0xdea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde9f));
        EXPECT(0xbd, gbc.readMem(0xdea0));
        // CB BD 0171
        gbc.setState(0x635e, 0xf644, 0x2200, 0xff2b, 0x199d, 0xd91b, 0x0, 0x0);
        gbc.writeMem(0x635e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf644, gbc.sp());
        EXPECT(0x6360, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0173
        gbc.setState(0xb1d0, 0x95cb, 0x1420, 0x1420, 0x1123, 0x756a, 0x0, 0x0);
        gbc.writeMem(0xb1d0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x95cb, gbc.sp());
        EXPECT(0xb1d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1d0));
        EXPECT(0xbd, gbc.readMem(0xb1d1));
        // CB BD 0176
        gbc.setState(0x6412, 0xfc5, 0xfcf0, 0x5bc, 0x716f, 0x4e02, 0x1, 0x0);
        gbc.writeMem(0x6412, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xfc5, gbc.sp());
        EXPECT(0x6414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0178
        gbc.setState(0x5436, 0x4b22, 0x5630, 0x7f10, 0xe7e2, 0x3cd6, 0x1, 0x0);
        gbc.writeMem(0x5436, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4b22, gbc.sp());
        EXPECT(0x5438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0179
        gbc.setState(0xcc8c, 0xb771, 0x69d0, 0x9e4b, 0xa9e2, 0x2465, 0x1, 0x1);
        gbc.writeMem(0xcc8c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb771, gbc.sp());
        EXPECT(0xcc8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc8c));
        EXPECT(0xbd, gbc.readMem(0xcc8d));
        // CB BD 017A
        gbc.setState(0x9462, 0xd42a, 0x8b00, 0x6da7, 0xc9d8, 0xdf33, 0x1, 0x1);
        gbc.writeMem(0x9462, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd42a, gbc.sp());
        EXPECT(0x9464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9462));
        EXPECT(0xbd, gbc.readMem(0x9463));
        // CB BD 017B
        gbc.setState(0x3e1f, 0xb7f, 0x9b40, 0x8e1e, 0x664e, 0x4bb2, 0x1, 0x1);
        gbc.writeMem(0x3e1f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb7f, gbc.sp());
        EXPECT(0x3e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 017C
        gbc.setState(0x4682, 0x9d2f, 0x1580, 0x4ab2, 0xabac, 0x272b, 0x0, 0x0);
        gbc.writeMem(0x4682, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9d2f, gbc.sp());
        EXPECT(0x4684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 017D
        gbc.setState(0xcfc6, 0x71e6, 0xa860, 0x6df1, 0x583a, 0xea8, 0x1, 0x0);
        gbc.writeMem(0xcfc6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x71e6, gbc.sp());
        EXPECT(0xcfc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfc6));
        EXPECT(0xbd, gbc.readMem(0xcfc7));
        // CB BD 017E
        gbc.setState(0xb428, 0xb197, 0x7ee0, 0x88c2, 0x3fc0, 0x46b3, 0x1, 0x1);
        gbc.writeMem(0xb428, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb197, gbc.sp());
        EXPECT(0xb42a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb428));
        EXPECT(0xbd, gbc.readMem(0xb429));
        // CB BD 017F
        gbc.setState(0x1f17, 0x5267, 0x5bf0, 0xc8ef, 0xcd2, 0xa59f, 0x0, 0x1);
        gbc.writeMem(0x1f17, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5267, gbc.sp());
        EXPECT(0x1f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0180
        gbc.setState(0x3c84, 0xdc80, 0x8870, 0x7b20, 0x3c1f, 0x645f, 0x1, 0x0);
        gbc.writeMem(0x3c84, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xdc80, gbc.sp());
        EXPECT(0x3c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0181
        gbc.setState(0x9555, 0x58b9, 0xe890, 0xb2f3, 0x648f, 0xbc2e, 0x0, 0x1);
        gbc.writeMem(0x9555, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x58b9, gbc.sp());
        EXPECT(0x9557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9555));
        EXPECT(0xbd, gbc.readMem(0x9556));
        // CB BD 0182
        gbc.setState(0xd6bb, 0x6928, 0xc3c0, 0x2c53, 0xce65, 0x7ad8, 0x1, 0x1);
        gbc.writeMem(0xd6bb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6928, gbc.sp());
        EXPECT(0xd6bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6bb));
        EXPECT(0xbd, gbc.readMem(0xd6bc));
        // CB BD 0183
        gbc.setState(0xcac2, 0x36d3, 0x3b0, 0x12da, 0x9cfa, 0xddf6, 0x1, 0x1);
        gbc.writeMem(0xcac2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x36d3, gbc.sp());
        EXPECT(0xcac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac2));
        EXPECT(0xbd, gbc.readMem(0xcac3));
        // CB BD 0184
        gbc.setState(0x4847, 0x8919, 0x3980, 0x992d, 0x4f7b, 0x8ba3, 0x1, 0x1);
        gbc.writeMem(0x4847, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8919, gbc.sp());
        EXPECT(0x4849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0185
        gbc.setState(0x4a1f, 0x1c57, 0x6080, 0xe5c9, 0x1686, 0xfe84, 0x1, 0x0);
        gbc.writeMem(0x4a1f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1c57, gbc.sp());
        EXPECT(0x4a21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0186
        gbc.setState(0x1279, 0xe68c, 0x2e60, 0x3e85, 0x9f7e, 0x19bd, 0x1, 0x0);
        gbc.writeMem(0x1279, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe68c, gbc.sp());
        EXPECT(0x127b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0187
        gbc.setState(0x5e8c, 0x6ce2, 0x27d0, 0x296, 0x8d25, 0xa113, 0x0, 0x1);
        gbc.writeMem(0x5e8c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6ce2, gbc.sp());
        EXPECT(0x5e8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0188
        gbc.setState(0x80fb, 0x1e1c, 0xe2b0, 0xc66, 0xabf5, 0x68eb, 0x0, 0x1);
        gbc.writeMem(0x80fb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1e1c, gbc.sp());
        EXPECT(0x80fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80fb));
        EXPECT(0xbd, gbc.readMem(0x80fc));
        // CB BD 0189
        gbc.setState(0x4354, 0x528c, 0x6690, 0x76d8, 0xb728, 0x5aba, 0x1, 0x0);
        gbc.writeMem(0x4354, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x528c, gbc.sp());
        EXPECT(0x4356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 018A
        gbc.setState(0xb47a, 0x174f, 0x43c0, 0x19c1, 0x6cad, 0xbabc, 0x0, 0x1);
        gbc.writeMem(0xb47a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x174f, gbc.sp());
        EXPECT(0xb47c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb47a));
        EXPECT(0xbd, gbc.readMem(0xb47b));
        // CB BD 018B
        gbc.setState(0x29cb, 0x7236, 0x25b0, 0x87c1, 0x6ca8, 0xaaed, 0x0, 0x0);
        gbc.writeMem(0x29cb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7236, gbc.sp());
        EXPECT(0x29cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 018C
        gbc.setState(0x5529, 0x4db9, 0x46e0, 0xdf40, 0x8931, 0xe52a, 0x0, 0x1);
        gbc.writeMem(0x5529, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4db9, gbc.sp());
        EXPECT(0x552b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 018D
        gbc.setState(0xcd09, 0x5c18, 0x8830, 0x318e, 0x8c1, 0xd774, 0x0, 0x1);
        gbc.writeMem(0xcd09, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5c18, gbc.sp());
        EXPECT(0xcd0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd09));
        EXPECT(0xbd, gbc.readMem(0xcd0a));
        // CB BD 018E
        gbc.setState(0xceda, 0xfbed, 0x18d0, 0xa0d8, 0x7c86, 0xa8f9, 0x0, 0x1);
        gbc.writeMem(0xceda, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfbed, gbc.sp());
        EXPECT(0xcedc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceda));
        EXPECT(0xbd, gbc.readMem(0xcedb));
        // CB BD 018F
        gbc.setState(0xbc2a, 0x41db, 0x5f70, 0xb772, 0x3315, 0x605e, 0x0, 0x1);
        gbc.writeMem(0xbc2a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x41db, gbc.sp());
        EXPECT(0xbc2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2a));
        EXPECT(0xbd, gbc.readMem(0xbc2b));
        // CB BD 0190
        gbc.setState(0x9374, 0x934, 0x1a90, 0xa055, 0x633a, 0xc3ce, 0x1, 0x1);
        gbc.writeMem(0x9374, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x934, gbc.sp());
        EXPECT(0x9376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9374));
        EXPECT(0xbd, gbc.readMem(0x9375));
        // CB BD 0191
        gbc.setState(0x404d, 0xf135, 0x6e0, 0xfb22, 0x373d, 0x8dfb, 0x0, 0x1);
        gbc.writeMem(0x404d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf135, gbc.sp());
        EXPECT(0x404f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0192
        gbc.setState(0xe0ea, 0xd68a, 0x24d0, 0xe470, 0x9feb, 0x8c30, 0x0, 0x1);
        gbc.writeMem(0xe0ea, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd68a, gbc.sp());
        EXPECT(0xe0ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ea));
        EXPECT(0xbd, gbc.readMem(0xe0eb));
        // CB BD 0193
        gbc.setState(0xe7db, 0x75f9, 0x25a0, 0x37fd, 0x55dc, 0xea1b, 0x1, 0x0);
        gbc.writeMem(0xe7db, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x75f9, gbc.sp());
        EXPECT(0xe7dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7db));
        EXPECT(0xbd, gbc.readMem(0xe7dc));
        // CB BD 0194
        gbc.setState(0xae2d, 0xa3dc, 0x4eb0, 0x9762, 0x869c, 0x5fa4, 0x0, 0x0);
        gbc.writeMem(0xae2d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa3dc, gbc.sp());
        EXPECT(0xae2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae2d));
        EXPECT(0xbd, gbc.readMem(0xae2e));
        // CB BD 0195
        gbc.setState(0x9b1, 0x33a3, 0x6d00, 0x7d2, 0x39e2, 0x480b, 0x1, 0x0);
        gbc.writeMem(0x9b1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x33a3, gbc.sp());
        EXPECT(0x9b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0196
        gbc.setState(0x6d3d, 0x859f, 0xc540, 0x5035, 0x3954, 0xc3dd, 0x0, 0x1);
        gbc.writeMem(0x6d3d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x859f, gbc.sp());
        EXPECT(0x6d3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0197
        gbc.setState(0x2f6b, 0x6f1b, 0x20e0, 0x5834, 0xb334, 0x4a35, 0x1, 0x0);
        gbc.writeMem(0x2f6b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6f1b, gbc.sp());
        EXPECT(0x2f6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0198
        gbc.setState(0x9804, 0x2be4, 0x7ea0, 0x296d, 0x8cfd, 0xbf54, 0x0, 0x1);
        gbc.writeMem(0x9804, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2be4, gbc.sp());
        EXPECT(0x9806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9804));
        EXPECT(0xbd, gbc.readMem(0x9805));
        // CB BD 0199
        gbc.setState(0x2603, 0xd130, 0xbcb0, 0xa9bb, 0x9007, 0xf6a8, 0x0, 0x1);
        gbc.writeMem(0x2603, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd130, gbc.sp());
        EXPECT(0x2605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 019A
        gbc.setState(0x142b, 0xb7b8, 0x100, 0x8133, 0xc37, 0x755e, 0x0, 0x0);
        gbc.writeMem(0x142b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb7b8, gbc.sp());
        EXPECT(0x142d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 019B
        gbc.setState(0x936b, 0x9ddc, 0x93e0, 0x72e, 0xfef9, 0xc5a6, 0x1, 0x0);
        gbc.writeMem(0x936b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9ddc, gbc.sp());
        EXPECT(0x936d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x936b));
        EXPECT(0xbd, gbc.readMem(0x936c));
        // CB BD 019C
        gbc.setState(0x1c4c, 0x54b4, 0x1820, 0xd02, 0xdfc5, 0x2263, 0x0, 0x1);
        gbc.writeMem(0x1c4c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x54b4, gbc.sp());
        EXPECT(0x1c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 019D
        gbc.setState(0x2bd7, 0x48e7, 0x7560, 0xb365, 0x549a, 0xc1b8, 0x1, 0x1);
        gbc.writeMem(0x2bd7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x48e7, gbc.sp());
        EXPECT(0x2bd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 019E
        gbc.setState(0x764f, 0x22ea, 0x8e00, 0xfdc8, 0x6576, 0x4508, 0x0, 0x0);
        gbc.writeMem(0x764f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x22ea, gbc.sp());
        EXPECT(0x7651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 019F
        gbc.setState(0x9439, 0x81a2, 0x77c0, 0x3f1a, 0xdcec, 0x614c, 0x1, 0x1);
        gbc.writeMem(0x9439, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x81a2, gbc.sp());
        EXPECT(0x943b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9439));
        EXPECT(0xbd, gbc.readMem(0x943a));
        // CB BD 01A0
        gbc.setState(0x75f3, 0x5cc7, 0x8550, 0x5070, 0xf393, 0x86b9, 0x0, 0x1);
        gbc.writeMem(0x75f3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5cc7, gbc.sp());
        EXPECT(0x75f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01A1
        gbc.setState(0x6bec, 0xee5e, 0xfeb0, 0x156c, 0x9a64, 0xe9a7, 0x1, 0x0);
        gbc.writeMem(0x6bec, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xee5e, gbc.sp());
        EXPECT(0x6bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01A2
        gbc.setState(0xb652, 0x35eb, 0x20c0, 0xf592, 0x24a3, 0x8658, 0x0, 0x0);
        gbc.writeMem(0xb652, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x35eb, gbc.sp());
        EXPECT(0xb654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb652));
        EXPECT(0xbd, gbc.readMem(0xb653));
        // CB BD 01A4
        gbc.setState(0xd3af, 0x16b3, 0x2250, 0xb44d, 0x67e2, 0xe59e, 0x1, 0x1);
        gbc.writeMem(0xd3af, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x16b3, gbc.sp());
        EXPECT(0xd3b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3af));
        EXPECT(0xbd, gbc.readMem(0xd3b0));
        // CB BD 01A5
        gbc.setState(0x4fdf, 0x6550, 0x330, 0x7bed, 0x5a88, 0x1a7, 0x0, 0x1);
        gbc.writeMem(0x4fdf, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6550, gbc.sp());
        EXPECT(0x4fe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01A6
        gbc.setState(0x4865, 0xd6, 0x36b0, 0xeb58, 0xef5e, 0x23d2, 0x0, 0x1);
        gbc.writeMem(0x4865, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd6, gbc.sp());
        EXPECT(0x4867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01A7
        gbc.setState(0x2988, 0x9eaf, 0xec30, 0x8189, 0xd0bf, 0x8418, 0x1, 0x1);
        gbc.writeMem(0x2988, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9eaf, gbc.sp());
        EXPECT(0x298a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01A8
        gbc.setState(0x36f3, 0x706c, 0xaad0, 0x909, 0x7f38, 0x3d90, 0x1, 0x1);
        gbc.writeMem(0x36f3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x706c, gbc.sp());
        EXPECT(0x36f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01A9
        gbc.setState(0x431b, 0xdc6e, 0x25c0, 0x2ac5, 0xe3a6, 0xdeea, 0x1, 0x1);
        gbc.writeMem(0x431b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xdc6e, gbc.sp());
        EXPECT(0x431d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 01AA
        gbc.setState(0x8842, 0xa44a, 0x1f50, 0xc0f4, 0x3049, 0x864a, 0x0, 0x1);
        gbc.writeMem(0x8842, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa44a, gbc.sp());
        EXPECT(0x8844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8842));
        EXPECT(0xbd, gbc.readMem(0x8843));
        // CB BD 01AB
        gbc.setState(0x88f6, 0x14d0, 0xabe0, 0xa6d5, 0x6b94, 0x7281, 0x0, 0x1);
        gbc.writeMem(0x88f6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x14d0, gbc.sp());
        EXPECT(0x88f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88f6));
        EXPECT(0xbd, gbc.readMem(0x88f7));
        // CB BD 01AC
        gbc.setState(0x30bd, 0x7ce3, 0x7440, 0x78, 0xf013, 0xdf7a, 0x1, 0x1);
        gbc.writeMem(0x30bd, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7ce3, gbc.sp());
        EXPECT(0x30bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 01AD
        gbc.setState(0xc7fb, 0xaa65, 0x6650, 0x7a12, 0x3677, 0xa10, 0x1, 0x0);
        gbc.writeMem(0xc7fb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xaa65, gbc.sp());
        EXPECT(0xc7fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7fb));
        EXPECT(0xbd, gbc.readMem(0xc7fc));
        // CB BD 01AE
        gbc.setState(0x4e5d, 0x2487, 0x32c0, 0xb08f, 0xead2, 0x52eb, 0x0, 0x0);
        gbc.writeMem(0x4e5d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2487, gbc.sp());
        EXPECT(0x4e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 01AF
        gbc.setState(0xbf9a, 0xbf75, 0x67d0, 0x7f5c, 0xc932, 0xef1a, 0x0, 0x0);
        gbc.writeMem(0xbf9a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbf75, gbc.sp());
        EXPECT(0xbf9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf9a));
        EXPECT(0xbd, gbc.readMem(0xbf9b));
        // CB BD 01B0
        gbc.setState(0xeb59, 0xce32, 0x7af0, 0x80d6, 0xbaf3, 0x556e, 0x0, 0x1);
        gbc.writeMem(0xeb59, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xce32, gbc.sp());
        EXPECT(0xeb5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb59));
        EXPECT(0xbd, gbc.readMem(0xeb5a));
        // CB BD 01B1
        gbc.setState(0xb792, 0x533f, 0xe070, 0xbb63, 0x172, 0x19e5, 0x0, 0x0);
        gbc.writeMem(0xb792, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x533f, gbc.sp());
        EXPECT(0xb794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb792));
        EXPECT(0xbd, gbc.readMem(0xb793));
        // CB BD 01B2
        gbc.setState(0xeab6, 0x99b0, 0xa800, 0xa212, 0x63e4, 0x4f47, 0x0, 0x1);
        gbc.writeMem(0xeab6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x99b0, gbc.sp());
        EXPECT(0xeab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeab6));
        EXPECT(0xbd, gbc.readMem(0xeab7));
        // CB BD 01B3
        gbc.setState(0x8ea, 0xe59f, 0x5f40, 0xfe30, 0x5462, 0xaa4f, 0x0, 0x0);
        gbc.writeMem(0x8ea, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe59f, gbc.sp());
        EXPECT(0x8ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 01B4
        gbc.setState(0xae33, 0xf145, 0xde20, 0x1ab7, 0xfba5, 0x7481, 0x1, 0x1);
        gbc.writeMem(0xae33, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf145, gbc.sp());
        EXPECT(0xae35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae33));
        EXPECT(0xbd, gbc.readMem(0xae34));
        // CB BD 01B5
        gbc.setState(0x9270, 0xf09b, 0xc940, 0xfc11, 0x7ad9, 0xaaa1, 0x0, 0x1);
        gbc.writeMem(0x9270, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf09b, gbc.sp());
        EXPECT(0x9272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9270));
        EXPECT(0xbd, gbc.readMem(0x9271));
        // CB BD 01B6
        gbc.setState(0x7b54, 0xa4a3, 0xc2c0, 0x6b59, 0x754e, 0xa21f, 0x1, 0x0);
        gbc.writeMem(0x7b54, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa4a3, gbc.sp());
        EXPECT(0x7b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 01B7
        gbc.setState(0x43ac, 0x6b32, 0x7f80, 0x9578, 0xd010, 0x1ff2, 0x0, 0x0);
        gbc.writeMem(0x43ac, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6b32, gbc.sp());
        EXPECT(0x43ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 01B8
        gbc.setState(0x1261, 0x30f0, 0x6ad0, 0xc949, 0xa3e6, 0x58b2, 0x1, 0x1);
        gbc.writeMem(0x1261, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x30f0, gbc.sp());
        EXPECT(0x1263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01B9
        gbc.setState(0xeb8f, 0x6b98, 0xe180, 0xbfa6, 0xed5f, 0x46, 0x1, 0x0);
        gbc.writeMem(0xeb8f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6b98, gbc.sp());
        EXPECT(0xeb91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb8f));
        EXPECT(0xbd, gbc.readMem(0xeb90));
        // CB BD 01BA
        gbc.setState(0x3b97, 0x2a65, 0xfd20, 0x3cc8, 0xfdc6, 0xc0ff, 0x0, 0x1);
        gbc.writeMem(0x3b97, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2a65, gbc.sp());
        EXPECT(0x3b99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 01BB
        gbc.setState(0x685f, 0x68dc, 0x4bd0, 0xc9fe, 0xe88b, 0x49e3, 0x1, 0x0);
        gbc.writeMem(0x685f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x68dc, gbc.sp());
        EXPECT(0x6861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01BC
        gbc.setState(0xba41, 0xa77b, 0x1be0, 0x5458, 0x210b, 0xe55d, 0x0, 0x0);
        gbc.writeMem(0xba41, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa77b, gbc.sp());
        EXPECT(0xba43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba41));
        EXPECT(0xbd, gbc.readMem(0xba42));
        // CB BD 01BD
        gbc.setState(0xce2f, 0x977c, 0x8e30, 0x2e22, 0x3e97, 0xfa76, 0x1, 0x0);
        gbc.writeMem(0xce2f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x977c, gbc.sp());
        EXPECT(0xce31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce2f));
        EXPECT(0xbd, gbc.readMem(0xce30));
        // CB BD 01BE
        gbc.setState(0x1c66, 0x5e6f, 0x3640, 0x1605, 0x40a7, 0xecb3, 0x1, 0x0);
        gbc.writeMem(0x1c66, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5e6f, gbc.sp());
        EXPECT(0x1c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 01BF
        gbc.setState(0x8a7a, 0x2b70, 0x7600, 0xced1, 0x69be, 0xb312, 0x0, 0x1);
        gbc.writeMem(0x8a7a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2b70, gbc.sp());
        EXPECT(0x8a7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a7a));
        EXPECT(0xbd, gbc.readMem(0x8a7b));
        // CB BD 01C1
        gbc.setState(0x2de1, 0x6f9, 0x94e0, 0x3db5, 0x9429, 0xbbb2, 0x1, 0x0);
        gbc.writeMem(0x2de1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6f9, gbc.sp());
        EXPECT(0x2de3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 01C2
        gbc.setState(0x2efc, 0xaa54, 0x1d70, 0xbcbe, 0xf7de, 0xc1b0, 0x1, 0x0);
        gbc.writeMem(0x2efc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xaa54, gbc.sp());
        EXPECT(0x2efe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01C3
        gbc.setState(0x8762, 0x70bd, 0xfce0, 0xfab0, 0x7e63, 0x8144, 0x0, 0x0);
        gbc.writeMem(0x8762, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x70bd, gbc.sp());
        EXPECT(0x8764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8762));
        EXPECT(0xbd, gbc.readMem(0x8763));
        // CB BD 01C4
        gbc.setState(0x7d9a, 0xc843, 0xd010, 0xf715, 0x2b69, 0xe626, 0x1, 0x1);
        gbc.writeMem(0x7d9a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc843, gbc.sp());
        EXPECT(0x7d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01C5
        gbc.setState(0x95d3, 0x87b3, 0x7e50, 0xd56b, 0xc39a, 0x4f70, 0x1, 0x0);
        gbc.writeMem(0x95d3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x87b3, gbc.sp());
        EXPECT(0x95d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d3));
        EXPECT(0xbd, gbc.readMem(0x95d4));
        // CB BD 01C6
        gbc.setState(0x6d21, 0x1078, 0x7f10, 0x1f4a, 0x9b8c, 0x93ed, 0x0, 0x0);
        gbc.writeMem(0x6d21, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1078, gbc.sp());
        EXPECT(0x6d23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01C7
        gbc.setState(0x476b, 0x3375, 0x85c0, 0x89b0, 0xc6e, 0xa660, 0x0, 0x0);
        gbc.writeMem(0x476b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3375, gbc.sp());
        EXPECT(0x476d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 01C8
        gbc.setState(0x73ca, 0x4d9, 0xd3d0, 0x7715, 0xa4d2, 0x9c62, 0x1, 0x0);
        gbc.writeMem(0x73ca, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4d9, gbc.sp());
        EXPECT(0x73cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01C9
        gbc.setState(0xe42, 0xd8c9, 0x9190, 0xe34c, 0xf58, 0x3a6c, 0x0, 0x1);
        gbc.writeMem(0xe42, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd8c9, gbc.sp());
        EXPECT(0xe44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01CA
        gbc.setState(0x1de3, 0x2ae8, 0xf780, 0x73af, 0xabd4, 0xc6f, 0x0, 0x1);
        gbc.writeMem(0x1de3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2ae8, gbc.sp());
        EXPECT(0x1de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 01CB
        gbc.setState(0x15c9, 0xe1f5, 0xb9d0, 0x80f6, 0x6cc3, 0xbde, 0x0, 0x1);
        gbc.writeMem(0x15c9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe1f5, gbc.sp());
        EXPECT(0x15cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01CC
        gbc.setState(0xd13a, 0xa113, 0x5380, 0x67df, 0x9cfa, 0xb485, 0x1, 0x0);
        gbc.writeMem(0xd13a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa113, gbc.sp());
        EXPECT(0xd13c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd13a));
        EXPECT(0xbd, gbc.readMem(0xd13b));
        // CB BD 01CD
        gbc.setState(0x812e, 0xc734, 0xb6a0, 0xe771, 0x803c, 0xc89c, 0x1, 0x1);
        gbc.writeMem(0x812e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc734, gbc.sp());
        EXPECT(0x8130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x812e));
        EXPECT(0xbd, gbc.readMem(0x812f));
        // CB BD 01CE
        gbc.setState(0x5f77, 0xb3f0, 0x3ac0, 0x865b, 0x6cea, 0x3d91, 0x1, 0x0);
        gbc.writeMem(0x5f77, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb3f0, gbc.sp());
        EXPECT(0x5f79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 01CF
        gbc.setState(0x8e98, 0xb788, 0xfb30, 0x2546, 0xbbe6, 0x56a8, 0x1, 0x0);
        gbc.writeMem(0x8e98, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb788, gbc.sp());
        EXPECT(0x8e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e98));
        EXPECT(0xbd, gbc.readMem(0x8e99));
        // CB BD 01D0
        gbc.setState(0x4178, 0x39ac, 0xacb0, 0x1291, 0xd016, 0xc605, 0x1, 0x0);
        gbc.writeMem(0x4178, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x39ac, gbc.sp());
        EXPECT(0x417a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01D1
        gbc.setState(0x18fc, 0xd281, 0xae00, 0xab87, 0x47eb, 0xdae3, 0x1, 0x1);
        gbc.writeMem(0x18fc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd281, gbc.sp());
        EXPECT(0x18fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 01D2
        gbc.setState(0x9f8c, 0x154, 0xbcd0, 0xc072, 0xc2c8, 0xe9fb, 0x1, 0x1);
        gbc.writeMem(0x9f8c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x154, gbc.sp());
        EXPECT(0x9f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f8c));
        EXPECT(0xbd, gbc.readMem(0x9f8d));
        // CB BD 01D3
        gbc.setState(0x1f70, 0x6deb, 0x87e0, 0x42e2, 0x51b9, 0x3c45, 0x1, 0x0);
        gbc.writeMem(0x1f70, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6deb, gbc.sp());
        EXPECT(0x1f72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 01D4
        gbc.setState(0x3afe, 0x417c, 0x7470, 0x417d, 0xf26b, 0x4906, 0x0, 0x0);
        gbc.writeMem(0x3afe, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x417c, gbc.sp());
        EXPECT(0x3b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01D5
        gbc.setState(0x69e2, 0x5d6, 0x7030, 0x38fe, 0xe3a7, 0xdbb9, 0x0, 0x1);
        gbc.writeMem(0x69e2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5d6, gbc.sp());
        EXPECT(0x69e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01D6
        gbc.setState(0xbb9f, 0xa3c5, 0xe790, 0x8b5b, 0x2f5e, 0x4596, 0x0, 0x1);
        gbc.writeMem(0xbb9f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa3c5, gbc.sp());
        EXPECT(0xbba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb9f));
        EXPECT(0xbd, gbc.readMem(0xbba0));
        // CB BD 01D7
        gbc.setState(0x95b1, 0x575a, 0x3370, 0x2f3a, 0xe092, 0xde92, 0x1, 0x1);
        gbc.writeMem(0x95b1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x575a, gbc.sp());
        EXPECT(0x95b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b1));
        EXPECT(0xbd, gbc.readMem(0x95b2));
        // CB BD 01D8
        gbc.setState(0x9af0, 0x2b9e, 0x8810, 0xef80, 0xe82c, 0x5ebe, 0x1, 0x1);
        gbc.writeMem(0x9af0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2b9e, gbc.sp());
        EXPECT(0x9af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af0));
        EXPECT(0xbd, gbc.readMem(0x9af1));
        // CB BD 01D9
        gbc.setState(0x61f, 0x8180, 0xc530, 0xb946, 0xee1b, 0x836a, 0x1, 0x1);
        gbc.writeMem(0x61f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8180, gbc.sp());
        EXPECT(0x621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01DA
        gbc.setState(0x2126, 0xcd0a, 0x7aa0, 0x7949, 0xc715, 0x38f1, 0x1, 0x1);
        gbc.writeMem(0x2126, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xcd0a, gbc.sp());
        EXPECT(0x2128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 01DB
        gbc.setState(0xbafc, 0xcc32, 0x1fe0, 0xe699, 0x23d9, 0x171a, 0x0, 0x0);
        gbc.writeMem(0xbafc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcc32, gbc.sp());
        EXPECT(0xbafe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbafc));
        EXPECT(0xbd, gbc.readMem(0xbafd));
        // CB BD 01DC
        gbc.setState(0x200d, 0xe509, 0x7330, 0x47a4, 0x3073, 0xbe62, 0x0, 0x0);
        gbc.writeMem(0x200d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe509, gbc.sp());
        EXPECT(0x200f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01DD
        gbc.setState(0xe860, 0xef35, 0x3d30, 0xec18, 0x1999, 0xaa3b, 0x1, 0x1);
        gbc.writeMem(0xe860, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xef35, gbc.sp());
        EXPECT(0xe862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe860));
        EXPECT(0xbd, gbc.readMem(0xe861));
        // CB BD 01DE
        gbc.setState(0xb6d, 0xd4f2, 0x3030, 0x378f, 0xf1c, 0xb8d7, 0x0, 0x1);
        gbc.writeMem(0xb6d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd4f2, gbc.sp());
        EXPECT(0xb6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01DF
        gbc.setState(0x74c8, 0xf7da, 0xa6f0, 0x65, 0xe877, 0x5637, 0x1, 0x1);
        gbc.writeMem(0x74c8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf7da, gbc.sp());
        EXPECT(0x74ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01E0
        gbc.setState(0x1197, 0xe162, 0x2b70, 0x4ef7, 0x192e, 0x3205, 0x1, 0x1);
        gbc.writeMem(0x1197, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe162, gbc.sp());
        EXPECT(0x1199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01E2
        gbc.setState(0xbc2a, 0x75a4, 0xdd20, 0x3ca9, 0xa6e5, 0x21d, 0x0, 0x1);
        gbc.writeMem(0xbc2a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x75a4, gbc.sp());
        EXPECT(0xbc2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2a));
        EXPECT(0xbd, gbc.readMem(0xbc2b));
        // CB BD 01E3
        gbc.setState(0x5df3, 0xe5db, 0x5d20, 0xf9d4, 0x170e, 0xa5fc, 0x1, 0x0);
        gbc.writeMem(0x5df3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe5db, gbc.sp());
        EXPECT(0x5df5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 01E4
        gbc.setState(0x809c, 0x74ee, 0x55b0, 0x7b11, 0xdbf5, 0xecce, 0x1, 0x1);
        gbc.writeMem(0x809c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x74ee, gbc.sp());
        EXPECT(0x809e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x809c));
        EXPECT(0xbd, gbc.readMem(0x809d));
        // CB BD 01E5
        gbc.setState(0x1564, 0x643d, 0xf820, 0xcd0d, 0x45ed, 0x1400, 0x1, 0x0);
        gbc.writeMem(0x1564, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x643d, gbc.sp());
        EXPECT(0x1566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 01E6
        gbc.setState(0xcaf4, 0xb925, 0xc6e0, 0x2342, 0x4a1, 0xfb0e, 0x0, 0x0);
        gbc.writeMem(0xcaf4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb925, gbc.sp());
        EXPECT(0xcaf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf4));
        EXPECT(0xbd, gbc.readMem(0xcaf5));
        // CB BD 01E7
        gbc.setState(0x8675, 0xf453, 0x7d90, 0x2a6c, 0x444c, 0xe18c, 0x1, 0x1);
        gbc.writeMem(0x8675, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf453, gbc.sp());
        EXPECT(0x8677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8675));
        EXPECT(0xbd, gbc.readMem(0x8676));
        // CB BD 01E8
        gbc.setState(0xe976, 0xe77f, 0x4c10, 0x35f6, 0xa756, 0xe6af, 0x1, 0x1);
        gbc.writeMem(0xe976, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe77f, gbc.sp());
        EXPECT(0xe978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe976));
        EXPECT(0xbd, gbc.readMem(0xe977));
        // CB BD 01E9
        gbc.setState(0xa7b2, 0x6332, 0x2350, 0x58fa, 0x9a32, 0xdde5, 0x1, 0x1);
        gbc.writeMem(0xa7b2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6332, gbc.sp());
        EXPECT(0xa7b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7b2));
        EXPECT(0xbd, gbc.readMem(0xa7b3));
        // CB BD 01EA
        gbc.setState(0x7c69, 0x6833, 0xe540, 0xba3e, 0xff3b, 0xa16f, 0x1, 0x0);
        gbc.writeMem(0x7c69, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6833, gbc.sp());
        EXPECT(0x7c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 01EB
        gbc.setState(0x801f, 0xe249, 0x5b10, 0x808b, 0x32cd, 0xfaf0, 0x1, 0x1);
        gbc.writeMem(0x801f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe249, gbc.sp());
        EXPECT(0x8021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x801f));
        EXPECT(0xbd, gbc.readMem(0x8020));
        // CB BD 01EE
        gbc.setState(0xa701, 0x3752, 0x1f10, 0x87d0, 0x92d6, 0x7427, 0x0, 0x0);
        gbc.writeMem(0xa701, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3752, gbc.sp());
        EXPECT(0xa703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa701));
        EXPECT(0xbd, gbc.readMem(0xa702));
        // CB BD 01EF
        gbc.setState(0x278d, 0xc86, 0xa1d0, 0xf4e7, 0xbcf0, 0xc27f, 0x0, 0x1);
        gbc.writeMem(0x278d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc86, gbc.sp());
        EXPECT(0x278f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01F0
        gbc.setState(0xd1a2, 0x60d7, 0x2dd0, 0xe33e, 0xa764, 0xabae, 0x1, 0x1);
        gbc.writeMem(0xd1a2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x60d7, gbc.sp());
        EXPECT(0xd1a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a2));
        EXPECT(0xbd, gbc.readMem(0xd1a3));
        // CB BD 01F1
        gbc.setState(0x97a1, 0x7d7a, 0x6d00, 0xbee0, 0x2207, 0xb324, 0x0, 0x1);
        gbc.writeMem(0x97a1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7d7a, gbc.sp());
        EXPECT(0x97a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97a1));
        EXPECT(0xbd, gbc.readMem(0x97a2));
        // CB BD 01F2
        gbc.setState(0x6f16, 0x5d74, 0x5ca0, 0xf300, 0x67ba, 0x9f5b, 0x1, 0x0);
        gbc.writeMem(0x6f16, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5d74, gbc.sp());
        EXPECT(0x6f18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 01F3
        gbc.setState(0x33be, 0xeafd, 0xb6d0, 0x45cb, 0xb2eb, 0x4661, 0x1, 0x0);
        gbc.writeMem(0x33be, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xeafd, gbc.sp());
        EXPECT(0x33c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01F4
        gbc.setState(0xce98, 0x7037, 0x1a00, 0x5bce, 0x6b80, 0xc122, 0x1, 0x1);
        gbc.writeMem(0xce98, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7037, gbc.sp());
        EXPECT(0xce9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce98));
        EXPECT(0xbd, gbc.readMem(0xce99));
        // CB BD 01F5
        gbc.setState(0x4b86, 0xdced, 0x9990, 0xe4d9, 0x75ac, 0x1979, 0x0, 0x1);
        gbc.writeMem(0x4b86, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdced, gbc.sp());
        EXPECT(0x4b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01F6
        gbc.setState(0x2cad, 0x9b10, 0x22b0, 0x835, 0x8bc1, 0x381b, 0x0, 0x1);
        gbc.writeMem(0x2cad, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9b10, gbc.sp());
        EXPECT(0x2caf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 01F7
        gbc.setState(0x16cc, 0xddfc, 0xad80, 0xe8c4, 0xa9a8, 0x5500, 0x0, 0x1);
        gbc.writeMem(0x16cc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xddfc, gbc.sp());
        EXPECT(0x16ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 01F8
        gbc.setState(0xb827, 0x9b6c, 0x23c0, 0x2700, 0x334b, 0x3165, 0x1, 0x0);
        gbc.writeMem(0xb827, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9b6c, gbc.sp());
        EXPECT(0xb829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb827));
        EXPECT(0xbd, gbc.readMem(0xb828));
        // CB BD 01F9
        gbc.setState(0x144c, 0xe26c, 0xde0, 0x8561, 0x65b6, 0x5394, 0x1, 0x1);
        gbc.writeMem(0x144c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe26c, gbc.sp());
        EXPECT(0x144e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 01FA
        gbc.setState(0xa5c2, 0x5671, 0xfa70, 0xfbb0, 0x4201, 0xe590, 0x1, 0x1);
        gbc.writeMem(0xa5c2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5671, gbc.sp());
        EXPECT(0xa5c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5c2));
        EXPECT(0xbd, gbc.readMem(0xa5c3));
        // CB BD 01FB
        gbc.setState(0x8f26, 0x8f7e, 0xa1c0, 0x2ad7, 0xb67, 0x827f, 0x0, 0x0);
        gbc.writeMem(0x8f26, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8f7e, gbc.sp());
        EXPECT(0x8f28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f26));
        EXPECT(0xbd, gbc.readMem(0x8f27));
        // CB BD 01FC
        gbc.setState(0xec8f, 0x3210, 0x9d40, 0xf74b, 0xbb8b, 0x1359, 0x0, 0x0);
        gbc.writeMem(0xec8f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3210, gbc.sp());
        EXPECT(0xec91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec8f));
        EXPECT(0xbd, gbc.readMem(0xec90));
        // CB BD 01FD
        gbc.setState(0xbcff, 0xb5e0, 0xc570, 0x7aa3, 0x5a31, 0xaf5a, 0x0, 0x1);
        gbc.writeMem(0xbcff, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb5e0, gbc.sp());
        EXPECT(0xbd01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcff));
        EXPECT(0xbd, gbc.readMem(0xbd00));
        // CB BD 01FE
        gbc.setState(0xea7d, 0xea78, 0x6490, 0x7774, 0x8def, 0x93a0, 0x0, 0x0);
        gbc.writeMem(0xea7d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xea78, gbc.sp());
        EXPECT(0xea7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea7d));
        EXPECT(0xbd, gbc.readMem(0xea7e));
        // CB BD 01FF
        gbc.setState(0x1187, 0x8f00, 0xed90, 0xeb04, 0x49f6, 0x4404, 0x1, 0x1);
        gbc.writeMem(0x1187, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8f00, gbc.sp());
        EXPECT(0x1189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0200
        gbc.setState(0x7303, 0x6dc2, 0xe390, 0xcd86, 0x4537, 0x3917, 0x0, 0x1);
        gbc.writeMem(0x7303, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6dc2, gbc.sp());
        EXPECT(0x7305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0202
        gbc.setState(0xe7, 0xdf01, 0xfa0, 0x2006, 0x4ed0, 0x9125, 0x1, 0x1);
        gbc.writeMem(0xe7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xdf01, gbc.sp());
        EXPECT(0xe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0203
        gbc.setState(0xac3f, 0x5ffd, 0x5b0, 0xe74d, 0x4f10, 0xd8b4, 0x1, 0x1);
        gbc.writeMem(0xac3f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5ffd, gbc.sp());
        EXPECT(0xac41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac3f));
        EXPECT(0xbd, gbc.readMem(0xac40));
        // CB BD 0204
        gbc.setState(0xb594, 0x9136, 0xd4d0, 0x223a, 0x45cf, 0x6072, 0x0, 0x1);
        gbc.writeMem(0xb594, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9136, gbc.sp());
        EXPECT(0xb596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb594));
        EXPECT(0xbd, gbc.readMem(0xb595));
        // CB BD 0205
        gbc.setState(0x76b1, 0x6c8d, 0xe9f0, 0x24a6, 0xf114, 0xdba8, 0x0, 0x1);
        gbc.writeMem(0x76b1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6c8d, gbc.sp());
        EXPECT(0x76b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0206
        gbc.setState(0x5545, 0xbdad, 0xda70, 0x9bb2, 0x4ddb, 0xfba8, 0x1, 0x1);
        gbc.writeMem(0x5545, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbdad, gbc.sp());
        EXPECT(0x5547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0207
        gbc.setState(0x4d4, 0xbc70, 0xce0, 0xdfff, 0x3c3, 0x4b02, 0x0, 0x1);
        gbc.writeMem(0x4d4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbc70, gbc.sp());
        EXPECT(0x4d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0208
        gbc.setState(0x46f5, 0xaeec, 0x6600, 0xfe70, 0x638f, 0xe794, 0x0, 0x1);
        gbc.writeMem(0x46f5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xaeec, gbc.sp());
        EXPECT(0x46f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0209
        gbc.setState(0x5dda, 0xd6f7, 0x6f60, 0x8659, 0xacab, 0x79aa, 0x0, 0x1);
        gbc.writeMem(0x5dda, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd6f7, gbc.sp());
        EXPECT(0x5ddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 020A
        gbc.setState(0x76d0, 0x7857, 0xafe0, 0x7960, 0x59d4, 0x3490, 0x1, 0x1);
        gbc.writeMem(0x76d0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7857, gbc.sp());
        EXPECT(0x76d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 020B
        gbc.setState(0x6caa, 0x9396, 0x75a0, 0xc64f, 0x5e6b, 0xdd12, 0x0, 0x1);
        gbc.writeMem(0x6caa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9396, gbc.sp());
        EXPECT(0x6cac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 020C
        gbc.setState(0x2e97, 0xe18d, 0x5910, 0x562e, 0x4548, 0xc10a, 0x0, 0x0);
        gbc.writeMem(0x2e97, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe18d, gbc.sp());
        EXPECT(0x2e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 020D
        gbc.setState(0xace6, 0x38a3, 0xda70, 0x79d5, 0xaceb, 0x58b1, 0x1, 0x0);
        gbc.writeMem(0xace6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x38a3, gbc.sp());
        EXPECT(0xace8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace6));
        EXPECT(0xbd, gbc.readMem(0xace7));
        // CB BD 020E
        gbc.setState(0x27cc, 0x9250, 0x49d0, 0x2a18, 0x3535, 0x7f0, 0x0, 0x0);
        gbc.writeMem(0x27cc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9250, gbc.sp());
        EXPECT(0x27ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 020F
        gbc.setState(0x6c32, 0x75f6, 0xe560, 0x2039, 0x61bb, 0xb9f9, 0x1, 0x1);
        gbc.writeMem(0x6c32, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x75f6, gbc.sp());
        EXPECT(0x6c34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0210
        gbc.setState(0x1827, 0x5101, 0xe7d0, 0xe6ef, 0x882a, 0x679f, 0x0, 0x1);
        gbc.writeMem(0x1827, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5101, gbc.sp());
        EXPECT(0x1829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0211
        gbc.setState(0x6579, 0x81e0, 0x2b20, 0xe5b4, 0xc2f3, 0x55c0, 0x1, 0x0);
        gbc.writeMem(0x6579, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x81e0, gbc.sp());
        EXPECT(0x657b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0212
        gbc.setState(0x63e0, 0x75e5, 0x1db0, 0xb0fc, 0x3eb9, 0x251a, 0x1, 0x1);
        gbc.writeMem(0x63e0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x75e5, gbc.sp());
        EXPECT(0x63e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0213
        gbc.setState(0xa522, 0x93d5, 0xef80, 0xf9b4, 0xc6f6, 0x21cf, 0x1, 0x1);
        gbc.writeMem(0xa522, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x93d5, gbc.sp());
        EXPECT(0xa524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa522));
        EXPECT(0xbd, gbc.readMem(0xa523));
        // CB BD 0215
        gbc.setState(0x8693, 0xba5c, 0xabf0, 0x1133, 0xdfdb, 0xbc5, 0x1, 0x0);
        gbc.writeMem(0x8693, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xba5c, gbc.sp());
        EXPECT(0x8695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8693));
        EXPECT(0xbd, gbc.readMem(0x8694));
        // CB BD 0216
        gbc.setState(0x4e1f, 0xc65d, 0xd8b0, 0x2f06, 0xf990, 0x6e20, 0x0, 0x0);
        gbc.writeMem(0x4e1f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc65d, gbc.sp());
        EXPECT(0x4e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0217
        gbc.setState(0xe1f5, 0x745b, 0x1390, 0x37fb, 0x3317, 0x5fa3, 0x1, 0x0);
        gbc.writeMem(0xe1f5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x745b, gbc.sp());
        EXPECT(0xe1f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f5));
        EXPECT(0xbd, gbc.readMem(0xe1f6));
        // CB BD 0218
        gbc.setState(0xa656, 0x7e7f, 0x5d10, 0xdaca, 0xc2ad, 0x7948, 0x1, 0x1);
        gbc.writeMem(0xa656, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7e7f, gbc.sp());
        EXPECT(0xa658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa656));
        EXPECT(0xbd, gbc.readMem(0xa657));
        // CB BD 0219
        gbc.setState(0x5b27, 0x802f, 0xe6a0, 0x3db0, 0x6d24, 0x5745, 0x0, 0x1);
        gbc.writeMem(0x5b27, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x802f, gbc.sp());
        EXPECT(0x5b29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 021A
        gbc.setState(0x6844, 0x9d24, 0x85a0, 0x821b, 0xc333, 0xea70, 0x1, 0x0);
        gbc.writeMem(0x6844, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9d24, gbc.sp());
        EXPECT(0x6846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 021B
        gbc.setState(0xb9d2, 0x54b6, 0xcb70, 0x3185, 0x6be0, 0xdd62, 0x0, 0x0);
        gbc.writeMem(0xb9d2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x54b6, gbc.sp());
        EXPECT(0xb9d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9d2));
        EXPECT(0xbd, gbc.readMem(0xb9d3));
        // CB BD 021C
        gbc.setState(0x3537, 0xe828, 0x8d60, 0xfab9, 0x115f, 0xee65, 0x0, 0x1);
        gbc.writeMem(0x3537, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe828, gbc.sp());
        EXPECT(0x3539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 021D
        gbc.setState(0x1803, 0xf551, 0x5700, 0x5597, 0xf38e, 0x49a8, 0x1, 0x0);
        gbc.writeMem(0x1803, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf551, gbc.sp());
        EXPECT(0x1805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 021E
        gbc.setState(0x147f, 0x598b, 0x3070, 0x59d1, 0x285d, 0x2889, 0x1, 0x1);
        gbc.writeMem(0x147f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x598b, gbc.sp());
        EXPECT(0x1481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 021F
        gbc.setState(0x5693, 0xbec2, 0x5620, 0x9226, 0xf085, 0x6831, 0x0, 0x0);
        gbc.writeMem(0x5693, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbec2, gbc.sp());
        EXPECT(0x5695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0220
        gbc.setState(0x7d77, 0x4fb2, 0xc360, 0x1e5f, 0xbdeb, 0x65a0, 0x0, 0x0);
        gbc.writeMem(0x7d77, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4fb2, gbc.sp());
        EXPECT(0x7d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0221
        gbc.setState(0xeb62, 0x1929, 0x6b40, 0x34bf, 0x7a15, 0x68aa, 0x1, 0x0);
        gbc.writeMem(0xeb62, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1929, gbc.sp());
        EXPECT(0xeb64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb62));
        EXPECT(0xbd, gbc.readMem(0xeb63));
        // CB BD 0223
        gbc.setState(0x79b3, 0x7463, 0xea60, 0x4e91, 0x8a5d, 0xf31b, 0x1, 0x0);
        gbc.writeMem(0x79b3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7463, gbc.sp());
        EXPECT(0x79b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0224
        gbc.setState(0xb2eb, 0xc7e1, 0x66b0, 0x8b58, 0xfac4, 0xe0dd, 0x0, 0x1);
        gbc.writeMem(0xb2eb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc7e1, gbc.sp());
        EXPECT(0xb2ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2eb));
        EXPECT(0xbd, gbc.readMem(0xb2ec));
        // CB BD 0225
        gbc.setState(0xd1ee, 0x7db5, 0xead0, 0xfdab, 0xab24, 0xb5a8, 0x1, 0x0);
        gbc.writeMem(0xd1ee, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7db5, gbc.sp());
        EXPECT(0xd1f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ee));
        EXPECT(0xbd, gbc.readMem(0xd1ef));
        // CB BD 0226
        gbc.setState(0x4db8, 0x7424, 0xcc40, 0xc9e, 0x6e37, 0x9d84, 0x0, 0x1);
        gbc.writeMem(0x4db8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7424, gbc.sp());
        EXPECT(0x4dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0227
        gbc.setState(0xab01, 0x103c, 0xf0e0, 0xc519, 0x4825, 0x9d38, 0x0, 0x0);
        gbc.writeMem(0xab01, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x103c, gbc.sp());
        EXPECT(0xab03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab01));
        EXPECT(0xbd, gbc.readMem(0xab02));
        // CB BD 0228
        gbc.setState(0xedef, 0x5251, 0xb680, 0x57b, 0xdca0, 0xcd4b, 0x0, 0x1);
        gbc.writeMem(0xedef, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5251, gbc.sp());
        EXPECT(0xedf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedef));
        EXPECT(0xbd, gbc.readMem(0xedf0));
        // CB BD 0229
        gbc.setState(0x19ff, 0xe58d, 0xdd30, 0x4823, 0x2052, 0xa634, 0x0, 0x0);
        gbc.writeMem(0x19ff, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe58d, gbc.sp());
        EXPECT(0x1a01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 022A
        gbc.setState(0x2a03, 0x4b72, 0x5610, 0x17a3, 0xe1ae, 0x3f9, 0x0, 0x1);
        gbc.writeMem(0x2a03, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4b72, gbc.sp());
        EXPECT(0x2a05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 022B
        gbc.setState(0xb914, 0x6976, 0x2db0, 0xd5a2, 0x9c45, 0xefa6, 0x0, 0x0);
        gbc.writeMem(0xb914, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6976, gbc.sp());
        EXPECT(0xb916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb914));
        EXPECT(0xbd, gbc.readMem(0xb915));
        // CB BD 022C
        gbc.setState(0x3b32, 0x484e, 0x92c0, 0x5f2d, 0xcb01, 0xdfb8, 0x1, 0x0);
        gbc.writeMem(0x3b32, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x484e, gbc.sp());
        EXPECT(0x3b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 022D
        gbc.setState(0xb77a, 0x15d5, 0x1090, 0x584e, 0x854e, 0x4e07, 0x1, 0x1);
        gbc.writeMem(0xb77a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x15d5, gbc.sp());
        EXPECT(0xb77c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb77a));
        EXPECT(0xbd, gbc.readMem(0xb77b));
        // CB BD 022E
        gbc.setState(0x7774, 0x55e7, 0x31b0, 0x721f, 0x30d1, 0x679d, 0x1, 0x1);
        gbc.writeMem(0x7774, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x55e7, gbc.sp());
        EXPECT(0x7776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 022F
        gbc.setState(0xd805, 0xc21d, 0xe9a0, 0x55ee, 0xd15e, 0xf10c, 0x0, 0x0);
        gbc.writeMem(0xd805, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc21d, gbc.sp());
        EXPECT(0xd807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd805));
        EXPECT(0xbd, gbc.readMem(0xd806));
        // CB BD 0230
        gbc.setState(0xc81d, 0x18cc, 0x8660, 0x16a9, 0x2287, 0x625, 0x1, 0x0);
        gbc.writeMem(0xc81d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x18cc, gbc.sp());
        EXPECT(0xc81f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc81d));
        EXPECT(0xbd, gbc.readMem(0xc81e));
        // CB BD 0231
        gbc.setState(0x2f89, 0x5ef1, 0x5060, 0x609a, 0x4e13, 0xa656, 0x0, 0x1);
        gbc.writeMem(0x2f89, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5ef1, gbc.sp());
        EXPECT(0x2f8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0232
        gbc.setState(0x1b99, 0x786f, 0x4cf0, 0x79c0, 0x66f8, 0xd8a5, 0x1, 0x0);
        gbc.writeMem(0x1b99, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x786f, gbc.sp());
        EXPECT(0x1b9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0233
        gbc.setState(0xa1a6, 0xa888, 0x9390, 0x8703, 0xd8f4, 0x6aac, 0x1, 0x1);
        gbc.writeMem(0xa1a6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa888, gbc.sp());
        EXPECT(0xa1a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1a6));
        EXPECT(0xbd, gbc.readMem(0xa1a7));
        // CB BD 0234
        gbc.setState(0xc5a, 0xeb7d, 0x9cc0, 0x7910, 0x773a, 0xe0e4, 0x1, 0x1);
        gbc.writeMem(0xc5a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xeb7d, gbc.sp());
        EXPECT(0xc5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0235
        gbc.setState(0xc84, 0x2819, 0xb790, 0x8b71, 0xb375, 0xb0a, 0x0, 0x1);
        gbc.writeMem(0xc84, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2819, gbc.sp());
        EXPECT(0xc86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0236
        gbc.setState(0xa807, 0x70ae, 0xff00, 0x938e, 0x7a92, 0xae, 0x0, 0x1);
        gbc.writeMem(0xa807, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x70ae, gbc.sp());
        EXPECT(0xa809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa807));
        EXPECT(0xbd, gbc.readMem(0xa808));
        // CB BD 0237
        gbc.setState(0x53e3, 0x1df8, 0xf2b0, 0x3eec, 0x929b, 0xfdd0, 0x0, 0x0);
        gbc.writeMem(0x53e3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1df8, gbc.sp());
        EXPECT(0x53e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0238
        gbc.setState(0x9533, 0xf847, 0xcff0, 0xa386, 0x6975, 0x8ea6, 0x0, 0x0);
        gbc.writeMem(0x9533, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf847, gbc.sp());
        EXPECT(0x9535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9533));
        EXPECT(0xbd, gbc.readMem(0x9534));
        // CB BD 0239
        gbc.setState(0xd83d, 0x81bd, 0xb160, 0xfdec, 0xa1db, 0x4c6, 0x0, 0x1);
        gbc.writeMem(0xd83d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x81bd, gbc.sp());
        EXPECT(0xd83f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd83d));
        EXPECT(0xbd, gbc.readMem(0xd83e));
        // CB BD 023A
        gbc.setState(0x2222, 0x32bc, 0xff20, 0xc670, 0xfd86, 0xee8b, 0x0, 0x0);
        gbc.writeMem(0x2222, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x32bc, gbc.sp());
        EXPECT(0x2224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 023B
        gbc.setState(0xb29c, 0x39fc, 0x4c30, 0xb5e2, 0xf997, 0x9e4d, 0x0, 0x1);
        gbc.writeMem(0xb29c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x39fc, gbc.sp());
        EXPECT(0xb29e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb29c));
        EXPECT(0xbd, gbc.readMem(0xb29d));
        // CB BD 023C
        gbc.setState(0x7c6b, 0x1bee, 0xeab0, 0x4445, 0x9685, 0x60d2, 0x1, 0x0);
        gbc.writeMem(0x7c6b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1bee, gbc.sp());
        EXPECT(0x7c6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 023D
        gbc.setState(0x84c3, 0xc343, 0x4800, 0x5aa1, 0xe40b, 0x602b, 0x1, 0x0);
        gbc.writeMem(0x84c3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc343, gbc.sp());
        EXPECT(0x84c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c3));
        EXPECT(0xbd, gbc.readMem(0x84c4));
        // CB BD 023E
        gbc.setState(0xe2c0, 0x7dee, 0xdb50, 0x7548, 0x4cf1, 0x974d, 0x0, 0x0);
        gbc.writeMem(0xe2c0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7dee, gbc.sp());
        EXPECT(0xe2c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c0));
        EXPECT(0xbd, gbc.readMem(0xe2c1));
        // CB BD 023F
        gbc.setState(0xe0ee, 0xb178, 0xe750, 0xca1c, 0x3f30, 0x5398, 0x0, 0x0);
        gbc.writeMem(0xe0ee, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb178, gbc.sp());
        EXPECT(0xe0f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ee));
        EXPECT(0xbd, gbc.readMem(0xe0ef));
        // CB BD 0240
        gbc.setState(0x850e, 0xad9e, 0x38e0, 0xc6eb, 0x2f54, 0x98bc, 0x1, 0x0);
        gbc.writeMem(0x850e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xad9e, gbc.sp());
        EXPECT(0x8510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x850e));
        EXPECT(0xbd, gbc.readMem(0x850f));
        // CB BD 0241
        gbc.setState(0xb770, 0xab0e, 0x50f0, 0x29a4, 0xed43, 0xd10d, 0x1, 0x1);
        gbc.writeMem(0xb770, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xab0e, gbc.sp());
        EXPECT(0xb772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb770));
        EXPECT(0xbd, gbc.readMem(0xb771));
        // CB BD 0242
        gbc.setState(0x53a5, 0x4b68, 0xe630, 0x84f1, 0xfe0a, 0x342, 0x1, 0x1);
        gbc.writeMem(0x53a5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4b68, gbc.sp());
        EXPECT(0x53a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0243
        gbc.setState(0x3114, 0x8e4d, 0xcce0, 0xfe46, 0xffa9, 0xb0ae, 0x1, 0x1);
        gbc.writeMem(0x3114, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8e4d, gbc.sp());
        EXPECT(0x3116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0244
        gbc.setState(0x77d4, 0xff98, 0x3a80, 0x3fcb, 0xc2b0, 0x4707, 0x1, 0x0);
        gbc.writeMem(0x77d4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xff98, gbc.sp());
        EXPECT(0x77d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0245
        gbc.setState(0xa5f6, 0xceb, 0x7fc0, 0xf57b, 0x1740, 0xd1a7, 0x0, 0x0);
        gbc.writeMem(0xa5f6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xceb, gbc.sp());
        EXPECT(0xa5f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f6));
        EXPECT(0xbd, gbc.readMem(0xa5f7));
        // CB BD 0246
        gbc.setState(0xb48f, 0x8303, 0xb910, 0x119, 0x2da1, 0x3d7, 0x0, 0x1);
        gbc.writeMem(0xb48f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8303, gbc.sp());
        EXPECT(0xb491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb48f));
        EXPECT(0xbd, gbc.readMem(0xb490));
        // CB BD 0247
        gbc.setState(0xe615, 0x7ca9, 0xec60, 0xa39c, 0xf6a9, 0xe9db, 0x1, 0x1);
        gbc.writeMem(0xe615, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7ca9, gbc.sp());
        EXPECT(0xe617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe615));
        EXPECT(0xbd, gbc.readMem(0xe616));
        // CB BD 0248
        gbc.setState(0x46ff, 0xba8, 0xc920, 0x4c12, 0x3164, 0x9ca, 0x1, 0x1);
        gbc.writeMem(0x46ff, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xba8, gbc.sp());
        EXPECT(0x4701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 024A
        gbc.setState(0x4cf7, 0xb829, 0xb8a0, 0x6a3c, 0xaeca, 0x3c12, 0x1, 0x0);
        gbc.writeMem(0x4cf7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb829, gbc.sp());
        EXPECT(0x4cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 024B
        gbc.setState(0xc724, 0x9f5d, 0x6d0, 0x2b5d, 0x53de, 0x62aa, 0x0, 0x1);
        gbc.writeMem(0xc724, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9f5d, gbc.sp());
        EXPECT(0xc726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc724));
        EXPECT(0xbd, gbc.readMem(0xc725));
        // CB BD 024C
        gbc.setState(0xda81, 0xbb58, 0xa760, 0xc055, 0xd93e, 0xce41, 0x1, 0x1);
        gbc.writeMem(0xda81, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbb58, gbc.sp());
        EXPECT(0xda83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda81));
        EXPECT(0xbd, gbc.readMem(0xda82));
        // CB BD 024D
        gbc.setState(0x8cb7, 0x8842, 0x7f70, 0x4cc6, 0xdda, 0x738a, 0x1, 0x0);
        gbc.writeMem(0x8cb7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8842, gbc.sp());
        EXPECT(0x8cb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cb7));
        EXPECT(0xbd, gbc.readMem(0x8cb8));
        // CB BD 024E
        gbc.setState(0xc9cb, 0x179f, 0x3dc0, 0xcb4b, 0x1d3a, 0x3ccc, 0x0, 0x0);
        gbc.writeMem(0xc9cb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x179f, gbc.sp());
        EXPECT(0xc9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9cb));
        EXPECT(0xbd, gbc.readMem(0xc9cc));
        // CB BD 024F
        gbc.setState(0xa0ad, 0x676a, 0x5600, 0x1354, 0x8f2e, 0x90e5, 0x0, 0x1);
        gbc.writeMem(0xa0ad, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x676a, gbc.sp());
        EXPECT(0xa0af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ad));
        EXPECT(0xbd, gbc.readMem(0xa0ae));
        // CB BD 0250
        gbc.setState(0x4eba, 0xee69, 0x93f0, 0x5d47, 0x7a66, 0x6621, 0x1, 0x1);
        gbc.writeMem(0x4eba, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xee69, gbc.sp());
        EXPECT(0x4ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0251
        gbc.setState(0x355c, 0xc27, 0x2150, 0xdc3c, 0x389, 0x5aad, 0x0, 0x0);
        gbc.writeMem(0x355c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc27, gbc.sp());
        EXPECT(0x355e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0252
        gbc.setState(0x2386, 0x8270, 0xc110, 0x1715, 0x688b, 0x768, 0x1, 0x1);
        gbc.writeMem(0x2386, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8270, gbc.sp());
        EXPECT(0x2388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0253
        gbc.setState(0x5a68, 0x3e48, 0x50b0, 0x6659, 0xd517, 0x590d, 0x1, 0x0);
        gbc.writeMem(0x5a68, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3e48, gbc.sp());
        EXPECT(0x5a6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0254
        gbc.setState(0x98b5, 0x4d85, 0x31e0, 0xd334, 0xd951, 0x74ce, 0x1, 0x1);
        gbc.writeMem(0x98b5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4d85, gbc.sp());
        EXPECT(0x98b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b5));
        EXPECT(0xbd, gbc.readMem(0x98b6));
        // CB BD 0255
        gbc.setState(0x6e77, 0x5ae1, 0x9a30, 0x1fbc, 0x189e, 0xe351, 0x1, 0x0);
        gbc.writeMem(0x6e77, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5ae1, gbc.sp());
        EXPECT(0x6e79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0256
        gbc.setState(0xc4d1, 0x6802, 0x7ac0, 0xf873, 0x20a8, 0x616, 0x0, 0x1);
        gbc.writeMem(0xc4d1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6802, gbc.sp());
        EXPECT(0xc4d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d1));
        EXPECT(0xbd, gbc.readMem(0xc4d2));
        // CB BD 0257
        gbc.setState(0xe7ad, 0x7039, 0x4b40, 0xbb0e, 0xb06e, 0x8c1, 0x1, 0x1);
        gbc.writeMem(0xe7ad, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7039, gbc.sp());
        EXPECT(0xe7af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ad));
        EXPECT(0xbd, gbc.readMem(0xe7ae));
        // CB BD 0258
        gbc.setState(0x6a7, 0x597, 0x13f0, 0xc7be, 0x9b14, 0x1ef2, 0x1, 0x0);
        gbc.writeMem(0x6a7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x597, gbc.sp());
        EXPECT(0x6a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0259
        gbc.setState(0xcee7, 0x40cf, 0x4d70, 0x899b, 0x922, 0x7ad6, 0x1, 0x0);
        gbc.writeMem(0xcee7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x40cf, gbc.sp());
        EXPECT(0xcee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee7));
        EXPECT(0xbd, gbc.readMem(0xcee8));
        // CB BD 025B
        gbc.setState(0xa98f, 0x9a1d, 0x9910, 0x85a1, 0xbdd9, 0x5ed0, 0x0, 0x1);
        gbc.writeMem(0xa98f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9a1d, gbc.sp());
        EXPECT(0xa991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa98f));
        EXPECT(0xbd, gbc.readMem(0xa990));
        // CB BD 025C
        gbc.setState(0x5f21, 0x99c5, 0xcc50, 0x11a1, 0x1159, 0x2b4b, 0x0, 0x1);
        gbc.writeMem(0x5f21, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x99c5, gbc.sp());
        EXPECT(0x5f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 025D
        gbc.setState(0x75d0, 0xaddb, 0x8420, 0x598a, 0xfe2a, 0xbb5b, 0x1, 0x0);
        gbc.writeMem(0x75d0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xaddb, gbc.sp());
        EXPECT(0x75d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 025E
        gbc.setState(0x1440, 0xf5c6, 0x26c0, 0xd668, 0x3323, 0x25c3, 0x1, 0x0);
        gbc.writeMem(0x1440, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf5c6, gbc.sp());
        EXPECT(0x1442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 025F
        gbc.setState(0x6590, 0x5fd7, 0x9cb0, 0xe15d, 0x8579, 0x141b, 0x0, 0x1);
        gbc.writeMem(0x6590, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5fd7, gbc.sp());
        EXPECT(0x6592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0260
        gbc.setState(0x68fb, 0x3723, 0xefd0, 0x2a01, 0xda83, 0xb01e, 0x0, 0x0);
        gbc.writeMem(0x68fb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3723, gbc.sp());
        EXPECT(0x68fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0261
        gbc.setState(0x1636, 0xcfb0, 0xd160, 0x96f9, 0xc2e9, 0xfdba, 0x0, 0x1);
        gbc.writeMem(0x1636, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcfb0, gbc.sp());
        EXPECT(0x1638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0262
        gbc.setState(0xb156, 0xb33e, 0x2b60, 0xb524, 0xadab, 0x5b0d, 0x0, 0x0);
        gbc.writeMem(0xb156, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb33e, gbc.sp());
        EXPECT(0xb158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb156));
        EXPECT(0xbd, gbc.readMem(0xb157));
        // CB BD 0263
        gbc.setState(0xe22d, 0x4c34, 0x9d10, 0x2e63, 0x5a5d, 0x6a10, 0x1, 0x1);
        gbc.writeMem(0xe22d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4c34, gbc.sp());
        EXPECT(0xe22f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe22d));
        EXPECT(0xbd, gbc.readMem(0xe22e));
        // CB BD 0264
        gbc.setState(0xe33b, 0x6584, 0x94f0, 0x1b52, 0x364c, 0xd8a6, 0x0, 0x1);
        gbc.writeMem(0xe33b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6584, gbc.sp());
        EXPECT(0xe33d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe33b));
        EXPECT(0xbd, gbc.readMem(0xe33c));
        // CB BD 0265
        gbc.setState(0xd402, 0xfcfc, 0x98a0, 0xabf9, 0x10c, 0xa39b, 0x1, 0x1);
        gbc.writeMem(0xd402, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfcfc, gbc.sp());
        EXPECT(0xd404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd402));
        EXPECT(0xbd, gbc.readMem(0xd403));
        // CB BD 0266
        gbc.setState(0xa1d, 0x81ea, 0xd780, 0x1dbc, 0xaa7c, 0x98db, 0x0, 0x0);
        gbc.writeMem(0xa1d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x81ea, gbc.sp());
        EXPECT(0xa1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0268
        gbc.setState(0x4cca, 0x197e, 0xb680, 0xc830, 0x5205, 0x6dad, 0x0, 0x0);
        gbc.writeMem(0x4cca, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x197e, gbc.sp());
        EXPECT(0x4ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0269
        gbc.setState(0xb31c, 0x9b8, 0xda20, 0x64ec, 0x5224, 0x4b65, 0x0, 0x1);
        gbc.writeMem(0xb31c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9b8, gbc.sp());
        EXPECT(0xb31e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb31c));
        EXPECT(0xbd, gbc.readMem(0xb31d));
        // CB BD 026A
        gbc.setState(0x6b8d, 0xbe8b, 0x2e70, 0xe59a, 0x868b, 0xe471, 0x1, 0x0);
        gbc.writeMem(0x6b8d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbe8b, gbc.sp());
        EXPECT(0x6b8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 026B
        gbc.setState(0xc6d4, 0x8aa8, 0x4330, 0xc8d8, 0xc1f4, 0xdba3, 0x1, 0x1);
        gbc.writeMem(0xc6d4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8aa8, gbc.sp());
        EXPECT(0xc6d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d4));
        EXPECT(0xbd, gbc.readMem(0xc6d5));
        // CB BD 026C
        gbc.setState(0xe5f, 0xf009, 0x3440, 0x269b, 0x49b8, 0x42be, 0x1, 0x0);
        gbc.writeMem(0xe5f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf009, gbc.sp());
        EXPECT(0xe61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 026D
        gbc.setState(0xa98b, 0xe57c, 0xa0e0, 0x6939, 0x8f1b, 0x55e6, 0x1, 0x1);
        gbc.writeMem(0xa98b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe57c, gbc.sp());
        EXPECT(0xa98d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa98b));
        EXPECT(0xbd, gbc.readMem(0xa98c));
        // CB BD 026E
        gbc.setState(0x2c34, 0x9e63, 0x1c80, 0xc98d, 0xb885, 0x77e, 0x1, 0x1);
        gbc.writeMem(0x2c34, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9e63, gbc.sp());
        EXPECT(0x2c36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 026F
        gbc.setState(0x4265, 0x3ea6, 0x51e0, 0xa950, 0x9e39, 0xc3fc, 0x1, 0x0);
        gbc.writeMem(0x4265, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3ea6, gbc.sp());
        EXPECT(0x4267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0270
        gbc.setState(0x6b67, 0x40, 0xc6f0, 0xa098, 0x11f, 0x105, 0x1, 0x0);
        gbc.writeMem(0x6b67, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x40, gbc.sp());
        EXPECT(0x6b69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0271
        gbc.setState(0xc323, 0x5fbb, 0x9300, 0xe855, 0x6aea, 0x44e7, 0x1, 0x1);
        gbc.writeMem(0xc323, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5fbb, gbc.sp());
        EXPECT(0xc325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc323));
        EXPECT(0xbd, gbc.readMem(0xc324));
        // CB BD 0272
        gbc.setState(0x49a3, 0x45af, 0xf6e0, 0x697e, 0x6a53, 0xb191, 0x1, 0x1);
        gbc.writeMem(0x49a3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x45af, gbc.sp());
        EXPECT(0x49a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0273
        gbc.setState(0x7a12, 0x2986, 0x8a10, 0xc6f6, 0xcfe7, 0xd98f, 0x1, 0x0);
        gbc.writeMem(0x7a12, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2986, gbc.sp());
        EXPECT(0x7a14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0274
        gbc.setState(0x7ea1, 0x3fc9, 0x9d30, 0xb4b7, 0xe205, 0xb439, 0x0, 0x1);
        gbc.writeMem(0x7ea1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3fc9, gbc.sp());
        EXPECT(0x7ea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0275
        gbc.setState(0xea8e, 0x4893, 0xcdf0, 0x2e50, 0xad81, 0x7d89, 0x0, 0x0);
        gbc.writeMem(0xea8e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4893, gbc.sp());
        EXPECT(0xea90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea8e));
        EXPECT(0xbd, gbc.readMem(0xea8f));
        // CB BD 0276
        gbc.setState(0x23d2, 0x3e5a, 0xa540, 0x6b9d, 0xf815, 0x9aa9, 0x0, 0x1);
        gbc.writeMem(0x23d2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3e5a, gbc.sp());
        EXPECT(0x23d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0277
        gbc.setState(0xcfd1, 0xf250, 0x6840, 0xccce, 0xbd23, 0x867a, 0x0, 0x0);
        gbc.writeMem(0xcfd1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf250, gbc.sp());
        EXPECT(0xcfd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd1));
        EXPECT(0xbd, gbc.readMem(0xcfd2));
        // CB BD 0279
        gbc.setState(0xec11, 0xb81e, 0xc00, 0x4d2, 0x67ed, 0xb0ef, 0x0, 0x1);
        gbc.writeMem(0xec11, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb81e, gbc.sp());
        EXPECT(0xec13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec11));
        EXPECT(0xbd, gbc.readMem(0xec12));
        // CB BD 027A
        gbc.setState(0x3e4a, 0xd48f, 0xa3c0, 0x858a, 0x737c, 0xace6, 0x0, 0x1);
        gbc.writeMem(0x3e4a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd48f, gbc.sp());
        EXPECT(0x3e4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 027B
        gbc.setState(0x7753, 0x98d5, 0x4400, 0x60d4, 0xea, 0x6314, 0x0, 0x0);
        gbc.writeMem(0x7753, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x98d5, gbc.sp());
        EXPECT(0x7755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 027C
        gbc.setState(0x5c6c, 0x797d, 0x8890, 0x7378, 0x56cf, 0x5480, 0x1, 0x0);
        gbc.writeMem(0x5c6c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x797d, gbc.sp());
        EXPECT(0x5c6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 027D
        gbc.setState(0xd26e, 0xd1bd, 0x20c0, 0x4ade, 0x6906, 0xc0bd, 0x1, 0x1);
        gbc.writeMem(0xd26e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd1bd, gbc.sp());
        EXPECT(0xd270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd26e));
        EXPECT(0xbd, gbc.readMem(0xd26f));
        // CB BD 027E
        gbc.setState(0x7c5e, 0x8dd6, 0x4700, 0x8bdd, 0xf1e6, 0xc5cf, 0x1, 0x0);
        gbc.writeMem(0x7c5e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8dd6, gbc.sp());
        EXPECT(0x7c60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 027F
        gbc.setState(0x93eb, 0x5f49, 0xbaa0, 0x604c, 0xa18a, 0x85b2, 0x0, 0x1);
        gbc.writeMem(0x93eb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5f49, gbc.sp());
        EXPECT(0x93ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93eb));
        EXPECT(0xbd, gbc.readMem(0x93ec));
        // CB BD 0280
        gbc.setState(0xdf51, 0xa182, 0x2350, 0x741a, 0x9f63, 0xc7ff, 0x1, 0x0);
        gbc.writeMem(0xdf51, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa182, gbc.sp());
        EXPECT(0xdf53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf51));
        EXPECT(0xbd, gbc.readMem(0xdf52));
        // CB BD 0281
        gbc.setState(0x2828, 0xd98a, 0x54a0, 0xd2dc, 0x54b0, 0x28a1, 0x0, 0x1);
        gbc.writeMem(0x2828, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd98a, gbc.sp());
        EXPECT(0x282a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0282
        gbc.setState(0xe5d8, 0xe5ef, 0x85a0, 0x7a8, 0xca31, 0x249e, 0x1, 0x0);
        gbc.writeMem(0xe5d8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe5ef, gbc.sp());
        EXPECT(0xe5da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d8));
        EXPECT(0xbd, gbc.readMem(0xe5d9));
        // CB BD 0283
        gbc.setState(0x6433, 0x72d, 0x9150, 0xd7fd, 0xf566, 0x45fa, 0x0, 0x0);
        gbc.writeMem(0x6433, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x72d, gbc.sp());
        EXPECT(0x6435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0284
        gbc.setState(0x69c4, 0x14c2, 0x5ca0, 0x683e, 0x71f, 0xaee8, 0x1, 0x1);
        gbc.writeMem(0x69c4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x14c2, gbc.sp());
        EXPECT(0x69c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0285
        gbc.setState(0x5d84, 0xd3cc, 0x3290, 0x6af3, 0x91fc, 0xeccd, 0x0, 0x1);
        gbc.writeMem(0x5d84, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd3cc, gbc.sp());
        EXPECT(0x5d86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0286
        gbc.setState(0xa6ce, 0x1a43, 0xcf30, 0x63a1, 0x6a00, 0x9476, 0x0, 0x1);
        gbc.writeMem(0xa6ce, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1a43, gbc.sp());
        EXPECT(0xa6d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ce));
        EXPECT(0xbd, gbc.readMem(0xa6cf));
        // CB BD 0287
        gbc.setState(0xa502, 0x753c, 0x26e0, 0x1e23, 0x330c, 0xed5e, 0x1, 0x1);
        gbc.writeMem(0xa502, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x753c, gbc.sp());
        EXPECT(0xa504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa502));
        EXPECT(0xbd, gbc.readMem(0xa503));
        // CB BD 0288
        gbc.setState(0x4b84, 0x41a7, 0x8b40, 0xd947, 0x76e2, 0x162c, 0x1, 0x0);
        gbc.writeMem(0x4b84, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x41a7, gbc.sp());
        EXPECT(0x4b86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0289
        gbc.setState(0x4649, 0x104f, 0x9af0, 0x2c18, 0x65d5, 0xa4b1, 0x1, 0x1);
        gbc.writeMem(0x4649, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x104f, gbc.sp());
        EXPECT(0x464b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 028A
        gbc.setState(0x3f59, 0x8335, 0x1500, 0x5acf, 0x5b86, 0x4545, 0x0, 0x0);
        gbc.writeMem(0x3f59, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8335, gbc.sp());
        EXPECT(0x3f5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 028B
        gbc.setState(0xa259, 0x96d9, 0x4010, 0x1573, 0xe738, 0x458d, 0x1, 0x1);
        gbc.writeMem(0xa259, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x96d9, gbc.sp());
        EXPECT(0xa25b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa259));
        EXPECT(0xbd, gbc.readMem(0xa25a));
        // CB BD 028C
        gbc.setState(0x4add, 0xe17b, 0xaa60, 0x4d11, 0x1b8a, 0x9209, 0x0, 0x1);
        gbc.writeMem(0x4add, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe17b, gbc.sp());
        EXPECT(0x4adf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 028D
        gbc.setState(0x17ae, 0x9211, 0xa60, 0x594b, 0xa75e, 0xd314, 0x1, 0x1);
        gbc.writeMem(0x17ae, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9211, gbc.sp());
        EXPECT(0x17b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 028E
        gbc.setState(0x7dc5, 0x2cb3, 0x3850, 0xb88e, 0xdc86, 0xe2a5, 0x0, 0x1);
        gbc.writeMem(0x7dc5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2cb3, gbc.sp());
        EXPECT(0x7dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 028F
        gbc.setState(0x40e7, 0xf313, 0xcdd0, 0x7704, 0x83db, 0x8c90, 0x0, 0x0);
        gbc.writeMem(0x40e7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf313, gbc.sp());
        EXPECT(0x40e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0290
        gbc.setState(0xe028, 0x2cf9, 0xabd0, 0xf213, 0x7d5f, 0xce49, 0x1, 0x0);
        gbc.writeMem(0xe028, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2cf9, gbc.sp());
        EXPECT(0xe02a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe028));
        EXPECT(0xbd, gbc.readMem(0xe029));
        // CB BD 0291
        gbc.setState(0x5bc0, 0x15a5, 0xc3b0, 0xd748, 0x7bff, 0xad57, 0x1, 0x0);
        gbc.writeMem(0x5bc0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x15a5, gbc.sp());
        EXPECT(0x5bc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0292
        gbc.setState(0x9935, 0x721d, 0x34c0, 0xda50, 0x591f, 0x4049, 0x0, 0x1);
        gbc.writeMem(0x9935, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x721d, gbc.sp());
        EXPECT(0x9937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9935));
        EXPECT(0xbd, gbc.readMem(0x9936));
        // CB BD 0294
        gbc.setState(0x819, 0x82bd, 0xd290, 0x244f, 0xb23b, 0x2fe1, 0x0, 0x0);
        gbc.writeMem(0x819, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x82bd, gbc.sp());
        EXPECT(0x81b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0295
        gbc.setState(0xc7f0, 0xa9d1, 0x4710, 0xab45, 0x7191, 0x33b2, 0x1, 0x0);
        gbc.writeMem(0xc7f0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa9d1, gbc.sp());
        EXPECT(0xc7f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7f0));
        EXPECT(0xbd, gbc.readMem(0xc7f1));
        // CB BD 0296
        gbc.setState(0xcc40, 0x24ab, 0xa650, 0x1634, 0xe742, 0x28d9, 0x1, 0x0);
        gbc.writeMem(0xcc40, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x24ab, gbc.sp());
        EXPECT(0xcc42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc40));
        EXPECT(0xbd, gbc.readMem(0xcc41));
        // CB BD 0297
        gbc.setState(0x81d1, 0x74b5, 0x6790, 0xb146, 0xc8e5, 0x9aad, 0x0, 0x0);
        gbc.writeMem(0x81d1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x74b5, gbc.sp());
        EXPECT(0x81d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81d1));
        EXPECT(0xbd, gbc.readMem(0x81d2));
        // CB BD 0298
        gbc.setState(0x507d, 0x38c2, 0x5a80, 0xe96e, 0xe4c6, 0x4a47, 0x0, 0x0);
        gbc.writeMem(0x507d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x38c2, gbc.sp());
        EXPECT(0x507f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0299
        gbc.setState(0xccf3, 0xcf13, 0x2010, 0xb1b2, 0xce9f, 0x8d12, 0x0, 0x0);
        gbc.writeMem(0xccf3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xcf13, gbc.sp());
        EXPECT(0xccf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf3));
        EXPECT(0xbd, gbc.readMem(0xccf4));
        // CB BD 029A
        gbc.setState(0xbf65, 0x4ce7, 0xd0b0, 0x7095, 0xcb2, 0xa7bf, 0x0, 0x1);
        gbc.writeMem(0xbf65, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4ce7, gbc.sp());
        EXPECT(0xbf67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf65));
        EXPECT(0xbd, gbc.readMem(0xbf66));
        // CB BD 029B
        gbc.setState(0xbd54, 0xddcb, 0x3cf0, 0x5afc, 0x129f, 0x46b5, 0x0, 0x1);
        gbc.writeMem(0xbd54, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xddcb, gbc.sp());
        EXPECT(0xbd56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd54));
        EXPECT(0xbd, gbc.readMem(0xbd55));
        // CB BD 029C
        gbc.setState(0xccdb, 0x2911, 0xb8f0, 0x2c1b, 0x9a98, 0x3ae, 0x1, 0x0);
        gbc.writeMem(0xccdb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2911, gbc.sp());
        EXPECT(0xccdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccdb));
        EXPECT(0xbd, gbc.readMem(0xccdc));
        // CB BD 029D
        gbc.setState(0x9986, 0xe408, 0x6670, 0xcbc3, 0x3208, 0x421b, 0x1, 0x1);
        gbc.writeMem(0x9986, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe408, gbc.sp());
        EXPECT(0x9988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9986));
        EXPECT(0xbd, gbc.readMem(0x9987));
        // CB BD 029E
        gbc.setState(0xbdf5, 0xb434, 0xe940, 0x27d, 0xeab7, 0x6642, 0x0, 0x1);
        gbc.writeMem(0xbdf5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb434, gbc.sp());
        EXPECT(0xbdf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf5));
        EXPECT(0xbd, gbc.readMem(0xbdf6));
        // CB BD 029F
        gbc.setState(0x63e3, 0x5dd5, 0xaf40, 0xfb01, 0x57dc, 0xb8a4, 0x0, 0x1);
        gbc.writeMem(0x63e3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5dd5, gbc.sp());
        EXPECT(0x63e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02A0
        gbc.setState(0xd844, 0x25b3, 0xc0b0, 0xd4f0, 0x9e65, 0x3be7, 0x0, 0x1);
        gbc.writeMem(0xd844, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x25b3, gbc.sp());
        EXPECT(0xd846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd844));
        EXPECT(0xbd, gbc.readMem(0xd845));
        // CB BD 02A1
        gbc.setState(0x4ca, 0xcc12, 0x2120, 0x6abe, 0x8c9a, 0xf66c, 0x1, 0x1);
        gbc.writeMem(0x4ca, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcc12, gbc.sp());
        EXPECT(0x4cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02A2
        gbc.setState(0x5f83, 0x6f1a, 0xa7c0, 0xed12, 0xc20c, 0xd41d, 0x0, 0x1);
        gbc.writeMem(0x5f83, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6f1a, gbc.sp());
        EXPECT(0x5f85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02A3
        gbc.setState(0xd99c, 0x4b6e, 0xee80, 0x3c97, 0xefcd, 0x402, 0x0, 0x0);
        gbc.writeMem(0xd99c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4b6e, gbc.sp());
        EXPECT(0xd99e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd99c));
        EXPECT(0xbd, gbc.readMem(0xd99d));
        // CB BD 02A4
        gbc.setState(0xca7e, 0x2b3e, 0x84b0, 0x9101, 0x4a92, 0x7a0, 0x1, 0x0);
        gbc.writeMem(0xca7e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2b3e, gbc.sp());
        EXPECT(0xca80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca7e));
        EXPECT(0xbd, gbc.readMem(0xca7f));
        // CB BD 02A5
        gbc.setState(0xef3f, 0xf661, 0xc2d0, 0x35d7, 0xb712, 0x938, 0x1, 0x0);
        gbc.writeMem(0xef3f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf661, gbc.sp());
        EXPECT(0xef41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef3f));
        EXPECT(0xbd, gbc.readMem(0xef40));
        // CB BD 02A6
        gbc.setState(0x59ca, 0x6e5f, 0x8200, 0xae85, 0xe447, 0x4660, 0x1, 0x0);
        gbc.writeMem(0x59ca, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6e5f, gbc.sp());
        EXPECT(0x59cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02A7
        gbc.setState(0x976f, 0x270, 0x2280, 0xfc8b, 0x5503, 0x86bc, 0x0, 0x1);
        gbc.writeMem(0x976f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x270, gbc.sp());
        EXPECT(0x9771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x976f));
        EXPECT(0xbd, gbc.readMem(0x9770));
        // CB BD 02A8
        gbc.setState(0x403d, 0x56fd, 0x8da0, 0x8a74, 0xea04, 0xbd27, 0x1, 0x1);
        gbc.writeMem(0x403d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x56fd, gbc.sp());
        EXPECT(0x403f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02A9
        gbc.setState(0xdeb2, 0xc168, 0xc8c0, 0xee75, 0xd324, 0x6734, 0x0, 0x0);
        gbc.writeMem(0xdeb2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc168, gbc.sp());
        EXPECT(0xdeb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeb2));
        EXPECT(0xbd, gbc.readMem(0xdeb3));
        // CB BD 02AB
        gbc.setState(0x3dbf, 0xf21f, 0x4790, 0x6249, 0xb2f0, 0x51a, 0x0, 0x0);
        gbc.writeMem(0x3dbf, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf21f, gbc.sp());
        EXPECT(0x3dc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02AC
        gbc.setState(0x1232, 0x2536, 0x2100, 0x5971, 0xf532, 0xb592, 0x0, 0x0);
        gbc.writeMem(0x1232, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2536, gbc.sp());
        EXPECT(0x1234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02AD
        gbc.setState(0x7433, 0x3a56, 0x3ad0, 0xfc39, 0xe20, 0xf3a5, 0x0, 0x1);
        gbc.writeMem(0x7433, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3a56, gbc.sp());
        EXPECT(0x7435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02AF
        gbc.setState(0xc53, 0x6462, 0x960, 0x1d14, 0x6661, 0xf5b5, 0x0, 0x0);
        gbc.writeMem(0xc53, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6462, gbc.sp());
        EXPECT(0xc55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02B0
        gbc.setState(0x54a1, 0x1419, 0xddb0, 0x433, 0xc419, 0x1ce2, 0x0, 0x0);
        gbc.writeMem(0x54a1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1419, gbc.sp());
        EXPECT(0x54a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02B1
        gbc.setState(0x6738, 0xd267, 0xc9f0, 0xecf5, 0x277e, 0x65c3, 0x1, 0x0);
        gbc.writeMem(0x6738, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd267, gbc.sp());
        EXPECT(0x673a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02B2
        gbc.setState(0x1287, 0x8c68, 0x4d10, 0x8d38, 0x6136, 0xa297, 0x0, 0x1);
        gbc.writeMem(0x1287, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8c68, gbc.sp());
        EXPECT(0x1289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02B3
        gbc.setState(0x7a5c, 0xc190, 0x1d50, 0x668d, 0xeaa3, 0x7cba, 0x1, 0x0);
        gbc.writeMem(0x7a5c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc190, gbc.sp());
        EXPECT(0x7a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02B4
        gbc.setState(0xd706, 0x30b6, 0x1d80, 0x19da, 0x4d37, 0x65f9, 0x0, 0x1);
        gbc.writeMem(0xd706, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x30b6, gbc.sp());
        EXPECT(0xd708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd706));
        EXPECT(0xbd, gbc.readMem(0xd707));
        // CB BD 02B5
        gbc.setState(0x9c15, 0xf126, 0x20e0, 0xe280, 0x974f, 0xbbe9, 0x0, 0x0);
        gbc.writeMem(0x9c15, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf126, gbc.sp());
        EXPECT(0x9c17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c15));
        EXPECT(0xbd, gbc.readMem(0x9c16));
        // CB BD 02B6
        gbc.setState(0xddf, 0x920b, 0xc9c0, 0xa0d6, 0x22e6, 0xaf0, 0x0, 0x0);
        gbc.writeMem(0xddf, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x920b, gbc.sp());
        EXPECT(0xde1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02B7
        gbc.setState(0x53e1, 0x83e2, 0xb580, 0x91ad, 0xb6fb, 0x9f3e, 0x1, 0x0);
        gbc.writeMem(0x53e1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x83e2, gbc.sp());
        EXPECT(0x53e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02B8
        gbc.setState(0x91f, 0xac78, 0xce90, 0x4cd8, 0x9aaa, 0xd1a9, 0x0, 0x1);
        gbc.writeMem(0x91f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xac78, gbc.sp());
        EXPECT(0x921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02B9
        gbc.setState(0x716f, 0xbb27, 0xed90, 0x57f6, 0x6284, 0x8aa, 0x0, 0x1);
        gbc.writeMem(0x716f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xbb27, gbc.sp());
        EXPECT(0x7171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02BA
        gbc.setState(0x17b1, 0xf666, 0xa3b0, 0x157b, 0x9285, 0x75c2, 0x1, 0x0);
        gbc.writeMem(0x17b1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf666, gbc.sp());
        EXPECT(0x17b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02BB
        gbc.setState(0x736a, 0x15a7, 0xb5e0, 0xd309, 0xa8, 0xd8cb, 0x0, 0x0);
        gbc.writeMem(0x736a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x15a7, gbc.sp());
        EXPECT(0x736c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02BC
        gbc.setState(0xcff9, 0x7b84, 0x5960, 0x8a4f, 0x87c7, 0x46a9, 0x1, 0x0);
        gbc.writeMem(0xcff9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7b84, gbc.sp());
        EXPECT(0xcffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcff9));
        EXPECT(0xbd, gbc.readMem(0xcffa));
        // CB BD 02BD
        gbc.setState(0xc3a1, 0x28b2, 0xca30, 0x7e2f, 0x4427, 0x9530, 0x1, 0x1);
        gbc.writeMem(0xc3a1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x28b2, gbc.sp());
        EXPECT(0xc3a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3a1));
        EXPECT(0xbd, gbc.readMem(0xc3a2));
        // CB BD 02BE
        gbc.setState(0x18c9, 0x1fa5, 0x5db0, 0x1413, 0xafe3, 0x635b, 0x1, 0x1);
        gbc.writeMem(0x18c9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1fa5, gbc.sp());
        EXPECT(0x18cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02BF
        gbc.setState(0xf7, 0xa097, 0x88c0, 0xdf8d, 0x6968, 0x8584, 0x0, 0x1);
        gbc.writeMem(0xf7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa097, gbc.sp());
        EXPECT(0xf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02C0
        gbc.setState(0x696d, 0xf65e, 0xa820, 0xf098, 0x92d, 0x566d, 0x0, 0x1);
        gbc.writeMem(0x696d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf65e, gbc.sp());
        EXPECT(0x696f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02C1
        gbc.setState(0x610e, 0x6175, 0x89c0, 0xb984, 0x7677, 0xec2d, 0x1, 0x1);
        gbc.writeMem(0x610e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6175, gbc.sp());
        EXPECT(0x6110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02C2
        gbc.setState(0xd532, 0x912e, 0x6170, 0x4f77, 0x5b94, 0x7447, 0x0, 0x0);
        gbc.writeMem(0xd532, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x912e, gbc.sp());
        EXPECT(0xd534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd532));
        EXPECT(0xbd, gbc.readMem(0xd533));
        // CB BD 02C3
        gbc.setState(0x352c, 0xd203, 0x1cb0, 0xf3, 0x947a, 0x1967, 0x1, 0x1);
        gbc.writeMem(0x352c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd203, gbc.sp());
        EXPECT(0x352e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02C4
        gbc.setState(0x7a01, 0xd34a, 0xb2d0, 0xdd76, 0x2d1f, 0x805, 0x0, 0x1);
        gbc.writeMem(0x7a01, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd34a, gbc.sp());
        EXPECT(0x7a03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02C5
        gbc.setState(0x46dd, 0x1a5e, 0xf810, 0xc8f8, 0x5e09, 0x7ec9, 0x1, 0x1);
        gbc.writeMem(0x46dd, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1a5e, gbc.sp());
        EXPECT(0x46df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02C6
        gbc.setState(0x492a, 0xd0aa, 0x76a0, 0x9c42, 0x5e48, 0x73f8, 0x1, 0x0);
        gbc.writeMem(0x492a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd0aa, gbc.sp());
        EXPECT(0x492c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02C7
        gbc.setState(0x1631, 0xf7ec, 0x4810, 0xa2f0, 0x95ab, 0x2fa6, 0x1, 0x0);
        gbc.writeMem(0x1631, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf7ec, gbc.sp());
        EXPECT(0x1633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02C8
        gbc.setState(0x6bf4, 0xaeab, 0x3e20, 0x4c8b, 0xc13a, 0x114d, 0x1, 0x0);
        gbc.writeMem(0x6bf4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xaeab, gbc.sp());
        EXPECT(0x6bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02C9
        gbc.setState(0x51d6, 0xab78, 0xf090, 0xe548, 0x76, 0xc6ba, 0x0, 0x1);
        gbc.writeMem(0x51d6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xab78, gbc.sp());
        EXPECT(0x51d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02CA
        gbc.setState(0x8c9e, 0xeaf8, 0xf0a0, 0x394b, 0xc696, 0x1ea0, 0x0, 0x1);
        gbc.writeMem(0x8c9e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xeaf8, gbc.sp());
        EXPECT(0x8ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c9e));
        EXPECT(0xbd, gbc.readMem(0x8c9f));
        // CB BD 02CB
        gbc.setState(0x7681, 0xc627, 0xd320, 0xba6d, 0x2165, 0x25b3, 0x1, 0x1);
        gbc.writeMem(0x7681, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc627, gbc.sp());
        EXPECT(0x7683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02CD
        gbc.setState(0x5f5a, 0x6aa8, 0xb310, 0xcaac, 0x5396, 0xc58b, 0x1, 0x1);
        gbc.writeMem(0x5f5a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6aa8, gbc.sp());
        EXPECT(0x5f5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02CE
        gbc.setState(0xe154, 0xc5d1, 0x7110, 0x8380, 0xc057, 0xf82f, 0x1, 0x1);
        gbc.writeMem(0xe154, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc5d1, gbc.sp());
        EXPECT(0xe156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe154));
        EXPECT(0xbd, gbc.readMem(0xe155));
        // CB BD 02CF
        gbc.setState(0x1405, 0x39d4, 0x9290, 0x8535, 0xb7f5, 0xed84, 0x1, 0x1);
        gbc.writeMem(0x1405, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x39d4, gbc.sp());
        EXPECT(0x1407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02D1
        gbc.setState(0xaa86, 0x41f1, 0xbbb0, 0xff00, 0x149, 0xfccc, 0x0, 0x1);
        gbc.writeMem(0xaa86, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x41f1, gbc.sp());
        EXPECT(0xaa88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa86));
        EXPECT(0xbd, gbc.readMem(0xaa87));
        // CB BD 02D3
        gbc.setState(0xe62c, 0xaab1, 0x9810, 0xe2ff, 0x6161, 0x545f, 0x1, 0x0);
        gbc.writeMem(0xe62c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xaab1, gbc.sp());
        EXPECT(0xe62e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe62c));
        EXPECT(0xbd, gbc.readMem(0xe62d));
        // CB BD 02D4
        gbc.setState(0x5d1b, 0x3fb, 0xd580, 0x98d0, 0x8113, 0xc00f, 0x0, 0x0);
        gbc.writeMem(0x5d1b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3fb, gbc.sp());
        EXPECT(0x5d1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02D5
        gbc.setState(0xeb57, 0x6632, 0x9fc0, 0x7a6c, 0x5270, 0xe4c9, 0x1, 0x1);
        gbc.writeMem(0xeb57, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6632, gbc.sp());
        EXPECT(0xeb59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb57));
        EXPECT(0xbd, gbc.readMem(0xeb58));
        // CB BD 02D6
        gbc.setState(0x1d42, 0x467b, 0x9870, 0xcd5f, 0xc505, 0x1317, 0x1, 0x1);
        gbc.writeMem(0x1d42, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x467b, gbc.sp());
        EXPECT(0x1d44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02D7
        gbc.setState(0x3c7c, 0x2fbf, 0x6b40, 0xc954, 0x8d84, 0x9c80, 0x1, 0x0);
        gbc.writeMem(0x3c7c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2fbf, gbc.sp());
        EXPECT(0x3c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02D8
        gbc.setState(0x5d68, 0xc846, 0xa210, 0xa426, 0x41d2, 0xcd9c, 0x0, 0x0);
        gbc.writeMem(0x5d68, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc846, gbc.sp());
        EXPECT(0x5d6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02D9
        gbc.setState(0xdb99, 0x6d74, 0xf8c0, 0x2b6a, 0xc21e, 0x2d5f, 0x1, 0x1);
        gbc.writeMem(0xdb99, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6d74, gbc.sp());
        EXPECT(0xdb9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb99));
        EXPECT(0xbd, gbc.readMem(0xdb9a));
        // CB BD 02DA
        gbc.setState(0x42da, 0x3669, 0x6110, 0x1ed2, 0x72f6, 0x930e, 0x0, 0x1);
        gbc.writeMem(0x42da, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3669, gbc.sp());
        EXPECT(0x42dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02DB
        gbc.setState(0x4372, 0x42f7, 0xc720, 0xa227, 0xbf12, 0xe536, 0x0, 0x1);
        gbc.writeMem(0x4372, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x42f7, gbc.sp());
        EXPECT(0x4374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02DC
        gbc.setState(0x3892, 0x8c84, 0x6990, 0x6cc1, 0x654c, 0xf940, 0x1, 0x0);
        gbc.writeMem(0x3892, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8c84, gbc.sp());
        EXPECT(0x3894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02DD
        gbc.setState(0x811a, 0xbfbc, 0x6f60, 0xbd5c, 0xa16, 0x1947, 0x0, 0x1);
        gbc.writeMem(0x811a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbfbc, gbc.sp());
        EXPECT(0x811c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x811a));
        EXPECT(0xbd, gbc.readMem(0x811b));
        // CB BD 02DF
        gbc.setState(0xe722, 0x7349, 0x89b0, 0x750, 0xc8f1, 0xfab7, 0x1, 0x1);
        gbc.writeMem(0xe722, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7349, gbc.sp());
        EXPECT(0xe724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe722));
        EXPECT(0xbd, gbc.readMem(0xe723));
        // CB BD 02E0
        gbc.setState(0x8126, 0xf4a9, 0x4780, 0x2aaf, 0x9f8c, 0x5cc1, 0x0, 0x0);
        gbc.writeMem(0x8126, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf4a9, gbc.sp());
        EXPECT(0x8128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8126));
        EXPECT(0xbd, gbc.readMem(0x8127));
        // CB BD 02E1
        gbc.setState(0xf26, 0x9c4c, 0x9650, 0x3765, 0xcd24, 0xf5aa, 0x0, 0x1);
        gbc.writeMem(0xf26, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9c4c, gbc.sp());
        EXPECT(0xf28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02E2
        gbc.setState(0x91e6, 0xe26a, 0x7100, 0xee67, 0x1738, 0x512d, 0x0, 0x0);
        gbc.writeMem(0x91e6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe26a, gbc.sp());
        EXPECT(0x91e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91e6));
        EXPECT(0xbd, gbc.readMem(0x91e7));
        // CB BD 02E3
        gbc.setState(0xbd4c, 0x52e0, 0xd140, 0x425f, 0x858c, 0x5bec, 0x0, 0x0);
        gbc.writeMem(0xbd4c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x52e0, gbc.sp());
        EXPECT(0xbd4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd4c));
        EXPECT(0xbd, gbc.readMem(0xbd4d));
        // CB BD 02E4
        gbc.setState(0x27e1, 0x2b39, 0xf360, 0x9fcf, 0x5cee, 0xbb1, 0x1, 0x0);
        gbc.writeMem(0x27e1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2b39, gbc.sp());
        EXPECT(0x27e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02E5
        gbc.setState(0x5cc6, 0xe06a, 0x73e0, 0xac0c, 0x3af9, 0x6def, 0x1, 0x1);
        gbc.writeMem(0x5cc6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe06a, gbc.sp());
        EXPECT(0x5cc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02E6
        gbc.setState(0x4123, 0x5ab0, 0x9200, 0x79b7, 0xc868, 0x666f, 0x1, 0x0);
        gbc.writeMem(0x4123, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5ab0, gbc.sp());
        EXPECT(0x4125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02E7
        gbc.setState(0x17ae, 0x4aee, 0xd310, 0xcf75, 0x3672, 0x750b, 0x0, 0x0);
        gbc.writeMem(0x17ae, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4aee, gbc.sp());
        EXPECT(0x17b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02E8
        gbc.setState(0xc3aa, 0x1465, 0xa0a0, 0x59cc, 0xd741, 0xcc30, 0x0, 0x1);
        gbc.writeMem(0xc3aa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1465, gbc.sp());
        EXPECT(0xc3ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3aa));
        EXPECT(0xbd, gbc.readMem(0xc3ab));
        // CB BD 02E9
        gbc.setState(0x9606, 0xe4e9, 0xad50, 0xa849, 0x9d71, 0x17f5, 0x0, 0x0);
        gbc.writeMem(0x9606, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe4e9, gbc.sp());
        EXPECT(0x9608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9606));
        EXPECT(0xbd, gbc.readMem(0x9607));
        // CB BD 02EA
        gbc.setState(0x9d12, 0xae87, 0x3bb0, 0x8424, 0x24ac, 0xeea3, 0x0, 0x1);
        gbc.writeMem(0x9d12, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xae87, gbc.sp());
        EXPECT(0x9d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d12));
        EXPECT(0xbd, gbc.readMem(0x9d13));
        // CB BD 02EB
        gbc.setState(0x1d6c, 0xb93a, 0x8900, 0xa72e, 0x2e8d, 0xdcfb, 0x0, 0x0);
        gbc.writeMem(0x1d6c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb93a, gbc.sp());
        EXPECT(0x1d6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02EC
        gbc.setState(0xae59, 0x4e8f, 0xd900, 0xd1ec, 0x14bf, 0xddd3, 0x1, 0x0);
        gbc.writeMem(0xae59, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4e8f, gbc.sp());
        EXPECT(0xae5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae59));
        EXPECT(0xbd, gbc.readMem(0xae5a));
        // CB BD 02ED
        gbc.setState(0xa0fe, 0x6472, 0x1e00, 0xd0d0, 0x453c, 0x7b40, 0x1, 0x0);
        gbc.writeMem(0xa0fe, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6472, gbc.sp());
        EXPECT(0xa100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0fe));
        EXPECT(0xbd, gbc.readMem(0xa0ff));
        // CB BD 02EE
        gbc.setState(0xaaf6, 0x2d9, 0x2b00, 0x2889, 0x9c14, 0xb836, 0x0, 0x1);
        gbc.writeMem(0xaaf6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2d9, gbc.sp());
        EXPECT(0xaaf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf6));
        EXPECT(0xbd, gbc.readMem(0xaaf7));
        // CB BD 02EF
        gbc.setState(0xbce, 0x27a5, 0xaa0, 0xe905, 0x3c2, 0xa1eb, 0x1, 0x1);
        gbc.writeMem(0xbce, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x27a5, gbc.sp());
        EXPECT(0xbd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02F0
        gbc.setState(0x1fe3, 0xb5f6, 0x3ac0, 0x42f7, 0x6d67, 0xdb1d, 0x1, 0x1);
        gbc.writeMem(0x1fe3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb5f6, gbc.sp());
        EXPECT(0x1fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02F1
        gbc.setState(0xe3af, 0x3e5e, 0xefd0, 0xc5bd, 0xa1f8, 0xac92, 0x0, 0x0);
        gbc.writeMem(0xe3af, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3e5e, gbc.sp());
        EXPECT(0xe3b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3af));
        EXPECT(0xbd, gbc.readMem(0xe3b0));
        // CB BD 02F2
        gbc.setState(0x33c8, 0xf054, 0x18f0, 0x7c54, 0x55f9, 0x5be8, 0x0, 0x0);
        gbc.writeMem(0x33c8, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf054, gbc.sp());
        EXPECT(0x33ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 02F3
        gbc.setState(0x9515, 0x29fe, 0x6310, 0x2f92, 0xefd0, 0x53ee, 0x1, 0x1);
        gbc.writeMem(0x9515, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x29fe, gbc.sp());
        EXPECT(0x9517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9515));
        EXPECT(0xbd, gbc.readMem(0x9516));
        // CB BD 02F4
        gbc.setState(0x7cf0, 0x93d9, 0xdbe0, 0xf350, 0x5e41, 0xb083, 0x0, 0x0);
        gbc.writeMem(0x7cf0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x93d9, gbc.sp());
        EXPECT(0x7cf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02F6
        gbc.setState(0x9d3b, 0x15cd, 0xcc40, 0xfced, 0xfab0, 0xa5c, 0x0, 0x1);
        gbc.writeMem(0x9d3b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x15cd, gbc.sp());
        EXPECT(0x9d3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d3b));
        EXPECT(0xbd, gbc.readMem(0x9d3c));
        // CB BD 02F7
        gbc.setState(0x7af5, 0xcd4b, 0x2a00, 0x5029, 0x5005, 0xf02d, 0x1, 0x1);
        gbc.writeMem(0x7af5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xcd4b, gbc.sp());
        EXPECT(0x7af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02F8
        gbc.setState(0xe248, 0xb920, 0x2ff0, 0xc1d4, 0xfcc3, 0xc9cf, 0x0, 0x1);
        gbc.writeMem(0xe248, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb920, gbc.sp());
        EXPECT(0xe24a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe248));
        EXPECT(0xbd, gbc.readMem(0xe249));
        // CB BD 02F9
        gbc.setState(0x4a39, 0x279e, 0x5d20, 0xfdb5, 0x366e, 0x8af7, 0x1, 0x0);
        gbc.writeMem(0x4a39, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x279e, gbc.sp());
        EXPECT(0x4a3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02FA
        gbc.setState(0xee9e, 0x4b3d, 0x4620, 0x6d9d, 0x7aca, 0x1fbd, 0x0, 0x1);
        gbc.writeMem(0xee9e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4b3d, gbc.sp());
        EXPECT(0xeea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee9e));
        EXPECT(0xbd, gbc.readMem(0xee9f));
        // CB BD 02FB
        gbc.setState(0xa428, 0x20da, 0x6980, 0xbfab, 0x4292, 0x26fc, 0x0, 0x1);
        gbc.writeMem(0xa428, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x20da, gbc.sp());
        EXPECT(0xa42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa428));
        EXPECT(0xbd, gbc.readMem(0xa429));
        // CB BD 02FC
        gbc.setState(0xc7a5, 0x94c7, 0x8170, 0xe1fc, 0xffff, 0x8062, 0x1, 0x1);
        gbc.writeMem(0xc7a5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x94c7, gbc.sp());
        EXPECT(0xc7a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a5));
        EXPECT(0xbd, gbc.readMem(0xc7a6));
        // CB BD 02FD
        gbc.setState(0x7c90, 0x1156, 0x4980, 0xdb7d, 0x2cfa, 0xf114, 0x0, 0x1);
        gbc.writeMem(0x7c90, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1156, gbc.sp());
        EXPECT(0x7c92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02FE
        gbc.setState(0x61b9, 0x48b8, 0x1ac0, 0xbd3, 0x1c0b, 0x1acc, 0x0, 0x1);
        gbc.writeMem(0x61b9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x48b8, gbc.sp());
        EXPECT(0x61bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 02FF
        gbc.setState(0x46d5, 0xf986, 0x3770, 0x352b, 0xe468, 0x9177, 0x0, 0x1);
        gbc.writeMem(0x46d5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf986, gbc.sp());
        EXPECT(0x46d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0300
        gbc.setState(0x4407, 0x3427, 0xb5b0, 0xba10, 0x9da0, 0x97fd, 0x0, 0x0);
        gbc.writeMem(0x4407, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3427, gbc.sp());
        EXPECT(0x4409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0301
        gbc.setState(0x2f05, 0x2cb2, 0x8d50, 0x84f1, 0x94e6, 0x3c9, 0x1, 0x1);
        gbc.writeMem(0x2f05, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2cb2, gbc.sp());
        EXPECT(0x2f07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0302
        gbc.setState(0x33da, 0xbf0d, 0x92c0, 0x47e3, 0x5935, 0xfe07, 0x0, 0x1);
        gbc.writeMem(0x33da, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbf0d, gbc.sp());
        EXPECT(0x33dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0303
        gbc.setState(0xe0de, 0x9300, 0x2cd0, 0x4913, 0x3e3d, 0x6967, 0x1, 0x1);
        gbc.writeMem(0xe0de, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9300, gbc.sp());
        EXPECT(0xe0e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0de));
        EXPECT(0xbd, gbc.readMem(0xe0df));
        // CB BD 0304
        gbc.setState(0xa1b2, 0x4a50, 0x70e0, 0x37e8, 0xe2dc, 0x3962, 0x0, 0x1);
        gbc.writeMem(0xa1b2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4a50, gbc.sp());
        EXPECT(0xa1b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b2));
        EXPECT(0xbd, gbc.readMem(0xa1b3));
        // CB BD 0305
        gbc.setState(0x8368, 0xb473, 0x2100, 0xc692, 0xb42d, 0xbd02, 0x1, 0x1);
        gbc.writeMem(0x8368, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb473, gbc.sp());
        EXPECT(0x836a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8368));
        EXPECT(0xbd, gbc.readMem(0x8369));
        // CB BD 0306
        gbc.setState(0x5e54, 0xf64c, 0xd570, 0x1549, 0x4b6, 0xef47, 0x0, 0x0);
        gbc.writeMem(0x5e54, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf64c, gbc.sp());
        EXPECT(0x5e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0307
        gbc.setState(0x697b, 0x4b04, 0x44e0, 0x814d, 0x8ae0, 0xaec, 0x1, 0x0);
        gbc.writeMem(0x697b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4b04, gbc.sp());
        EXPECT(0x697d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0308
        gbc.setState(0xed59, 0x9278, 0x68a0, 0xa7e6, 0x15e3, 0xec00, 0x1, 0x0);
        gbc.writeMem(0xed59, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9278, gbc.sp());
        EXPECT(0xed5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed59));
        EXPECT(0xbd, gbc.readMem(0xed5a));
        // CB BD 0309
        gbc.setState(0x8b6a, 0xaa1d, 0x7bc0, 0x9a9b, 0x82bf, 0xb8bc, 0x1, 0x0);
        gbc.writeMem(0x8b6a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xaa1d, gbc.sp());
        EXPECT(0x8b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b6a));
        EXPECT(0xbd, gbc.readMem(0x8b6b));
        // CB BD 030A
        gbc.setState(0x3891, 0xfa93, 0xb510, 0x3cf6, 0xcce5, 0xac7, 0x0, 0x0);
        gbc.writeMem(0x3891, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfa93, gbc.sp());
        EXPECT(0x3893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 030B
        gbc.setState(0x11e0, 0x640d, 0x2d90, 0x15e2, 0x3e6a, 0xdcd7, 0x1, 0x0);
        gbc.writeMem(0x11e0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x640d, gbc.sp());
        EXPECT(0x11e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 030D
        gbc.setState(0xb0f9, 0xbd15, 0x6530, 0x3938, 0xdd68, 0x47fc, 0x1, 0x0);
        gbc.writeMem(0xb0f9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbd15, gbc.sp());
        EXPECT(0xb0fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f9));
        EXPECT(0xbd, gbc.readMem(0xb0fa));
        // CB BD 030E
        gbc.setState(0xb161, 0x5142, 0x3dc0, 0x3521, 0x4833, 0xdbdf, 0x1, 0x1);
        gbc.writeMem(0xb161, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5142, gbc.sp());
        EXPECT(0xb163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb161));
        EXPECT(0xbd, gbc.readMem(0xb162));
        // CB BD 030F
        gbc.setState(0x8224, 0xc4c4, 0x2c00, 0xd3dd, 0x517a, 0x7ee2, 0x1, 0x1);
        gbc.writeMem(0x8224, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc4c4, gbc.sp());
        EXPECT(0x8226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8224));
        EXPECT(0xbd, gbc.readMem(0x8225));
        // CB BD 0310
        gbc.setState(0x77ef, 0x3980, 0x6310, 0xe40d, 0x3041, 0x3141, 0x0, 0x1);
        gbc.writeMem(0x77ef, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3980, gbc.sp());
        EXPECT(0x77f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0311
        gbc.setState(0x1940, 0x4dde, 0xd6c0, 0xc55e, 0x4a16, 0xa03e, 0x1, 0x1);
        gbc.writeMem(0x1940, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4dde, gbc.sp());
        EXPECT(0x1942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0312
        gbc.setState(0xec2a, 0x4d31, 0x6000, 0xe858, 0xe934, 0x8883, 0x1, 0x0);
        gbc.writeMem(0xec2a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4d31, gbc.sp());
        EXPECT(0xec2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec2a));
        EXPECT(0xbd, gbc.readMem(0xec2b));
        // CB BD 0313
        gbc.setState(0xbec, 0xc110, 0x8010, 0xd282, 0xc0c7, 0x6fc1, 0x0, 0x0);
        gbc.writeMem(0xbec, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc110, gbc.sp());
        EXPECT(0xbee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0314
        gbc.setState(0x11e6, 0xd3a, 0x59a0, 0x4320, 0x3949, 0x6b81, 0x0, 0x0);
        gbc.writeMem(0x11e6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd3a, gbc.sp());
        EXPECT(0x11e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0315
        gbc.setState(0x5217, 0x981a, 0x6ab0, 0x7835, 0x67c9, 0x7e7c, 0x0, 0x0);
        gbc.writeMem(0x5217, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x981a, gbc.sp());
        EXPECT(0x5219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0316
        gbc.setState(0x4004, 0xe569, 0x7cb0, 0xeca2, 0xc015, 0xc640, 0x1, 0x1);
        gbc.writeMem(0x4004, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe569, gbc.sp());
        EXPECT(0x4006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0317
        gbc.setState(0x899, 0xb3b9, 0xf8d0, 0x49e1, 0x65da, 0xd0af, 0x1, 0x1);
        gbc.writeMem(0x899, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb3b9, gbc.sp());
        EXPECT(0x89b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0318
        gbc.setState(0x4522, 0x3def, 0xe8e0, 0x3c24, 0xe848, 0x2fe8, 0x0, 0x0);
        gbc.writeMem(0x4522, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3def, gbc.sp());
        EXPECT(0x4524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0319
        gbc.setState(0x4c89, 0xffb1, 0x4d50, 0x7564, 0x23f2, 0xc4d8, 0x0, 0x0);
        gbc.writeMem(0x4c89, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xffb1, gbc.sp());
        EXPECT(0x4c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 031A
        gbc.setState(0x8cac, 0xc11c, 0x8760, 0xb0ee, 0xeadd, 0x9c21, 0x0, 0x1);
        gbc.writeMem(0x8cac, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc11c, gbc.sp());
        EXPECT(0x8cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cac));
        EXPECT(0xbd, gbc.readMem(0x8cad));
        // CB BD 031B
        gbc.setState(0x2e7b, 0x71c7, 0x10a0, 0x5ec3, 0xa389, 0x49c5, 0x1, 0x0);
        gbc.writeMem(0x2e7b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x71c7, gbc.sp());
        EXPECT(0x2e7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 031C
        gbc.setState(0x7ccd, 0xdb46, 0xda20, 0xf88a, 0x97b, 0xb50b, 0x0, 0x0);
        gbc.writeMem(0x7ccd, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xdb46, gbc.sp());
        EXPECT(0x7ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 031D
        gbc.setState(0x5130, 0xfd76, 0x810, 0x5f4a, 0x538c, 0xfb18, 0x1, 0x1);
        gbc.writeMem(0x5130, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfd76, gbc.sp());
        EXPECT(0x5132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 031F
        gbc.setState(0x56a, 0xd683, 0x7ec0, 0xa55a, 0x3e00, 0xdae9, 0x0, 0x0);
        gbc.writeMem(0x56a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd683, gbc.sp());
        EXPECT(0x56c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0320
        gbc.setState(0x7d2b, 0x3075, 0x8830, 0x1507, 0xa53b, 0x1a60, 0x1, 0x1);
        gbc.writeMem(0x7d2b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3075, gbc.sp());
        EXPECT(0x7d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0321
        gbc.setState(0xeb91, 0x9229, 0x8400, 0xe844, 0x9983, 0xf99c, 0x0, 0x1);
        gbc.writeMem(0xeb91, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9229, gbc.sp());
        EXPECT(0xeb93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb91));
        EXPECT(0xbd, gbc.readMem(0xeb92));
        // CB BD 0322
        gbc.setState(0xa9aa, 0x8dbc, 0x25d0, 0xcf2a, 0x60a6, 0x8f03, 0x1, 0x0);
        gbc.writeMem(0xa9aa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8dbc, gbc.sp());
        EXPECT(0xa9ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9aa));
        EXPECT(0xbd, gbc.readMem(0xa9ab));
        // CB BD 0323
        gbc.setState(0x976c, 0x5b55, 0x90e0, 0xec53, 0xa67b, 0xd737, 0x1, 0x0);
        gbc.writeMem(0x976c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5b55, gbc.sp());
        EXPECT(0x976e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x976c));
        EXPECT(0xbd, gbc.readMem(0x976d));
        // CB BD 0324
        gbc.setState(0x9fa, 0xa17, 0x1d60, 0xbc5c, 0x8216, 0x201b, 0x0, 0x1);
        gbc.writeMem(0x9fa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa17, gbc.sp());
        EXPECT(0x9fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0325
        gbc.setState(0x767b, 0xd1bf, 0xdfa0, 0xa16b, 0xe364, 0xa1a2, 0x0, 0x0);
        gbc.writeMem(0x767b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd1bf, gbc.sp());
        EXPECT(0x767d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0326
        gbc.setState(0xa724, 0x244a, 0xf630, 0xd3dc, 0xbf8a, 0xf53e, 0x0, 0x1);
        gbc.writeMem(0xa724, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x244a, gbc.sp());
        EXPECT(0xa726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa724));
        EXPECT(0xbd, gbc.readMem(0xa725));
        // CB BD 0327
        gbc.setState(0x3948, 0xc40c, 0x5ba0, 0x5985, 0x8d50, 0xa1ec, 0x1, 0x0);
        gbc.writeMem(0x3948, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc40c, gbc.sp());
        EXPECT(0x394a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0328
        gbc.setState(0xe591, 0xb32a, 0xcfb0, 0x84d0, 0x6552, 0x6505, 0x1, 0x1);
        gbc.writeMem(0xe591, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb32a, gbc.sp());
        EXPECT(0xe593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe591));
        EXPECT(0xbd, gbc.readMem(0xe592));
        // CB BD 0329
        gbc.setState(0xbdec, 0x5872, 0x740, 0xd150, 0xd1d1, 0xe487, 0x0, 0x0);
        gbc.writeMem(0xbdec, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5872, gbc.sp());
        EXPECT(0xbdee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdec));
        EXPECT(0xbd, gbc.readMem(0xbded));
        // CB BD 032A
        gbc.setState(0x5fc6, 0x4995, 0xf920, 0xc3ea, 0x9a76, 0x2c4a, 0x0, 0x0);
        gbc.writeMem(0x5fc6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4995, gbc.sp());
        EXPECT(0x5fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 032B
        gbc.setState(0x19ce, 0x9b40, 0x67c0, 0x9adb, 0x33e1, 0x72dc, 0x1, 0x1);
        gbc.writeMem(0x19ce, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9b40, gbc.sp());
        EXPECT(0x19d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 032C
        gbc.setState(0x2fbe, 0xdfef, 0xd120, 0xa6d2, 0x8fc7, 0xd16d, 0x1, 0x0);
        gbc.writeMem(0x2fbe, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xdfef, gbc.sp());
        EXPECT(0x2fc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 032D
        gbc.setState(0x18b4, 0x721, 0x160, 0x6615, 0x2868, 0x9dd7, 0x1, 0x0);
        gbc.writeMem(0x18b4, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x721, gbc.sp());
        EXPECT(0x18b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 032E
        gbc.setState(0x72f3, 0xa799, 0xec50, 0x31e2, 0xf30e, 0x84bc, 0x1, 0x0);
        gbc.writeMem(0x72f3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa799, gbc.sp());
        EXPECT(0x72f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 032F
        gbc.setState(0xae9e, 0x57c, 0xabb0, 0x4c82, 0xeeab, 0x5ec1, 0x0, 0x1);
        gbc.writeMem(0xae9e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x57c, gbc.sp());
        EXPECT(0xaea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae9e));
        EXPECT(0xbd, gbc.readMem(0xae9f));
        // CB BD 0330
        gbc.setState(0x9dd9, 0x6fb9, 0x1840, 0x2999, 0x865b, 0xaeca, 0x1, 0x0);
        gbc.writeMem(0x9dd9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6fb9, gbc.sp());
        EXPECT(0x9ddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dd9));
        EXPECT(0xbd, gbc.readMem(0x9dda));
        // CB BD 0331
        gbc.setState(0x9f91, 0x5c05, 0x7220, 0x2f48, 0x42db, 0xb985, 0x1, 0x0);
        gbc.writeMem(0x9f91, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5c05, gbc.sp());
        EXPECT(0x9f93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f91));
        EXPECT(0xbd, gbc.readMem(0x9f92));
        // CB BD 0332
        gbc.setState(0xb6b, 0x2e0, 0xb640, 0xb8c2, 0xd11e, 0xbf2b, 0x0, 0x0);
        gbc.writeMem(0xb6b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2e0, gbc.sp());
        EXPECT(0xb6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0333
        gbc.setState(0xe0f6, 0xea84, 0x7c00, 0xce28, 0xd5c6, 0x3a88, 0x1, 0x0);
        gbc.writeMem(0xe0f6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xea84, gbc.sp());
        EXPECT(0xe0f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0f6));
        EXPECT(0xbd, gbc.readMem(0xe0f7));
        // CB BD 0334
        gbc.setState(0x19c7, 0x7c8d, 0x3650, 0xe733, 0x1a4, 0x444, 0x0, 0x0);
        gbc.writeMem(0x19c7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7c8d, gbc.sp());
        EXPECT(0x19c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0335
        gbc.setState(0x5844, 0x313, 0xf950, 0xbf05, 0x4ea, 0x9767, 0x1, 0x1);
        gbc.writeMem(0x5844, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x313, gbc.sp());
        EXPECT(0x5846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0336
        gbc.setState(0xc0ca, 0xf90f, 0x3310, 0xb3ab, 0x646f, 0xa631, 0x0, 0x1);
        gbc.writeMem(0xc0ca, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf90f, gbc.sp());
        EXPECT(0xc0cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ca));
        EXPECT(0xbd, gbc.readMem(0xc0cb));
        // CB BD 0337
        gbc.setState(0x9414, 0x45c7, 0x3b20, 0x181a, 0x75e9, 0x9fae, 0x0, 0x1);
        gbc.writeMem(0x9414, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x45c7, gbc.sp());
        EXPECT(0x9416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9414));
        EXPECT(0xbd, gbc.readMem(0x9415));
        // CB BD 0338
        gbc.setState(0xc418, 0x3a36, 0x2160, 0x6063, 0xd460, 0xabf5, 0x1, 0x0);
        gbc.writeMem(0xc418, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3a36, gbc.sp());
        EXPECT(0xc41a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc418));
        EXPECT(0xbd, gbc.readMem(0xc419));
        // CB BD 0339
        gbc.setState(0x4633, 0x485a, 0xd190, 0x866c, 0x6a1c, 0x44d7, 0x1, 0x0);
        gbc.writeMem(0x4633, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x485a, gbc.sp());
        EXPECT(0x4635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 033A
        gbc.setState(0x8e29, 0x596b, 0xc490, 0x370, 0xdaf4, 0xedeb, 0x1, 0x1);
        gbc.writeMem(0x8e29, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x596b, gbc.sp());
        EXPECT(0x8e2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e29));
        EXPECT(0xbd, gbc.readMem(0x8e2a));
        // CB BD 033B
        gbc.setState(0x3dd0, 0x7ea4, 0xbc40, 0x1e1e, 0x5e13, 0x8d5d, 0x0, 0x0);
        gbc.writeMem(0x3dd0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7ea4, gbc.sp());
        EXPECT(0x3dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 033C
        gbc.setState(0xc678, 0xa23e, 0xa680, 0xd7f8, 0x78a1, 0x6c19, 0x0, 0x0);
        gbc.writeMem(0xc678, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa23e, gbc.sp());
        EXPECT(0xc67a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc678));
        EXPECT(0xbd, gbc.readMem(0xc679));
        // CB BD 033D
        gbc.setState(0x6b88, 0xfd8a, 0x96f0, 0xfc1b, 0xbbc8, 0x578d, 0x0, 0x1);
        gbc.writeMem(0x6b88, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xfd8a, gbc.sp());
        EXPECT(0x6b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 033E
        gbc.setState(0xa, 0xb760, 0xc490, 0x743, 0xcb11, 0x3c67, 0x0, 0x1);
        gbc.writeMem(0xa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb760, gbc.sp());
        EXPECT(0xc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 033F
        gbc.setState(0x95ff, 0x5b39, 0x3560, 0xb220, 0xb37a, 0x2522, 0x0, 0x0);
        gbc.writeMem(0x95ff, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5b39, gbc.sp());
        EXPECT(0x9601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ff));
        EXPECT(0xbd, gbc.readMem(0x9600));
        // CB BD 0340
        gbc.setState(0xbb82, 0xcfd3, 0x570, 0xab1c, 0xc945, 0x22ce, 0x1, 0x1);
        gbc.writeMem(0xbb82, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcfd3, gbc.sp());
        EXPECT(0xbb84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb82));
        EXPECT(0xbd, gbc.readMem(0xbb83));
        // CB BD 0341
        gbc.setState(0xc6dd, 0x94f7, 0x5770, 0x2a4f, 0x45a0, 0x5d5b, 0x0, 0x0);
        gbc.writeMem(0xc6dd, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x94f7, gbc.sp());
        EXPECT(0xc6df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6dd));
        EXPECT(0xbd, gbc.readMem(0xc6de));
        // CB BD 0342
        gbc.setState(0xd9ec, 0x23bf, 0x3c30, 0x5dbd, 0x897d, 0xa4a6, 0x0, 0x1);
        gbc.writeMem(0xd9ec, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x23bf, gbc.sp());
        EXPECT(0xd9ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ec));
        EXPECT(0xbd, gbc.readMem(0xd9ed));
        // CB BD 0343
        gbc.setState(0x84f2, 0x524c, 0x4870, 0x9c69, 0xfe4d, 0x47df, 0x0, 0x1);
        gbc.writeMem(0x84f2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x524c, gbc.sp());
        EXPECT(0x84f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f2));
        EXPECT(0xbd, gbc.readMem(0x84f3));
        // CB BD 0344
        gbc.setState(0xba08, 0xfa, 0xa000, 0x2073, 0xbbfb, 0x41fa, 0x1, 0x0);
        gbc.writeMem(0xba08, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xfa, gbc.sp());
        EXPECT(0xba0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba08));
        EXPECT(0xbd, gbc.readMem(0xba09));
        // CB BD 0345
        gbc.setState(0x4cd3, 0xf86f, 0xbe50, 0xf911, 0xac28, 0x680f, 0x0, 0x1);
        gbc.writeMem(0x4cd3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf86f, gbc.sp());
        EXPECT(0x4cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0346
        gbc.setState(0xcf55, 0x13ed, 0xecb0, 0x5485, 0xa3a5, 0x5d4c, 0x0, 0x1);
        gbc.writeMem(0xcf55, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x13ed, gbc.sp());
        EXPECT(0xcf57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf55));
        EXPECT(0xbd, gbc.readMem(0xcf56));
        // CB BD 0347
        gbc.setState(0xd2f6, 0x6743, 0xf0d0, 0x7258, 0x85c5, 0x5ef5, 0x0, 0x1);
        gbc.writeMem(0xd2f6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6743, gbc.sp());
        EXPECT(0xd2f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2f6));
        EXPECT(0xbd, gbc.readMem(0xd2f7));
        // CB BD 0348
        gbc.setState(0x949c, 0x65c6, 0x9160, 0x536a, 0x18fa, 0xa4f8, 0x1, 0x1);
        gbc.writeMem(0x949c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x65c6, gbc.sp());
        EXPECT(0x949e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x949c));
        EXPECT(0xbd, gbc.readMem(0x949d));
        // CB BD 0349
        gbc.setState(0x7267, 0x3324, 0x4de0, 0x8fa6, 0xed03, 0x5ef2, 0x1, 0x0);
        gbc.writeMem(0x7267, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3324, gbc.sp());
        EXPECT(0x7269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 034A
        gbc.setState(0x7f1d, 0xc5d5, 0x7a0, 0xb665, 0x284a, 0x84f5, 0x1, 0x0);
        gbc.writeMem(0x7f1d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc5d5, gbc.sp());
        EXPECT(0x7f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 034B
        gbc.setState(0x1ebc, 0xed78, 0xb4d0, 0x903, 0x18fb, 0x130, 0x1, 0x1);
        gbc.writeMem(0x1ebc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xed78, gbc.sp());
        EXPECT(0x1ebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 034C
        gbc.setState(0xe477, 0xf64a, 0x1a10, 0xc34a, 0x9b2a, 0xd438, 0x0, 0x1);
        gbc.writeMem(0xe477, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf64a, gbc.sp());
        EXPECT(0xe479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe477));
        EXPECT(0xbd, gbc.readMem(0xe478));
        // CB BD 034D
        gbc.setState(0xedbf, 0x167, 0xfd50, 0xeeb6, 0x685f, 0x4aea, 0x0, 0x0);
        gbc.writeMem(0xedbf, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x167, gbc.sp());
        EXPECT(0xedc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedbf));
        EXPECT(0xbd, gbc.readMem(0xedc0));
        // CB BD 034F
        gbc.setState(0xe28a, 0x55c1, 0xeb30, 0x14dd, 0x98a9, 0xe3b1, 0x1, 0x1);
        gbc.writeMem(0xe28a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x55c1, gbc.sp());
        EXPECT(0xe28c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe28a));
        EXPECT(0xbd, gbc.readMem(0xe28b));
        // CB BD 0350
        gbc.setState(0xee54, 0x5f34, 0xf0, 0x24a, 0xc38d, 0x1a54, 0x0, 0x1);
        gbc.writeMem(0xee54, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5f34, gbc.sp());
        EXPECT(0xee56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee54));
        EXPECT(0xbd, gbc.readMem(0xee55));
        // CB BD 0351
        gbc.setState(0xb3d2, 0x8cfa, 0x6750, 0x6a31, 0x1be4, 0x599f, 0x1, 0x0);
        gbc.writeMem(0xb3d2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8cfa, gbc.sp());
        EXPECT(0xb3d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d2));
        EXPECT(0xbd, gbc.readMem(0xb3d3));
        // CB BD 0352
        gbc.setState(0x197d, 0x3d6b, 0x2190, 0x8ba6, 0x66ee, 0x14ba, 0x1, 0x0);
        gbc.writeMem(0x197d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3d6b, gbc.sp());
        EXPECT(0x197f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0353
        gbc.setState(0x782a, 0x703c, 0xba50, 0x8b6b, 0x8e92, 0xc558, 0x1, 0x1);
        gbc.writeMem(0x782a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x703c, gbc.sp());
        EXPECT(0x782c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0354
        gbc.setState(0x1986, 0xd521, 0x8a0, 0x4eac, 0x763b, 0xc9c, 0x1, 0x1);
        gbc.writeMem(0x1986, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd521, gbc.sp());
        EXPECT(0x1988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0356
        gbc.setState(0x55fc, 0x52a, 0xe8c0, 0x99fc, 0xf604, 0xc3b, 0x0, 0x1);
        gbc.writeMem(0x55fc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x52a, gbc.sp());
        EXPECT(0x55fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0357
        gbc.setState(0xc144, 0x3e76, 0x1a40, 0xaa4f, 0xe184, 0x70da, 0x1, 0x0);
        gbc.writeMem(0xc144, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3e76, gbc.sp());
        EXPECT(0xc146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc144));
        EXPECT(0xbd, gbc.readMem(0xc145));
        // CB BD 0358
        gbc.setState(0x13ad, 0xb713, 0x7c60, 0x5636, 0xa5d4, 0x58c0, 0x0, 0x0);
        gbc.writeMem(0x13ad, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb713, gbc.sp());
        EXPECT(0x13af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0359
        gbc.setState(0xed09, 0x913b, 0x5180, 0xe7f0, 0x6b22, 0xe569, 0x0, 0x1);
        gbc.writeMem(0xed09, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x913b, gbc.sp());
        EXPECT(0xed0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed09));
        EXPECT(0xbd, gbc.readMem(0xed0a));
        // CB BD 035A
        gbc.setState(0x92f7, 0xd8a1, 0xdbe0, 0x7089, 0x8920, 0x4b81, 0x0, 0x1);
        gbc.writeMem(0x92f7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd8a1, gbc.sp());
        EXPECT(0x92f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92f7));
        EXPECT(0xbd, gbc.readMem(0x92f8));
        // CB BD 035B
        gbc.setState(0xed27, 0xb5ba, 0xba0, 0xeeb, 0xac9b, 0x124c, 0x1, 0x1);
        gbc.writeMem(0xed27, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb5ba, gbc.sp());
        EXPECT(0xed29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed27));
        EXPECT(0xbd, gbc.readMem(0xed28));
        // CB BD 035C
        gbc.setState(0x58f3, 0x3ef0, 0xb6b0, 0xc849, 0x8775, 0x3343, 0x0, 0x1);
        gbc.writeMem(0x58f3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3ef0, gbc.sp());
        EXPECT(0x58f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 035D
        gbc.setState(0x1437, 0x5d0, 0x2e00, 0xc10c, 0x7e88, 0x9922, 0x1, 0x1);
        gbc.writeMem(0x1437, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5d0, gbc.sp());
        EXPECT(0x1439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 035E
        gbc.setState(0x4276, 0x3556, 0x5840, 0xb4e3, 0x4615, 0x3555, 0x1, 0x0);
        gbc.writeMem(0x4276, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3556, gbc.sp());
        EXPECT(0x4278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 035F
        gbc.setState(0x4e1c, 0x8fe5, 0xa5b0, 0x1e58, 0xcebc, 0x4cc9, 0x0, 0x0);
        gbc.writeMem(0x4e1c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8fe5, gbc.sp());
        EXPECT(0x4e1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0360
        gbc.setState(0xb35f, 0x6f05, 0x6280, 0x7f51, 0xbeba, 0x7f27, 0x0, 0x0);
        gbc.writeMem(0xb35f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6f05, gbc.sp());
        EXPECT(0xb361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb35f));
        EXPECT(0xbd, gbc.readMem(0xb360));
        // CB BD 0361
        gbc.setState(0x6119, 0xf925, 0x69e0, 0x582, 0xa31f, 0x412d, 0x0, 0x1);
        gbc.writeMem(0x6119, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf925, gbc.sp());
        EXPECT(0x611b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0362
        gbc.setState(0xcf62, 0x7171, 0x6e40, 0xe907, 0x433e, 0xa545, 0x0, 0x0);
        gbc.writeMem(0xcf62, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7171, gbc.sp());
        EXPECT(0xcf64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf62));
        EXPECT(0xbd, gbc.readMem(0xcf63));
        // CB BD 0363
        gbc.setState(0x3c2, 0x7c74, 0xb130, 0x676d, 0x734d, 0xffb6, 0x1, 0x1);
        gbc.writeMem(0x3c2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7c74, gbc.sp());
        EXPECT(0x3c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0364
        gbc.setState(0x3484, 0xab8e, 0xde80, 0x4344, 0x4ea1, 0x16f, 0x1, 0x1);
        gbc.writeMem(0x3484, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xab8e, gbc.sp());
        EXPECT(0x3486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0365
        gbc.setState(0xd12e, 0xa44a, 0x9d80, 0xda7e, 0xff57, 0x5415, 0x0, 0x0);
        gbc.writeMem(0xd12e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa44a, gbc.sp());
        EXPECT(0xd130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd12e));
        EXPECT(0xbd, gbc.readMem(0xd12f));
        // CB BD 0367
        gbc.setState(0x17a2, 0x692b, 0x88b0, 0xb413, 0xebaf, 0x21c8, 0x0, 0x1);
        gbc.writeMem(0x17a2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x692b, gbc.sp());
        EXPECT(0x17a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0368
        gbc.setState(0xebf3, 0xe8b6, 0xbe60, 0xd95d, 0x144d, 0xf300, 0x0, 0x0);
        gbc.writeMem(0xebf3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe8b6, gbc.sp());
        EXPECT(0xebf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf3));
        EXPECT(0xbd, gbc.readMem(0xebf4));
        // CB BD 0369
        gbc.setState(0x85c7, 0xfb1a, 0xf780, 0xe528, 0xb3da, 0xb328, 0x0, 0x0);
        gbc.writeMem(0x85c7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xfb1a, gbc.sp());
        EXPECT(0x85c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c7));
        EXPECT(0xbd, gbc.readMem(0x85c8));
        // CB BD 036A
        gbc.setState(0x348a, 0x1694, 0x5640, 0xdd74, 0xb272, 0xb431, 0x1, 0x1);
        gbc.writeMem(0x348a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1694, gbc.sp());
        EXPECT(0x348c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 036B
        gbc.setState(0xdf7f, 0x1e0b, 0x70e0, 0x7116, 0x1e7f, 0x679a, 0x0, 0x1);
        gbc.writeMem(0xdf7f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1e0b, gbc.sp());
        EXPECT(0xdf81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf7f));
        EXPECT(0xbd, gbc.readMem(0xdf80));
        // CB BD 036C
        gbc.setState(0x7d34, 0x96ce, 0xc170, 0x9e38, 0xb9e7, 0x19f1, 0x1, 0x1);
        gbc.writeMem(0x7d34, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x96ce, gbc.sp());
        EXPECT(0x7d36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 036D
        gbc.setState(0x984d, 0x5954, 0xb800, 0xf61b, 0x120e, 0xa912, 0x1, 0x1);
        gbc.writeMem(0x984d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5954, gbc.sp());
        EXPECT(0x984f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x984d));
        EXPECT(0xbd, gbc.readMem(0x984e));
        // CB BD 036E
        gbc.setState(0x5625, 0x7b9d, 0x4750, 0xc8a7, 0x47a1, 0xa81, 0x1, 0x1);
        gbc.writeMem(0x5625, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7b9d, gbc.sp());
        EXPECT(0x5627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 036F
        gbc.setState(0xb703, 0xc446, 0x200, 0x80cd, 0xb2ba, 0x91c4, 0x1, 0x0);
        gbc.writeMem(0xb703, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc446, gbc.sp());
        EXPECT(0xb705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb703));
        EXPECT(0xbd, gbc.readMem(0xb704));
        // CB BD 0370
        gbc.setState(0x3f38, 0xc42d, 0x9b0, 0x3b47, 0x71bd, 0x2009, 0x0, 0x0);
        gbc.writeMem(0x3f38, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc42d, gbc.sp());
        EXPECT(0x3f3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0371
        gbc.setState(0x8296, 0xd17b, 0x3b40, 0xc92b, 0xead, 0x7f8e, 0x0, 0x0);
        gbc.writeMem(0x8296, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd17b, gbc.sp());
        EXPECT(0x8298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8296));
        EXPECT(0xbd, gbc.readMem(0x8297));
        // CB BD 0372
        gbc.setState(0x1f91, 0x891c, 0x1e90, 0xfcd6, 0x7b53, 0x8390, 0x1, 0x0);
        gbc.writeMem(0x1f91, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x891c, gbc.sp());
        EXPECT(0x1f93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0373
        gbc.setState(0xd267, 0x6949, 0x6fb0, 0xea84, 0x6f38, 0x7447, 0x0, 0x1);
        gbc.writeMem(0xd267, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6949, gbc.sp());
        EXPECT(0xd269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd267));
        EXPECT(0xbd, gbc.readMem(0xd268));
        // CB BD 0375
        gbc.setState(0x47aa, 0xf99f, 0xce20, 0xe579, 0x9297, 0x68a8, 0x1, 0x0);
        gbc.writeMem(0x47aa, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf99f, gbc.sp());
        EXPECT(0x47ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0377
        gbc.setState(0xc871, 0xe16c, 0x8410, 0x9e3e, 0xd218, 0xceef, 0x1, 0x1);
        gbc.writeMem(0xc871, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe16c, gbc.sp());
        EXPECT(0xc873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc871));
        EXPECT(0xbd, gbc.readMem(0xc872));
        // CB BD 0378
        gbc.setState(0x2085, 0x23fb, 0xad30, 0xfc74, 0x513b, 0x3207, 0x0, 0x1);
        gbc.writeMem(0x2085, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x23fb, gbc.sp());
        EXPECT(0x2087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0379
        gbc.setState(0x5e0, 0xcda6, 0x4af0, 0x45a4, 0x13ea, 0x2020, 0x1, 0x0);
        gbc.writeMem(0x5e0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xcda6, gbc.sp());
        EXPECT(0x5e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 037A
        gbc.setState(0x364d, 0xd5bb, 0x29a0, 0xbc47, 0x9abc, 0x71fa, 0x0, 0x1);
        gbc.writeMem(0x364d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd5bb, gbc.sp());
        EXPECT(0x364f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 037B
        gbc.setState(0xa72, 0xbff1, 0xefa0, 0xdabb, 0x7eff, 0xe846, 0x1, 0x0);
        gbc.writeMem(0xa72, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbff1, gbc.sp());
        EXPECT(0xa74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 037C
        gbc.setState(0xea94, 0x215f, 0x670, 0x8143, 0x60ca, 0x652f, 0x1, 0x0);
        gbc.writeMem(0xea94, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x215f, gbc.sp());
        EXPECT(0xea96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea94));
        EXPECT(0xbd, gbc.readMem(0xea95));
        // CB BD 037D
        gbc.setState(0x422b, 0xc7c7, 0xe570, 0x3af7, 0xdab0, 0x568d, 0x0, 0x1);
        gbc.writeMem(0x422b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc7c7, gbc.sp());
        EXPECT(0x422d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 037E
        gbc.setState(0x7652, 0xe961, 0xd800, 0x8c63, 0x103b, 0xc971, 0x1, 0x1);
        gbc.writeMem(0x7652, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe961, gbc.sp());
        EXPECT(0x7654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 037F
        gbc.setState(0x65b3, 0xc894, 0x8310, 0xd04f, 0xce86, 0x6692, 0x0, 0x0);
        gbc.writeMem(0x65b3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc894, gbc.sp());
        EXPECT(0x65b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0380
        gbc.setState(0x7570, 0xf898, 0x6120, 0x7be2, 0x77e6, 0x4c60, 0x1, 0x1);
        gbc.writeMem(0x7570, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf898, gbc.sp());
        EXPECT(0x7572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0381
        gbc.setState(0x3def, 0x3289, 0xe920, 0x6e5c, 0x46c2, 0x7ca4, 0x1, 0x1);
        gbc.writeMem(0x3def, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3289, gbc.sp());
        EXPECT(0x3df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0382
        gbc.setState(0x4c16, 0x2d4f, 0x5240, 0x508b, 0x47db, 0xdbb2, 0x0, 0x1);
        gbc.writeMem(0x4c16, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2d4f, gbc.sp());
        EXPECT(0x4c18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0383
        gbc.setState(0x2169, 0x4edf, 0x9b40, 0xe03f, 0x66bb, 0xd41a, 0x0, 0x0);
        gbc.writeMem(0x2169, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4edf, gbc.sp());
        EXPECT(0x216b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0384
        gbc.setState(0xc3cf, 0x12ac, 0xece0, 0x1ddb, 0x4c7f, 0x2bdc, 0x1, 0x0);
        gbc.writeMem(0xc3cf, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x12ac, gbc.sp());
        EXPECT(0xc3d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3cf));
        EXPECT(0xbd, gbc.readMem(0xc3d0));
        // CB BD 0385
        gbc.setState(0x9af0, 0xbc9c, 0xd380, 0xdfa, 0x9a19, 0x44ee, 0x1, 0x1);
        gbc.writeMem(0x9af0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbc9c, gbc.sp());
        EXPECT(0x9af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af0));
        EXPECT(0xbd, gbc.readMem(0x9af1));
        // CB BD 0386
        gbc.setState(0xae52, 0x2935, 0xb770, 0xe212, 0x6f43, 0xaf1d, 0x1, 0x0);
        gbc.writeMem(0xae52, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2935, gbc.sp());
        EXPECT(0xae54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae52));
        EXPECT(0xbd, gbc.readMem(0xae53));
        // CB BD 0387
        gbc.setState(0xc099, 0x2b48, 0x5de0, 0x4392, 0xee57, 0x987, 0x1, 0x1);
        gbc.writeMem(0xc099, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2b48, gbc.sp());
        EXPECT(0xc09b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc099));
        EXPECT(0xbd, gbc.readMem(0xc09a));
        // CB BD 0388
        gbc.setState(0x937f, 0xb539, 0x2900, 0xf5a1, 0x6703, 0xf760, 0x0, 0x1);
        gbc.writeMem(0x937f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb539, gbc.sp());
        EXPECT(0x9381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x937f));
        EXPECT(0xbd, gbc.readMem(0x9380));
        // CB BD 0389
        gbc.setState(0x4d99, 0xdc2c, 0xf040, 0xb981, 0xa173, 0xa183, 0x1, 0x1);
        gbc.writeMem(0x4d99, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdc2c, gbc.sp());
        EXPECT(0x4d9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 038A
        gbc.setState(0xaf03, 0x535b, 0x9d0, 0x9b3, 0xe7c7, 0x4e27, 0x0, 0x1);
        gbc.writeMem(0xaf03, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x535b, gbc.sp());
        EXPECT(0xaf05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf03));
        EXPECT(0xbd, gbc.readMem(0xaf04));
        // CB BD 038B
        gbc.setState(0x3533, 0xe90c, 0x600, 0xbd66, 0x92e4, 0x6128, 0x0, 0x1);
        gbc.writeMem(0x3533, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe90c, gbc.sp());
        EXPECT(0x3535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 038C
        gbc.setState(0x2163, 0xa2ec, 0x3c10, 0x5618, 0x3c10, 0x9523, 0x0, 0x0);
        gbc.writeMem(0x2163, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa2ec, gbc.sp());
        EXPECT(0x2165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 038D
        gbc.setState(0x5716, 0xcfc7, 0x3970, 0x998c, 0xb721, 0x18ee, 0x1, 0x0);
        gbc.writeMem(0x5716, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcfc7, gbc.sp());
        EXPECT(0x5718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 038E
        gbc.setState(0x5356, 0xed4c, 0x8320, 0xc42d, 0x9004, 0xf181, 0x0, 0x0);
        gbc.writeMem(0x5356, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xed4c, gbc.sp());
        EXPECT(0x5358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 038F
        gbc.setState(0x18c1, 0x778, 0x10f0, 0x103a, 0xf13b, 0x1fbe, 0x1, 0x0);
        gbc.writeMem(0x18c1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x778, gbc.sp());
        EXPECT(0x18c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0390
        gbc.setState(0xbe07, 0x1ce5, 0x90d0, 0x6f90, 0x882, 0xdbac, 0x1, 0x1);
        gbc.writeMem(0xbe07, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1ce5, gbc.sp());
        EXPECT(0xbe09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe07));
        EXPECT(0xbd, gbc.readMem(0xbe08));
        // CB BD 0391
        gbc.setState(0xbd6a, 0xa374, 0xd030, 0xeb10, 0x1f2c, 0xe4ac, 0x0, 0x0);
        gbc.writeMem(0xbd6a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa374, gbc.sp());
        EXPECT(0xbd6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd6a));
        EXPECT(0xbd, gbc.readMem(0xbd6b));
        // CB BD 0392
        gbc.setState(0x6556, 0x5158, 0x1d80, 0x1458, 0x2195, 0xbc1e, 0x1, 0x1);
        gbc.writeMem(0x6556, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5158, gbc.sp());
        EXPECT(0x6558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0393
        gbc.setState(0xdc7, 0x665, 0xeba0, 0x86b6, 0xf22c, 0xd4af, 0x1, 0x0);
        gbc.writeMem(0xdc7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x665, gbc.sp());
        EXPECT(0xdc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0394
        gbc.setState(0x3fc7, 0x2d9d, 0x6440, 0xee00, 0x6154, 0xfe69, 0x0, 0x1);
        gbc.writeMem(0x3fc7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2d9d, gbc.sp());
        EXPECT(0x3fc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0395
        gbc.setState(0x8f2f, 0x4bc9, 0xeae0, 0xb8b4, 0x5d69, 0xfdd1, 0x1, 0x0);
        gbc.writeMem(0x8f2f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4bc9, gbc.sp());
        EXPECT(0x8f31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f2f));
        EXPECT(0xbd, gbc.readMem(0x8f30));
        // CB BD 0396
        gbc.setState(0x97a7, 0x6114, 0xe30, 0x3cf8, 0x5da1, 0xf7f1, 0x1, 0x1);
        gbc.writeMem(0x97a7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6114, gbc.sp());
        EXPECT(0x97a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97a7));
        EXPECT(0xbd, gbc.readMem(0x97a8));
        // CB BD 0397
        gbc.setState(0x7c06, 0xc3d8, 0xf7b0, 0x9bbe, 0xcfc3, 0xbddc, 0x1, 0x0);
        gbc.writeMem(0x7c06, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc3d8, gbc.sp());
        EXPECT(0x7c08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 0398
        gbc.setState(0x334e, 0xe93b, 0x3f80, 0x599b, 0x5860, 0x5b18, 0x1, 0x0);
        gbc.writeMem(0x334e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe93b, gbc.sp());
        EXPECT(0x3350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 0399
        gbc.setState(0x34d2, 0xe1ca, 0x2e80, 0x9497, 0x18cc, 0xd1fc, 0x0, 0x0);
        gbc.writeMem(0x34d2, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe1ca, gbc.sp());
        EXPECT(0x34d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 039A
        gbc.setState(0x1500, 0x4ee3, 0x5660, 0xe4d7, 0xb998, 0x646c, 0x1, 0x0);
        gbc.writeMem(0x1500, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4ee3, gbc.sp());
        EXPECT(0x1502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 039B
        gbc.setState(0x989c, 0x6a1e, 0x6310, 0x65e6, 0xd81b, 0x9167, 0x1, 0x0);
        gbc.writeMem(0x989c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6a1e, gbc.sp());
        EXPECT(0x989e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x989c));
        EXPECT(0xbd, gbc.readMem(0x989d));
        // CB BD 039C
        gbc.setState(0x68f3, 0x69e9, 0xe820, 0xf216, 0x7a4, 0xbb1f, 0x0, 0x0);
        gbc.writeMem(0x68f3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x69e9, gbc.sp());
        EXPECT(0x68f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 039E
        gbc.setState(0xb068, 0xbf2c, 0x35f0, 0x82a0, 0xf80f, 0xa501, 0x0, 0x1);
        gbc.writeMem(0xb068, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbf2c, gbc.sp());
        EXPECT(0xb06a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb068));
        EXPECT(0xbd, gbc.readMem(0xb069));
        // CB BD 03A0
        gbc.setState(0x1f9a, 0x7f35, 0x67a0, 0x6b3e, 0xd1f0, 0xd3f0, 0x0, 0x1);
        gbc.writeMem(0x1f9a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7f35, gbc.sp());
        EXPECT(0x1f9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 03A1
        gbc.setState(0xe256, 0xd227, 0x9550, 0xa969, 0x3875, 0x5068, 0x1, 0x0);
        gbc.writeMem(0xe256, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd227, gbc.sp());
        EXPECT(0xe258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe256));
        EXPECT(0xbd, gbc.readMem(0xe257));
        // CB BD 03A2
        gbc.setState(0x42f, 0x210, 0x4ac0, 0x94e5, 0x9021, 0x2582, 0x0, 0x1);
        gbc.writeMem(0x42f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x210, gbc.sp());
        EXPECT(0x431, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 03A3
        gbc.setState(0xccf5, 0xf5f1, 0x6df0, 0xb14f, 0xb478, 0xb70, 0x0, 0x0);
        gbc.writeMem(0xccf5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf5f1, gbc.sp());
        EXPECT(0xccf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf5));
        EXPECT(0xbd, gbc.readMem(0xccf6));
        // CB BD 03A4
        gbc.setState(0x4fce, 0xbdfe, 0x4a20, 0x2f9f, 0xb4e, 0xb60c, 0x0, 0x1);
        gbc.writeMem(0x4fce, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbdfe, gbc.sp());
        EXPECT(0x4fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 03A5
        gbc.setState(0x4d73, 0x4b70, 0xaf80, 0x7c92, 0xec11, 0x231b, 0x0, 0x1);
        gbc.writeMem(0x4d73, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4b70, gbc.sp());
        EXPECT(0x4d75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 03A6
        gbc.setState(0x6abb, 0x5a9, 0x6f50, 0xcc9, 0x47d2, 0x9fa1, 0x1, 0x1);
        gbc.writeMem(0x6abb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5a9, gbc.sp());
        EXPECT(0x6abd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 03A7
        gbc.setState(0x87a7, 0xca5c, 0x8160, 0x54f2, 0x6945, 0x4315, 0x1, 0x1);
        gbc.writeMem(0x87a7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xca5c, gbc.sp());
        EXPECT(0x87a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87a7));
        EXPECT(0xbd, gbc.readMem(0x87a8));
        // CB BD 03A8
        gbc.setState(0xba11, 0xc679, 0xef80, 0x28d3, 0x491b, 0x482c, 0x0, 0x0);
        gbc.writeMem(0xba11, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc679, gbc.sp());
        EXPECT(0xba13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba11));
        EXPECT(0xbd, gbc.readMem(0xba12));
        // CB BD 03A9
        gbc.setState(0xcfd6, 0x8edf, 0x2870, 0xfb50, 0x7bde, 0x8e4b, 0x0, 0x1);
        gbc.writeMem(0xcfd6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8edf, gbc.sp());
        EXPECT(0xcfd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd6));
        EXPECT(0xbd, gbc.readMem(0xcfd7));
        // CB BD 03AA
        gbc.setState(0x96ae, 0x433, 0xd410, 0xbc4e, 0x53aa, 0x24a1, 0x0, 0x1);
        gbc.writeMem(0x96ae, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x433, gbc.sp());
        EXPECT(0x96b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ae));
        EXPECT(0xbd, gbc.readMem(0x96af));
        // CB BD 03AB
        gbc.setState(0xded, 0xac7, 0xa800, 0xdb6f, 0x284a, 0xd6d9, 0x0, 0x1);
        gbc.writeMem(0xded, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xac7, gbc.sp());
        EXPECT(0xdef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 03AC
        gbc.setState(0x138a, 0x4394, 0xc040, 0x53d3, 0xb7e1, 0x13cc, 0x0, 0x0);
        gbc.writeMem(0x138a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4394, gbc.sp());
        EXPECT(0x138c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 03AD
        gbc.setState(0x786e, 0x3d5c, 0x4a20, 0x75e5, 0x6378, 0xf0c4, 0x1, 0x0);
        gbc.writeMem(0x786e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3d5c, gbc.sp());
        EXPECT(0x7870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 03AE
        gbc.setState(0x3b7, 0x4b5f, 0xb70, 0x4332, 0x5797, 0xd778, 0x1, 0x1);
        gbc.writeMem(0x3b7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4b5f, gbc.sp());
        EXPECT(0x3b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 03AF
        gbc.setState(0x8528, 0x1d1e, 0xaab0, 0xdf2e, 0x4969, 0xc32b, 0x0, 0x0);
        gbc.writeMem(0x8528, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1d1e, gbc.sp());
        EXPECT(0x852a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8528));
        EXPECT(0xbd, gbc.readMem(0x8529));
        // CB BD 03B0
        gbc.setState(0x3cdc, 0x9ca0, 0xba10, 0x8685, 0x428c, 0xdc2f, 0x1, 0x1);
        gbc.writeMem(0x3cdc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9ca0, gbc.sp());
        EXPECT(0x3cde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 03B1
        gbc.setState(0x1731, 0xff17, 0x3260, 0x98b, 0x6c6, 0x9860, 0x1, 0x0);
        gbc.writeMem(0x1731, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xff17, gbc.sp());
        EXPECT(0x1733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 03B2
        gbc.setState(0x52dc, 0x9747, 0x9770, 0x40c, 0x7058, 0xccad, 0x0, 0x1);
        gbc.writeMem(0x52dc, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9747, gbc.sp());
        EXPECT(0x52de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 03B3
        gbc.setState(0xa1be, 0x75c2, 0x38c0, 0xa045, 0xf07f, 0x352b, 0x1, 0x1);
        gbc.writeMem(0xa1be, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x75c2, gbc.sp());
        EXPECT(0xa1c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1be));
        EXPECT(0xbd, gbc.readMem(0xa1bf));
        // CB BD 03B4
        gbc.setState(0x8464, 0x37e5, 0x3030, 0xafd0, 0x9031, 0xb968, 0x1, 0x0);
        gbc.writeMem(0x8464, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x37e5, gbc.sp());
        EXPECT(0x8466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8464));
        EXPECT(0xbd, gbc.readMem(0x8465));
        // CB BD 03B5
        gbc.setState(0xd2b9, 0x1d55, 0x9700, 0x5a6e, 0xc03e, 0xe427, 0x0, 0x1);
        gbc.writeMem(0xd2b9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1d55, gbc.sp());
        EXPECT(0xd2bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2b9));
        EXPECT(0xbd, gbc.readMem(0xd2ba));
        // CB BD 03B6
        gbc.setState(0xe3ce, 0xc2d3, 0x5d10, 0xc228, 0x5dc9, 0x3bd4, 0x0, 0x1);
        gbc.writeMem(0xe3ce, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc2d3, gbc.sp());
        EXPECT(0xe3d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ce));
        EXPECT(0xbd, gbc.readMem(0xe3cf));
        // CB BD 03B7
        gbc.setState(0xa202, 0x3e8b, 0xe10, 0xeda4, 0xe1c, 0x8f38, 0x0, 0x0);
        gbc.writeMem(0xa202, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3e8b, gbc.sp());
        EXPECT(0xa204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa202));
        EXPECT(0xbd, gbc.readMem(0xa203));
        // CB BD 03B8
        gbc.setState(0x6e4e, 0xd72e, 0x2830, 0xcf1c, 0xe4d6, 0x7310, 0x1, 0x1);
        gbc.writeMem(0x6e4e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd72e, gbc.sp());
        EXPECT(0x6e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 03B9
        gbc.setState(0xd563, 0x9aa3, 0xc4b0, 0xdc70, 0x4182, 0x69a4, 0x1, 0x0);
        gbc.writeMem(0xd563, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9aa3, gbc.sp());
        EXPECT(0xd565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd563));
        EXPECT(0xbd, gbc.readMem(0xd564));
        // CB BD 03BA
        gbc.setState(0x89b5, 0xa9a8, 0xebe0, 0xbd94, 0xe3d7, 0xb712, 0x0, 0x0);
        gbc.writeMem(0x89b5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa9a8, gbc.sp());
        EXPECT(0x89b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b5));
        EXPECT(0xbd, gbc.readMem(0x89b6));
        // CB BD 03BB
        gbc.setState(0xa88a, 0xf12d, 0xea50, 0xc58d, 0x49cd, 0xbf42, 0x1, 0x1);
        gbc.writeMem(0xa88a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf12d, gbc.sp());
        EXPECT(0xa88c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa88a));
        EXPECT(0xbd, gbc.readMem(0xa88b));
        // CB BD 03BC
        gbc.setState(0xd561, 0x878d, 0x5680, 0x4973, 0x6abc, 0x233, 0x0, 0x0);
        gbc.writeMem(0xd561, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x878d, gbc.sp());
        EXPECT(0xd563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd561));
        EXPECT(0xbd, gbc.readMem(0xd562));
        // CB BD 03BD
        gbc.setState(0x534b, 0x7dfc, 0x710, 0x4b93, 0x9013, 0xdc9, 0x0, 0x0);
        gbc.writeMem(0x534b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7dfc, gbc.sp());
        EXPECT(0x534d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 03BE
        gbc.setState(0x4fbd, 0x30cd, 0x1820, 0x7390, 0x507d, 0x79ce, 0x1, 0x1);
        gbc.writeMem(0x4fbd, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x30cd, gbc.sp());
        EXPECT(0x4fbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 03BF
        gbc.setState(0x7790, 0x8295, 0x48a0, 0xfa4f, 0x2f27, 0x23f5, 0x0, 0x0);
        gbc.writeMem(0x7790, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8295, gbc.sp());
        EXPECT(0x7792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 03C0
        gbc.setState(0xd28a, 0x3c19, 0x570, 0x5863, 0xfe9a, 0x51a1, 0x0, 0x0);
        gbc.writeMem(0xd28a, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3c19, gbc.sp());
        EXPECT(0xd28c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd28a));
        EXPECT(0xbd, gbc.readMem(0xd28b));
        // CB BD 03C1
        gbc.setState(0x54f6, 0x13ce, 0xdfd0, 0x94d, 0x1b73, 0x940f, 0x0, 0x1);
        gbc.writeMem(0x54f6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x13ce, gbc.sp());
        EXPECT(0x54f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 03C2
        gbc.setState(0x3a00, 0xea17, 0x1b50, 0xfd0b, 0x329e, 0x279d, 0x0, 0x1);
        gbc.writeMem(0x3a00, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xea17, gbc.sp());
        EXPECT(0x3a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 03C3
        gbc.setState(0x40f5, 0xe7e, 0xc970, 0xa449, 0x9cf0, 0xa68b, 0x0, 0x1);
        gbc.writeMem(0x40f5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe7e, gbc.sp());
        EXPECT(0x40f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 03C4
        gbc.setState(0x1c0, 0x7c8b, 0xd3c0, 0x3e98, 0x7601, 0x48ec, 0x0, 0x1);
        gbc.writeMem(0x1c0, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7c8b, gbc.sp());
        EXPECT(0x1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 03C5
        gbc.setState(0x158c, 0xdb62, 0x67a0, 0x61de, 0x9eb, 0x701c, 0x1, 0x0);
        gbc.writeMem(0x158c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdb62, gbc.sp());
        EXPECT(0x158e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 03C6
        gbc.setState(0xa7ec, 0x22f5, 0x9ea0, 0x5b23, 0xd440, 0xd132, 0x1, 0x0);
        gbc.writeMem(0xa7ec, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x22f5, gbc.sp());
        EXPECT(0xa7ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ec));
        EXPECT(0xbd, gbc.readMem(0xa7ed));
        // CB BD 03C7
        gbc.setState(0x34ed, 0x498b, 0x5070, 0xa13b, 0x7522, 0x2df4, 0x0, 0x0);
        gbc.writeMem(0x34ed, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x498b, gbc.sp());
        EXPECT(0x34ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 03C8
        gbc.setState(0x4539, 0x792f, 0xa790, 0x7cc0, 0xc3e9, 0x127d, 0x0, 0x0);
        gbc.writeMem(0x4539, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x792f, gbc.sp());
        EXPECT(0x453b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 03C9
        gbc.setState(0xab36, 0x2600, 0xffd0, 0x5127, 0x1189, 0xf35, 0x1, 0x0);
        gbc.writeMem(0xab36, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2600, gbc.sp());
        EXPECT(0xab38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab36));
        EXPECT(0xbd, gbc.readMem(0xab37));
        // CB BD 03CA
        gbc.setState(0x6da9, 0x38b0, 0x1b30, 0xf0fd, 0xc1d3, 0x1bd1, 0x1, 0x0);
        gbc.writeMem(0x6da9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x38b0, gbc.sp());
        EXPECT(0x6dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 03CB
        gbc.setState(0xd6a3, 0xbcba, 0x750, 0xc68b, 0x5294, 0xdaed, 0x1, 0x0);
        gbc.writeMem(0xd6a3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xbcba, gbc.sp());
        EXPECT(0xd6a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6a3));
        EXPECT(0xbd, gbc.readMem(0xd6a4));
        // CB BD 03CC
        gbc.setState(0xa8b7, 0xd1f3, 0xea00, 0xce8a, 0x217a, 0x1a61, 0x1, 0x0);
        gbc.writeMem(0xa8b7, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd1f3, gbc.sp());
        EXPECT(0xa8b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8b7));
        EXPECT(0xbd, gbc.readMem(0xa8b8));
        // CB BD 03CD
        gbc.setState(0x8ecb, 0x9b79, 0xd960, 0x5f86, 0x6163, 0xa748, 0x1, 0x1);
        gbc.writeMem(0x8ecb, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9b79, gbc.sp());
        EXPECT(0x8ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ecb));
        EXPECT(0xbd, gbc.readMem(0x8ecc));
        // CB BD 03CE
        gbc.setState(0x9b5b, 0x7ce9, 0x4bb0, 0x3f1, 0x9f55, 0x3b49, 0x1, 0x1);
        gbc.writeMem(0x9b5b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7ce9, gbc.sp());
        EXPECT(0x9b5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b5b));
        EXPECT(0xbd, gbc.readMem(0x9b5c));
        // CB BD 03CF
        gbc.setState(0x3da5, 0x35d8, 0xc430, 0xb4f7, 0xd955, 0xabca, 0x1, 0x0);
        gbc.writeMem(0x3da5, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x35d8, gbc.sp());
        EXPECT(0x3da7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 03D0
        gbc.setState(0x15b, 0x122, 0xa10, 0xa936, 0x95e8, 0x57f5, 0x0, 0x1);
        gbc.writeMem(0x15b, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x122, gbc.sp());
        EXPECT(0x15d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 03D1
        gbc.setState(0x5eba, 0x662, 0x2590, 0x169f, 0xdf16, 0x204f, 0x1, 0x0);
        gbc.writeMem(0x5eba, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x662, gbc.sp());
        EXPECT(0x5ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 03D2
        gbc.setState(0x42a1, 0x8d2b, 0xd7d0, 0x4414, 0x5574, 0xf0f3, 0x0, 0x1);
        gbc.writeMem(0x42a1, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8d2b, gbc.sp());
        EXPECT(0x42a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 03D3
        gbc.setState(0xd713, 0x159a, 0xb9d0, 0x9780, 0xdf29, 0x55fb, 0x0, 0x1);
        gbc.writeMem(0xd713, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x159a, gbc.sp());
        EXPECT(0xd715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd713));
        EXPECT(0xbd, gbc.readMem(0xd714));
        // CB BD 03D4
        gbc.setState(0xb263, 0x9cd3, 0x4d80, 0x1d93, 0x79cd, 0xc7bc, 0x1, 0x0);
        gbc.writeMem(0xb263, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9cd3, gbc.sp());
        EXPECT(0xb265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb263));
        EXPECT(0xbd, gbc.readMem(0xb264));
        // CB BD 03D5
        gbc.setState(0x2b2c, 0x6526, 0x9f80, 0xadab, 0x78df, 0x46b7, 0x0, 0x0);
        gbc.writeMem(0x2b2c, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6526, gbc.sp());
        EXPECT(0x2b2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 03D6
        gbc.setState(0x3027, 0x535, 0x2310, 0xa667, 0xd7ed, 0x605c, 0x0, 0x1);
        gbc.writeMem(0x3027, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x535, gbc.sp());
        EXPECT(0x3029, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 03D7
        gbc.setState(0x5662, 0x198, 0xe470, 0xe8a3, 0xcdeb, 0x446b, 0x0, 0x1);
        gbc.writeMem(0x5662, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x198, gbc.sp());
        EXPECT(0x5664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 03D8
        gbc.setState(0x3b9, 0x8384, 0x2820, 0x29ac, 0xf590, 0x29bb, 0x0, 0x0);
        gbc.writeMem(0x3b9, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8384, gbc.sp());
        EXPECT(0x3bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 03D9
        gbc.setState(0x72db, 0x7199, 0x71a0, 0x4b65, 0xb2e3, 0xb77e, 0x0, 0x1);
        gbc.writeMem(0x72db, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7199, gbc.sp());
        EXPECT(0x72dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 03DA
        gbc.setState(0x90fe, 0x6016, 0xbff0, 0x218, 0xa722, 0x8c7, 0x1, 0x1);
        gbc.writeMem(0x90fe, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6016, gbc.sp());
        EXPECT(0x9100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90fe));
        EXPECT(0xbd, gbc.readMem(0x90ff));
        // CB BD 03DB
        gbc.setState(0xbc62, 0x8934, 0x6f00, 0xe44d, 0xff87, 0x5365, 0x1, 0x0);
        gbc.writeMem(0xbc62, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8934, gbc.sp());
        EXPECT(0xbc64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc62));
        EXPECT(0xbd, gbc.readMem(0xbc63));
        // CB BD 03DC
        gbc.setState(0xa320, 0xa2cb, 0xe880, 0x3584, 0xd43d, 0xf012, 0x1, 0x1);
        gbc.writeMem(0xa320, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa2cb, gbc.sp());
        EXPECT(0xa322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa320));
        EXPECT(0xbd, gbc.readMem(0xa321));
        // CB BD 03DD
        gbc.setState(0xcc00, 0x9659, 0x5170, 0x3b01, 0x2ce0, 0xa4e1, 0x0, 0x0);
        gbc.writeMem(0xcc00, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9659, gbc.sp());
        EXPECT(0xcc02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc00));
        EXPECT(0xbd, gbc.readMem(0xcc01));
        // CB BD 03DE
        gbc.setState(0xcf56, 0x6e5e, 0x27a0, 0x21d5, 0x7af1, 0xeb39, 0x0, 0x0);
        gbc.writeMem(0xcf56, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6e5e, gbc.sp());
        EXPECT(0xcf58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf56));
        EXPECT(0xbd, gbc.readMem(0xcf57));
        // CB BD 03DF
        gbc.setState(0x396e, 0x85f7, 0x4190, 0xad01, 0x5fd4, 0xf5f1, 0x1, 0x0);
        gbc.writeMem(0x396e, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x85f7, gbc.sp());
        EXPECT(0x3970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BD 03E0
        gbc.setState(0x802f, 0x6f29, 0x6970, 0xfcbc, 0xb0a5, 0x4688, 0x1, 0x1);
        gbc.writeMem(0x802f, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6f29, gbc.sp());
        EXPECT(0x8031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x802f));
        EXPECT(0xbd, gbc.readMem(0x8030));
        // CB BD 03E1
        gbc.setState(0xe4d3, 0xf180, 0xa8c0, 0x5ebc, 0xba56, 0x2452, 0x1, 0x0);
        gbc.writeMem(0xe4d3, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf180, gbc.sp());
        EXPECT(0xe4d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4d3));
        EXPECT(0xbd, gbc.readMem(0xe4d4));
        // CB BD 03E2
        gbc.setState(0x9886, 0x638d, 0x88c0, 0x934e, 0xae6e, 0x754a, 0x0, 0x0);
        gbc.writeMem(0x9886, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x638d, gbc.sp());
        EXPECT(0x9888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9886));
        EXPECT(0xbd, gbc.readMem(0x9887));
        // CB BD 03E3
        gbc.setState(0xae07, 0x3947, 0x50, 0x2fad, 0x6b50, 0x28b9, 0x0, 0x1);
        gbc.writeMem(0xae07, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3947, gbc.sp());
        EXPECT(0xae09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae07));
        EXPECT(0xbd, gbc.readMem(0xae08));
        // CB BD 03E4
        gbc.setState(0x560d, 0x9325, 0x9160, 0x57c1, 0xd794, 0xcdcd, 0x1, 0x0);
        gbc.writeMem(0x560d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9325, gbc.sp());
        EXPECT(0x560f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BD 03E5
        gbc.setState(0xef30, 0xe03, 0x1620, 0xf801, 0x218, 0xda9, 0x1, 0x0);
        gbc.writeMem(0xef30, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe03, gbc.sp());
        EXPECT(0xef32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef30));
        EXPECT(0xbd, gbc.readMem(0xef31));
        // CB BD 03E6
        gbc.setState(0x978d, 0xbce7, 0x3b60, 0xf8c1, 0x3a0a, 0x238a, 0x0, 0x0);
        gbc.writeMem(0x978d, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbce7, gbc.sp());
        EXPECT(0x978f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x978d));
        EXPECT(0xbd, gbc.readMem(0x978e));
        // CB BD 03E7
        gbc.setState(0xce6, 0x9a9a, 0x9c20, 0x8604, 0xf51e, 0x61c1, 0x0, 0x1);
        gbc.writeMem(0xce6, { 0xcb, 0xbd });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9a9a, gbc.sp());
        EXPECT(0xce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
