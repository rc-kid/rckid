#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_82)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_82) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 82 0000
        gbc.setState(0x41ee, 0x58bd, 0xe040, 0xf096, 0xfe0f, 0x1f31, 0x1, 0x1);
        gbc.writeMem(0x41ee, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x58bd);
        EXPECT(gbc.pc(), 0x41f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0001
        gbc.setState(0xab43, 0x2a59, 0xf260, 0xacd7, 0x3440, 0x4cba, 0x1, 0x0);
        gbc.writeMem(0xab43, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x2a59);
        EXPECT(gbc.pc(), 0xab45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab43), 0xcb);
        EXPECT(gbc.readMem(0xab44), 0x82);
        // CB 82 0002
        gbc.setState(0x2b8a, 0xe393, 0x4260, 0x7204, 0x9704, 0x442a, 0x1, 0x0);
        gbc.writeMem(0x2b8a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe393);
        EXPECT(gbc.pc(), 0x2b8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0003
        gbc.setState(0x7686, 0x90ff, 0x7e50, 0x904e, 0xb7fc, 0x4289, 0x0, 0x0);
        gbc.writeMem(0x7686, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x90ff);
        EXPECT(gbc.pc(), 0x7688);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0004
        gbc.setState(0x2e62, 0x9628, 0xfa20, 0x45b1, 0xbb83, 0xb82b, 0x1, 0x0);
        gbc.writeMem(0x2e62, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x9628);
        EXPECT(gbc.pc(), 0x2e64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0005
        gbc.setState(0x1ccc, 0x5d7b, 0x8b20, 0x12b1, 0x7252, 0x3d84, 0x0, 0x1);
        gbc.writeMem(0x1ccc, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x5d7b);
        EXPECT(gbc.pc(), 0x1cce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0006
        gbc.setState(0xcf3e, 0xb7f6, 0xc240, 0xcf85, 0xe943, 0x7a08, 0x1, 0x0);
        gbc.writeMem(0xcf3e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb7f6);
        EXPECT(gbc.pc(), 0xcf40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf3e), 0xcb);
        EXPECT(gbc.readMem(0xcf3f), 0x82);
        // CB 82 0007
        gbc.setState(0x17c7, 0x38e8, 0xa2b0, 0x39b6, 0x9ce7, 0xe686, 0x0, 0x1);
        gbc.writeMem(0x17c7, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x38e8);
        EXPECT(gbc.pc(), 0x17c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0008
        gbc.setState(0xcb56, 0xc4e9, 0xa8b0, 0x5064, 0x5c64, 0xb0b5, 0x1, 0x1);
        gbc.writeMem(0xcb56, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc4e9);
        EXPECT(gbc.pc(), 0xcb58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb56), 0xcb);
        EXPECT(gbc.readMem(0xcb57), 0x82);
        // CB 82 0009
        gbc.setState(0x2d50, 0xaedb, 0x4960, 0x8bce, 0x3c80, 0x3be8, 0x1, 0x1);
        gbc.writeMem(0x2d50, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xaedb);
        EXPECT(gbc.pc(), 0x2d52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 000A
        gbc.setState(0xa362, 0xf691, 0x1a70, 0xabfd, 0xaf8b, 0x6c30, 0x1, 0x0);
        gbc.writeMem(0xa362, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf691);
        EXPECT(gbc.pc(), 0xa364);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa362), 0xcb);
        EXPECT(gbc.readMem(0xa363), 0x82);
        // CB 82 000B
        gbc.setState(0xd562, 0xc93b, 0x8da0, 0xbedb, 0xbe22, 0x6ff9, 0x0, 0x1);
        gbc.writeMem(0xd562, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc93b);
        EXPECT(gbc.pc(), 0xd564);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd562), 0xcb);
        EXPECT(gbc.readMem(0xd563), 0x82);
        // CB 82 000C
        gbc.setState(0xd0be, 0x2400, 0x2da0, 0xa8aa, 0xa3bd, 0xac91, 0x1, 0x0);
        gbc.writeMem(0xd0be, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2400);
        EXPECT(gbc.pc(), 0xd0c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0be), 0xcb);
        EXPECT(gbc.readMem(0xd0bf), 0x82);
        // CB 82 000D
        gbc.setState(0x21ef, 0x81a6, 0x8060, 0xfd8a, 0x5f18, 0x66, 0x0, 0x0);
        gbc.writeMem(0x21ef, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x81a6);
        EXPECT(gbc.pc(), 0x21f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 000E
        gbc.setState(0xd518, 0xef78, 0x2ae0, 0x9677, 0x4098, 0x3372, 0x0, 0x1);
        gbc.writeMem(0xd518, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xef78);
        EXPECT(gbc.pc(), 0xd51a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd518), 0xcb);
        EXPECT(gbc.readMem(0xd519), 0x82);
        // CB 82 000F
        gbc.setState(0xcd4d, 0xb2ca, 0xeba0, 0xa4e1, 0xa27d, 0x1dc8, 0x0, 0x0);
        gbc.writeMem(0xcd4d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb2ca);
        EXPECT(gbc.pc(), 0xcd4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd4d), 0xcb);
        EXPECT(gbc.readMem(0xcd4e), 0x82);
        // CB 82 0010
        gbc.setState(0x7cc2, 0x6c7a, 0xb050, 0xde74, 0x75fe, 0x95ec, 0x1, 0x1);
        gbc.writeMem(0x7cc2, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6c7a);
        EXPECT(gbc.pc(), 0x7cc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0011
        gbc.setState(0xb25d, 0x58db, 0xf420, 0x55ef, 0xd13b, 0x2ec, 0x0, 0x0);
        gbc.writeMem(0xb25d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x58db);
        EXPECT(gbc.pc(), 0xb25f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb25d), 0xcb);
        EXPECT(gbc.readMem(0xb25e), 0x82);
        // CB 82 0012
        gbc.setState(0x3f3a, 0x6ecc, 0xc790, 0x60fd, 0xdd4f, 0x826c, 0x1, 0x0);
        gbc.writeMem(0x3f3a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6ecc);
        EXPECT(gbc.pc(), 0x3f3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0013
        gbc.setState(0x88b3, 0xaee1, 0x15d0, 0x8e90, 0x938b, 0x4cfc, 0x1, 0x1);
        gbc.writeMem(0x88b3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xaee1);
        EXPECT(gbc.pc(), 0x88b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b3), 0xcb);
        EXPECT(gbc.readMem(0x88b4), 0x82);
        // CB 82 0014
        gbc.setState(0x495f, 0x8b3e, 0xab50, 0xc8fb, 0xfb8, 0x5d82, 0x0, 0x1);
        gbc.writeMem(0x495f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8b3e);
        EXPECT(gbc.pc(), 0x4961);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0015
        gbc.setState(0xc3bd, 0xa54e, 0xc630, 0x1a39, 0x9590, 0x4c91, 0x0, 0x1);
        gbc.writeMem(0xc3bd, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa54e);
        EXPECT(gbc.pc(), 0xc3bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3bd), 0xcb);
        EXPECT(gbc.readMem(0xc3be), 0x82);
        // CB 82 0016
        gbc.setState(0x5c18, 0x17c3, 0xa6c0, 0xb985, 0x9405, 0x47ce, 0x1, 0x0);
        gbc.writeMem(0x5c18, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x17c3);
        EXPECT(gbc.pc(), 0x5c1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0017
        gbc.setState(0x7d41, 0x9f11, 0x20b0, 0x8bff, 0x675, 0xf0cf, 0x0, 0x1);
        gbc.writeMem(0x7d41, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x9f11);
        EXPECT(gbc.pc(), 0x7d43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0018
        gbc.setState(0x2b99, 0x7cfa, 0x92e0, 0x291b, 0x70a6, 0xdb59, 0x1, 0x1);
        gbc.writeMem(0x2b99, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7cfa);
        EXPECT(gbc.pc(), 0x2b9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0019
        gbc.setState(0x8071, 0x227c, 0x7d00, 0x7430, 0x60ae, 0xa9b3, 0x0, 0x0);
        gbc.writeMem(0x8071, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x227c);
        EXPECT(gbc.pc(), 0x8073);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8071), 0xcb);
        EXPECT(gbc.readMem(0x8072), 0x82);
        // CB 82 001A
        gbc.setState(0xba71, 0x992c, 0xf6d0, 0x3ba6, 0x1e77, 0x96ab, 0x1, 0x0);
        gbc.writeMem(0xba71, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x992c);
        EXPECT(gbc.pc(), 0xba73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba71), 0xcb);
        EXPECT(gbc.readMem(0xba72), 0x82);
        // CB 82 001B
        gbc.setState(0xe692, 0x215d, 0xf420, 0xc15d, 0x311b, 0x33a4, 0x0, 0x0);
        gbc.writeMem(0xe692, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x215d);
        EXPECT(gbc.pc(), 0xe694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe692), 0xcb);
        EXPECT(gbc.readMem(0xe693), 0x82);
        // CB 82 001C
        gbc.setState(0x63e2, 0xad51, 0x23c0, 0x864, 0xeb2f, 0x688, 0x0, 0x1);
        gbc.writeMem(0x63e2, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xad51);
        EXPECT(gbc.pc(), 0x63e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 001D
        gbc.setState(0x3c43, 0x95dc, 0x3900, 0x2668, 0x4d6f, 0x9b25, 0x0, 0x0);
        gbc.writeMem(0x3c43, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x95dc);
        EXPECT(gbc.pc(), 0x3c45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 001E
        gbc.setState(0x4fbf, 0x13bf, 0xee20, 0x4b4c, 0xe2e7, 0x29db, 0x0, 0x1);
        gbc.writeMem(0x4fbf, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x13bf);
        EXPECT(gbc.pc(), 0x4fc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 001F
        gbc.setState(0xe1aa, 0x9d03, 0x9ff0, 0x380f, 0xd9, 0x8793, 0x1, 0x1);
        gbc.writeMem(0xe1aa, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9d03);
        EXPECT(gbc.pc(), 0xe1ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1aa), 0xcb);
        EXPECT(gbc.readMem(0xe1ab), 0x82);
        // CB 82 0020
        gbc.setState(0xef60, 0x762f, 0x6220, 0x7b29, 0xce3, 0xdcfb, 0x0, 0x1);
        gbc.writeMem(0xef60, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x762f);
        EXPECT(gbc.pc(), 0xef62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef60), 0xcb);
        EXPECT(gbc.readMem(0xef61), 0x82);
        // CB 82 0021
        gbc.setState(0xebc1, 0x58c8, 0xde10, 0xfc08, 0x84cc, 0x9000, 0x0, 0x1);
        gbc.writeMem(0xebc1, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x58c8);
        EXPECT(gbc.pc(), 0xebc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebc1), 0xcb);
        EXPECT(gbc.readMem(0xebc2), 0x82);
        // CB 82 0022
        gbc.setState(0x5699, 0xca00, 0xa90, 0x6314, 0xce33, 0x1579, 0x1, 0x1);
        gbc.writeMem(0x5699, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xca00);
        EXPECT(gbc.pc(), 0x569b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0023
        gbc.setState(0x1db4, 0x9a12, 0xedd0, 0xa217, 0xb62c, 0x885f, 0x1, 0x1);
        gbc.writeMem(0x1db4, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9a12);
        EXPECT(gbc.pc(), 0x1db6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0024
        gbc.setState(0xe21f, 0xaf18, 0xca20, 0x9888, 0x752e, 0x4715, 0x1, 0x1);
        gbc.writeMem(0xe21f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xaf18);
        EXPECT(gbc.pc(), 0xe221);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe21f), 0xcb);
        EXPECT(gbc.readMem(0xe220), 0x82);
        // CB 82 0025
        gbc.setState(0x379f, 0x4f4f, 0xb9a0, 0x1324, 0x466f, 0xd1f6, 0x1, 0x1);
        gbc.writeMem(0x379f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4f4f);
        EXPECT(gbc.pc(), 0x37a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0026
        gbc.setState(0xa06e, 0x54f1, 0xbbd0, 0xad13, 0x1f0f, 0x5349, 0x1, 0x1);
        gbc.writeMem(0xa06e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x54f1);
        EXPECT(gbc.pc(), 0xa070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa06e), 0xcb);
        EXPECT(gbc.readMem(0xa06f), 0x82);
        // CB 82 0028
        gbc.setState(0x50c, 0xb881, 0x76d0, 0xf9ea, 0xd7b7, 0x8177, 0x1, 0x1);
        gbc.writeMem(0x50c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb881);
        EXPECT(gbc.pc(), 0x50e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0029
        gbc.setState(0x142a, 0xa2a7, 0x7180, 0x1353, 0xec4a, 0x5802, 0x0, 0x0);
        gbc.writeMem(0x142a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xa2a7);
        EXPECT(gbc.pc(), 0x142c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 002A
        gbc.setState(0xaa2b, 0xbd24, 0x18c0, 0x5efb, 0x85b1, 0x258a, 0x1, 0x1);
        gbc.writeMem(0xaa2b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xbd24);
        EXPECT(gbc.pc(), 0xaa2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa2b), 0xcb);
        EXPECT(gbc.readMem(0xaa2c), 0x82);
        // CB 82 002B
        gbc.setState(0x117d, 0xd8e7, 0x9c10, 0xe48, 0xc858, 0x4453, 0x1, 0x1);
        gbc.writeMem(0x117d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xd8e7);
        EXPECT(gbc.pc(), 0x117f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 002D
        gbc.setState(0x9311, 0x2b40, 0xfbc0, 0xb5e2, 0x219f, 0xf50b, 0x0, 0x1);
        gbc.writeMem(0x9311, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2b40);
        EXPECT(gbc.pc(), 0x9313);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9311), 0xcb);
        EXPECT(gbc.readMem(0x9312), 0x82);
        // CB 82 002E
        gbc.setState(0xc0f3, 0xf5c3, 0x1b10, 0x5e8c, 0xf630, 0xfd97, 0x0, 0x0);
        gbc.writeMem(0xc0f3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf5c3);
        EXPECT(gbc.pc(), 0xc0f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0f3), 0xcb);
        EXPECT(gbc.readMem(0xc0f4), 0x82);
        // CB 82 002F
        gbc.setState(0xb9c1, 0xf034, 0x84c0, 0xa2af, 0x88cd, 0x2d5e, 0x1, 0x0);
        gbc.writeMem(0xb9c1, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf034);
        EXPECT(gbc.pc(), 0xb9c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9c1), 0xcb);
        EXPECT(gbc.readMem(0xb9c2), 0x82);
        // CB 82 0030
        gbc.setState(0xb561, 0xe87c, 0x10e0, 0x58cd, 0x7afc, 0x153, 0x1, 0x0);
        gbc.writeMem(0xb561, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe87c);
        EXPECT(gbc.pc(), 0xb563);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb561), 0xcb);
        EXPECT(gbc.readMem(0xb562), 0x82);
        // CB 82 0032
        gbc.setState(0x4e97, 0x7817, 0x4c70, 0x1a61, 0xdcaa, 0xf950, 0x1, 0x1);
        gbc.writeMem(0x4e97, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7817);
        EXPECT(gbc.pc(), 0x4e99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0033
        gbc.setState(0x850f, 0x2d07, 0x5350, 0x444a, 0x4280, 0x49e3, 0x0, 0x0);
        gbc.writeMem(0x850f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x2d07);
        EXPECT(gbc.pc(), 0x8511);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x850f), 0xcb);
        EXPECT(gbc.readMem(0x8510), 0x82);
        // CB 82 0034
        gbc.setState(0x94e, 0xecd1, 0xb660, 0x5ee7, 0xd537, 0xab5e, 0x1, 0x0);
        gbc.writeMem(0x94e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xecd1);
        EXPECT(gbc.pc(), 0x950);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0035
        gbc.setState(0x7209, 0xc7d9, 0xf440, 0x2935, 0xb7c1, 0xfb43, 0x1, 0x0);
        gbc.writeMem(0x7209, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc7d9);
        EXPECT(gbc.pc(), 0x720b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0036
        gbc.setState(0x1648, 0x7ae8, 0xbd80, 0x22e4, 0x1161, 0x2dfb, 0x0, 0x1);
        gbc.writeMem(0x1648, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7ae8);
        EXPECT(gbc.pc(), 0x164a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0037
        gbc.setState(0x2b56, 0xf018, 0xc6b0, 0xee81, 0xa5e, 0x8e26, 0x1, 0x1);
        gbc.writeMem(0x2b56, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf018);
        EXPECT(gbc.pc(), 0x2b58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0038
        gbc.setState(0xc638, 0xa3da, 0x15b0, 0x60f3, 0xd65c, 0xbedc, 0x1, 0x0);
        gbc.writeMem(0xc638, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa3da);
        EXPECT(gbc.pc(), 0xc63a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc638), 0xcb);
        EXPECT(gbc.readMem(0xc639), 0x82);
        // CB 82 0039
        gbc.setState(0x107e, 0xe50a, 0x16e0, 0xa3e9, 0xbfb9, 0xda25, 0x1, 0x0);
        gbc.writeMem(0x107e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe50a);
        EXPECT(gbc.pc(), 0x1080);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 003A
        gbc.setState(0x7d90, 0x7d8f, 0x27e0, 0xa48e, 0xb7cb, 0xff2, 0x0, 0x0);
        gbc.writeMem(0x7d90, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7d8f);
        EXPECT(gbc.pc(), 0x7d92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 003B
        gbc.setState(0x6b7f, 0xe9a9, 0x3c50, 0x7870, 0xc11a, 0x7116, 0x1, 0x0);
        gbc.writeMem(0x6b7f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe9a9);
        EXPECT(gbc.pc(), 0x6b81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 003C
        gbc.setState(0x6de7, 0x7977, 0x28b0, 0x952a, 0x4184, 0x6467, 0x0, 0x0);
        gbc.writeMem(0x6de7, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7977);
        EXPECT(gbc.pc(), 0x6de9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 003D
        gbc.setState(0x4e60, 0xb01c, 0x2830, 0x441b, 0xa14a, 0x200e, 0x0, 0x0);
        gbc.writeMem(0x4e60, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb01c);
        EXPECT(gbc.pc(), 0x4e62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 003E
        gbc.setState(0x7695, 0x2124, 0xb270, 0x7425, 0x4774, 0x64f7, 0x1, 0x0);
        gbc.writeMem(0x7695, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x2124);
        EXPECT(gbc.pc(), 0x7697);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 003F
        gbc.setState(0x7c91, 0xb64f, 0xc390, 0xc4ef, 0x6492, 0x3198, 0x0, 0x0);
        gbc.writeMem(0x7c91, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb64f);
        EXPECT(gbc.pc(), 0x7c93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0040
        gbc.setState(0xef61, 0x80d1, 0x95e0, 0x6584, 0x4763, 0x83f, 0x0, 0x1);
        gbc.writeMem(0xef61, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x80d1);
        EXPECT(gbc.pc(), 0xef63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef61), 0xcb);
        EXPECT(gbc.readMem(0xef62), 0x82);
        // CB 82 0041
        gbc.setState(0x984a, 0xc91a, 0x70c0, 0x71e3, 0x13ac, 0x9f70, 0x1, 0x1);
        gbc.writeMem(0x984a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc91a);
        EXPECT(gbc.pc(), 0x984c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x984a), 0xcb);
        EXPECT(gbc.readMem(0x984b), 0x82);
        // CB 82 0042
        gbc.setState(0x1a84, 0x2308, 0xea40, 0x5434, 0xff82, 0x5920, 0x0, 0x1);
        gbc.writeMem(0x1a84, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2308);
        EXPECT(gbc.pc(), 0x1a86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0043
        gbc.setState(0x1002, 0x2880, 0xf030, 0xc86d, 0x2172, 0x56b0, 0x1, 0x0);
        gbc.writeMem(0x1002, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2880);
        EXPECT(gbc.pc(), 0x1004);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0044
        gbc.setState(0xc958, 0xbbd5, 0xdf80, 0x903b, 0xe6dc, 0x3631, 0x0, 0x0);
        gbc.writeMem(0xc958, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xbbd5);
        EXPECT(gbc.pc(), 0xc95a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc958), 0xcb);
        EXPECT(gbc.readMem(0xc959), 0x82);
        // CB 82 0045
        gbc.setState(0x7f3f, 0x2e7c, 0x1230, 0x220d, 0xe68f, 0xdc1d, 0x1, 0x0);
        gbc.writeMem(0x7f3f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2e7c);
        EXPECT(gbc.pc(), 0x7f41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0046
        gbc.setState(0x4b23, 0x92e4, 0x32b0, 0xabb5, 0x5ee9, 0xc199, 0x1, 0x0);
        gbc.writeMem(0x4b23, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x92e4);
        EXPECT(gbc.pc(), 0x4b25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0049
        gbc.setState(0x2d05, 0x9f70, 0x8500, 0x4a28, 0xccd7, 0x7c7c, 0x0, 0x1);
        gbc.writeMem(0x2d05, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9f70);
        EXPECT(gbc.pc(), 0x2d07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 004A
        gbc.setState(0x1d70, 0x3869, 0x6090, 0xe4e, 0x681, 0xad66, 0x1, 0x1);
        gbc.writeMem(0x1d70, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3869);
        EXPECT(gbc.pc(), 0x1d72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 004B
        gbc.setState(0x5fd2, 0xe125, 0xe4c0, 0x71ff, 0xe5e, 0x572f, 0x1, 0x1);
        gbc.writeMem(0x5fd2, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe125);
        EXPECT(gbc.pc(), 0x5fd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 004C
        gbc.setState(0xbf2f, 0x6d85, 0xb840, 0x9ae9, 0x8055, 0x8090, 0x1, 0x1);
        gbc.writeMem(0xbf2f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6d85);
        EXPECT(gbc.pc(), 0xbf31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf2f), 0xcb);
        EXPECT(gbc.readMem(0xbf30), 0x82);
        // CB 82 004D
        gbc.setState(0x3335, 0x4ade, 0x8ab0, 0xf255, 0xd0c5, 0x1dc, 0x1, 0x0);
        gbc.writeMem(0x3335, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x4ade);
        EXPECT(gbc.pc(), 0x3337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 004E
        gbc.setState(0xc8c0, 0xb945, 0xc060, 0xc355, 0x4de5, 0xbcc1, 0x0, 0x0);
        gbc.writeMem(0xc8c0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb945);
        EXPECT(gbc.pc(), 0xc8c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8c0), 0xcb);
        EXPECT(gbc.readMem(0xc8c1), 0x82);
        // CB 82 0050
        gbc.setState(0xbddc, 0xa7b2, 0x7fd0, 0xcf67, 0xf5e6, 0x293f, 0x1, 0x1);
        gbc.writeMem(0xbddc, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa7b2);
        EXPECT(gbc.pc(), 0xbdde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbddc), 0xcb);
        EXPECT(gbc.readMem(0xbddd), 0x82);
        // CB 82 0051
        gbc.setState(0x2058, 0x1685, 0x2b50, 0xf7b4, 0x7f09, 0xcbad, 0x0, 0x1);
        gbc.writeMem(0x2058, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1685);
        EXPECT(gbc.pc(), 0x205a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0052
        gbc.setState(0xef1c, 0xddd4, 0x4ff0, 0xd322, 0x6c22, 0x82c4, 0x0, 0x1);
        gbc.writeMem(0xef1c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xddd4);
        EXPECT(gbc.pc(), 0xef1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef1c), 0xcb);
        EXPECT(gbc.readMem(0xef1d), 0x82);
        // CB 82 0053
        gbc.setState(0x9126, 0x5314, 0xd400, 0xc7ae, 0x6f27, 0x53ff, 0x0, 0x0);
        gbc.writeMem(0x9126, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5314);
        EXPECT(gbc.pc(), 0x9128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9126), 0xcb);
        EXPECT(gbc.readMem(0x9127), 0x82);
        // CB 82 0054
        gbc.setState(0x67b4, 0x2038, 0x91b0, 0x8025, 0x3f34, 0x52d3, 0x0, 0x1);
        gbc.writeMem(0x67b4, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2038);
        EXPECT(gbc.pc(), 0x67b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0055
        gbc.setState(0xc252, 0xfa04, 0x3130, 0x1dea, 0x38b0, 0xd18b, 0x1, 0x0);
        gbc.writeMem(0xc252, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xfa04);
        EXPECT(gbc.pc(), 0xc254);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc252), 0xcb);
        EXPECT(gbc.readMem(0xc253), 0x82);
        // CB 82 0056
        gbc.setState(0x9008, 0xaf0a, 0x25a0, 0x961d, 0xce8d, 0x86d3, 0x1, 0x1);
        gbc.writeMem(0x9008, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xaf0a);
        EXPECT(gbc.pc(), 0x900a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9008), 0xcb);
        EXPECT(gbc.readMem(0x9009), 0x82);
        // CB 82 0057
        gbc.setState(0x7439, 0xd5f, 0xa710, 0x3b31, 0xdda9, 0x6f7a, 0x0, 0x1);
        gbc.writeMem(0x7439, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd5f);
        EXPECT(gbc.pc(), 0x743b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0058
        gbc.setState(0x531d, 0xf99f, 0xa120, 0x2990, 0xb21c, 0x1eb9, 0x1, 0x1);
        gbc.writeMem(0x531d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf99f);
        EXPECT(gbc.pc(), 0x531f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0059
        gbc.setState(0xa74e, 0x9edc, 0x2e90, 0x8123, 0x5373, 0xeb7b, 0x0, 0x0);
        gbc.writeMem(0xa74e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9edc);
        EXPECT(gbc.pc(), 0xa750);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa74e), 0xcb);
        EXPECT(gbc.readMem(0xa74f), 0x82);
        // CB 82 005B
        gbc.setState(0xc0c3, 0xe102, 0x9680, 0x8617, 0x18d6, 0x43a6, 0x1, 0x0);
        gbc.writeMem(0xc0c3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xe102);
        EXPECT(gbc.pc(), 0xc0c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0c3), 0xcb);
        EXPECT(gbc.readMem(0xc0c4), 0x82);
        // CB 82 005C
        gbc.setState(0x312d, 0x79a2, 0x9c30, 0x3cf1, 0xa597, 0x9526, 0x1, 0x0);
        gbc.writeMem(0x312d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x79a2);
        EXPECT(gbc.pc(), 0x312f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 005D
        gbc.setState(0x44bc, 0x4542, 0xca40, 0x86a3, 0xa8c, 0x1d6a, 0x1, 0x1);
        gbc.writeMem(0x44bc, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4542);
        EXPECT(gbc.pc(), 0x44be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 005F
        gbc.setState(0x93fe, 0x247f, 0xbee0, 0xb6d9, 0xde4, 0xff61, 0x1, 0x1);
        gbc.writeMem(0x93fe, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x247f);
        EXPECT(gbc.pc(), 0x9400);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93fe), 0xcb);
        EXPECT(gbc.readMem(0x93ff), 0x82);
        // CB 82 0060
        gbc.setState(0xa1c6, 0x6ca5, 0x4bc0, 0x18c3, 0xabfb, 0x297a, 0x0, 0x0);
        gbc.writeMem(0xa1c6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6ca5);
        EXPECT(gbc.pc(), 0xa1c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1c6), 0xcb);
        EXPECT(gbc.readMem(0xa1c7), 0x82);
        // CB 82 0061
        gbc.setState(0xa17, 0x96f1, 0x2c50, 0xfe02, 0xd2f9, 0xbf31, 0x1, 0x1);
        gbc.writeMem(0xa17, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x96f1);
        EXPECT(gbc.pc(), 0xa19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0062
        gbc.setState(0x1dd3, 0xb0e5, 0xe1f0, 0x2343, 0x512c, 0x514c, 0x0, 0x1);
        gbc.writeMem(0x1dd3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb0e5);
        EXPECT(gbc.pc(), 0x1dd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0063
        gbc.setState(0x2e86, 0xf436, 0xe9b0, 0x88ff, 0xdd1c, 0x62f7, 0x0, 0x1);
        gbc.writeMem(0x2e86, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf436);
        EXPECT(gbc.pc(), 0x2e88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0064
        gbc.setState(0xb28c, 0x37d5, 0xfc90, 0x53d6, 0xc049, 0xf7ab, 0x0, 0x0);
        gbc.writeMem(0xb28c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x37d5);
        EXPECT(gbc.pc(), 0xb28e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb28c), 0xcb);
        EXPECT(gbc.readMem(0xb28d), 0x82);
        // CB 82 0065
        gbc.setState(0xba7, 0xdae3, 0xa60, 0x78e, 0xc127, 0x7b69, 0x1, 0x1);
        gbc.writeMem(0xba7, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xdae3);
        EXPECT(gbc.pc(), 0xba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0066
        gbc.setState(0xb129, 0xb257, 0x42a0, 0x52b6, 0xda55, 0xc494, 0x1, 0x0);
        gbc.writeMem(0xb129, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb257);
        EXPECT(gbc.pc(), 0xb12b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb129), 0xcb);
        EXPECT(gbc.readMem(0xb12a), 0x82);
        // CB 82 0067
        gbc.setState(0x24d2, 0x661e, 0x10, 0x460b, 0x617d, 0x1945, 0x0, 0x1);
        gbc.writeMem(0x24d2, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x661e);
        EXPECT(gbc.pc(), 0x24d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0068
        gbc.setState(0xe336, 0x377a, 0x38a0, 0x70d2, 0xa545, 0x6b05, 0x1, 0x1);
        gbc.writeMem(0xe336, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x377a);
        EXPECT(gbc.pc(), 0xe338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe336), 0xcb);
        EXPECT(gbc.readMem(0xe337), 0x82);
        // CB 82 0069
        gbc.setState(0xe8b6, 0x5d20, 0x5800, 0x1b58, 0x96fb, 0x56e0, 0x1, 0x1);
        gbc.writeMem(0xe8b6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5d20);
        EXPECT(gbc.pc(), 0xe8b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8b6), 0xcb);
        EXPECT(gbc.readMem(0xe8b7), 0x82);
        // CB 82 006B
        gbc.setState(0x9f64, 0x2869, 0xe9f0, 0x4095, 0xe001, 0x1c78, 0x1, 0x0);
        gbc.writeMem(0x9f64, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2869);
        EXPECT(gbc.pc(), 0x9f66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f64), 0xcb);
        EXPECT(gbc.readMem(0x9f65), 0x82);
        // CB 82 006C
        gbc.setState(0xc213, 0x2667, 0xfad0, 0x4784, 0xd45, 0xcdb2, 0x0, 0x1);
        gbc.writeMem(0xc213, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x2667);
        EXPECT(gbc.pc(), 0xc215);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc213), 0xcb);
        EXPECT(gbc.readMem(0xc214), 0x82);
        // CB 82 006D
        gbc.setState(0x6a5c, 0xfa4c, 0xac10, 0x70cc, 0xa5b8, 0xb659, 0x0, 0x1);
        gbc.writeMem(0x6a5c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xfa4c);
        EXPECT(gbc.pc(), 0x6a5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 006E
        gbc.setState(0xb9c2, 0x92cb, 0x2ee0, 0x7981, 0x45b5, 0xf6c5, 0x1, 0x0);
        gbc.writeMem(0xb9c2, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x92cb);
        EXPECT(gbc.pc(), 0xb9c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9c2), 0xcb);
        EXPECT(gbc.readMem(0xb9c3), 0x82);
        // CB 82 006F
        gbc.setState(0xa4bb, 0x649b, 0xa2d0, 0xf880, 0xef31, 0x5273, 0x1, 0x0);
        gbc.writeMem(0xa4bb, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x649b);
        EXPECT(gbc.pc(), 0xa4bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4bb), 0xcb);
        EXPECT(gbc.readMem(0xa4bc), 0x82);
        // CB 82 0070
        gbc.setState(0x46ea, 0x4f14, 0x8510, 0x58b7, 0x7d17, 0xf30d, 0x1, 0x0);
        gbc.writeMem(0x46ea, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4f14);
        EXPECT(gbc.pc(), 0x46ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0071
        gbc.setState(0x15da, 0xcc20, 0x5900, 0xc00e, 0x1787, 0x71c4, 0x1, 0x1);
        gbc.writeMem(0x15da, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xcc20);
        EXPECT(gbc.pc(), 0x15dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0072
        gbc.setState(0x2313, 0x88c0, 0x6f70, 0x4277, 0x51df, 0x8b0, 0x1, 0x1);
        gbc.writeMem(0x2313, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x88c0);
        EXPECT(gbc.pc(), 0x2315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0073
        gbc.setState(0x28b1, 0x1191, 0xa800, 0xad79, 0xab2d, 0x1a0b, 0x0, 0x0);
        gbc.writeMem(0x28b1, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1191);
        EXPECT(gbc.pc(), 0x28b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0074
        gbc.setState(0x27d2, 0xf0d3, 0xa3e0, 0x790d, 0x59c1, 0xb886, 0x1, 0x0);
        gbc.writeMem(0x27d2, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf0d3);
        EXPECT(gbc.pc(), 0x27d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0075
        gbc.setState(0x1e12, 0x6078, 0xbcf0, 0x5ed2, 0x6499, 0xd258, 0x1, 0x0);
        gbc.writeMem(0x1e12, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6078);
        EXPECT(gbc.pc(), 0x1e14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0076
        gbc.setState(0xd48e, 0x4243, 0x8190, 0x1626, 0x2f00, 0x5c05, 0x0, 0x1);
        gbc.writeMem(0xd48e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x4243);
        EXPECT(gbc.pc(), 0xd490);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd48e), 0xcb);
        EXPECT(gbc.readMem(0xd48f), 0x82);
        // CB 82 0077
        gbc.setState(0xd6ef, 0x6152, 0xad40, 0x8760, 0x20ff, 0x1582, 0x0, 0x0);
        gbc.writeMem(0xd6ef, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x6152);
        EXPECT(gbc.pc(), 0xd6f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6ef), 0xcb);
        EXPECT(gbc.readMem(0xd6f0), 0x82);
        // CB 82 0078
        gbc.setState(0x9432, 0x7be3, 0x1200, 0xf5be, 0x991b, 0x9df3, 0x0, 0x0);
        gbc.writeMem(0x9432, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7be3);
        EXPECT(gbc.pc(), 0x9434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9432), 0xcb);
        EXPECT(gbc.readMem(0x9433), 0x82);
        // CB 82 0079
        gbc.setState(0x4469, 0xb182, 0x1410, 0xced9, 0xacd5, 0x186f, 0x0, 0x1);
        gbc.writeMem(0x4469, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb182);
        EXPECT(gbc.pc(), 0x446b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 007A
        gbc.setState(0x7e40, 0x11c4, 0xc5a0, 0xde6b, 0xa62b, 0x8a41, 0x0, 0x0);
        gbc.writeMem(0x7e40, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x11c4);
        EXPECT(gbc.pc(), 0x7e42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 007B
        gbc.setState(0x5b90, 0xc664, 0x580, 0x8975, 0xa42b, 0x5655, 0x0, 0x0);
        gbc.writeMem(0x5b90, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc664);
        EXPECT(gbc.pc(), 0x5b92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 007C
        gbc.setState(0xc631, 0x9dcf, 0x6830, 0xb864, 0x5d38, 0xec7c, 0x0, 0x1);
        gbc.writeMem(0xc631, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9dcf);
        EXPECT(gbc.pc(), 0xc633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc631), 0xcb);
        EXPECT(gbc.readMem(0xc632), 0x82);
        // CB 82 007D
        gbc.setState(0xc2c7, 0x32ca, 0x8f30, 0xb3b8, 0xc2e3, 0xdaf3, 0x1, 0x0);
        gbc.writeMem(0xc2c7, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x32ca);
        EXPECT(gbc.pc(), 0xc2c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2c7), 0xcb);
        EXPECT(gbc.readMem(0xc2c8), 0x82);
        // CB 82 007E
        gbc.setState(0x5a9c, 0xd5c4, 0x20c0, 0x1fcc, 0x18ae, 0x3d05, 0x0, 0x0);
        gbc.writeMem(0x5a9c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd5c4);
        EXPECT(gbc.pc(), 0x5a9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 007F
        gbc.setState(0xe896, 0xe7ec, 0xab80, 0x565a, 0x952b, 0xfea8, 0x0, 0x0);
        gbc.writeMem(0xe896, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe7ec);
        EXPECT(gbc.pc(), 0xe898);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe896), 0xcb);
        EXPECT(gbc.readMem(0xe897), 0x82);
        // CB 82 0080
        gbc.setState(0x377, 0x9fec, 0x40c0, 0x1cb8, 0xecb0, 0xe650, 0x0, 0x0);
        gbc.writeMem(0x377, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9fec);
        EXPECT(gbc.pc(), 0x379);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0081
        gbc.setState(0xc6, 0xa0c0, 0xf9a0, 0x7f24, 0xc3ed, 0x4eb9, 0x0, 0x1);
        gbc.writeMem(0xc6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa0c0);
        EXPECT(gbc.pc(), 0xc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0082
        gbc.setState(0xc684, 0x597d, 0xc190, 0xda7e, 0x49c6, 0x3544, 0x1, 0x0);
        gbc.writeMem(0xc684, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x597d);
        EXPECT(gbc.pc(), 0xc686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc684), 0xcb);
        EXPECT(gbc.readMem(0xc685), 0x82);
        // CB 82 0083
        gbc.setState(0x3c70, 0x33d3, 0xc1c0, 0x98b4, 0xdc69, 0xf6e6, 0x0, 0x1);
        gbc.writeMem(0x3c70, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x33d3);
        EXPECT(gbc.pc(), 0x3c72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0084
        gbc.setState(0x75f0, 0x1f2b, 0xb440, 0x4e65, 0x83aa, 0xc461, 0x1, 0x0);
        gbc.writeMem(0x75f0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1f2b);
        EXPECT(gbc.pc(), 0x75f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0085
        gbc.setState(0x5f83, 0xfde4, 0xab70, 0x9e40, 0xa08, 0xf117, 0x0, 0x0);
        gbc.writeMem(0x5f83, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xfde4);
        EXPECT(gbc.pc(), 0x5f85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0086
        gbc.setState(0xa8a5, 0x1243, 0xa1d0, 0x887d, 0xc1ac, 0xa01f, 0x1, 0x0);
        gbc.writeMem(0xa8a5, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x1243);
        EXPECT(gbc.pc(), 0xa8a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8a5), 0xcb);
        EXPECT(gbc.readMem(0xa8a6), 0x82);
        // CB 82 0087
        gbc.setState(0x2c16, 0xb13e, 0x9270, 0x74a1, 0xf0e9, 0x6f35, 0x1, 0x1);
        gbc.writeMem(0x2c16, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb13e);
        EXPECT(gbc.pc(), 0x2c18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0088
        gbc.setState(0x1dd8, 0x4a21, 0xc910, 0xbf12, 0xbd7, 0x1ac7, 0x1, 0x0);
        gbc.writeMem(0x1dd8, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x4a21);
        EXPECT(gbc.pc(), 0x1dda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0089
        gbc.setState(0x44a0, 0xcdff, 0x3bd0, 0x7952, 0x6c11, 0x82a3, 0x0, 0x1);
        gbc.writeMem(0x44a0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xcdff);
        EXPECT(gbc.pc(), 0x44a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 008A
        gbc.setState(0xc939, 0x5f57, 0xbe40, 0x21a6, 0x1fb8, 0xd4e0, 0x0, 0x0);
        gbc.writeMem(0xc939, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5f57);
        EXPECT(gbc.pc(), 0xc93b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc939), 0xcb);
        EXPECT(gbc.readMem(0xc93a), 0x82);
        // CB 82 008B
        gbc.setState(0x87e8, 0xa6e, 0x2420, 0x3e3a, 0x1b71, 0x3e3b, 0x0, 0x0);
        gbc.writeMem(0x87e8, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa6e);
        EXPECT(gbc.pc(), 0x87ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87e8), 0xcb);
        EXPECT(gbc.readMem(0x87e9), 0x82);
        // CB 82 008C
        gbc.setState(0x17f5, 0x9935, 0x69c0, 0xfe58, 0xc1a0, 0x6f48, 0x1, 0x1);
        gbc.writeMem(0x17f5, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9935);
        EXPECT(gbc.pc(), 0x17f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 008D
        gbc.setState(0xbda6, 0x134b, 0x24d0, 0x7147, 0x9324, 0xcab5, 0x0, 0x1);
        gbc.writeMem(0xbda6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x134b);
        EXPECT(gbc.pc(), 0xbda8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbda6), 0xcb);
        EXPECT(gbc.readMem(0xbda7), 0x82);
        // CB 82 008E
        gbc.setState(0x6dc5, 0xc1a, 0xeda0, 0xc89b, 0xf584, 0xcf5e, 0x0, 0x1);
        gbc.writeMem(0x6dc5, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc1a);
        EXPECT(gbc.pc(), 0x6dc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 008F
        gbc.setState(0xebd, 0xd0f, 0xc480, 0xbcb, 0xd07a, 0x811, 0x1, 0x0);
        gbc.writeMem(0xebd, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xd0f);
        EXPECT(gbc.pc(), 0xebf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0090
        gbc.setState(0xadea, 0x7b13, 0xc350, 0x5a55, 0xcebf, 0xe735, 0x0, 0x1);
        gbc.writeMem(0xadea, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7b13);
        EXPECT(gbc.pc(), 0xadec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadea), 0xcb);
        EXPECT(gbc.readMem(0xadeb), 0x82);
        // CB 82 0091
        gbc.setState(0xa365, 0x36f7, 0x9ca0, 0x9a91, 0x143, 0xf6a6, 0x0, 0x1);
        gbc.writeMem(0xa365, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x36f7);
        EXPECT(gbc.pc(), 0xa367);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa365), 0xcb);
        EXPECT(gbc.readMem(0xa366), 0x82);
        // CB 82 0092
        gbc.setState(0xec9d, 0xaadb, 0xf7a0, 0x6b68, 0xcdb6, 0xe127, 0x0, 0x0);
        gbc.writeMem(0xec9d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xaadb);
        EXPECT(gbc.pc(), 0xec9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec9d), 0xcb);
        EXPECT(gbc.readMem(0xec9e), 0x82);
        // CB 82 0094
        gbc.setState(0x8808, 0xed10, 0xe020, 0xf39, 0x878f, 0xafdc, 0x1, 0x1);
        gbc.writeMem(0x8808, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xed10);
        EXPECT(gbc.pc(), 0x880a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8808), 0xcb);
        EXPECT(gbc.readMem(0x8809), 0x82);
        // CB 82 0095
        gbc.setState(0x6f4a, 0x714d, 0x2ab0, 0x64e7, 0xbd2c, 0xb3b4, 0x0, 0x1);
        gbc.writeMem(0x6f4a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x714d);
        EXPECT(gbc.pc(), 0x6f4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0097
        gbc.setState(0x5a71, 0x465f, 0xb1d0, 0x7470, 0x7e7e, 0x6a6c, 0x1, 0x1);
        gbc.writeMem(0x5a71, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x465f);
        EXPECT(gbc.pc(), 0x5a73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0098
        gbc.setState(0xc7ff, 0x6ac5, 0xaed0, 0x2004, 0x2829, 0x82cd, 0x1, 0x1);
        gbc.writeMem(0xc7ff, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6ac5);
        EXPECT(gbc.pc(), 0xc801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7ff), 0xcb);
        EXPECT(gbc.readMem(0xc800), 0x82);
        // CB 82 0099
        gbc.setState(0x4f02, 0xb858, 0xc370, 0xbffe, 0x2592, 0xb1cf, 0x1, 0x0);
        gbc.writeMem(0x4f02, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb858);
        EXPECT(gbc.pc(), 0x4f04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 009A
        gbc.setState(0x4899, 0xb80a, 0x4a40, 0x59e4, 0xc8e2, 0x3b84, 0x0, 0x0);
        gbc.writeMem(0x4899, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb80a);
        EXPECT(gbc.pc(), 0x489b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 009B
        gbc.setState(0xa7e6, 0x9484, 0x27d0, 0xf7ff, 0x9f90, 0x36a4, 0x0, 0x0);
        gbc.writeMem(0xa7e6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9484);
        EXPECT(gbc.pc(), 0xa7e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7e6), 0xcb);
        EXPECT(gbc.readMem(0xa7e7), 0x82);
        // CB 82 009C
        gbc.setState(0x798e, 0x7fd8, 0x28e0, 0x566, 0x5486, 0xe082, 0x1, 0x0);
        gbc.writeMem(0x798e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7fd8);
        EXPECT(gbc.pc(), 0x7990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 009D
        gbc.setState(0xd217, 0x8f10, 0xbe80, 0x28ec, 0xc939, 0xccf4, 0x0, 0x0);
        gbc.writeMem(0xd217, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8f10);
        EXPECT(gbc.pc(), 0xd219);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd217), 0xcb);
        EXPECT(gbc.readMem(0xd218), 0x82);
        // CB 82 009E
        gbc.setState(0x65bb, 0xff97, 0xf460, 0x6465, 0x68f8, 0x1636, 0x1, 0x0);
        gbc.writeMem(0x65bb, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xff97);
        EXPECT(gbc.pc(), 0x65bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 009F
        gbc.setState(0x4f8c, 0x5b94, 0x7890, 0xc5d8, 0x87d9, 0xd710, 0x0, 0x1);
        gbc.writeMem(0x4f8c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5b94);
        EXPECT(gbc.pc(), 0x4f8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00A0
        gbc.setState(0x5ef8, 0xe194, 0x15b0, 0x933, 0x21c1, 0xed9d, 0x1, 0x0);
        gbc.writeMem(0x5ef8, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xe194);
        EXPECT(gbc.pc(), 0x5efa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00A1
        gbc.setState(0x31fc, 0x64a8, 0x3f00, 0x429, 0x41c0, 0xc2f4, 0x1, 0x1);
        gbc.writeMem(0x31fc, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x64a8);
        EXPECT(gbc.pc(), 0x31fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 00A2
        gbc.setState(0x8f46, 0xa0f, 0x4200, 0xd275, 0x6f3e, 0x91e2, 0x1, 0x0);
        gbc.writeMem(0x8f46, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa0f);
        EXPECT(gbc.pc(), 0x8f48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f46), 0xcb);
        EXPECT(gbc.readMem(0x8f47), 0x82);
        // CB 82 00A3
        gbc.setState(0x1915, 0x41c4, 0xe210, 0x25c8, 0xd251, 0x5217, 0x1, 0x1);
        gbc.writeMem(0x1915, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x41c4);
        EXPECT(gbc.pc(), 0x1917);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00A4
        gbc.setState(0x5e9a, 0x654e, 0x8cd0, 0x3d24, 0x39d8, 0x1701, 0x0, 0x0);
        gbc.writeMem(0x5e9a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x654e);
        EXPECT(gbc.pc(), 0x5e9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00A5
        gbc.setState(0x5cfd, 0xff40, 0x58e0, 0x479, 0x7e60, 0xb6eb, 0x1, 0x0);
        gbc.writeMem(0x5cfd, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xff40);
        EXPECT(gbc.pc(), 0x5cff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 00A6
        gbc.setState(0x6a0d, 0x4886, 0x49d0, 0x3fa5, 0x1996, 0x58be, 0x0, 0x1);
        gbc.writeMem(0x6a0d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4886);
        EXPECT(gbc.pc(), 0x6a0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00A7
        gbc.setState(0x2630, 0xece8, 0x4ed0, 0x9f04, 0xf79e, 0xa364, 0x0, 0x0);
        gbc.writeMem(0x2630, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xece8);
        EXPECT(gbc.pc(), 0x2632);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00A8
        gbc.setState(0xc12d, 0x11, 0x7840, 0x1bcd, 0x5a25, 0xb964, 0x1, 0x0);
        gbc.writeMem(0xc12d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x11);
        EXPECT(gbc.pc(), 0xc12f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc12d), 0xcb);
        EXPECT(gbc.readMem(0xc12e), 0x82);
        // CB 82 00A9
        gbc.setState(0x2f9d, 0x69b6, 0x57b0, 0xf160, 0x2595, 0xedee, 0x1, 0x0);
        gbc.writeMem(0x2f9d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x69b6);
        EXPECT(gbc.pc(), 0x2f9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00AB
        gbc.setState(0x9cbc, 0x87e1, 0x6a70, 0x9b97, 0x652c, 0x2862, 0x0, 0x0);
        gbc.writeMem(0x9cbc, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x87e1);
        EXPECT(gbc.pc(), 0x9cbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cbc), 0xcb);
        EXPECT(gbc.readMem(0x9cbd), 0x82);
        // CB 82 00AC
        gbc.setState(0x3c61, 0xe772, 0x7630, 0xa591, 0x9430, 0x65d1, 0x1, 0x1);
        gbc.writeMem(0x3c61, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe772);
        EXPECT(gbc.pc(), 0x3c63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00AD
        gbc.setState(0x97ce, 0x9f99, 0x80d0, 0xf223, 0x8ae0, 0xdc73, 0x0, 0x1);
        gbc.writeMem(0x97ce, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9f99);
        EXPECT(gbc.pc(), 0x97d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97ce), 0xcb);
        EXPECT(gbc.readMem(0x97cf), 0x82);
        // CB 82 00AE
        gbc.setState(0x458f, 0xa6a4, 0x630, 0x5781, 0x29ba, 0x43cb, 0x1, 0x1);
        gbc.writeMem(0x458f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa6a4);
        EXPECT(gbc.pc(), 0x4591);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00AF
        gbc.setState(0x2dd0, 0xc220, 0x29e0, 0x59f8, 0x10eb, 0xeb3b, 0x0, 0x0);
        gbc.writeMem(0x2dd0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc220);
        EXPECT(gbc.pc(), 0x2dd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 00B0
        gbc.setState(0xe4c9, 0xc613, 0x9b80, 0x2099, 0x36b5, 0x5d36, 0x0, 0x1);
        gbc.writeMem(0xe4c9, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xc613);
        EXPECT(gbc.pc(), 0xe4cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4c9), 0xcb);
        EXPECT(gbc.readMem(0xe4ca), 0x82);
        // CB 82 00B1
        gbc.setState(0x3c8, 0xc1e, 0x3a80, 0x41e5, 0x319a, 0x14aa, 0x1, 0x0);
        gbc.writeMem(0x3c8, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc1e);
        EXPECT(gbc.pc(), 0x3ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 00B2
        gbc.setState(0x3902, 0xf90b, 0x60f0, 0x4cd5, 0x61a3, 0xb9eb, 0x1, 0x1);
        gbc.writeMem(0x3902, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xf90b);
        EXPECT(gbc.pc(), 0x3904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00B4
        gbc.setState(0x9712, 0xfcad, 0x1fe0, 0x2557, 0xb901, 0xf77d, 0x0, 0x1);
        gbc.writeMem(0x9712, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xfcad);
        EXPECT(gbc.pc(), 0x9714);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9712), 0xcb);
        EXPECT(gbc.readMem(0x9713), 0x82);
        // CB 82 00B5
        gbc.setState(0x34df, 0xdf7c, 0x6740, 0xfe82, 0x99ba, 0xe818, 0x1, 0x1);
        gbc.writeMem(0x34df, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xdf7c);
        EXPECT(gbc.pc(), 0x34e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 00B6
        gbc.setState(0x98ad, 0xac0d, 0x6de0, 0x4675, 0xeafa, 0xa8f1, 0x1, 0x0);
        gbc.writeMem(0x98ad, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xac0d);
        EXPECT(gbc.pc(), 0x98af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98ad), 0xcb);
        EXPECT(gbc.readMem(0x98ae), 0x82);
        // CB 82 00B7
        gbc.setState(0x9160, 0xda63, 0x5700, 0xad6, 0x2f72, 0x987a, 0x1, 0x0);
        gbc.writeMem(0x9160, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xda63);
        EXPECT(gbc.pc(), 0x9162);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9160), 0xcb);
        EXPECT(gbc.readMem(0x9161), 0x82);
        // CB 82 00B8
        gbc.setState(0x8a82, 0xd2f, 0xca40, 0x3305, 0x4f75, 0x8035, 0x1, 0x0);
        gbc.writeMem(0x8a82, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xd2f);
        EXPECT(gbc.pc(), 0x8a84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a82), 0xcb);
        EXPECT(gbc.readMem(0x8a83), 0x82);
        // CB 82 00B9
        gbc.setState(0x5c3e, 0xae4e, 0xd490, 0x73a1, 0x309, 0x5ff5, 0x0, 0x0);
        gbc.writeMem(0x5c3e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xae4e);
        EXPECT(gbc.pc(), 0x5c40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00BA
        gbc.setState(0x7911, 0xc048, 0xa850, 0xab15, 0xcdeb, 0x41e1, 0x1, 0x1);
        gbc.writeMem(0x7911, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc048);
        EXPECT(gbc.pc(), 0x7913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00BB
        gbc.setState(0xd110, 0x4334, 0x7fc0, 0x349e, 0xb26c, 0xf07c, 0x0, 0x1);
        gbc.writeMem(0xd110, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4334);
        EXPECT(gbc.pc(), 0xd112);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd110), 0xcb);
        EXPECT(gbc.readMem(0xd111), 0x82);
        // CB 82 00BC
        gbc.setState(0x5137, 0x8790, 0x4350, 0x157, 0x57fd, 0x9e68, 0x0, 0x1);
        gbc.writeMem(0x5137, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8790);
        EXPECT(gbc.pc(), 0x5139);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00BD
        gbc.setState(0x3f69, 0xdf7a, 0x58c0, 0xd482, 0x27fe, 0x1fc7, 0x1, 0x0);
        gbc.writeMem(0x3f69, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xdf7a);
        EXPECT(gbc.pc(), 0x3f6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 00BE
        gbc.setState(0x8439, 0x6665, 0xd360, 0xc308, 0x9f2d, 0x6c94, 0x1, 0x0);
        gbc.writeMem(0x8439, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6665);
        EXPECT(gbc.pc(), 0x843b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8439), 0xcb);
        EXPECT(gbc.readMem(0x843a), 0x82);
        // CB 82 00C0
        gbc.setState(0x3dc3, 0x83e2, 0x5370, 0x86d7, 0x1690, 0x4d02, 0x1, 0x0);
        gbc.writeMem(0x3dc3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x83e2);
        EXPECT(gbc.pc(), 0x3dc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00C1
        gbc.setState(0x66ef, 0xca43, 0xf970, 0x62fd, 0x536, 0xe89a, 0x0, 0x1);
        gbc.writeMem(0x66ef, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xca43);
        EXPECT(gbc.pc(), 0x66f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00C2
        gbc.setState(0x8cb5, 0x3245, 0xc760, 0x23e1, 0xe0d, 0x9bc1, 0x1, 0x1);
        gbc.writeMem(0x8cb5, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3245);
        EXPECT(gbc.pc(), 0x8cb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cb5), 0xcb);
        EXPECT(gbc.readMem(0x8cb6), 0x82);
        // CB 82 00C3
        gbc.setState(0xb7b0, 0x2ce7, 0x5890, 0xad1e, 0x945f, 0xedfe, 0x0, 0x0);
        gbc.writeMem(0xb7b0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2ce7);
        EXPECT(gbc.pc(), 0xb7b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7b0), 0xcb);
        EXPECT(gbc.readMem(0xb7b1), 0x82);
        // CB 82 00C4
        gbc.setState(0xad32, 0x9459, 0xfbb0, 0xa4de, 0xf817, 0xe906, 0x1, 0x1);
        gbc.writeMem(0xad32, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9459);
        EXPECT(gbc.pc(), 0xad34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad32), 0xcb);
        EXPECT(gbc.readMem(0xad33), 0x82);
        // CB 82 00C5
        gbc.setState(0xe0a9, 0x74eb, 0x9290, 0x8bba, 0xf2a5, 0x21c2, 0x0, 0x1);
        gbc.writeMem(0xe0a9, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x74eb);
        EXPECT(gbc.pc(), 0xe0ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0a9), 0xcb);
        EXPECT(gbc.readMem(0xe0aa), 0x82);
        // CB 82 00C6
        gbc.setState(0xe2b9, 0x6f5, 0x4ea0, 0xc6b6, 0x85bf, 0x27, 0x0, 0x0);
        gbc.writeMem(0xe2b9, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x6f5);
        EXPECT(gbc.pc(), 0xe2bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2b9), 0xcb);
        EXPECT(gbc.readMem(0xe2ba), 0x82);
        // CB 82 00C7
        gbc.setState(0x33ba, 0x519f, 0x65b0, 0x4a96, 0xf296, 0x500c, 0x0, 0x0);
        gbc.writeMem(0x33ba, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x519f);
        EXPECT(gbc.pc(), 0x33bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00C8
        gbc.setState(0xe199, 0x7153, 0x4440, 0xb083, 0x3df0, 0xf1eb, 0x0, 0x1);
        gbc.writeMem(0xe199, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x7153);
        EXPECT(gbc.pc(), 0xe19b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe199), 0xcb);
        EXPECT(gbc.readMem(0xe19a), 0x82);
        // CB 82 00C9
        gbc.setState(0x256b, 0xaf7, 0x2590, 0x7972, 0xa07d, 0x5ca8, 0x1, 0x1);
        gbc.writeMem(0x256b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xaf7);
        EXPECT(gbc.pc(), 0x256d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00CA
        gbc.setState(0xb396, 0xd3ab, 0x6860, 0x3bfc, 0x28aa, 0x5157, 0x0, 0x0);
        gbc.writeMem(0xb396, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xd3ab);
        EXPECT(gbc.pc(), 0xb398);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb396), 0xcb);
        EXPECT(gbc.readMem(0xb397), 0x82);
        // CB 82 00CB
        gbc.setState(0xc812, 0x4c2b, 0x21c0, 0xa7ca, 0x7ecc, 0xbcb4, 0x0, 0x1);
        gbc.writeMem(0xc812, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4c2b);
        EXPECT(gbc.pc(), 0xc814);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc812), 0xcb);
        EXPECT(gbc.readMem(0xc813), 0x82);
        // CB 82 00CC
        gbc.setState(0xa6d1, 0x8a05, 0x1820, 0x8f08, 0x5ff7, 0xc191, 0x1, 0x1);
        gbc.writeMem(0xa6d1, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8a05);
        EXPECT(gbc.pc(), 0xa6d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d1), 0xcb);
        EXPECT(gbc.readMem(0xa6d2), 0x82);
        // CB 82 00CD
        gbc.setState(0x5996, 0x62, 0x5440, 0x73c3, 0xe2d3, 0x6172, 0x1, 0x0);
        gbc.writeMem(0x5996, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x62);
        EXPECT(gbc.pc(), 0x5998);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 00CE
        gbc.setState(0x58db, 0xc39e, 0x1f50, 0x23e6, 0x4368, 0xc083, 0x1, 0x0);
        gbc.writeMem(0x58db, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc39e);
        EXPECT(gbc.pc(), 0x58dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00D0
        gbc.setState(0x11d6, 0x8ec7, 0x8b10, 0x2684, 0x46c0, 0xcd34, 0x0, 0x0);
        gbc.writeMem(0x11d6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8ec7);
        EXPECT(gbc.pc(), 0x11d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00D1
        gbc.setState(0xe740, 0xe647, 0x4030, 0xd6c, 0x9297, 0xa419, 0x1, 0x1);
        gbc.writeMem(0xe740, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe647);
        EXPECT(gbc.pc(), 0xe742);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe740), 0xcb);
        EXPECT(gbc.readMem(0xe741), 0x82);
        // CB 82 00D2
        gbc.setState(0x4451, 0xa91f, 0xd160, 0xafcd, 0x8df2, 0x5cf0, 0x1, 0x1);
        gbc.writeMem(0x4451, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa91f);
        EXPECT(gbc.pc(), 0x4453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 00D4
        gbc.setState(0xd5d5, 0x3e72, 0xf5c0, 0x4cc9, 0xa011, 0xf0f3, 0x1, 0x0);
        gbc.writeMem(0xd5d5, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3e72);
        EXPECT(gbc.pc(), 0xd5d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5d5), 0xcb);
        EXPECT(gbc.readMem(0xd5d6), 0x82);
        // CB 82 00D5
        gbc.setState(0x87e, 0x1e74, 0x40, 0x91ec, 0x3ad4, 0xf511, 0x1, 0x1);
        gbc.writeMem(0x87e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1e74);
        EXPECT(gbc.pc(), 0x880);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 00D6
        gbc.setState(0xa4cd, 0x60d7, 0xcee0, 0xda45, 0x3b49, 0x6e77, 0x1, 0x0);
        gbc.writeMem(0xa4cd, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x60d7);
        EXPECT(gbc.pc(), 0xa4cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4cd), 0xcb);
        EXPECT(gbc.readMem(0xa4ce), 0x82);
        // CB 82 00D7
        gbc.setState(0x67d4, 0xc7f7, 0x7cc0, 0xd32e, 0x60d7, 0x33f1, 0x1, 0x1);
        gbc.writeMem(0x67d4, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc7f7);
        EXPECT(gbc.pc(), 0x67d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 00D9
        gbc.setState(0xdc83, 0x3550, 0xe20, 0x69e5, 0x769, 0x8cd4, 0x1, 0x1);
        gbc.writeMem(0xdc83, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x3550);
        EXPECT(gbc.pc(), 0xdc85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc83), 0xcb);
        EXPECT(gbc.readMem(0xdc84), 0x82);
        // CB 82 00DA
        gbc.setState(0xab4a, 0x40ac, 0xf0d0, 0xee0b, 0xeede, 0x20d3, 0x1, 0x0);
        gbc.writeMem(0xab4a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x40ac);
        EXPECT(gbc.pc(), 0xab4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab4a), 0xcb);
        EXPECT(gbc.readMem(0xab4b), 0x82);
        // CB 82 00DB
        gbc.setState(0x7792, 0x3290, 0x5120, 0x79f9, 0x32da, 0x3914, 0x0, 0x1);
        gbc.writeMem(0x7792, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x3290);
        EXPECT(gbc.pc(), 0x7794);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 00DC
        gbc.setState(0x67f, 0x2376, 0x2c50, 0x3991, 0x71d9, 0x2c62, 0x0, 0x1);
        gbc.writeMem(0x67f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2376);
        EXPECT(gbc.pc(), 0x681);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00DD
        gbc.setState(0x6ad5, 0xc69, 0x1d0, 0xe63e, 0x9fb, 0x53dd, 0x1, 0x0);
        gbc.writeMem(0x6ad5, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc69);
        EXPECT(gbc.pc(), 0x6ad7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00DE
        gbc.setState(0x5a16, 0xc9c7, 0xde0, 0xb8d, 0xf290, 0x8896, 0x1, 0x0);
        gbc.writeMem(0x5a16, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc9c7);
        EXPECT(gbc.pc(), 0x5a18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 00E0
        gbc.setState(0xca11, 0x1f, 0x8440, 0x193b, 0xd01c, 0xc6dd, 0x0, 0x0);
        gbc.writeMem(0xca11, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1f);
        EXPECT(gbc.pc(), 0xca13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca11), 0xcb);
        EXPECT(gbc.readMem(0xca12), 0x82);
        // CB 82 00E1
        gbc.setState(0x421a, 0x1cd0, 0x7010, 0xafd3, 0x8ae2, 0x5859, 0x1, 0x0);
        gbc.writeMem(0x421a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1cd0);
        EXPECT(gbc.pc(), 0x421c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00E3
        gbc.setState(0x190, 0x992f, 0xb640, 0x8e48, 0xaf94, 0x6ee5, 0x0, 0x1);
        gbc.writeMem(0x190, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x992f);
        EXPECT(gbc.pc(), 0x192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 00E4
        gbc.setState(0x175c, 0x5ec9, 0xab70, 0xd914, 0xb423, 0x242b, 0x0, 0x1);
        gbc.writeMem(0x175c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5ec9);
        EXPECT(gbc.pc(), 0x175e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00E5
        gbc.setState(0x8251, 0x460b, 0x85a0, 0x5168, 0xf54e, 0x2370, 0x0, 0x0);
        gbc.writeMem(0x8251, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x460b);
        EXPECT(gbc.pc(), 0x8253);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8251), 0xcb);
        EXPECT(gbc.readMem(0x8252), 0x82);
        // CB 82 00E6
        gbc.setState(0x7e5c, 0x86e2, 0xed50, 0x905e, 0xf255, 0x84a7, 0x1, 0x1);
        gbc.writeMem(0x7e5c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x86e2);
        EXPECT(gbc.pc(), 0x7e5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00E7
        gbc.setState(0x8320, 0xb256, 0xbd10, 0x4e46, 0x2c81, 0x537f, 0x0, 0x0);
        gbc.writeMem(0x8320, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb256);
        EXPECT(gbc.pc(), 0x8322);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8320), 0xcb);
        EXPECT(gbc.readMem(0x8321), 0x82);
        // CB 82 00E8
        gbc.setState(0xb382, 0xe467, 0xdbe0, 0xc88c, 0x9b35, 0xe1d1, 0x1, 0x0);
        gbc.writeMem(0xb382, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe467);
        EXPECT(gbc.pc(), 0xb384);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb382), 0xcb);
        EXPECT(gbc.readMem(0xb383), 0x82);
        // CB 82 00EA
        gbc.setState(0xb904, 0xdb62, 0x5450, 0xfab, 0xbe8e, 0x2ccb, 0x1, 0x1);
        gbc.writeMem(0xb904, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xdb62);
        EXPECT(gbc.pc(), 0xb906);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb904), 0xcb);
        EXPECT(gbc.readMem(0xb905), 0x82);
        // CB 82 00EB
        gbc.setState(0xc8e5, 0x8ba2, 0x1da0, 0x27cb, 0x46c8, 0x1c81, 0x0, 0x1);
        gbc.writeMem(0xc8e5, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8ba2);
        EXPECT(gbc.pc(), 0xc8e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8e5), 0xcb);
        EXPECT(gbc.readMem(0xc8e6), 0x82);
        // CB 82 00EC
        gbc.setState(0xdd1f, 0x59bc, 0x14f0, 0xa97f, 0xe80b, 0x7972, 0x1, 0x0);
        gbc.writeMem(0xdd1f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x59bc);
        EXPECT(gbc.pc(), 0xdd21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd1f), 0xcb);
        EXPECT(gbc.readMem(0xdd20), 0x82);
        // CB 82 00ED
        gbc.setState(0x63f6, 0x5991, 0xcae0, 0x1cf4, 0x31e0, 0x4a46, 0x0, 0x1);
        gbc.writeMem(0x63f6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x5991);
        EXPECT(gbc.pc(), 0x63f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 00EE
        gbc.setState(0x9026, 0x32f2, 0x9c80, 0x8c7d, 0xdae6, 0x7d3f, 0x1, 0x0);
        gbc.writeMem(0x9026, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x32f2);
        EXPECT(gbc.pc(), 0x9028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9026), 0xcb);
        EXPECT(gbc.readMem(0x9027), 0x82);
        // CB 82 00EF
        gbc.setState(0x1879, 0x3bd3, 0x9790, 0xbd97, 0xb2fd, 0xf89c, 0x0, 0x0);
        gbc.writeMem(0x1879, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3bd3);
        EXPECT(gbc.pc(), 0x187b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00F1
        gbc.setState(0x8527, 0x6d31, 0x89e0, 0xe039, 0x1811, 0x607b, 0x1, 0x0);
        gbc.writeMem(0x8527, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6d31);
        EXPECT(gbc.pc(), 0x8529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8527), 0xcb);
        EXPECT(gbc.readMem(0x8528), 0x82);
        // CB 82 00F2
        gbc.setState(0x3c2f, 0xaef6, 0x3960, 0xe02e, 0x9f9c, 0xa35c, 0x0, 0x1);
        gbc.writeMem(0x3c2f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xaef6);
        EXPECT(gbc.pc(), 0x3c31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 00F3
        gbc.setState(0x2d9e, 0xcc5e, 0x770, 0xe180, 0x58dd, 0xc0d3, 0x0, 0x0);
        gbc.writeMem(0x2d9e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xcc5e);
        EXPECT(gbc.pc(), 0x2da0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00F4
        gbc.setState(0x8f9, 0x643d, 0x7af0, 0x520a, 0xecf8, 0x3f26, 0x0, 0x0);
        gbc.writeMem(0x8f9, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x643d);
        EXPECT(gbc.pc(), 0x8fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00F5
        gbc.setState(0x21dc, 0x2127, 0xdc40, 0x1423, 0x9ff5, 0xe99c, 0x1, 0x1);
        gbc.writeMem(0x21dc, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2127);
        EXPECT(gbc.pc(), 0x21de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 00F6
        gbc.setState(0x2ff2, 0x4317, 0x3c30, 0x918d, 0x3a80, 0x7bc, 0x1, 0x1);
        gbc.writeMem(0x2ff2, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4317);
        EXPECT(gbc.pc(), 0x2ff4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00F7
        gbc.setState(0xe9f8, 0x95d1, 0x3410, 0x470e, 0x208, 0xab6b, 0x1, 0x1);
        gbc.writeMem(0xe9f8, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x95d1);
        EXPECT(gbc.pc(), 0xe9fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9f8), 0xcb);
        EXPECT(gbc.readMem(0xe9f9), 0x82);
        // CB 82 00F8
        gbc.setState(0xcedb, 0x1fd6, 0x2610, 0x91a5, 0xcc88, 0x6129, 0x1, 0x1);
        gbc.writeMem(0xcedb, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1fd6);
        EXPECT(gbc.pc(), 0xcedd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcedb), 0xcb);
        EXPECT(gbc.readMem(0xcedc), 0x82);
        // CB 82 00F9
        gbc.setState(0x1069, 0x76ff, 0x7910, 0xec6e, 0x42ac, 0x3431, 0x1, 0x1);
        gbc.writeMem(0x1069, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x76ff);
        EXPECT(gbc.pc(), 0x106b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00FA
        gbc.setState(0x12a2, 0x169b, 0xc5e0, 0xf815, 0x47e0, 0x1861, 0x1, 0x0);
        gbc.writeMem(0x12a2, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x169b);
        EXPECT(gbc.pc(), 0x12a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 00FB
        gbc.setState(0x528c, 0xcf17, 0x8f00, 0xc5, 0x8f85, 0x294c, 0x1, 0x0);
        gbc.writeMem(0x528c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xcf17);
        EXPECT(gbc.pc(), 0x528e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 00FC
        gbc.setState(0x380f, 0x42de, 0x2c50, 0x5597, 0xd7bc, 0xd5af, 0x1, 0x1);
        gbc.writeMem(0x380f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x42de);
        EXPECT(gbc.pc(), 0x3811);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 00FD
        gbc.setState(0xa94b, 0xd921, 0xf570, 0x3703, 0x6691, 0x99d2, 0x1, 0x0);
        gbc.writeMem(0xa94b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd921);
        EXPECT(gbc.pc(), 0xa94d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa94b), 0xcb);
        EXPECT(gbc.readMem(0xa94c), 0x82);
        // CB 82 00FE
        gbc.setState(0xf50, 0x5c82, 0xf140, 0x3862, 0xa8d0, 0x86d6, 0x1, 0x1);
        gbc.writeMem(0xf50, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5c82);
        EXPECT(gbc.pc(), 0xf52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 00FF
        gbc.setState(0x4843, 0x7e4e, 0x930, 0x7ffe, 0xd680, 0xb3c, 0x0, 0x0);
        gbc.writeMem(0x4843, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x7e4e);
        EXPECT(gbc.pc(), 0x4845);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0100
        gbc.setState(0x2b2e, 0xeab0, 0xae30, 0x31ac, 0xb3ef, 0x7d4f, 0x0, 0x0);
        gbc.writeMem(0x2b2e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xeab0);
        EXPECT(gbc.pc(), 0x2b30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0101
        gbc.setState(0xd4a4, 0xb17a, 0x8880, 0x15a5, 0x1916, 0x1a13, 0x1, 0x1);
        gbc.writeMem(0xd4a4, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xb17a);
        EXPECT(gbc.pc(), 0xd4a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4a4), 0xcb);
        EXPECT(gbc.readMem(0xd4a5), 0x82);
        // CB 82 0103
        gbc.setState(0x6c41, 0xe950, 0xae00, 0xe406, 0xe079, 0xe31b, 0x1, 0x0);
        gbc.writeMem(0x6c41, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe950);
        EXPECT(gbc.pc(), 0x6c43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0104
        gbc.setState(0xd297, 0x3112, 0xe6f0, 0x2d8b, 0x4903, 0x6999, 0x0, 0x1);
        gbc.writeMem(0xd297, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3112);
        EXPECT(gbc.pc(), 0xd299);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd297), 0xcb);
        EXPECT(gbc.readMem(0xd298), 0x82);
        // CB 82 0105
        gbc.setState(0x5215, 0x791a, 0xca0, 0x181e, 0x906e, 0x4311, 0x1, 0x0);
        gbc.writeMem(0x5215, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x791a);
        EXPECT(gbc.pc(), 0x5217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0106
        gbc.setState(0xa87c, 0x1b6a, 0x7a0, 0xf03a, 0xc730, 0x610e, 0x0, 0x1);
        gbc.writeMem(0xa87c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1b6a);
        EXPECT(gbc.pc(), 0xa87e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa87c), 0xcb);
        EXPECT(gbc.readMem(0xa87d), 0x82);
        // CB 82 0108
        gbc.setState(0xa0cf, 0xdb28, 0x3100, 0x5e05, 0x771d, 0xc88b, 0x1, 0x0);
        gbc.writeMem(0xa0cf, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xdb28);
        EXPECT(gbc.pc(), 0xa0d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0cf), 0xcb);
        EXPECT(gbc.readMem(0xa0d0), 0x82);
        // CB 82 0109
        gbc.setState(0xd050, 0xf18b, 0x540, 0x66d0, 0x8813, 0x640e, 0x0, 0x0);
        gbc.writeMem(0xd050, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf18b);
        EXPECT(gbc.pc(), 0xd052);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd050), 0xcb);
        EXPECT(gbc.readMem(0xd051), 0x82);
        // CB 82 010A
        gbc.setState(0x7802, 0x5dde, 0x8c10, 0xe0c0, 0xf115, 0xca4a, 0x1, 0x1);
        gbc.writeMem(0x7802, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5dde);
        EXPECT(gbc.pc(), 0x7804);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 010B
        gbc.setState(0xbbe4, 0x606b, 0x4d0, 0xadad, 0x4373, 0x7444, 0x0, 0x1);
        gbc.writeMem(0xbbe4, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x606b);
        EXPECT(gbc.pc(), 0xbbe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe4), 0xcb);
        EXPECT(gbc.readMem(0xbbe5), 0x82);
        // CB 82 010C
        gbc.setState(0xd3d6, 0xa793, 0xe50, 0x984f, 0x24ce, 0xdffb, 0x0, 0x1);
        gbc.writeMem(0xd3d6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa793);
        EXPECT(gbc.pc(), 0xd3d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3d6), 0xcb);
        EXPECT(gbc.readMem(0xd3d7), 0x82);
        // CB 82 010D
        gbc.setState(0x82dd, 0x89c5, 0xd4e0, 0x2af3, 0x2f4c, 0x9da9, 0x0, 0x0);
        gbc.writeMem(0x82dd, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x89c5);
        EXPECT(gbc.pc(), 0x82df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82dd), 0xcb);
        EXPECT(gbc.readMem(0x82de), 0x82);
        // CB 82 010E
        gbc.setState(0xc7ba, 0x5af2, 0xe7d0, 0xb3db, 0x9c1c, 0xda9b, 0x0, 0x1);
        gbc.writeMem(0xc7ba, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5af2);
        EXPECT(gbc.pc(), 0xc7bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7ba), 0xcb);
        EXPECT(gbc.readMem(0xc7bb), 0x82);
        // CB 82 010F
        gbc.setState(0x6d50, 0x44fc, 0x99b0, 0xdc8d, 0xfcce, 0xbd78, 0x0, 0x1);
        gbc.writeMem(0x6d50, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x44fc);
        EXPECT(gbc.pc(), 0x6d52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0110
        gbc.setState(0x62c, 0x8e1f, 0xf6e0, 0xf117, 0xde89, 0x5726, 0x1, 0x1);
        gbc.writeMem(0x62c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x8e1f);
        EXPECT(gbc.pc(), 0x62e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0111
        gbc.setState(0xd30b, 0x8938, 0xc590, 0x10f, 0x24a3, 0x6454, 0x0, 0x1);
        gbc.writeMem(0xd30b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8938);
        EXPECT(gbc.pc(), 0xd30d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd30b), 0xcb);
        EXPECT(gbc.readMem(0xd30c), 0x82);
        // CB 82 0112
        gbc.setState(0x766b, 0x69a8, 0x8c00, 0x70c9, 0x24c4, 0xaea8, 0x0, 0x1);
        gbc.writeMem(0x766b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x69a8);
        EXPECT(gbc.pc(), 0x766d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0113
        gbc.setState(0xa1d, 0xea8, 0x44c0, 0xcce5, 0xafb2, 0xb495, 0x1, 0x0);
        gbc.writeMem(0xa1d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xea8);
        EXPECT(gbc.pc(), 0xa1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0114
        gbc.setState(0xc4ac, 0x8224, 0x3fd0, 0x9683, 0x1c68, 0x42b9, 0x1, 0x0);
        gbc.writeMem(0xc4ac, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8224);
        EXPECT(gbc.pc(), 0xc4ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4ac), 0xcb);
        EXPECT(gbc.readMem(0xc4ad), 0x82);
        // CB 82 0115
        gbc.setState(0xd3a8, 0x7a41, 0x3d40, 0x6b7a, 0x96ea, 0x87fc, 0x1, 0x1);
        gbc.writeMem(0xd3a8, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7a41);
        EXPECT(gbc.pc(), 0xd3aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3a8), 0xcb);
        EXPECT(gbc.readMem(0xd3a9), 0x82);
        // CB 82 0116
        gbc.setState(0xe025, 0xf4ef, 0xefa0, 0xcb3d, 0x789d, 0x1733, 0x1, 0x0);
        gbc.writeMem(0xe025, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf4ef);
        EXPECT(gbc.pc(), 0xe027);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe025), 0xcb);
        EXPECT(gbc.readMem(0xe026), 0x82);
        // CB 82 0117
        gbc.setState(0x4818, 0x4551, 0x9c20, 0x6dcb, 0x878e, 0xbe2c, 0x1, 0x1);
        gbc.writeMem(0x4818, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4551);
        EXPECT(gbc.pc(), 0x481a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0118
        gbc.setState(0x4077, 0x3884, 0x2d60, 0xe13d, 0x3551, 0xaf48, 0x0, 0x1);
        gbc.writeMem(0x4077, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3884);
        EXPECT(gbc.pc(), 0x4079);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0119
        gbc.setState(0x5944, 0xd849, 0x48e0, 0xf0ef, 0x5c85, 0x5f75, 0x0, 0x1);
        gbc.writeMem(0x5944, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd849);
        EXPECT(gbc.pc(), 0x5946);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 011A
        gbc.setState(0x8573, 0x3caf, 0x8270, 0xdf3d, 0x5632, 0x606f, 0x0, 0x0);
        gbc.writeMem(0x8573, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x3caf);
        EXPECT(gbc.pc(), 0x8575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8573), 0xcb);
        EXPECT(gbc.readMem(0x8574), 0x82);
        // CB 82 011C
        gbc.setState(0x2719, 0x77b2, 0x6980, 0x13db, 0xb975, 0xd6da, 0x1, 0x0);
        gbc.writeMem(0x2719, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x77b2);
        EXPECT(gbc.pc(), 0x271b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 011D
        gbc.setState(0x743d, 0x6d82, 0x9aa0, 0x4957, 0x7b60, 0x5961, 0x0, 0x0);
        gbc.writeMem(0x743d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6d82);
        EXPECT(gbc.pc(), 0x743f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 011E
        gbc.setState(0xd9fb, 0x1837, 0x9060, 0x938c, 0x5ef0, 0x38d6, 0x1, 0x0);
        gbc.writeMem(0xd9fb, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1837);
        EXPECT(gbc.pc(), 0xd9fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9fb), 0xcb);
        EXPECT(gbc.readMem(0xd9fc), 0x82);
        // CB 82 011F
        gbc.setState(0x893a, 0xa8aa, 0x6f90, 0x74ad, 0x33d1, 0xb338, 0x0, 0x0);
        gbc.writeMem(0x893a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa8aa);
        EXPECT(gbc.pc(), 0x893c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x893a), 0xcb);
        EXPECT(gbc.readMem(0x893b), 0x82);
        // CB 82 0120
        gbc.setState(0x1459, 0xb1ca, 0xa5a0, 0xe384, 0xe56d, 0xc44c, 0x1, 0x1);
        gbc.writeMem(0x1459, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb1ca);
        EXPECT(gbc.pc(), 0x145b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0121
        gbc.setState(0xef7d, 0x23d7, 0x5270, 0x5d92, 0xbbd8, 0x9478, 0x1, 0x1);
        gbc.writeMem(0xef7d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x23d7);
        EXPECT(gbc.pc(), 0xef7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef7d), 0xcb);
        EXPECT(gbc.readMem(0xef7e), 0x82);
        // CB 82 0122
        gbc.setState(0x11e8, 0xc33, 0x1340, 0xfc5f, 0x2315, 0xf729, 0x0, 0x0);
        gbc.writeMem(0x11e8, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc33);
        EXPECT(gbc.pc(), 0x11ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0123
        gbc.setState(0xb22d, 0x6c0a, 0x9660, 0x20a8, 0x48db, 0xc586, 0x0, 0x0);
        gbc.writeMem(0xb22d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6c0a);
        EXPECT(gbc.pc(), 0xb22f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb22d), 0xcb);
        EXPECT(gbc.readMem(0xb22e), 0x82);
        // CB 82 0124
        gbc.setState(0x4136, 0xe8bd, 0x1fb0, 0xf0c2, 0x9836, 0x807a, 0x1, 0x1);
        gbc.writeMem(0x4136, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe8bd);
        EXPECT(gbc.pc(), 0x4138);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0125
        gbc.setState(0xc512, 0x82a4, 0x4bb0, 0xa085, 0x5331, 0xc312, 0x1, 0x0);
        gbc.writeMem(0xc512, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x82a4);
        EXPECT(gbc.pc(), 0xc514);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc512), 0xcb);
        EXPECT(gbc.readMem(0xc513), 0x82);
        // CB 82 0126
        gbc.setState(0x62e0, 0x5e78, 0x3720, 0x28f7, 0x33fe, 0xb3ff, 0x1, 0x0);
        gbc.writeMem(0x62e0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5e78);
        EXPECT(gbc.pc(), 0x62e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0127
        gbc.setState(0x6a8c, 0x9c2b, 0xf160, 0xfcb3, 0xd845, 0x9c9e, 0x0, 0x1);
        gbc.writeMem(0x6a8c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9c2b);
        EXPECT(gbc.pc(), 0x6a8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0128
        gbc.setState(0xe2a3, 0x5d2b, 0x8e0, 0x6ae8, 0x77a3, 0x89c0, 0x1, 0x0);
        gbc.writeMem(0xe2a3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5d2b);
        EXPECT(gbc.pc(), 0xe2a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2a3), 0xcb);
        EXPECT(gbc.readMem(0xe2a4), 0x82);
        // CB 82 0129
        gbc.setState(0x764e, 0x3e92, 0xfb50, 0xadd3, 0x5213, 0xfd0b, 0x1, 0x1);
        gbc.writeMem(0x764e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3e92);
        EXPECT(gbc.pc(), 0x7650);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 012A
        gbc.setState(0x5214, 0xc8e9, 0x40a0, 0xfc4, 0xe4e0, 0x7846, 0x0, 0x0);
        gbc.writeMem(0x5214, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc8e9);
        EXPECT(gbc.pc(), 0x5216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 012B
        gbc.setState(0x543, 0x900c, 0xce20, 0xa661, 0x7f4d, 0x8417, 0x0, 0x0);
        gbc.writeMem(0x543, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x900c);
        EXPECT(gbc.pc(), 0x545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 012D
        gbc.setState(0xe62f, 0x6af9, 0xdc20, 0x1ae8, 0xbd1f, 0xd53e, 0x1, 0x0);
        gbc.writeMem(0xe62f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6af9);
        EXPECT(gbc.pc(), 0xe631);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe62f), 0xcb);
        EXPECT(gbc.readMem(0xe630), 0x82);
        // CB 82 012E
        gbc.setState(0xbcb4, 0xfc3, 0xc7d0, 0x8b7d, 0xa2a0, 0x68f3, 0x0, 0x1);
        gbc.writeMem(0xbcb4, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xfc3);
        EXPECT(gbc.pc(), 0xbcb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcb4), 0xcb);
        EXPECT(gbc.readMem(0xbcb5), 0x82);
        // CB 82 012F
        gbc.setState(0xd28f, 0xcb69, 0x8810, 0x57ce, 0xb09d, 0xce92, 0x1, 0x0);
        gbc.writeMem(0xd28f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xcb69);
        EXPECT(gbc.pc(), 0xd291);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd28f), 0xcb);
        EXPECT(gbc.readMem(0xd290), 0x82);
        // CB 82 0130
        gbc.setState(0xbf13, 0x9ee4, 0xca00, 0xce1c, 0xb250, 0x9e2c, 0x0, 0x0);
        gbc.writeMem(0xbf13, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9ee4);
        EXPECT(gbc.pc(), 0xbf15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf13), 0xcb);
        EXPECT(gbc.readMem(0xbf14), 0x82);
        // CB 82 0131
        gbc.setState(0x4e10, 0xa0a4, 0xf320, 0x1412, 0xba19, 0xca, 0x1, 0x0);
        gbc.writeMem(0x4e10, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xa0a4);
        EXPECT(gbc.pc(), 0x4e12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0132
        gbc.setState(0xb799, 0xb929, 0xe3f0, 0x56e1, 0x13a7, 0xe6a9, 0x0, 0x1);
        gbc.writeMem(0xb799, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xb929);
        EXPECT(gbc.pc(), 0xb79b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb799), 0xcb);
        EXPECT(gbc.readMem(0xb79a), 0x82);
        // CB 82 0133
        gbc.setState(0x1688, 0x6065, 0xb990, 0xa0e2, 0x398b, 0x888, 0x1, 0x0);
        gbc.writeMem(0x1688, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6065);
        EXPECT(gbc.pc(), 0x168a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0134
        gbc.setState(0xaab7, 0xe7fa, 0xb500, 0xb413, 0xb678, 0x8ac8, 0x0, 0x0);
        gbc.writeMem(0xaab7, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe7fa);
        EXPECT(gbc.pc(), 0xaab9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaab7), 0xcb);
        EXPECT(gbc.readMem(0xaab8), 0x82);
        // CB 82 0135
        gbc.setState(0xbfda, 0xc75, 0xb450, 0xdd65, 0x2e7e, 0x31fb, 0x0, 0x1);
        gbc.writeMem(0xbfda, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc75);
        EXPECT(gbc.pc(), 0xbfdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfda), 0xcb);
        EXPECT(gbc.readMem(0xbfdb), 0x82);
        // CB 82 0136
        gbc.setState(0x50a3, 0xe903, 0xffe0, 0x5fb6, 0xd3f8, 0xe024, 0x0, 0x0);
        gbc.writeMem(0x50a3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xe903);
        EXPECT(gbc.pc(), 0x50a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0137
        gbc.setState(0x2312, 0x9c6e, 0xda60, 0xf543, 0x15ab, 0x5560, 0x0, 0x1);
        gbc.writeMem(0x2312, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9c6e);
        EXPECT(gbc.pc(), 0x2314);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0138
        gbc.setState(0xd5dd, 0x8067, 0x8fe0, 0x18e0, 0x3dea, 0x8ab5, 0x1, 0x0);
        gbc.writeMem(0xd5dd, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8067);
        EXPECT(gbc.pc(), 0xd5df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5dd), 0xcb);
        EXPECT(gbc.readMem(0xd5de), 0x82);
        // CB 82 0139
        gbc.setState(0x4916, 0x4236, 0x380, 0x9fb9, 0x9e49, 0x56ab, 0x0, 0x0);
        gbc.writeMem(0x4916, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4236);
        EXPECT(gbc.pc(), 0x4918);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 013A
        gbc.setState(0xdbec, 0x48, 0xdcd0, 0x36e4, 0x1aa8, 0xff21, 0x1, 0x0);
        gbc.writeMem(0xdbec, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x48);
        EXPECT(gbc.pc(), 0xdbee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbec), 0xcb);
        EXPECT(gbc.readMem(0xdbed), 0x82);
        // CB 82 013B
        gbc.setState(0x6ff3, 0x1342, 0xeb0, 0x8186, 0x3c9f, 0xbf3e, 0x0, 0x0);
        gbc.writeMem(0x6ff3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x1342);
        EXPECT(gbc.pc(), 0x6ff5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 013C
        gbc.setState(0xa351, 0xb2b7, 0xc830, 0x9cad, 0x87b8, 0x870f, 0x0, 0x1);
        gbc.writeMem(0xa351, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb2b7);
        EXPECT(gbc.pc(), 0xa353);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa351), 0xcb);
        EXPECT(gbc.readMem(0xa352), 0x82);
        // CB 82 013D
        gbc.setState(0x3621, 0x442a, 0xf1c0, 0xb063, 0xf520, 0xe95e, 0x1, 0x1);
        gbc.writeMem(0x3621, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x442a);
        EXPECT(gbc.pc(), 0x3623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 013E
        gbc.setState(0x3426, 0x6a5c, 0x1140, 0x65b1, 0xa9e2, 0xb956, 0x1, 0x1);
        gbc.writeMem(0x3426, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6a5c);
        EXPECT(gbc.pc(), 0x3428);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 013F
        gbc.setState(0xc76a, 0x4771, 0x41a0, 0xe1e5, 0xa4da, 0xa5c2, 0x1, 0x1);
        gbc.writeMem(0xc76a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4771);
        EXPECT(gbc.pc(), 0xc76c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc76a), 0xcb);
        EXPECT(gbc.readMem(0xc76b), 0x82);
        // CB 82 0141
        gbc.setState(0x8b62, 0x19cb, 0x74c0, 0x727b, 0xad78, 0xfab5, 0x0, 0x1);
        gbc.writeMem(0x8b62, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x19cb);
        EXPECT(gbc.pc(), 0x8b64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b62), 0xcb);
        EXPECT(gbc.readMem(0x8b63), 0x82);
        // CB 82 0142
        gbc.setState(0xa7b0, 0xcf9, 0x2cb0, 0xf384, 0x6fce, 0x155f, 0x0, 0x1);
        gbc.writeMem(0xa7b0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xcf9);
        EXPECT(gbc.pc(), 0xa7b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b0), 0xcb);
        EXPECT(gbc.readMem(0xa7b1), 0x82);
        // CB 82 0143
        gbc.setState(0xcd21, 0x8495, 0x98c0, 0xbe08, 0xe263, 0xd5fd, 0x1, 0x0);
        gbc.writeMem(0xcd21, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8495);
        EXPECT(gbc.pc(), 0xcd23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd21), 0xcb);
        EXPECT(gbc.readMem(0xcd22), 0x82);
        // CB 82 0144
        gbc.setState(0xbb43, 0x68d, 0x5d20, 0x1503, 0x6c68, 0xee69, 0x1, 0x1);
        gbc.writeMem(0xbb43, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x68d);
        EXPECT(gbc.pc(), 0xbb45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb43), 0xcb);
        EXPECT(gbc.readMem(0xbb44), 0x82);
        // CB 82 0145
        gbc.setState(0x83c8, 0x7b6c, 0xeed0, 0x352, 0x6d0, 0x3b0f, 0x1, 0x0);
        gbc.writeMem(0x83c8, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7b6c);
        EXPECT(gbc.pc(), 0x83ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83c8), 0xcb);
        EXPECT(gbc.readMem(0x83c9), 0x82);
        // CB 82 0146
        gbc.setState(0x76ec, 0xa82c, 0xb520, 0xab0, 0x55c9, 0x89d, 0x0, 0x1);
        gbc.writeMem(0x76ec, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa82c);
        EXPECT(gbc.pc(), 0x76ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0147
        gbc.setState(0x225c, 0x3755, 0xb8e0, 0xe6d2, 0xb253, 0xde71, 0x0, 0x0);
        gbc.writeMem(0x225c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x3755);
        EXPECT(gbc.pc(), 0x225e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0148
        gbc.setState(0x3dec, 0x3acf, 0xc260, 0x22a0, 0x1f59, 0xd5fd, 0x0, 0x1);
        gbc.writeMem(0x3dec, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x3acf);
        EXPECT(gbc.pc(), 0x3dee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0149
        gbc.setState(0xdd3b, 0xd6ab, 0x2e10, 0xebe3, 0x8157, 0xdf08, 0x0, 0x0);
        gbc.writeMem(0xdd3b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd6ab);
        EXPECT(gbc.pc(), 0xdd3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd3b), 0xcb);
        EXPECT(gbc.readMem(0xdd3c), 0x82);
        // CB 82 014A
        gbc.setState(0xa644, 0x809f, 0xecc0, 0x50f0, 0x71d0, 0x8578, 0x0, 0x1);
        gbc.writeMem(0xa644, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x809f);
        EXPECT(gbc.pc(), 0xa646);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa644), 0xcb);
        EXPECT(gbc.readMem(0xa645), 0x82);
        // CB 82 014B
        gbc.setState(0xb7fe, 0x9a0b, 0x68c0, 0x15, 0xb6d6, 0xb9c2, 0x0, 0x0);
        gbc.writeMem(0xb7fe, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9a0b);
        EXPECT(gbc.pc(), 0xb800);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7fe), 0xcb);
        EXPECT(gbc.readMem(0xb7ff), 0x82);
        // CB 82 014C
        gbc.setState(0xc934, 0x8cd1, 0x46c0, 0xc599, 0x88be, 0xf3d7, 0x1, 0x0);
        gbc.writeMem(0xc934, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x8cd1);
        EXPECT(gbc.pc(), 0xc936);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc934), 0xcb);
        EXPECT(gbc.readMem(0xc935), 0x82);
        // CB 82 014D
        gbc.setState(0xd65f, 0x261d, 0xebc0, 0x3ca7, 0x2587, 0xea82, 0x1, 0x0);
        gbc.writeMem(0xd65f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x261d);
        EXPECT(gbc.pc(), 0xd661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd65f), 0xcb);
        EXPECT(gbc.readMem(0xd660), 0x82);
        // CB 82 014E
        gbc.setState(0x921, 0xbb45, 0x3e80, 0xb3d5, 0xcf79, 0xdb93, 0x0, 0x0);
        gbc.writeMem(0x921, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xbb45);
        EXPECT(gbc.pc(), 0x923);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0150
        gbc.setState(0x939d, 0xfbd0, 0x26f0, 0xe481, 0x776e, 0x9eeb, 0x0, 0x1);
        gbc.writeMem(0x939d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xfbd0);
        EXPECT(gbc.pc(), 0x939f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x939d), 0xcb);
        EXPECT(gbc.readMem(0x939e), 0x82);
        // CB 82 0151
        gbc.setState(0x7a1a, 0x7c6f, 0x1c00, 0xd861, 0xd2ed, 0x8593, 0x0, 0x1);
        gbc.writeMem(0x7a1a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7c6f);
        EXPECT(gbc.pc(), 0x7a1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0152
        gbc.setState(0x945b, 0x4d0a, 0xce50, 0x4a0, 0xfb2a, 0xcfc6, 0x1, 0x1);
        gbc.writeMem(0x945b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4d0a);
        EXPECT(gbc.pc(), 0x945d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x945b), 0xcb);
        EXPECT(gbc.readMem(0x945c), 0x82);
        // CB 82 0153
        gbc.setState(0x93c, 0x1ad9, 0xbff0, 0xb083, 0xfc9c, 0xfb00, 0x0, 0x0);
        gbc.writeMem(0x93c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x1ad9);
        EXPECT(gbc.pc(), 0x93e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0154
        gbc.setState(0x6419, 0x9956, 0x9bc0, 0xff15, 0x15ee, 0xaeb2, 0x0, 0x0);
        gbc.writeMem(0x6419, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x9956);
        EXPECT(gbc.pc(), 0x641b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0155
        gbc.setState(0xedfc, 0xdf9e, 0x130, 0x8d95, 0x1c79, 0xf3fd, 0x1, 0x1);
        gbc.writeMem(0xedfc, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xdf9e);
        EXPECT(gbc.pc(), 0xedfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedfc), 0xcb);
        EXPECT(gbc.readMem(0xedfd), 0x82);
        // CB 82 0156
        gbc.setState(0x51a9, 0x4eb3, 0x4c40, 0xed98, 0xffa, 0x8d75, 0x0, 0x0);
        gbc.writeMem(0x51a9, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x4eb3);
        EXPECT(gbc.pc(), 0x51ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0157
        gbc.setState(0xc9e9, 0xd905, 0xa3c0, 0x5fb7, 0x6821, 0x4f63, 0x1, 0x0);
        gbc.writeMem(0xc9e9, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd905);
        EXPECT(gbc.pc(), 0xc9eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9e9), 0xcb);
        EXPECT(gbc.readMem(0xc9ea), 0x82);
        // CB 82 0158
        gbc.setState(0xe366, 0xc344, 0x4e00, 0x8c71, 0x648d, 0x8b3e, 0x1, 0x1);
        gbc.writeMem(0xe366, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc344);
        EXPECT(gbc.pc(), 0xe368);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe366), 0xcb);
        EXPECT(gbc.readMem(0xe367), 0x82);
        // CB 82 015A
        gbc.setState(0x6742, 0xf574, 0x64d0, 0xa777, 0xc54d, 0x5b8e, 0x0, 0x0);
        gbc.writeMem(0x6742, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf574);
        EXPECT(gbc.pc(), 0x6744);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 015B
        gbc.setState(0x9209, 0xbbc1, 0x9f90, 0x40ac, 0x564d, 0x403e, 0x0, 0x0);
        gbc.writeMem(0x9209, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xbbc1);
        EXPECT(gbc.pc(), 0x920b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9209), 0xcb);
        EXPECT(gbc.readMem(0x920a), 0x82);
        // CB 82 015C
        gbc.setState(0x9c24, 0x13e7, 0xef10, 0x274d, 0xb735, 0xe176, 0x1, 0x0);
        gbc.writeMem(0x9c24, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x13e7);
        EXPECT(gbc.pc(), 0x9c26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c24), 0xcb);
        EXPECT(gbc.readMem(0x9c25), 0x82);
        // CB 82 015D
        gbc.setState(0x2b43, 0xbd8e, 0xdae0, 0x7843, 0xfe8c, 0x7cf3, 0x1, 0x0);
        gbc.writeMem(0x2b43, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xbd8e);
        EXPECT(gbc.pc(), 0x2b45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 015E
        gbc.setState(0x9b5f, 0x2be2, 0xb5e0, 0xe182, 0x92dd, 0x23f0, 0x1, 0x1);
        gbc.writeMem(0x9b5f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2be2);
        EXPECT(gbc.pc(), 0x9b61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b5f), 0xcb);
        EXPECT(gbc.readMem(0x9b60), 0x82);
        // CB 82 015F
        gbc.setState(0x8d54, 0xc8b3, 0xe140, 0xa616, 0x5cdb, 0xa7cf, 0x1, 0x1);
        gbc.writeMem(0x8d54, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc8b3);
        EXPECT(gbc.pc(), 0x8d56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d54), 0xcb);
        EXPECT(gbc.readMem(0x8d55), 0x82);
        // CB 82 0160
        gbc.setState(0x4a75, 0xfc54, 0xf5f0, 0xdff3, 0x9c56, 0xa77e, 0x0, 0x1);
        gbc.writeMem(0x4a75, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xfc54);
        EXPECT(gbc.pc(), 0x4a77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0161
        gbc.setState(0x981a, 0x5fa0, 0xc810, 0x3a7d, 0x4c8f, 0x812d, 0x0, 0x1);
        gbc.writeMem(0x981a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5fa0);
        EXPECT(gbc.pc(), 0x981c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x981a), 0xcb);
        EXPECT(gbc.readMem(0x981b), 0x82);
        // CB 82 0162
        gbc.setState(0x635b, 0x925, 0x68d0, 0x3fda, 0x3e71, 0xf304, 0x0, 0x0);
        gbc.writeMem(0x635b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x925);
        EXPECT(gbc.pc(), 0x635d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0163
        gbc.setState(0x922b, 0x5aa6, 0x5630, 0x8906, 0x3cac, 0x4657, 0x0, 0x0);
        gbc.writeMem(0x922b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x5aa6);
        EXPECT(gbc.pc(), 0x922d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x922b), 0xcb);
        EXPECT(gbc.readMem(0x922c), 0x82);
        // CB 82 0164
        gbc.setState(0x450, 0xd6d3, 0xe780, 0xe923, 0x774, 0x33f1, 0x1, 0x0);
        gbc.writeMem(0x450, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd6d3);
        EXPECT(gbc.pc(), 0x452);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0165
        gbc.setState(0x20d4, 0x6c01, 0x98a0, 0x3050, 0x78de, 0x3735, 0x1, 0x1);
        gbc.writeMem(0x20d4, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6c01);
        EXPECT(gbc.pc(), 0x20d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0166
        gbc.setState(0xbfd8, 0xc89a, 0xa0f0, 0x8f5d, 0x30a2, 0x25b7, 0x1, 0x0);
        gbc.writeMem(0xbfd8, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc89a);
        EXPECT(gbc.pc(), 0xbfda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfd8), 0xcb);
        EXPECT(gbc.readMem(0xbfd9), 0x82);
        // CB 82 0167
        gbc.setState(0x13bf, 0x8582, 0x1da0, 0x3843, 0xef90, 0x4a0d, 0x0, 0x0);
        gbc.writeMem(0x13bf, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8582);
        EXPECT(gbc.pc(), 0x13c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0168
        gbc.setState(0x971e, 0x1bd2, 0xaa0, 0xaefb, 0xde94, 0x2d32, 0x1, 0x1);
        gbc.writeMem(0x971e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x1bd2);
        EXPECT(gbc.pc(), 0x9720);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x971e), 0xcb);
        EXPECT(gbc.readMem(0x971f), 0x82);
        // CB 82 0169
        gbc.setState(0x86ce, 0x8a52, 0x1960, 0x7080, 0x7382, 0x396d, 0x0, 0x0);
        gbc.writeMem(0x86ce, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8a52);
        EXPECT(gbc.pc(), 0x86d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86ce), 0xcb);
        EXPECT(gbc.readMem(0x86cf), 0x82);
        // CB 82 016A
        gbc.setState(0x1676, 0x7bff, 0x10a0, 0x71fc, 0x5393, 0x660a, 0x0, 0x0);
        gbc.writeMem(0x1676, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7bff);
        EXPECT(gbc.pc(), 0x1678);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 016B
        gbc.setState(0x56af, 0xd648, 0x92e0, 0xf3ac, 0xf37d, 0x239c, 0x0, 0x0);
        gbc.writeMem(0x56af, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd648);
        EXPECT(gbc.pc(), 0x56b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 016C
        gbc.setState(0xd34c, 0xc5e4, 0x3c60, 0xa0e2, 0xb439, 0x241b, 0x1, 0x1);
        gbc.writeMem(0xd34c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc5e4);
        EXPECT(gbc.pc(), 0xd34e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd34c), 0xcb);
        EXPECT(gbc.readMem(0xd34d), 0x82);
        // CB 82 016D
        gbc.setState(0x2c20, 0xdb45, 0xfdf0, 0x3732, 0x7cd1, 0x77bb, 0x0, 0x1);
        gbc.writeMem(0x2c20, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xdb45);
        EXPECT(gbc.pc(), 0x2c22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 016E
        gbc.setState(0x984a, 0x32cf, 0xfc70, 0x4f9, 0x7d0e, 0xa72f, 0x0, 0x0);
        gbc.writeMem(0x984a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x32cf);
        EXPECT(gbc.pc(), 0x984c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x984a), 0xcb);
        EXPECT(gbc.readMem(0x984b), 0x82);
        // CB 82 016F
        gbc.setState(0xac6e, 0xd011, 0x1e50, 0x26ae, 0xc3df, 0x3a05, 0x0, 0x1);
        gbc.writeMem(0xac6e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd011);
        EXPECT(gbc.pc(), 0xac70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac6e), 0xcb);
        EXPECT(gbc.readMem(0xac6f), 0x82);
        // CB 82 0170
        gbc.setState(0xe1cd, 0xe3c4, 0x9970, 0xe4a2, 0x64c1, 0x37d8, 0x0, 0x1);
        gbc.writeMem(0xe1cd, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe3c4);
        EXPECT(gbc.pc(), 0xe1cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1cd), 0xcb);
        EXPECT(gbc.readMem(0xe1ce), 0x82);
        // CB 82 0171
        gbc.setState(0x73a7, 0x148f, 0x18d0, 0x653, 0xa9b7, 0x5ae6, 0x0, 0x0);
        gbc.writeMem(0x73a7, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x148f);
        EXPECT(gbc.pc(), 0x73a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0172
        gbc.setState(0x8230, 0x796a, 0xda00, 0x76a0, 0x28fd, 0xcb35, 0x1, 0x0);
        gbc.writeMem(0x8230, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x796a);
        EXPECT(gbc.pc(), 0x8232);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8230), 0xcb);
        EXPECT(gbc.readMem(0x8231), 0x82);
        // CB 82 0173
        gbc.setState(0x1034, 0x50ae, 0x27a0, 0xe5a, 0xe209, 0x5dad, 0x1, 0x0);
        gbc.writeMem(0x1034, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x50ae);
        EXPECT(gbc.pc(), 0x1036);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0174
        gbc.setState(0x325a, 0xa061, 0x2250, 0xd12, 0xe6c6, 0x8921, 0x1, 0x0);
        gbc.writeMem(0x325a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa061);
        EXPECT(gbc.pc(), 0x325c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0175
        gbc.setState(0x8dc2, 0x820d, 0xeaf0, 0xa1c1, 0x468f, 0xc240, 0x0, 0x1);
        gbc.writeMem(0x8dc2, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x820d);
        EXPECT(gbc.pc(), 0x8dc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dc2), 0xcb);
        EXPECT(gbc.readMem(0x8dc3), 0x82);
        // CB 82 0176
        gbc.setState(0x70bf, 0xd532, 0x81b0, 0x69a6, 0x5ecb, 0xe67f, 0x1, 0x1);
        gbc.writeMem(0x70bf, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd532);
        EXPECT(gbc.pc(), 0x70c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0177
        gbc.setState(0xadb6, 0xd698, 0x3820, 0x40e9, 0x8f7a, 0x1b3a, 0x1, 0x0);
        gbc.writeMem(0xadb6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd698);
        EXPECT(gbc.pc(), 0xadb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadb6), 0xcb);
        EXPECT(gbc.readMem(0xadb7), 0x82);
        // CB 82 0178
        gbc.setState(0x69ef, 0xc471, 0xe6e0, 0xd268, 0x4343, 0xea08, 0x0, 0x0);
        gbc.writeMem(0x69ef, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc471);
        EXPECT(gbc.pc(), 0x69f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0179
        gbc.setState(0x8f03, 0x4d07, 0x7af0, 0xd9df, 0x1d85, 0x331b, 0x0, 0x1);
        gbc.writeMem(0x8f03, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4d07);
        EXPECT(gbc.pc(), 0x8f05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f03), 0xcb);
        EXPECT(gbc.readMem(0x8f04), 0x82);
        // CB 82 017A
        gbc.setState(0x128a, 0xc9cd, 0x9e10, 0x31c3, 0xd79e, 0xc96c, 0x0, 0x1);
        gbc.writeMem(0x128a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc9cd);
        EXPECT(gbc.pc(), 0x128c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 017B
        gbc.setState(0x11f6, 0xc62e, 0xcf50, 0x25c5, 0x83e8, 0xb4d6, 0x1, 0x0);
        gbc.writeMem(0x11f6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc62e);
        EXPECT(gbc.pc(), 0x11f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 017C
        gbc.setState(0xa52d, 0xf8e7, 0x5d20, 0x49b4, 0x3fb3, 0x46f8, 0x1, 0x0);
        gbc.writeMem(0xa52d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf8e7);
        EXPECT(gbc.pc(), 0xa52f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa52d), 0xcb);
        EXPECT(gbc.readMem(0xa52e), 0x82);
        // CB 82 017D
        gbc.setState(0xb6d3, 0x56e0, 0x2b40, 0x912a, 0xf1a5, 0xb284, 0x0, 0x0);
        gbc.writeMem(0xb6d3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x56e0);
        EXPECT(gbc.pc(), 0xb6d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6d3), 0xcb);
        EXPECT(gbc.readMem(0xb6d4), 0x82);
        // CB 82 017E
        gbc.setState(0xb217, 0xced6, 0x5cd0, 0x9257, 0xb56c, 0x2a1f, 0x1, 0x0);
        gbc.writeMem(0xb217, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xced6);
        EXPECT(gbc.pc(), 0xb219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb217), 0xcb);
        EXPECT(gbc.readMem(0xb218), 0x82);
        // CB 82 017F
        gbc.setState(0x3e72, 0x61fe, 0x87b0, 0x887b, 0x82c2, 0xfa1d, 0x1, 0x1);
        gbc.writeMem(0x3e72, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x61fe);
        EXPECT(gbc.pc(), 0x3e74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0180
        gbc.setState(0x887c, 0xaa3, 0x2c0, 0x56b1, 0xe2fb, 0xd413, 0x0, 0x1);
        gbc.writeMem(0x887c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xaa3);
        EXPECT(gbc.pc(), 0x887e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x887c), 0xcb);
        EXPECT(gbc.readMem(0x887d), 0x82);
        // CB 82 0181
        gbc.setState(0xd524, 0xe0e2, 0x7350, 0xb444, 0x76ae, 0x76dd, 0x0, 0x0);
        gbc.writeMem(0xd524, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe0e2);
        EXPECT(gbc.pc(), 0xd526);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd524), 0xcb);
        EXPECT(gbc.readMem(0xd525), 0x82);
        // CB 82 0182
        gbc.setState(0x70c4, 0xb253, 0x55a0, 0x47ea, 0x8feb, 0x247a, 0x0, 0x0);
        gbc.writeMem(0x70c4, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb253);
        EXPECT(gbc.pc(), 0x70c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0183
        gbc.setState(0x4c9c, 0xbba4, 0x49d0, 0x6a37, 0xa136, 0xca0, 0x1, 0x1);
        gbc.writeMem(0x4c9c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xbba4);
        EXPECT(gbc.pc(), 0x4c9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0184
        gbc.setState(0x9ad, 0x2e5, 0x520, 0x2e83, 0x836d, 0x4dd0, 0x1, 0x1);
        gbc.writeMem(0x9ad, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2e5);
        EXPECT(gbc.pc(), 0x9af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0185
        gbc.setState(0x1498, 0x60ab, 0x13f0, 0x204c, 0x926b, 0xa4da, 0x1, 0x0);
        gbc.writeMem(0x1498, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x60ab);
        EXPECT(gbc.pc(), 0x149a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0186
        gbc.setState(0x711a, 0xb3b0, 0xf650, 0x3f6a, 0xc5bd, 0xdae2, 0x0, 0x0);
        gbc.writeMem(0x711a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb3b0);
        EXPECT(gbc.pc(), 0x711c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0187
        gbc.setState(0xe919, 0x3234, 0x61a0, 0x9a4f, 0x3a21, 0x8389, 0x1, 0x1);
        gbc.writeMem(0xe919, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3234);
        EXPECT(gbc.pc(), 0xe91b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe919), 0xcb);
        EXPECT(gbc.readMem(0xe91a), 0x82);
        // CB 82 0188
        gbc.setState(0x212, 0x559d, 0xd9a0, 0xadf2, 0xf607, 0xf95d, 0x0, 0x1);
        gbc.writeMem(0x212, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x559d);
        EXPECT(gbc.pc(), 0x214);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0189
        gbc.setState(0xdc4e, 0x1c59, 0xc870, 0x7ca3, 0x3b23, 0xa6a4, 0x1, 0x1);
        gbc.writeMem(0xdc4e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1c59);
        EXPECT(gbc.pc(), 0xdc50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc4e), 0xcb);
        EXPECT(gbc.readMem(0xdc4f), 0x82);
        // CB 82 018A
        gbc.setState(0xbcb5, 0xc3ef, 0xefc0, 0xc4a2, 0x2e78, 0x707b, 0x0, 0x0);
        gbc.writeMem(0xbcb5, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc3ef);
        EXPECT(gbc.pc(), 0xbcb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcb5), 0xcb);
        EXPECT(gbc.readMem(0xbcb6), 0x82);
        // CB 82 018B
        gbc.setState(0x355a, 0x2a50, 0xfde0, 0xc1cc, 0xca13, 0x4121, 0x1, 0x0);
        gbc.writeMem(0x355a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2a50);
        EXPECT(gbc.pc(), 0x355c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 018C
        gbc.setState(0x82a6, 0xb60, 0xcac0, 0x9f2, 0x9597, 0x267d, 0x1, 0x0);
        gbc.writeMem(0x82a6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb60);
        EXPECT(gbc.pc(), 0x82a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82a6), 0xcb);
        EXPECT(gbc.readMem(0x82a7), 0x82);
        // CB 82 018E
        gbc.setState(0x1137, 0xc349, 0xc8f0, 0xc879, 0xaeb8, 0xab3d, 0x1, 0x1);
        gbc.writeMem(0x1137, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc349);
        EXPECT(gbc.pc(), 0x1139);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 018F
        gbc.setState(0x5019, 0x840c, 0x2720, 0xec3e, 0x63a7, 0x1fa6, 0x1, 0x0);
        gbc.writeMem(0x5019, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x840c);
        EXPECT(gbc.pc(), 0x501b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0190
        gbc.setState(0x5eb9, 0x353d, 0xc2e0, 0x2512, 0xe633, 0xdced, 0x1, 0x1);
        gbc.writeMem(0x5eb9, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x353d);
        EXPECT(gbc.pc(), 0x5ebb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0191
        gbc.setState(0xc8ea, 0x3f6a, 0x2b70, 0xed68, 0x2c8d, 0x8e1e, 0x1, 0x0);
        gbc.writeMem(0xc8ea, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3f6a);
        EXPECT(gbc.pc(), 0xc8ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8ea), 0xcb);
        EXPECT(gbc.readMem(0xc8eb), 0x82);
        // CB 82 0192
        gbc.setState(0xb3bf, 0xb7b9, 0x5d20, 0x8219, 0x5444, 0xdf62, 0x1, 0x1);
        gbc.writeMem(0xb3bf, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb7b9);
        EXPECT(gbc.pc(), 0xb3c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3bf), 0xcb);
        EXPECT(gbc.readMem(0xb3c0), 0x82);
        // CB 82 0193
        gbc.setState(0xc1ed, 0x71f9, 0x25f0, 0xa0f8, 0xcc7c, 0xc3b5, 0x0, 0x0);
        gbc.writeMem(0xc1ed, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x71f9);
        EXPECT(gbc.pc(), 0xc1ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1ed), 0xcb);
        EXPECT(gbc.readMem(0xc1ee), 0x82);
        // CB 82 0194
        gbc.setState(0x249c, 0x2824, 0xa7d0, 0xc290, 0x4fe6, 0xfa98, 0x1, 0x0);
        gbc.writeMem(0x249c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2824);
        EXPECT(gbc.pc(), 0x249e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0195
        gbc.setState(0xa36d, 0x760e, 0x9b60, 0xaa15, 0x5cfb, 0xd28c, 0x0, 0x0);
        gbc.writeMem(0xa36d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x760e);
        EXPECT(gbc.pc(), 0xa36f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa36d), 0xcb);
        EXPECT(gbc.readMem(0xa36e), 0x82);
        // CB 82 0196
        gbc.setState(0xdcdd, 0x1a09, 0xff00, 0x227c, 0x8124, 0x1b88, 0x0, 0x0);
        gbc.writeMem(0xdcdd, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x1a09);
        EXPECT(gbc.pc(), 0xdcdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcdd), 0xcb);
        EXPECT(gbc.readMem(0xdcde), 0x82);
        // CB 82 0197
        gbc.setState(0x4074, 0x7b4f, 0x9280, 0xdef7, 0x802e, 0xd014, 0x0, 0x1);
        gbc.writeMem(0x4074, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7b4f);
        EXPECT(gbc.pc(), 0x4076);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0198
        gbc.setState(0x8b36, 0x3a46, 0xdaf0, 0x65a4, 0x3abe, 0xce33, 0x1, 0x0);
        gbc.writeMem(0x8b36, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3a46);
        EXPECT(gbc.pc(), 0x8b38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b36), 0xcb);
        EXPECT(gbc.readMem(0x8b37), 0x82);
        // CB 82 0199
        gbc.setState(0x2d9e, 0xbe26, 0x16d0, 0x4f1a, 0x2bc4, 0xce72, 0x0, 0x0);
        gbc.writeMem(0x2d9e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xbe26);
        EXPECT(gbc.pc(), 0x2da0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 019A
        gbc.setState(0x7ca5, 0x344c, 0xffc0, 0xc165, 0x1707, 0xae49, 0x1, 0x1);
        gbc.writeMem(0x7ca5, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x344c);
        EXPECT(gbc.pc(), 0x7ca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 019C
        gbc.setState(0x83a9, 0x52fd, 0xf50, 0x756, 0xfa16, 0x13ef, 0x1, 0x0);
        gbc.writeMem(0x83a9, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x52fd);
        EXPECT(gbc.pc(), 0x83ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83a9), 0xcb);
        EXPECT(gbc.readMem(0x83aa), 0x82);
        // CB 82 019D
        gbc.setState(0x83a3, 0xe3a5, 0xaff0, 0xf205, 0x35ea, 0x7096, 0x1, 0x0);
        gbc.writeMem(0x83a3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe3a5);
        EXPECT(gbc.pc(), 0x83a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83a3), 0xcb);
        EXPECT(gbc.readMem(0x83a4), 0x82);
        // CB 82 019E
        gbc.setState(0x8f3d, 0x279, 0xe9f0, 0x4505, 0xf4f3, 0x4288, 0x1, 0x0);
        gbc.writeMem(0x8f3d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x279);
        EXPECT(gbc.pc(), 0x8f3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f3d), 0xcb);
        EXPECT(gbc.readMem(0x8f3e), 0x82);
        // CB 82 019F
        gbc.setState(0x3e7a, 0xe181, 0xe120, 0x2376, 0xc41b, 0x5d0, 0x1, 0x0);
        gbc.writeMem(0x3e7a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe181);
        EXPECT(gbc.pc(), 0x3e7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01A0
        gbc.setState(0x11ec, 0xb533, 0x7670, 0xfe3, 0x80e6, 0x3cda, 0x1, 0x0);
        gbc.writeMem(0x11ec, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb533);
        EXPECT(gbc.pc(), 0x11ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01A1
        gbc.setState(0xff2, 0x5d46, 0x9800, 0xf0e5, 0x6dcd, 0xf1da, 0x0, 0x0);
        gbc.writeMem(0xff2, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5d46);
        EXPECT(gbc.pc(), 0xff4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01A2
        gbc.setState(0x2abc, 0xea59, 0x59f0, 0x77f5, 0x9e26, 0x865f, 0x1, 0x1);
        gbc.writeMem(0x2abc, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xea59);
        EXPECT(gbc.pc(), 0x2abe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01A3
        gbc.setState(0xde92, 0x7e6e, 0x1e80, 0xc969, 0x99f2, 0x571b, 0x0, 0x0);
        gbc.writeMem(0xde92, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7e6e);
        EXPECT(gbc.pc(), 0xde94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde92), 0xcb);
        EXPECT(gbc.readMem(0xde93), 0x82);
        // CB 82 01A4
        gbc.setState(0x6b8c, 0xd032, 0x2320, 0x53ad, 0x11c1, 0x8a40, 0x0, 0x1);
        gbc.writeMem(0x6b8c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd032);
        EXPECT(gbc.pc(), 0x6b8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01A5
        gbc.setState(0x9b, 0x91cc, 0xa8c0, 0xa672, 0xec95, 0x35a, 0x1, 0x1);
        gbc.writeMem(0x9b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x91cc);
        EXPECT(gbc.pc(), 0x9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01A6
        gbc.setState(0x49a0, 0x9b89, 0xb5a0, 0x10f8, 0x51a2, 0x9b27, 0x1, 0x0);
        gbc.writeMem(0x49a0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9b89);
        EXPECT(gbc.pc(), 0x49a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01A7
        gbc.setState(0x43af, 0x7482, 0x6080, 0xf048, 0x3b35, 0xc855, 0x1, 0x0);
        gbc.writeMem(0x43af, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x7482);
        EXPECT(gbc.pc(), 0x43b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01A8
        gbc.setState(0x8819, 0xe84a, 0x5690, 0x3ff8, 0x7038, 0x2a6c, 0x0, 0x1);
        gbc.writeMem(0x8819, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe84a);
        EXPECT(gbc.pc(), 0x881b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8819), 0xcb);
        EXPECT(gbc.readMem(0x881a), 0x82);
        // CB 82 01A9
        gbc.setState(0xdc1a, 0x102c, 0xb1e0, 0x97ac, 0xf7bc, 0x6a89, 0x0, 0x0);
        gbc.writeMem(0xdc1a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x102c);
        EXPECT(gbc.pc(), 0xdc1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc1a), 0xcb);
        EXPECT(gbc.readMem(0xdc1b), 0x82);
        // CB 82 01AA
        gbc.setState(0x18f6, 0x72f9, 0x6e50, 0x1c66, 0x9e09, 0xa63e, 0x0, 0x0);
        gbc.writeMem(0x18f6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x72f9);
        EXPECT(gbc.pc(), 0x18f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01AB
        gbc.setState(0x4c98, 0xc4b7, 0x4320, 0xdfb0, 0xa61b, 0xcfbb, 0x0, 0x0);
        gbc.writeMem(0x4c98, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc4b7);
        EXPECT(gbc.pc(), 0x4c9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01AC
        gbc.setState(0x96e6, 0x986d, 0x31d0, 0x6f4e, 0x950d, 0x873d, 0x1, 0x0);
        gbc.writeMem(0x96e6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x986d);
        EXPECT(gbc.pc(), 0x96e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96e6), 0xcb);
        EXPECT(gbc.readMem(0x96e7), 0x82);
        // CB 82 01AD
        gbc.setState(0x2ab0, 0x6cd1, 0xe860, 0xbf28, 0x7ea6, 0x4ab5, 0x0, 0x1);
        gbc.writeMem(0x2ab0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6cd1);
        EXPECT(gbc.pc(), 0x2ab2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01AE
        gbc.setState(0x1a7a, 0x9df3, 0xf130, 0xa67f, 0xcc10, 0x6fbe, 0x1, 0x0);
        gbc.writeMem(0x1a7a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x9df3);
        EXPECT(gbc.pc(), 0x1a7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01AF
        gbc.setState(0x1ed7, 0x3d42, 0xcab0, 0xcda4, 0x533d, 0xc0fb, 0x1, 0x1);
        gbc.writeMem(0x1ed7, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3d42);
        EXPECT(gbc.pc(), 0x1ed9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01B0
        gbc.setState(0xd9, 0x3d8b, 0x7b70, 0x6ea7, 0xb3fd, 0xa759, 0x1, 0x1);
        gbc.writeMem(0xd9, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x3d8b);
        EXPECT(gbc.pc(), 0xdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01B1
        gbc.setState(0xb682, 0x30cf, 0x5d60, 0x295f, 0x477c, 0x172d, 0x1, 0x1);
        gbc.writeMem(0xb682, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x30cf);
        EXPECT(gbc.pc(), 0xb684);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb682), 0xcb);
        EXPECT(gbc.readMem(0xb683), 0x82);
        // CB 82 01B2
        gbc.setState(0xb6dd, 0x9e1, 0xa1a0, 0x1d64, 0x7fdd, 0x4998, 0x1, 0x0);
        gbc.writeMem(0xb6dd, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9e1);
        EXPECT(gbc.pc(), 0xb6df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6dd), 0xcb);
        EXPECT(gbc.readMem(0xb6de), 0x82);
        // CB 82 01B3
        gbc.setState(0xec2b, 0x6ed1, 0x36a0, 0x2c1e, 0xad04, 0x1862, 0x1, 0x1);
        gbc.writeMem(0xec2b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6ed1);
        EXPECT(gbc.pc(), 0xec2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec2b), 0xcb);
        EXPECT(gbc.readMem(0xec2c), 0x82);
        // CB 82 01B4
        gbc.setState(0xeeec, 0x1b2, 0x4ed0, 0x292c, 0x73f3, 0xeea3, 0x1, 0x0);
        gbc.writeMem(0xeeec, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1b2);
        EXPECT(gbc.pc(), 0xeeee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeec), 0xcb);
        EXPECT(gbc.readMem(0xeeed), 0x82);
        // CB 82 01B5
        gbc.setState(0xca0a, 0x5ede, 0x70a0, 0x72b2, 0x681, 0x8a85, 0x1, 0x1);
        gbc.writeMem(0xca0a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5ede);
        EXPECT(gbc.pc(), 0xca0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca0a), 0xcb);
        EXPECT(gbc.readMem(0xca0b), 0x82);
        // CB 82 01B6
        gbc.setState(0x495a, 0x599, 0xadf0, 0xbd23, 0x2ec1, 0x59a9, 0x0, 0x0);
        gbc.writeMem(0x495a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x599);
        EXPECT(gbc.pc(), 0x495c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01B7
        gbc.setState(0x7879, 0x245f, 0xfb50, 0xcefc, 0x126d, 0xb65e, 0x1, 0x1);
        gbc.writeMem(0x7879, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x245f);
        EXPECT(gbc.pc(), 0x787b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01B8
        gbc.setState(0x2907, 0xe311, 0x4440, 0x19fc, 0x859b, 0x18f1, 0x0, 0x0);
        gbc.writeMem(0x2907, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe311);
        EXPECT(gbc.pc(), 0x2909);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01B9
        gbc.setState(0x2d5d, 0x5d8, 0x77f0, 0xea56, 0xd223, 0x17ec, 0x1, 0x0);
        gbc.writeMem(0x2d5d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5d8);
        EXPECT(gbc.pc(), 0x2d5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01BA
        gbc.setState(0x8868, 0xddd5, 0x54b0, 0xc156, 0x36ee, 0x7d12, 0x0, 0x0);
        gbc.writeMem(0x8868, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xddd5);
        EXPECT(gbc.pc(), 0x886a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8868), 0xcb);
        EXPECT(gbc.readMem(0x8869), 0x82);
        // CB 82 01BB
        gbc.setState(0xe93c, 0x833b, 0x7b10, 0x37f8, 0xc9f6, 0xd348, 0x0, 0x0);
        gbc.writeMem(0xe93c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x833b);
        EXPECT(gbc.pc(), 0xe93e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe93c), 0xcb);
        EXPECT(gbc.readMem(0xe93d), 0x82);
        // CB 82 01BC
        gbc.setState(0xddf3, 0x6e78, 0xb050, 0xae6f, 0x5eb9, 0x47b1, 0x0, 0x1);
        gbc.writeMem(0xddf3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x6e78);
        EXPECT(gbc.pc(), 0xddf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddf3), 0xcb);
        EXPECT(gbc.readMem(0xddf4), 0x82);
        // CB 82 01BD
        gbc.setState(0xaf7, 0xa9ba, 0xc010, 0xdbda, 0xbb6c, 0xd759, 0x0, 0x1);
        gbc.writeMem(0xaf7, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa9ba);
        EXPECT(gbc.pc(), 0xaf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01BE
        gbc.setState(0x9012, 0x9626, 0x4450, 0x6724, 0x41fc, 0x96df, 0x1, 0x0);
        gbc.writeMem(0x9012, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9626);
        EXPECT(gbc.pc(), 0x9014);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9012), 0xcb);
        EXPECT(gbc.readMem(0x9013), 0x82);
        // CB 82 01BF
        gbc.setState(0xd9e3, 0xcf51, 0x9ef0, 0x444d, 0x1c2e, 0x2389, 0x1, 0x1);
        gbc.writeMem(0xd9e3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xcf51);
        EXPECT(gbc.pc(), 0xd9e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9e3), 0xcb);
        EXPECT(gbc.readMem(0xd9e4), 0x82);
        // CB 82 01C0
        gbc.setState(0x329e, 0x2cf7, 0x79d0, 0x6cc0, 0xb387, 0xc6d0, 0x0, 0x0);
        gbc.writeMem(0x329e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2cf7);
        EXPECT(gbc.pc(), 0x32a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01C1
        gbc.setState(0x58de, 0x2b13, 0xdb20, 0x8275, 0xbb6f, 0x7f9c, 0x0, 0x1);
        gbc.writeMem(0x58de, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2b13);
        EXPECT(gbc.pc(), 0x58e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01C2
        gbc.setState(0x53e3, 0x5298, 0x44d0, 0x1928, 0xf563, 0x2a7a, 0x0, 0x1);
        gbc.writeMem(0x53e3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5298);
        EXPECT(gbc.pc(), 0x53e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01C4
        gbc.setState(0x1086, 0x37eb, 0xfaa0, 0x612c, 0x61d, 0x3c44, 0x0, 0x1);
        gbc.writeMem(0x1086, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x37eb);
        EXPECT(gbc.pc(), 0x1088);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01C5
        gbc.setState(0xed42, 0x97c8, 0xda80, 0xb874, 0x7de, 0x4117, 0x1, 0x1);
        gbc.writeMem(0xed42, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x97c8);
        EXPECT(gbc.pc(), 0xed44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed42), 0xcb);
        EXPECT(gbc.readMem(0xed43), 0x82);
        // CB 82 01C6
        gbc.setState(0x9d17, 0x782e, 0x1bc0, 0x3b9b, 0x4c8e, 0x791, 0x1, 0x0);
        gbc.writeMem(0x9d17, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x782e);
        EXPECT(gbc.pc(), 0x9d19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d17), 0xcb);
        EXPECT(gbc.readMem(0x9d18), 0x82);
        // CB 82 01C7
        gbc.setState(0xc0b8, 0xab98, 0x9ca0, 0x48c, 0xb2de, 0x4474, 0x0, 0x0);
        gbc.writeMem(0xc0b8, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xab98);
        EXPECT(gbc.pc(), 0xc0ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0b8), 0xcb);
        EXPECT(gbc.readMem(0xc0b9), 0x82);
        // CB 82 01C8
        gbc.setState(0x520, 0xe7ae, 0xc8f0, 0x71ee, 0x2f59, 0xe1d5, 0x1, 0x0);
        gbc.writeMem(0x520, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe7ae);
        EXPECT(gbc.pc(), 0x522);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01C9
        gbc.setState(0xd694, 0x182f, 0xa820, 0x129f, 0x79ed, 0x4f6a, 0x0, 0x0);
        gbc.writeMem(0xd694, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x182f);
        EXPECT(gbc.pc(), 0xd696);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd694), 0xcb);
        EXPECT(gbc.readMem(0xd695), 0x82);
        // CB 82 01CA
        gbc.setState(0x6042, 0xa2d7, 0xdbe0, 0x9c99, 0x601d, 0xff0, 0x1, 0x0);
        gbc.writeMem(0x6042, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa2d7);
        EXPECT(gbc.pc(), 0x6044);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01CB
        gbc.setState(0x9009, 0x1ae7, 0x3b60, 0x5496, 0x2b8a, 0xd30, 0x1, 0x0);
        gbc.writeMem(0x9009, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1ae7);
        EXPECT(gbc.pc(), 0x900b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9009), 0xcb);
        EXPECT(gbc.readMem(0x900a), 0x82);
        // CB 82 01CC
        gbc.setState(0x5d49, 0x93b5, 0x4b00, 0x77f0, 0x7a25, 0xd576, 0x1, 0x1);
        gbc.writeMem(0x5d49, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x93b5);
        EXPECT(gbc.pc(), 0x5d4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01CD
        gbc.setState(0xeec0, 0x2eeb, 0x8a70, 0x3a74, 0xec4f, 0xd521, 0x0, 0x0);
        gbc.writeMem(0xeec0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2eeb);
        EXPECT(gbc.pc(), 0xeec2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeec0), 0xcb);
        EXPECT(gbc.readMem(0xeec1), 0x82);
        // CB 82 01CE
        gbc.setState(0xca04, 0xca34, 0x2380, 0xbe4, 0x965a, 0x68ad, 0x1, 0x0);
        gbc.writeMem(0xca04, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xca34);
        EXPECT(gbc.pc(), 0xca06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca04), 0xcb);
        EXPECT(gbc.readMem(0xca05), 0x82);
        // CB 82 01CF
        gbc.setState(0x6d33, 0xaf51, 0x9d40, 0x172, 0xd87e, 0x8607, 0x0, 0x0);
        gbc.writeMem(0x6d33, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xaf51);
        EXPECT(gbc.pc(), 0x6d35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01D0
        gbc.setState(0x6e4f, 0xb71d, 0xad20, 0xd4a0, 0xe77c, 0x7be4, 0x1, 0x1);
        gbc.writeMem(0x6e4f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb71d);
        EXPECT(gbc.pc(), 0x6e51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01D1
        gbc.setState(0xeb2, 0x1e6b, 0x5ab0, 0x1986, 0x73b4, 0x7ac3, 0x1, 0x1);
        gbc.writeMem(0xeb2, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1e6b);
        EXPECT(gbc.pc(), 0xeb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01D2
        gbc.setState(0x3e13, 0x63da, 0x6110, 0xb43e, 0x78a2, 0xeaaf, 0x0, 0x1);
        gbc.writeMem(0x3e13, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x63da);
        EXPECT(gbc.pc(), 0x3e15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01D3
        gbc.setState(0x8448, 0xde77, 0xd4e0, 0x9a2a, 0x70ad, 0xb7ac, 0x0, 0x0);
        gbc.writeMem(0x8448, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xde77);
        EXPECT(gbc.pc(), 0x844a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8448), 0xcb);
        EXPECT(gbc.readMem(0x8449), 0x82);
        // CB 82 01D4
        gbc.setState(0x8c5, 0xd7c9, 0x6400, 0x47b1, 0x3267, 0x8ab0, 0x1, 0x1);
        gbc.writeMem(0x8c5, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd7c9);
        EXPECT(gbc.pc(), 0x8c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01D5
        gbc.setState(0xae08, 0x54a2, 0x41a0, 0x5834, 0xb722, 0x2608, 0x0, 0x1);
        gbc.writeMem(0xae08, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x54a2);
        EXPECT(gbc.pc(), 0xae0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae08), 0xcb);
        EXPECT(gbc.readMem(0xae09), 0x82);
        // CB 82 01D6
        gbc.setState(0xd83b, 0x4d2, 0xa0, 0x2ae8, 0x8980, 0xb72f, 0x1, 0x1);
        gbc.writeMem(0xd83b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4d2);
        EXPECT(gbc.pc(), 0xd83d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd83b), 0xcb);
        EXPECT(gbc.readMem(0xd83c), 0x82);
        // CB 82 01D7
        gbc.setState(0x5479, 0xe450, 0xc3a0, 0xe38f, 0xf000, 0x5957, 0x1, 0x1);
        gbc.writeMem(0x5479, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe450);
        EXPECT(gbc.pc(), 0x547b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01D8
        gbc.setState(0x1117, 0x2a1b, 0x9250, 0xd7e5, 0x805c, 0x351a, 0x0, 0x1);
        gbc.writeMem(0x1117, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2a1b);
        EXPECT(gbc.pc(), 0x1119);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01D9
        gbc.setState(0xa97e, 0x7e8c, 0xbc60, 0x8265, 0x86ae, 0xa1d9, 0x1, 0x1);
        gbc.writeMem(0xa97e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x7e8c);
        EXPECT(gbc.pc(), 0xa980);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa97e), 0xcb);
        EXPECT(gbc.readMem(0xa97f), 0x82);
        // CB 82 01DA
        gbc.setState(0xb055, 0xe6a5, 0x6db0, 0x7b5c, 0xd067, 0x9122, 0x0, 0x1);
        gbc.writeMem(0xb055, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe6a5);
        EXPECT(gbc.pc(), 0xb057);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb055), 0xcb);
        EXPECT(gbc.readMem(0xb056), 0x82);
        // CB 82 01DB
        gbc.setState(0xa4bc, 0xdf59, 0x6700, 0xeef2, 0x306e, 0x6bce, 0x0, 0x0);
        gbc.writeMem(0xa4bc, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xdf59);
        EXPECT(gbc.pc(), 0xa4be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4bc), 0xcb);
        EXPECT(gbc.readMem(0xa4bd), 0x82);
        // CB 82 01DC
        gbc.setState(0x6a9f, 0xbb61, 0x2dd0, 0x1f87, 0x45d7, 0x1a8f, 0x1, 0x0);
        gbc.writeMem(0x6a9f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xbb61);
        EXPECT(gbc.pc(), 0x6aa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01DD
        gbc.setState(0x2b69, 0x1ac6, 0x7f0, 0xa96a, 0x8ea0, 0x11c0, 0x0, 0x1);
        gbc.writeMem(0x2b69, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1ac6);
        EXPECT(gbc.pc(), 0x2b6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01DE
        gbc.setState(0xa609, 0xd0a, 0xd3a0, 0x357f, 0xfcd0, 0x9fd7, 0x1, 0x0);
        gbc.writeMem(0xa609, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd0a);
        EXPECT(gbc.pc(), 0xa60b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa609), 0xcb);
        EXPECT(gbc.readMem(0xa60a), 0x82);
        // CB 82 01DF
        gbc.setState(0x373a, 0xab3d, 0x7cf0, 0x1d27, 0x46ef, 0xa71f, 0x0, 0x0);
        gbc.writeMem(0x373a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xab3d);
        EXPECT(gbc.pc(), 0x373c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01E0
        gbc.setState(0x8670, 0x3fa, 0xb930, 0xfa23, 0x27d4, 0x42a1, 0x1, 0x1);
        gbc.writeMem(0x8670, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3fa);
        EXPECT(gbc.pc(), 0x8672);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8670), 0xcb);
        EXPECT(gbc.readMem(0x8671), 0x82);
        // CB 82 01E1
        gbc.setState(0x16bf, 0xab1f, 0xbb00, 0xb8dd, 0x1a97, 0x26df, 0x1, 0x0);
        gbc.writeMem(0x16bf, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xab1f);
        EXPECT(gbc.pc(), 0x16c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01E2
        gbc.setState(0x681f, 0x825a, 0x37e0, 0x6180, 0xa645, 0xf1f7, 0x1, 0x0);
        gbc.writeMem(0x681f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x825a);
        EXPECT(gbc.pc(), 0x6821);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01E3
        gbc.setState(0x745b, 0x9427, 0x5680, 0xa2f2, 0x335d, 0x907c, 0x1, 0x0);
        gbc.writeMem(0x745b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9427);
        EXPECT(gbc.pc(), 0x745d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01E4
        gbc.setState(0x6c85, 0xa75, 0xd5a0, 0x9dfb, 0xe784, 0xc773, 0x1, 0x1);
        gbc.writeMem(0x6c85, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa75);
        EXPECT(gbc.pc(), 0x6c87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01E5
        gbc.setState(0x46de, 0xb792, 0x65a0, 0x1a33, 0x25bd, 0xeed, 0x1, 0x1);
        gbc.writeMem(0x46de, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb792);
        EXPECT(gbc.pc(), 0x46e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01E6
        gbc.setState(0x9d6b, 0x5c24, 0xc090, 0x6c66, 0x5de6, 0xb3ba, 0x1, 0x1);
        gbc.writeMem(0x9d6b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5c24);
        EXPECT(gbc.pc(), 0x9d6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d6b), 0xcb);
        EXPECT(gbc.readMem(0x9d6c), 0x82);
        // CB 82 01E7
        gbc.setState(0xbb45, 0x2a47, 0xe460, 0x112, 0x87b0, 0xd7af, 0x0, 0x1);
        gbc.writeMem(0xbb45, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2a47);
        EXPECT(gbc.pc(), 0xbb47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb45), 0xcb);
        EXPECT(gbc.readMem(0xbb46), 0x82);
        // CB 82 01E8
        gbc.setState(0x2ef2, 0x5d95, 0x5380, 0x53b9, 0x1e91, 0x6de, 0x1, 0x0);
        gbc.writeMem(0x2ef2, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x5d95);
        EXPECT(gbc.pc(), 0x2ef4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01E9
        gbc.setState(0x840e, 0x552b, 0xb4b0, 0xaeb4, 0xee0d, 0xba8, 0x1, 0x1);
        gbc.writeMem(0x840e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x552b);
        EXPECT(gbc.pc(), 0x8410);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x840e), 0xcb);
        EXPECT(gbc.readMem(0x840f), 0x82);
        // CB 82 01EA
        gbc.setState(0x49ba, 0xdeb5, 0xef90, 0x8bb8, 0x995a, 0x8f25, 0x0, 0x1);
        gbc.writeMem(0x49ba, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xdeb5);
        EXPECT(gbc.pc(), 0x49bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01EB
        gbc.setState(0x3695, 0xc700, 0xb20, 0x9cb8, 0xe8e5, 0x4b16, 0x0, 0x1);
        gbc.writeMem(0x3695, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc700);
        EXPECT(gbc.pc(), 0x3697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01EC
        gbc.setState(0x927d, 0x8815, 0x2790, 0x9c51, 0x2154, 0xd6c4, 0x0, 0x0);
        gbc.writeMem(0x927d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8815);
        EXPECT(gbc.pc(), 0x927f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x927d), 0xcb);
        EXPECT(gbc.readMem(0x927e), 0x82);
        // CB 82 01ED
        gbc.setState(0x19ed, 0xc29e, 0xce50, 0x8405, 0xbf7c, 0xe55c, 0x1, 0x1);
        gbc.writeMem(0x19ed, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xc29e);
        EXPECT(gbc.pc(), 0x19ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01EE
        gbc.setState(0x3907, 0x5d71, 0x90a0, 0x15f7, 0x60f0, 0xf22c, 0x0, 0x0);
        gbc.writeMem(0x3907, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x5d71);
        EXPECT(gbc.pc(), 0x3909);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01EF
        gbc.setState(0xa249, 0x7b, 0xad40, 0x3f76, 0x4f7c, 0x4709, 0x1, 0x0);
        gbc.writeMem(0xa249, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7b);
        EXPECT(gbc.pc(), 0xa24b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa249), 0xcb);
        EXPECT(gbc.readMem(0xa24a), 0x82);
        // CB 82 01F0
        gbc.setState(0xa287, 0xa9ca, 0xaf70, 0x3f2d, 0xdc9e, 0x4d84, 0x1, 0x1);
        gbc.writeMem(0xa287, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa9ca);
        EXPECT(gbc.pc(), 0xa289);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa287), 0xcb);
        EXPECT(gbc.readMem(0xa288), 0x82);
        // CB 82 01F1
        gbc.setState(0x59ec, 0xbbe1, 0x1c90, 0xfa53, 0xf52c, 0x8faf, 0x1, 0x1);
        gbc.writeMem(0x59ec, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xbbe1);
        EXPECT(gbc.pc(), 0x59ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01F2
        gbc.setState(0xd481, 0x3f9c, 0xa250, 0x1365, 0xd8d0, 0x6e47, 0x0, 0x1);
        gbc.writeMem(0xd481, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x3f9c);
        EXPECT(gbc.pc(), 0xd483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd481), 0xcb);
        EXPECT(gbc.readMem(0xd482), 0x82);
        // CB 82 01F3
        gbc.setState(0xcbf0, 0x641d, 0x8740, 0x1712, 0x884f, 0xf96, 0x0, 0x1);
        gbc.writeMem(0xcbf0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x641d);
        EXPECT(gbc.pc(), 0xcbf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbf0), 0xcb);
        EXPECT(gbc.readMem(0xcbf1), 0x82);
        // CB 82 01F4
        gbc.setState(0xe45d, 0x97fe, 0x55d0, 0xda69, 0xf052, 0xefa5, 0x0, 0x1);
        gbc.writeMem(0xe45d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x97fe);
        EXPECT(gbc.pc(), 0xe45f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe45d), 0xcb);
        EXPECT(gbc.readMem(0xe45e), 0x82);
        // CB 82 01F5
        gbc.setState(0x6b57, 0xd5ec, 0x4950, 0xb0, 0x81ca, 0xaad9, 0x0, 0x0);
        gbc.writeMem(0x6b57, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xd5ec);
        EXPECT(gbc.pc(), 0x6b59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 01F6
        gbc.setState(0xa64d, 0xc1bd, 0x7510, 0x8059, 0xae56, 0xc064, 0x1, 0x1);
        gbc.writeMem(0xa64d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xc1bd);
        EXPECT(gbc.pc(), 0xa64f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa64d), 0xcb);
        EXPECT(gbc.readMem(0xa64e), 0x82);
        // CB 82 01F7
        gbc.setState(0xb619, 0xc10b, 0x8f70, 0xcf88, 0xfda6, 0x11da, 0x0, 0x0);
        gbc.writeMem(0xb619, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc10b);
        EXPECT(gbc.pc(), 0xb61b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb619), 0xcb);
        EXPECT(gbc.readMem(0xb61a), 0x82);
        // CB 82 01F8
        gbc.setState(0xa0b2, 0x6d61, 0xaa20, 0xd61b, 0xca05, 0x6c5c, 0x0, 0x1);
        gbc.writeMem(0xa0b2, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6d61);
        EXPECT(gbc.pc(), 0xa0b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0b2), 0xcb);
        EXPECT(gbc.readMem(0xa0b3), 0x82);
        // CB 82 01F9
        gbc.setState(0x1fd4, 0x9873, 0x5b40, 0xffdc, 0x9342, 0x4434, 0x0, 0x1);
        gbc.writeMem(0x1fd4, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9873);
        EXPECT(gbc.pc(), 0x1fd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01FA
        gbc.setState(0x31e7, 0xc5e6, 0x8b20, 0x2319, 0xd4d2, 0xebe, 0x0, 0x0);
        gbc.writeMem(0x31e7, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc5e6);
        EXPECT(gbc.pc(), 0x31e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01FB
        gbc.setState(0x801d, 0x8ff6, 0x84f0, 0x857b, 0xcbf1, 0xee8c, 0x1, 0x1);
        gbc.writeMem(0x801d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8ff6);
        EXPECT(gbc.pc(), 0x801f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x801d), 0xcb);
        EXPECT(gbc.readMem(0x801e), 0x82);
        // CB 82 01FC
        gbc.setState(0x1541, 0x677a, 0x28c0, 0x1140, 0xffba, 0x9714, 0x0, 0x0);
        gbc.writeMem(0x1541, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x677a);
        EXPECT(gbc.pc(), 0x1543);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01FD
        gbc.setState(0x25e3, 0x28f3, 0xac0, 0xb32e, 0x2d0a, 0xddb7, 0x1, 0x1);
        gbc.writeMem(0x25e3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x28f3);
        EXPECT(gbc.pc(), 0x25e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 01FF
        gbc.setState(0xb435, 0xc636, 0x1780, 0x6583, 0x8a01, 0xc2d4, 0x0, 0x1);
        gbc.writeMem(0xb435, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc636);
        EXPECT(gbc.pc(), 0xb437);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb435), 0xcb);
        EXPECT(gbc.readMem(0xb436), 0x82);
        // CB 82 0200
        gbc.setState(0x8522, 0xa10b, 0x9370, 0x72bf, 0xc854, 0x107, 0x1, 0x1);
        gbc.writeMem(0x8522, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa10b);
        EXPECT(gbc.pc(), 0x8524);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8522), 0xcb);
        EXPECT(gbc.readMem(0x8523), 0x82);
        // CB 82 0201
        gbc.setState(0x3844, 0x89ef, 0x8fd0, 0xa411, 0xd448, 0xd23d, 0x1, 0x1);
        gbc.writeMem(0x3844, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x89ef);
        EXPECT(gbc.pc(), 0x3846);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0202
        gbc.setState(0xeefc, 0x527b, 0x5830, 0xc16, 0x45ac, 0xa235, 0x0, 0x0);
        gbc.writeMem(0xeefc, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x527b);
        EXPECT(gbc.pc(), 0xeefe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeefc), 0xcb);
        EXPECT(gbc.readMem(0xeefd), 0x82);
        // CB 82 0203
        gbc.setState(0xc10b, 0x9949, 0x1d40, 0x73be, 0xe9f2, 0x5d24, 0x1, 0x1);
        gbc.writeMem(0xc10b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9949);
        EXPECT(gbc.pc(), 0xc10d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc10b), 0xcb);
        EXPECT(gbc.readMem(0xc10c), 0x82);
        // CB 82 0204
        gbc.setState(0x6350, 0x51b4, 0xcbd0, 0x8967, 0xabe6, 0xacef, 0x0, 0x1);
        gbc.writeMem(0x6350, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x51b4);
        EXPECT(gbc.pc(), 0x6352);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0205
        gbc.setState(0x7019, 0xecbf, 0x9cc0, 0x77f8, 0x888e, 0x2128, 0x1, 0x0);
        gbc.writeMem(0x7019, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xecbf);
        EXPECT(gbc.pc(), 0x701b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0206
        gbc.setState(0x3db, 0xf316, 0x6910, 0x9c16, 0x2492, 0xa33f, 0x1, 0x0);
        gbc.writeMem(0x3db, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf316);
        EXPECT(gbc.pc(), 0x3dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0207
        gbc.setState(0xb452, 0x8beb, 0xa5d0, 0x984d, 0x9163, 0x4739, 0x1, 0x0);
        gbc.writeMem(0xb452, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x8beb);
        EXPECT(gbc.pc(), 0xb454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb452), 0xcb);
        EXPECT(gbc.readMem(0xb453), 0x82);
        // CB 82 0208
        gbc.setState(0xeb60, 0x9ee1, 0xe3c0, 0x7d46, 0x5537, 0x720d, 0x1, 0x1);
        gbc.writeMem(0xeb60, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x9ee1);
        EXPECT(gbc.pc(), 0xeb62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb60), 0xcb);
        EXPECT(gbc.readMem(0xeb61), 0x82);
        // CB 82 020A
        gbc.setState(0x5076, 0x84ea, 0xe330, 0xc9f4, 0x568c, 0x8b73, 0x0, 0x0);
        gbc.writeMem(0x5076, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x84ea);
        EXPECT(gbc.pc(), 0x5078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 020B
        gbc.setState(0xb56c, 0xd7c0, 0x4350, 0x8deb, 0x361d, 0xae23, 0x1, 0x0);
        gbc.writeMem(0xb56c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd7c0);
        EXPECT(gbc.pc(), 0xb56e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb56c), 0xcb);
        EXPECT(gbc.readMem(0xb56d), 0x82);
        // CB 82 020C
        gbc.setState(0x53c5, 0x4224, 0xd30, 0x59d4, 0x4759, 0x2a8f, 0x1, 0x0);
        gbc.writeMem(0x53c5, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x4224);
        EXPECT(gbc.pc(), 0x53c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 020D
        gbc.setState(0x5912, 0xa875, 0x1ad0, 0xab8d, 0xb1c0, 0x9472, 0x0, 0x0);
        gbc.writeMem(0x5912, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xa875);
        EXPECT(gbc.pc(), 0x5914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 020E
        gbc.setState(0xbb21, 0xb365, 0x8d70, 0x5e9f, 0x3e1, 0x5fd8, 0x1, 0x0);
        gbc.writeMem(0xbb21, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xb365);
        EXPECT(gbc.pc(), 0xbb23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb21), 0xcb);
        EXPECT(gbc.readMem(0xbb22), 0x82);
        // CB 82 020F
        gbc.setState(0x7653, 0xe2b1, 0x6860, 0xe216, 0x3c, 0xfef0, 0x1, 0x0);
        gbc.writeMem(0x7653, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xe2b1);
        EXPECT(gbc.pc(), 0x7655);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0210
        gbc.setState(0xe33f, 0x2c99, 0x11b0, 0xd509, 0x57de, 0xc46a, 0x0, 0x1);
        gbc.writeMem(0xe33f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x2c99);
        EXPECT(gbc.pc(), 0xe341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe33f), 0xcb);
        EXPECT(gbc.readMem(0xe340), 0x82);
        // CB 82 0211
        gbc.setState(0x871b, 0x29d6, 0x8fa0, 0x321e, 0xf9a, 0x86b2, 0x1, 0x0);
        gbc.writeMem(0x871b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x29d6);
        EXPECT(gbc.pc(), 0x871d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x871b), 0xcb);
        EXPECT(gbc.readMem(0x871c), 0x82);
        // CB 82 0212
        gbc.setState(0xd021, 0xcee7, 0x2660, 0xd4fe, 0x85b, 0xc6b8, 0x1, 0x1);
        gbc.writeMem(0xd021, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xcee7);
        EXPECT(gbc.pc(), 0xd023);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd021), 0xcb);
        EXPECT(gbc.readMem(0xd022), 0x82);
        // CB 82 0213
        gbc.setState(0xe821, 0x82b6, 0x6200, 0xb826, 0x50e9, 0xd7fd, 0x1, 0x1);
        gbc.writeMem(0xe821, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x82b6);
        EXPECT(gbc.pc(), 0xe823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe821), 0xcb);
        EXPECT(gbc.readMem(0xe822), 0x82);
        // CB 82 0215
        gbc.setState(0xe794, 0xf0aa, 0x79c0, 0xc5a9, 0x6889, 0x5243, 0x1, 0x0);
        gbc.writeMem(0xe794, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf0aa);
        EXPECT(gbc.pc(), 0xe796);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe794), 0xcb);
        EXPECT(gbc.readMem(0xe795), 0x82);
        // CB 82 0216
        gbc.setState(0x6a8f, 0xb68c, 0x4350, 0x5287, 0x14a0, 0x7470, 0x0, 0x0);
        gbc.writeMem(0x6a8f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb68c);
        EXPECT(gbc.pc(), 0x6a91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0217
        gbc.setState(0xd712, 0xaf95, 0xe5a0, 0xd738, 0x39eb, 0x9c8, 0x1, 0x0);
        gbc.writeMem(0xd712, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xaf95);
        EXPECT(gbc.pc(), 0xd714);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd712), 0xcb);
        EXPECT(gbc.readMem(0xd713), 0x82);
        // CB 82 0218
        gbc.setState(0xe0ce, 0x26fd, 0x3370, 0x7226, 0x667, 0xf470, 0x0, 0x0);
        gbc.writeMem(0xe0ce, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x26fd);
        EXPECT(gbc.pc(), 0xe0d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0ce), 0xcb);
        EXPECT(gbc.readMem(0xe0cf), 0x82);
        // CB 82 0219
        gbc.setState(0xa74c, 0xa63e, 0x8700, 0x80ac, 0xe67d, 0x9e46, 0x0, 0x1);
        gbc.writeMem(0xa74c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa63e);
        EXPECT(gbc.pc(), 0xa74e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa74c), 0xcb);
        EXPECT(gbc.readMem(0xa74d), 0x82);
        // CB 82 021A
        gbc.setState(0x3a77, 0xfed4, 0xed30, 0xa37d, 0x51ab, 0x50ac, 0x0, 0x1);
        gbc.writeMem(0x3a77, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xfed4);
        EXPECT(gbc.pc(), 0x3a79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 021B
        gbc.setState(0x7652, 0xb85e, 0xd7b0, 0x28b3, 0xc2e, 0x51d3, 0x0, 0x0);
        gbc.writeMem(0x7652, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb85e);
        EXPECT(gbc.pc(), 0x7654);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 021C
        gbc.setState(0xdeaa, 0x1bb, 0xe950, 0xff5c, 0xce00, 0x162f, 0x0, 0x0);
        gbc.writeMem(0xdeaa, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x1bb);
        EXPECT(gbc.pc(), 0xdeac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeaa), 0xcb);
        EXPECT(gbc.readMem(0xdeab), 0x82);
        // CB 82 021D
        gbc.setState(0x855b, 0xcb7, 0x1c0, 0x8547, 0x12cb, 0x6494, 0x0, 0x0);
        gbc.writeMem(0x855b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xcb7);
        EXPECT(gbc.pc(), 0x855d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x855b), 0xcb);
        EXPECT(gbc.readMem(0x855c), 0x82);
        // CB 82 021E
        gbc.setState(0xa9be, 0xf7b3, 0xb400, 0xb4eb, 0xc47f, 0xe510, 0x0, 0x0);
        gbc.writeMem(0xa9be, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf7b3);
        EXPECT(gbc.pc(), 0xa9c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9be), 0xcb);
        EXPECT(gbc.readMem(0xa9bf), 0x82);
        // CB 82 021F
        gbc.setState(0x552a, 0x27b7, 0xdbf0, 0xf1f1, 0xf0b8, 0x9bea, 0x0, 0x1);
        gbc.writeMem(0x552a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x27b7);
        EXPECT(gbc.pc(), 0x552c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0220
        gbc.setState(0x4bd9, 0x49d9, 0x42c0, 0xdc02, 0x33c5, 0x213e, 0x1, 0x0);
        gbc.writeMem(0x4bd9, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x49d9);
        EXPECT(gbc.pc(), 0x4bdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0221
        gbc.setState(0x1e71, 0x2598, 0x57e0, 0x1391, 0x51ba, 0x576b, 0x0, 0x0);
        gbc.writeMem(0x1e71, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2598);
        EXPECT(gbc.pc(), 0x1e73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0222
        gbc.setState(0x7000, 0x6d0c, 0x4250, 0x53a3, 0x46c0, 0xbdd4, 0x1, 0x1);
        gbc.writeMem(0x7000, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6d0c);
        EXPECT(gbc.pc(), 0x7002);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0223
        gbc.setState(0x9e57, 0xa3f9, 0xf5b0, 0xd373, 0xfa91, 0x32eb, 0x1, 0x1);
        gbc.writeMem(0x9e57, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa3f9);
        EXPECT(gbc.pc(), 0x9e59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e57), 0xcb);
        EXPECT(gbc.readMem(0x9e58), 0x82);
        // CB 82 0224
        gbc.setState(0xdbf5, 0x3550, 0x28f0, 0x8e20, 0xab4b, 0x47f5, 0x0, 0x1);
        gbc.writeMem(0xdbf5, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x3550);
        EXPECT(gbc.pc(), 0xdbf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbf5), 0xcb);
        EXPECT(gbc.readMem(0xdbf6), 0x82);
        // CB 82 0225
        gbc.setState(0xd938, 0xf909, 0xd9f0, 0xacd5, 0x7979, 0x2a9, 0x1, 0x0);
        gbc.writeMem(0xd938, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf909);
        EXPECT(gbc.pc(), 0xd93a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd938), 0xcb);
        EXPECT(gbc.readMem(0xd939), 0x82);
        // CB 82 0226
        gbc.setState(0x8b20, 0xa15c, 0x4b50, 0x3eaa, 0x9886, 0x2e5a, 0x0, 0x0);
        gbc.writeMem(0x8b20, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa15c);
        EXPECT(gbc.pc(), 0x8b22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b20), 0xcb);
        EXPECT(gbc.readMem(0x8b21), 0x82);
        // CB 82 0227
        gbc.setState(0x8d64, 0x466f, 0xe4b0, 0x27dd, 0x3411, 0x97c6, 0x1, 0x0);
        gbc.writeMem(0x8d64, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x466f);
        EXPECT(gbc.pc(), 0x8d66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d64), 0xcb);
        EXPECT(gbc.readMem(0x8d65), 0x82);
        // CB 82 0228
        gbc.setState(0x6819, 0xd5b8, 0x47c0, 0x1f27, 0xac76, 0x6387, 0x1, 0x1);
        gbc.writeMem(0x6819, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd5b8);
        EXPECT(gbc.pc(), 0x681b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 022A
        gbc.setState(0x182b, 0xc139, 0x4030, 0x949, 0x203c, 0x285d, 0x0, 0x1);
        gbc.writeMem(0x182b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc139);
        EXPECT(gbc.pc(), 0x182d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 022B
        gbc.setState(0x5cd3, 0xf2d2, 0xf090, 0x28c7, 0x6ffb, 0x9ecc, 0x1, 0x1);
        gbc.writeMem(0x5cd3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf2d2);
        EXPECT(gbc.pc(), 0x5cd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 022C
        gbc.setState(0xdb52, 0x100c, 0x5140, 0x41e9, 0xe099, 0x2c75, 0x1, 0x0);
        gbc.writeMem(0xdb52, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x100c);
        EXPECT(gbc.pc(), 0xdb54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb52), 0xcb);
        EXPECT(gbc.readMem(0xdb53), 0x82);
        // CB 82 022D
        gbc.setState(0xcd43, 0x263, 0x5400, 0xa40b, 0xe571, 0x1ca2, 0x0, 0x0);
        gbc.writeMem(0xcd43, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x263);
        EXPECT(gbc.pc(), 0xcd45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd43), 0xcb);
        EXPECT(gbc.readMem(0xcd44), 0x82);
        // CB 82 022E
        gbc.setState(0x53a7, 0x4593, 0x5dc0, 0x7219, 0x43c2, 0x99fd, 0x0, 0x1);
        gbc.writeMem(0x53a7, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4593);
        EXPECT(gbc.pc(), 0x53a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 022F
        gbc.setState(0x72a5, 0x94a1, 0x2e80, 0x1216, 0x81e2, 0x35bb, 0x0, 0x0);
        gbc.writeMem(0x72a5, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x94a1);
        EXPECT(gbc.pc(), 0x72a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0230
        gbc.setState(0xbe92, 0x13e8, 0xe2d0, 0x63d0, 0x9de7, 0xd23a, 0x0, 0x0);
        gbc.writeMem(0xbe92, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x13e8);
        EXPECT(gbc.pc(), 0xbe94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe92), 0xcb);
        EXPECT(gbc.readMem(0xbe93), 0x82);
        // CB 82 0231
        gbc.setState(0xe16f, 0x7a58, 0x1860, 0x2593, 0xd0b, 0x82a2, 0x1, 0x1);
        gbc.writeMem(0xe16f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7a58);
        EXPECT(gbc.pc(), 0xe171);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe16f), 0xcb);
        EXPECT(gbc.readMem(0xe170), 0x82);
        // CB 82 0232
        gbc.setState(0x239, 0xdd4e, 0xc2c0, 0xa83a, 0xc48a, 0x548e, 0x0, 0x1);
        gbc.writeMem(0x239, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xdd4e);
        EXPECT(gbc.pc(), 0x23b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0233
        gbc.setState(0xb946, 0x9609, 0x8c30, 0x7a2f, 0x213e, 0x6a47, 0x0, 0x1);
        gbc.writeMem(0xb946, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9609);
        EXPECT(gbc.pc(), 0xb948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb946), 0xcb);
        EXPECT(gbc.readMem(0xb947), 0x82);
        // CB 82 0234
        gbc.setState(0xec72, 0x7de1, 0xc300, 0xf352, 0x460f, 0x25d6, 0x1, 0x0);
        gbc.writeMem(0xec72, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7de1);
        EXPECT(gbc.pc(), 0xec74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec72), 0xcb);
        EXPECT(gbc.readMem(0xec73), 0x82);
        // CB 82 0235
        gbc.setState(0xb0f2, 0xb219, 0xc890, 0xdc65, 0xffc4, 0x7033, 0x0, 0x0);
        gbc.writeMem(0xb0f2, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xb219);
        EXPECT(gbc.pc(), 0xb0f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0f2), 0xcb);
        EXPECT(gbc.readMem(0xb0f3), 0x82);
        // CB 82 0236
        gbc.setState(0x34b0, 0x4bd, 0x2c0, 0xcb4, 0x174a, 0x4e55, 0x1, 0x0);
        gbc.writeMem(0x34b0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4bd);
        EXPECT(gbc.pc(), 0x34b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0237
        gbc.setState(0x7f7b, 0x1869, 0x2240, 0x1129, 0xacec, 0xde2, 0x1, 0x0);
        gbc.writeMem(0x7f7b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1869);
        EXPECT(gbc.pc(), 0x7f7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0238
        gbc.setState(0x1e99, 0xd18, 0x940, 0xb7d, 0xebe, 0x1a80, 0x1, 0x0);
        gbc.writeMem(0x1e99, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd18);
        EXPECT(gbc.pc(), 0x1e9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0239
        gbc.setState(0xbaa7, 0xa783, 0x9bd0, 0xb060, 0x7b20, 0xd9ac, 0x0, 0x1);
        gbc.writeMem(0xbaa7, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa783);
        EXPECT(gbc.pc(), 0xbaa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaa7), 0xcb);
        EXPECT(gbc.readMem(0xbaa8), 0x82);
        // CB 82 023B
        gbc.setState(0x2dff, 0x6ad8, 0x43f0, 0xef93, 0xe423, 0xb09f, 0x0, 0x0);
        gbc.writeMem(0x2dff, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6ad8);
        EXPECT(gbc.pc(), 0x2e01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 023C
        gbc.setState(0x5856, 0x98e6, 0x3c80, 0x5eea, 0x450e, 0x2113, 0x1, 0x1);
        gbc.writeMem(0x5856, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x98e6);
        EXPECT(gbc.pc(), 0x5858);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 023D
        gbc.setState(0x5c3c, 0x70c2, 0xd80, 0x6cd6, 0x3ec4, 0xe181, 0x0, 0x0);
        gbc.writeMem(0x5c3c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x70c2);
        EXPECT(gbc.pc(), 0x5c3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 023E
        gbc.setState(0xa8f3, 0x93f0, 0x6000, 0x2d17, 0x266b, 0x9d5a, 0x1, 0x1);
        gbc.writeMem(0xa8f3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x93f0);
        EXPECT(gbc.pc(), 0xa8f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8f3), 0xcb);
        EXPECT(gbc.readMem(0xa8f4), 0x82);
        // CB 82 023F
        gbc.setState(0x51d1, 0x86a9, 0xdaf0, 0x133, 0x4f2b, 0xbc5, 0x0, 0x1);
        gbc.writeMem(0x51d1, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x86a9);
        EXPECT(gbc.pc(), 0x51d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0240
        gbc.setState(0xd4ab, 0x9796, 0x5b90, 0xe7f7, 0x607, 0xc59a, 0x1, 0x1);
        gbc.writeMem(0xd4ab, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9796);
        EXPECT(gbc.pc(), 0xd4ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4ab), 0xcb);
        EXPECT(gbc.readMem(0xd4ac), 0x82);
        // CB 82 0241
        gbc.setState(0xe374, 0x40b0, 0xa380, 0x64ec, 0x10db, 0x99aa, 0x1, 0x1);
        gbc.writeMem(0xe374, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x40b0);
        EXPECT(gbc.pc(), 0xe376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe374), 0xcb);
        EXPECT(gbc.readMem(0xe375), 0x82);
        // CB 82 0243
        gbc.setState(0xb7b4, 0x1f8c, 0x5ef0, 0x191, 0x2ac4, 0x7d4d, 0x0, 0x0);
        gbc.writeMem(0xb7b4, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1f8c);
        EXPECT(gbc.pc(), 0xb7b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7b4), 0xcb);
        EXPECT(gbc.readMem(0xb7b5), 0x82);
        // CB 82 0244
        gbc.setState(0xbe54, 0x557f, 0xd3c0, 0x6114, 0x488b, 0x7a29, 0x0, 0x1);
        gbc.writeMem(0xbe54, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x557f);
        EXPECT(gbc.pc(), 0xbe56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe54), 0xcb);
        EXPECT(gbc.readMem(0xbe55), 0x82);
        // CB 82 0245
        gbc.setState(0x860d, 0x685a, 0xba0, 0x8e26, 0xc3cb, 0xdc6f, 0x1, 0x1);
        gbc.writeMem(0x860d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x685a);
        EXPECT(gbc.pc(), 0x860f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x860d), 0xcb);
        EXPECT(gbc.readMem(0x860e), 0x82);
        // CB 82 0247
        gbc.setState(0x887, 0x9b22, 0x7fb0, 0xa736, 0xacbb, 0xf75f, 0x1, 0x1);
        gbc.writeMem(0x887, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9b22);
        EXPECT(gbc.pc(), 0x889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0248
        gbc.setState(0xb772, 0x90be, 0xa5e0, 0x709f, 0xebaa, 0x1e77, 0x1, 0x0);
        gbc.writeMem(0xb772, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x90be);
        EXPECT(gbc.pc(), 0xb774);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb772), 0xcb);
        EXPECT(gbc.readMem(0xb773), 0x82);
        // CB 82 0249
        gbc.setState(0x42cd, 0xffcb, 0x5580, 0x7d94, 0x6719, 0xe553, 0x1, 0x0);
        gbc.writeMem(0x42cd, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xffcb);
        EXPECT(gbc.pc(), 0x42cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 024A
        gbc.setState(0xe3ae, 0x4c12, 0x44b0, 0x7c6, 0x996c, 0xa0e1, 0x1, 0x0);
        gbc.writeMem(0xe3ae, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4c12);
        EXPECT(gbc.pc(), 0xe3b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ae), 0xcb);
        EXPECT(gbc.readMem(0xe3af), 0x82);
        // CB 82 024B
        gbc.setState(0x42f6, 0xc10a, 0x6c70, 0x93f, 0xd74f, 0x7ec3, 0x1, 0x0);
        gbc.writeMem(0x42f6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc10a);
        EXPECT(gbc.pc(), 0x42f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 024C
        gbc.setState(0x1410, 0xbd7a, 0x4430, 0xfd6e, 0x849a, 0xd382, 0x1, 0x1);
        gbc.writeMem(0x1410, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xbd7a);
        EXPECT(gbc.pc(), 0x1412);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 024D
        gbc.setState(0x8182, 0x5691, 0x24a0, 0x68c6, 0x3920, 0x5030, 0x0, 0x0);
        gbc.writeMem(0x8182, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x5691);
        EXPECT(gbc.pc(), 0x8184);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8182), 0xcb);
        EXPECT(gbc.readMem(0x8183), 0x82);
        // CB 82 024E
        gbc.setState(0x8d8c, 0xc444, 0x8ba0, 0xc101, 0xd026, 0x20ae, 0x0, 0x0);
        gbc.writeMem(0x8d8c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc444);
        EXPECT(gbc.pc(), 0x8d8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d8c), 0xcb);
        EXPECT(gbc.readMem(0x8d8d), 0x82);
        // CB 82 024F
        gbc.setState(0x4d90, 0xe4b, 0xb210, 0x9069, 0x41c6, 0xd8f5, 0x1, 0x0);
        gbc.writeMem(0x4d90, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe4b);
        EXPECT(gbc.pc(), 0x4d92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0250
        gbc.setState(0x7ff, 0x3ff, 0x7c40, 0x9d68, 0x8714, 0x45d3, 0x1, 0x1);
        gbc.writeMem(0x7ff, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x3ff);
        EXPECT(gbc.pc(), 0x801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0251
        gbc.setState(0x52b7, 0xdfcc, 0x6050, 0xe864, 0x6bd1, 0xa6ca, 0x1, 0x1);
        gbc.writeMem(0x52b7, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xdfcc);
        EXPECT(gbc.pc(), 0x52b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0252
        gbc.setState(0x33e9, 0xd222, 0xe2c0, 0x4020, 0x2ac2, 0xdf6a, 0x1, 0x1);
        gbc.writeMem(0x33e9, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd222);
        EXPECT(gbc.pc(), 0x33eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0255
        gbc.setState(0x1e2c, 0x3add, 0x1020, 0x3a8d, 0xdeba, 0x9e37, 0x0, 0x0);
        gbc.writeMem(0x1e2c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x3add);
        EXPECT(gbc.pc(), 0x1e2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0256
        gbc.setState(0x4ca3, 0x6986, 0x1580, 0xa312, 0x6fbb, 0xd7bd, 0x1, 0x1);
        gbc.writeMem(0x4ca3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x6986);
        EXPECT(gbc.pc(), 0x4ca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0257
        gbc.setState(0x724d, 0xe13a, 0x5930, 0xe672, 0x8144, 0xbe92, 0x0, 0x0);
        gbc.writeMem(0x724d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe13a);
        EXPECT(gbc.pc(), 0x724f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0258
        gbc.setState(0xd039, 0xaf0a, 0x6040, 0x292d, 0x23be, 0xe95c, 0x0, 0x1);
        gbc.writeMem(0xd039, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xaf0a);
        EXPECT(gbc.pc(), 0xd03b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd039), 0xcb);
        EXPECT(gbc.readMem(0xd03a), 0x82);
        // CB 82 0259
        gbc.setState(0xba79, 0x1161, 0x5920, 0x753f, 0xa9c3, 0x3afe, 0x1, 0x1);
        gbc.writeMem(0xba79, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x1161);
        EXPECT(gbc.pc(), 0xba7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba79), 0xcb);
        EXPECT(gbc.readMem(0xba7a), 0x82);
        // CB 82 025A
        gbc.setState(0xe9b6, 0x2e4d, 0x70b0, 0x865b, 0x8dcb, 0xa63, 0x0, 0x0);
        gbc.writeMem(0xe9b6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2e4d);
        EXPECT(gbc.pc(), 0xe9b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9b6), 0xcb);
        EXPECT(gbc.readMem(0xe9b7), 0x82);
        // CB 82 025C
        gbc.setState(0x6f80, 0x1dc3, 0x8710, 0xdb53, 0x2473, 0x9422, 0x0, 0x1);
        gbc.writeMem(0x6f80, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1dc3);
        EXPECT(gbc.pc(), 0x6f82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 025D
        gbc.setState(0x4692, 0x2c38, 0xb20, 0x50d9, 0xaa28, 0xec68, 0x0, 0x1);
        gbc.writeMem(0x4692, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2c38);
        EXPECT(gbc.pc(), 0x4694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0260
        gbc.setState(0x10ee, 0x6b1, 0xcc20, 0xfcf5, 0x1617, 0x6db1, 0x1, 0x1);
        gbc.writeMem(0x10ee, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x6b1);
        EXPECT(gbc.pc(), 0x10f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0261
        gbc.setState(0x351a, 0xce95, 0xe1c0, 0xa7b7, 0x1f74, 0x534e, 0x1, 0x1);
        gbc.writeMem(0x351a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xce95);
        EXPECT(gbc.pc(), 0x351c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0262
        gbc.setState(0x37ab, 0x339a, 0x99e0, 0xe076, 0xe04d, 0xa265, 0x1, 0x1);
        gbc.writeMem(0x37ab, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x339a);
        EXPECT(gbc.pc(), 0x37ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0263
        gbc.setState(0x131b, 0x191d, 0x27a0, 0xed9b, 0x584, 0x4bf7, 0x1, 0x0);
        gbc.writeMem(0x131b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x191d);
        EXPECT(gbc.pc(), 0x131d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0264
        gbc.setState(0xeb8, 0x1241, 0xc50, 0x5902, 0x1f97, 0x2939, 0x1, 0x1);
        gbc.writeMem(0xeb8, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x1241);
        EXPECT(gbc.pc(), 0xeba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0265
        gbc.setState(0x2dab, 0xa05d, 0x5150, 0xd422, 0xc810, 0x328a, 0x1, 0x0);
        gbc.writeMem(0x2dab, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa05d);
        EXPECT(gbc.pc(), 0x2dad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0266
        gbc.setState(0xc064, 0xcb32, 0xe290, 0xe482, 0x5984, 0x2149, 0x0, 0x1);
        gbc.writeMem(0xc064, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xcb32);
        EXPECT(gbc.pc(), 0xc066);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc064), 0xcb);
        EXPECT(gbc.readMem(0xc065), 0x82);
        // CB 82 0267
        gbc.setState(0x23d1, 0x869b, 0xe900, 0x504f, 0xb389, 0x7eac, 0x0, 0x1);
        gbc.writeMem(0x23d1, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x869b);
        EXPECT(gbc.pc(), 0x23d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0268
        gbc.setState(0x6570, 0x5edf, 0xbaa0, 0x9f5, 0x1beb, 0x2280, 0x1, 0x1);
        gbc.writeMem(0x6570, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5edf);
        EXPECT(gbc.pc(), 0x6572);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0269
        gbc.setState(0x7236, 0x83e7, 0xe320, 0x326d, 0xad6e, 0x4fec, 0x1, 0x1);
        gbc.writeMem(0x7236, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x83e7);
        EXPECT(gbc.pc(), 0x7238);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 026B
        gbc.setState(0x3da7, 0x6104, 0x4420, 0x2a55, 0xa7ea, 0x7723, 0x0, 0x0);
        gbc.writeMem(0x3da7, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6104);
        EXPECT(gbc.pc(), 0x3da9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 026C
        gbc.setState(0x35f4, 0xfbc2, 0x580, 0x8c49, 0x3b88, 0xe19a, 0x0, 0x1);
        gbc.writeMem(0x35f4, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xfbc2);
        EXPECT(gbc.pc(), 0x35f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 026D
        gbc.setState(0xa1ca, 0x667f, 0xb210, 0x8599, 0x9df0, 0x3864, 0x1, 0x0);
        gbc.writeMem(0xa1ca, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x667f);
        EXPECT(gbc.pc(), 0xa1cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ca), 0xcb);
        EXPECT(gbc.readMem(0xa1cb), 0x82);
        // CB 82 026E
        gbc.setState(0x8833, 0x7603, 0x8870, 0xb7b8, 0xe70d, 0xc13b, 0x0, 0x1);
        gbc.writeMem(0x8833, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7603);
        EXPECT(gbc.pc(), 0x8835);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8833), 0xcb);
        EXPECT(gbc.readMem(0x8834), 0x82);
        // CB 82 026F
        gbc.setState(0x7eb9, 0xa738, 0x9c60, 0x726f, 0xaaa1, 0x130, 0x0, 0x0);
        gbc.writeMem(0x7eb9, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa738);
        EXPECT(gbc.pc(), 0x7ebb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0270
        gbc.setState(0x493b, 0xab48, 0xdb40, 0x4156, 0x3186, 0xe574, 0x1, 0x1);
        gbc.writeMem(0x493b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xab48);
        EXPECT(gbc.pc(), 0x493d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0271
        gbc.setState(0xdf2f, 0x4791, 0x7720, 0xe57f, 0xcbbc, 0xa511, 0x0, 0x0);
        gbc.writeMem(0xdf2f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4791);
        EXPECT(gbc.pc(), 0xdf31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf2f), 0xcb);
        EXPECT(gbc.readMem(0xdf30), 0x82);
        // CB 82 0272
        gbc.setState(0xd344, 0x283b, 0x7780, 0xa19c, 0x6a25, 0xe2b2, 0x0, 0x1);
        gbc.writeMem(0xd344, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x283b);
        EXPECT(gbc.pc(), 0xd346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd344), 0xcb);
        EXPECT(gbc.readMem(0xd345), 0x82);
        // CB 82 0273
        gbc.setState(0x6583, 0xd8dc, 0x8cd0, 0x5107, 0xead3, 0x593a, 0x0, 0x0);
        gbc.writeMem(0x6583, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd8dc);
        EXPECT(gbc.pc(), 0x6585);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0274
        gbc.setState(0xc2b7, 0x40e, 0x5790, 0x9bda, 0x25d8, 0x20d4, 0x1, 0x0);
        gbc.writeMem(0xc2b7, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x40e);
        EXPECT(gbc.pc(), 0xc2b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2b7), 0xcb);
        EXPECT(gbc.readMem(0xc2b8), 0x82);
        // CB 82 0275
        gbc.setState(0xe67f, 0x48fb, 0x7c60, 0x6812, 0x73f9, 0x3535, 0x0, 0x1);
        gbc.writeMem(0xe67f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x48fb);
        EXPECT(gbc.pc(), 0xe681);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe67f), 0xcb);
        EXPECT(gbc.readMem(0xe680), 0x82);
        // CB 82 0276
        gbc.setState(0x165c, 0x170a, 0xfae0, 0xbe9e, 0x835d, 0x9ddd, 0x0, 0x0);
        gbc.writeMem(0x165c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x170a);
        EXPECT(gbc.pc(), 0x165e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0277
        gbc.setState(0x5f60, 0x6976, 0xa2a0, 0x695a, 0x7618, 0xc396, 0x1, 0x1);
        gbc.writeMem(0x5f60, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x6976);
        EXPECT(gbc.pc(), 0x5f62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0278
        gbc.setState(0xc3d3, 0xdb70, 0x8b30, 0x34a1, 0x9e34, 0x2ce, 0x0, 0x1);
        gbc.writeMem(0xc3d3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xdb70);
        EXPECT(gbc.pc(), 0xc3d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3d3), 0xcb);
        EXPECT(gbc.readMem(0xc3d4), 0x82);
        // CB 82 0279
        gbc.setState(0xe4ad, 0x84c0, 0xaed0, 0x1643, 0x1747, 0x12ce, 0x1, 0x1);
        gbc.writeMem(0xe4ad, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x84c0);
        EXPECT(gbc.pc(), 0xe4af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4ad), 0xcb);
        EXPECT(gbc.readMem(0xe4ae), 0x82);
        // CB 82 027A
        gbc.setState(0xeec7, 0x2664, 0xf1f0, 0x55de, 0xf74f, 0x1e8c, 0x1, 0x0);
        gbc.writeMem(0xeec7, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2664);
        EXPECT(gbc.pc(), 0xeec9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeec7), 0xcb);
        EXPECT(gbc.readMem(0xeec8), 0x82);
        // CB 82 027B
        gbc.setState(0x8d4a, 0xd65, 0xa750, 0xdbc9, 0x94d6, 0x2eb3, 0x0, 0x1);
        gbc.writeMem(0x8d4a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xd65);
        EXPECT(gbc.pc(), 0x8d4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d4a), 0xcb);
        EXPECT(gbc.readMem(0x8d4b), 0x82);
        // CB 82 027C
        gbc.setState(0x635e, 0x39e6, 0x3f20, 0x8c82, 0x65ae, 0xe979, 0x0, 0x1);
        gbc.writeMem(0x635e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x39e6);
        EXPECT(gbc.pc(), 0x6360);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 027D
        gbc.setState(0xedd0, 0xdded, 0x4b20, 0x944a, 0x241a, 0xd034, 0x1, 0x1);
        gbc.writeMem(0xedd0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xdded);
        EXPECT(gbc.pc(), 0xedd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd0), 0xcb);
        EXPECT(gbc.readMem(0xedd1), 0x82);
        // CB 82 027E
        gbc.setState(0xd11b, 0x7d2d, 0x99c0, 0xaca4, 0xb656, 0xee2, 0x1, 0x1);
        gbc.writeMem(0xd11b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7d2d);
        EXPECT(gbc.pc(), 0xd11d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd11b), 0xcb);
        EXPECT(gbc.readMem(0xd11c), 0x82);
        // CB 82 027F
        gbc.setState(0xe568, 0xcd77, 0x7cb0, 0xc144, 0x6720, 0x8cc0, 0x0, 0x0);
        gbc.writeMem(0xe568, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xcd77);
        EXPECT(gbc.pc(), 0xe56a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe568), 0xcb);
        EXPECT(gbc.readMem(0xe569), 0x82);
        // CB 82 0280
        gbc.setState(0x250c, 0x2f0f, 0x3d80, 0x14b, 0x29ff, 0x21a, 0x1, 0x0);
        gbc.writeMem(0x250c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2f0f);
        EXPECT(gbc.pc(), 0x250e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0281
        gbc.setState(0xe5dc, 0x835f, 0x5510, 0x427c, 0xffbd, 0xea43, 0x1, 0x0);
        gbc.writeMem(0xe5dc, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x835f);
        EXPECT(gbc.pc(), 0xe5de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5dc), 0xcb);
        EXPECT(gbc.readMem(0xe5dd), 0x82);
        // CB 82 0282
        gbc.setState(0x1c1b, 0xdfca, 0xf6b0, 0x4b59, 0x72e9, 0x3dae, 0x0, 0x1);
        gbc.writeMem(0x1c1b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xdfca);
        EXPECT(gbc.pc(), 0x1c1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0283
        gbc.setState(0x35d6, 0x7d02, 0x13d0, 0x66d, 0x872, 0xb54f, 0x1, 0x1);
        gbc.writeMem(0x35d6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7d02);
        EXPECT(gbc.pc(), 0x35d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0284
        gbc.setState(0x8b40, 0xe808, 0x37d0, 0xd71e, 0x1f89, 0xeff8, 0x0, 0x0);
        gbc.writeMem(0x8b40, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe808);
        EXPECT(gbc.pc(), 0x8b42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b40), 0xcb);
        EXPECT(gbc.readMem(0x8b41), 0x82);
        // CB 82 0285
        gbc.setState(0xb0b0, 0xef9f, 0x2770, 0x3336, 0x4429, 0xf1b1, 0x0, 0x0);
        gbc.writeMem(0xb0b0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xef9f);
        EXPECT(gbc.pc(), 0xb0b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0b0), 0xcb);
        EXPECT(gbc.readMem(0xb0b1), 0x82);
        // CB 82 0286
        gbc.setState(0xbb0e, 0xcbe7, 0x3f70, 0xddf, 0xeaa5, 0xf3d5, 0x0, 0x1);
        gbc.writeMem(0xbb0e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xcbe7);
        EXPECT(gbc.pc(), 0xbb10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb0e), 0xcb);
        EXPECT(gbc.readMem(0xbb0f), 0x82);
        // CB 82 0288
        gbc.setState(0xd281, 0x7958, 0x4790, 0xa4ae, 0xc415, 0x385d, 0x1, 0x1);
        gbc.writeMem(0xd281, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7958);
        EXPECT(gbc.pc(), 0xd283);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd281), 0xcb);
        EXPECT(gbc.readMem(0xd282), 0x82);
        // CB 82 0289
        gbc.setState(0xe795, 0xe0ce, 0x470, 0xe0a8, 0xddd5, 0x9dbe, 0x1, 0x1);
        gbc.writeMem(0xe795, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe0ce);
        EXPECT(gbc.pc(), 0xe797);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe795), 0xcb);
        EXPECT(gbc.readMem(0xe796), 0x82);
        // CB 82 028A
        gbc.setState(0x529c, 0xed42, 0x7c00, 0x665b, 0x9f46, 0x43f3, 0x0, 0x0);
        gbc.writeMem(0x529c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xed42);
        EXPECT(gbc.pc(), 0x529e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 028B
        gbc.setState(0x907a, 0x28bf, 0x4550, 0x5660, 0xd520, 0x16cc, 0x1, 0x1);
        gbc.writeMem(0x907a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x28bf);
        EXPECT(gbc.pc(), 0x907c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x907a), 0xcb);
        EXPECT(gbc.readMem(0x907b), 0x82);
        // CB 82 028C
        gbc.setState(0x80a, 0xb2b7, 0x5090, 0x3f33, 0x2147, 0x98bc, 0x1, 0x0);
        gbc.writeMem(0x80a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb2b7);
        EXPECT(gbc.pc(), 0x80c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 028D
        gbc.setState(0xccd6, 0x4983, 0x4ac0, 0x5cc1, 0xe8ea, 0x3e17, 0x1, 0x0);
        gbc.writeMem(0xccd6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x4983);
        EXPECT(gbc.pc(), 0xccd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd6), 0xcb);
        EXPECT(gbc.readMem(0xccd7), 0x82);
        // CB 82 028E
        gbc.setState(0x4121, 0x5d31, 0xac0, 0x83ef, 0xb8dc, 0x37ff, 0x0, 0x1);
        gbc.writeMem(0x4121, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5d31);
        EXPECT(gbc.pc(), 0x4123);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 028F
        gbc.setState(0x7715, 0x310d, 0xdd50, 0xcbaa, 0x12d6, 0xfb1b, 0x0, 0x0);
        gbc.writeMem(0x7715, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x310d);
        EXPECT(gbc.pc(), 0x7717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0290
        gbc.setState(0x297e, 0x6b63, 0xbed0, 0xff00, 0x7db3, 0xe46e, 0x1, 0x1);
        gbc.writeMem(0x297e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x6b63);
        EXPECT(gbc.pc(), 0x2980);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0291
        gbc.setState(0x5121, 0x42e2, 0x9ca0, 0xfc95, 0xc9ea, 0x91b9, 0x0, 0x1);
        gbc.writeMem(0x5121, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x42e2);
        EXPECT(gbc.pc(), 0x5123);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0292
        gbc.setState(0xb20f, 0xea78, 0x1d20, 0x5e95, 0x8d33, 0xd48f, 0x0, 0x1);
        gbc.writeMem(0xb20f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xea78);
        EXPECT(gbc.pc(), 0xb211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb20f), 0xcb);
        EXPECT(gbc.readMem(0xb210), 0x82);
        // CB 82 0293
        gbc.setState(0x60b7, 0x1b16, 0xd6f0, 0xb995, 0x5515, 0xa43a, 0x0, 0x0);
        gbc.writeMem(0x60b7, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x1b16);
        EXPECT(gbc.pc(), 0x60b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0294
        gbc.setState(0x2310, 0x37dc, 0xce30, 0xf812, 0xe4bb, 0xfe8b, 0x1, 0x1);
        gbc.writeMem(0x2310, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x37dc);
        EXPECT(gbc.pc(), 0x2312);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0295
        gbc.setState(0x1e3f, 0x4ca3, 0x52a0, 0x13a4, 0xf068, 0x6bb4, 0x1, 0x1);
        gbc.writeMem(0x1e3f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4ca3);
        EXPECT(gbc.pc(), 0x1e41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0296
        gbc.setState(0x8230, 0x4140, 0xc780, 0x5f7b, 0x50b4, 0xf1ae, 0x1, 0x0);
        gbc.writeMem(0x8230, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x4140);
        EXPECT(gbc.pc(), 0x8232);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8230), 0xcb);
        EXPECT(gbc.readMem(0x8231), 0x82);
        // CB 82 0297
        gbc.setState(0x4e2d, 0xd7de, 0xdcd0, 0x63af, 0x190, 0x728c, 0x1, 0x1);
        gbc.writeMem(0x4e2d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd7de);
        EXPECT(gbc.pc(), 0x4e2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0298
        gbc.setState(0x1690, 0x1a7e, 0xd6e0, 0x6757, 0x98f2, 0xa316, 0x0, 0x1);
        gbc.writeMem(0x1690, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1a7e);
        EXPECT(gbc.pc(), 0x1692);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0299
        gbc.setState(0x96fd, 0x3536, 0xfc70, 0xc75d, 0x4272, 0x2a4, 0x1, 0x1);
        gbc.writeMem(0x96fd, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3536);
        EXPECT(gbc.pc(), 0x96ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96fd), 0xcb);
        EXPECT(gbc.readMem(0x96fe), 0x82);
        // CB 82 029A
        gbc.setState(0x1daf, 0x6d15, 0xd710, 0x8544, 0x81ab, 0xb801, 0x1, 0x1);
        gbc.writeMem(0x1daf, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6d15);
        EXPECT(gbc.pc(), 0x1db1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 029B
        gbc.setState(0x422f, 0x3ed0, 0x2690, 0xef1b, 0xb96d, 0x4372, 0x0, 0x0);
        gbc.writeMem(0x422f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3ed0);
        EXPECT(gbc.pc(), 0x4231);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 029C
        gbc.setState(0xe3f8, 0xb064, 0x7f80, 0xdeb8, 0x179d, 0x440c, 0x0, 0x0);
        gbc.writeMem(0xe3f8, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb064);
        EXPECT(gbc.pc(), 0xe3fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3f8), 0xcb);
        EXPECT(gbc.readMem(0xe3f9), 0x82);
        // CB 82 029D
        gbc.setState(0x1cbd, 0x5219, 0x3330, 0x4ccd, 0xdff8, 0x7b35, 0x0, 0x1);
        gbc.writeMem(0x1cbd, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5219);
        EXPECT(gbc.pc(), 0x1cbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 029E
        gbc.setState(0xbbf1, 0xf2af, 0xb2c0, 0x34d4, 0x7060, 0x87e7, 0x1, 0x0);
        gbc.writeMem(0xbbf1, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf2af);
        EXPECT(gbc.pc(), 0xbbf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbf1), 0xcb);
        EXPECT(gbc.readMem(0xbbf2), 0x82);
        // CB 82 029F
        gbc.setState(0x8372, 0x3c31, 0x3f0, 0xeac5, 0x4543, 0x3aec, 0x1, 0x0);
        gbc.writeMem(0x8372, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x3c31);
        EXPECT(gbc.pc(), 0x8374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8372), 0xcb);
        EXPECT(gbc.readMem(0x8373), 0x82);
        // CB 82 02A1
        gbc.setState(0x72af, 0xb150, 0xeb70, 0xffd1, 0xc8e9, 0x74b1, 0x1, 0x1);
        gbc.writeMem(0x72af, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb150);
        EXPECT(gbc.pc(), 0x72b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 02A4
        gbc.setState(0xc90a, 0x85a3, 0x64a0, 0xa651, 0x1e2d, 0x4ed4, 0x1, 0x1);
        gbc.writeMem(0xc90a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x85a3);
        EXPECT(gbc.pc(), 0xc90c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc90a), 0xcb);
        EXPECT(gbc.readMem(0xc90b), 0x82);
        // CB 82 02A5
        gbc.setState(0x99e0, 0xd324, 0x3a20, 0xaaf9, 0x127f, 0x39a1, 0x0, 0x1);
        gbc.writeMem(0x99e0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd324);
        EXPECT(gbc.pc(), 0x99e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99e0), 0xcb);
        EXPECT(gbc.readMem(0x99e1), 0x82);
        // CB 82 02A6
        gbc.setState(0xed52, 0x26d4, 0xfc60, 0x649c, 0x71a1, 0xb2f7, 0x0, 0x1);
        gbc.writeMem(0xed52, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x26d4);
        EXPECT(gbc.pc(), 0xed54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed52), 0xcb);
        EXPECT(gbc.readMem(0xed53), 0x82);
        // CB 82 02A7
        gbc.setState(0x1618, 0xc2b, 0x610, 0x7c25, 0x4448, 0xe04d, 0x1, 0x0);
        gbc.writeMem(0x1618, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc2b);
        EXPECT(gbc.pc(), 0x161a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 02A8
        gbc.setState(0x85ba, 0xc6a4, 0x1db0, 0x6536, 0x6a85, 0xef76, 0x1, 0x1);
        gbc.writeMem(0x85ba, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc6a4);
        EXPECT(gbc.pc(), 0x85bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85ba), 0xcb);
        EXPECT(gbc.readMem(0x85bb), 0x82);
        // CB 82 02A9
        gbc.setState(0xe7f, 0x9845, 0x960, 0x4766, 0x56f0, 0xf2fe, 0x1, 0x1);
        gbc.writeMem(0xe7f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9845);
        EXPECT(gbc.pc(), 0xe81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02AA
        gbc.setState(0xcdc, 0xd664, 0xdb20, 0x9944, 0xf821, 0x790f, 0x1, 0x0);
        gbc.writeMem(0xcdc, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd664);
        EXPECT(gbc.pc(), 0xcde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02AB
        gbc.setState(0x9463, 0x20c, 0xde50, 0xfedf, 0xa8f2, 0x947d, 0x1, 0x1);
        gbc.writeMem(0x9463, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x20c);
        EXPECT(gbc.pc(), 0x9465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9463), 0xcb);
        EXPECT(gbc.readMem(0x9464), 0x82);
        // CB 82 02AC
        gbc.setState(0x6e68, 0xd73, 0x9e0, 0xf099, 0x5888, 0x2dce, 0x1, 0x0);
        gbc.writeMem(0x6e68, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xd73);
        EXPECT(gbc.pc(), 0x6e6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02AD
        gbc.setState(0x8f1c, 0x29be, 0x2ed0, 0xe69d, 0x1ab3, 0x42a9, 0x0, 0x1);
        gbc.writeMem(0x8f1c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x29be);
        EXPECT(gbc.pc(), 0x8f1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f1c), 0xcb);
        EXPECT(gbc.readMem(0x8f1d), 0x82);
        // CB 82 02AE
        gbc.setState(0xcf6f, 0xbd4f, 0xf900, 0xaa25, 0x6f9a, 0x9816, 0x0, 0x1);
        gbc.writeMem(0xcf6f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xbd4f);
        EXPECT(gbc.pc(), 0xcf71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf6f), 0xcb);
        EXPECT(gbc.readMem(0xcf70), 0x82);
        // CB 82 02B0
        gbc.setState(0xef4c, 0x23ca, 0xb050, 0x1b1c, 0xba7e, 0x6823, 0x0, 0x0);
        gbc.writeMem(0xef4c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x23ca);
        EXPECT(gbc.pc(), 0xef4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef4c), 0xcb);
        EXPECT(gbc.readMem(0xef4d), 0x82);
        // CB 82 02B1
        gbc.setState(0x9b4e, 0x29de, 0x720, 0xbbdb, 0xefa4, 0xe1c8, 0x1, 0x1);
        gbc.writeMem(0x9b4e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x29de);
        EXPECT(gbc.pc(), 0x9b50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b4e), 0xcb);
        EXPECT(gbc.readMem(0x9b4f), 0x82);
        // CB 82 02B2
        gbc.setState(0x3409, 0x4274, 0x6c70, 0x76e7, 0x7c3b, 0x4dc1, 0x1, 0x1);
        gbc.writeMem(0x3409, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4274);
        EXPECT(gbc.pc(), 0x340b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 02B3
        gbc.setState(0x5377, 0x6bb2, 0x7a60, 0xfda9, 0xabcf, 0x4ede, 0x0, 0x0);
        gbc.writeMem(0x5377, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x6bb2);
        EXPECT(gbc.pc(), 0x5379);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02B4
        gbc.setState(0x3da5, 0xbbee, 0x94c0, 0x2549, 0x99fa, 0xc161, 0x0, 0x1);
        gbc.writeMem(0x3da5, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xbbee);
        EXPECT(gbc.pc(), 0x3da7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02B5
        gbc.setState(0xab2e, 0xfed7, 0xbe00, 0x7a4e, 0x42ad, 0xe164, 0x0, 0x0);
        gbc.writeMem(0xab2e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xfed7);
        EXPECT(gbc.pc(), 0xab30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab2e), 0xcb);
        EXPECT(gbc.readMem(0xab2f), 0x82);
        // CB 82 02B6
        gbc.setState(0xecb0, 0xf23e, 0x1340, 0xf967, 0xcac2, 0xfb2e, 0x1, 0x1);
        gbc.writeMem(0xecb0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf23e);
        EXPECT(gbc.pc(), 0xecb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecb0), 0xcb);
        EXPECT(gbc.readMem(0xecb1), 0x82);
        // CB 82 02B7
        gbc.setState(0x44ef, 0x37ca, 0x2290, 0xf1c3, 0xc65d, 0xfc4, 0x0, 0x1);
        gbc.writeMem(0x44ef, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x37ca);
        EXPECT(gbc.pc(), 0x44f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 02B8
        gbc.setState(0x8342, 0x20c0, 0x9c60, 0x191e, 0xb4b3, 0x8f58, 0x1, 0x1);
        gbc.writeMem(0x8342, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x20c0);
        EXPECT(gbc.pc(), 0x8344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8342), 0xcb);
        EXPECT(gbc.readMem(0x8343), 0x82);
        // CB 82 02B9
        gbc.setState(0x7fd9, 0xffc1, 0x74a0, 0x3e88, 0xbb48, 0x6ece, 0x0, 0x0);
        gbc.writeMem(0x7fd9, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xffc1);
        EXPECT(gbc.pc(), 0x7fdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02BA
        gbc.setState(0x784c, 0x75d1, 0x4c00, 0x4afc, 0x982e, 0x127a, 0x1, 0x1);
        gbc.writeMem(0x784c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x75d1);
        EXPECT(gbc.pc(), 0x784e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02BB
        gbc.setState(0x5238, 0x5e86, 0x6830, 0x9821, 0x4dcc, 0xfcb5, 0x0, 0x0);
        gbc.writeMem(0x5238, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5e86);
        EXPECT(gbc.pc(), 0x523a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 02BC
        gbc.setState(0xc3f0, 0xf04d, 0x9a20, 0x920f, 0x469b, 0x9961, 0x1, 0x1);
        gbc.writeMem(0xc3f0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf04d);
        EXPECT(gbc.pc(), 0xc3f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3f0), 0xcb);
        EXPECT(gbc.readMem(0xc3f1), 0x82);
        // CB 82 02BD
        gbc.setState(0x7216, 0x54c3, 0x9930, 0x5e1c, 0x1ec4, 0x82cf, 0x1, 0x1);
        gbc.writeMem(0x7216, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x54c3);
        EXPECT(gbc.pc(), 0x7218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 02BE
        gbc.setState(0x704d, 0x5979, 0x62b0, 0x6904, 0x4896, 0xddbe, 0x0, 0x1);
        gbc.writeMem(0x704d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x5979);
        EXPECT(gbc.pc(), 0x704f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 02C0
        gbc.setState(0xa81f, 0x669d, 0xa290, 0xcf9a, 0x474a, 0xe9a6, 0x1, 0x0);
        gbc.writeMem(0xa81f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x669d);
        EXPECT(gbc.pc(), 0xa821);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa81f), 0xcb);
        EXPECT(gbc.readMem(0xa820), 0x82);
        // CB 82 02C1
        gbc.setState(0x69bc, 0xb38f, 0x6240, 0x9d03, 0xf7db, 0x4c7f, 0x1, 0x1);
        gbc.writeMem(0x69bc, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb38f);
        EXPECT(gbc.pc(), 0x69be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02C2
        gbc.setState(0xa8c2, 0x155f, 0xf1a0, 0x527a, 0xa922, 0xefbd, 0x0, 0x1);
        gbc.writeMem(0xa8c2, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x155f);
        EXPECT(gbc.pc(), 0xa8c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8c2), 0xcb);
        EXPECT(gbc.readMem(0xa8c3), 0x82);
        // CB 82 02C3
        gbc.setState(0xd946, 0x84c9, 0xaf30, 0x4984, 0xe022, 0xa5ab, 0x1, 0x1);
        gbc.writeMem(0xd946, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x84c9);
        EXPECT(gbc.pc(), 0xd948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd946), 0xcb);
        EXPECT(gbc.readMem(0xd947), 0x82);
        // CB 82 02C4
        gbc.setState(0x71ac, 0xa236, 0xfd50, 0xcfaa, 0x9af6, 0x3acd, 0x0, 0x1);
        gbc.writeMem(0x71ac, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa236);
        EXPECT(gbc.pc(), 0x71ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 02C5
        gbc.setState(0x1892, 0xa07f, 0x43f0, 0xfb24, 0xc267, 0x35b, 0x0, 0x0);
        gbc.writeMem(0x1892, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xa07f);
        EXPECT(gbc.pc(), 0x1894);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 02C6
        gbc.setState(0xcf64, 0xfe43, 0x44a0, 0x2116, 0xdd64, 0xc2bb, 0x0, 0x0);
        gbc.writeMem(0xcf64, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xfe43);
        EXPECT(gbc.pc(), 0xcf66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf64), 0xcb);
        EXPECT(gbc.readMem(0xcf65), 0x82);
        // CB 82 02C7
        gbc.setState(0x55bf, 0x804a, 0x4cc0, 0x5587, 0xbd8e, 0x14b2, 0x1, 0x0);
        gbc.writeMem(0x55bf, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x804a);
        EXPECT(gbc.pc(), 0x55c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02C8
        gbc.setState(0x95fa, 0x96e0, 0xebc0, 0x427c, 0xbd2c, 0x7833, 0x0, 0x1);
        gbc.writeMem(0x95fa, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x96e0);
        EXPECT(gbc.pc(), 0x95fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95fa), 0xcb);
        EXPECT(gbc.readMem(0x95fb), 0x82);
        // CB 82 02C9
        gbc.setState(0xcdff, 0x5ecd, 0x13d0, 0x2c9c, 0xda3f, 0x92ab, 0x0, 0x1);
        gbc.writeMem(0xcdff, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x5ecd);
        EXPECT(gbc.pc(), 0xce01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdff), 0xcb);
        EXPECT(gbc.readMem(0xce00), 0x82);
        // CB 82 02CA
        gbc.setState(0x4ead, 0xb63f, 0xbd30, 0x199a, 0xf28e, 0x8e9e, 0x1, 0x0);
        gbc.writeMem(0x4ead, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb63f);
        EXPECT(gbc.pc(), 0x4eaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 02CB
        gbc.setState(0x8de8, 0xa493, 0x8ff0, 0x470d, 0x3a37, 0xebcf, 0x1, 0x1);
        gbc.writeMem(0x8de8, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa493);
        EXPECT(gbc.pc(), 0x8dea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8de8), 0xcb);
        EXPECT(gbc.readMem(0x8de9), 0x82);
        // CB 82 02CC
        gbc.setState(0xb91a, 0x860f, 0xab80, 0x92d1, 0xa595, 0xe478, 0x0, 0x0);
        gbc.writeMem(0xb91a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x860f);
        EXPECT(gbc.pc(), 0xb91c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb91a), 0xcb);
        EXPECT(gbc.readMem(0xb91b), 0x82);
        // CB 82 02CE
        gbc.setState(0xa5f9, 0xba21, 0xa600, 0xc9ad, 0xfdf, 0x2d01, 0x1, 0x1);
        gbc.writeMem(0xa5f9, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xba21);
        EXPECT(gbc.pc(), 0xa5fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5f9), 0xcb);
        EXPECT(gbc.readMem(0xa5fa), 0x82);
        // CB 82 02CF
        gbc.setState(0xbf2c, 0x6a48, 0x1130, 0xf34d, 0x919e, 0xa81b, 0x1, 0x0);
        gbc.writeMem(0xbf2c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6a48);
        EXPECT(gbc.pc(), 0xbf2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf2c), 0xcb);
        EXPECT(gbc.readMem(0xbf2d), 0x82);
        // CB 82 02D0
        gbc.setState(0x7ae0, 0xced, 0xc40, 0xbf2f, 0x4da7, 0x2a64, 0x0, 0x0);
        gbc.writeMem(0x7ae0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xced);
        EXPECT(gbc.pc(), 0x7ae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02D1
        gbc.setState(0xdf, 0x883, 0x1e90, 0xe106, 0x922d, 0xfba, 0x1, 0x0);
        gbc.writeMem(0xdf, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x883);
        EXPECT(gbc.pc(), 0xe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 02D2
        gbc.setState(0x4af6, 0x3107, 0xff90, 0x9cb2, 0xa83c, 0x9d69, 0x1, 0x0);
        gbc.writeMem(0x4af6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3107);
        EXPECT(gbc.pc(), 0x4af8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 02D3
        gbc.setState(0xca3e, 0x40be, 0xd530, 0xcec1, 0x49c9, 0xadc9, 0x1, 0x1);
        gbc.writeMem(0xca3e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x40be);
        EXPECT(gbc.pc(), 0xca40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca3e), 0xcb);
        EXPECT(gbc.readMem(0xca3f), 0x82);
        // CB 82 02D4
        gbc.setState(0x9407, 0xc931, 0x2780, 0x1764, 0xa825, 0x60b8, 0x1, 0x1);
        gbc.writeMem(0x9407, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc931);
        EXPECT(gbc.pc(), 0x9409);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9407), 0xcb);
        EXPECT(gbc.readMem(0x9408), 0x82);
        // CB 82 02D5
        gbc.setState(0x85d9, 0xdd9, 0x3c80, 0xccc6, 0x13ab, 0x4e8a, 0x0, 0x1);
        gbc.writeMem(0x85d9, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xdd9);
        EXPECT(gbc.pc(), 0x85db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85d9), 0xcb);
        EXPECT(gbc.readMem(0x85da), 0x82);
        // CB 82 02D6
        gbc.setState(0x5897, 0x8b76, 0x2d70, 0xd6ca, 0xccba, 0x1a64, 0x1, 0x0);
        gbc.writeMem(0x5897, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8b76);
        EXPECT(gbc.pc(), 0x5899);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 02D7
        gbc.setState(0x3b98, 0x1b08, 0x3640, 0x31c7, 0xb996, 0xd3c9, 0x1, 0x1);
        gbc.writeMem(0x3b98, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1b08);
        EXPECT(gbc.pc(), 0x3b9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02D8
        gbc.setState(0x2bc2, 0x302f, 0x2950, 0x9866, 0xefde, 0x33e, 0x0, 0x0);
        gbc.writeMem(0x2bc2, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x302f);
        EXPECT(gbc.pc(), 0x2bc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 02D9
        gbc.setState(0x31df, 0x4f0, 0x7b40, 0x781d, 0xdefe, 0xdc94, 0x0, 0x1);
        gbc.writeMem(0x31df, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4f0);
        EXPECT(gbc.pc(), 0x31e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02DC
        gbc.setState(0x7f72, 0x5abf, 0x1410, 0x388c, 0x1b89, 0x8f04, 0x1, 0x1);
        gbc.writeMem(0x7f72, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5abf);
        EXPECT(gbc.pc(), 0x7f74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 02DD
        gbc.setState(0x6fc9, 0xff80, 0xe5e0, 0xf5cd, 0x4735, 0x3a79, 0x1, 0x1);
        gbc.writeMem(0x6fc9, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xff80);
        EXPECT(gbc.pc(), 0x6fcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02DE
        gbc.setState(0x766f, 0x8bd5, 0xd090, 0x53bf, 0xbf92, 0xeaf1, 0x1, 0x1);
        gbc.writeMem(0x766f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x8bd5);
        EXPECT(gbc.pc(), 0x7671);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 02DF
        gbc.setState(0xcecf, 0x897b, 0x5e70, 0xf87f, 0x2284, 0xf017, 0x1, 0x1);
        gbc.writeMem(0xcecf, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x897b);
        EXPECT(gbc.pc(), 0xced1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcecf), 0xcb);
        EXPECT(gbc.readMem(0xced0), 0x82);
        // CB 82 02E1
        gbc.setState(0x2a8d, 0x3ccd, 0x61c0, 0x3683, 0x4299, 0xa6a1, 0x0, 0x1);
        gbc.writeMem(0x2a8d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3ccd);
        EXPECT(gbc.pc(), 0x2a8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02E3
        gbc.setState(0x527f, 0x3349, 0xd580, 0x6212, 0xc6c2, 0x5859, 0x0, 0x0);
        gbc.writeMem(0x527f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x3349);
        EXPECT(gbc.pc(), 0x5281);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02E4
        gbc.setState(0x1167, 0x5000, 0x3580, 0xb2b4, 0xf18b, 0x9bd7, 0x1, 0x0);
        gbc.writeMem(0x1167, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x5000);
        EXPECT(gbc.pc(), 0x1169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02E5
        gbc.setState(0x6d09, 0x3f1a, 0x4ca0, 0xc641, 0x64b3, 0xdea6, 0x1, 0x1);
        gbc.writeMem(0x6d09, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3f1a);
        EXPECT(gbc.pc(), 0x6d0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02E6
        gbc.setState(0x9d23, 0xca79, 0xa2e0, 0x5277, 0xd01, 0x610d, 0x0, 0x0);
        gbc.writeMem(0x9d23, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xca79);
        EXPECT(gbc.pc(), 0x9d25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d23), 0xcb);
        EXPECT(gbc.readMem(0x9d24), 0x82);
        // CB 82 02E7
        gbc.setState(0xe946, 0x92ef, 0x2b00, 0x1db9, 0xae55, 0x8184, 0x1, 0x0);
        gbc.writeMem(0xe946, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x92ef);
        EXPECT(gbc.pc(), 0xe948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe946), 0xcb);
        EXPECT(gbc.readMem(0xe947), 0x82);
        // CB 82 02E8
        gbc.setState(0x2186, 0x6323, 0xa220, 0xb1c1, 0xb10c, 0x16f0, 0x1, 0x1);
        gbc.writeMem(0x2186, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6323);
        EXPECT(gbc.pc(), 0x2188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02E9
        gbc.setState(0xca1e, 0x64b4, 0x7b90, 0xc281, 0x8186, 0x8f15, 0x0, 0x1);
        gbc.writeMem(0xca1e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x64b4);
        EXPECT(gbc.pc(), 0xca20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca1e), 0xcb);
        EXPECT(gbc.readMem(0xca1f), 0x82);
        // CB 82 02EA
        gbc.setState(0x185f, 0xc2a6, 0xf380, 0xe862, 0x77c0, 0x8bae, 0x0, 0x1);
        gbc.writeMem(0x185f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc2a6);
        EXPECT(gbc.pc(), 0x1861);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02EB
        gbc.setState(0xdcc8, 0xe07b, 0xbcb0, 0xaad1, 0x478c, 0xac79, 0x1, 0x1);
        gbc.writeMem(0xdcc8, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xe07b);
        EXPECT(gbc.pc(), 0xdcca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcc8), 0xcb);
        EXPECT(gbc.readMem(0xdcc9), 0x82);
        // CB 82 02EC
        gbc.setState(0x17bf, 0xdb5a, 0x1240, 0xcbc5, 0xaad7, 0xfcc, 0x1, 0x0);
        gbc.writeMem(0x17bf, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xdb5a);
        EXPECT(gbc.pc(), 0x17c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02ED
        gbc.setState(0x8f53, 0xe12c, 0x7bd0, 0x93a5, 0xe949, 0x2588, 0x0, 0x1);
        gbc.writeMem(0x8f53, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe12c);
        EXPECT(gbc.pc(), 0x8f55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f53), 0xcb);
        EXPECT(gbc.readMem(0x8f54), 0x82);
        // CB 82 02EF
        gbc.setState(0xecd7, 0x302e, 0x8bc0, 0xb879, 0x78d9, 0x5551, 0x1, 0x1);
        gbc.writeMem(0xecd7, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x302e);
        EXPECT(gbc.pc(), 0xecd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecd7), 0xcb);
        EXPECT(gbc.readMem(0xecd8), 0x82);
        // CB 82 02F0
        gbc.setState(0xac0d, 0x147b, 0x210, 0xa9b9, 0xbf70, 0x90eb, 0x1, 0x0);
        gbc.writeMem(0xac0d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x147b);
        EXPECT(gbc.pc(), 0xac0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac0d), 0xcb);
        EXPECT(gbc.readMem(0xac0e), 0x82);
        // CB 82 02F1
        gbc.setState(0x7471, 0x4177, 0xdc10, 0x6ef, 0xe4fa, 0x2063, 0x1, 0x1);
        gbc.writeMem(0x7471, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4177);
        EXPECT(gbc.pc(), 0x7473);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 02F2
        gbc.setState(0x5c9e, 0xe046, 0xb940, 0x93a2, 0xa1c4, 0x5fe2, 0x0, 0x1);
        gbc.writeMem(0x5c9e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe046);
        EXPECT(gbc.pc(), 0x5ca0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02F3
        gbc.setState(0x5d6e, 0x8353, 0xed90, 0x1600, 0xb3b1, 0x3b0e, 0x0, 0x1);
        gbc.writeMem(0x5d6e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8353);
        EXPECT(gbc.pc(), 0x5d70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 02F4
        gbc.setState(0xb492, 0xae0a, 0x7fe0, 0x1231, 0xa65, 0x6cdb, 0x0, 0x0);
        gbc.writeMem(0xb492, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xae0a);
        EXPECT(gbc.pc(), 0xb494);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb492), 0xcb);
        EXPECT(gbc.readMem(0xb493), 0x82);
        // CB 82 02F5
        gbc.setState(0x2f96, 0x6c7d, 0xcfe0, 0xe87c, 0x2300, 0x95e4, 0x0, 0x0);
        gbc.writeMem(0x2f96, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6c7d);
        EXPECT(gbc.pc(), 0x2f98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02F6
        gbc.setState(0x8707, 0xae12, 0x7540, 0x1dcf, 0x5ce4, 0x6410, 0x0, 0x0);
        gbc.writeMem(0x8707, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xae12);
        EXPECT(gbc.pc(), 0x8709);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8707), 0xcb);
        EXPECT(gbc.readMem(0x8708), 0x82);
        // CB 82 02F7
        gbc.setState(0x9490, 0x693c, 0xb1f0, 0xfda0, 0x35f5, 0x2e46, 0x1, 0x0);
        gbc.writeMem(0x9490, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x693c);
        EXPECT(gbc.pc(), 0x9492);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9490), 0xcb);
        EXPECT(gbc.readMem(0x9491), 0x82);
        // CB 82 02F8
        gbc.setState(0xb733, 0xb26e, 0x13b0, 0x526f, 0xf612, 0x1b84, 0x0, 0x0);
        gbc.writeMem(0xb733, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb26e);
        EXPECT(gbc.pc(), 0xb735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb733), 0xcb);
        EXPECT(gbc.readMem(0xb734), 0x82);
        // CB 82 02F9
        gbc.setState(0x4b72, 0xd772, 0xe880, 0xdbb2, 0xd826, 0x958a, 0x0, 0x1);
        gbc.writeMem(0x4b72, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xd772);
        EXPECT(gbc.pc(), 0x4b74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02FA
        gbc.setState(0x8df5, 0x3602, 0xfd0, 0xed70, 0xe85f, 0x4827, 0x0, 0x1);
        gbc.writeMem(0x8df5, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3602);
        EXPECT(gbc.pc(), 0x8df7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8df5), 0xcb);
        EXPECT(gbc.readMem(0x8df6), 0x82);
        // CB 82 02FB
        gbc.setState(0x8a26, 0x626b, 0x7f90, 0xb87f, 0xeba5, 0xdb17, 0x1, 0x0);
        gbc.writeMem(0x8a26, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x626b);
        EXPECT(gbc.pc(), 0x8a28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a26), 0xcb);
        EXPECT(gbc.readMem(0x8a27), 0x82);
        // CB 82 02FC
        gbc.setState(0x6776, 0x4ee3, 0x4be0, 0xbd45, 0x2846, 0x4614, 0x0, 0x0);
        gbc.writeMem(0x6776, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4ee3);
        EXPECT(gbc.pc(), 0x6778);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 02FF
        gbc.setState(0x1904, 0x64e, 0x4d0, 0xb633, 0x95e3, 0xe26b, 0x1, 0x1);
        gbc.writeMem(0x1904, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x64e);
        EXPECT(gbc.pc(), 0x1906);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0300
        gbc.setState(0xa036, 0xf61c, 0x7240, 0x310d, 0xefa3, 0x6051, 0x0, 0x0);
        gbc.writeMem(0xa036, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf61c);
        EXPECT(gbc.pc(), 0xa038);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa036), 0xcb);
        EXPECT(gbc.readMem(0xa037), 0x82);
        // CB 82 0301
        gbc.setState(0x31de, 0xdc83, 0x5cd0, 0x650e, 0x3f27, 0xcf1a, 0x1, 0x0);
        gbc.writeMem(0x31de, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xdc83);
        EXPECT(gbc.pc(), 0x31e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0302
        gbc.setState(0x377b, 0xcd14, 0xd0b0, 0x861, 0x496a, 0xeabc, 0x1, 0x1);
        gbc.writeMem(0x377b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xcd14);
        EXPECT(gbc.pc(), 0x377d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0303
        gbc.setState(0x3403, 0xaeff, 0x5dc0, 0x6bd7, 0xab2f, 0x434a, 0x1, 0x0);
        gbc.writeMem(0x3403, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xaeff);
        EXPECT(gbc.pc(), 0x3405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0304
        gbc.setState(0xe02, 0x57e9, 0x3130, 0xf774, 0x4552, 0xe0ed, 0x0, 0x0);
        gbc.writeMem(0xe02, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x57e9);
        EXPECT(gbc.pc(), 0xe04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0305
        gbc.setState(0xadf3, 0xf440, 0x7cb0, 0xc96d, 0x8039, 0x7534, 0x1, 0x0);
        gbc.writeMem(0xadf3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf440);
        EXPECT(gbc.pc(), 0xadf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadf3), 0xcb);
        EXPECT(gbc.readMem(0xadf4), 0x82);
        // CB 82 0306
        gbc.setState(0xdac2, 0xc707, 0xb010, 0xbc13, 0xff1c, 0x97b3, 0x1, 0x0);
        gbc.writeMem(0xdac2, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xc707);
        EXPECT(gbc.pc(), 0xdac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdac2), 0xcb);
        EXPECT(gbc.readMem(0xdac3), 0x82);
        // CB 82 0307
        gbc.setState(0x4544, 0x3dd7, 0xdf20, 0x8628, 0x1036, 0x2709, 0x1, 0x1);
        gbc.writeMem(0x4544, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x3dd7);
        EXPECT(gbc.pc(), 0x4546);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0308
        gbc.setState(0x6a8, 0x6914, 0xe720, 0xc4d2, 0x7a24, 0x53ea, 0x1, 0x1);
        gbc.writeMem(0x6a8, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6914);
        EXPECT(gbc.pc(), 0x6aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0309
        gbc.setState(0x822e, 0xebd9, 0x780, 0x651, 0x2c88, 0xd93a, 0x1, 0x0);
        gbc.writeMem(0x822e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xebd9);
        EXPECT(gbc.pc(), 0x8230);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x822e), 0xcb);
        EXPECT(gbc.readMem(0x822f), 0x82);
        // CB 82 030A
        gbc.setState(0x4270, 0x2252, 0xb530, 0xc9aa, 0x2889, 0x7fe, 0x1, 0x1);
        gbc.writeMem(0x4270, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2252);
        EXPECT(gbc.pc(), 0x4272);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 030B
        gbc.setState(0x70e6, 0xc210, 0xbb60, 0xabe3, 0x9363, 0x74f5, 0x1, 0x0);
        gbc.writeMem(0x70e6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc210);
        EXPECT(gbc.pc(), 0x70e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 030C
        gbc.setState(0x87f4, 0x96b0, 0x3260, 0x782a, 0x909a, 0x785e, 0x0, 0x0);
        gbc.writeMem(0x87f4, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x96b0);
        EXPECT(gbc.pc(), 0x87f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87f4), 0xcb);
        EXPECT(gbc.readMem(0x87f5), 0x82);
        // CB 82 030D
        gbc.setState(0xe155, 0x30c8, 0x95b0, 0xff92, 0x4dc2, 0x9732, 0x0, 0x0);
        gbc.writeMem(0xe155, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x30c8);
        EXPECT(gbc.pc(), 0xe157);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe155), 0xcb);
        EXPECT(gbc.readMem(0xe156), 0x82);
        // CB 82 030E
        gbc.setState(0x321d, 0xaecc, 0x3460, 0x1326, 0x4690, 0x47fc, 0x1, 0x0);
        gbc.writeMem(0x321d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xaecc);
        EXPECT(gbc.pc(), 0x321f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 030F
        gbc.setState(0x92c0, 0x717b, 0x5050, 0x1f82, 0x94c5, 0x70c7, 0x1, 0x0);
        gbc.writeMem(0x92c0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x717b);
        EXPECT(gbc.pc(), 0x92c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92c0), 0xcb);
        EXPECT(gbc.readMem(0x92c1), 0x82);
        // CB 82 0310
        gbc.setState(0x8d2b, 0x16a3, 0xa300, 0x1e18, 0x46e7, 0x295e, 0x0, 0x0);
        gbc.writeMem(0x8d2b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x16a3);
        EXPECT(gbc.pc(), 0x8d2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d2b), 0xcb);
        EXPECT(gbc.readMem(0x8d2c), 0x82);
        // CB 82 0311
        gbc.setState(0x2afe, 0x57f9, 0xf770, 0xd50a, 0xb97d, 0xf7e2, 0x0, 0x1);
        gbc.writeMem(0x2afe, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x57f9);
        EXPECT(gbc.pc(), 0x2b00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0312
        gbc.setState(0x9e8d, 0x8928, 0x25b0, 0xec8, 0x1784, 0x753e, 0x1, 0x0);
        gbc.writeMem(0x9e8d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8928);
        EXPECT(gbc.pc(), 0x9e8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e8d), 0xcb);
        EXPECT(gbc.readMem(0x9e8e), 0x82);
        // CB 82 0313
        gbc.setState(0x11e8, 0xa69d, 0x6790, 0x3abe, 0xe908, 0x88a4, 0x1, 0x1);
        gbc.writeMem(0x11e8, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa69d);
        EXPECT(gbc.pc(), 0x11ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0316
        gbc.setState(0xa06f, 0x79d1, 0x5700, 0x7db8, 0x8d58, 0x4947, 0x1, 0x1);
        gbc.writeMem(0xa06f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x79d1);
        EXPECT(gbc.pc(), 0xa071);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa06f), 0xcb);
        EXPECT(gbc.readMem(0xa070), 0x82);
        // CB 82 0317
        gbc.setState(0xd58, 0xd0a9, 0x19f0, 0x8ee5, 0xcdc9, 0x4da, 0x0, 0x1);
        gbc.writeMem(0xd58, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd0a9);
        EXPECT(gbc.pc(), 0xd5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0318
        gbc.setState(0xc50a, 0x3038, 0x73b0, 0xf12d, 0x2de1, 0x616c, 0x1, 0x0);
        gbc.writeMem(0xc50a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3038);
        EXPECT(gbc.pc(), 0xc50c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc50a), 0xcb);
        EXPECT(gbc.readMem(0xc50b), 0x82);
        // CB 82 0319
        gbc.setState(0x5b0b, 0xedad, 0x4520, 0x6aee, 0x2b9c, 0xe6d5, 0x0, 0x1);
        gbc.writeMem(0x5b0b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xedad);
        EXPECT(gbc.pc(), 0x5b0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 031A
        gbc.setState(0x8b4, 0xd7a4, 0x9280, 0xff8b, 0x9a9, 0x6d56, 0x0, 0x0);
        gbc.writeMem(0x8b4, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd7a4);
        EXPECT(gbc.pc(), 0x8b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 031B
        gbc.setState(0x31f4, 0x493, 0x6cf0, 0x92a0, 0x3fab, 0xa1a3, 0x1, 0x1);
        gbc.writeMem(0x31f4, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x493);
        EXPECT(gbc.pc(), 0x31f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 031C
        gbc.setState(0xa90a, 0x68d5, 0x8070, 0xf148, 0x4429, 0x8939, 0x1, 0x1);
        gbc.writeMem(0xa90a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x68d5);
        EXPECT(gbc.pc(), 0xa90c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa90a), 0xcb);
        EXPECT(gbc.readMem(0xa90b), 0x82);
        // CB 82 031D
        gbc.setState(0x6601, 0xf5f9, 0x81c0, 0xdc00, 0xcabe, 0xf580, 0x1, 0x0);
        gbc.writeMem(0x6601, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf5f9);
        EXPECT(gbc.pc(), 0x6603);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 031E
        gbc.setState(0x8084, 0x8678, 0xa950, 0x13b1, 0xbc08, 0x9d79, 0x1, 0x1);
        gbc.writeMem(0x8084, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8678);
        EXPECT(gbc.pc(), 0x8086);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8084), 0xcb);
        EXPECT(gbc.readMem(0x8085), 0x82);
        // CB 82 031F
        gbc.setState(0xec4c, 0x4a45, 0x2800, 0xd7d1, 0x2d04, 0xcaa1, 0x1, 0x0);
        gbc.writeMem(0xec4c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4a45);
        EXPECT(gbc.pc(), 0xec4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec4c), 0xcb);
        EXPECT(gbc.readMem(0xec4d), 0x82);
        // CB 82 0320
        gbc.setState(0x652c, 0x58e0, 0xe490, 0x5485, 0xa50, 0x4985, 0x1, 0x1);
        gbc.writeMem(0x652c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x58e0);
        EXPECT(gbc.pc(), 0x652e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0322
        gbc.setState(0x124e, 0xc877, 0x4490, 0x7003, 0xa958, 0xb1ef, 0x0, 0x1);
        gbc.writeMem(0x124e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc877);
        EXPECT(gbc.pc(), 0x1250);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0323
        gbc.setState(0xa455, 0x7ed9, 0xffe0, 0x452b, 0x997f, 0x3a7f, 0x0, 0x0);
        gbc.writeMem(0xa455, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7ed9);
        EXPECT(gbc.pc(), 0xa457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa455), 0xcb);
        EXPECT(gbc.readMem(0xa456), 0x82);
        // CB 82 0324
        gbc.setState(0xee1c, 0x7af0, 0xbd70, 0x51fb, 0xd7db, 0xe909, 0x0, 0x0);
        gbc.writeMem(0xee1c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7af0);
        EXPECT(gbc.pc(), 0xee1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee1c), 0xcb);
        EXPECT(gbc.readMem(0xee1d), 0x82);
        // CB 82 0325
        gbc.setState(0x8799, 0x2f81, 0x44a0, 0x1ed2, 0x83af, 0xc607, 0x0, 0x1);
        gbc.writeMem(0x8799, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2f81);
        EXPECT(gbc.pc(), 0x879b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8799), 0xcb);
        EXPECT(gbc.readMem(0x879a), 0x82);
        // CB 82 0326
        gbc.setState(0x4e8b, 0xb9ec, 0x3880, 0xe8f0, 0xe90a, 0x3039, 0x1, 0x1);
        gbc.writeMem(0x4e8b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xb9ec);
        EXPECT(gbc.pc(), 0x4e8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0327
        gbc.setState(0x843a, 0x8f34, 0xd9d0, 0x154d, 0xcb11, 0x119a, 0x0, 0x0);
        gbc.writeMem(0x843a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8f34);
        EXPECT(gbc.pc(), 0x843c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x843a), 0xcb);
        EXPECT(gbc.readMem(0x843b), 0x82);
        // CB 82 0328
        gbc.setState(0x6bb0, 0xf7d7, 0xba20, 0x2375, 0xe53f, 0x45f, 0x0, 0x1);
        gbc.writeMem(0x6bb0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf7d7);
        EXPECT(gbc.pc(), 0x6bb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0329
        gbc.setState(0x907e, 0x88ac, 0x6dd0, 0xdbe6, 0x2863, 0xa644, 0x1, 0x1);
        gbc.writeMem(0x907e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x88ac);
        EXPECT(gbc.pc(), 0x9080);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x907e), 0xcb);
        EXPECT(gbc.readMem(0x907f), 0x82);
        // CB 82 032A
        gbc.setState(0x3c7e, 0x9f25, 0xd7e0, 0x59a, 0xa752, 0x2471, 0x1, 0x1);
        gbc.writeMem(0x3c7e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9f25);
        EXPECT(gbc.pc(), 0x3c80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 032B
        gbc.setState(0x617f, 0xba39, 0x5100, 0x3795, 0xa8b8, 0x26a, 0x1, 0x1);
        gbc.writeMem(0x617f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xba39);
        EXPECT(gbc.pc(), 0x6181);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 032D
        gbc.setState(0x912f, 0x440e, 0xc5a0, 0xf219, 0xc478, 0x6387, 0x0, 0x0);
        gbc.writeMem(0x912f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x440e);
        EXPECT(gbc.pc(), 0x9131);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x912f), 0xcb);
        EXPECT(gbc.readMem(0x9130), 0x82);
        // CB 82 032F
        gbc.setState(0x1e30, 0x91a4, 0xdcb0, 0xda76, 0x2de8, 0x3d3c, 0x0, 0x0);
        gbc.writeMem(0x1e30, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x91a4);
        EXPECT(gbc.pc(), 0x1e32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0330
        gbc.setState(0x5b9, 0x3536, 0xf520, 0xa145, 0x4f3a, 0x7395, 0x1, 0x0);
        gbc.writeMem(0x5b9, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3536);
        EXPECT(gbc.pc(), 0x5bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0331
        gbc.setState(0x6ef, 0x2d0b, 0x5ba0, 0x6b32, 0xc10f, 0xba67, 0x1, 0x1);
        gbc.writeMem(0x6ef, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2d0b);
        EXPECT(gbc.pc(), 0x6f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0332
        gbc.setState(0x284b, 0xc407, 0xa750, 0xc89e, 0xaca9, 0xf2a8, 0x1, 0x1);
        gbc.writeMem(0x284b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc407);
        EXPECT(gbc.pc(), 0x284d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0333
        gbc.setState(0xa7a7, 0xfefa, 0xabb0, 0x2f29, 0x7ef6, 0xad82, 0x0, 0x0);
        gbc.writeMem(0xa7a7, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xfefa);
        EXPECT(gbc.pc(), 0xa7a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7a7), 0xcb);
        EXPECT(gbc.readMem(0xa7a8), 0x82);
        // CB 82 0334
        gbc.setState(0xc2c0, 0xb40f, 0xcc60, 0x1098, 0x9b08, 0xf3b4, 0x1, 0x0);
        gbc.writeMem(0xc2c0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xb40f);
        EXPECT(gbc.pc(), 0xc2c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2c0), 0xcb);
        EXPECT(gbc.readMem(0xc2c1), 0x82);
        // CB 82 0335
        gbc.setState(0xc81a, 0x649f, 0x4890, 0x585e, 0xabcf, 0xa704, 0x0, 0x0);
        gbc.writeMem(0xc81a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x649f);
        EXPECT(gbc.pc(), 0xc81c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc81a), 0xcb);
        EXPECT(gbc.readMem(0xc81b), 0x82);
        // CB 82 0336
        gbc.setState(0xd8f4, 0xcbdc, 0x62b0, 0x3cce, 0x2588, 0xe35a, 0x1, 0x0);
        gbc.writeMem(0xd8f4, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xcbdc);
        EXPECT(gbc.pc(), 0xd8f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8f4), 0xcb);
        EXPECT(gbc.readMem(0xd8f5), 0x82);
        // CB 82 0337
        gbc.setState(0xaa25, 0x96d9, 0xd780, 0x8b73, 0x60cc, 0x323, 0x0, 0x0);
        gbc.writeMem(0xaa25, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x96d9);
        EXPECT(gbc.pc(), 0xaa27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa25), 0xcb);
        EXPECT(gbc.readMem(0xaa26), 0x82);
        // CB 82 0339
        gbc.setState(0x4091, 0xf361, 0xaeb0, 0x6bc3, 0x680f, 0x62b9, 0x1, 0x1);
        gbc.writeMem(0x4091, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf361);
        EXPECT(gbc.pc(), 0x4093);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 033A
        gbc.setState(0x80c, 0x78dc, 0xb330, 0xbee3, 0xb82c, 0x53c4, 0x0, 0x0);
        gbc.writeMem(0x80c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x78dc);
        EXPECT(gbc.pc(), 0x80e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 033B
        gbc.setState(0x3a61, 0xb7bc, 0x1000, 0xde99, 0x1e5, 0x3c0c, 0x0, 0x0);
        gbc.writeMem(0x3a61, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb7bc);
        EXPECT(gbc.pc(), 0x3a63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 033C
        gbc.setState(0x5c83, 0x1830, 0x94a0, 0xb4e8, 0x91bc, 0x8ba2, 0x1, 0x1);
        gbc.writeMem(0x5c83, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x1830);
        EXPECT(gbc.pc(), 0x5c85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 033D
        gbc.setState(0x647e, 0xd261, 0xfe70, 0xdda, 0xf505, 0x42de, 0x0, 0x1);
        gbc.writeMem(0x647e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xd261);
        EXPECT(gbc.pc(), 0x6480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 033E
        gbc.setState(0x736b, 0x9c8e, 0x8f50, 0x483f, 0x2ce6, 0xaefe, 0x0, 0x1);
        gbc.writeMem(0x736b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9c8e);
        EXPECT(gbc.pc(), 0x736d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 033F
        gbc.setState(0x671c, 0x7f17, 0x6fe0, 0xb178, 0x3567, 0xe275, 0x0, 0x0);
        gbc.writeMem(0x671c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x7f17);
        EXPECT(gbc.pc(), 0x671e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0340
        gbc.setState(0xc801, 0x1a74, 0x83a0, 0x42aa, 0x6ab8, 0xd723, 0x1, 0x0);
        gbc.writeMem(0xc801, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1a74);
        EXPECT(gbc.pc(), 0xc803);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc801), 0xcb);
        EXPECT(gbc.readMem(0xc802), 0x82);
        // CB 82 0341
        gbc.setState(0xd8a2, 0xb805, 0x3150, 0x44c, 0x6083, 0x2848, 0x0, 0x1);
        gbc.writeMem(0xd8a2, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb805);
        EXPECT(gbc.pc(), 0xd8a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8a2), 0xcb);
        EXPECT(gbc.readMem(0xd8a3), 0x82);
        // CB 82 0342
        gbc.setState(0x61c0, 0xb9e8, 0xb690, 0xc573, 0xcd06, 0x40bb, 0x0, 0x0);
        gbc.writeMem(0x61c0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb9e8);
        EXPECT(gbc.pc(), 0x61c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0343
        gbc.setState(0xa715, 0x8deb, 0x3e40, 0x56c9, 0x6b6c, 0x2a31, 0x0, 0x1);
        gbc.writeMem(0xa715, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8deb);
        EXPECT(gbc.pc(), 0xa717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa715), 0xcb);
        EXPECT(gbc.readMem(0xa716), 0x82);
        // CB 82 0344
        gbc.setState(0x7da1, 0x943a, 0x5170, 0xf794, 0xe928, 0x5c51, 0x1, 0x1);
        gbc.writeMem(0x7da1, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x943a);
        EXPECT(gbc.pc(), 0x7da3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0345
        gbc.setState(0xd998, 0xbc18, 0x9980, 0x826f, 0xd811, 0x7611, 0x1, 0x1);
        gbc.writeMem(0xd998, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xbc18);
        EXPECT(gbc.pc(), 0xd99a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd998), 0xcb);
        EXPECT(gbc.readMem(0xd999), 0x82);
        // CB 82 0346
        gbc.setState(0x8605, 0x323a, 0x1d40, 0xc82a, 0x9142, 0xe3f8, 0x1, 0x0);
        gbc.writeMem(0x8605, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x323a);
        EXPECT(gbc.pc(), 0x8607);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8605), 0xcb);
        EXPECT(gbc.readMem(0x8606), 0x82);
        // CB 82 0347
        gbc.setState(0x6ce5, 0x8314, 0x2c30, 0x1669, 0x7407, 0xb1f8, 0x1, 0x0);
        gbc.writeMem(0x6ce5, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8314);
        EXPECT(gbc.pc(), 0x6ce7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0348
        gbc.setState(0x1e83, 0xe0c2, 0x3f30, 0x6316, 0xa5e0, 0x7a1c, 0x0, 0x1);
        gbc.writeMem(0x1e83, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe0c2);
        EXPECT(gbc.pc(), 0x1e85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0349
        gbc.setState(0x868, 0x4b67, 0x5c0, 0x5a07, 0x6156, 0x3424, 0x0, 0x1);
        gbc.writeMem(0x868, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4b67);
        EXPECT(gbc.pc(), 0x86a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 034A
        gbc.setState(0x54fe, 0x6fef, 0xa710, 0xef8e, 0x2d1c, 0xe4ed, 0x0, 0x0);
        gbc.writeMem(0x54fe, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6fef);
        EXPECT(gbc.pc(), 0x5500);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 034B
        gbc.setState(0x3562, 0x4900, 0x56e0, 0x2c3f, 0x4554, 0x74aa, 0x0, 0x1);
        gbc.writeMem(0x3562, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4900);
        EXPECT(gbc.pc(), 0x3564);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 034C
        gbc.setState(0x6b67, 0xd90b, 0x1b40, 0xb9b, 0x23a, 0x6d99, 0x1, 0x0);
        gbc.writeMem(0x6b67, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd90b);
        EXPECT(gbc.pc(), 0x6b69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 034E
        gbc.setState(0x5aab, 0xa02e, 0xc3b0, 0x773f, 0x6c42, 0xc8ab, 0x0, 0x0);
        gbc.writeMem(0x5aab, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa02e);
        EXPECT(gbc.pc(), 0x5aad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 034F
        gbc.setState(0xb6f5, 0x633, 0x35f0, 0x958a, 0x8a85, 0xdf53, 0x0, 0x1);
        gbc.writeMem(0xb6f5, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x633);
        EXPECT(gbc.pc(), 0xb6f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6f5), 0xcb);
        EXPECT(gbc.readMem(0xb6f6), 0x82);
        // CB 82 0350
        gbc.setState(0x8c3e, 0x1c26, 0x6c40, 0xb414, 0xd1fc, 0x325f, 0x1, 0x0);
        gbc.writeMem(0x8c3e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x1c26);
        EXPECT(gbc.pc(), 0x8c40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c3e), 0xcb);
        EXPECT(gbc.readMem(0x8c3f), 0x82);
        // CB 82 0351
        gbc.setState(0xee1, 0xbcd9, 0x8300, 0xee03, 0x31ff, 0x2448, 0x1, 0x1);
        gbc.writeMem(0xee1, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xbcd9);
        EXPECT(gbc.pc(), 0xee3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0352
        gbc.setState(0x3366, 0x3399, 0x68b0, 0x2648, 0xa456, 0x3ea4, 0x0, 0x0);
        gbc.writeMem(0x3366, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3399);
        EXPECT(gbc.pc(), 0x3368);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0353
        gbc.setState(0x99f6, 0x1ad2, 0x6020, 0x8224, 0x2bd4, 0x41da, 0x1, 0x1);
        gbc.writeMem(0x99f6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1ad2);
        EXPECT(gbc.pc(), 0x99f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99f6), 0xcb);
        EXPECT(gbc.readMem(0x99f7), 0x82);
        // CB 82 0355
        gbc.setState(0x9145, 0xb2, 0x4940, 0x767a, 0x62d7, 0xd36b, 0x1, 0x1);
        gbc.writeMem(0x9145, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb2);
        EXPECT(gbc.pc(), 0x9147);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9145), 0xcb);
        EXPECT(gbc.readMem(0x9146), 0x82);
        // CB 82 0356
        gbc.setState(0x6e29, 0x6876, 0x5890, 0x3346, 0xb2e4, 0x9e78, 0x1, 0x0);
        gbc.writeMem(0x6e29, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6876);
        EXPECT(gbc.pc(), 0x6e2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0357
        gbc.setState(0xba81, 0x7541, 0x36d0, 0x63b8, 0x7697, 0xc805, 0x0, 0x1);
        gbc.writeMem(0xba81, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7541);
        EXPECT(gbc.pc(), 0xba83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba81), 0xcb);
        EXPECT(gbc.readMem(0xba82), 0x82);
        // CB 82 0358
        gbc.setState(0x8937, 0x471f, 0xa270, 0xfc8e, 0x425d, 0x1fd2, 0x0, 0x0);
        gbc.writeMem(0x8937, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x471f);
        EXPECT(gbc.pc(), 0x8939);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8937), 0xcb);
        EXPECT(gbc.readMem(0x8938), 0x82);
        // CB 82 0359
        gbc.setState(0x8289, 0xeb4f, 0x7370, 0x6a23, 0x3170, 0x7b5c, 0x1, 0x0);
        gbc.writeMem(0x8289, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xeb4f);
        EXPECT(gbc.pc(), 0x828b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8289), 0xcb);
        EXPECT(gbc.readMem(0x828a), 0x82);
        // CB 82 035A
        gbc.setState(0xcc4c, 0x1a7b, 0xd130, 0x88a2, 0xc5d9, 0x8c1e, 0x1, 0x1);
        gbc.writeMem(0xcc4c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1a7b);
        EXPECT(gbc.pc(), 0xcc4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc4c), 0xcb);
        EXPECT(gbc.readMem(0xcc4d), 0x82);
        // CB 82 035B
        gbc.setState(0x3d20, 0x1b66, 0x6c00, 0x173c, 0xa281, 0x6bc5, 0x0, 0x1);
        gbc.writeMem(0x3d20, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1b66);
        EXPECT(gbc.pc(), 0x3d22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 035C
        gbc.setState(0xeeca, 0x8bd0, 0x66a0, 0xa370, 0xf3a, 0xf494, 0x0, 0x1);
        gbc.writeMem(0xeeca, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x8bd0);
        EXPECT(gbc.pc(), 0xeecc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeca), 0xcb);
        EXPECT(gbc.readMem(0xeecb), 0x82);
        // CB 82 035D
        gbc.setState(0xd572, 0x7402, 0xe150, 0xcd01, 0x79e6, 0xe154, 0x1, 0x0);
        gbc.writeMem(0xd572, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7402);
        EXPECT(gbc.pc(), 0xd574);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd572), 0xcb);
        EXPECT(gbc.readMem(0xd573), 0x82);
        // CB 82 035E
        gbc.setState(0x6a3f, 0xffd6, 0xaba0, 0x9ff3, 0x96f, 0xa971, 0x0, 0x0);
        gbc.writeMem(0x6a3f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xffd6);
        EXPECT(gbc.pc(), 0x6a41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 035F
        gbc.setState(0x48b6, 0xd6f1, 0xc4b0, 0x95e2, 0xe132, 0x819b, 0x1, 0x0);
        gbc.writeMem(0x48b6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd6f1);
        EXPECT(gbc.pc(), 0x48b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0360
        gbc.setState(0x9c4a, 0xe071, 0x1580, 0x267c, 0x5285, 0x9c4f, 0x0, 0x0);
        gbc.writeMem(0x9c4a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe071);
        EXPECT(gbc.pc(), 0x9c4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c4a), 0xcb);
        EXPECT(gbc.readMem(0x9c4b), 0x82);
        // CB 82 0361
        gbc.setState(0x4f94, 0xda67, 0x6aa0, 0xd512, 0x6c6d, 0x1ed1, 0x0, 0x1);
        gbc.writeMem(0x4f94, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xda67);
        EXPECT(gbc.pc(), 0x4f96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0362
        gbc.setState(0xe2c0, 0x587a, 0xc980, 0xd000, 0x6417, 0x594c, 0x0, 0x0);
        gbc.writeMem(0xe2c0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x587a);
        EXPECT(gbc.pc(), 0xe2c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2c0), 0xcb);
        EXPECT(gbc.readMem(0xe2c1), 0x82);
        // CB 82 0363
        gbc.setState(0xc4bc, 0xb493, 0x93c0, 0x5779, 0x3ae6, 0x90a0, 0x1, 0x1);
        gbc.writeMem(0xc4bc, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb493);
        EXPECT(gbc.pc(), 0xc4be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4bc), 0xcb);
        EXPECT(gbc.readMem(0xc4bd), 0x82);
        // CB 82 0364
        gbc.setState(0xddbc, 0x39a8, 0x96a0, 0x53d7, 0x2c83, 0xa601, 0x1, 0x0);
        gbc.writeMem(0xddbc, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x39a8);
        EXPECT(gbc.pc(), 0xddbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddbc), 0xcb);
        EXPECT(gbc.readMem(0xddbd), 0x82);
        // CB 82 0367
        gbc.setState(0x63d2, 0x3985, 0xd2a0, 0x8fe3, 0xc6bf, 0x8a11, 0x1, 0x1);
        gbc.writeMem(0x63d2, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x3985);
        EXPECT(gbc.pc(), 0x63d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0368
        gbc.setState(0x6b10, 0x80e4, 0x9250, 0x5d7, 0x54ef, 0xcf69, 0x0, 0x0);
        gbc.writeMem(0x6b10, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x80e4);
        EXPECT(gbc.pc(), 0x6b12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0369
        gbc.setState(0x92f3, 0x5368, 0x7070, 0x3d36, 0x36d7, 0x5833, 0x1, 0x1);
        gbc.writeMem(0x92f3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x5368);
        EXPECT(gbc.pc(), 0x92f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92f3), 0xcb);
        EXPECT(gbc.readMem(0x92f4), 0x82);
        // CB 82 036A
        gbc.setState(0x71b5, 0x69ae, 0xb390, 0xb714, 0x5fd, 0x57ef, 0x0, 0x0);
        gbc.writeMem(0x71b5, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x69ae);
        EXPECT(gbc.pc(), 0x71b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 036B
        gbc.setState(0xaa4b, 0x6ad3, 0xc1f0, 0xa83, 0x34d3, 0x6651, 0x1, 0x0);
        gbc.writeMem(0xaa4b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x6ad3);
        EXPECT(gbc.pc(), 0xaa4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa4b), 0xcb);
        EXPECT(gbc.readMem(0xaa4c), 0x82);
        // CB 82 036C
        gbc.setState(0x922e, 0x547, 0x3ad0, 0xe1f5, 0xbbc3, 0xdc, 0x1, 0x0);
        gbc.writeMem(0x922e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x547);
        EXPECT(gbc.pc(), 0x9230);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x922e), 0xcb);
        EXPECT(gbc.readMem(0x922f), 0x82);
        // CB 82 036D
        gbc.setState(0xc4ea, 0xbd77, 0x91f0, 0xd539, 0x8098, 0xb892, 0x0, 0x1);
        gbc.writeMem(0xc4ea, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xbd77);
        EXPECT(gbc.pc(), 0xc4ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4ea), 0xcb);
        EXPECT(gbc.readMem(0xc4eb), 0x82);
        // CB 82 036E
        gbc.setState(0xc220, 0xb2d2, 0x9c40, 0xd001, 0xa424, 0xb91a, 0x1, 0x1);
        gbc.writeMem(0xc220, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb2d2);
        EXPECT(gbc.pc(), 0xc222);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc220), 0xcb);
        EXPECT(gbc.readMem(0xc221), 0x82);
        // CB 82 036F
        gbc.setState(0x8128, 0x3700, 0x7b70, 0xc5be, 0xbd19, 0xdd88, 0x0, 0x0);
        gbc.writeMem(0x8128, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x3700);
        EXPECT(gbc.pc(), 0x812a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8128), 0xcb);
        EXPECT(gbc.readMem(0x8129), 0x82);
        // CB 82 0370
        gbc.setState(0x3524, 0xd32d, 0x8c70, 0xd069, 0xedcf, 0xa5b1, 0x1, 0x1);
        gbc.writeMem(0x3524, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd32d);
        EXPECT(gbc.pc(), 0x3526);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0371
        gbc.setState(0x3de5, 0xb73f, 0x5110, 0x45d2, 0xaefa, 0x5810, 0x1, 0x1);
        gbc.writeMem(0x3de5, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb73f);
        EXPECT(gbc.pc(), 0x3de7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0372
        gbc.setState(0x89c6, 0x47e8, 0x9540, 0xa303, 0x72c3, 0x9b9a, 0x1, 0x0);
        gbc.writeMem(0x89c6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x47e8);
        EXPECT(gbc.pc(), 0x89c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89c6), 0xcb);
        EXPECT(gbc.readMem(0x89c7), 0x82);
        // CB 82 0373
        gbc.setState(0xd589, 0xd808, 0xc260, 0xfd51, 0xc85b, 0x265f, 0x0, 0x1);
        gbc.writeMem(0xd589, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd808);
        EXPECT(gbc.pc(), 0xd58b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd589), 0xcb);
        EXPECT(gbc.readMem(0xd58a), 0x82);
        // CB 82 0374
        gbc.setState(0xa1fc, 0xf5b0, 0x5190, 0x6a9a, 0x88cb, 0x797e, 0x1, 0x1);
        gbc.writeMem(0xa1fc, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xf5b0);
        EXPECT(gbc.pc(), 0xa1fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1fc), 0xcb);
        EXPECT(gbc.readMem(0xa1fd), 0x82);
        // CB 82 0375
        gbc.setState(0x5a48, 0x15fa, 0x9230, 0x2b2b, 0xea0f, 0x12ed, 0x1, 0x1);
        gbc.writeMem(0x5a48, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x15fa);
        EXPECT(gbc.pc(), 0x5a4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0376
        gbc.setState(0xa41a, 0x6b28, 0xae90, 0xf903, 0xc980, 0xf34b, 0x1, 0x1);
        gbc.writeMem(0xa41a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6b28);
        EXPECT(gbc.pc(), 0xa41c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa41a), 0xcb);
        EXPECT(gbc.readMem(0xa41b), 0x82);
        // CB 82 0377
        gbc.setState(0x7057, 0xe73, 0x58e0, 0x8fc6, 0xcdaa, 0x53fb, 0x0, 0x0);
        gbc.writeMem(0x7057, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe73);
        EXPECT(gbc.pc(), 0x7059);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0378
        gbc.setState(0x4ad5, 0xc30c, 0xf4e0, 0xf683, 0x3081, 0xf909, 0x0, 0x0);
        gbc.writeMem(0x4ad5, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc30c);
        EXPECT(gbc.pc(), 0x4ad7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 037A
        gbc.setState(0x6452, 0xc0c8, 0xdae0, 0xd2da, 0x2caf, 0x2aea, 0x0, 0x1);
        gbc.writeMem(0x6452, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xc0c8);
        EXPECT(gbc.pc(), 0x6454);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 037B
        gbc.setState(0xe6d, 0x3353, 0x7290, 0x3ff4, 0x2a97, 0xa30a, 0x0, 0x1);
        gbc.writeMem(0xe6d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3353);
        EXPECT(gbc.pc(), 0xe6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 037C
        gbc.setState(0x64c0, 0xc056, 0xa990, 0x61f1, 0x20f8, 0xa074, 0x0, 0x0);
        gbc.writeMem(0x64c0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc056);
        EXPECT(gbc.pc(), 0x64c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 037D
        gbc.setState(0xc120, 0xca1e, 0x57b0, 0xdb8f, 0x6027, 0xccc8, 0x0, 0x1);
        gbc.writeMem(0xc120, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xca1e);
        EXPECT(gbc.pc(), 0xc122);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc120), 0xcb);
        EXPECT(gbc.readMem(0xc121), 0x82);
        // CB 82 037E
        gbc.setState(0xed17, 0xa00b, 0x4ed0, 0x792, 0x87d2, 0x3b23, 0x1, 0x0);
        gbc.writeMem(0xed17, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa00b);
        EXPECT(gbc.pc(), 0xed19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed17), 0xcb);
        EXPECT(gbc.readMem(0xed18), 0x82);
        // CB 82 037F
        gbc.setState(0x6019, 0xcbf0, 0xe680, 0xb447, 0x7e6b, 0xa7f2, 0x1, 0x1);
        gbc.writeMem(0x6019, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xcbf0);
        EXPECT(gbc.pc(), 0x601b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0380
        gbc.setState(0xdb98, 0x76e7, 0x1e0, 0x8398, 0x7fa8, 0x8bd7, 0x0, 0x1);
        gbc.writeMem(0xdb98, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x76e7);
        EXPECT(gbc.pc(), 0xdb9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb98), 0xcb);
        EXPECT(gbc.readMem(0xdb99), 0x82);
        // CB 82 0381
        gbc.setState(0x29cf, 0xc576, 0xbdc0, 0xf16a, 0x23d1, 0x4066, 0x0, 0x0);
        gbc.writeMem(0x29cf, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xc576);
        EXPECT(gbc.pc(), 0x29d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0382
        gbc.setState(0x30f, 0x1f22, 0x3410, 0xdce0, 0xa618, 0xb22, 0x1, 0x1);
        gbc.writeMem(0x30f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1f22);
        EXPECT(gbc.pc(), 0x311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0383
        gbc.setState(0x33ff, 0xb647, 0xe290, 0xb339, 0xcf24, 0x1b47, 0x1, 0x1);
        gbc.writeMem(0x33ff, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb647);
        EXPECT(gbc.pc(), 0x3401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0384
        gbc.setState(0x7e3d, 0x5b0d, 0xc4b0, 0xd5bb, 0xc359, 0xfc74, 0x0, 0x1);
        gbc.writeMem(0x7e3d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5b0d);
        EXPECT(gbc.pc(), 0x7e3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0385
        gbc.setState(0x7d3, 0xed72, 0x210, 0x957a, 0xcc8, 0x1e85, 0x0, 0x1);
        gbc.writeMem(0x7d3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xed72);
        EXPECT(gbc.pc(), 0x7d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0387
        gbc.setState(0x520d, 0x77ca, 0xb530, 0x16cf, 0x42b8, 0x3f7a, 0x0, 0x1);
        gbc.writeMem(0x520d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x77ca);
        EXPECT(gbc.pc(), 0x520f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0388
        gbc.setState(0x6d5f, 0x4258, 0x4800, 0x5e8b, 0x13b4, 0xd8a, 0x1, 0x0);
        gbc.writeMem(0x6d5f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4258);
        EXPECT(gbc.pc(), 0x6d61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0389
        gbc.setState(0x88c7, 0x8dd0, 0x1f30, 0x6dc8, 0x2e79, 0xb321, 0x0, 0x1);
        gbc.writeMem(0x88c7, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8dd0);
        EXPECT(gbc.pc(), 0x88c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c7), 0xcb);
        EXPECT(gbc.readMem(0x88c8), 0x82);
        // CB 82 038B
        gbc.setState(0x629d, 0xc63d, 0x7610, 0x843c, 0xce10, 0x584f, 0x1, 0x1);
        gbc.writeMem(0x629d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc63d);
        EXPECT(gbc.pc(), 0x629f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 038C
        gbc.setState(0x2954, 0x47b2, 0x5220, 0x553, 0x6928, 0xf7ad, 0x0, 0x0);
        gbc.writeMem(0x2954, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x47b2);
        EXPECT(gbc.pc(), 0x2956);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 038D
        gbc.setState(0x38c8, 0x41ab, 0x4b10, 0x618b, 0xbbdc, 0x292b, 0x0, 0x0);
        gbc.writeMem(0x38c8, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x41ab);
        EXPECT(gbc.pc(), 0x38ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 038E
        gbc.setState(0xdeb, 0x9400, 0x3680, 0xc7ee, 0x9dd9, 0x448e, 0x0, 0x1);
        gbc.writeMem(0xdeb, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9400);
        EXPECT(gbc.pc(), 0xded);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 038F
        gbc.setState(0xac2f, 0x9b85, 0xa970, 0xa907, 0x7d75, 0xbc59, 0x1, 0x1);
        gbc.writeMem(0xac2f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9b85);
        EXPECT(gbc.pc(), 0xac31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac2f), 0xcb);
        EXPECT(gbc.readMem(0xac30), 0x82);
        // CB 82 0390
        gbc.setState(0xb2b1, 0x1788, 0xa890, 0xc415, 0x4b1a, 0x772, 0x0, 0x1);
        gbc.writeMem(0xb2b1, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1788);
        EXPECT(gbc.pc(), 0xb2b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2b1), 0xcb);
        EXPECT(gbc.readMem(0xb2b2), 0x82);
        // CB 82 0391
        gbc.setState(0xb970, 0xe333, 0xb6c0, 0xb628, 0xc56d, 0xc765, 0x1, 0x1);
        gbc.writeMem(0xb970, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xe333);
        EXPECT(gbc.pc(), 0xb972);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb970), 0xcb);
        EXPECT(gbc.readMem(0xb971), 0x82);
        // CB 82 0393
        gbc.setState(0x95c, 0x7362, 0x2cd0, 0x1977, 0xcf50, 0xac29, 0x0, 0x1);
        gbc.writeMem(0x95c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7362);
        EXPECT(gbc.pc(), 0x95e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0394
        gbc.setState(0x6123, 0x24d6, 0xb4a0, 0x4dcb, 0xfef4, 0xc6e7, 0x0, 0x1);
        gbc.writeMem(0x6123, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x24d6);
        EXPECT(gbc.pc(), 0x6125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 0395
        gbc.setState(0x5ac6, 0xdc81, 0xf9b0, 0x8ce3, 0xdb0, 0x4d64, 0x0, 0x1);
        gbc.writeMem(0x5ac6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xdc81);
        EXPECT(gbc.pc(), 0x5ac8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 0396
        gbc.setState(0xeb21, 0x5f64, 0x3820, 0x392e, 0x538, 0xbbdc, 0x1, 0x1);
        gbc.writeMem(0xeb21, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5f64);
        EXPECT(gbc.pc(), 0xeb23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb21), 0xcb);
        EXPECT(gbc.readMem(0xeb22), 0x82);
        // CB 82 0397
        gbc.setState(0xe2b3, 0xb22a, 0x21a0, 0xfb79, 0xb2f5, 0xaa1d, 0x0, 0x1);
        gbc.writeMem(0xe2b3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb22a);
        EXPECT(gbc.pc(), 0xe2b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2b3), 0xcb);
        EXPECT(gbc.readMem(0xe2b4), 0x82);
        // CB 82 0398
        gbc.setState(0xa360, 0x3245, 0x57e0, 0xc9b7, 0xd56, 0xb23d, 0x0, 0x1);
        gbc.writeMem(0xa360, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x3245);
        EXPECT(gbc.pc(), 0xa362);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa360), 0xcb);
        EXPECT(gbc.readMem(0xa361), 0x82);
        // CB 82 0399
        gbc.setState(0x2306, 0xea84, 0x3000, 0xb60a, 0x203a, 0x8d0b, 0x0, 0x1);
        gbc.writeMem(0x2306, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xea84);
        EXPECT(gbc.pc(), 0x2308);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 039A
        gbc.setState(0x27ec, 0x21fe, 0x21a0, 0xec9, 0xe657, 0x2212, 0x1, 0x1);
        gbc.writeMem(0x27ec, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x21fe);
        EXPECT(gbc.pc(), 0x27ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 039B
        gbc.setState(0xa526, 0xb923, 0x7e90, 0x91d7, 0x144a, 0x701e, 0x0, 0x0);
        gbc.writeMem(0xa526, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb923);
        EXPECT(gbc.pc(), 0xa528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa526), 0xcb);
        EXPECT(gbc.readMem(0xa527), 0x82);
        // CB 82 039C
        gbc.setState(0xc90a, 0x573f, 0x7f20, 0x35de, 0xa531, 0xa592, 0x1, 0x0);
        gbc.writeMem(0xc90a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x573f);
        EXPECT(gbc.pc(), 0xc90c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc90a), 0xcb);
        EXPECT(gbc.readMem(0xc90b), 0x82);
        // CB 82 039D
        gbc.setState(0xc2aa, 0x6bf1, 0x4920, 0x16d7, 0x873f, 0xe2ac, 0x0, 0x1);
        gbc.writeMem(0xc2aa, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6bf1);
        EXPECT(gbc.pc(), 0xc2ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2aa), 0xcb);
        EXPECT(gbc.readMem(0xc2ab), 0x82);
        // CB 82 039E
        gbc.setState(0x16e3, 0x9e64, 0x2750, 0xad6a, 0x8b73, 0xa288, 0x1, 0x1);
        gbc.writeMem(0x16e3, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9e64);
        EXPECT(gbc.pc(), 0x16e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 039F
        gbc.setState(0xbcb7, 0xa47e, 0x9040, 0xbb20, 0xac51, 0xa964, 0x0, 0x0);
        gbc.writeMem(0xbcb7, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xa47e);
        EXPECT(gbc.pc(), 0xbcb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcb7), 0xcb);
        EXPECT(gbc.readMem(0xbcb8), 0x82);
        // CB 82 03A0
        gbc.setState(0x4b93, 0x2635, 0x2c00, 0x4f56, 0x55b1, 0x22c0, 0x1, 0x0);
        gbc.writeMem(0x4b93, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x2635);
        EXPECT(gbc.pc(), 0x4b95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 03A1
        gbc.setState(0x20ed, 0xdb38, 0x7470, 0xebb, 0xc7a6, 0x2b25, 0x0, 0x0);
        gbc.writeMem(0x20ed, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xdb38);
        EXPECT(gbc.pc(), 0x20ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 03A3
        gbc.setState(0xda74, 0x3ddd, 0x91f0, 0x490d, 0xcc21, 0x923a, 0x0, 0x0);
        gbc.writeMem(0xda74, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3ddd);
        EXPECT(gbc.pc(), 0xda76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda74), 0xcb);
        EXPECT(gbc.readMem(0xda75), 0x82);
        // CB 82 03A4
        gbc.setState(0x25c, 0x571, 0x5390, 0xe4d8, 0xa1ac, 0xc513, 0x1, 0x0);
        gbc.writeMem(0x25c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x571);
        EXPECT(gbc.pc(), 0x25e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 03A5
        gbc.setState(0x803b, 0xa4f8, 0xa510, 0x631b, 0x1f0d, 0x44c1, 0x0, 0x0);
        gbc.writeMem(0x803b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa4f8);
        EXPECT(gbc.pc(), 0x803d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x803b), 0xcb);
        EXPECT(gbc.readMem(0x803c), 0x82);
        // CB 82 03A6
        gbc.setState(0xb232, 0x527d, 0x2c30, 0x2488, 0x7b81, 0x67f6, 0x1, 0x0);
        gbc.writeMem(0xb232, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x527d);
        EXPECT(gbc.pc(), 0xb234);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb232), 0xcb);
        EXPECT(gbc.readMem(0xb233), 0x82);
        // CB 82 03A7
        gbc.setState(0x8b2a, 0x6e48, 0x6170, 0x9a37, 0xcfc8, 0x9778, 0x0, 0x0);
        gbc.writeMem(0x8b2a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6e48);
        EXPECT(gbc.pc(), 0x8b2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b2a), 0xcb);
        EXPECT(gbc.readMem(0x8b2b), 0x82);
        // CB 82 03A8
        gbc.setState(0xd5ae, 0x6451, 0xf300, 0x934d, 0x2d8a, 0x9248, 0x0, 0x1);
        gbc.writeMem(0xd5ae, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6451);
        EXPECT(gbc.pc(), 0xd5b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5ae), 0xcb);
        EXPECT(gbc.readMem(0xd5af), 0x82);
        // CB 82 03A9
        gbc.setState(0x76aa, 0x86ce, 0x4f90, 0xd6bb, 0x6d26, 0x41ab, 0x1, 0x0);
        gbc.writeMem(0x76aa, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x86ce);
        EXPECT(gbc.pc(), 0x76ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 03AA
        gbc.setState(0x9d70, 0x80b2, 0x1ce0, 0xa535, 0xd146, 0x11b3, 0x0, 0x0);
        gbc.writeMem(0x9d70, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x80b2);
        EXPECT(gbc.pc(), 0x9d72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d70), 0xcb);
        EXPECT(gbc.readMem(0x9d71), 0x82);
        // CB 82 03AB
        gbc.setState(0x8897, 0x7f16, 0x1520, 0x882, 0x2970, 0xe163, 0x1, 0x0);
        gbc.writeMem(0x8897, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7f16);
        EXPECT(gbc.pc(), 0x8899);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8897), 0xcb);
        EXPECT(gbc.readMem(0x8898), 0x82);
        // CB 82 03AC
        gbc.setState(0x3ecc, 0xf847, 0x2d70, 0xb7ea, 0x1557, 0xdf43, 0x0, 0x0);
        gbc.writeMem(0x3ecc, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf847);
        EXPECT(gbc.pc(), 0x3ece);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 03AD
        gbc.setState(0x912c, 0x6efb, 0xe70, 0xc1b1, 0x8dec, 0x16f7, 0x1, 0x1);
        gbc.writeMem(0x912c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6efb);
        EXPECT(gbc.pc(), 0x912e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x912c), 0xcb);
        EXPECT(gbc.readMem(0x912d), 0x82);
        // CB 82 03AE
        gbc.setState(0x3dec, 0x8faa, 0x57d0, 0x8840, 0xa323, 0x3731, 0x1, 0x1);
        gbc.writeMem(0x3dec, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8faa);
        EXPECT(gbc.pc(), 0x3dee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 03AF
        gbc.setState(0x18c2, 0xc595, 0x3830, 0xe8ee, 0xfcb4, 0x27b0, 0x0, 0x0);
        gbc.writeMem(0x18c2, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc595);
        EXPECT(gbc.pc(), 0x18c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 03B0
        gbc.setState(0x343d, 0x266b, 0x5bf0, 0x9528, 0x26d6, 0x10ad, 0x0, 0x1);
        gbc.writeMem(0x343d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x266b);
        EXPECT(gbc.pc(), 0x343f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 03B1
        gbc.setState(0xc4d9, 0x9274, 0x55e0, 0xa5a0, 0xdb4a, 0xb038, 0x1, 0x0);
        gbc.writeMem(0xc4d9, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9274);
        EXPECT(gbc.pc(), 0xc4db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4d9), 0xcb);
        EXPECT(gbc.readMem(0xc4da), 0x82);
        // CB 82 03B2
        gbc.setState(0x5b8d, 0xf75e, 0x8840, 0x3ff9, 0x3eb3, 0x10bb, 0x0, 0x0);
        gbc.writeMem(0x5b8d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf75e);
        EXPECT(gbc.pc(), 0x5b8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 03B3
        gbc.setState(0xeeff, 0x7ae1, 0x4690, 0x18b7, 0xec54, 0x97a2, 0x0, 0x0);
        gbc.writeMem(0xeeff, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7ae1);
        EXPECT(gbc.pc(), 0xef01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeff), 0xcb);
        EXPECT(gbc.readMem(0xef00), 0x82);
        // CB 82 03B4
        gbc.setState(0x69ed, 0xf69e, 0x6a50, 0x5ee3, 0x7425, 0x6de5, 0x1, 0x1);
        gbc.writeMem(0x69ed, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf69e);
        EXPECT(gbc.pc(), 0x69ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 03B5
        gbc.setState(0x34e6, 0xf861, 0x5f90, 0xa905, 0xb06f, 0x5a1c, 0x1, 0x1);
        gbc.writeMem(0x34e6, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf861);
        EXPECT(gbc.pc(), 0x34e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 03B6
        gbc.setState(0xc298, 0xfb6e, 0x7bb0, 0x8469, 0x6971, 0x2cc1, 0x0, 0x0);
        gbc.writeMem(0xc298, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xfb6e);
        EXPECT(gbc.pc(), 0xc29a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc298), 0xcb);
        EXPECT(gbc.readMem(0xc299), 0x82);
        // CB 82 03B7
        gbc.setState(0x2994, 0xe6fb, 0xb010, 0xfb2, 0xada2, 0x78ad, 0x0, 0x0);
        gbc.writeMem(0x2994, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe6fb);
        EXPECT(gbc.pc(), 0x2996);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 03B8
        gbc.setState(0xa2e7, 0x6a09, 0x5420, 0xa958, 0x30bd, 0xb06f, 0x1, 0x0);
        gbc.writeMem(0xa2e7, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6a09);
        EXPECT(gbc.pc(), 0xa2e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2e7), 0xcb);
        EXPECT(gbc.readMem(0xa2e8), 0x82);
        // CB 82 03B9
        gbc.setState(0xd91f, 0x7762, 0x2760, 0xdafb, 0x17a0, 0xb898, 0x1, 0x0);
        gbc.writeMem(0xd91f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7762);
        EXPECT(gbc.pc(), 0xd921);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd91f), 0xcb);
        EXPECT(gbc.readMem(0xd920), 0x82);
        // CB 82 03BA
        gbc.setState(0x652e, 0x600, 0x6d0, 0xfcee, 0x62cd, 0x6076, 0x1, 0x0);
        gbc.writeMem(0x652e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x600);
        EXPECT(gbc.pc(), 0x6530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 03BB
        gbc.setState(0xd809, 0x2f3a, 0xb460, 0xc804, 0x52cb, 0x3b6b, 0x0, 0x1);
        gbc.writeMem(0xd809, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2f3a);
        EXPECT(gbc.pc(), 0xd80b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd809), 0xcb);
        EXPECT(gbc.readMem(0xd80a), 0x82);
        // CB 82 03BC
        gbc.setState(0x93c5, 0xbb1c, 0x39c0, 0xc9c7, 0x73ef, 0x30af, 0x1, 0x1);
        gbc.writeMem(0x93c5, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xbb1c);
        EXPECT(gbc.pc(), 0x93c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93c5), 0xcb);
        EXPECT(gbc.readMem(0x93c6), 0x82);
        // CB 82 03BD
        gbc.setState(0xc33c, 0xf497, 0x31f0, 0x3e85, 0xfa6a, 0xe283, 0x1, 0x0);
        gbc.writeMem(0xc33c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xf497);
        EXPECT(gbc.pc(), 0xc33e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc33c), 0xcb);
        EXPECT(gbc.readMem(0xc33d), 0x82);
        // CB 82 03BE
        gbc.setState(0x850, 0x700f, 0x3260, 0x2f25, 0xde05, 0x88df, 0x0, 0x1);
        gbc.writeMem(0x850, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x700f);
        EXPECT(gbc.pc(), 0x852);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 03BF
        gbc.setState(0xdcf4, 0xccb1, 0x9ca0, 0x7031, 0x90c2, 0x46ee, 0x0, 0x1);
        gbc.writeMem(0xdcf4, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xccb1);
        EXPECT(gbc.pc(), 0xdcf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcf4), 0xcb);
        EXPECT(gbc.readMem(0xdcf5), 0x82);
        // CB 82 03C0
        gbc.setState(0x3335, 0xff56, 0x5940, 0xa19f, 0x4863, 0x58fd, 0x1, 0x1);
        gbc.writeMem(0x3335, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xff56);
        EXPECT(gbc.pc(), 0x3337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 03C1
        gbc.setState(0x93dd, 0xfe07, 0xa160, 0xc9ef, 0x20aa, 0xa478, 0x0, 0x1);
        gbc.writeMem(0x93dd, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xfe07);
        EXPECT(gbc.pc(), 0x93df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93dd), 0xcb);
        EXPECT(gbc.readMem(0x93de), 0x82);
        // CB 82 03C2
        gbc.setState(0x100d, 0xf81d, 0xbf50, 0x8bd1, 0x8150, 0xfda1, 0x0, 0x1);
        gbc.writeMem(0x100d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf81d);
        EXPECT(gbc.pc(), 0x100f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 03C3
        gbc.setState(0xdc2c, 0x83e5, 0x1620, 0x38ee, 0x8440, 0x5731, 0x0, 0x1);
        gbc.writeMem(0xdc2c, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x83e5);
        EXPECT(gbc.pc(), 0xdc2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc2c), 0xcb);
        EXPECT(gbc.readMem(0xdc2d), 0x82);
        // CB 82 03C4
        gbc.setState(0x73c0, 0x48ca, 0xe2e0, 0xaf15, 0x7b74, 0x8550, 0x1, 0x0);
        gbc.writeMem(0x73c0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x48ca);
        EXPECT(gbc.pc(), 0x73c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 03C5
        gbc.setState(0xa708, 0x4df2, 0xf540, 0xaebe, 0x8633, 0xc156, 0x0, 0x0);
        gbc.writeMem(0xa708, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x4df2);
        EXPECT(gbc.pc(), 0xa70a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa708), 0xcb);
        EXPECT(gbc.readMem(0xa709), 0x82);
        // CB 82 03C6
        gbc.setState(0x8647, 0xf0e5, 0xb700, 0x1ce2, 0x5b5e, 0xf390, 0x0, 0x0);
        gbc.writeMem(0x8647, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xf0e5);
        EXPECT(gbc.pc(), 0x8649);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8647), 0xcb);
        EXPECT(gbc.readMem(0x8648), 0x82);
        // CB 82 03C7
        gbc.setState(0x8cc0, 0x57b5, 0xc270, 0xb4b6, 0xd646, 0xc83d, 0x1, 0x1);
        gbc.writeMem(0x8cc0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x57b5);
        EXPECT(gbc.pc(), 0x8cc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cc0), 0xcb);
        EXPECT(gbc.readMem(0x8cc1), 0x82);
        // CB 82 03C8
        gbc.setState(0xe785, 0xb347, 0x1110, 0x112b, 0x64e8, 0x7654, 0x0, 0x0);
        gbc.writeMem(0xe785, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb347);
        EXPECT(gbc.pc(), 0xe787);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe785), 0xcb);
        EXPECT(gbc.readMem(0xe786), 0x82);
        // CB 82 03C9
        gbc.setState(0xac4e, 0x227e, 0x6db0, 0xc2d0, 0x3182, 0x2e0f, 0x1, 0x0);
        gbc.writeMem(0xac4e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x227e);
        EXPECT(gbc.pc(), 0xac50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac4e), 0xcb);
        EXPECT(gbc.readMem(0xac4f), 0x82);
        // CB 82 03CA
        gbc.setState(0x9787, 0xb73, 0x130, 0x66fe, 0x5c59, 0xd537, 0x0, 0x1);
        gbc.writeMem(0x9787, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xb73);
        EXPECT(gbc.pc(), 0x9789);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9787), 0xcb);
        EXPECT(gbc.readMem(0x9788), 0x82);
        // CB 82 03CB
        gbc.setState(0x5b07, 0x6109, 0xe770, 0xe867, 0x82e5, 0xb178, 0x0, 0x1);
        gbc.writeMem(0x5b07, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6109);
        EXPECT(gbc.pc(), 0x5b09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 03CD
        gbc.setState(0xe924, 0x3445, 0xce50, 0xecd1, 0xa226, 0x3a80, 0x1, 0x1);
        gbc.writeMem(0xe924, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3445);
        EXPECT(gbc.pc(), 0xe926);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe924), 0xcb);
        EXPECT(gbc.readMem(0xe925), 0x82);
        // CB 82 03CE
        gbc.setState(0x2258, 0x43b8, 0x1140, 0xf196, 0xde2c, 0x3adf, 0x1, 0x1);
        gbc.writeMem(0x2258, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x43b8);
        EXPECT(gbc.pc(), 0x225a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 03CF
        gbc.setState(0xbb50, 0xf63e, 0x7070, 0xff73, 0x7865, 0xeeca, 0x1, 0x0);
        gbc.writeMem(0xbb50, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xf63e);
        EXPECT(gbc.pc(), 0xbb52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb50), 0xcb);
        EXPECT(gbc.readMem(0xbb51), 0x82);
        // CB 82 03D0
        gbc.setState(0xd670, 0x7595, 0x4de0, 0x1e57, 0x85b, 0xa28d, 0x0, 0x1);
        gbc.writeMem(0xd670, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x7595);
        EXPECT(gbc.pc(), 0xd672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd670), 0xcb);
        EXPECT(gbc.readMem(0xd671), 0x82);
        // CB 82 03D1
        gbc.setState(0x652e, 0xf542, 0xb090, 0xe02, 0xdfcc, 0x12c4, 0x1, 0x1);
        gbc.writeMem(0x652e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf542);
        EXPECT(gbc.pc(), 0x6530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 03D2
        gbc.setState(0x7a3d, 0x2204, 0x5200, 0xe952, 0x6a29, 0xbbae, 0x0, 0x0);
        gbc.writeMem(0x7a3d, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x2204);
        EXPECT(gbc.pc(), 0x7a3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 03D3
        gbc.setState(0x873a, 0xa614, 0xc490, 0xf4d5, 0xd4f0, 0x2d7, 0x1, 0x0);
        gbc.writeMem(0x873a, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa614);
        EXPECT(gbc.pc(), 0x873c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x873a), 0xcb);
        EXPECT(gbc.readMem(0x873b), 0x82);
        // CB 82 03D4
        gbc.setState(0x4a5e, 0x6e5a, 0xcf00, 0xb155, 0xf0d9, 0xc886, 0x1, 0x1);
        gbc.writeMem(0x4a5e, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6e5a);
        EXPECT(gbc.pc(), 0x4a60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 03D5
        gbc.setState(0x4edd, 0x291f, 0x5000, 0x623f, 0xd4a3, 0x7191, 0x0, 0x1);
        gbc.writeMem(0x4edd, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x291f);
        EXPECT(gbc.pc(), 0x4edf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 03D6
        gbc.setState(0x2b72, 0xb8c, 0x58d0, 0x85cb, 0xf309, 0xd7d3, 0x1, 0x1);
        gbc.writeMem(0x2b72, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb8c);
        EXPECT(gbc.pc(), 0x2b74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 03D7
        gbc.setState(0x2e1b, 0xf5d2, 0xb810, 0xd6f0, 0x437c, 0x508e, 0x1, 0x0);
        gbc.writeMem(0x2e1b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf5d2);
        EXPECT(gbc.pc(), 0x2e1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 03D8
        gbc.setState(0xad28, 0xd2c, 0x9210, 0xa108, 0x4364, 0x78d5, 0x0, 0x1);
        gbc.writeMem(0xad28, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xd2c);
        EXPECT(gbc.pc(), 0xad2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad28), 0xcb);
        EXPECT(gbc.readMem(0xad29), 0x82);
        // CB 82 03D9
        gbc.setState(0x4809, 0xaa20, 0x720, 0x40ba, 0x2f08, 0xbad0, 0x0, 0x1);
        gbc.writeMem(0x4809, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xaa20);
        EXPECT(gbc.pc(), 0x480b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 82 03DA
        gbc.setState(0xe9a7, 0x9361, 0x4a80, 0xea14, 0xce3e, 0xe201, 0x1, 0x1);
        gbc.writeMem(0xe9a7, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9361);
        EXPECT(gbc.pc(), 0xe9a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9a7), 0xcb);
        EXPECT(gbc.readMem(0xe9a8), 0x82);
        // CB 82 03DB
        gbc.setState(0xdc64, 0xbecd, 0x8d70, 0x8a73, 0xd6ac, 0x4187, 0x0, 0x0);
        gbc.writeMem(0xdc64, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xbecd);
        EXPECT(gbc.pc(), 0xdc66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc64), 0xcb);
        EXPECT(gbc.readMem(0xdc65), 0x82);
        // CB 82 03DC
        gbc.setState(0xbb5f, 0x2ac3, 0x3ae0, 0x98ec, 0xd657, 0x1395, 0x1, 0x0);
        gbc.writeMem(0xbb5f, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2ac3);
        EXPECT(gbc.pc(), 0xbb61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb5f), 0xcb);
        EXPECT(gbc.readMem(0xbb60), 0x82);
        // CB 82 03DD
        gbc.setState(0x88b5, 0xd2d1, 0x9f40, 0xe25f, 0x6918, 0xac79, 0x0, 0x1);
        gbc.writeMem(0x88b5, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd2d1);
        EXPECT(gbc.pc(), 0x88b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88b5), 0xcb);
        EXPECT(gbc.readMem(0x88b6), 0x82);
        // CB 82 03DE
        gbc.setState(0x7b46, 0x3d64, 0x5310, 0xfe96, 0x1450, 0x18ec, 0x0, 0x1);
        gbc.writeMem(0x7b46, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x3d64);
        EXPECT(gbc.pc(), 0x7b48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 03DF
        gbc.setState(0x9d75, 0x4502, 0x8280, 0xd691, 0xda33, 0x46b4, 0x1, 0x1);
        gbc.writeMem(0x9d75, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4502);
        EXPECT(gbc.pc(), 0x9d77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d75), 0xcb);
        EXPECT(gbc.readMem(0x9d76), 0x82);
        // CB 82 03E0
        gbc.setState(0x61b1, 0x965, 0x1350, 0x8805, 0xb8c1, 0xf1a8, 0x1, 0x1);
        gbc.writeMem(0x61b1, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x965);
        EXPECT(gbc.pc(), 0x61b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 03E1
        gbc.setState(0xc078, 0x483b, 0x8f30, 0x3fbb, 0x9bc2, 0xed06, 0x1, 0x0);
        gbc.writeMem(0xc078, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x483b);
        EXPECT(gbc.pc(), 0xc07a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc078), 0xcb);
        EXPECT(gbc.readMem(0xc079), 0x82);
        // CB 82 03E2
        gbc.setState(0xa959, 0x71ce, 0xc7d0, 0xbae6, 0x516f, 0x1959, 0x0, 0x0);
        gbc.writeMem(0xa959, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x71ce);
        EXPECT(gbc.pc(), 0xa95b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa959), 0xcb);
        EXPECT(gbc.readMem(0xa95a), 0x82);
        // CB 82 03E3
        gbc.setState(0x1650, 0xd6fe, 0xa8b0, 0x5c0c, 0x43ff, 0x21eb, 0x0, 0x0);
        gbc.writeMem(0x1650, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xd6fe);
        EXPECT(gbc.pc(), 0x1652);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 03E4
        gbc.setState(0x32db, 0x6a92, 0xbd70, 0x20d8, 0xfd0a, 0x72fa, 0x1, 0x1);
        gbc.writeMem(0x32db, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6a92);
        EXPECT(gbc.pc(), 0x32dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 82 03E5
        gbc.setState(0x36df, 0xc6a5, 0x45d0, 0xb4e7, 0xac16, 0x5bee, 0x0, 0x1);
        gbc.writeMem(0x36df, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc6a5);
        EXPECT(gbc.pc(), 0x36e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 82 03E6
        gbc.setState(0x4d6b, 0x56de, 0xe580, 0x74d5, 0x8ebe, 0xc4ea, 0x1, 0x0);
        gbc.writeMem(0x4d6b, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x56de);
        EXPECT(gbc.pc(), 0x4d6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 82 03E7
        gbc.setState(0x33a0, 0x7490, 0x46e0, 0xc70e, 0x4758, 0x52fc, 0x1, 0x1);
        gbc.writeMem(0x33a0, { 0xcb, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7490);
        EXPECT(gbc.pc(), 0x33a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
