    TEST(gbcemu, opcode_2e) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 2E 0000
        gbc.setState(0xd109, 0x626e, 0x55e0, 0xfc8d, 0xec7b, 0x5753, 0x0, 0x1);
        gbc.writeMem(0xd109, { 0x2e, 0xd7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x626e, gbc.sp());
        EXPECT(0xd10b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd109));
        EXPECT(0xd7, gbc.readMem(0xd10a));
        // 2E 0001
        gbc.setState(0x49af, 0xaca5, 0x77a0, 0x7803, 0xc67d, 0xdda9, 0x0, 0x1);
        gbc.writeMem(0x49af, { 0x2e, 0xf1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xaca5, gbc.sp());
        EXPECT(0x49b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0002
        gbc.setState(0xe57b, 0x4f02, 0x3b20, 0xf37, 0x6e50, 0xb7a8, 0x0, 0x1);
        gbc.writeMem(0xe57b, { 0x2e, 0x8b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4f02, gbc.sp());
        EXPECT(0xe57d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe57b));
        EXPECT(0x8b, gbc.readMem(0xe57c));
        // 2E 0003
        gbc.setState(0x2ee8, 0xa3a5, 0xb220, 0xe66f, 0xfd2d, 0xe6c9, 0x0, 0x0);
        gbc.writeMem(0x2ee8, { 0x2e, 0x4a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa3a5, gbc.sp());
        EXPECT(0x2eea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0004
        gbc.setState(0xb3b8, 0xf0c6, 0x9710, 0x15d1, 0x4250, 0x6141, 0x1, 0x1);
        gbc.writeMem(0xb3b8, { 0x2e, 0xb6 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf0c6, gbc.sp());
        EXPECT(0xb3ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb3b8));
        EXPECT(0xb6, gbc.readMem(0xb3b9));
        // 2E 0005
        gbc.setState(0x621a, 0xdd66, 0xa490, 0x1bf6, 0x83d1, 0xed7a, 0x0, 0x1);
        gbc.writeMem(0x621a, { 0x2e, 0x9c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdd66, gbc.sp());
        EXPECT(0x621c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0006
        gbc.setState(0x7672, 0x1f2c, 0xb3d0, 0x8e63, 0x706c, 0xcf4, 0x0, 0x0);
        gbc.writeMem(0x7672, { 0x2e, 0x29 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1f2c, gbc.sp());
        EXPECT(0x7674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0007
        gbc.setState(0x7c2e, 0xb7d1, 0x2a00, 0xc907, 0xfa5f, 0x81f7, 0x0, 0x0);
        gbc.writeMem(0x7c2e, { 0x2e, 0xf6 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb7d1, gbc.sp());
        EXPECT(0x7c30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0008
        gbc.setState(0xef75, 0xf05a, 0x8090, 0x6ce6, 0xf416, 0x78cb, 0x1, 0x1);
        gbc.writeMem(0xef75, { 0x2e, 0x23 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf05a, gbc.sp());
        EXPECT(0xef77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xef75));
        EXPECT(0x23, gbc.readMem(0xef76));
        // 2E 0009
        gbc.setState(0xd344, 0xbfa6, 0xcb10, 0x49d9, 0xdb4a, 0xf1f8, 0x0, 0x1);
        gbc.writeMem(0xd344, { 0x2e, 0xeb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xbfa6, gbc.sp());
        EXPECT(0xd346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd344));
        EXPECT(0xeb, gbc.readMem(0xd345));
        // 2E 000A
        gbc.setState(0xe208, 0x59e9, 0xe9e0, 0x7c44, 0xdd8c, 0x6c72, 0x1, 0x0);
        gbc.writeMem(0xe208, { 0x2e, 0x37 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x59e9, gbc.sp());
        EXPECT(0xe20a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe208));
        EXPECT(0x37, gbc.readMem(0xe209));
        // 2E 000B
        gbc.setState(0xa571, 0xfbaa, 0x3b60, 0xe44b, 0x282a, 0x2cb5, 0x1, 0x1);
        gbc.writeMem(0xa571, { 0x2e, 0xa });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfbaa, gbc.sp());
        EXPECT(0xa573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa571));
        EXPECT(0xa, gbc.readMem(0xa572));
        // 2E 000C
        gbc.setState(0xe493, 0x9099, 0x940, 0xfa78, 0x39a6, 0x41f4, 0x0, 0x1);
        gbc.writeMem(0xe493, { 0x2e, 0x4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9099, gbc.sp());
        EXPECT(0xe495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe493));
        EXPECT(0x4, gbc.readMem(0xe494));
        // 2E 000D
        gbc.setState(0x23d6, 0xffad, 0x4620, 0x4e8e, 0xa37c, 0x3de3, 0x0, 0x1);
        gbc.writeMem(0x23d6, { 0x2e, 0x69 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xffad, gbc.sp());
        EXPECT(0x23d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 000E
        gbc.setState(0x3bfd, 0xc74f, 0xe280, 0x28ad, 0x40e4, 0xb158, 0x0, 0x1);
        gbc.writeMem(0x3bfd, { 0x2e, 0xc4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc74f, gbc.sp());
        EXPECT(0x3bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0011
        gbc.setState(0xd2a1, 0x99a6, 0xea70, 0x74b4, 0x60fb, 0x1b6, 0x0, 0x1);
        gbc.writeMem(0xd2a1, { 0x2e, 0xa5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x99a6, gbc.sp());
        EXPECT(0xd2a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd2a1));
        EXPECT(0xa5, gbc.readMem(0xd2a2));
        // 2E 0012
        gbc.setState(0x620d, 0x15b9, 0x69b0, 0xac5, 0xc7f, 0x5814, 0x0, 0x0);
        gbc.writeMem(0x620d, { 0x2e, 0x52 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x15b9, gbc.sp());
        EXPECT(0x620f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0013
        gbc.setState(0xd098, 0x81b7, 0x900, 0x6eab, 0xff1e, 0x590b, 0x1, 0x1);
        gbc.writeMem(0xd098, { 0x2e, 0x40 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x81b7, gbc.sp());
        EXPECT(0xd09a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd098));
        EXPECT(0x40, gbc.readMem(0xd099));
        // 2E 0014
        gbc.setState(0x6433, 0xcec1, 0x7940, 0xd002, 0x4816, 0xc0ab, 0x1, 0x1);
        gbc.writeMem(0x6433, { 0x2e, 0xf4 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xcec1, gbc.sp());
        EXPECT(0x6435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0015
        gbc.setState(0x2d64, 0x7228, 0x9480, 0x9edf, 0xf91c, 0x7d0d, 0x0, 0x0);
        gbc.writeMem(0x2d64, { 0x2e, 0xdd });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7228, gbc.sp());
        EXPECT(0x2d66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0016
        gbc.setState(0xa7f3, 0xd1ee, 0x4750, 0xa8e3, 0xa9e2, 0xbfd6, 0x1, 0x0);
        gbc.writeMem(0xa7f3, { 0x2e, 0xbf });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd1ee, gbc.sp());
        EXPECT(0xa7f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa7f3));
        EXPECT(0xbf, gbc.readMem(0xa7f4));
        // 2E 0017
        gbc.setState(0xcb5, 0xafe1, 0xcba0, 0x776e, 0xbe17, 0x2a7a, 0x1, 0x0);
        gbc.writeMem(0xcb5, { 0x2e, 0xcf });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xafe1, gbc.sp());
        EXPECT(0xcb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0018
        gbc.setState(0x915f, 0xec85, 0x2410, 0x7add, 0xa970, 0x3461, 0x0, 0x1);
        gbc.writeMem(0x915f, { 0x2e, 0x54 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xec85, gbc.sp());
        EXPECT(0x9161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x915f));
        EXPECT(0x54, gbc.readMem(0x9160));
        // 2E 0019
        gbc.setState(0xde70, 0x2f57, 0x20c0, 0x5875, 0xd9e5, 0xa517, 0x0, 0x1);
        gbc.writeMem(0xde70, { 0x2e, 0x7f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2f57, gbc.sp());
        EXPECT(0xde72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xde70));
        EXPECT(0x7f, gbc.readMem(0xde71));
        // 2E 001A
        gbc.setState(0x3d2, 0x343e, 0xf190, 0xd505, 0xd208, 0x7a3c, 0x0, 0x1);
        gbc.writeMem(0x3d2, { 0x2e, 0x71 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x343e, gbc.sp());
        EXPECT(0x3d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 001B
        gbc.setState(0xd5c8, 0xc150, 0x3a90, 0xc63a, 0x5efa, 0x5b3c, 0x1, 0x0);
        gbc.writeMem(0xd5c8, { 0x2e, 0xc3 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc150, gbc.sp());
        EXPECT(0xd5ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd5c8));
        EXPECT(0xc3, gbc.readMem(0xd5c9));
        // 2E 001C
        gbc.setState(0x79c7, 0xe1a7, 0x7610, 0x6a6, 0x54bb, 0xb564, 0x0, 0x1);
        gbc.writeMem(0x79c7, { 0x2e, 0xc0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe1a7, gbc.sp());
        EXPECT(0x79c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 001D
        gbc.setState(0x744e, 0x6d95, 0xc730, 0xf0e2, 0xa6bb, 0xeb41, 0x0, 0x0);
        gbc.writeMem(0x744e, { 0x2e, 0x97 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6d95, gbc.sp());
        EXPECT(0x7450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 001E
        gbc.setState(0xe358, 0x2e6a, 0xfc0, 0x6a43, 0xa213, 0xbdc0, 0x0, 0x1);
        gbc.writeMem(0xe358, { 0x2e, 0x68 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2e6a, gbc.sp());
        EXPECT(0xe35a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe358));
        EXPECT(0x68, gbc.readMem(0xe359));
        // 2E 001F
        gbc.setState(0x3771, 0xec38, 0x4610, 0x3ada, 0xe7c1, 0xe9c8, 0x0, 0x0);
        gbc.writeMem(0x3771, { 0x2e, 0x67 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xec38, gbc.sp());
        EXPECT(0x3773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0020
        gbc.setState(0x2031, 0x7c77, 0x2e60, 0x541c, 0x56ba, 0xa795, 0x0, 0x0);
        gbc.writeMem(0x2031, { 0x2e, 0x2f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7c77, gbc.sp());
        EXPECT(0x2033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0021
        gbc.setState(0x4d69, 0x19f8, 0xdaf0, 0xeb4f, 0xc57a, 0xda2a, 0x0, 0x1);
        gbc.writeMem(0x4d69, { 0x2e, 0x12 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x19f8, gbc.sp());
        EXPECT(0x4d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0022
        gbc.setState(0xc6ab, 0xb04e, 0x9ab0, 0x4d1d, 0x1dc7, 0x890d, 0x0, 0x0);
        gbc.writeMem(0xc6ab, { 0x2e, 0x43 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb04e, gbc.sp());
        EXPECT(0xc6ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc6ab));
        EXPECT(0x43, gbc.readMem(0xc6ac));
        // 2E 0023
        gbc.setState(0x3f7a, 0xbce9, 0x1ea0, 0x6822, 0xf65e, 0x608, 0x1, 0x0);
        gbc.writeMem(0x3f7a, { 0x2e, 0x42 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xbce9, gbc.sp());
        EXPECT(0x3f7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0024
        gbc.setState(0xb41e, 0x2961, 0x3800, 0x2eb, 0x5e28, 0xfae4, 0x0, 0x0);
        gbc.writeMem(0xb41e, { 0x2e, 0x7a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2961, gbc.sp());
        EXPECT(0xb420, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb41e));
        EXPECT(0x7a, gbc.readMem(0xb41f));
        // 2E 0025
        gbc.setState(0xb4bd, 0x975b, 0xe590, 0x31b9, 0xd516, 0x5ba4, 0x0, 0x1);
        gbc.writeMem(0xb4bd, { 0x2e, 0x93 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x975b, gbc.sp());
        EXPECT(0xb4bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb4bd));
        EXPECT(0x93, gbc.readMem(0xb4be));
        // 2E 0026
        gbc.setState(0x9a1f, 0xf5a1, 0x5f20, 0xa81f, 0x7536, 0xd9c4, 0x0, 0x0);
        gbc.writeMem(0x9a1f, { 0x2e, 0x4b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf5a1, gbc.sp());
        EXPECT(0x9a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9a1f));
        EXPECT(0x4b, gbc.readMem(0x9a20));
        // 2E 0027
        gbc.setState(0x5191, 0xd3ee, 0xb9d0, 0x907f, 0x69da, 0x7814, 0x1, 0x1);
        gbc.writeMem(0x5191, { 0x2e, 0x60 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd3ee, gbc.sp());
        EXPECT(0x5193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0028
        gbc.setState(0xa896, 0xfc96, 0x9350, 0xbf4, 0x742a, 0xa4e9, 0x1, 0x1);
        gbc.writeMem(0xa896, { 0x2e, 0x90 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xfc96, gbc.sp());
        EXPECT(0xa898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa896));
        EXPECT(0x90, gbc.readMem(0xa897));
        // 2E 0029
        gbc.setState(0xaba3, 0x5256, 0x6a20, 0x71dd, 0x736c, 0xd346, 0x1, 0x0);
        gbc.writeMem(0xaba3, { 0x2e, 0x53 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5256, gbc.sp());
        EXPECT(0xaba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xaba3));
        EXPECT(0x53, gbc.readMem(0xaba4));
        // 2E 002A
        gbc.setState(0xda46, 0xa4d, 0xea60, 0xcef6, 0xb5c9, 0x94e9, 0x1, 0x1);
        gbc.writeMem(0xda46, { 0x2e, 0xe9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa4d, gbc.sp());
        EXPECT(0xda48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xda46));
        EXPECT(0xe9, gbc.readMem(0xda47));
        // 2E 002B
        gbc.setState(0xdc2c, 0xa591, 0x58c0, 0xebb7, 0xcccb, 0x6999, 0x1, 0x1);
        gbc.writeMem(0xdc2c, { 0x2e, 0xf8 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa591, gbc.sp());
        EXPECT(0xdc2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xdc2c));
        EXPECT(0xf8, gbc.readMem(0xdc2d));
        // 2E 002C
        gbc.setState(0xda4a, 0x1f9c, 0x77a0, 0x10bd, 0x3c00, 0xc264, 0x1, 0x1);
        gbc.writeMem(0xda4a, { 0x2e, 0xa4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1f9c, gbc.sp());
        EXPECT(0xda4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xda4a));
        EXPECT(0xa4, gbc.readMem(0xda4b));
        // 2E 002D
        gbc.setState(0x3bf7, 0xcc94, 0xeb20, 0xff4f, 0xa2ab, 0x822, 0x1, 0x1);
        gbc.writeMem(0x3bf7, { 0x2e, 0xd0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcc94, gbc.sp());
        EXPECT(0x3bf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 002E
        gbc.setState(0x872e, 0x2f54, 0x6250, 0x26c1, 0x6eaf, 0xaa46, 0x0, 0x0);
        gbc.writeMem(0x872e, { 0x2e, 0x50 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2f54, gbc.sp());
        EXPECT(0x8730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x872e));
        EXPECT(0x50, gbc.readMem(0x872f));
        // 2E 002F
        gbc.setState(0xaa44, 0x69ca, 0x4e10, 0x8c7c, 0xb30c, 0x2501, 0x0, 0x0);
        gbc.writeMem(0xaa44, { 0x2e, 0xe4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x69ca, gbc.sp());
        EXPECT(0xaa46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xaa44));
        EXPECT(0xe4, gbc.readMem(0xaa45));
        // 2E 0030
        gbc.setState(0xd540, 0x5bd, 0x5480, 0xe70e, 0x249c, 0x8319, 0x0, 0x0);
        gbc.writeMem(0xd540, { 0x2e, 0x7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5bd, gbc.sp());
        EXPECT(0xd542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd540));
        EXPECT(0x7, gbc.readMem(0xd541));
        // 2E 0031
        gbc.setState(0x84f2, 0xc5c2, 0x6a50, 0xce58, 0xba59, 0x5231, 0x1, 0x1);
        gbc.writeMem(0x84f2, { 0x2e, 0xc1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc5c2, gbc.sp());
        EXPECT(0x84f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x84f2));
        EXPECT(0xc1, gbc.readMem(0x84f3));
        // 2E 0032
        gbc.setState(0x1d0a, 0xc002, 0xc870, 0xdfa6, 0x8ecf, 0x7581, 0x0, 0x1);
        gbc.writeMem(0x1d0a, { 0x2e, 0x23 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc002, gbc.sp());
        EXPECT(0x1d0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0033
        gbc.setState(0xd0c2, 0xcdf9, 0x7520, 0x5eee, 0x39e1, 0xb76d, 0x0, 0x0);
        gbc.writeMem(0xd0c2, { 0x2e, 0x6b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcdf9, gbc.sp());
        EXPECT(0xd0c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd0c2));
        EXPECT(0x6b, gbc.readMem(0xd0c3));
        // 2E 0034
        gbc.setState(0x1591, 0x7123, 0xbd90, 0x86bb, 0x84ba, 0xc1dc, 0x1, 0x1);
        gbc.writeMem(0x1591, { 0x2e, 0xa3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7123, gbc.sp());
        EXPECT(0x1593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0035
        gbc.setState(0x85e4, 0x6857, 0x7470, 0xa2f5, 0x112a, 0x2d73, 0x0, 0x1);
        gbc.writeMem(0x85e4, { 0x2e, 0x61 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6857, gbc.sp());
        EXPECT(0x85e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x85e4));
        EXPECT(0x61, gbc.readMem(0x85e5));
        // 2E 0036
        gbc.setState(0xc45c, 0x877, 0x8140, 0xdea6, 0x84fb, 0x8b70, 0x1, 0x1);
        gbc.writeMem(0xc45c, { 0x2e, 0xa7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x877, gbc.sp());
        EXPECT(0xc45e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc45c));
        EXPECT(0xa7, gbc.readMem(0xc45d));
        // 2E 0037
        gbc.setState(0x4f3e, 0x942a, 0x6830, 0x4b3c, 0xb1c0, 0x2c86, 0x1, 0x0);
        gbc.writeMem(0x4f3e, { 0x2e, 0x46 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x942a, gbc.sp());
        EXPECT(0x4f40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0038
        gbc.setState(0x4eac, 0xb223, 0xbba0, 0x70d0, 0x8552, 0xcd11, 0x0, 0x0);
        gbc.writeMem(0x4eac, { 0x2e, 0x2f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb223, gbc.sp());
        EXPECT(0x4eae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0039
        gbc.setState(0x2f5f, 0x5880, 0x5d30, 0xd3ed, 0x3f25, 0xf637, 0x0, 0x1);
        gbc.writeMem(0x2f5f, { 0x2e, 0xe7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5880, gbc.sp());
        EXPECT(0x2f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 003A
        gbc.setState(0xde60, 0xb6a6, 0x9090, 0x875d, 0xfb98, 0xf938, 0x1, 0x0);
        gbc.writeMem(0xde60, { 0x2e, 0x8b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb6a6, gbc.sp());
        EXPECT(0xde62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xde60));
        EXPECT(0x8b, gbc.readMem(0xde61));
        // 2E 003B
        gbc.setState(0x5e40, 0x4906, 0xb80, 0xb58a, 0x4518, 0x33f5, 0x0, 0x1);
        gbc.writeMem(0x5e40, { 0x2e, 0x62 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4906, gbc.sp());
        EXPECT(0x5e42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 003C
        gbc.setState(0x4b35, 0xddc3, 0x84a0, 0xafa1, 0x54ab, 0x165c, 0x1, 0x1);
        gbc.writeMem(0x4b35, { 0x2e, 0xfc });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xddc3, gbc.sp());
        EXPECT(0x4b37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 003D
        gbc.setState(0x5f02, 0x1984, 0x1630, 0xf390, 0x5212, 0x5c32, 0x0, 0x1);
        gbc.writeMem(0x5f02, { 0x2e, 0x7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1984, gbc.sp());
        EXPECT(0x5f04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 003E
        gbc.setState(0xd8fb, 0x232, 0xd110, 0xc79b, 0xaeea, 0xc42c, 0x0, 0x0);
        gbc.writeMem(0xd8fb, { 0x2e, 0x45 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x232, gbc.sp());
        EXPECT(0xd8fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd8fb));
        EXPECT(0x45, gbc.readMem(0xd8fc));
        // 2E 003F
        gbc.setState(0xa067, 0x9432, 0x1be0, 0x40b3, 0x628a, 0xc6ab, 0x1, 0x0);
        gbc.writeMem(0xa067, { 0x2e, 0x44 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9432, gbc.sp());
        EXPECT(0xa069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa067));
        EXPECT(0x44, gbc.readMem(0xa068));
        // 2E 0040
        gbc.setState(0x14a8, 0xcb66, 0x69c0, 0xdb1, 0x2e61, 0x362a, 0x1, 0x1);
        gbc.writeMem(0x14a8, { 0x2e, 0xe8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xcb66, gbc.sp());
        EXPECT(0x14aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0042
        gbc.setState(0x6fce, 0x2e40, 0x7710, 0x6ccf, 0x9ef1, 0x4fd, 0x0, 0x1);
        gbc.writeMem(0x6fce, { 0x2e, 0x2f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2e40, gbc.sp());
        EXPECT(0x6fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0043
        gbc.setState(0xdca3, 0xa6e1, 0x29b0, 0x1eba, 0x5fb9, 0x4c46, 0x1, 0x1);
        gbc.writeMem(0xdca3, { 0x2e, 0x66 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa6e1, gbc.sp());
        EXPECT(0xdca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xdca3));
        EXPECT(0x66, gbc.readMem(0xdca4));
        // 2E 0044
        gbc.setState(0x90b5, 0x6ce0, 0x12a0, 0xb33f, 0x4f64, 0x42bf, 0x1, 0x1);
        gbc.writeMem(0x90b5, { 0x2e, 0x40 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6ce0, gbc.sp());
        EXPECT(0x90b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x90b5));
        EXPECT(0x40, gbc.readMem(0x90b6));
        // 2E 0045
        gbc.setState(0x9bc1, 0xa3e3, 0x96d0, 0x3eaa, 0x2248, 0x10e9, 0x1, 0x0);
        gbc.writeMem(0x9bc1, { 0x2e, 0xb0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa3e3, gbc.sp());
        EXPECT(0x9bc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9bc1));
        EXPECT(0xb0, gbc.readMem(0x9bc2));
        // 2E 0046
        gbc.setState(0xb0a, 0x2ef2, 0x3970, 0x7edd, 0xbd9e, 0x8741, 0x1, 0x0);
        gbc.writeMem(0xb0a, { 0x2e, 0xc5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2ef2, gbc.sp());
        EXPECT(0xb0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0047
        gbc.setState(0xe0e4, 0xbadf, 0xf110, 0xe594, 0x1d45, 0x594f, 0x0, 0x1);
        gbc.writeMem(0xe0e4, { 0x2e, 0xc1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xbadf, gbc.sp());
        EXPECT(0xe0e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe0e4));
        EXPECT(0xc1, gbc.readMem(0xe0e5));
        // 2E 0048
        gbc.setState(0x49d5, 0xc8c5, 0xd8b0, 0x596f, 0x79bc, 0x3a67, 0x0, 0x1);
        gbc.writeMem(0x49d5, { 0x2e, 0x8e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc8c5, gbc.sp());
        EXPECT(0x49d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0049
        gbc.setState(0x7ffb, 0x2766, 0x7b10, 0x901, 0x3ca4, 0xd023, 0x1, 0x0);
        gbc.writeMem(0x7ffb, { 0x2e, 0xbb });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2766, gbc.sp());
        EXPECT(0x7ffd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 004A
        gbc.setState(0x698f, 0x5ae4, 0xcd00, 0xc5c9, 0x219e, 0x5c8a, 0x0, 0x0);
        gbc.writeMem(0x698f, { 0x2e, 0xf });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5ae4, gbc.sp());
        EXPECT(0x6991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 004C
        gbc.setState(0x660d, 0xc1d8, 0x4ef0, 0x6ca9, 0xda23, 0xb423, 0x1, 0x1);
        gbc.writeMem(0x660d, { 0x2e, 0x97 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc1d8, gbc.sp());
        EXPECT(0x660f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 004D
        gbc.setState(0x5fb2, 0x8559, 0x7730, 0xda17, 0x98b1, 0x9041, 0x0, 0x0);
        gbc.writeMem(0x5fb2, { 0x2e, 0xfb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8559, gbc.sp());
        EXPECT(0x5fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 004E
        gbc.setState(0xbedf, 0x84cb, 0xac30, 0x2888, 0x5815, 0x4bf4, 0x1, 0x0);
        gbc.writeMem(0xbedf, { 0x2e, 0x8f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x84cb, gbc.sp());
        EXPECT(0xbee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbedf));
        EXPECT(0x8f, gbc.readMem(0xbee0));
        // 2E 004F
        gbc.setState(0x59bd, 0x368b, 0xd3b0, 0x7b5e, 0x7c3d, 0x5067, 0x0, 0x1);
        gbc.writeMem(0x59bd, { 0x2e, 0x9f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x368b, gbc.sp());
        EXPECT(0x59bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0050
        gbc.setState(0xab5e, 0x9a7f, 0xd280, 0x72f7, 0x5a9c, 0x7e6e, 0x1, 0x1);
        gbc.writeMem(0xab5e, { 0x2e, 0xea });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9a7f, gbc.sp());
        EXPECT(0xab60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xab5e));
        EXPECT(0xea, gbc.readMem(0xab5f));
        // 2E 0051
        gbc.setState(0x77ac, 0x5166, 0x3320, 0xe5d4, 0x7f64, 0x4098, 0x0, 0x1);
        gbc.writeMem(0x77ac, { 0x2e, 0xad });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5166, gbc.sp());
        EXPECT(0x77ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0052
        gbc.setState(0x9ef, 0x3b93, 0x4b80, 0x989a, 0xae70, 0x2450, 0x0, 0x1);
        gbc.writeMem(0x9ef, { 0x2e, 0xd9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3b93, gbc.sp());
        EXPECT(0x9f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0053
        gbc.setState(0xba1e, 0x3ec5, 0x9900, 0x7d39, 0x7c1, 0xa9b4, 0x0, 0x1);
        gbc.writeMem(0xba1e, { 0x2e, 0x4d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3ec5, gbc.sp());
        EXPECT(0xba20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xba1e));
        EXPECT(0x4d, gbc.readMem(0xba1f));
        // 2E 0054
        gbc.setState(0x791b, 0x8afb, 0xf870, 0x7f39, 0xce61, 0xdca3, 0x0, 0x1);
        gbc.writeMem(0x791b, { 0x2e, 0xa9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8afb, gbc.sp());
        EXPECT(0x791d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0055
        gbc.setState(0x3873, 0xaa28, 0x4cc0, 0xcf58, 0x156a, 0x23cb, 0x0, 0x1);
        gbc.writeMem(0x3873, { 0x2e, 0x6a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xaa28, gbc.sp());
        EXPECT(0x3875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0056
        gbc.setState(0x8293, 0xf225, 0x6f40, 0xbe1, 0xe6b4, 0x4577, 0x1, 0x0);
        gbc.writeMem(0x8293, { 0x2e, 0x2a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf225, gbc.sp());
        EXPECT(0x8295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8293));
        EXPECT(0x2a, gbc.readMem(0x8294));
        // 2E 0057
        gbc.setState(0xab15, 0x16bc, 0xe830, 0x338d, 0xe4ef, 0xe41f, 0x1, 0x0);
        gbc.writeMem(0xab15, { 0x2e, 0xaa });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x16bc, gbc.sp());
        EXPECT(0xab17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xab15));
        EXPECT(0xaa, gbc.readMem(0xab16));
        // 2E 0058
        gbc.setState(0xb5ee, 0xf6c3, 0x3e20, 0x6e53, 0xab99, 0x8b3, 0x0, 0x0);
        gbc.writeMem(0xb5ee, { 0x2e, 0xb3 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf6c3, gbc.sp());
        EXPECT(0xb5f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb5ee));
        EXPECT(0xb3, gbc.readMem(0xb5ef));
        // 2E 0059
        gbc.setState(0xd192, 0x79a7, 0x9c70, 0xda6d, 0x2153, 0x61ac, 0x0, 0x1);
        gbc.writeMem(0xd192, { 0x2e, 0xe });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x79a7, gbc.sp());
        EXPECT(0xd194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd192));
        EXPECT(0xe, gbc.readMem(0xd193));
        // 2E 005A
        gbc.setState(0x98d, 0xa46c, 0xd4a0, 0x7e02, 0xf439, 0x195d, 0x0, 0x0);
        gbc.writeMem(0x98d, { 0x2e, 0x80 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa46c, gbc.sp());
        EXPECT(0x98f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 005B
        gbc.setState(0xd62b, 0xf29, 0x1190, 0x975c, 0xa6b, 0xf04f, 0x0, 0x1);
        gbc.writeMem(0xd62b, { 0x2e, 0xb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf29, gbc.sp());
        EXPECT(0xd62d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd62b));
        EXPECT(0xb, gbc.readMem(0xd62c));
        // 2E 005C
        gbc.setState(0xcf8b, 0x4d36, 0x6960, 0x8001, 0xa9b3, 0xee7f, 0x1, 0x1);
        gbc.writeMem(0xcf8b, { 0x2e, 0x95 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4d36, gbc.sp());
        EXPECT(0xcf8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xcf8b));
        EXPECT(0x95, gbc.readMem(0xcf8c));
        // 2E 005D
        gbc.setState(0xb77c, 0x88c7, 0x6f50, 0x8513, 0xeb86, 0xa08c, 0x1, 0x0);
        gbc.writeMem(0xb77c, { 0x2e, 0xd5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x88c7, gbc.sp());
        EXPECT(0xb77e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb77c));
        EXPECT(0xd5, gbc.readMem(0xb77d));
        // 2E 005E
        gbc.setState(0x2d04, 0xfbf6, 0x100, 0xedb0, 0x8150, 0xa492, 0x1, 0x1);
        gbc.writeMem(0x2d04, { 0x2e, 0x10 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xfbf6, gbc.sp());
        EXPECT(0x2d06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 005F
        gbc.setState(0x6bfa, 0xa338, 0xd6a0, 0xb20f, 0x55d, 0x1610, 0x0, 0x0);
        gbc.writeMem(0x6bfa, { 0x2e, 0x6a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa338, gbc.sp());
        EXPECT(0x6bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0060
        gbc.setState(0x2b4d, 0xd1b2, 0x1c50, 0xedeb, 0xdbf6, 0xad9a, 0x1, 0x0);
        gbc.writeMem(0x2b4d, { 0x2e, 0xa8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd1b2, gbc.sp());
        EXPECT(0x2b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0061
        gbc.setState(0x757c, 0xe698, 0xcdc0, 0x8740, 0xe90b, 0x3387, 0x0, 0x0);
        gbc.writeMem(0x757c, { 0x2e, 0x14 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe698, gbc.sp());
        EXPECT(0x757e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0062
        gbc.setState(0x6e09, 0xffc0, 0xf20, 0x735b, 0xf65d, 0xcae4, 0x0, 0x1);
        gbc.writeMem(0x6e09, { 0x2e, 0x5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xffc0, gbc.sp());
        EXPECT(0x6e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0063
        gbc.setState(0x3969, 0x7e31, 0x4e60, 0x3dc5, 0x8c10, 0x5f7a, 0x0, 0x1);
        gbc.writeMem(0x3969, { 0x2e, 0x6b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7e31, gbc.sp());
        EXPECT(0x396b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0064
        gbc.setState(0xd01a, 0x972f, 0x8a40, 0xbdb, 0x155f, 0xc6c6, 0x1, 0x1);
        gbc.writeMem(0xd01a, { 0x2e, 0x9c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x972f, gbc.sp());
        EXPECT(0xd01c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd01a));
        EXPECT(0x9c, gbc.readMem(0xd01b));
        // 2E 0065
        gbc.setState(0xdc4e, 0x2b29, 0x2780, 0x8e75, 0x9128, 0xf678, 0x0, 0x0);
        gbc.writeMem(0xdc4e, { 0x2e, 0x5a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2b29, gbc.sp());
        EXPECT(0xdc50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xdc4e));
        EXPECT(0x5a, gbc.readMem(0xdc4f));
        // 2E 0066
        gbc.setState(0xea80, 0xa659, 0x28e0, 0x52b5, 0x36af, 0x869e, 0x0, 0x1);
        gbc.writeMem(0xea80, { 0x2e, 0xd7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa659, gbc.sp());
        EXPECT(0xea82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xea80));
        EXPECT(0xd7, gbc.readMem(0xea81));
        // 2E 0067
        gbc.setState(0x6d97, 0xf57e, 0x1780, 0x316a, 0x3928, 0x8537, 0x0, 0x0);
        gbc.writeMem(0x6d97, { 0x2e, 0xa8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf57e, gbc.sp());
        EXPECT(0x6d99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0068
        gbc.setState(0xecad, 0x1c36, 0xce10, 0xc0ce, 0xb439, 0x7ea4, 0x0, 0x0);
        gbc.writeMem(0xecad, { 0x2e, 0x74 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1c36, gbc.sp());
        EXPECT(0xecaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xecad));
        EXPECT(0x74, gbc.readMem(0xecae));
        // 2E 0069
        gbc.setState(0x5cfd, 0x620e, 0xea50, 0xf27f, 0x8a8f, 0xb6d4, 0x0, 0x0);
        gbc.writeMem(0x5cfd, { 0x2e, 0x3f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x620e, gbc.sp());
        EXPECT(0x5cff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 006A
        gbc.setState(0x9bf8, 0x353a, 0x1e50, 0x7af1, 0x2d40, 0x8739, 0x1, 0x0);
        gbc.writeMem(0x9bf8, { 0x2e, 0x99 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x353a, gbc.sp());
        EXPECT(0x9bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9bf8));
        EXPECT(0x99, gbc.readMem(0x9bf9));
        // 2E 006B
        gbc.setState(0x6d89, 0x6353, 0x8d80, 0xe678, 0xa0cb, 0xfd4c, 0x0, 0x0);
        gbc.writeMem(0x6d89, { 0x2e, 0xe });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6353, gbc.sp());
        EXPECT(0x6d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 006C
        gbc.setState(0xb82, 0x8113, 0x38a0, 0xd887, 0x24b2, 0xe08b, 0x1, 0x0);
        gbc.writeMem(0xb82, { 0x2e, 0xb0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8113, gbc.sp());
        EXPECT(0xb84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 006D
        gbc.setState(0x4973, 0xfee6, 0x56f0, 0xf3da, 0x5a0, 0xcd90, 0x0, 0x0);
        gbc.writeMem(0x4973, { 0x2e, 0x39 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xfee6, gbc.sp());
        EXPECT(0x4975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 006E
        gbc.setState(0x4a62, 0x3ea, 0x4b80, 0xf8a1, 0x8446, 0x9652, 0x0, 0x1);
        gbc.writeMem(0x4a62, { 0x2e, 0x73 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3ea, gbc.sp());
        EXPECT(0x4a64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 006F
        gbc.setState(0xbef9, 0xd99d, 0xd430, 0xf19a, 0x8412, 0x92c5, 0x0, 0x0);
        gbc.writeMem(0xbef9, { 0x2e, 0x24 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd99d, gbc.sp());
        EXPECT(0xbefb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbef9));
        EXPECT(0x24, gbc.readMem(0xbefa));
        // 2E 0070
        gbc.setState(0xc688, 0x9ca4, 0x9290, 0x6be, 0xf609, 0x145a, 0x0, 0x1);
        gbc.writeMem(0xc688, { 0x2e, 0xa3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9ca4, gbc.sp());
        EXPECT(0xc68a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc688));
        EXPECT(0xa3, gbc.readMem(0xc689));
        // 2E 0071
        gbc.setState(0x352a, 0xbbd3, 0xcb60, 0x8682, 0x6ef2, 0x6bdb, 0x1, 0x0);
        gbc.writeMem(0x352a, { 0x2e, 0xea });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbbd3, gbc.sp());
        EXPECT(0x352c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0072
        gbc.setState(0x504a, 0x94cc, 0xf2c0, 0xcec6, 0xc017, 0x3fd6, 0x1, 0x0);
        gbc.writeMem(0x504a, { 0x2e, 0xc4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x94cc, gbc.sp());
        EXPECT(0x504c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0073
        gbc.setState(0x3818, 0x680e, 0x5dc0, 0xf9a4, 0x3d54, 0xb1e2, 0x0, 0x0);
        gbc.writeMem(0x3818, { 0x2e, 0x1b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x680e, gbc.sp());
        EXPECT(0x381a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0074
        gbc.setState(0x2c29, 0xab58, 0x98d0, 0xed42, 0x8864, 0xa3b6, 0x1, 0x1);
        gbc.writeMem(0x2c29, { 0x2e, 0x8e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xab58, gbc.sp());
        EXPECT(0x2c2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0075
        gbc.setState(0x9283, 0x861c, 0xf3b0, 0x5903, 0xa813, 0x6d99, 0x1, 0x1);
        gbc.writeMem(0x9283, { 0x2e, 0xb6 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x861c, gbc.sp());
        EXPECT(0x9285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9283));
        EXPECT(0xb6, gbc.readMem(0x9284));
        // 2E 0076
        gbc.setState(0xdb2d, 0xb7be, 0x5240, 0xc788, 0x4127, 0x98b, 0x0, 0x1);
        gbc.writeMem(0xdb2d, { 0x2e, 0x5e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb7be, gbc.sp());
        EXPECT(0xdb2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xdb2d));
        EXPECT(0x5e, gbc.readMem(0xdb2e));
        // 2E 0077
        gbc.setState(0x994d, 0xf4e1, 0xdce0, 0x3f52, 0x5bd1, 0x25c2, 0x0, 0x1);
        gbc.writeMem(0x994d, { 0x2e, 0xb2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf4e1, gbc.sp());
        EXPECT(0x994f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x994d));
        EXPECT(0xb2, gbc.readMem(0x994e));
        // 2E 0078
        gbc.setState(0x55b9, 0x738d, 0xf0f0, 0xf37, 0xffe5, 0x274a, 0x1, 0x0);
        gbc.writeMem(0x55b9, { 0x2e, 0xfe });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x738d, gbc.sp());
        EXPECT(0x55bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0079
        gbc.setState(0x91b6, 0x9316, 0x4ed0, 0xab5, 0x6ba, 0x9b9d, 0x0, 0x0);
        gbc.writeMem(0x91b6, { 0x2e, 0x7a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9316, gbc.sp());
        EXPECT(0x91b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x91b6));
        EXPECT(0x7a, gbc.readMem(0x91b7));
        // 2E 007A
        gbc.setState(0x790a, 0xc512, 0xfb00, 0xf8e1, 0x5303, 0xdf9, 0x0, 0x1);
        gbc.writeMem(0x790a, { 0x2e, 0x16 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc512, gbc.sp());
        EXPECT(0x790c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 007B
        gbc.setState(0xdb00, 0x6acc, 0xf4b0, 0xdf8b, 0x8c7c, 0xea9a, 0x1, 0x1);
        gbc.writeMem(0xdb00, { 0x2e, 0xee });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6acc, gbc.sp());
        EXPECT(0xdb02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xdb00));
        EXPECT(0xee, gbc.readMem(0xdb01));
        // 2E 007C
        gbc.setState(0x398a, 0xef83, 0xae30, 0x50ec, 0xc2b8, 0x3512, 0x1, 0x1);
        gbc.writeMem(0x398a, { 0x2e, 0x5c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xef83, gbc.sp());
        EXPECT(0x398c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 007D
        gbc.setState(0xcfb2, 0x4c8f, 0x2630, 0xdafe, 0x8c99, 0xda3a, 0x0, 0x0);
        gbc.writeMem(0xcfb2, { 0x2e, 0x2d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4c8f, gbc.sp());
        EXPECT(0xcfb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xcfb2));
        EXPECT(0x2d, gbc.readMem(0xcfb3));
        // 2E 007E
        gbc.setState(0xcbf0, 0xcafa, 0x5aa0, 0x2fef, 0x1ef3, 0x7dd2, 0x0, 0x1);
        gbc.writeMem(0xcbf0, { 0x2e, 0xd6 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xcafa, gbc.sp());
        EXPECT(0xcbf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xcbf0));
        EXPECT(0xd6, gbc.readMem(0xcbf1));
        // 2E 007F
        gbc.setState(0x744a, 0x51dd, 0x3270, 0xbb2b, 0xe0c7, 0xf9e8, 0x0, 0x0);
        gbc.writeMem(0x744a, { 0x2e, 0x77 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x51dd, gbc.sp());
        EXPECT(0x744c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0080
        gbc.setState(0xd9cf, 0xad77, 0xf340, 0x7fb7, 0x3608, 0xcde5, 0x1, 0x1);
        gbc.writeMem(0xd9cf, { 0x2e, 0xe9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xad77, gbc.sp());
        EXPECT(0xd9d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd9cf));
        EXPECT(0xe9, gbc.readMem(0xd9d0));
        // 2E 0081
        gbc.setState(0x91c, 0x4936, 0x51d0, 0xa94b, 0xcd6c, 0x4bcb, 0x0, 0x0);
        gbc.writeMem(0x91c, { 0x2e, 0x95 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4936, gbc.sp());
        EXPECT(0x91e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0082
        gbc.setState(0x8eef, 0xbb7d, 0xf150, 0x4996, 0xa258, 0x62a1, 0x1, 0x0);
        gbc.writeMem(0x8eef, { 0x2e, 0xb9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbb7d, gbc.sp());
        EXPECT(0x8ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8eef));
        EXPECT(0xb9, gbc.readMem(0x8ef0));
        // 2E 0083
        gbc.setState(0x534b, 0xd464, 0xefa0, 0x2a9, 0x7316, 0xdde5, 0x1, 0x1);
        gbc.writeMem(0x534b, { 0x2e, 0x52 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd464, gbc.sp());
        EXPECT(0x534d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0084
        gbc.setState(0xec75, 0x11b5, 0xbd40, 0x6672, 0xfffd, 0xe88, 0x0, 0x0);
        gbc.writeMem(0xec75, { 0x2e, 0x63 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x11b5, gbc.sp());
        EXPECT(0xec77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xec75));
        EXPECT(0x63, gbc.readMem(0xec76));
        // 2E 0085
        gbc.setState(0x1e0a, 0x9d70, 0x1780, 0x6cd0, 0x84eb, 0x84, 0x0, 0x1);
        gbc.writeMem(0x1e0a, { 0x2e, 0x7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9d70, gbc.sp());
        EXPECT(0x1e0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0086
        gbc.setState(0x598c, 0x77c4, 0x6a0, 0x2dd0, 0x5e74, 0x5083, 0x0, 0x0);
        gbc.writeMem(0x598c, { 0x2e, 0x2b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x77c4, gbc.sp());
        EXPECT(0x598e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0087
        gbc.setState(0x1c0a, 0x17d5, 0xcdf0, 0x6267, 0xcdd, 0xb97, 0x0, 0x0);
        gbc.writeMem(0x1c0a, { 0x2e, 0xfa });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x17d5, gbc.sp());
        EXPECT(0x1c0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0088
        gbc.setState(0x3d1d, 0x6cf6, 0x4660, 0x6a9b, 0x8b05, 0x8b3e, 0x1, 0x0);
        gbc.writeMem(0x3d1d, { 0x2e, 0x22 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6cf6, gbc.sp());
        EXPECT(0x3d1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0089
        gbc.setState(0x9133, 0xcfb5, 0x9c00, 0x95b0, 0x8b1a, 0x5b5d, 0x0, 0x1);
        gbc.writeMem(0x9133, { 0x2e, 0x67 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xcfb5, gbc.sp());
        EXPECT(0x9135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9133));
        EXPECT(0x67, gbc.readMem(0x9134));
        // 2E 008A
        gbc.setState(0xc1ae, 0x8c3e, 0xd590, 0x7f7e, 0xe5ae, 0xf628, 0x1, 0x1);
        gbc.writeMem(0xc1ae, { 0x2e, 0x19 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8c3e, gbc.sp());
        EXPECT(0xc1b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc1ae));
        EXPECT(0x19, gbc.readMem(0xc1af));
        // 2E 008B
        gbc.setState(0x2b58, 0xa6dd, 0x3d50, 0xdbc8, 0xdfda, 0x6164, 0x1, 0x1);
        gbc.writeMem(0x2b58, { 0x2e, 0x1c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa6dd, gbc.sp());
        EXPECT(0x2b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 008C
        gbc.setState(0xbebd, 0xbf94, 0x4710, 0xc2ac, 0x480e, 0xdde9, 0x0, 0x0);
        gbc.writeMem(0xbebd, { 0x2e, 0x9d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xbf94, gbc.sp());
        EXPECT(0xbebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbebd));
        EXPECT(0x9d, gbc.readMem(0xbebe));
        // 2E 008D
        gbc.setState(0x2934, 0x514b, 0x9960, 0x216f, 0xcc85, 0x5322, 0x0, 0x1);
        gbc.writeMem(0x2934, { 0x2e, 0xcc });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x514b, gbc.sp());
        EXPECT(0x2936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 008E
        gbc.setState(0x3c09, 0x7e05, 0x46f0, 0x585a, 0x7cb0, 0x3f25, 0x1, 0x1);
        gbc.writeMem(0x3c09, { 0x2e, 0xe1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7e05, gbc.sp());
        EXPECT(0x3c0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 008F
        gbc.setState(0x6dc1, 0x709d, 0x5ae0, 0xf1be, 0x3bd3, 0x9114, 0x0, 0x0);
        gbc.writeMem(0x6dc1, { 0x2e, 0xf2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x709d, gbc.sp());
        EXPECT(0x6dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0090
        gbc.setState(0xbba, 0x16f1, 0x9840, 0xd5aa, 0xcd66, 0xfb8a, 0x0, 0x0);
        gbc.writeMem(0xbba, { 0x2e, 0xfa });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x16f1, gbc.sp());
        EXPECT(0xbbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0091
        gbc.setState(0x3155, 0x666a, 0x4e40, 0x1aa7, 0x3ae7, 0x433c, 0x1, 0x1);
        gbc.writeMem(0x3155, { 0x2e, 0x3f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x666a, gbc.sp());
        EXPECT(0x3157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0092
        gbc.setState(0x2272, 0x43d3, 0xb470, 0xae8c, 0x10f8, 0x504a, 0x1, 0x1);
        gbc.writeMem(0x2272, { 0x2e, 0xb7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x43d3, gbc.sp());
        EXPECT(0x2274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0093
        gbc.setState(0x1dfd, 0x6e42, 0xb2f0, 0xe5ae, 0xa76f, 0xaf6d, 0x0, 0x0);
        gbc.writeMem(0x1dfd, { 0x2e, 0x80 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6e42, gbc.sp());
        EXPECT(0x1dff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0094
        gbc.setState(0xaa8b, 0xb055, 0x5e50, 0x76d0, 0x7c6, 0x674f, 0x0, 0x0);
        gbc.writeMem(0xaa8b, { 0x2e, 0x24 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb055, gbc.sp());
        EXPECT(0xaa8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xaa8b));
        EXPECT(0x24, gbc.readMem(0xaa8c));
        // 2E 0095
        gbc.setState(0x9211, 0xc8bc, 0xc270, 0x3974, 0x70e5, 0x913, 0x0, 0x0);
        gbc.writeMem(0x9211, { 0x2e, 0xe2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc8bc, gbc.sp());
        EXPECT(0x9213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9211));
        EXPECT(0xe2, gbc.readMem(0x9212));
        // 2E 0096
        gbc.setState(0xdce7, 0x42c4, 0xb150, 0xf8d3, 0xe1d2, 0xb8a7, 0x0, 0x1);
        gbc.writeMem(0xdce7, { 0x2e, 0x69 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x42c4, gbc.sp());
        EXPECT(0xdce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xdce7));
        EXPECT(0x69, gbc.readMem(0xdce8));
        // 2E 0097
        gbc.setState(0xab72, 0xc5c3, 0x6e50, 0x5ff5, 0xf5c8, 0x63b7, 0x1, 0x1);
        gbc.writeMem(0xab72, { 0x2e, 0x68 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc5c3, gbc.sp());
        EXPECT(0xab74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xab72));
        EXPECT(0x68, gbc.readMem(0xab73));
        // 2E 0098
        gbc.setState(0xd660, 0x4512, 0xa900, 0xf194, 0x66b4, 0xbf97, 0x1, 0x0);
        gbc.writeMem(0xd660, { 0x2e, 0xb7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4512, gbc.sp());
        EXPECT(0xd662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd660));
        EXPECT(0xb7, gbc.readMem(0xd661));
        // 2E 0099
        gbc.setState(0xe2d2, 0x7a0, 0xc1a0, 0x2c55, 0xfee7, 0x7973, 0x0, 0x0);
        gbc.writeMem(0xe2d2, { 0x2e, 0xab });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7a0, gbc.sp());
        EXPECT(0xe2d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe2d2));
        EXPECT(0xab, gbc.readMem(0xe2d3));
        // 2E 009A
        gbc.setState(0xe132, 0xd762, 0x7ee0, 0xaa87, 0x5b3c, 0xe28d, 0x0, 0x0);
        gbc.writeMem(0xe132, { 0x2e, 0x5b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd762, gbc.sp());
        EXPECT(0xe134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe132));
        EXPECT(0x5b, gbc.readMem(0xe133));
        // 2E 009B
        gbc.setState(0x76d8, 0xda5a, 0xc8f0, 0x12bf, 0x3c83, 0x526d, 0x0, 0x1);
        gbc.writeMem(0x76d8, { 0x2e, 0xea });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xda5a, gbc.sp());
        EXPECT(0x76da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 009C
        gbc.setState(0xc7dd, 0xd277, 0xdbc0, 0xe430, 0x1e73, 0x2d0a, 0x0, 0x1);
        gbc.writeMem(0xc7dd, { 0x2e, 0xf7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd277, gbc.sp());
        EXPECT(0xc7df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc7dd));
        EXPECT(0xf7, gbc.readMem(0xc7de));
        // 2E 009D
        gbc.setState(0x8211, 0x8669, 0x7c50, 0xd7df, 0x74c8, 0x3b5e, 0x0, 0x1);
        gbc.writeMem(0x8211, { 0x2e, 0x71 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8669, gbc.sp());
        EXPECT(0x8213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8211));
        EXPECT(0x71, gbc.readMem(0x8212));
        // 2E 009E
        gbc.setState(0x8c13, 0x14d9, 0x7ad0, 0xc1c2, 0xd107, 0xb400, 0x1, 0x0);
        gbc.writeMem(0x8c13, { 0x2e, 0x3a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x14d9, gbc.sp());
        EXPECT(0x8c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8c13));
        EXPECT(0x3a, gbc.readMem(0x8c14));
        // 2E 009F
        gbc.setState(0x7e0e, 0xd1e9, 0x480, 0xf1d1, 0x934b, 0x2ded, 0x1, 0x0);
        gbc.writeMem(0x7e0e, { 0x2e, 0xc9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd1e9, gbc.sp());
        EXPECT(0x7e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00A0
        gbc.setState(0x566d, 0x1243, 0xc440, 0x2175, 0xae63, 0x3c99, 0x1, 0x1);
        gbc.writeMem(0x566d, { 0x2e, 0x9e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1243, gbc.sp());
        EXPECT(0x566f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00A1
        gbc.setState(0x62d3, 0xbb6a, 0xede0, 0xa937, 0x1f2e, 0x8ce1, 0x1, 0x0);
        gbc.writeMem(0x62d3, { 0x2e, 0x89 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbb6a, gbc.sp());
        EXPECT(0x62d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00A2
        gbc.setState(0x889, 0x614f, 0x87b0, 0x155c, 0xb7f2, 0x3c6a, 0x0, 0x0);
        gbc.writeMem(0x889, { 0x2e, 0x3 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x614f, gbc.sp());
        EXPECT(0x88b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00A3
        gbc.setState(0xc228, 0x93c9, 0x44f0, 0x76a1, 0x9d51, 0x5969, 0x1, 0x0);
        gbc.writeMem(0xc228, { 0x2e, 0x19 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x93c9, gbc.sp());
        EXPECT(0xc22a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc228));
        EXPECT(0x19, gbc.readMem(0xc229));
        // 2E 00A4
        gbc.setState(0xef1d, 0x7367, 0x9200, 0x5e6b, 0xced6, 0xf30c, 0x1, 0x1);
        gbc.writeMem(0xef1d, { 0x2e, 0xc2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7367, gbc.sp());
        EXPECT(0xef1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xef1d));
        EXPECT(0xc2, gbc.readMem(0xef1e));
        // 2E 00A5
        gbc.setState(0x8bef, 0x391c, 0x60d0, 0x5f59, 0x84b1, 0x168, 0x1, 0x0);
        gbc.writeMem(0x8bef, { 0x2e, 0xa3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x391c, gbc.sp());
        EXPECT(0x8bf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8bef));
        EXPECT(0xa3, gbc.readMem(0x8bf0));
        // 2E 00A6
        gbc.setState(0x1c43, 0xf024, 0x6af0, 0xd841, 0xd7f5, 0x265e, 0x1, 0x1);
        gbc.writeMem(0x1c43, { 0x2e, 0xe6 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf024, gbc.sp());
        EXPECT(0x1c45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00A7
        gbc.setState(0x6171, 0x4126, 0xd130, 0xb343, 0x2dee, 0xcb12, 0x1, 0x1);
        gbc.writeMem(0x6171, { 0x2e, 0x6c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4126, gbc.sp());
        EXPECT(0x6173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00A9
        gbc.setState(0x13ff, 0xa2e6, 0x3c60, 0xbcea, 0x8fc2, 0xba95, 0x0, 0x0);
        gbc.writeMem(0x13ff, { 0x2e, 0xe9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa2e6, gbc.sp());
        EXPECT(0x1401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00AA
        gbc.setState(0x5e5d, 0x49c6, 0x63a0, 0x8e76, 0xfed3, 0x3e18, 0x0, 0x1);
        gbc.writeMem(0x5e5d, { 0x2e, 0x58 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x49c6, gbc.sp());
        EXPECT(0x5e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00AB
        gbc.setState(0x1ae4, 0x2851, 0xd670, 0xd1b2, 0xb885, 0xc59d, 0x0, 0x0);
        gbc.writeMem(0x1ae4, { 0x2e, 0xd8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2851, gbc.sp());
        EXPECT(0x1ae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00AC
        gbc.setState(0xdcd2, 0x666b, 0xcfa0, 0x1a8a, 0xc1e1, 0x52ea, 0x0, 0x1);
        gbc.writeMem(0xdcd2, { 0x2e, 0x18 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x666b, gbc.sp());
        EXPECT(0xdcd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xdcd2));
        EXPECT(0x18, gbc.readMem(0xdcd3));
        // 2E 00AD
        gbc.setState(0x3190, 0x7c89, 0x5a80, 0x2553, 0xfe1c, 0x8ad, 0x0, 0x1);
        gbc.writeMem(0x3190, { 0x2e, 0x8c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7c89, gbc.sp());
        EXPECT(0x3192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00AE
        gbc.setState(0x1cba, 0x35fa, 0xf500, 0x410c, 0xb12d, 0x649e, 0x0, 0x1);
        gbc.writeMem(0x1cba, { 0x2e, 0x1d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x35fa, gbc.sp());
        EXPECT(0x1cbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00B0
        gbc.setState(0x5f62, 0x9d91, 0x89b0, 0x168d, 0xe506, 0xe66d, 0x1, 0x1);
        gbc.writeMem(0x5f62, { 0x2e, 0x45 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9d91, gbc.sp());
        EXPECT(0x5f64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00B1
        gbc.setState(0x7e12, 0xea94, 0xe380, 0xc123, 0x1e89, 0x1374, 0x1, 0x0);
        gbc.writeMem(0x7e12, { 0x2e, 0xaf });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xea94, gbc.sp());
        EXPECT(0x7e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00B2
        gbc.setState(0x5485, 0xa4fc, 0xd4c0, 0xada1, 0x29d1, 0x2aa9, 0x1, 0x1);
        gbc.writeMem(0x5485, { 0x2e, 0x4d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa4fc, gbc.sp());
        EXPECT(0x5487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00B3
        gbc.setState(0x775, 0xc959, 0x8130, 0x930c, 0x909f, 0x5964, 0x1, 0x0);
        gbc.writeMem(0x775, { 0x2e, 0xed });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc959, gbc.sp());
        EXPECT(0x777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00B4
        gbc.setState(0x851a, 0x9c73, 0xf6a0, 0x9523, 0xc08a, 0x2c, 0x1, 0x1);
        gbc.writeMem(0x851a, { 0x2e, 0x56 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9c73, gbc.sp());
        EXPECT(0x851c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x851a));
        EXPECT(0x56, gbc.readMem(0x851b));
        // 2E 00B5
        gbc.setState(0xced4, 0xc9c6, 0x6ff0, 0xd531, 0x6752, 0x146b, 0x0, 0x1);
        gbc.writeMem(0xced4, { 0x2e, 0x94 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc9c6, gbc.sp());
        EXPECT(0xced6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xced4));
        EXPECT(0x94, gbc.readMem(0xced5));
        // 2E 00B6
        gbc.setState(0xa9c3, 0xb2a, 0x9c00, 0xa412, 0x423e, 0xf613, 0x0, 0x0);
        gbc.writeMem(0xa9c3, { 0x2e, 0xbb });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb2a, gbc.sp());
        EXPECT(0xa9c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa9c3));
        EXPECT(0xbb, gbc.readMem(0xa9c4));
        // 2E 00B8
        gbc.setState(0x5bfa, 0x4581, 0x7990, 0xfbb6, 0xce8f, 0xdfcb, 0x1, 0x0);
        gbc.writeMem(0x5bfa, { 0x2e, 0x8d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4581, gbc.sp());
        EXPECT(0x5bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00B9
        gbc.setState(0x1f86, 0x45d, 0x5580, 0xb615, 0x447f, 0x7ff6, 0x0, 0x1);
        gbc.writeMem(0x1f86, { 0x2e, 0xcc });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x45d, gbc.sp());
        EXPECT(0x1f88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00BA
        gbc.setState(0x2a3e, 0x770c, 0x9010, 0x52b8, 0xe093, 0x653b, 0x1, 0x0);
        gbc.writeMem(0x2a3e, { 0x2e, 0x37 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x770c, gbc.sp());
        EXPECT(0x2a40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00BB
        gbc.setState(0x45a3, 0x8dd1, 0x4ee0, 0xa6de, 0xbc5d, 0xa8f3, 0x0, 0x1);
        gbc.writeMem(0x45a3, { 0x2e, 0x6 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8dd1, gbc.sp());
        EXPECT(0x45a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00BC
        gbc.setState(0x73a1, 0x2b34, 0xb0a0, 0xb039, 0x9ef2, 0x65db, 0x1, 0x1);
        gbc.writeMem(0x73a1, { 0x2e, 0x95 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2b34, gbc.sp());
        EXPECT(0x73a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00BD
        gbc.setState(0x9e24, 0xe7c5, 0x7760, 0xe570, 0x62af, 0x376b, 0x0, 0x0);
        gbc.writeMem(0x9e24, { 0x2e, 0x4b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe7c5, gbc.sp());
        EXPECT(0x9e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9e24));
        EXPECT(0x4b, gbc.readMem(0x9e25));
        // 2E 00BE
        gbc.setState(0x2ce3, 0x70, 0x6e20, 0x3515, 0x453f, 0xfe13, 0x0, 0x0);
        gbc.writeMem(0x2ce3, { 0x2e, 0x34 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x70, gbc.sp());
        EXPECT(0x2ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00BF
        gbc.setState(0x28db, 0x44b5, 0x410, 0x72c, 0x9783, 0xb1cd, 0x1, 0x1);
        gbc.writeMem(0x28db, { 0x2e, 0xd5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x44b5, gbc.sp());
        EXPECT(0x28dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00C0
        gbc.setState(0x2d60, 0x51aa, 0x2380, 0xe8f1, 0x8610, 0x2e89, 0x1, 0x0);
        gbc.writeMem(0x2d60, { 0x2e, 0x6b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x51aa, gbc.sp());
        EXPECT(0x2d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00C1
        gbc.setState(0xe3f5, 0x770c, 0x3d00, 0xebbe, 0x2f73, 0xfe55, 0x0, 0x1);
        gbc.writeMem(0xe3f5, { 0x2e, 0x7e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x770c, gbc.sp());
        EXPECT(0xe3f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe3f5));
        EXPECT(0x7e, gbc.readMem(0xe3f6));
        // 2E 00C2
        gbc.setState(0x1648, 0x7e2, 0x6c20, 0x86bc, 0xb7da, 0x33a6, 0x0, 0x0);
        gbc.writeMem(0x1648, { 0x2e, 0xf4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7e2, gbc.sp());
        EXPECT(0x164a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00C3
        gbc.setState(0x839d, 0x17f7, 0x74b0, 0x2ff4, 0xc2f9, 0xc3e5, 0x1, 0x1);
        gbc.writeMem(0x839d, { 0x2e, 0x10 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x17f7, gbc.sp());
        EXPECT(0x839f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x839d));
        EXPECT(0x10, gbc.readMem(0x839e));
        // 2E 00C4
        gbc.setState(0x1fa7, 0x8b42, 0x1860, 0xe947, 0xcf5a, 0xaa2b, 0x0, 0x1);
        gbc.writeMem(0x1fa7, { 0x2e, 0xcb });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8b42, gbc.sp());
        EXPECT(0x1fa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00C5
        gbc.setState(0x1026, 0x9f9e, 0xf480, 0x5832, 0x5826, 0x9c41, 0x1, 0x1);
        gbc.writeMem(0x1026, { 0x2e, 0x58 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9f9e, gbc.sp());
        EXPECT(0x1028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00C6
        gbc.setState(0x9daa, 0x3020, 0x4490, 0xe27a, 0x56a9, 0x1918, 0x0, 0x0);
        gbc.writeMem(0x9daa, { 0x2e, 0xce });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3020, gbc.sp());
        EXPECT(0x9dac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9daa));
        EXPECT(0xce, gbc.readMem(0x9dab));
        // 2E 00C7
        gbc.setState(0xc1d3, 0x98e1, 0x5d50, 0xde6, 0x7e6a, 0x78b5, 0x0, 0x0);
        gbc.writeMem(0xc1d3, { 0x2e, 0x6c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x98e1, gbc.sp());
        EXPECT(0xc1d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc1d3));
        EXPECT(0x6c, gbc.readMem(0xc1d4));
        // 2E 00C8
        gbc.setState(0xbbc, 0x2528, 0xa150, 0x4819, 0x31d8, 0x981d, 0x0, 0x0);
        gbc.writeMem(0xbbc, { 0x2e, 0x95 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2528, gbc.sp());
        EXPECT(0xbbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00C9
        gbc.setState(0x6163, 0x44f7, 0x2e60, 0x734c, 0xfaae, 0x799f, 0x0, 0x0);
        gbc.writeMem(0x6163, { 0x2e, 0x16 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x44f7, gbc.sp());
        EXPECT(0x6165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00CA
        gbc.setState(0xb0bc, 0xfa9c, 0xcee0, 0xa24b, 0x69fa, 0xf378, 0x1, 0x0);
        gbc.writeMem(0xb0bc, { 0x2e, 0x73 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfa9c, gbc.sp());
        EXPECT(0xb0be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb0bc));
        EXPECT(0x73, gbc.readMem(0xb0bd));
        // 2E 00CB
        gbc.setState(0x7537, 0x899b, 0xe540, 0x7d71, 0x6e35, 0x786a, 0x0, 0x1);
        gbc.writeMem(0x7537, { 0x2e, 0x53 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x899b, gbc.sp());
        EXPECT(0x7539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00CC
        gbc.setState(0xe92a, 0x774, 0xdb90, 0x6e4e, 0x3ade, 0xaab6, 0x1, 0x1);
        gbc.writeMem(0xe92a, { 0x2e, 0x1f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x774, gbc.sp());
        EXPECT(0xe92c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe92a));
        EXPECT(0x1f, gbc.readMem(0xe92b));
        // 2E 00CD
        gbc.setState(0x88ec, 0xc0a9, 0xf530, 0x2725, 0x9b38, 0x53e4, 0x0, 0x0);
        gbc.writeMem(0x88ec, { 0x2e, 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc0a9, gbc.sp());
        EXPECT(0x88ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x88ec));
        EXPECT(0x0, gbc.readMem(0x88ed));
        // 2E 00CE
        gbc.setState(0xac9e, 0x421e, 0x4780, 0xac80, 0xa7d2, 0x87ed, 0x1, 0x1);
        gbc.writeMem(0xac9e, { 0x2e, 0xb5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x421e, gbc.sp());
        EXPECT(0xaca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xac9e));
        EXPECT(0xb5, gbc.readMem(0xac9f));
        // 2E 00CF
        gbc.setState(0x15c9, 0x1186, 0xd450, 0x62f7, 0x3968, 0x6a76, 0x1, 0x0);
        gbc.writeMem(0x15c9, { 0x2e, 0x26 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1186, gbc.sp());
        EXPECT(0x15cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00D0
        gbc.setState(0xe11b, 0xb5ef, 0x9e00, 0xd8c, 0x1a5a, 0x238d, 0x0, 0x1);
        gbc.writeMem(0xe11b, { 0x2e, 0xfe });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb5ef, gbc.sp());
        EXPECT(0xe11d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe11b));
        EXPECT(0xfe, gbc.readMem(0xe11c));
        // 2E 00D1
        gbc.setState(0x6feb, 0x66e6, 0x5380, 0x5b98, 0x3fa2, 0xc550, 0x1, 0x0);
        gbc.writeMem(0x6feb, { 0x2e, 0x2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x66e6, gbc.sp());
        EXPECT(0x6fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00D2
        gbc.setState(0xd867, 0xf635, 0xeab0, 0x5d07, 0xd7fa, 0x8fa5, 0x0, 0x0);
        gbc.writeMem(0xd867, { 0x2e, 0xfd });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf635, gbc.sp());
        EXPECT(0xd869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd867));
        EXPECT(0xfd, gbc.readMem(0xd868));
        // 2E 00D3
        gbc.setState(0x9746, 0x8c91, 0xe950, 0x5da1, 0xea10, 0x91af, 0x1, 0x0);
        gbc.writeMem(0x9746, { 0x2e, 0x65 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8c91, gbc.sp());
        EXPECT(0x9748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9746));
        EXPECT(0x65, gbc.readMem(0x9747));
        // 2E 00D4
        gbc.setState(0x262d, 0xc8c0, 0xef70, 0xd2a2, 0xf0f4, 0xdea1, 0x1, 0x0);
        gbc.writeMem(0x262d, { 0x2e, 0xb7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc8c0, gbc.sp());
        EXPECT(0x262f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00D5
        gbc.setState(0x3a6e, 0x623, 0xce70, 0x9a3f, 0x100a, 0xb89, 0x0, 0x1);
        gbc.writeMem(0x3a6e, { 0x2e, 0x20 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x623, gbc.sp());
        EXPECT(0x3a70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00D6
        gbc.setState(0xd83f, 0xb4d4, 0x3600, 0x5394, 0x8dfa, 0x45c4, 0x0, 0x1);
        gbc.writeMem(0xd83f, { 0x2e, 0x1c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb4d4, gbc.sp());
        EXPECT(0xd841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd83f));
        EXPECT(0x1c, gbc.readMem(0xd840));
        // 2E 00D7
        gbc.setState(0x6b78, 0xed38, 0x76e0, 0xd30a, 0xae15, 0x2a8c, 0x1, 0x0);
        gbc.writeMem(0x6b78, { 0x2e, 0x38 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xed38, gbc.sp());
        EXPECT(0x6b7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00D8
        gbc.setState(0x343e, 0xd33d, 0xe300, 0xc694, 0xaa3c, 0x66f3, 0x1, 0x1);
        gbc.writeMem(0x343e, { 0x2e, 0x14 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd33d, gbc.sp());
        EXPECT(0x3440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00D9
        gbc.setState(0x1966, 0x1453, 0x5ab0, 0x7c08, 0xa8b2, 0xa4a4, 0x0, 0x1);
        gbc.writeMem(0x1966, { 0x2e, 0x1e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1453, gbc.sp());
        EXPECT(0x1968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00DA
        gbc.setState(0xe7f3, 0x2d2c, 0x390, 0x97ed, 0x2630, 0x9dee, 0x1, 0x0);
        gbc.writeMem(0xe7f3, { 0x2e, 0x7e });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2d2c, gbc.sp());
        EXPECT(0xe7f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe7f3));
        EXPECT(0x7e, gbc.readMem(0xe7f4));
        // 2E 00DB
        gbc.setState(0x1a05, 0xe9bb, 0x3ea0, 0xca98, 0x7636, 0xf0e6, 0x0, 0x1);
        gbc.writeMem(0x1a05, { 0x2e, 0x3f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe9bb, gbc.sp());
        EXPECT(0x1a07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00DC
        gbc.setState(0x42a, 0x64d5, 0x6910, 0xe307, 0xa0ec, 0x238b, 0x1, 0x1);
        gbc.writeMem(0x42a, { 0x2e, 0x79 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x64d5, gbc.sp());
        EXPECT(0x42c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00DD
        gbc.setState(0x9970, 0x1d26, 0x8b60, 0x101b, 0x712e, 0x960b, 0x1, 0x1);
        gbc.writeMem(0x9970, { 0x2e, 0x11 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1d26, gbc.sp());
        EXPECT(0x9972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9970));
        EXPECT(0x11, gbc.readMem(0x9971));
        // 2E 00DE
        gbc.setState(0x8e3b, 0x49bd, 0x790, 0xbeb1, 0xbb4, 0x62a5, 0x0, 0x1);
        gbc.writeMem(0x8e3b, { 0x2e, 0xa8 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x49bd, gbc.sp());
        EXPECT(0x8e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8e3b));
        EXPECT(0xa8, gbc.readMem(0x8e3c));
        // 2E 00DF
        gbc.setState(0x8a33, 0xa222, 0x6cd0, 0x16ca, 0x7c24, 0xf125, 0x0, 0x1);
        gbc.writeMem(0x8a33, { 0x2e, 0x27 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa222, gbc.sp());
        EXPECT(0x8a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8a33));
        EXPECT(0x27, gbc.readMem(0x8a34));
        // 2E 00E0
        gbc.setState(0xeaca, 0x9440, 0x4bd0, 0xbb51, 0x2d5d, 0x4407, 0x0, 0x0);
        gbc.writeMem(0xeaca, { 0x2e, 0xdb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9440, gbc.sp());
        EXPECT(0xeacc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xeaca));
        EXPECT(0xdb, gbc.readMem(0xeacb));
        // 2E 00E1
        gbc.setState(0x7368, 0x2d46, 0x1900, 0x4b9c, 0xa2c1, 0xff72, 0x1, 0x1);
        gbc.writeMem(0x7368, { 0x2e, 0x82 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2d46, gbc.sp());
        EXPECT(0x736a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00E2
        gbc.setState(0x2d16, 0xc043, 0x70d0, 0xe9ce, 0xad0a, 0xc95b, 0x0, 0x0);
        gbc.writeMem(0x2d16, { 0x2e, 0x22 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc043, gbc.sp());
        EXPECT(0x2d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00E3
        gbc.setState(0x8be0, 0x30cf, 0x72e0, 0x42c3, 0x53a, 0x1715, 0x0, 0x1);
        gbc.writeMem(0x8be0, { 0x2e, 0xec });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x30cf, gbc.sp());
        EXPECT(0x8be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8be0));
        EXPECT(0xec, gbc.readMem(0x8be1));
        // 2E 00E4
        gbc.setState(0x15b5, 0x43e, 0xaef0, 0xd59f, 0x4cd5, 0x839b, 0x1, 0x0);
        gbc.writeMem(0x15b5, { 0x2e, 0xf2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x43e, gbc.sp());
        EXPECT(0x15b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00E6
        gbc.setState(0xab66, 0xa6da, 0x5690, 0xd2d1, 0x8fab, 0x413b, 0x0, 0x1);
        gbc.writeMem(0xab66, { 0x2e, 0x2e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa6da, gbc.sp());
        EXPECT(0xab68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xab66));
        EXPECT(0x2e, gbc.readMem(0xab67));
        // 2E 00E7
        gbc.setState(0x7769, 0xb6a2, 0xf030, 0x6ad8, 0x83e9, 0xebc5, 0x0, 0x0);
        gbc.writeMem(0x7769, { 0x2e, 0xb2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb6a2, gbc.sp());
        EXPECT(0x776b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00E8
        gbc.setState(0x2d53, 0x903d, 0xa4a0, 0xbdd1, 0xc458, 0x82f5, 0x0, 0x0);
        gbc.writeMem(0x2d53, { 0x2e, 0xdc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x903d, gbc.sp());
        EXPECT(0x2d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00E9
        gbc.setState(0x9851, 0xe1d5, 0xb820, 0x48f9, 0xbd14, 0xdce, 0x0, 0x1);
        gbc.writeMem(0x9851, { 0x2e, 0xa3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe1d5, gbc.sp());
        EXPECT(0x9853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9851));
        EXPECT(0xa3, gbc.readMem(0x9852));
        // 2E 00EA
        gbc.setState(0xd9c0, 0xfae2, 0x130, 0xa429, 0x5ddb, 0x68c, 0x1, 0x0);
        gbc.writeMem(0xd9c0, { 0x2e, 0x2c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfae2, gbc.sp());
        EXPECT(0xd9c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd9c0));
        EXPECT(0x2c, gbc.readMem(0xd9c1));
        // 2E 00EB
        gbc.setState(0x22f3, 0x7d0a, 0x9170, 0x698f, 0x37cf, 0x216b, 0x0, 0x1);
        gbc.writeMem(0x22f3, { 0x2e, 0x6a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7d0a, gbc.sp());
        EXPECT(0x22f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00EC
        gbc.setState(0x2715, 0xdd1c, 0x40e0, 0xb534, 0x3afa, 0x3f01, 0x0, 0x1);
        gbc.writeMem(0x2715, { 0x2e, 0x1e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xdd1c, gbc.sp());
        EXPECT(0x2717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00ED
        gbc.setState(0x50e1, 0xfeb3, 0x2000, 0xbe50, 0xd6d9, 0x2548, 0x0, 0x0);
        gbc.writeMem(0x50e1, { 0x2e, 0xc3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfeb3, gbc.sp());
        EXPECT(0x50e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00EE
        gbc.setState(0x3d79, 0x29f2, 0x4860, 0xfae0, 0x78fd, 0x85ba, 0x0, 0x1);
        gbc.writeMem(0x3d79, { 0x2e, 0xfd });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x29f2, gbc.sp());
        EXPECT(0x3d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00EF
        gbc.setState(0xcafb, 0xe675, 0x4910, 0x86f4, 0x5466, 0x708, 0x0, 0x1);
        gbc.writeMem(0xcafb, { 0x2e, 0x81 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe675, gbc.sp());
        EXPECT(0xcafd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xcafb));
        EXPECT(0x81, gbc.readMem(0xcafc));
        // 2E 00F0
        gbc.setState(0x28af, 0x23f7, 0xcf80, 0xb36f, 0x223, 0xc14f, 0x0, 0x0);
        gbc.writeMem(0x28af, { 0x2e, 0xfb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x23f7, gbc.sp());
        EXPECT(0x28b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00F2
        gbc.setState(0x958a, 0x71e0, 0xa830, 0x54cb, 0xe3e6, 0x22b8, 0x1, 0x0);
        gbc.writeMem(0x958a, { 0x2e, 0x4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x71e0, gbc.sp());
        EXPECT(0x958c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x958a));
        EXPECT(0x4, gbc.readMem(0x958b));
        // 2E 00F3
        gbc.setState(0x2e12, 0x6efe, 0x2210, 0xc308, 0x8518, 0xdd3c, 0x0, 0x0);
        gbc.writeMem(0x2e12, { 0x2e, 0x6b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6efe, gbc.sp());
        EXPECT(0x2e14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00F4
        gbc.setState(0x4972, 0x77e1, 0xe720, 0xce03, 0xb02f, 0x5b67, 0x1, 0x0);
        gbc.writeMem(0x4972, { 0x2e, 0xa6 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x77e1, gbc.sp());
        EXPECT(0x4974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00F5
        gbc.setState(0x431b, 0xfa8a, 0x67b0, 0x89b1, 0x1a2b, 0x3049, 0x0, 0x1);
        gbc.writeMem(0x431b, { 0x2e, 0xbb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfa8a, gbc.sp());
        EXPECT(0x431d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00F6
        gbc.setState(0x879f, 0xbe72, 0xca0, 0x6135, 0xb8f0, 0x10ce, 0x0, 0x0);
        gbc.writeMem(0x879f, { 0x2e, 0xe1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbe72, gbc.sp());
        EXPECT(0x87a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x879f));
        EXPECT(0xe1, gbc.readMem(0x87a0));
        // 2E 00F7
        gbc.setState(0x1326, 0xe42b, 0x5a0, 0x7d2e, 0x3e08, 0xfa1d, 0x0, 0x1);
        gbc.writeMem(0x1326, { 0x2e, 0x5a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe42b, gbc.sp());
        EXPECT(0x1328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00F8
        gbc.setState(0x3f43, 0x5f0, 0x74f0, 0x599d, 0x60a5, 0xf3ed, 0x0, 0x0);
        gbc.writeMem(0x3f43, { 0x2e, 0x1a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5f0, gbc.sp());
        EXPECT(0x3f45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00F9
        gbc.setState(0x461e, 0xe8c, 0xf2e0, 0x6482, 0xa9b, 0x5e6e, 0x1, 0x1);
        gbc.writeMem(0x461e, { 0x2e, 0xd7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe8c, gbc.sp());
        EXPECT(0x4620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00FA
        gbc.setState(0x4158, 0x53b, 0x3770, 0xe2a, 0xc922, 0xd091, 0x1, 0x0);
        gbc.writeMem(0x4158, { 0x2e, 0x2f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x53b, gbc.sp());
        EXPECT(0x415a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00FB
        gbc.setState(0x38ec, 0xf46e, 0xd20, 0x8aa3, 0x3435, 0xe7bd, 0x0, 0x1);
        gbc.writeMem(0x38ec, { 0x2e, 0x5c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf46e, gbc.sp());
        EXPECT(0x38ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 00FC
        gbc.setState(0x9429, 0xd570, 0x84c0, 0xbd91, 0xead0, 0x6f69, 0x1, 0x1);
        gbc.writeMem(0x9429, { 0x2e, 0xb4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd570, gbc.sp());
        EXPECT(0x942b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9429));
        EXPECT(0xb4, gbc.readMem(0x942a));
        // 2E 00FD
        gbc.setState(0x181c, 0x171e, 0x34b0, 0x258a, 0x1dae, 0x5b33, 0x1, 0x0);
        gbc.writeMem(0x181c, { 0x2e, 0xc3 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x171e, gbc.sp());
        EXPECT(0x181e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 00FE
        gbc.setState(0x980c, 0xf570, 0xbad0, 0xb8d2, 0x58d9, 0xcc8d, 0x0, 0x0);
        gbc.writeMem(0x980c, { 0x2e, 0xa4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf570, gbc.sp());
        EXPECT(0x980e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x980c));
        EXPECT(0xa4, gbc.readMem(0x980d));
        // 2E 00FF
        gbc.setState(0x48f9, 0x327c, 0x3750, 0x881b, 0xd2f2, 0xcf39, 0x1, 0x0);
        gbc.writeMem(0x48f9, { 0x2e, 0x10 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x327c, gbc.sp());
        EXPECT(0x48fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0100
        gbc.setState(0x5c93, 0x7274, 0xcea0, 0x7322, 0x13c0, 0x19b, 0x1, 0x0);
        gbc.writeMem(0x5c93, { 0x2e, 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7274, gbc.sp());
        EXPECT(0x5c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0101
        gbc.setState(0x2e32, 0x7dc1, 0x2e40, 0xce23, 0x23e6, 0x98da, 0x0, 0x0);
        gbc.writeMem(0x2e32, { 0x2e, 0x16 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7dc1, gbc.sp());
        EXPECT(0x2e34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0102
        gbc.setState(0x27a0, 0xb7ec, 0xc400, 0x136c, 0xd56a, 0x21, 0x0, 0x0);
        gbc.writeMem(0x27a0, { 0x2e, 0x2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb7ec, gbc.sp());
        EXPECT(0x27a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0103
        gbc.setState(0x9d54, 0xe30e, 0x4330, 0x98cb, 0x5e4b, 0x9fad, 0x1, 0x1);
        gbc.writeMem(0x9d54, { 0x2e, 0x1b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe30e, gbc.sp());
        EXPECT(0x9d56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9d54));
        EXPECT(0x1b, gbc.readMem(0x9d55));
        // 2E 0105
        gbc.setState(0xa6ce, 0x83b2, 0x3040, 0xdde2, 0xd333, 0x803a, 0x1, 0x0);
        gbc.writeMem(0xa6ce, { 0x2e, 0x85 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x83b2, gbc.sp());
        EXPECT(0xa6d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa6ce));
        EXPECT(0x85, gbc.readMem(0xa6cf));
        // 2E 0106
        gbc.setState(0x14c4, 0xb6b4, 0x2ef0, 0x4e41, 0x344b, 0x536a, 0x1, 0x1);
        gbc.writeMem(0x14c4, { 0x2e, 0x59 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb6b4, gbc.sp());
        EXPECT(0x14c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0107
        gbc.setState(0x8a06, 0x7710, 0xf1a0, 0x5ec4, 0x6649, 0x5d85, 0x1, 0x1);
        gbc.writeMem(0x8a06, { 0x2e, 0xba });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7710, gbc.sp());
        EXPECT(0x8a08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8a06));
        EXPECT(0xba, gbc.readMem(0x8a07));
        // 2E 0108
        gbc.setState(0xbdc0, 0xa407, 0xf180, 0xc89f, 0x3a99, 0x4d72, 0x0, 0x1);
        gbc.writeMem(0xbdc0, { 0x2e, 0xd6 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa407, gbc.sp());
        EXPECT(0xbdc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbdc0));
        EXPECT(0xd6, gbc.readMem(0xbdc1));
        // 2E 0109
        gbc.setState(0x3bd0, 0x867a, 0xfe60, 0xd11, 0x5831, 0x9229, 0x0, 0x0);
        gbc.writeMem(0x3bd0, { 0x2e, 0xbf });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x867a, gbc.sp());
        EXPECT(0x3bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 010A
        gbc.setState(0xeddc, 0x8dec, 0xe5c0, 0x728b, 0x6c75, 0x17ba, 0x0, 0x1);
        gbc.writeMem(0xeddc, { 0x2e, 0x4c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8dec, gbc.sp());
        EXPECT(0xedde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xeddc));
        EXPECT(0x4c, gbc.readMem(0xeddd));
        // 2E 010C
        gbc.setState(0x69f9, 0x2894, 0x34a0, 0x503a, 0x99e0, 0x2830, 0x0, 0x0);
        gbc.writeMem(0x69f9, { 0x2e, 0x80 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2894, gbc.sp());
        EXPECT(0x69fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 010D
        gbc.setState(0x13ba, 0x4c18, 0xc00, 0x5362, 0x6af8, 0x10fc, 0x1, 0x0);
        gbc.writeMem(0x13ba, { 0x2e, 0x67 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4c18, gbc.sp());
        EXPECT(0x13bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 010E
        gbc.setState(0x8dbf, 0x8590, 0x1490, 0xbd52, 0x113e, 0x9ff5, 0x0, 0x1);
        gbc.writeMem(0x8dbf, { 0x2e, 0x1d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8590, gbc.sp());
        EXPECT(0x8dc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8dbf));
        EXPECT(0x1d, gbc.readMem(0x8dc0));
        // 2E 010F
        gbc.setState(0xd70d, 0xda73, 0x42e0, 0xa788, 0x8f06, 0x31dd, 0x0, 0x0);
        gbc.writeMem(0xd70d, { 0x2e, 0x95 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xda73, gbc.sp());
        EXPECT(0xd70f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd70d));
        EXPECT(0x95, gbc.readMem(0xd70e));
        // 2E 0110
        gbc.setState(0x1453, 0xc341, 0xe90, 0xc730, 0x7c0a, 0x5d6a, 0x1, 0x1);
        gbc.writeMem(0x1453, { 0x2e, 0xc9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc341, gbc.sp());
        EXPECT(0x1455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0111
        gbc.setState(0xe996, 0x7dc1, 0x57e0, 0x2e7d, 0x709b, 0x363c, 0x1, 0x1);
        gbc.writeMem(0xe996, { 0x2e, 0x2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7dc1, gbc.sp());
        EXPECT(0xe998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe996));
        EXPECT(0x2, gbc.readMem(0xe997));
        // 2E 0112
        gbc.setState(0xd4, 0x4d93, 0x6c10, 0x7ac8, 0x166d, 0x5180, 0x0, 0x0);
        gbc.writeMem(0xd4, { 0x2e, 0x94 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4d93, gbc.sp());
        EXPECT(0xd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0113
        gbc.setState(0xbddd, 0xc98b, 0x8fd0, 0x345, 0x8591, 0xa68c, 0x0, 0x1);
        gbc.writeMem(0xbddd, { 0x2e, 0xc9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc98b, gbc.sp());
        EXPECT(0xbddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbddd));
        EXPECT(0xc9, gbc.readMem(0xbdde));
        // 2E 0114
        gbc.setState(0x9082, 0x48e1, 0x6c20, 0xd096, 0x4645, 0x57e2, 0x1, 0x0);
        gbc.writeMem(0x9082, { 0x2e, 0x23 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x48e1, gbc.sp());
        EXPECT(0x9084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9082));
        EXPECT(0x23, gbc.readMem(0x9083));
        // 2E 0115
        gbc.setState(0xb1b2, 0x2c6c, 0x5240, 0x87af, 0xcef6, 0xe0f1, 0x0, 0x0);
        gbc.writeMem(0xb1b2, { 0x2e, 0xb8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2c6c, gbc.sp());
        EXPECT(0xb1b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb1b2));
        EXPECT(0xb8, gbc.readMem(0xb1b3));
        // 2E 0117
        gbc.setState(0xdf51, 0x2fae, 0x1120, 0x6f21, 0xc825, 0x5a69, 0x0, 0x0);
        gbc.writeMem(0xdf51, { 0x2e, 0xba });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2fae, gbc.sp());
        EXPECT(0xdf53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xdf51));
        EXPECT(0xba, gbc.readMem(0xdf52));
        // 2E 0118
        gbc.setState(0xbf7d, 0x95b8, 0xa8a0, 0x1092, 0xf59a, 0xc26e, 0x0, 0x1);
        gbc.writeMem(0xbf7d, { 0x2e, 0x7e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x95b8, gbc.sp());
        EXPECT(0xbf7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbf7d));
        EXPECT(0x7e, gbc.readMem(0xbf7e));
        // 2E 0119
        gbc.setState(0xe773, 0xa2d6, 0xdcb0, 0xaa14, 0x5a23, 0x2575, 0x0, 0x1);
        gbc.writeMem(0xe773, { 0x2e, 0xff });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa2d6, gbc.sp());
        EXPECT(0xe775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe773));
        EXPECT(0xff, gbc.readMem(0xe774));
        // 2E 011A
        gbc.setState(0xaaf3, 0xd541, 0xf4e0, 0x8f62, 0x5542, 0xaec2, 0x0, 0x0);
        gbc.writeMem(0xaaf3, { 0x2e, 0xe1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd541, gbc.sp());
        EXPECT(0xaaf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xaaf3));
        EXPECT(0xe1, gbc.readMem(0xaaf4));
        // 2E 011B
        gbc.setState(0xbba2, 0x31f8, 0xf6e0, 0x7d, 0xeefc, 0xf294, 0x1, 0x1);
        gbc.writeMem(0xbba2, { 0x2e, 0xae });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x31f8, gbc.sp());
        EXPECT(0xbba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbba2));
        EXPECT(0xae, gbc.readMem(0xbba3));
        // 2E 011C
        gbc.setState(0x9f8e, 0x1e12, 0xf690, 0xb597, 0xc351, 0x8c26, 0x1, 0x1);
        gbc.writeMem(0x9f8e, { 0x2e, 0x46 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1e12, gbc.sp());
        EXPECT(0x9f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9f8e));
        EXPECT(0x46, gbc.readMem(0x9f8f));
        // 2E 011D
        gbc.setState(0xc7bd, 0x1613, 0xf530, 0xbd4, 0x2132, 0xf22b, 0x0, 0x1);
        gbc.writeMem(0xc7bd, { 0x2e, 0x34 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1613, gbc.sp());
        EXPECT(0xc7bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc7bd));
        EXPECT(0x34, gbc.readMem(0xc7be));
        // 2E 011E
        gbc.setState(0x5ba4, 0xa2d7, 0x1650, 0xbd18, 0x9a32, 0xce70, 0x0, 0x0);
        gbc.writeMem(0x5ba4, { 0x2e, 0x81 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa2d7, gbc.sp());
        EXPECT(0x5ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 011F
        gbc.setState(0xaa5e, 0x119c, 0xd230, 0x2632, 0x6e63, 0x731e, 0x0, 0x0);
        gbc.writeMem(0xaa5e, { 0x2e, 0x17 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x119c, gbc.sp());
        EXPECT(0xaa60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xaa5e));
        EXPECT(0x17, gbc.readMem(0xaa5f));
        // 2E 0121
        gbc.setState(0xb4af, 0x1e21, 0x6610, 0xea10, 0x952a, 0xc54f, 0x1, 0x1);
        gbc.writeMem(0xb4af, { 0x2e, 0xa5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1e21, gbc.sp());
        EXPECT(0xb4b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb4af));
        EXPECT(0xa5, gbc.readMem(0xb4b0));
        // 2E 0122
        gbc.setState(0x321, 0x945, 0x7010, 0xad0f, 0xa6b1, 0xa3a0, 0x1, 0x1);
        gbc.writeMem(0x321, { 0x2e, 0xfc });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x945, gbc.sp());
        EXPECT(0x323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0123
        gbc.setState(0x6095, 0xde18, 0xef90, 0x260e, 0xd2b6, 0x44d5, 0x0, 0x0);
        gbc.writeMem(0x6095, { 0x2e, 0xd6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xde18, gbc.sp());
        EXPECT(0x6097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0124
        gbc.setState(0xd782, 0x52d5, 0x83b0, 0xcf35, 0xb1b, 0x69d3, 0x1, 0x0);
        gbc.writeMem(0xd782, { 0x2e, 0x8e });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x52d5, gbc.sp());
        EXPECT(0xd784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd782));
        EXPECT(0x8e, gbc.readMem(0xd783));
        // 2E 0125
        gbc.setState(0x9bbb, 0xfbe, 0x8110, 0x30e0, 0x90d8, 0xcb19, 0x0, 0x1);
        gbc.writeMem(0x9bbb, { 0x2e, 0x3b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfbe, gbc.sp());
        EXPECT(0x9bbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9bbb));
        EXPECT(0x3b, gbc.readMem(0x9bbc));
        // 2E 0126
        gbc.setState(0x4592, 0x9bf6, 0xff0, 0x5e38, 0xb6b4, 0xef49, 0x1, 0x1);
        gbc.writeMem(0x4592, { 0x2e, 0xf9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9bf6, gbc.sp());
        EXPECT(0x4594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0127
        gbc.setState(0x63a6, 0x8f24, 0xb8c0, 0x9730, 0xe3ce, 0x1e68, 0x1, 0x1);
        gbc.writeMem(0x63a6, { 0x2e, 0xcd });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8f24, gbc.sp());
        EXPECT(0x63a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0128
        gbc.setState(0x4ed1, 0x7247, 0xb600, 0x9762, 0xf897, 0x1969, 0x1, 0x1);
        gbc.writeMem(0x4ed1, { 0x2e, 0x64 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7247, gbc.sp());
        EXPECT(0x4ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0129
        gbc.setState(0x1c31, 0x8622, 0xca70, 0xfb0a, 0xae25, 0xabb1, 0x0, 0x1);
        gbc.writeMem(0x1c31, { 0x2e, 0x2f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8622, gbc.sp());
        EXPECT(0x1c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 012A
        gbc.setState(0xe35f, 0x7e66, 0xa220, 0x6f7d, 0x8a5, 0x3d97, 0x1, 0x1);
        gbc.writeMem(0xe35f, { 0x2e, 0xcb });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7e66, gbc.sp());
        EXPECT(0xe361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe35f));
        EXPECT(0xcb, gbc.readMem(0xe360));
        // 2E 012B
        gbc.setState(0xb04e, 0xb0c1, 0x7570, 0x119, 0xf86e, 0xd2ae, 0x1, 0x1);
        gbc.writeMem(0xb04e, { 0x2e, 0x57 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb0c1, gbc.sp());
        EXPECT(0xb050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb04e));
        EXPECT(0x57, gbc.readMem(0xb04f));
        // 2E 012C
        gbc.setState(0xd4ab, 0x5435, 0x6ff0, 0x3741, 0xb93d, 0xd071, 0x1, 0x1);
        gbc.writeMem(0xd4ab, { 0x2e, 0x6c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5435, gbc.sp());
        EXPECT(0xd4ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd4ab));
        EXPECT(0x6c, gbc.readMem(0xd4ac));
        // 2E 012D
        gbc.setState(0xb54b, 0xfe3b, 0x2a80, 0x303d, 0x4a56, 0xfa37, 0x1, 0x1);
        gbc.writeMem(0xb54b, { 0x2e, 0x25 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xfe3b, gbc.sp());
        EXPECT(0xb54d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb54b));
        EXPECT(0x25, gbc.readMem(0xb54c));
        // 2E 012E
        gbc.setState(0xdc0c, 0xb8ee, 0x8160, 0x1566, 0xa165, 0x1f56, 0x1, 0x0);
        gbc.writeMem(0xdc0c, { 0x2e, 0xbb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb8ee, gbc.sp());
        EXPECT(0xdc0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xdc0c));
        EXPECT(0xbb, gbc.readMem(0xdc0d));
        // 2E 012F
        gbc.setState(0x392b, 0x737a, 0x2610, 0x72f9, 0xef6, 0xcf13, 0x0, 0x0);
        gbc.writeMem(0x392b, { 0x2e, 0x5c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x737a, gbc.sp());
        EXPECT(0x392d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0130
        gbc.setState(0x3ff6, 0x33d1, 0x6780, 0xa7a6, 0x7598, 0x3977, 0x0, 0x0);
        gbc.writeMem(0x3ff6, { 0x2e, 0xc0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x33d1, gbc.sp());
        EXPECT(0x3ff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0131
        gbc.setState(0x2c53, 0xab43, 0x1e0, 0xc0c, 0xe68e, 0xeaf1, 0x1, 0x0);
        gbc.writeMem(0x2c53, { 0x2e, 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xab43, gbc.sp());
        EXPECT(0x2c55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0132
        gbc.setState(0x9c47, 0xb458, 0xbf80, 0x746e, 0xc071, 0xa331, 0x1, 0x0);
        gbc.writeMem(0x9c47, { 0x2e, 0x5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb458, gbc.sp());
        EXPECT(0x9c49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9c47));
        EXPECT(0x5, gbc.readMem(0x9c48));
        // 2E 0133
        gbc.setState(0xe5ef, 0x2037, 0xf800, 0x9001, 0xeb95, 0x2e6b, 0x1, 0x0);
        gbc.writeMem(0xe5ef, { 0x2e, 0x23 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2037, gbc.sp());
        EXPECT(0xe5f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe5ef));
        EXPECT(0x23, gbc.readMem(0xe5f0));
        // 2E 0134
        gbc.setState(0x823e, 0x78c1, 0x79a0, 0xe6f1, 0x2d39, 0xad1a, 0x0, 0x0);
        gbc.writeMem(0x823e, { 0x2e, 0x39 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x78c1, gbc.sp());
        EXPECT(0x8240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x823e));
        EXPECT(0x39, gbc.readMem(0x823f));
        // 2E 0135
        gbc.setState(0x2cac, 0x1624, 0x5c30, 0xb4d8, 0x4fe1, 0x403a, 0x0, 0x1);
        gbc.writeMem(0x2cac, { 0x2e, 0xed });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1624, gbc.sp());
        EXPECT(0x2cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0136
        gbc.setState(0x827, 0x82e1, 0x7460, 0xb914, 0xed86, 0x88f0, 0x1, 0x0);
        gbc.writeMem(0x827, { 0x2e, 0x83 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x82e1, gbc.sp());
        EXPECT(0x829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0137
        gbc.setState(0xedcd, 0x21b2, 0xc0d0, 0xce88, 0xfd46, 0xd208, 0x0, 0x0);
        gbc.writeMem(0xedcd, { 0x2e, 0x10 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x21b2, gbc.sp());
        EXPECT(0xedcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xedcd));
        EXPECT(0x10, gbc.readMem(0xedce));
        // 2E 0138
        gbc.setState(0xd804, 0xe520, 0x5480, 0x6cc9, 0xac1a, 0x640c, 0x0, 0x1);
        gbc.writeMem(0xd804, { 0x2e, 0xb7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe520, gbc.sp());
        EXPECT(0xd806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd804));
        EXPECT(0xb7, gbc.readMem(0xd805));
        // 2E 0139
        gbc.setState(0x44dc, 0xfe1a, 0xfc40, 0xaada, 0x7e53, 0x3c44, 0x1, 0x0);
        gbc.writeMem(0x44dc, { 0x2e, 0x11 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xfe1a, gbc.sp());
        EXPECT(0x44de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 013A
        gbc.setState(0x8ac3, 0xe9e0, 0xd0, 0xb7c9, 0x777d, 0xf739, 0x1, 0x1);
        gbc.writeMem(0x8ac3, { 0x2e, 0xc7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe9e0, gbc.sp());
        EXPECT(0x8ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8ac3));
        EXPECT(0xc7, gbc.readMem(0x8ac4));
        // 2E 013B
        gbc.setState(0xbba0, 0xd068, 0xa470, 0xe542, 0x2d5e, 0xf131, 0x1, 0x0);
        gbc.writeMem(0xbba0, { 0x2e, 0xd7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd068, gbc.sp());
        EXPECT(0xbba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbba0));
        EXPECT(0xd7, gbc.readMem(0xbba1));
        // 2E 013C
        gbc.setState(0xb296, 0xf514, 0x47a0, 0xe077, 0x1bdd, 0xf853, 0x0, 0x1);
        gbc.writeMem(0xb296, { 0x2e, 0xd3 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf514, gbc.sp());
        EXPECT(0xb298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb296));
        EXPECT(0xd3, gbc.readMem(0xb297));
        // 2E 013D
        gbc.setState(0x559b, 0x98bd, 0x2b30, 0x95c2, 0x4a89, 0x3f6e, 0x1, 0x0);
        gbc.writeMem(0x559b, { 0x2e, 0x82 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x98bd, gbc.sp());
        EXPECT(0x559d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 013E
        gbc.setState(0xdfc, 0x19d, 0x8810, 0x5544, 0x53d, 0xd2c2, 0x0, 0x1);
        gbc.writeMem(0xdfc, { 0x2e, 0x1a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x19d, gbc.sp());
        EXPECT(0xdfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 013F
        gbc.setState(0x410c, 0xe87e, 0x2140, 0x843e, 0x9c51, 0xa337, 0x0, 0x0);
        gbc.writeMem(0x410c, { 0x2e, 0xf4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe87e, gbc.sp());
        EXPECT(0x410e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0140
        gbc.setState(0x4181, 0x6079, 0x8d80, 0xab20, 0xbf9a, 0x61f7, 0x1, 0x1);
        gbc.writeMem(0x4181, { 0x2e, 0x21 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6079, gbc.sp());
        EXPECT(0x4183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0141
        gbc.setState(0x5105, 0x2ea2, 0x8750, 0x3abd, 0x80a0, 0xcd70, 0x1, 0x1);
        gbc.writeMem(0x5105, { 0x2e, 0xb5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2ea2, gbc.sp());
        EXPECT(0x5107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0143
        gbc.setState(0x8c91, 0xda3b, 0x5c60, 0x82ea, 0xdc2, 0x99a6, 0x1, 0x1);
        gbc.writeMem(0x8c91, { 0x2e, 0x78 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xda3b, gbc.sp());
        EXPECT(0x8c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8c91));
        EXPECT(0x78, gbc.readMem(0x8c92));
        // 2E 0144
        gbc.setState(0xb529, 0x5763, 0x8e50, 0x6f58, 0xb2de, 0x18b8, 0x0, 0x1);
        gbc.writeMem(0xb529, { 0x2e, 0xc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5763, gbc.sp());
        EXPECT(0xb52b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb529));
        EXPECT(0xc, gbc.readMem(0xb52a));
        // 2E 0145
        gbc.setState(0x2f41, 0xd5dc, 0x2fb0, 0x9abd, 0xfe72, 0x59d3, 0x0, 0x0);
        gbc.writeMem(0x2f41, { 0x2e, 0x49 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd5dc, gbc.sp());
        EXPECT(0x2f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0146
        gbc.setState(0x578f, 0xd162, 0x1ab0, 0x50b9, 0x7167, 0x23d, 0x0, 0x0);
        gbc.writeMem(0x578f, { 0x2e, 0xa });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd162, gbc.sp());
        EXPECT(0x5791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0147
        gbc.setState(0x336e, 0x6a08, 0xf7a0, 0x7802, 0xe766, 0x786c, 0x0, 0x1);
        gbc.writeMem(0x336e, { 0x2e, 0x20 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6a08, gbc.sp());
        EXPECT(0x3370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0148
        gbc.setState(0xef15, 0xda89, 0x6220, 0x6b4e, 0xd52b, 0x8690, 0x1, 0x1);
        gbc.writeMem(0xef15, { 0x2e, 0x7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xda89, gbc.sp());
        EXPECT(0xef17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xef15));
        EXPECT(0x7, gbc.readMem(0xef16));
        // 2E 0149
        gbc.setState(0x1685, 0x98b, 0x1d50, 0xfd01, 0x9b57, 0x1cd6, 0x1, 0x0);
        gbc.writeMem(0x1685, { 0x2e, 0x79 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x98b, gbc.sp());
        EXPECT(0x1687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 014A
        gbc.setState(0x352e, 0xedd1, 0xfad0, 0xecd0, 0x55dd, 0xab90, 0x0, 0x1);
        gbc.writeMem(0x352e, { 0x2e, 0x1e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xedd1, gbc.sp());
        EXPECT(0x3530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 014B
        gbc.setState(0xac2, 0x6a07, 0x5890, 0xcf06, 0xed02, 0x64a4, 0x1, 0x0);
        gbc.writeMem(0xac2, { 0x2e, 0xa2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6a07, gbc.sp());
        EXPECT(0xac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 014C
        gbc.setState(0xd9af, 0x41d8, 0x13b0, 0x6a96, 0x7ff3, 0xe12a, 0x0, 0x1);
        gbc.writeMem(0xd9af, { 0x2e, 0x49 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x41d8, gbc.sp());
        EXPECT(0xd9b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd9af));
        EXPECT(0x49, gbc.readMem(0xd9b0));
        // 2E 014D
        gbc.setState(0x4ff4, 0x4a4e, 0x2ac0, 0xaa98, 0x43e4, 0x50c8, 0x0, 0x1);
        gbc.writeMem(0x4ff4, { 0x2e, 0x7b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4a4e, gbc.sp());
        EXPECT(0x4ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 014E
        gbc.setState(0xd40e, 0x90cb, 0x6bf0, 0xcfea, 0x6a03, 0x87da, 0x1, 0x0);
        gbc.writeMem(0xd40e, { 0x2e, 0xe8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x90cb, gbc.sp());
        EXPECT(0xd410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd40e));
        EXPECT(0xe8, gbc.readMem(0xd40f));
        // 2E 014F
        gbc.setState(0x39c3, 0xe0e9, 0xfc0, 0x9105, 0xa63b, 0x72dd, 0x1, 0x1);
        gbc.writeMem(0x39c3, { 0x2e, 0xe0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe0e9, gbc.sp());
        EXPECT(0x39c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0150
        gbc.setState(0xc842, 0x2e25, 0x8ec0, 0xee0b, 0x18a8, 0x9f3a, 0x0, 0x1);
        gbc.writeMem(0xc842, { 0x2e, 0xcd });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2e25, gbc.sp());
        EXPECT(0xc844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc842));
        EXPECT(0xcd, gbc.readMem(0xc843));
        // 2E 0151
        gbc.setState(0x802d, 0xf49a, 0xb8d0, 0xa317, 0xbcb9, 0x388e, 0x1, 0x1);
        gbc.writeMem(0x802d, { 0x2e, 0x4c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf49a, gbc.sp());
        EXPECT(0x802f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x802d));
        EXPECT(0x4c, gbc.readMem(0x802e));
        // 2E 0152
        gbc.setState(0xe759, 0x12b3, 0x88b0, 0xd47a, 0x7907, 0x9c9f, 0x0, 0x0);
        gbc.writeMem(0xe759, { 0x2e, 0x43 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x12b3, gbc.sp());
        EXPECT(0xe75b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe759));
        EXPECT(0x43, gbc.readMem(0xe75a));
        // 2E 0153
        gbc.setState(0x94ef, 0x6b5b, 0xed20, 0x1b0, 0x504a, 0x4974, 0x0, 0x0);
        gbc.writeMem(0x94ef, { 0x2e, 0xbf });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6b5b, gbc.sp());
        EXPECT(0x94f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x94ef));
        EXPECT(0xbf, gbc.readMem(0x94f0));
        // 2E 0154
        gbc.setState(0xec12, 0xaee1, 0xf950, 0xc109, 0x66c1, 0x3b14, 0x0, 0x1);
        gbc.writeMem(0xec12, { 0x2e, 0x4e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xaee1, gbc.sp());
        EXPECT(0xec14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xec12));
        EXPECT(0x4e, gbc.readMem(0xec13));
        // 2E 0155
        gbc.setState(0x1eae, 0xc432, 0x9b50, 0xb906, 0x9578, 0x8917, 0x0, 0x1);
        gbc.writeMem(0x1eae, { 0x2e, 0xf1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc432, gbc.sp());
        EXPECT(0x1eb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0156
        gbc.setState(0x45f0, 0x24f0, 0xa5a0, 0xe219, 0x591f, 0x33d8, 0x1, 0x0);
        gbc.writeMem(0x45f0, { 0x2e, 0x5a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x24f0, gbc.sp());
        EXPECT(0x45f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0157
        gbc.setState(0xd7bf, 0x60d5, 0xa3b0, 0x793, 0x1eee, 0x50a7, 0x0, 0x1);
        gbc.writeMem(0xd7bf, { 0x2e, 0x97 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x60d5, gbc.sp());
        EXPECT(0xd7c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd7bf));
        EXPECT(0x97, gbc.readMem(0xd7c0));
        // 2E 0158
        gbc.setState(0x8b18, 0x3ddc, 0xf570, 0x8c34, 0xf1c9, 0xfc18, 0x1, 0x0);
        gbc.writeMem(0x8b18, { 0x2e, 0x2f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3ddc, gbc.sp());
        EXPECT(0x8b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8b18));
        EXPECT(0x2f, gbc.readMem(0x8b19));
        // 2E 0159
        gbc.setState(0x8b48, 0xd99a, 0xb4b0, 0x43a3, 0x47c7, 0x206d, 0x0, 0x1);
        gbc.writeMem(0x8b48, { 0x2e, 0xcb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd99a, gbc.sp());
        EXPECT(0x8b4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8b48));
        EXPECT(0xcb, gbc.readMem(0x8b49));
        // 2E 015A
        gbc.setState(0xe89, 0x2704, 0xacf0, 0xc5b5, 0x8170, 0x646d, 0x1, 0x1);
        gbc.writeMem(0xe89, { 0x2e, 0xdd });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2704, gbc.sp());
        EXPECT(0xe8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 015B
        gbc.setState(0x27aa, 0xcc08, 0xe060, 0xe435, 0xe1ec, 0xe7b3, 0x1, 0x1);
        gbc.writeMem(0x27aa, { 0x2e, 0xca });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xcc08, gbc.sp());
        EXPECT(0x27ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 015C
        gbc.setState(0x15f6, 0xf712, 0x8dd0, 0x8efd, 0x5ecf, 0xefc6, 0x1, 0x0);
        gbc.writeMem(0x15f6, { 0x2e, 0x3a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf712, gbc.sp());
        EXPECT(0x15f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 015D
        gbc.setState(0x9ffc, 0x400e, 0x8e30, 0x54a7, 0xe32f, 0xfdad, 0x0, 0x1);
        gbc.writeMem(0x9ffc, { 0x2e, 0x77 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x400e, gbc.sp());
        EXPECT(0x9ffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9ffc));
        EXPECT(0x77, gbc.readMem(0x9ffd));
        // 2E 015E
        gbc.setState(0x5733, 0xdd9c, 0xd680, 0xda18, 0xdadc, 0xd7ef, 0x0, 0x0);
        gbc.writeMem(0x5733, { 0x2e, 0x85 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xdd9c, gbc.sp());
        EXPECT(0x5735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 015F
        gbc.setState(0x9296, 0xe174, 0x7160, 0x1f6a, 0xe558, 0xc573, 0x1, 0x1);
        gbc.writeMem(0x9296, { 0x2e, 0xf9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe174, gbc.sp());
        EXPECT(0x9298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9296));
        EXPECT(0xf9, gbc.readMem(0x9297));
        // 2E 0160
        gbc.setState(0xba43, 0xef8a, 0xb080, 0x34d9, 0x74f, 0x98de, 0x0, 0x1);
        gbc.writeMem(0xba43, { 0x2e, 0x5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xef8a, gbc.sp());
        EXPECT(0xba45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xba43));
        EXPECT(0x5, gbc.readMem(0xba44));
        // 2E 0162
        gbc.setState(0xb393, 0xb4b5, 0xf4c0, 0xffa, 0x6bbb, 0x9604, 0x1, 0x1);
        gbc.writeMem(0xb393, { 0x2e, 0xd6 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb4b5, gbc.sp());
        EXPECT(0xb395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb393));
        EXPECT(0xd6, gbc.readMem(0xb394));
        // 2E 0163
        gbc.setState(0x2aed, 0x84bc, 0x8030, 0x5f9a, 0x41ad, 0xda04, 0x0, 0x1);
        gbc.writeMem(0x2aed, { 0x2e, 0xc8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x84bc, gbc.sp());
        EXPECT(0x2aef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0164
        gbc.setState(0x22fe, 0x8523, 0xb2a0, 0x51b0, 0x3d64, 0x6436, 0x0, 0x1);
        gbc.writeMem(0x22fe, { 0x2e, 0x13 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8523, gbc.sp());
        EXPECT(0x2300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0165
        gbc.setState(0x9e2e, 0xccac, 0xe780, 0xad50, 0x5baf, 0xda42, 0x1, 0x1);
        gbc.writeMem(0x9e2e, { 0x2e, 0xf7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xccac, gbc.sp());
        EXPECT(0x9e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9e2e));
        EXPECT(0xf7, gbc.readMem(0x9e2f));
        // 2E 0166
        gbc.setState(0x909e, 0xf37, 0x3f80, 0xc48, 0xfd12, 0x7f9a, 0x0, 0x0);
        gbc.writeMem(0x909e, { 0x2e, 0x36 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf37, gbc.sp());
        EXPECT(0x90a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x909e));
        EXPECT(0x36, gbc.readMem(0x909f));
        // 2E 0167
        gbc.setState(0xe38c, 0xdb4e, 0x7780, 0xb6fe, 0x2e3e, 0x17de, 0x0, 0x0);
        gbc.writeMem(0xe38c, { 0x2e, 0x6a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xdb4e, gbc.sp());
        EXPECT(0xe38e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe38c));
        EXPECT(0x6a, gbc.readMem(0xe38d));
        // 2E 0168
        gbc.setState(0x36, 0x70e6, 0x77c0, 0x59ad, 0xb25a, 0x1452, 0x1, 0x0);
        gbc.writeMem(0x36, { 0x2e, 0xe6 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x70e6, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 016A
        gbc.setState(0x37dd, 0xc8b5, 0x82e0, 0x452b, 0x7379, 0x505, 0x1, 0x0);
        gbc.writeMem(0x37dd, { 0x2e, 0x43 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc8b5, gbc.sp());
        EXPECT(0x37df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 016B
        gbc.setState(0xdf32, 0xfd85, 0x4110, 0x79fe, 0xa8d0, 0x28b8, 0x0, 0x1);
        gbc.writeMem(0xdf32, { 0x2e, 0x86 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xfd85, gbc.sp());
        EXPECT(0xdf34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xdf32));
        EXPECT(0x86, gbc.readMem(0xdf33));
        // 2E 016C
        gbc.setState(0xa6f7, 0x6385, 0xb780, 0xc76e, 0x1468, 0x88ac, 0x0, 0x1);
        gbc.writeMem(0xa6f7, { 0x2e, 0x9f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6385, gbc.sp());
        EXPECT(0xa6f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa6f7));
        EXPECT(0x9f, gbc.readMem(0xa6f8));
        // 2E 016E
        gbc.setState(0x66c7, 0xe8cd, 0xfe80, 0x7761, 0x104c, 0x6cbd, 0x1, 0x1);
        gbc.writeMem(0x66c7, { 0x2e, 0xb });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe8cd, gbc.sp());
        EXPECT(0x66c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 016F
        gbc.setState(0x416d, 0xf1fb, 0x8ca0, 0x5012, 0x4960, 0xdaa6, 0x0, 0x1);
        gbc.writeMem(0x416d, { 0x2e, 0xdf });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf1fb, gbc.sp());
        EXPECT(0x416f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0170
        gbc.setState(0x277e, 0xe51d, 0x6780, 0x57a6, 0x1b58, 0xbaae, 0x1, 0x0);
        gbc.writeMem(0x277e, { 0x2e, 0x93 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe51d, gbc.sp());
        EXPECT(0x2780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0171
        gbc.setState(0x7ef2, 0xc05d, 0xb2f0, 0xd9ca, 0xc0f9, 0x49ca, 0x0, 0x0);
        gbc.writeMem(0x7ef2, { 0x2e, 0x94 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc05d, gbc.sp());
        EXPECT(0x7ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0172
        gbc.setState(0x34a7, 0xb0ee, 0x2890, 0x34c1, 0x5ea1, 0xf986, 0x0, 0x0);
        gbc.writeMem(0x34a7, { 0x2e, 0x93 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb0ee, gbc.sp());
        EXPECT(0x34a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0174
        gbc.setState(0x55cb, 0x33ab, 0x1ff0, 0x4a92, 0x11e7, 0xf35f, 0x1, 0x1);
        gbc.writeMem(0x55cb, { 0x2e, 0x7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x33ab, gbc.sp());
        EXPECT(0x55cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0175
        gbc.setState(0xa1e3, 0x2d69, 0xec90, 0x5f4d, 0xa9eb, 0xf8b9, 0x0, 0x1);
        gbc.writeMem(0xa1e3, { 0x2e, 0xb4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2d69, gbc.sp());
        EXPECT(0xa1e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa1e3));
        EXPECT(0xb4, gbc.readMem(0xa1e4));
        // 2E 0176
        gbc.setState(0xbf6b, 0x9795, 0xf6a0, 0x5c50, 0x9250, 0x1f30, 0x0, 0x0);
        gbc.writeMem(0xbf6b, { 0x2e, 0x2d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9795, gbc.sp());
        EXPECT(0xbf6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbf6b));
        EXPECT(0x2d, gbc.readMem(0xbf6c));
        // 2E 0177
        gbc.setState(0x4dba, 0x409a, 0xd3a0, 0x5e21, 0x674, 0x7e30, 0x1, 0x0);
        gbc.writeMem(0x4dba, { 0x2e, 0x59 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x409a, gbc.sp());
        EXPECT(0x4dbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0178
        gbc.setState(0x4897, 0x5147, 0x89e0, 0x1f6c, 0xb808, 0x59b2, 0x1, 0x1);
        gbc.writeMem(0x4897, { 0x2e, 0xa9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5147, gbc.sp());
        EXPECT(0x4899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0179
        gbc.setState(0x37a, 0x7ce9, 0x1490, 0x6007, 0x4437, 0x531a, 0x1, 0x0);
        gbc.writeMem(0x37a, { 0x2e, 0x16 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7ce9, gbc.sp());
        EXPECT(0x37c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 017A
        gbc.setState(0xa8b8, 0xc292, 0x840, 0x7630, 0x2c2d, 0x88a7, 0x1, 0x1);
        gbc.writeMem(0xa8b8, { 0x2e, 0x73 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc292, gbc.sp());
        EXPECT(0xa8ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa8b8));
        EXPECT(0x73, gbc.readMem(0xa8b9));
        // 2E 017B
        gbc.setState(0xee8a, 0x958c, 0x4ee0, 0xc82d, 0x458c, 0x5097, 0x1, 0x1);
        gbc.writeMem(0xee8a, { 0x2e, 0x2b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x958c, gbc.sp());
        EXPECT(0xee8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xee8a));
        EXPECT(0x2b, gbc.readMem(0xee8b));
        // 2E 017C
        gbc.setState(0xc671, 0x4bfd, 0xd500, 0x83b7, 0xf234, 0xc388, 0x0, 0x1);
        gbc.writeMem(0xc671, { 0x2e, 0x81 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4bfd, gbc.sp());
        EXPECT(0xc673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc671));
        EXPECT(0x81, gbc.readMem(0xc672));
        // 2E 017D
        gbc.setState(0x919, 0xc658, 0x1970, 0x3463, 0xf574, 0x70e9, 0x0, 0x0);
        gbc.writeMem(0x919, { 0x2e, 0xc2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc658, gbc.sp());
        EXPECT(0x91b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 017F
        gbc.setState(0x6054, 0x3969, 0xc2d0, 0x761a, 0xb2cb, 0xf1de, 0x0, 0x0);
        gbc.writeMem(0x6054, { 0x2e, 0x7f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3969, gbc.sp());
        EXPECT(0x6056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0181
        gbc.setState(0xec26, 0x4dc3, 0x6c0, 0x55ee, 0x763f, 0x95e1, 0x1, 0x1);
        gbc.writeMem(0xec26, { 0x2e, 0x5b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4dc3, gbc.sp());
        EXPECT(0xec28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xec26));
        EXPECT(0x5b, gbc.readMem(0xec27));
        // 2E 0182
        gbc.setState(0xa921, 0x87c6, 0xcb30, 0x315b, 0x9d93, 0x36bf, 0x1, 0x0);
        gbc.writeMem(0xa921, { 0x2e, 0x3b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x87c6, gbc.sp());
        EXPECT(0xa923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa921));
        EXPECT(0x3b, gbc.readMem(0xa922));
        // 2E 0183
        gbc.setState(0x960c, 0x73ef, 0x7cc0, 0x518, 0x24f1, 0x4ed8, 0x1, 0x1);
        gbc.writeMem(0x960c, { 0x2e, 0xfb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x73ef, gbc.sp());
        EXPECT(0x960e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x960c));
        EXPECT(0xfb, gbc.readMem(0x960d));
        // 2E 0185
        gbc.setState(0xc1ae, 0xe2ac, 0x48e0, 0xcf3d, 0x1d22, 0x721d, 0x1, 0x0);
        gbc.writeMem(0xc1ae, { 0x2e, 0x19 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe2ac, gbc.sp());
        EXPECT(0xc1b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc1ae));
        EXPECT(0x19, gbc.readMem(0xc1af));
        // 2E 0186
        gbc.setState(0x3ad5, 0x74c4, 0x1970, 0xe271, 0xd684, 0xce19, 0x1, 0x0);
        gbc.writeMem(0x3ad5, { 0x2e, 0x67 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x74c4, gbc.sp());
        EXPECT(0x3ad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0187
        gbc.setState(0xbb1a, 0x273b, 0xdc00, 0xc428, 0x76d9, 0x7e16, 0x1, 0x0);
        gbc.writeMem(0xbb1a, { 0x2e, 0x93 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x273b, gbc.sp());
        EXPECT(0xbb1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbb1a));
        EXPECT(0x93, gbc.readMem(0xbb1b));
        // 2E 0188
        gbc.setState(0x542d, 0x41b5, 0x2d80, 0xaf3c, 0x363, 0x85c2, 0x1, 0x0);
        gbc.writeMem(0x542d, { 0x2e, 0x54 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x41b5, gbc.sp());
        EXPECT(0x542f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0189
        gbc.setState(0x1fc7, 0x5b5f, 0xf000, 0x2546, 0xa3, 0x7fe8, 0x0, 0x1);
        gbc.writeMem(0x1fc7, { 0x2e, 0xdf });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5b5f, gbc.sp());
        EXPECT(0x1fc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 018A
        gbc.setState(0x663e, 0x2002, 0x2ba0, 0x4622, 0x954a, 0x2d6c, 0x1, 0x1);
        gbc.writeMem(0x663e, { 0x2e, 0xb4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2002, gbc.sp());
        EXPECT(0x6640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 018B
        gbc.setState(0x569d, 0xf27b, 0x48e0, 0xc8ec, 0xfe78, 0xd999, 0x0, 0x1);
        gbc.writeMem(0x569d, { 0x2e, 0x9a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf27b, gbc.sp());
        EXPECT(0x569f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 018C
        gbc.setState(0x7b97, 0xf291, 0xe120, 0xf3d5, 0xc49c, 0xe63f, 0x0, 0x1);
        gbc.writeMem(0x7b97, { 0x2e, 0x86 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf291, gbc.sp());
        EXPECT(0x7b99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 018D
        gbc.setState(0xce65, 0xad76, 0x8520, 0xf79, 0xd90b, 0x64b6, 0x1, 0x0);
        gbc.writeMem(0xce65, { 0x2e, 0xdf });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xad76, gbc.sp());
        EXPECT(0xce67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xce65));
        EXPECT(0xdf, gbc.readMem(0xce66));
        // 2E 018E
        gbc.setState(0xaaea, 0x3a53, 0x79c0, 0xbc3b, 0xa61d, 0xec73, 0x1, 0x1);
        gbc.writeMem(0xaaea, { 0x2e, 0x16 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3a53, gbc.sp());
        EXPECT(0xaaec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xaaea));
        EXPECT(0x16, gbc.readMem(0xaaeb));
        // 2E 018F
        gbc.setState(0xd6f0, 0x1417, 0x4910, 0x3307, 0x9224, 0x2646, 0x1, 0x0);
        gbc.writeMem(0xd6f0, { 0x2e, 0x9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1417, gbc.sp());
        EXPECT(0xd6f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd6f0));
        EXPECT(0x9, gbc.readMem(0xd6f1));
        // 2E 0190
        gbc.setState(0xcb16, 0x80e2, 0xa090, 0x6d6e, 0xe95f, 0xc75e, 0x0, 0x1);
        gbc.writeMem(0xcb16, { 0x2e, 0xf6 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x80e2, gbc.sp());
        EXPECT(0xcb18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xcb16));
        EXPECT(0xf6, gbc.readMem(0xcb17));
        // 2E 0191
        gbc.setState(0x119, 0xd099, 0x9940, 0xfa99, 0xdf18, 0x4317, 0x1, 0x1);
        gbc.writeMem(0x119, { 0x2e, 0xfd });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd099, gbc.sp());
        EXPECT(0x11b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0192
        gbc.setState(0x2251, 0xa1db, 0xd7d0, 0x134a, 0x36af, 0x5ebf, 0x0, 0x1);
        gbc.writeMem(0x2251, { 0x2e, 0xf5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa1db, gbc.sp());
        EXPECT(0x2253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0194
        gbc.setState(0x284b, 0xb61e, 0x28d0, 0xbc76, 0xebc7, 0x235d, 0x0, 0x0);
        gbc.writeMem(0x284b, { 0x2e, 0x8 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb61e, gbc.sp());
        EXPECT(0x284d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0195
        gbc.setState(0xa018, 0x9e97, 0x74f0, 0x4a67, 0x2b0f, 0x2529, 0x1, 0x1);
        gbc.writeMem(0xa018, { 0x2e, 0xef });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9e97, gbc.sp());
        EXPECT(0xa01a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa018));
        EXPECT(0xef, gbc.readMem(0xa019));
        // 2E 0196
        gbc.setState(0x8f1e, 0x5ee6, 0xd8d0, 0xfd34, 0x1ff2, 0x2ab0, 0x0, 0x0);
        gbc.writeMem(0x8f1e, { 0x2e, 0x85 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5ee6, gbc.sp());
        EXPECT(0x8f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8f1e));
        EXPECT(0x85, gbc.readMem(0x8f1f));
        // 2E 0197
        gbc.setState(0xa3f7, 0xd3ce, 0xfb00, 0x29e3, 0xb2a6, 0xd023, 0x1, 0x0);
        gbc.writeMem(0xa3f7, { 0x2e, 0x3b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd3ce, gbc.sp());
        EXPECT(0xa3f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa3f7));
        EXPECT(0x3b, gbc.readMem(0xa3f8));
        // 2E 0198
        gbc.setState(0x23be, 0x926e, 0xd410, 0x93a4, 0xd389, 0x2887, 0x0, 0x1);
        gbc.writeMem(0x23be, { 0x2e, 0x64 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x926e, gbc.sp());
        EXPECT(0x23c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0199
        gbc.setState(0xcb96, 0xd148, 0x59e0, 0x3fc5, 0x23b2, 0xaf97, 0x1, 0x1);
        gbc.writeMem(0xcb96, { 0x2e, 0x3b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd148, gbc.sp());
        EXPECT(0xcb98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xcb96));
        EXPECT(0x3b, gbc.readMem(0xcb97));
        // 2E 019B
        gbc.setState(0x1d59, 0xe1a5, 0xc400, 0xc8bf, 0xa0a3, 0x9492, 0x0, 0x1);
        gbc.writeMem(0x1d59, { 0x2e, 0xcd });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe1a5, gbc.sp());
        EXPECT(0x1d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 019C
        gbc.setState(0xd37c, 0x9e9f, 0x22f0, 0xce61, 0x1671, 0x582d, 0x1, 0x1);
        gbc.writeMem(0xd37c, { 0x2e, 0xe3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9e9f, gbc.sp());
        EXPECT(0xd37e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd37c));
        EXPECT(0xe3, gbc.readMem(0xd37d));
        // 2E 019D
        gbc.setState(0x75f2, 0xf7c9, 0xd960, 0xae06, 0x20a3, 0x29e3, 0x0, 0x0);
        gbc.writeMem(0x75f2, { 0x2e, 0xd });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf7c9, gbc.sp());
        EXPECT(0x75f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 019E
        gbc.setState(0xd65f, 0xa998, 0x8740, 0x8526, 0x64ab, 0x80e2, 0x1, 0x1);
        gbc.writeMem(0xd65f, { 0x2e, 0xf1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa998, gbc.sp());
        EXPECT(0xd661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd65f));
        EXPECT(0xf1, gbc.readMem(0xd660));
        // 2E 019F
        gbc.setState(0x8457, 0x7287, 0xa210, 0x4549, 0x5e8a, 0x1fd9, 0x0, 0x1);
        gbc.writeMem(0x8457, { 0x2e, 0xc0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7287, gbc.sp());
        EXPECT(0x8459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8457));
        EXPECT(0xc0, gbc.readMem(0x8458));
        // 2E 01A0
        gbc.setState(0x93a6, 0xf9fa, 0xb2b0, 0x760a, 0x1150, 0x1205, 0x0, 0x1);
        gbc.writeMem(0x93a6, { 0x2e, 0x54 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf9fa, gbc.sp());
        EXPECT(0x93a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x93a6));
        EXPECT(0x54, gbc.readMem(0x93a7));
        // 2E 01A1
        gbc.setState(0xb225, 0x7d2f, 0xd540, 0x1da8, 0x2bf0, 0x272e, 0x1, 0x0);
        gbc.writeMem(0xb225, { 0x2e, 0xad });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7d2f, gbc.sp());
        EXPECT(0xb227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb225));
        EXPECT(0xad, gbc.readMem(0xb226));
        // 2E 01A2
        gbc.setState(0x7a78, 0x37fa, 0xb920, 0x8636, 0xb311, 0x48ff, 0x1, 0x0);
        gbc.writeMem(0x7a78, { 0x2e, 0xe0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x37fa, gbc.sp());
        EXPECT(0x7a7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 01A3
        gbc.setState(0xd5a2, 0xffd0, 0xe910, 0x711c, 0x9e8a, 0x8427, 0x0, 0x0);
        gbc.writeMem(0xd5a2, { 0x2e, 0x3b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xffd0, gbc.sp());
        EXPECT(0xd5a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd5a2));
        EXPECT(0x3b, gbc.readMem(0xd5a3));
        // 2E 01A4
        gbc.setState(0xecab, 0xc3c0, 0x7950, 0x4bd5, 0x722c, 0x5d4e, 0x1, 0x1);
        gbc.writeMem(0xecab, { 0x2e, 0x82 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc3c0, gbc.sp());
        EXPECT(0xecad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xecab));
        EXPECT(0x82, gbc.readMem(0xecac));
        // 2E 01A6
        gbc.setState(0xd3e6, 0xd39c, 0x42e0, 0x912d, 0x1118, 0x370f, 0x1, 0x1);
        gbc.writeMem(0xd3e6, { 0x2e, 0xe5 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd39c, gbc.sp());
        EXPECT(0xd3e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd3e6));
        EXPECT(0xe5, gbc.readMem(0xd3e7));
        // 2E 01A7
        gbc.setState(0xafda, 0xa8f9, 0xe670, 0xdec, 0x66df, 0x32, 0x0, 0x0);
        gbc.writeMem(0xafda, { 0x2e, 0x52 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa8f9, gbc.sp());
        EXPECT(0xafdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xafda));
        EXPECT(0x52, gbc.readMem(0xafdb));
        // 2E 01A8
        gbc.setState(0xd716, 0xa234, 0xa40, 0x8e72, 0xf470, 0x5f17, 0x0, 0x1);
        gbc.writeMem(0xd716, { 0x2e, 0x50 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa234, gbc.sp());
        EXPECT(0xd718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd716));
        EXPECT(0x50, gbc.readMem(0xd717));
        // 2E 01A9
        gbc.setState(0xb968, 0x8330, 0xd9b0, 0x6413, 0x414f, 0x3896, 0x0, 0x0);
        gbc.writeMem(0xb968, { 0x2e, 0xc8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8330, gbc.sp());
        EXPECT(0xb96a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb968));
        EXPECT(0xc8, gbc.readMem(0xb969));
        // 2E 01AA
        gbc.setState(0x71a8, 0xdf71, 0x7d90, 0xd450, 0xe5be, 0xe222, 0x1, 0x1);
        gbc.writeMem(0x71a8, { 0x2e, 0x39 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xdf71, gbc.sp());
        EXPECT(0x71aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 01AB
        gbc.setState(0x8c8d, 0x34de, 0x91c0, 0x4583, 0xfaeb, 0xeefe, 0x0, 0x1);
        gbc.writeMem(0x8c8d, { 0x2e, 0x3d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x34de, gbc.sp());
        EXPECT(0x8c8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8c8d));
        EXPECT(0x3d, gbc.readMem(0x8c8e));
        // 2E 01AC
        gbc.setState(0xc15d, 0x72bd, 0x6660, 0xf8e7, 0x2f7c, 0xdb72, 0x0, 0x1);
        gbc.writeMem(0xc15d, { 0x2e, 0x8e });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x72bd, gbc.sp());
        EXPECT(0xc15f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc15d));
        EXPECT(0x8e, gbc.readMem(0xc15e));
        // 2E 01AD
        gbc.setState(0xc5ff, 0x7aa1, 0x82b0, 0xc25c, 0x423f, 0x7267, 0x0, 0x1);
        gbc.writeMem(0xc5ff, { 0x2e, 0x3e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7aa1, gbc.sp());
        EXPECT(0xc601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc5ff));
        EXPECT(0x3e, gbc.readMem(0xc600));
        // 2E 01AE
        gbc.setState(0xc893, 0x15ea, 0xb600, 0xd1fa, 0xd93d, 0x8415, 0x1, 0x1);
        gbc.writeMem(0xc893, { 0x2e, 0xa3 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x15ea, gbc.sp());
        EXPECT(0xc895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc893));
        EXPECT(0xa3, gbc.readMem(0xc894));
        // 2E 01AF
        gbc.setState(0x73e0, 0x265c, 0xd9e0, 0xcdf3, 0xc397, 0x3599, 0x1, 0x1);
        gbc.writeMem(0x73e0, { 0x2e, 0x40 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x265c, gbc.sp());
        EXPECT(0x73e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 01B0
        gbc.setState(0xa085, 0xaa32, 0xbee0, 0xefc5, 0x71a9, 0x6e6a, 0x1, 0x0);
        gbc.writeMem(0xa085, { 0x2e, 0xf5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xaa32, gbc.sp());
        EXPECT(0xa087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa085));
        EXPECT(0xf5, gbc.readMem(0xa086));
        // 2E 01B1
        gbc.setState(0xa8dd, 0x2720, 0x7330, 0xcf69, 0x4caf, 0x1142, 0x1, 0x0);
        gbc.writeMem(0xa8dd, { 0x2e, 0xa3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2720, gbc.sp());
        EXPECT(0xa8df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa8dd));
        EXPECT(0xa3, gbc.readMem(0xa8de));
        // 2E 01B2
        gbc.setState(0xbf11, 0x887b, 0x2ef0, 0x1a81, 0x26f2, 0x9b71, 0x0, 0x0);
        gbc.writeMem(0xbf11, { 0x2e, 0x66 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x887b, gbc.sp());
        EXPECT(0xbf13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbf11));
        EXPECT(0x66, gbc.readMem(0xbf12));
        // 2E 01B4
        gbc.setState(0x8aca, 0x873a, 0x7560, 0xe0ec, 0x7d29, 0x1002, 0x1, 0x0);
        gbc.writeMem(0x8aca, { 0x2e, 0x92 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x873a, gbc.sp());
        EXPECT(0x8acc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8aca));
        EXPECT(0x92, gbc.readMem(0x8acb));
        // 2E 01B5
        gbc.setState(0x9bd, 0x5daa, 0x3470, 0xacd5, 0xdea, 0x8f2, 0x1, 0x0);
        gbc.writeMem(0x9bd, { 0x2e, 0x2d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5daa, gbc.sp());
        EXPECT(0x9bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 01B6
        gbc.setState(0xe428, 0xdc3, 0xd530, 0x12bf, 0x517, 0x171d, 0x1, 0x1);
        gbc.writeMem(0xe428, { 0x2e, 0xf });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdc3, gbc.sp());
        EXPECT(0xe42a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe428));
        EXPECT(0xf, gbc.readMem(0xe429));
        // 2E 01B7
        gbc.setState(0x9496, 0xb691, 0x9d0, 0xdd7, 0xe9bf, 0x6377, 0x0, 0x1);
        gbc.writeMem(0x9496, { 0x2e, 0x63 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb691, gbc.sp());
        EXPECT(0x9498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9496));
        EXPECT(0x63, gbc.readMem(0x9497));
        // 2E 01B8
        gbc.setState(0xab94, 0x2430, 0x3590, 0x2038, 0x1870, 0xd28d, 0x0, 0x1);
        gbc.writeMem(0xab94, { 0x2e, 0x69 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2430, gbc.sp());
        EXPECT(0xab96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xab94));
        EXPECT(0x69, gbc.readMem(0xab95));
        // 2E 01B9
        gbc.setState(0x5519, 0x5c66, 0x7e10, 0xed41, 0x164c, 0x5589, 0x0, 0x1);
        gbc.writeMem(0x5519, { 0x2e, 0xd3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5c66, gbc.sp());
        EXPECT(0x551b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 01BA
        gbc.setState(0xcf8a, 0x46ea, 0xe070, 0x292c, 0xb48e, 0x2bef, 0x0, 0x1);
        gbc.writeMem(0xcf8a, { 0x2e, 0x69 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x46ea, gbc.sp());
        EXPECT(0xcf8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xcf8a));
        EXPECT(0x69, gbc.readMem(0xcf8b));
        // 2E 01BB
        gbc.setState(0x7b03, 0x35fe, 0x77a0, 0x2c01, 0x7f4c, 0xee19, 0x0, 0x1);
        gbc.writeMem(0x7b03, { 0x2e, 0x88 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x35fe, gbc.sp());
        EXPECT(0x7b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 01BC
        gbc.setState(0x3883, 0xd655, 0x5790, 0x76ac, 0xb713, 0xa5, 0x0, 0x1);
        gbc.writeMem(0x3883, { 0x2e, 0xe5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd655, gbc.sp());
        EXPECT(0x3885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 01BD
        gbc.setState(0xbe69, 0xef9b, 0x5510, 0xe39f, 0x9b3f, 0xfb50, 0x0, 0x1);
        gbc.writeMem(0xbe69, { 0x2e, 0x7c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xef9b, gbc.sp());
        EXPECT(0xbe6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbe69));
        EXPECT(0x7c, gbc.readMem(0xbe6a));
        // 2E 01BE
        gbc.setState(0x2abc, 0x62ca, 0xd270, 0x7651, 0xb0f5, 0xfb2c, 0x1, 0x0);
        gbc.writeMem(0x2abc, { 0x2e, 0xb7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x62ca, gbc.sp());
        EXPECT(0x2abe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 01BF
        gbc.setState(0x367d, 0x1f47, 0x9450, 0xc290, 0x189f, 0x5268, 0x1, 0x0);
        gbc.writeMem(0x367d, { 0x2e, 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1f47, gbc.sp());
        EXPECT(0x367f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 01C0
        gbc.setState(0xa9ec, 0xdd76, 0x73c0, 0xf305, 0x8ac3, 0x4bf3, 0x0, 0x0);
        gbc.writeMem(0xa9ec, { 0x2e, 0xa3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xdd76, gbc.sp());
        EXPECT(0xa9ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa9ec));
        EXPECT(0xa3, gbc.readMem(0xa9ed));
        // 2E 01C1
        gbc.setState(0xe3cb, 0x2a8e, 0x3c50, 0xb906, 0xa6a1, 0x6183, 0x0, 0x1);
        gbc.writeMem(0xe3cb, { 0x2e, 0xcc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2a8e, gbc.sp());
        EXPECT(0xe3cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe3cb));
        EXPECT(0xcc, gbc.readMem(0xe3cc));
        // 2E 01C2
        gbc.setState(0x4972, 0x6b7b, 0x4090, 0x1775, 0xc622, 0x165b, 0x0, 0x1);
        gbc.writeMem(0x4972, { 0x2e, 0xa6 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6b7b, gbc.sp());
        EXPECT(0x4974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 01C3
        gbc.setState(0x932b, 0x7bc9, 0x9920, 0xa2fd, 0xe60e, 0xbac0, 0x1, 0x0);
        gbc.writeMem(0x932b, { 0x2e, 0xf6 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7bc9, gbc.sp());
        EXPECT(0x932d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x932b));
        EXPECT(0xf6, gbc.readMem(0x932c));
        // 2E 01C4
        gbc.setState(0x7bf6, 0xaf6d, 0x5f90, 0x7153, 0x94a1, 0xa829, 0x0, 0x0);
        gbc.writeMem(0x7bf6, { 0x2e, 0x5e });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xaf6d, gbc.sp());
        EXPECT(0x7bf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 01C5
        gbc.setState(0x7ebd, 0xed04, 0x63d0, 0x4d28, 0xa06f, 0x4cb3, 0x1, 0x1);
        gbc.writeMem(0x7ebd, { 0x2e, 0x79 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xed04, gbc.sp());
        EXPECT(0x7ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 01C6
        gbc.setState(0x2e9c, 0x58ac, 0xab0, 0xe8a1, 0x9cac, 0x8e61, 0x0, 0x0);
        gbc.writeMem(0x2e9c, { 0x2e, 0x28 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x58ac, gbc.sp());
        EXPECT(0x2e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 01C7
        gbc.setState(0x7c1a, 0xdce8, 0xcff0, 0x8194, 0x7dae, 0x1c46, 0x0, 0x0);
        gbc.writeMem(0x7c1a, { 0x2e, 0x42 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdce8, gbc.sp());
        EXPECT(0x7c1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 01C8
        gbc.setState(0x903f, 0x43b9, 0x40b0, 0xb3ed, 0x1d84, 0x9a6e, 0x1, 0x1);
        gbc.writeMem(0x903f, { 0x2e, 0x1b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x43b9, gbc.sp());
        EXPECT(0x9041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x903f));
        EXPECT(0x1b, gbc.readMem(0x9040));
        // 2E 01C9
        gbc.setState(0xbb8c, 0xccd2, 0x1160, 0x4e4f, 0xa84d, 0x466a, 0x0, 0x0);
        gbc.writeMem(0xbb8c, { 0x2e, 0xb7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xccd2, gbc.sp());
        EXPECT(0xbb8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbb8c));
        EXPECT(0xb7, gbc.readMem(0xbb8d));
        // 2E 01CA
        gbc.setState(0x9bad, 0x1848, 0x4650, 0x164c, 0x4a79, 0xcac6, 0x1, 0x0);
        gbc.writeMem(0x9bad, { 0x2e, 0x45 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1848, gbc.sp());
        EXPECT(0x9baf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9bad));
        EXPECT(0x45, gbc.readMem(0x9bae));
        // 2E 01CC
        gbc.setState(0xb39, 0x56df, 0xe60, 0xa501, 0x948d, 0xfd07, 0x0, 0x0);
        gbc.writeMem(0xb39, { 0x2e, 0x12 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x56df, gbc.sp());
        EXPECT(0xb3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 01CD
        gbc.setState(0x6f5c, 0xdc95, 0x2620, 0x3ae3, 0x21f9, 0x5026, 0x0, 0x0);
        gbc.writeMem(0x6f5c, { 0x2e, 0xbb });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdc95, gbc.sp());
        EXPECT(0x6f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 01CE
        gbc.setState(0x773d, 0x266, 0x84e0, 0x652f, 0xd0e1, 0x3267, 0x1, 0x0);
        gbc.writeMem(0x773d, { 0x2e, 0x75 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x266, gbc.sp());
        EXPECT(0x773f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 01CF
        gbc.setState(0x37f8, 0xf49, 0x57b0, 0x42b3, 0xe6dc, 0x3d56, 0x0, 0x0);
        gbc.writeMem(0x37f8, { 0x2e, 0x69 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf49, gbc.sp());
        EXPECT(0x37fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 01D0
        gbc.setState(0x8e75, 0x3b74, 0xc160, 0xc6f1, 0x51f3, 0x6887, 0x1, 0x0);
        gbc.writeMem(0x8e75, { 0x2e, 0x30 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3b74, gbc.sp());
        EXPECT(0x8e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8e75));
        EXPECT(0x30, gbc.readMem(0x8e76));
        // 2E 01D1
        gbc.setState(0x685d, 0x4336, 0x9cc0, 0xed12, 0x458, 0x9e4d, 0x0, 0x1);
        gbc.writeMem(0x685d, { 0x2e, 0x4e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4336, gbc.sp());
        EXPECT(0x685f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 01D3
        gbc.setState(0x287e, 0x14fa, 0xfec0, 0x51a5, 0x687c, 0x33c6, 0x0, 0x0);
        gbc.writeMem(0x287e, { 0x2e, 0x4c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x14fa, gbc.sp());
        EXPECT(0x2880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 01D4
        gbc.setState(0x3ba, 0x641c, 0x88e0, 0x45f7, 0xd56a, 0x9da9, 0x0, 0x0);
        gbc.writeMem(0x3ba, { 0x2e, 0x10 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x641c, gbc.sp());
        EXPECT(0x3bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 01D5
        gbc.setState(0xc6a5, 0x969e, 0x9820, 0x8ac6, 0x905d, 0x4bf, 0x0, 0x0);
        gbc.writeMem(0xc6a5, { 0x2e, 0x1f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x969e, gbc.sp());
        EXPECT(0xc6a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc6a5));
        EXPECT(0x1f, gbc.readMem(0xc6a6));
        // 2E 01D6
        gbc.setState(0x4829, 0x5472, 0x58e0, 0x7b86, 0xca74, 0x76a7, 0x1, 0x1);
        gbc.writeMem(0x4829, { 0x2e, 0x51 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5472, gbc.sp());
        EXPECT(0x482b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 01D7
        gbc.setState(0xe066, 0x5bf8, 0x3fa0, 0xe11c, 0xa06b, 0xa5d2, 0x1, 0x0);
        gbc.writeMem(0xe066, { 0x2e, 0x7a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5bf8, gbc.sp());
        EXPECT(0xe068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe066));
        EXPECT(0x7a, gbc.readMem(0xe067));
        // 2E 01D8
        gbc.setState(0x141f, 0xeb3d, 0xc600, 0xe5a7, 0xc946, 0xfafa, 0x0, 0x0);
        gbc.writeMem(0x141f, { 0x2e, 0x9c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xeb3d, gbc.sp());
        EXPECT(0x1421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 01D9
        gbc.setState(0x5e10, 0xe3f8, 0xb900, 0x54db, 0xcc55, 0x485f, 0x0, 0x1);
        gbc.writeMem(0x5e10, { 0x2e, 0x40 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe3f8, gbc.sp());
        EXPECT(0x5e12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 01DA
        gbc.setState(0xed76, 0x8966, 0xda70, 0x8778, 0xd4e5, 0x4d82, 0x0, 0x0);
        gbc.writeMem(0xed76, { 0x2e, 0x6d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8966, gbc.sp());
        EXPECT(0xed78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xed76));
        EXPECT(0x6d, gbc.readMem(0xed77));
        // 2E 01DB
        gbc.setState(0x2be7, 0xea8e, 0xc6b0, 0xfc4d, 0xd529, 0x5df8, 0x0, 0x1);
        gbc.writeMem(0x2be7, { 0x2e, 0x2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xea8e, gbc.sp());
        EXPECT(0x2be9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 01DC
        gbc.setState(0xdd3e, 0x5b3b, 0x2150, 0xb874, 0x65b6, 0xbd6c, 0x1, 0x1);
        gbc.writeMem(0xdd3e, { 0x2e, 0x78 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5b3b, gbc.sp());
        EXPECT(0xdd40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xdd3e));
        EXPECT(0x78, gbc.readMem(0xdd3f));
        // 2E 01DD
        gbc.setState(0x5a2d, 0xbb3d, 0x5c20, 0x9606, 0xef2f, 0x8b0a, 0x1, 0x1);
        gbc.writeMem(0x5a2d, { 0x2e, 0xe5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbb3d, gbc.sp());
        EXPECT(0x5a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 01DE
        gbc.setState(0xbb1c, 0x57f0, 0x7200, 0x12ef, 0xa02f, 0x4837, 0x1, 0x0);
        gbc.writeMem(0xbb1c, { 0x2e, 0x11 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x57f0, gbc.sp());
        EXPECT(0xbb1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbb1c));
        EXPECT(0x11, gbc.readMem(0xbb1d));
        // 2E 01DF
        gbc.setState(0x393, 0xeb08, 0x3560, 0x803a, 0x2336, 0x87fe, 0x0, 0x1);
        gbc.writeMem(0x393, { 0x2e, 0x6c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xeb08, gbc.sp());
        EXPECT(0x395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 01E0
        gbc.setState(0xbb2c, 0xc3b0, 0x7520, 0x87c7, 0x11a6, 0x4ec5, 0x0, 0x0);
        gbc.writeMem(0xbb2c, { 0x2e, 0x17 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc3b0, gbc.sp());
        EXPECT(0xbb2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbb2c));
        EXPECT(0x17, gbc.readMem(0xbb2d));
        // 2E 01E1
        gbc.setState(0xa98c, 0x3b2f, 0x8970, 0x83be, 0x9ea8, 0xf26e, 0x0, 0x1);
        gbc.writeMem(0xa98c, { 0x2e, 0xc5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3b2f, gbc.sp());
        EXPECT(0xa98e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa98c));
        EXPECT(0xc5, gbc.readMem(0xa98d));
        // 2E 01E2
        gbc.setState(0x7a98, 0x7ae1, 0x2fd0, 0x977, 0x40ee, 0x737b, 0x1, 0x1);
        gbc.writeMem(0x7a98, { 0x2e, 0xf });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7ae1, gbc.sp());
        EXPECT(0x7a9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 01E3
        gbc.setState(0x6912, 0xcc8b, 0xac50, 0xa676, 0x11fd, 0x3fab, 0x1, 0x0);
        gbc.writeMem(0x6912, { 0x2e, 0x27 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcc8b, gbc.sp());
        EXPECT(0x6914, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 01E4
        gbc.setState(0xd7c2, 0x23ff, 0x9440, 0x93dd, 0xdde5, 0xb29a, 0x1, 0x1);
        gbc.writeMem(0xd7c2, { 0x2e, 0x5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x23ff, gbc.sp());
        EXPECT(0xd7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd7c2));
        EXPECT(0x5, gbc.readMem(0xd7c3));
        // 2E 01E5
        gbc.setState(0x14db, 0x7957, 0xc9a0, 0x7410, 0x6677, 0x526b, 0x1, 0x1);
        gbc.writeMem(0x14db, { 0x2e, 0x2a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7957, gbc.sp());
        EXPECT(0x14dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 01E6
        gbc.setState(0x2b34, 0xdf0b, 0x4af0, 0xf4aa, 0xbd71, 0x2dd9, 0x1, 0x0);
        gbc.writeMem(0x2b34, { 0x2e, 0x2a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xdf0b, gbc.sp());
        EXPECT(0x2b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 01E7
        gbc.setState(0x24b3, 0x3090, 0x2720, 0x442d, 0x160b, 0xbd64, 0x1, 0x0);
        gbc.writeMem(0x24b3, { 0x2e, 0x49 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3090, gbc.sp());
        EXPECT(0x24b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 01E8
        gbc.setState(0x1115, 0xa359, 0xad60, 0x77cb, 0x973e, 0x808e, 0x1, 0x1);
        gbc.writeMem(0x1115, { 0x2e, 0x9a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa359, gbc.sp());
        EXPECT(0x1117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 01E9
        gbc.setState(0x64cd, 0xf3d4, 0x1b0, 0x2184, 0xe7f6, 0x890d, 0x1, 0x1);
        gbc.writeMem(0x64cd, { 0x2e, 0x3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf3d4, gbc.sp());
        EXPECT(0x64cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 01EA
        gbc.setState(0x446b, 0xa2b7, 0xb0f0, 0x5276, 0x8bb3, 0xd62e, 0x1, 0x1);
        gbc.writeMem(0x446b, { 0x2e, 0xf });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa2b7, gbc.sp());
        EXPECT(0x446d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 01EB
        gbc.setState(0xd222, 0xb95c, 0xc600, 0x997a, 0x52ab, 0x4ca5, 0x0, 0x0);
        gbc.writeMem(0xd222, { 0x2e, 0x26 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb95c, gbc.sp());
        EXPECT(0xd224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd222));
        EXPECT(0x26, gbc.readMem(0xd223));
        // 2E 01EC
        gbc.setState(0x849c, 0xd4d7, 0xf0b0, 0x7a01, 0x70e2, 0xf696, 0x0, 0x0);
        gbc.writeMem(0x849c, { 0x2e, 0x99 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd4d7, gbc.sp());
        EXPECT(0x849e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x849c));
        EXPECT(0x99, gbc.readMem(0x849d));
        // 2E 01ED
        gbc.setState(0xd67a, 0x777e, 0x2030, 0x8f6a, 0x84d8, 0x9b40, 0x1, 0x0);
        gbc.writeMem(0xd67a, { 0x2e, 0x1c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x777e, gbc.sp());
        EXPECT(0xd67c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd67a));
        EXPECT(0x1c, gbc.readMem(0xd67b));
        // 2E 01EE
        gbc.setState(0x13e5, 0xb517, 0xb2e0, 0xb833, 0xfd65, 0x80f7, 0x0, 0x1);
        gbc.writeMem(0x13e5, { 0x2e, 0x38 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb517, gbc.sp());
        EXPECT(0x13e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 01EF
        gbc.setState(0x5302, 0x7ff0, 0x4470, 0x928e, 0xac17, 0x882d, 0x1, 0x0);
        gbc.writeMem(0x5302, { 0x2e, 0xb7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7ff0, gbc.sp());
        EXPECT(0x5304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 01F0
        gbc.setState(0xb5a2, 0xfb98, 0xe340, 0x4fbb, 0xdba5, 0x145, 0x0, 0x0);
        gbc.writeMem(0xb5a2, { 0x2e, 0x63 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfb98, gbc.sp());
        EXPECT(0xb5a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb5a2));
        EXPECT(0x63, gbc.readMem(0xb5a3));
        // 2E 01F1
        gbc.setState(0xe31d, 0x61c0, 0xa0c0, 0x7576, 0x8b32, 0xf5e4, 0x1, 0x1);
        gbc.writeMem(0xe31d, { 0x2e, 0xf4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x61c0, gbc.sp());
        EXPECT(0xe31f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe31d));
        EXPECT(0xf4, gbc.readMem(0xe31e));
        // 2E 01F2
        gbc.setState(0xc3e8, 0xb513, 0xaa60, 0x67ed, 0x8525, 0x183b, 0x1, 0x1);
        gbc.writeMem(0xc3e8, { 0x2e, 0xa5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb513, gbc.sp());
        EXPECT(0xc3ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc3e8));
        EXPECT(0xa5, gbc.readMem(0xc3e9));
        // 2E 01F3
        gbc.setState(0x809b, 0x8548, 0x9270, 0x6b2, 0xf007, 0x48f2, 0x1, 0x0);
        gbc.writeMem(0x809b, { 0x2e, 0x61 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8548, gbc.sp());
        EXPECT(0x809d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x809b));
        EXPECT(0x61, gbc.readMem(0x809c));
        // 2E 01F4
        gbc.setState(0x98e6, 0xa889, 0x16e0, 0xd26, 0xb82, 0xb2ee, 0x0, 0x0);
        gbc.writeMem(0x98e6, { 0x2e, 0xbd });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa889, gbc.sp());
        EXPECT(0x98e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x98e6));
        EXPECT(0xbd, gbc.readMem(0x98e7));
        // 2E 01F5
        gbc.setState(0xaf94, 0x63a5, 0x5d00, 0x4fe9, 0x3302, 0x9f52, 0x0, 0x0);
        gbc.writeMem(0xaf94, { 0x2e, 0x6c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x63a5, gbc.sp());
        EXPECT(0xaf96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xaf94));
        EXPECT(0x6c, gbc.readMem(0xaf95));
        // 2E 01F6
        gbc.setState(0x2311, 0x4641, 0x4080, 0xc618, 0x1dc3, 0xea4, 0x1, 0x0);
        gbc.writeMem(0x2311, { 0x2e, 0x82 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4641, gbc.sp());
        EXPECT(0x2313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 01F7
        gbc.setState(0x4e97, 0x6fdb, 0xba40, 0x11a, 0x9bd9, 0xcb11, 0x1, 0x1);
        gbc.writeMem(0x4e97, { 0x2e, 0xd6 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6fdb, gbc.sp());
        EXPECT(0x4e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 01F8
        gbc.setState(0x8322, 0x3325, 0x3190, 0x9355, 0xf309, 0x6257, 0x0, 0x1);
        gbc.writeMem(0x8322, { 0x2e, 0x8f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3325, gbc.sp());
        EXPECT(0x8324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8322));
        EXPECT(0x8f, gbc.readMem(0x8323));
        // 2E 01F9
        gbc.setState(0xb34f, 0xcabb, 0x4140, 0x7f8e, 0x47e7, 0x417d, 0x1, 0x0);
        gbc.writeMem(0xb34f, { 0x2e, 0x74 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xcabb, gbc.sp());
        EXPECT(0xb351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb34f));
        EXPECT(0x74, gbc.readMem(0xb350));
        // 2E 01FA
        gbc.setState(0x3b6b, 0x2ef4, 0xb280, 0x3460, 0x745d, 0xc847, 0x0, 0x0);
        gbc.writeMem(0x3b6b, { 0x2e, 0x79 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2ef4, gbc.sp());
        EXPECT(0x3b6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 01FB
        gbc.setState(0x86f8, 0xaeeb, 0x2500, 0xe276, 0xff54, 0x3491, 0x0, 0x1);
        gbc.writeMem(0x86f8, { 0x2e, 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xaeeb, gbc.sp());
        EXPECT(0x86fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x86f8));
        EXPECT(0x0, gbc.readMem(0x86f9));
        // 2E 01FC
        gbc.setState(0x784b, 0x1b45, 0x7ed0, 0x8bed, 0x9cdf, 0x9d6c, 0x0, 0x1);
        gbc.writeMem(0x784b, { 0x2e, 0xdb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1b45, gbc.sp());
        EXPECT(0x784d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 01FD
        gbc.setState(0x7093, 0x4247, 0x4880, 0x5054, 0x63c2, 0x67a8, 0x1, 0x1);
        gbc.writeMem(0x7093, { 0x2e, 0x8b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4247, gbc.sp());
        EXPECT(0x7095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 01FE
        gbc.setState(0xce3f, 0xf829, 0xbf50, 0x5939, 0x88f3, 0xbb67, 0x1, 0x0);
        gbc.writeMem(0xce3f, { 0x2e, 0xf6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf829, gbc.sp());
        EXPECT(0xce41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xce3f));
        EXPECT(0xf6, gbc.readMem(0xce40));
        // 2E 01FF
        gbc.setState(0xba0f, 0x50cd, 0x6b70, 0x259e, 0x1cd4, 0x4a4b, 0x0, 0x0);
        gbc.writeMem(0xba0f, { 0x2e, 0x9c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x50cd, gbc.sp());
        EXPECT(0xba11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xba0f));
        EXPECT(0x9c, gbc.readMem(0xba10));
        // 2E 0200
        gbc.setState(0x37e3, 0xdbab, 0x6ee0, 0xa26a, 0x3a96, 0xd567, 0x0, 0x1);
        gbc.writeMem(0x37e3, { 0x2e, 0x72 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xdbab, gbc.sp());
        EXPECT(0x37e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0201
        gbc.setState(0x3d97, 0xd90c, 0x7310, 0x9a68, 0x5a62, 0x15c5, 0x0, 0x0);
        gbc.writeMem(0x3d97, { 0x2e, 0x99 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd90c, gbc.sp());
        EXPECT(0x3d99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0202
        gbc.setState(0x721f, 0xc8ea, 0xd930, 0xbac0, 0xc195, 0x84e6, 0x1, 0x0);
        gbc.writeMem(0x721f, { 0x2e, 0xbc });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc8ea, gbc.sp());
        EXPECT(0x7221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0203
        gbc.setState(0x73e0, 0x7447, 0x1940, 0x5366, 0x2c8f, 0x5fb4, 0x0, 0x1);
        gbc.writeMem(0x73e0, { 0x2e, 0x40 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7447, gbc.sp());
        EXPECT(0x73e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0204
        gbc.setState(0x75, 0x3255, 0x7870, 0xb195, 0x62e9, 0xb5e1, 0x1, 0x0);
        gbc.writeMem(0x75, { 0x2e, 0xbf });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3255, gbc.sp());
        EXPECT(0x77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0205
        gbc.setState(0x57cc, 0xbffd, 0x2d70, 0x68fe, 0x2fd9, 0x193, 0x0, 0x1);
        gbc.writeMem(0x57cc, { 0x2e, 0xa8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xbffd, gbc.sp());
        EXPECT(0x57ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0206
        gbc.setState(0x5170, 0xc2ac, 0x2e60, 0x4b87, 0xa864, 0x1d2, 0x1, 0x1);
        gbc.writeMem(0x5170, { 0x2e, 0xdf });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc2ac, gbc.sp());
        EXPECT(0x5172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0207
        gbc.setState(0x761a, 0xb3c8, 0x4b40, 0x3782, 0xb5b1, 0x69a2, 0x1, 0x0);
        gbc.writeMem(0x761a, { 0x2e, 0x22 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb3c8, gbc.sp());
        EXPECT(0x761c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0208
        gbc.setState(0x1af4, 0xa3c9, 0x2e60, 0x68c5, 0x681a, 0x8d7a, 0x1, 0x0);
        gbc.writeMem(0x1af4, { 0x2e, 0xc7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa3c9, gbc.sp());
        EXPECT(0x1af6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0209
        gbc.setState(0x5a06, 0xdd13, 0x9a10, 0x6da1, 0x48f7, 0x9bb8, 0x1, 0x0);
        gbc.writeMem(0x5a06, { 0x2e, 0xe6 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xdd13, gbc.sp());
        EXPECT(0x5a08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 020A
        gbc.setState(0xa1e9, 0xe657, 0x74e0, 0xf068, 0xfa0f, 0x96e9, 0x0, 0x1);
        gbc.writeMem(0xa1e9, { 0x2e, 0xf6 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe657, gbc.sp());
        EXPECT(0xa1eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa1e9));
        EXPECT(0xf6, gbc.readMem(0xa1ea));
        // 2E 020B
        gbc.setState(0xcd35, 0xb735, 0xb900, 0x17bc, 0x283, 0xd1c6, 0x1, 0x1);
        gbc.writeMem(0xcd35, { 0x2e, 0x72 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb735, gbc.sp());
        EXPECT(0xcd37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xcd35));
        EXPECT(0x72, gbc.readMem(0xcd36));
        // 2E 020C
        gbc.setState(0x18ea, 0x7943, 0x9110, 0xbf28, 0x28ba, 0x6870, 0x0, 0x1);
        gbc.writeMem(0x18ea, { 0x2e, 0x79 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7943, gbc.sp());
        EXPECT(0x18ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 020D
        gbc.setState(0x9c4b, 0xd36c, 0x3d90, 0x175, 0x280, 0x668e, 0x1, 0x0);
        gbc.writeMem(0x9c4b, { 0x2e, 0x4f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd36c, gbc.sp());
        EXPECT(0x9c4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9c4b));
        EXPECT(0x4f, gbc.readMem(0x9c4c));
        // 2E 020E
        gbc.setState(0x902a, 0x1361, 0xf000, 0x215e, 0xe8eb, 0x6a8a, 0x0, 0x1);
        gbc.writeMem(0x902a, { 0x2e, 0xf3 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1361, gbc.sp());
        EXPECT(0x902c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x902a));
        EXPECT(0xf3, gbc.readMem(0x902b));
        // 2E 020F
        gbc.setState(0x234b, 0x64ac, 0x1010, 0xfa9f, 0x2849, 0x4a5e, 0x0, 0x1);
        gbc.writeMem(0x234b, { 0x2e, 0x50 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x64ac, gbc.sp());
        EXPECT(0x234d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0210
        gbc.setState(0x97d3, 0x9191, 0x18f0, 0x2707, 0xf4cb, 0xcfe5, 0x1, 0x0);
        gbc.writeMem(0x97d3, { 0x2e, 0x25 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9191, gbc.sp());
        EXPECT(0x97d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x97d3));
        EXPECT(0x25, gbc.readMem(0x97d4));
        // 2E 0211
        gbc.setState(0x15ff, 0xfc85, 0xdc90, 0x357f, 0xd4b6, 0x6a33, 0x1, 0x0);
        gbc.writeMem(0x15ff, { 0x2e, 0x34 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfc85, gbc.sp());
        EXPECT(0x1601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0212
        gbc.setState(0x88cd, 0xf0e2, 0xc080, 0xd255, 0x2134, 0x36a0, 0x0, 0x1);
        gbc.writeMem(0x88cd, { 0x2e, 0x8e });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf0e2, gbc.sp());
        EXPECT(0x88cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x88cd));
        EXPECT(0x8e, gbc.readMem(0x88ce));
        // 2E 0213
        gbc.setState(0xa192, 0xe94, 0x4550, 0x83ce, 0xfc2a, 0x10f, 0x1, 0x0);
        gbc.writeMem(0xa192, { 0x2e, 0x1b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe94, gbc.sp());
        EXPECT(0xa194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa192));
        EXPECT(0x1b, gbc.readMem(0xa193));
        // 2E 0214
        gbc.setState(0x7f0c, 0x7078, 0x7790, 0xc4eb, 0x91b3, 0xad2e, 0x1, 0x1);
        gbc.writeMem(0x7f0c, { 0x2e, 0x13 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7078, gbc.sp());
        EXPECT(0x7f0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0215
        gbc.setState(0x5fe, 0x25c7, 0xa420, 0xe6c4, 0xc00b, 0x3e16, 0x1, 0x0);
        gbc.writeMem(0x5fe, { 0x2e, 0xfc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x25c7, gbc.sp());
        EXPECT(0x600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0216
        gbc.setState(0x1ce9, 0x9d85, 0xc310, 0x989, 0x89a, 0x579a, 0x1, 0x1);
        gbc.writeMem(0x1ce9, { 0x2e, 0x75 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9d85, gbc.sp());
        EXPECT(0x1ceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0217
        gbc.setState(0x466b, 0x632c, 0x8100, 0xbf1, 0xd472, 0xcfd8, 0x1, 0x0);
        gbc.writeMem(0x466b, { 0x2e, 0xec });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x632c, gbc.sp());
        EXPECT(0x466d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0218
        gbc.setState(0xc432, 0xeaa5, 0x64d0, 0x97a, 0x4f30, 0x8a2f, 0x0, 0x1);
        gbc.writeMem(0xc432, { 0x2e, 0x1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xeaa5, gbc.sp());
        EXPECT(0xc434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc432));
        EXPECT(0x1, gbc.readMem(0xc433));
        // 2E 0219
        gbc.setState(0xe6c6, 0x5500, 0xd750, 0xac11, 0x2e8d, 0xf6ff, 0x1, 0x1);
        gbc.writeMem(0xe6c6, { 0x2e, 0xaa });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5500, gbc.sp());
        EXPECT(0xe6c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe6c6));
        EXPECT(0xaa, gbc.readMem(0xe6c7));
        // 2E 021A
        gbc.setState(0xd1b9, 0xe88e, 0xaa80, 0x79c9, 0xa382, 0x2cd0, 0x1, 0x1);
        gbc.writeMem(0xd1b9, { 0x2e, 0x2a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe88e, gbc.sp());
        EXPECT(0xd1bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd1b9));
        EXPECT(0x2a, gbc.readMem(0xd1ba));
        // 2E 021B
        gbc.setState(0xb32c, 0x35a8, 0x5f90, 0xfba4, 0x85a8, 0x7714, 0x0, 0x0);
        gbc.writeMem(0xb32c, { 0x2e, 0xea });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x35a8, gbc.sp());
        EXPECT(0xb32e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb32c));
        EXPECT(0xea, gbc.readMem(0xb32d));
        // 2E 021D
        gbc.setState(0x2578, 0xcc5d, 0x9530, 0x4fc9, 0x21fe, 0x84f7, 0x1, 0x0);
        gbc.writeMem(0x2578, { 0x2e, 0xe6 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xcc5d, gbc.sp());
        EXPECT(0x257a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 021E
        gbc.setState(0x3498, 0x4aba, 0x6fd0, 0x7cd1, 0x8b52, 0x9465, 0x0, 0x0);
        gbc.writeMem(0x3498, { 0x2e, 0x66 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4aba, gbc.sp());
        EXPECT(0x349a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 021F
        gbc.setState(0xe6b9, 0xfaac, 0xb10, 0xae5, 0x69b, 0xc96b, 0x1, 0x0);
        gbc.writeMem(0xe6b9, { 0x2e, 0xb0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xfaac, gbc.sp());
        EXPECT(0xe6bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe6b9));
        EXPECT(0xb0, gbc.readMem(0xe6ba));
        // 2E 0220
        gbc.setState(0x26bc, 0x1fab, 0x700, 0x8fa, 0xd747, 0xee4e, 0x1, 0x0);
        gbc.writeMem(0x26bc, { 0x2e, 0x2d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1fab, gbc.sp());
        EXPECT(0x26be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0221
        gbc.setState(0x22ee, 0x1c6a, 0x4be0, 0x3351, 0x47ad, 0x396c, 0x0, 0x1);
        gbc.writeMem(0x22ee, { 0x2e, 0x94 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1c6a, gbc.sp());
        EXPECT(0x22f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0222
        gbc.setState(0x36a1, 0x5259, 0xdb20, 0xbaa5, 0xfec8, 0xcb62, 0x0, 0x0);
        gbc.writeMem(0x36a1, { 0x2e, 0x29 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5259, gbc.sp());
        EXPECT(0x36a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0223
        gbc.setState(0x47ab, 0x519c, 0x9d80, 0x62dd, 0x5f05, 0x6ffb, 0x0, 0x0);
        gbc.writeMem(0x47ab, { 0x2e, 0x77 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x519c, gbc.sp());
        EXPECT(0x47ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0224
        gbc.setState(0xcaef, 0xb7, 0x6960, 0x9896, 0xe553, 0x107e, 0x1, 0x0);
        gbc.writeMem(0xcaef, { 0x2e, 0xdd });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb7, gbc.sp());
        EXPECT(0xcaf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xcaef));
        EXPECT(0xdd, gbc.readMem(0xcaf0));
        // 2E 0225
        gbc.setState(0xe3f8, 0xbf58, 0x3130, 0xe1f7, 0x6d67, 0x327f, 0x1, 0x0);
        gbc.writeMem(0xe3f8, { 0x2e, 0x8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbf58, gbc.sp());
        EXPECT(0xe3fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe3f8));
        EXPECT(0x8, gbc.readMem(0xe3f9));
        // 2E 0226
        gbc.setState(0x499d, 0x72d3, 0x2eb0, 0x99c2, 0x3c5e, 0x3b11, 0x0, 0x1);
        gbc.writeMem(0x499d, { 0x2e, 0xb5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x72d3, gbc.sp());
        EXPECT(0x499f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0227
        gbc.setState(0x1ed7, 0x38c0, 0x5120, 0x1bf5, 0x3b13, 0x4bfa, 0x1, 0x0);
        gbc.writeMem(0x1ed7, { 0x2e, 0x83 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x38c0, gbc.sp());
        EXPECT(0x1ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0228
        gbc.setState(0xd2b5, 0x45ce, 0xcd20, 0x1df6, 0x8dff, 0xdcf, 0x1, 0x0);
        gbc.writeMem(0xd2b5, { 0x2e, 0x2 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x45ce, gbc.sp());
        EXPECT(0xd2b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd2b5));
        EXPECT(0x2, gbc.readMem(0xd2b6));
        // 2E 0229
        gbc.setState(0x3ec2, 0x64fd, 0x41e0, 0xa65d, 0x37bb, 0x24b6, 0x1, 0x1);
        gbc.writeMem(0x3ec2, { 0x2e, 0xa5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x64fd, gbc.sp());
        EXPECT(0x3ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 022B
        gbc.setState(0x7217, 0x4fd2, 0x65a0, 0xeeb1, 0x3c1e, 0x56ad, 0x1, 0x1);
        gbc.writeMem(0x7217, { 0x2e, 0xa7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4fd2, gbc.sp());
        EXPECT(0x7219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 022C
        gbc.setState(0x277, 0x15d8, 0x2340, 0x6c41, 0x2744, 0xe664, 0x1, 0x1);
        gbc.writeMem(0x277, { 0x2e, 0x24 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x15d8, gbc.sp());
        EXPECT(0x279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 022D
        gbc.setState(0x4a35, 0x8dfb, 0xa550, 0xc1f1, 0xac28, 0x95b8, 0x1, 0x0);
        gbc.writeMem(0x4a35, { 0x2e, 0xef });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8dfb, gbc.sp());
        EXPECT(0x4a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 022E
        gbc.setState(0xd176, 0x43ab, 0xff70, 0x92a0, 0xe5f3, 0x81f7, 0x0, 0x0);
        gbc.writeMem(0xd176, { 0x2e, 0xe7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x43ab, gbc.sp());
        EXPECT(0xd178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd176));
        EXPECT(0xe7, gbc.readMem(0xd177));
        // 2E 022F
        gbc.setState(0xc7cd, 0xa175, 0x5b20, 0x7c43, 0x67d0, 0x3510, 0x0, 0x0);
        gbc.writeMem(0xc7cd, { 0x2e, 0x19 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa175, gbc.sp());
        EXPECT(0xc7cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc7cd));
        EXPECT(0x19, gbc.readMem(0xc7ce));
        // 2E 0230
        gbc.setState(0x7035, 0x740c, 0xe280, 0x20d6, 0x6dcd, 0xd3ac, 0x1, 0x1);
        gbc.writeMem(0x7035, { 0x2e, 0xc0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x740c, gbc.sp());
        EXPECT(0x7037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0231
        gbc.setState(0x3c39, 0x3520, 0xf30, 0x6de9, 0x8e77, 0x61b9, 0x1, 0x1);
        gbc.writeMem(0x3c39, { 0x2e, 0x4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3520, gbc.sp());
        EXPECT(0x3c3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0232
        gbc.setState(0x87cc, 0x739c, 0xbc50, 0x9e05, 0x9002, 0xfa73, 0x0, 0x1);
        gbc.writeMem(0x87cc, { 0x2e, 0x49 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x739c, gbc.sp());
        EXPECT(0x87ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x87cc));
        EXPECT(0x49, gbc.readMem(0x87cd));
        // 2E 0233
        gbc.setState(0xa209, 0x7034, 0x9f80, 0x7d5d, 0x514f, 0x3517, 0x1, 0x0);
        gbc.writeMem(0xa209, { 0x2e, 0x3a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7034, gbc.sp());
        EXPECT(0xa20b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa209));
        EXPECT(0x3a, gbc.readMem(0xa20a));
        // 2E 0235
        gbc.setState(0xd4c6, 0xb2c, 0x1490, 0x78d3, 0x9451, 0xad90, 0x0, 0x0);
        gbc.writeMem(0xd4c6, { 0x2e, 0xce });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb2c, gbc.sp());
        EXPECT(0xd4c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd4c6));
        EXPECT(0xce, gbc.readMem(0xd4c7));
        // 2E 0236
        gbc.setState(0x33c4, 0x9659, 0x2bf0, 0x5127, 0x9a87, 0x3bb0, 0x0, 0x0);
        gbc.writeMem(0x33c4, { 0x2e, 0xe2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9659, gbc.sp());
        EXPECT(0x33c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0237
        gbc.setState(0xa82d, 0xa180, 0x16f0, 0xc670, 0xc428, 0x8929, 0x0, 0x0);
        gbc.writeMem(0xa82d, { 0x2e, 0x17 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa180, gbc.sp());
        EXPECT(0xa82f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa82d));
        EXPECT(0x17, gbc.readMem(0xa82e));
        // 2E 0238
        gbc.setState(0x22c2, 0xfa93, 0x92b0, 0x8908, 0x7428, 0x5a3, 0x0, 0x0);
        gbc.writeMem(0x22c2, { 0x2e, 0xf0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfa93, gbc.sp());
        EXPECT(0x22c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0239
        gbc.setState(0x3684, 0x3e24, 0xb670, 0x994b, 0x76a9, 0x5c4c, 0x1, 0x1);
        gbc.writeMem(0x3684, { 0x2e, 0x87 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3e24, gbc.sp());
        EXPECT(0x3686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 023A
        gbc.setState(0x8a02, 0x8c51, 0x14f0, 0x8b69, 0xdb5f, 0x3e83, 0x1, 0x0);
        gbc.writeMem(0x8a02, { 0x2e, 0x7a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8c51, gbc.sp());
        EXPECT(0x8a04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8a02));
        EXPECT(0x7a, gbc.readMem(0x8a03));
        // 2E 023B
        gbc.setState(0x2e4d, 0x7477, 0x2330, 0x799d, 0xd9c0, 0x943b, 0x0, 0x1);
        gbc.writeMem(0x2e4d, { 0x2e, 0xbe });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7477, gbc.sp());
        EXPECT(0x2e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 023C
        gbc.setState(0xaa81, 0x3ef2, 0xafb0, 0xe6f6, 0x9551, 0xeb81, 0x1, 0x0);
        gbc.writeMem(0xaa81, { 0x2e, 0x28 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3ef2, gbc.sp());
        EXPECT(0xaa83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xaa81));
        EXPECT(0x28, gbc.readMem(0xaa82));
        // 2E 023D
        gbc.setState(0x927b, 0x4933, 0x59f0, 0x5428, 0xecf0, 0x3dbb, 0x1, 0x0);
        gbc.writeMem(0x927b, { 0x2e, 0x7c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4933, gbc.sp());
        EXPECT(0x927d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x927b));
        EXPECT(0x7c, gbc.readMem(0x927c));
        // 2E 023E
        gbc.setState(0x5fa8, 0x4881, 0xd3e0, 0x207c, 0xbe28, 0xe905, 0x0, 0x0);
        gbc.writeMem(0x5fa8, { 0x2e, 0xf7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4881, gbc.sp());
        EXPECT(0x5faa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 023F
        gbc.setState(0xbb9f, 0x8678, 0x9750, 0x800a, 0x832e, 0x7b72, 0x1, 0x1);
        gbc.writeMem(0xbb9f, { 0x2e, 0xa7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8678, gbc.sp());
        EXPECT(0xbba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbb9f));
        EXPECT(0xa7, gbc.readMem(0xbba0));
        // 2E 0240
        gbc.setState(0x315b, 0xc6c5, 0x25f0, 0x9bdc, 0xcc4f, 0x79ab, 0x0, 0x0);
        gbc.writeMem(0x315b, { 0x2e, 0x7a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc6c5, gbc.sp());
        EXPECT(0x315d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0241
        gbc.setState(0x8a1a, 0x8b06, 0x6e10, 0xc7a5, 0xd98c, 0xa4c2, 0x1, 0x1);
        gbc.writeMem(0x8a1a, { 0x2e, 0xc1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8b06, gbc.sp());
        EXPECT(0x8a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8a1a));
        EXPECT(0xc1, gbc.readMem(0x8a1b));
        // 2E 0242
        gbc.setState(0x73bf, 0x7d4b, 0x20e0, 0x2320, 0x8336, 0x989c, 0x1, 0x0);
        gbc.writeMem(0x73bf, { 0x2e, 0x4a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7d4b, gbc.sp());
        EXPECT(0x73c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0243
        gbc.setState(0x27ce, 0x70f6, 0xeb30, 0xb4cb, 0xd7e4, 0x3043, 0x0, 0x1);
        gbc.writeMem(0x27ce, { 0x2e, 0xef });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x70f6, gbc.sp());
        EXPECT(0x27d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0244
        gbc.setState(0xef95, 0x8f6, 0xf710, 0xa8a0, 0xa65, 0xe3e3, 0x1, 0x0);
        gbc.writeMem(0xef95, { 0x2e, 0x9b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8f6, gbc.sp());
        EXPECT(0xef97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xef95));
        EXPECT(0x9b, gbc.readMem(0xef96));
        // 2E 0245
        gbc.setState(0x9a7f, 0xa92, 0x1ae0, 0x2693, 0x2573, 0xdb8e, 0x0, 0x0);
        gbc.writeMem(0x9a7f, { 0x2e, 0x5a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa92, gbc.sp());
        EXPECT(0x9a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9a7f));
        EXPECT(0x5a, gbc.readMem(0x9a80));
        // 2E 0246
        gbc.setState(0x1edf, 0xea4e, 0xd4f0, 0xaeb7, 0x64f6, 0x6501, 0x1, 0x1);
        gbc.writeMem(0x1edf, { 0x2e, 0xa2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xea4e, gbc.sp());
        EXPECT(0x1ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0247
        gbc.setState(0x2011, 0xf107, 0xfce0, 0xd551, 0xf122, 0x110f, 0x1, 0x1);
        gbc.writeMem(0x2011, { 0x2e, 0x63 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf107, gbc.sp());
        EXPECT(0x2013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0248
        gbc.setState(0x4fb7, 0x63a2, 0x93e0, 0xe95d, 0x4fe, 0x5180, 0x0, 0x1);
        gbc.writeMem(0x4fb7, { 0x2e, 0xc9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x63a2, gbc.sp());
        EXPECT(0x4fb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0249
        gbc.setState(0x85ab, 0x9ce, 0x4d40, 0x6b72, 0xac62, 0x83cd, 0x0, 0x0);
        gbc.writeMem(0x85ab, { 0x2e, 0xca });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9ce, gbc.sp());
        EXPECT(0x85ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x85ab));
        EXPECT(0xca, gbc.readMem(0x85ac));
        // 2E 024A
        gbc.setState(0xe1ec, 0x12ce, 0xaf10, 0x5f2c, 0xc3e, 0x3674, 0x0, 0x1);
        gbc.writeMem(0xe1ec, { 0x2e, 0x64 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x12ce, gbc.sp());
        EXPECT(0xe1ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe1ec));
        EXPECT(0x64, gbc.readMem(0xe1ed));
        // 2E 024C
        gbc.setState(0xe511, 0x63dc, 0xccc0, 0x47a1, 0x614b, 0x45c, 0x1, 0x1);
        gbc.writeMem(0xe511, { 0x2e, 0xb3 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x63dc, gbc.sp());
        EXPECT(0xe513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe511));
        EXPECT(0xb3, gbc.readMem(0xe512));
        // 2E 024D
        gbc.setState(0x1233, 0x2b1a, 0x6b80, 0xb9dc, 0x4a37, 0xc874, 0x0, 0x1);
        gbc.writeMem(0x1233, { 0x2e, 0xb3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2b1a, gbc.sp());
        EXPECT(0x1235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 024E
        gbc.setState(0x5468, 0x8126, 0x7a10, 0x68f2, 0xab05, 0x7cfb, 0x1, 0x0);
        gbc.writeMem(0x5468, { 0x2e, 0x3a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8126, gbc.sp());
        EXPECT(0x546a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 024F
        gbc.setState(0x7bea, 0x8fb8, 0x7f50, 0x5322, 0x4b93, 0x2d85, 0x0, 0x1);
        gbc.writeMem(0x7bea, { 0x2e, 0x33 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8fb8, gbc.sp());
        EXPECT(0x7bec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0250
        gbc.setState(0xbd6c, 0x18e1, 0x57e0, 0xb1bb, 0x79db, 0x39d3, 0x0, 0x0);
        gbc.writeMem(0xbd6c, { 0x2e, 0x69 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x18e1, gbc.sp());
        EXPECT(0xbd6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbd6c));
        EXPECT(0x69, gbc.readMem(0xbd6d));
        // 2E 0251
        gbc.setState(0x8ba, 0xd438, 0x6b50, 0x430d, 0x84a7, 0xf03f, 0x0, 0x0);
        gbc.writeMem(0x8ba, { 0x2e, 0x90 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd438, gbc.sp());
        EXPECT(0x8bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0252
        gbc.setState(0xdf30, 0x627e, 0x17b0, 0xbf13, 0x4e00, 0xad37, 0x0, 0x1);
        gbc.writeMem(0xdf30, { 0x2e, 0x7c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x627e, gbc.sp());
        EXPECT(0xdf32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xdf30));
        EXPECT(0x7c, gbc.readMem(0xdf31));
        // 2E 0253
        gbc.setState(0xe321, 0x6e20, 0x8fa0, 0x79dd, 0x1acf, 0x8175, 0x0, 0x1);
        gbc.writeMem(0xe321, { 0x2e, 0x4a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6e20, gbc.sp());
        EXPECT(0xe323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe321));
        EXPECT(0x4a, gbc.readMem(0xe322));
        // 2E 0255
        gbc.setState(0xcc06, 0xb071, 0xdb00, 0x7bf9, 0x72f9, 0x883a, 0x1, 0x1);
        gbc.writeMem(0xcc06, { 0x2e, 0x58 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb071, gbc.sp());
        EXPECT(0xcc08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xcc06));
        EXPECT(0x58, gbc.readMem(0xcc07));
        // 2E 0256
        gbc.setState(0x308e, 0x96fa, 0x2060, 0xed31, 0xc5be, 0x2a0b, 0x0, 0x0);
        gbc.writeMem(0x308e, { 0x2e, 0xbf });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x96fa, gbc.sp());
        EXPECT(0x3090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0257
        gbc.setState(0x425f, 0xd276, 0x9220, 0x2412, 0x7638, 0x1c92, 0x1, 0x1);
        gbc.writeMem(0x425f, { 0x2e, 0xe });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd276, gbc.sp());
        EXPECT(0x4261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0258
        gbc.setState(0x664f, 0xeeed, 0xd50, 0xf7f2, 0x2e3, 0x1c38, 0x1, 0x1);
        gbc.writeMem(0x664f, { 0x2e, 0x8d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xeeed, gbc.sp());
        EXPECT(0x6651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0259
        gbc.setState(0x9364, 0x490d, 0x40b0, 0x18b0, 0xaefe, 0xb9af, 0x0, 0x0);
        gbc.writeMem(0x9364, { 0x2e, 0xd1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x490d, gbc.sp());
        EXPECT(0x9366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9364));
        EXPECT(0xd1, gbc.readMem(0x9365));
        // 2E 025A
        gbc.setState(0xc751, 0x18b3, 0x44b0, 0x9aa, 0xd4de, 0xd888, 0x1, 0x0);
        gbc.writeMem(0xc751, { 0x2e, 0xce });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x18b3, gbc.sp());
        EXPECT(0xc753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc751));
        EXPECT(0xce, gbc.readMem(0xc752));
        // 2E 025B
        gbc.setState(0x7232, 0x6089, 0x250, 0x73ad, 0xdfee, 0x7aac, 0x1, 0x1);
        gbc.writeMem(0x7232, { 0x2e, 0x87 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6089, gbc.sp());
        EXPECT(0x7234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 025C
        gbc.setState(0x9830, 0xbc25, 0xfc40, 0x5995, 0x8abf, 0xfdeb, 0x1, 0x0);
        gbc.writeMem(0x9830, { 0x2e, 0x34 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xbc25, gbc.sp());
        EXPECT(0x9832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9830));
        EXPECT(0x34, gbc.readMem(0x9831));
        // 2E 025E
        gbc.setState(0xdf01, 0x8818, 0xf450, 0x47c4, 0xd7f4, 0xd774, 0x0, 0x0);
        gbc.writeMem(0xdf01, { 0x2e, 0x48 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8818, gbc.sp());
        EXPECT(0xdf03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xdf01));
        EXPECT(0x48, gbc.readMem(0xdf02));
        // 2E 025F
        gbc.setState(0x36fb, 0xd147, 0x3b20, 0x2d2a, 0xd1fb, 0xb378, 0x0, 0x1);
        gbc.writeMem(0x36fb, { 0x2e, 0x19 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd147, gbc.sp());
        EXPECT(0x36fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0260
        gbc.setState(0xd574, 0xd9f9, 0x12a0, 0xca61, 0xef93, 0x2d0f, 0x1, 0x0);
        gbc.writeMem(0xd574, { 0x2e, 0x49 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd9f9, gbc.sp());
        EXPECT(0xd576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd574));
        EXPECT(0x49, gbc.readMem(0xd575));
        // 2E 0261
        gbc.setState(0x1b7f, 0x3603, 0x3600, 0xdc2f, 0x52be, 0x9408, 0x1, 0x1);
        gbc.writeMem(0x1b7f, { 0x2e, 0x86 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3603, gbc.sp());
        EXPECT(0x1b81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0262
        gbc.setState(0x1c88, 0x4f05, 0x5a90, 0xd6a3, 0xb9ea, 0xa498, 0x1, 0x1);
        gbc.writeMem(0x1c88, { 0x2e, 0x42 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4f05, gbc.sp());
        EXPECT(0x1c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0263
        gbc.setState(0x8f1e, 0x4a6, 0x18a0, 0x6193, 0x4aa0, 0xf0f2, 0x0, 0x1);
        gbc.writeMem(0x8f1e, { 0x2e, 0x85 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4a6, gbc.sp());
        EXPECT(0x8f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8f1e));
        EXPECT(0x85, gbc.readMem(0x8f1f));
        // 2E 0264
        gbc.setState(0x9f84, 0xfccf, 0x9a40, 0x9efb, 0x3a71, 0x2700, 0x1, 0x1);
        gbc.writeMem(0x9f84, { 0x2e, 0x75 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfccf, gbc.sp());
        EXPECT(0x9f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9f84));
        EXPECT(0x75, gbc.readMem(0x9f85));
        // 2E 0265
        gbc.setState(0x68ef, 0x3124, 0x7ac0, 0xa9cd, 0xdd8b, 0x33fe, 0x1, 0x1);
        gbc.writeMem(0x68ef, { 0x2e, 0xfc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3124, gbc.sp());
        EXPECT(0x68f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0266
        gbc.setState(0x349d, 0x59c8, 0x3de0, 0x3b5b, 0xdf67, 0xacdc, 0x0, 0x0);
        gbc.writeMem(0x349d, { 0x2e, 0xe6 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x59c8, gbc.sp());
        EXPECT(0x349f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0267
        gbc.setState(0xac07, 0x7523, 0x7240, 0x136, 0xc0c, 0x2a5, 0x1, 0x0);
        gbc.writeMem(0xac07, { 0x2e, 0xc1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7523, gbc.sp());
        EXPECT(0xac09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xac07));
        EXPECT(0xc1, gbc.readMem(0xac08));
        // 2E 0268
        gbc.setState(0x9fa6, 0xb79a, 0x99c0, 0x50f, 0x9fd4, 0x6e31, 0x0, 0x1);
        gbc.writeMem(0x9fa6, { 0x2e, 0x7a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb79a, gbc.sp());
        EXPECT(0x9fa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9fa6));
        EXPECT(0x7a, gbc.readMem(0x9fa7));
        // 2E 0269
        gbc.setState(0x9af2, 0x67d5, 0xfda0, 0x5213, 0x6c4f, 0xc4e4, 0x0, 0x0);
        gbc.writeMem(0x9af2, { 0x2e, 0x2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x67d5, gbc.sp());
        EXPECT(0x9af4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9af2));
        EXPECT(0x2, gbc.readMem(0x9af3));
        // 2E 026A
        gbc.setState(0x5005, 0xa1a1, 0x3b90, 0x294c, 0xce9c, 0x9a0e, 0x1, 0x0);
        gbc.writeMem(0x5005, { 0x2e, 0xe2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa1a1, gbc.sp());
        EXPECT(0x5007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 026B
        gbc.setState(0xb86e, 0xc549, 0x8430, 0xdbbf, 0x93f4, 0xc66b, 0x1, 0x0);
        gbc.writeMem(0xb86e, { 0x2e, 0xdd });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc549, gbc.sp());
        EXPECT(0xb870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb86e));
        EXPECT(0xdd, gbc.readMem(0xb86f));
        // 2E 026C
        gbc.setState(0x4bc6, 0xfef2, 0x2ed0, 0xae7a, 0x9cad, 0x309, 0x0, 0x1);
        gbc.writeMem(0x4bc6, { 0x2e, 0xd4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfef2, gbc.sp());
        EXPECT(0x4bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 026D
        gbc.setState(0x6dd7, 0x4f16, 0x8220, 0x3345, 0xfb36, 0xf681, 0x1, 0x0);
        gbc.writeMem(0x6dd7, { 0x2e, 0xae });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4f16, gbc.sp());
        EXPECT(0x6dd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 026E
        gbc.setState(0xe461, 0x3c5d, 0xd930, 0x420, 0x501e, 0x6e12, 0x0, 0x1);
        gbc.writeMem(0xe461, { 0x2e, 0x2c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3c5d, gbc.sp());
        EXPECT(0xe463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe461));
        EXPECT(0x2c, gbc.readMem(0xe462));
        // 2E 026F
        gbc.setState(0x3d03, 0xfe05, 0xc060, 0x9360, 0x4031, 0x2cab, 0x0, 0x0);
        gbc.writeMem(0x3d03, { 0x2e, 0xcd });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfe05, gbc.sp());
        EXPECT(0x3d05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0272
        gbc.setState(0x3c0f, 0x137a, 0x81c0, 0x9e40, 0x7d5c, 0xc126, 0x0, 0x0);
        gbc.writeMem(0x3c0f, { 0x2e, 0x21 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x137a, gbc.sp());
        EXPECT(0x3c11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0273
        gbc.setState(0x7a0d, 0x4cf, 0x93d0, 0x867d, 0x7235, 0x11dd, 0x1, 0x1);
        gbc.writeMem(0x7a0d, { 0x2e, 0x5f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4cf, gbc.sp());
        EXPECT(0x7a0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0274
        gbc.setState(0x521, 0x593a, 0x6050, 0x1bde, 0x608d, 0x5e47, 0x1, 0x1);
        gbc.writeMem(0x521, { 0x2e, 0xcf });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x593a, gbc.sp());
        EXPECT(0x523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0275
        gbc.setState(0x9ec4, 0x8779, 0x7750, 0x74c0, 0xd8a0, 0x368, 0x1, 0x1);
        gbc.writeMem(0x9ec4, { 0x2e, 0xb8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8779, gbc.sp());
        EXPECT(0x9ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9ec4));
        EXPECT(0xb8, gbc.readMem(0x9ec5));
        // 2E 0276
        gbc.setState(0x1b5a, 0x1bcc, 0x6cb0, 0x5a99, 0x900e, 0x4969, 0x0, 0x0);
        gbc.writeMem(0x1b5a, { 0x2e, 0xf2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1bcc, gbc.sp());
        EXPECT(0x1b5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0277
        gbc.setState(0xdb25, 0xda3b, 0x4950, 0x3172, 0xc9db, 0x6e56, 0x0, 0x1);
        gbc.writeMem(0xdb25, { 0x2e, 0x60 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xda3b, gbc.sp());
        EXPECT(0xdb27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xdb25));
        EXPECT(0x60, gbc.readMem(0xdb26));
        // 2E 0278
        gbc.setState(0x14e6, 0x6362, 0xcef0, 0x438, 0xb814, 0x2cd6, 0x1, 0x1);
        gbc.writeMem(0x14e6, { 0x2e, 0x6c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6362, gbc.sp());
        EXPECT(0x14e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0279
        gbc.setState(0x15bd, 0xc6f2, 0xc8b0, 0xe6e8, 0x85f1, 0x4732, 0x1, 0x0);
        gbc.writeMem(0x15bd, { 0x2e, 0xe8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc6f2, gbc.sp());
        EXPECT(0x15bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 027A
        gbc.setState(0xc468, 0xcc7c, 0x2cc0, 0xaa2, 0x3e8, 0x1ca8, 0x0, 0x0);
        gbc.writeMem(0xc468, { 0x2e, 0xfa });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xcc7c, gbc.sp());
        EXPECT(0xc46a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc468));
        EXPECT(0xfa, gbc.readMem(0xc469));
        // 2E 027B
        gbc.setState(0xd664, 0x7fef, 0x2730, 0x5a2e, 0x2bf4, 0x68e5, 0x0, 0x0);
        gbc.writeMem(0xd664, { 0x2e, 0xc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7fef, gbc.sp());
        EXPECT(0xd666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd664));
        EXPECT(0xc, gbc.readMem(0xd665));
        // 2E 027C
        gbc.setState(0xc9da, 0xed9b, 0x8ff0, 0x3d2d, 0x959f, 0x33f, 0x1, 0x1);
        gbc.writeMem(0xc9da, { 0x2e, 0x1f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xed9b, gbc.sp());
        EXPECT(0xc9dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc9da));
        EXPECT(0x1f, gbc.readMem(0xc9db));
        // 2E 027D
        gbc.setState(0xa936, 0xbe19, 0xdd90, 0x30c0, 0x4ede, 0xce99, 0x1, 0x0);
        gbc.writeMem(0xa936, { 0x2e, 0xc1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xbe19, gbc.sp());
        EXPECT(0xa938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa936));
        EXPECT(0xc1, gbc.readMem(0xa937));
        // 2E 027F
        gbc.setState(0x1e1c, 0x6e24, 0x8a10, 0x1292, 0x71a6, 0x1002, 0x1, 0x0);
        gbc.writeMem(0x1e1c, { 0x2e, 0x4d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6e24, gbc.sp());
        EXPECT(0x1e1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0280
        gbc.setState(0x577, 0x40a3, 0xf170, 0x7ecd, 0xbac2, 0x1da1, 0x1, 0x1);
        gbc.writeMem(0x577, { 0x2e, 0x93 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x40a3, gbc.sp());
        EXPECT(0x579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0281
        gbc.setState(0x1964, 0xc26d, 0xfce0, 0x8b1b, 0x5ab9, 0xc329, 0x0, 0x1);
        gbc.writeMem(0x1964, { 0x2e, 0xbb });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc26d, gbc.sp());
        EXPECT(0x1966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0282
        gbc.setState(0x3d2b, 0x3f54, 0x3f60, 0x1760, 0x3a5f, 0x8de7, 0x0, 0x1);
        gbc.writeMem(0x3d2b, { 0x2e, 0xfe });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3f54, gbc.sp());
        EXPECT(0x3d2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0283
        gbc.setState(0x4eba, 0x15ee, 0x7de0, 0x57de, 0xbe02, 0x1a6c, 0x1, 0x1);
        gbc.writeMem(0x4eba, { 0x2e, 0x3f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x15ee, gbc.sp());
        EXPECT(0x4ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0284
        gbc.setState(0x6246, 0xb63d, 0x3ce0, 0xbd72, 0xa4ed, 0xa233, 0x0, 0x1);
        gbc.writeMem(0x6246, { 0x2e, 0xc1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb63d, gbc.sp());
        EXPECT(0x6248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0285
        gbc.setState(0x5b2a, 0x909c, 0x86c0, 0x6671, 0x524e, 0xdc1f, 0x1, 0x1);
        gbc.writeMem(0x5b2a, { 0x2e, 0x4d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x909c, gbc.sp());
        EXPECT(0x5b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0286
        gbc.setState(0xce16, 0xb10b, 0x6440, 0x4506, 0x20c9, 0x99d7, 0x0, 0x0);
        gbc.writeMem(0xce16, { 0x2e, 0xf6 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb10b, gbc.sp());
        EXPECT(0xce18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xce16));
        EXPECT(0xf6, gbc.readMem(0xce17));
        // 2E 0287
        gbc.setState(0xbaa1, 0x653f, 0x4070, 0xd8d7, 0xe92d, 0xa3f, 0x0, 0x1);
        gbc.writeMem(0xbaa1, { 0x2e, 0x43 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x653f, gbc.sp());
        EXPECT(0xbaa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbaa1));
        EXPECT(0x43, gbc.readMem(0xbaa2));
        // 2E 0288
        gbc.setState(0x8fa0, 0x10b8, 0x56d0, 0x35a7, 0x86b1, 0xcc0d, 0x1, 0x1);
        gbc.writeMem(0x8fa0, { 0x2e, 0xb6 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x10b8, gbc.sp());
        EXPECT(0x8fa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8fa0));
        EXPECT(0xb6, gbc.readMem(0x8fa1));
        // 2E 0289
        gbc.setState(0x91d1, 0x8373, 0xcf00, 0x1598, 0x4e3b, 0xd72e, 0x0, 0x0);
        gbc.writeMem(0x91d1, { 0x2e, 0x59 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8373, gbc.sp());
        EXPECT(0x91d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x91d1));
        EXPECT(0x59, gbc.readMem(0x91d2));
        // 2E 028A
        gbc.setState(0x4fff, 0x25b0, 0x1860, 0xb17c, 0x7197, 0xd375, 0x0, 0x1);
        gbc.writeMem(0x4fff, { 0x2e, 0xc0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x25b0, gbc.sp());
        EXPECT(0x5001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 028B
        gbc.setState(0x4945, 0xfe91, 0x3c90, 0xde0d, 0x99e9, 0xa15b, 0x1, 0x0);
        gbc.writeMem(0x4945, { 0x2e, 0x19 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfe91, gbc.sp());
        EXPECT(0x4947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 028C
        gbc.setState(0xd241, 0x7a30, 0x77f0, 0x7659, 0xb514, 0x67fc, 0x1, 0x1);
        gbc.writeMem(0xd241, { 0x2e, 0xb2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7a30, gbc.sp());
        EXPECT(0xd243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd241));
        EXPECT(0xb2, gbc.readMem(0xd242));
        // 2E 028D
        gbc.setState(0x37d6, 0x9d43, 0xc3e0, 0x30f6, 0xa174, 0xaf7b, 0x0, 0x0);
        gbc.writeMem(0x37d6, { 0x2e, 0x43 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9d43, gbc.sp());
        EXPECT(0x37d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 028F
        gbc.setState(0x8a40, 0xdb13, 0xc5f0, 0x4abf, 0x5d0b, 0x6d15, 0x0, 0x0);
        gbc.writeMem(0x8a40, { 0x2e, 0xb4 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdb13, gbc.sp());
        EXPECT(0x8a42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8a40));
        EXPECT(0xb4, gbc.readMem(0x8a41));
        // 2E 0290
        gbc.setState(0xcc98, 0x793, 0x3b10, 0xf195, 0x58f5, 0xd2cc, 0x0, 0x0);
        gbc.writeMem(0xcc98, { 0x2e, 0x84 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x793, gbc.sp());
        EXPECT(0xcc9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xcc98));
        EXPECT(0x84, gbc.readMem(0xcc99));
        // 2E 0291
        gbc.setState(0xa7cb, 0x44d5, 0x3240, 0x4e03, 0x635a, 0xbed, 0x1, 0x1);
        gbc.writeMem(0xa7cb, { 0x2e, 0xc6 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x44d5, gbc.sp());
        EXPECT(0xa7cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa7cb));
        EXPECT(0xc6, gbc.readMem(0xa7cc));
        // 2E 0292
        gbc.setState(0x64f3, 0x4711, 0xa1d0, 0xc529, 0x3e37, 0xc86a, 0x0, 0x0);
        gbc.writeMem(0x64f3, { 0x2e, 0xab });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4711, gbc.sp());
        EXPECT(0x64f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0293
        gbc.setState(0x2be4, 0x6afa, 0x50a0, 0x6698, 0x2067, 0x9a41, 0x1, 0x0);
        gbc.writeMem(0x2be4, { 0x2e, 0xc9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6afa, gbc.sp());
        EXPECT(0x2be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0294
        gbc.setState(0x11b5, 0xb88e, 0x33b0, 0x86b6, 0x82d0, 0xb925, 0x1, 0x0);
        gbc.writeMem(0x11b5, { 0x2e, 0xbd });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb88e, gbc.sp());
        EXPECT(0x11b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0295
        gbc.setState(0xc099, 0xecd1, 0x39e0, 0xa29e, 0x3708, 0xfb4b, 0x0, 0x1);
        gbc.writeMem(0xc099, { 0x2e, 0x64 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xecd1, gbc.sp());
        EXPECT(0xc09b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc099));
        EXPECT(0x64, gbc.readMem(0xc09a));
        // 2E 0296
        gbc.setState(0xeec6, 0xc1de, 0x7820, 0xc1db, 0xa46d, 0xbb2, 0x0, 0x0);
        gbc.writeMem(0xeec6, { 0x2e, 0x37 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc1de, gbc.sp());
        EXPECT(0xeec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xeec6));
        EXPECT(0x37, gbc.readMem(0xeec7));
        // 2E 0297
        gbc.setState(0x7630, 0x87e1, 0x14c0, 0x838e, 0x6d3b, 0x8a46, 0x0, 0x1);
        gbc.writeMem(0x7630, { 0x2e, 0x7a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x87e1, gbc.sp());
        EXPECT(0x7632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0298
        gbc.setState(0x85a9, 0xb817, 0x2c0, 0x191b, 0x2e9e, 0x100a, 0x1, 0x1);
        gbc.writeMem(0x85a9, { 0x2e, 0x92 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb817, gbc.sp());
        EXPECT(0x85ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x85a9));
        EXPECT(0x92, gbc.readMem(0x85aa));
        // 2E 029A
        gbc.setState(0xa7ac, 0x814c, 0xa5a0, 0xc81a, 0x60d0, 0xbcf1, 0x0, 0x0);
        gbc.writeMem(0xa7ac, { 0x2e, 0x60 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x814c, gbc.sp());
        EXPECT(0xa7ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa7ac));
        EXPECT(0x60, gbc.readMem(0xa7ad));
        // 2E 029B
        gbc.setState(0xe24f, 0x5083, 0xaed0, 0x8563, 0x6eaf, 0x1d50, 0x0, 0x0);
        gbc.writeMem(0xe24f, { 0x2e, 0xe8 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5083, gbc.sp());
        EXPECT(0xe251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe24f));
        EXPECT(0xe8, gbc.readMem(0xe250));
        // 2E 029C
        gbc.setState(0xef7f, 0x384a, 0x3560, 0xc1f4, 0xd9d9, 0x6263, 0x1, 0x1);
        gbc.writeMem(0xef7f, { 0x2e, 0x8c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x384a, gbc.sp());
        EXPECT(0xef81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xef7f));
        EXPECT(0x8c, gbc.readMem(0xef80));
        // 2E 029D
        gbc.setState(0x6291, 0xfe0b, 0xa780, 0xde76, 0x207f, 0xdf6c, 0x1, 0x1);
        gbc.writeMem(0x6291, { 0x2e, 0x94 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfe0b, gbc.sp());
        EXPECT(0x6293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 029E
        gbc.setState(0x3002, 0x41fe, 0xc800, 0x6162, 0xbb11, 0x7ba3, 0x1, 0x0);
        gbc.writeMem(0x3002, { 0x2e, 0x2d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x41fe, gbc.sp());
        EXPECT(0x3004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 029F
        gbc.setState(0x9a4e, 0x6281, 0xfb90, 0x6eaf, 0xe66f, 0x3a9d, 0x1, 0x0);
        gbc.writeMem(0x9a4e, { 0x2e, 0xad });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6281, gbc.sp());
        EXPECT(0x9a50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9a4e));
        EXPECT(0xad, gbc.readMem(0x9a4f));
        // 2E 02A0
        gbc.setState(0xd557, 0x301b, 0xbf30, 0x6d7d, 0xe677, 0xa0eb, 0x1, 0x1);
        gbc.writeMem(0xd557, { 0x2e, 0x69 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x301b, gbc.sp());
        EXPECT(0xd559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd557));
        EXPECT(0x69, gbc.readMem(0xd558));
        // 2E 02A1
        gbc.setState(0xd31, 0x1fcf, 0xde60, 0x7a2, 0x57de, 0x1a56, 0x0, 0x1);
        gbc.writeMem(0xd31, { 0x2e, 0x6a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1fcf, gbc.sp());
        EXPECT(0xd33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02A2
        gbc.setState(0xbec3, 0x89c1, 0xac00, 0x653d, 0xac07, 0xc383, 0x1, 0x1);
        gbc.writeMem(0xbec3, { 0x2e, 0x34 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x89c1, gbc.sp());
        EXPECT(0xbec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbec3));
        EXPECT(0x34, gbc.readMem(0xbec4));
        // 2E 02A3
        gbc.setState(0x97de, 0xcc48, 0x6dd0, 0xfafa, 0x76b9, 0x2070, 0x1, 0x0);
        gbc.writeMem(0x97de, { 0x2e, 0xb4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xcc48, gbc.sp());
        EXPECT(0x97e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x97de));
        EXPECT(0xb4, gbc.readMem(0x97df));
        // 2E 02A4
        gbc.setState(0xbd92, 0xb677, 0x4770, 0x38a, 0x174a, 0x1192, 0x1, 0x1);
        gbc.writeMem(0xbd92, { 0x2e, 0x22 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb677, gbc.sp());
        EXPECT(0xbd94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbd92));
        EXPECT(0x22, gbc.readMem(0xbd93));
        // 2E 02A5
        gbc.setState(0xd67b, 0xd6d, 0xe70, 0xea39, 0xf5b5, 0x6276, 0x1, 0x1);
        gbc.writeMem(0xd67b, { 0x2e, 0xd1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd6d, gbc.sp());
        EXPECT(0xd67d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd67b));
        EXPECT(0xd1, gbc.readMem(0xd67c));
        // 2E 02A6
        gbc.setState(0x71f8, 0xd0c7, 0x420, 0x298d, 0xd7a0, 0x4e43, 0x0, 0x0);
        gbc.writeMem(0x71f8, { 0x2e, 0xab });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd0c7, gbc.sp());
        EXPECT(0x71fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02A7
        gbc.setState(0xb8a6, 0x1973, 0x34b0, 0xe566, 0x2049, 0x1ae9, 0x1, 0x0);
        gbc.writeMem(0xb8a6, { 0x2e, 0x7b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1973, gbc.sp());
        EXPECT(0xb8a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb8a6));
        EXPECT(0x7b, gbc.readMem(0xb8a7));
        // 2E 02A8
        gbc.setState(0x80e9, 0xc4c3, 0x6c90, 0x85eb, 0x9f3d, 0x7cb5, 0x0, 0x1);
        gbc.writeMem(0x80e9, { 0x2e, 0x3b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc4c3, gbc.sp());
        EXPECT(0x80eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x80e9));
        EXPECT(0x3b, gbc.readMem(0x80ea));
        // 2E 02A9
        gbc.setState(0x4a10, 0xb2fc, 0xcd60, 0xd706, 0xe7dc, 0x558a, 0x0, 0x0);
        gbc.writeMem(0x4a10, { 0x2e, 0xcc });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb2fc, gbc.sp());
        EXPECT(0x4a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02AA
        gbc.setState(0xccda, 0x16a7, 0xbce0, 0xcd02, 0x7bf, 0x8d78, 0x0, 0x0);
        gbc.writeMem(0xccda, { 0x2e, 0x9b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x16a7, gbc.sp());
        EXPECT(0xccdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xccda));
        EXPECT(0x9b, gbc.readMem(0xccdb));
        // 2E 02AB
        gbc.setState(0x39e3, 0x75c2, 0xa5f0, 0x984d, 0x9199, 0xa8b5, 0x0, 0x0);
        gbc.writeMem(0x39e3, { 0x2e, 0x6c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x75c2, gbc.sp());
        EXPECT(0x39e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 02AC
        gbc.setState(0xb6d5, 0x8c59, 0x5e30, 0x5de, 0x8b7b, 0x3cde, 0x1, 0x0);
        gbc.writeMem(0xb6d5, { 0x2e, 0x50 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8c59, gbc.sp());
        EXPECT(0xb6d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb6d5));
        EXPECT(0x50, gbc.readMem(0xb6d6));
        // 2E 02AD
        gbc.setState(0x593a, 0x8b1c, 0x2ae0, 0xfbd1, 0xdc91, 0xfd8c, 0x1, 0x1);
        gbc.writeMem(0x593a, { 0x2e, 0xc7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8b1c, gbc.sp());
        EXPECT(0x593c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02AE
        gbc.setState(0xeaae, 0x1712, 0xdab0, 0x3d8d, 0x31c7, 0x4ff, 0x1, 0x1);
        gbc.writeMem(0xeaae, { 0x2e, 0x4b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1712, gbc.sp());
        EXPECT(0xeab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xeaae));
        EXPECT(0x4b, gbc.readMem(0xeaaf));
        // 2E 02AF
        gbc.setState(0x45d8, 0x196b, 0xed00, 0x3571, 0xb71c, 0x22c2, 0x0, 0x1);
        gbc.writeMem(0x45d8, { 0x2e, 0xd8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x196b, gbc.sp());
        EXPECT(0x45da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02B0
        gbc.setState(0x11f1, 0x772e, 0x850, 0x2dc7, 0x6e19, 0xfeb7, 0x1, 0x0);
        gbc.writeMem(0x11f1, { 0x2e, 0x8a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x772e, gbc.sp());
        EXPECT(0x11f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 02B1
        gbc.setState(0x354, 0x7054, 0x4640, 0xc28e, 0xaf02, 0xebd7, 0x1, 0x1);
        gbc.writeMem(0x354, { 0x2e, 0x88 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7054, gbc.sp());
        EXPECT(0x356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02B2
        gbc.setState(0x76ba, 0x8376, 0x2660, 0x676, 0x3e98, 0x3667, 0x1, 0x1);
        gbc.writeMem(0x76ba, { 0x2e, 0xb3 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8376, gbc.sp());
        EXPECT(0x76bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02B3
        gbc.setState(0x7bfc, 0xd98, 0xf8d0, 0x7248, 0xbce1, 0x17f4, 0x1, 0x0);
        gbc.writeMem(0x7bfc, { 0x2e, 0x70 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd98, gbc.sp());
        EXPECT(0x7bfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 02B4
        gbc.setState(0xcd2d, 0x9123, 0x85f0, 0x1258, 0x16cd, 0xfcf1, 0x0, 0x0);
        gbc.writeMem(0xcd2d, { 0x2e, 0x4d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9123, gbc.sp());
        EXPECT(0xcd2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xcd2d));
        EXPECT(0x4d, gbc.readMem(0xcd2e));
        // 2E 02B5
        gbc.setState(0x126a, 0xb0d2, 0x9020, 0x61f8, 0x308d, 0x23da, 0x0, 0x0);
        gbc.writeMem(0x126a, { 0x2e, 0x52 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb0d2, gbc.sp());
        EXPECT(0x126c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02B6
        gbc.setState(0x4929, 0x818c, 0xf5f0, 0x4273, 0xd6ff, 0x82de, 0x0, 0x0);
        gbc.writeMem(0x4929, { 0x2e, 0xfd });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x818c, gbc.sp());
        EXPECT(0x492b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 02B7
        gbc.setState(0xb0d0, 0xb0d, 0xdf10, 0x78e5, 0x8f1a, 0xb4c9, 0x1, 0x0);
        gbc.writeMem(0xb0d0, { 0x2e, 0x80 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb0d, gbc.sp());
        EXPECT(0xb0d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb0d0));
        EXPECT(0x80, gbc.readMem(0xb0d1));
        // 2E 02B8
        gbc.setState(0xdd74, 0xeef8, 0x2ca0, 0xa73a, 0xe090, 0xdb31, 0x0, 0x1);
        gbc.writeMem(0xdd74, { 0x2e, 0x2a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xeef8, gbc.sp());
        EXPECT(0xdd76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xdd74));
        EXPECT(0x2a, gbc.readMem(0xdd75));
        // 2E 02B9
        gbc.setState(0x9653, 0x5fd6, 0x3730, 0x2780, 0x21b8, 0x30c8, 0x0, 0x0);
        gbc.writeMem(0x9653, { 0x2e, 0x10 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5fd6, gbc.sp());
        EXPECT(0x9655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9653));
        EXPECT(0x10, gbc.readMem(0x9654));
        // 2E 02BA
        gbc.setState(0x313, 0x3ed2, 0x6890, 0xbf5a, 0xed7a, 0x5233, 0x0, 0x0);
        gbc.writeMem(0x313, { 0x2e, 0x74 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3ed2, gbc.sp());
        EXPECT(0x315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 02BB
        gbc.setState(0x47dd, 0x6266, 0x4ff0, 0xc7e1, 0xea7a, 0x267a, 0x0, 0x0);
        gbc.writeMem(0x47dd, { 0x2e, 0x90 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6266, gbc.sp());
        EXPECT(0x47df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 02BC
        gbc.setState(0x5f2f, 0x4c80, 0x6a00, 0x9f66, 0xeb0b, 0x3e4b, 0x1, 0x1);
        gbc.writeMem(0x5f2f, { 0x2e, 0x3e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4c80, gbc.sp());
        EXPECT(0x5f31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02BD
        gbc.setState(0xed3f, 0x24b5, 0xee50, 0xb2f6, 0xf190, 0x3ea3, 0x0, 0x0);
        gbc.writeMem(0xed3f, { 0x2e, 0xc });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x24b5, gbc.sp());
        EXPECT(0xed41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xed3f));
        EXPECT(0xc, gbc.readMem(0xed40));
        // 2E 02BE
        gbc.setState(0x275, 0x31bb, 0x8990, 0x9334, 0x5586, 0xd26f, 0x0, 0x1);
        gbc.writeMem(0x275, { 0x2e, 0x9a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x31bb, gbc.sp());
        EXPECT(0x277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 02BF
        gbc.setState(0x82e7, 0xa1e1, 0xe0f0, 0x311a, 0x9512, 0x2051, 0x0, 0x1);
        gbc.writeMem(0x82e7, { 0x2e, 0x74 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa1e1, gbc.sp());
        EXPECT(0x82e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x82e7));
        EXPECT(0x74, gbc.readMem(0x82e8));
        // 2E 02C0
        gbc.setState(0x3dfe, 0xee58, 0xa220, 0x4516, 0x3a29, 0x5575, 0x1, 0x0);
        gbc.writeMem(0x3dfe, { 0x2e, 0xc6 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xee58, gbc.sp());
        EXPECT(0x3e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02C1
        gbc.setState(0x5bea, 0x54a0, 0x2420, 0x5a2, 0xfe9a, 0xbd06, 0x1, 0x0);
        gbc.writeMem(0x5bea, { 0x2e, 0x28 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x54a0, gbc.sp());
        EXPECT(0x5bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02C2
        gbc.setState(0xbfcf, 0xcb9f, 0x4f60, 0x9ec8, 0x4305, 0xfb8c, 0x1, 0x0);
        gbc.writeMem(0xbfcf, { 0x2e, 0xb2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xcb9f, gbc.sp());
        EXPECT(0xbfd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbfcf));
        EXPECT(0xb2, gbc.readMem(0xbfd0));
        // 2E 02C3
        gbc.setState(0xb61c, 0x7eb8, 0xcf80, 0x6d6c, 0x4b22, 0xaa3b, 0x1, 0x1);
        gbc.writeMem(0xb61c, { 0x2e, 0xbd });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7eb8, gbc.sp());
        EXPECT(0xb61e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb61c));
        EXPECT(0xbd, gbc.readMem(0xb61d));
        // 2E 02C4
        gbc.setState(0xc224, 0x8539, 0xcb80, 0xdfad, 0xd0a9, 0xab75, 0x1, 0x0);
        gbc.writeMem(0xc224, { 0x2e, 0xc5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8539, gbc.sp());
        EXPECT(0xc226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc224));
        EXPECT(0xc5, gbc.readMem(0xc225));
        // 2E 02C5
        gbc.setState(0xb62c, 0x5fd6, 0xc0a0, 0x6999, 0xaad9, 0xf1bc, 0x0, 0x1);
        gbc.writeMem(0xb62c, { 0x2e, 0x24 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5fd6, gbc.sp());
        EXPECT(0xb62e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb62c));
        EXPECT(0x24, gbc.readMem(0xb62d));
        // 2E 02C6
        gbc.setState(0x6a22, 0xc17, 0x80, 0x7999, 0x4d1c, 0xa4f, 0x0, 0x0);
        gbc.writeMem(0x6a22, { 0x2e, 0x6b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc17, gbc.sp());
        EXPECT(0x6a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02C7
        gbc.setState(0x206b, 0x7e14, 0xd00, 0x607c, 0x8cca, 0x958c, 0x0, 0x0);
        gbc.writeMem(0x206b, { 0x2e, 0xdb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7e14, gbc.sp());
        EXPECT(0x206d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02C8
        gbc.setState(0x82db, 0xafc1, 0x5440, 0x3a10, 0xe304, 0x9343, 0x1, 0x0);
        gbc.writeMem(0x82db, { 0x2e, 0x1b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xafc1, gbc.sp());
        EXPECT(0x82dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x82db));
        EXPECT(0x1b, gbc.readMem(0x82dc));
        // 2E 02C9
        gbc.setState(0x95dc, 0xf7b8, 0xb790, 0xda5f, 0x581b, 0xfb47, 0x0, 0x0);
        gbc.writeMem(0x95dc, { 0x2e, 0x3e });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf7b8, gbc.sp());
        EXPECT(0x95de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x95dc));
        EXPECT(0x3e, gbc.readMem(0x95dd));
        // 2E 02CA
        gbc.setState(0x2c16, 0xe917, 0x3ce0, 0x4c8b, 0xb54e, 0xeb3c, 0x1, 0x1);
        gbc.writeMem(0x2c16, { 0x2e, 0x53 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe917, gbc.sp());
        EXPECT(0x2c18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02CB
        gbc.setState(0x9514, 0x6389, 0xd5a0, 0xa25c, 0x9c1f, 0x55a0, 0x0, 0x1);
        gbc.writeMem(0x9514, { 0x2e, 0xa7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6389, gbc.sp());
        EXPECT(0x9516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9514));
        EXPECT(0xa7, gbc.readMem(0x9515));
        // 2E 02CC
        gbc.setState(0x3606, 0x60c6, 0xa580, 0x6e26, 0x4270, 0xf539, 0x1, 0x1);
        gbc.writeMem(0x3606, { 0x2e, 0xeb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x60c6, gbc.sp());
        EXPECT(0x3608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02CD
        gbc.setState(0x3a80, 0x322d, 0x6340, 0x699, 0x8931, 0xdacd, 0x0, 0x0);
        gbc.writeMem(0x3a80, { 0x2e, 0x15 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x322d, gbc.sp());
        EXPECT(0x3a82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02CE
        gbc.setState(0xb308, 0xbddc, 0x79e0, 0xe389, 0xe409, 0xaf6a, 0x0, 0x0);
        gbc.writeMem(0xb308, { 0x2e, 0x79 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbddc, gbc.sp());
        EXPECT(0xb30a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb308));
        EXPECT(0x79, gbc.readMem(0xb309));
        // 2E 02CF
        gbc.setState(0x809e, 0x1e0f, 0xee00, 0xa130, 0x942c, 0x4148, 0x1, 0x0);
        gbc.writeMem(0x809e, { 0x2e, 0x2b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1e0f, gbc.sp());
        EXPECT(0x80a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x809e));
        EXPECT(0x2b, gbc.readMem(0x809f));
        // 2E 02D0
        gbc.setState(0xa166, 0x350b, 0x8ac0, 0x8582, 0xfaba, 0x8ad4, 0x1, 0x0);
        gbc.writeMem(0xa166, { 0x2e, 0x11 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x350b, gbc.sp());
        EXPECT(0xa168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa166));
        EXPECT(0x11, gbc.readMem(0xa167));
        // 2E 02D1
        gbc.setState(0x3e9e, 0x51f, 0x3b80, 0x711a, 0x8d32, 0x45c2, 0x1, 0x0);
        gbc.writeMem(0x3e9e, { 0x2e, 0x38 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x51f, gbc.sp());
        EXPECT(0x3ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02D2
        gbc.setState(0x3550, 0xd08a, 0x41f0, 0x8460, 0xe048, 0x8dc2, 0x0, 0x0);
        gbc.writeMem(0x3550, { 0x2e, 0x4e });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd08a, gbc.sp());
        EXPECT(0x3552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 02D3
        gbc.setState(0x1a8b, 0x842f, 0xcee0, 0x6e4c, 0xe4c4, 0x3bc9, 0x0, 0x1);
        gbc.writeMem(0x1a8b, { 0x2e, 0x5e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x842f, gbc.sp());
        EXPECT(0x1a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02D4
        gbc.setState(0xe99a, 0x4fc2, 0x7730, 0x1af7, 0x3c91, 0x3b06, 0x1, 0x1);
        gbc.writeMem(0xe99a, { 0x2e, 0x9d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4fc2, gbc.sp());
        EXPECT(0xe99c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe99a));
        EXPECT(0x9d, gbc.readMem(0xe99b));
        // 2E 02D5
        gbc.setState(0x770d, 0x2536, 0xa9d0, 0xf7a8, 0x48f0, 0xa35a, 0x0, 0x1);
        gbc.writeMem(0x770d, { 0x2e, 0x2a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2536, gbc.sp());
        EXPECT(0x770f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 02D6
        gbc.setState(0x2104, 0x31f3, 0x3db0, 0x96d, 0xf543, 0x3e04, 0x1, 0x0);
        gbc.writeMem(0x2104, { 0x2e, 0x1c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x31f3, gbc.sp());
        EXPECT(0x2106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 02D7
        gbc.setState(0x2ec7, 0x5a69, 0x65d0, 0x8c7b, 0x60fa, 0x138b, 0x1, 0x1);
        gbc.writeMem(0x2ec7, { 0x2e, 0xe8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5a69, gbc.sp());
        EXPECT(0x2ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 02D8
        gbc.setState(0x8cb7, 0x189, 0xa680, 0xca71, 0x17a2, 0x23e7, 0x0, 0x1);
        gbc.writeMem(0x8cb7, { 0x2e, 0xf2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x189, gbc.sp());
        EXPECT(0x8cb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8cb7));
        EXPECT(0xf2, gbc.readMem(0x8cb8));
        // 2E 02D9
        gbc.setState(0x4005, 0xb5e8, 0x2bd0, 0x4880, 0xeb4e, 0x468b, 0x0, 0x1);
        gbc.writeMem(0x4005, { 0x2e, 0xad });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb5e8, gbc.sp());
        EXPECT(0x4007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 02DA
        gbc.setState(0xc433, 0xa9c3, 0x38a0, 0xa5d7, 0x8abf, 0x7cee, 0x1, 0x0);
        gbc.writeMem(0xc433, { 0x2e, 0x5b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa9c3, gbc.sp());
        EXPECT(0xc435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc433));
        EXPECT(0x5b, gbc.readMem(0xc434));
        // 2E 02DB
        gbc.setState(0x4739, 0xb580, 0xb5d0, 0x8cef, 0x1050, 0x9ac6, 0x0, 0x0);
        gbc.writeMem(0x4739, { 0x2e, 0xfa });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb580, gbc.sp());
        EXPECT(0x473b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 02DC
        gbc.setState(0x4210, 0xdfed, 0x8b60, 0x84f7, 0x296c, 0x1d07, 0x0, 0x1);
        gbc.writeMem(0x4210, { 0x2e, 0x3d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdfed, gbc.sp());
        EXPECT(0x4212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02DD
        gbc.setState(0xb34a, 0x5cb9, 0xdeb0, 0x5430, 0x67ad, 0xaa9a, 0x0, 0x0);
        gbc.writeMem(0xb34a, { 0x2e, 0xfe });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5cb9, gbc.sp());
        EXPECT(0xb34c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb34a));
        EXPECT(0xfe, gbc.readMem(0xb34b));
        // 2E 02DE
        gbc.setState(0x168a, 0xe0d2, 0x1610, 0x3d28, 0xe21d, 0xc359, 0x0, 0x0);
        gbc.writeMem(0x168a, { 0x2e, 0xd2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe0d2, gbc.sp());
        EXPECT(0x168c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 02DF
        gbc.setState(0x394c, 0xd2a7, 0xd7a0, 0x341a, 0xb3cf, 0xb096, 0x0, 0x1);
        gbc.writeMem(0x394c, { 0x2e, 0xf9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd2a7, gbc.sp());
        EXPECT(0x394e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02E0
        gbc.setState(0xc17, 0xfc35, 0x95b0, 0x7198, 0xa0ca, 0x24ab, 0x0, 0x0);
        gbc.writeMem(0xc17, { 0x2e, 0xe9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xfc35, gbc.sp());
        EXPECT(0xc19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 02E2
        gbc.setState(0xbdec, 0x7022, 0x480, 0x13f9, 0xd896, 0x4ae2, 0x1, 0x1);
        gbc.writeMem(0xbdec, { 0x2e, 0x13 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7022, gbc.sp());
        EXPECT(0xbdee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbdec));
        EXPECT(0x13, gbc.readMem(0xbded));
        // 2E 02E3
        gbc.setState(0xbd38, 0xd674, 0x430, 0xe96f, 0xb944, 0x53d8, 0x0, 0x0);
        gbc.writeMem(0xbd38, { 0x2e, 0x5d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd674, gbc.sp());
        EXPECT(0xbd3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbd38));
        EXPECT(0x5d, gbc.readMem(0xbd39));
        // 2E 02E4
        gbc.setState(0xa5f2, 0x9c2a, 0xc950, 0x29a0, 0x82e9, 0x3c0e, 0x1, 0x0);
        gbc.writeMem(0xa5f2, { 0x2e, 0xcc });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9c2a, gbc.sp());
        EXPECT(0xa5f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa5f2));
        EXPECT(0xcc, gbc.readMem(0xa5f3));
        // 2E 02E5
        gbc.setState(0xdec3, 0xf94f, 0xda50, 0xaaf1, 0x3b2a, 0xb57f, 0x0, 0x0);
        gbc.writeMem(0xdec3, { 0x2e, 0x57 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf94f, gbc.sp());
        EXPECT(0xdec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xdec3));
        EXPECT(0x57, gbc.readMem(0xdec4));
        // 2E 02E6
        gbc.setState(0x4f14, 0x3270, 0x50f0, 0x6989, 0x9ead, 0x7537, 0x0, 0x1);
        gbc.writeMem(0x4f14, { 0x2e, 0x43 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3270, gbc.sp());
        EXPECT(0x4f16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 02E7
        gbc.setState(0xd60f, 0x3992, 0x97d0, 0xd56f, 0xab5f, 0x6491, 0x0, 0x1);
        gbc.writeMem(0xd60f, { 0x2e, 0x5f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3992, gbc.sp());
        EXPECT(0xd611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd60f));
        EXPECT(0x5f, gbc.readMem(0xd610));
        // 2E 02E8
        gbc.setState(0x7c2, 0xb66f, 0x6660, 0x1029, 0xf4d1, 0xb1e, 0x1, 0x0);
        gbc.writeMem(0x7c2, { 0x2e, 0xb8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb66f, gbc.sp());
        EXPECT(0x7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02E9
        gbc.setState(0xd918, 0x9e81, 0xc0c0, 0x92f2, 0xec5c, 0xcb9a, 0x0, 0x0);
        gbc.writeMem(0xd918, { 0x2e, 0xf0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9e81, gbc.sp());
        EXPECT(0xd91a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd918));
        EXPECT(0xf0, gbc.readMem(0xd919));
        // 2E 02EA
        gbc.setState(0xc9e5, 0xf5ad, 0x640, 0x7bed, 0x7180, 0xec9d, 0x0, 0x0);
        gbc.writeMem(0xc9e5, { 0x2e, 0x4a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf5ad, gbc.sp());
        EXPECT(0xc9e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc9e5));
        EXPECT(0x4a, gbc.readMem(0xc9e6));
        // 2E 02EB
        gbc.setState(0x135a, 0x8ecd, 0xa70, 0xab18, 0x7ef7, 0xfa91, 0x1, 0x0);
        gbc.writeMem(0x135a, { 0x2e, 0xc0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8ecd, gbc.sp());
        EXPECT(0x135c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 02EC
        gbc.setState(0xcf2b, 0x1eab, 0x7c0, 0xbc8c, 0x6b98, 0x32e4, 0x1, 0x0);
        gbc.writeMem(0xcf2b, { 0x2e, 0x49 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1eab, gbc.sp());
        EXPECT(0xcf2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xcf2b));
        EXPECT(0x49, gbc.readMem(0xcf2c));
        // 2E 02ED
        gbc.setState(0xbd59, 0x4694, 0xee00, 0xa94c, 0x9aba, 0x673c, 0x0, 0x1);
        gbc.writeMem(0xbd59, { 0x2e, 0x4c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4694, gbc.sp());
        EXPECT(0xbd5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbd59));
        EXPECT(0x4c, gbc.readMem(0xbd5a));
        // 2E 02EE
        gbc.setState(0x8de7, 0xd67f, 0xfca0, 0x1420, 0xfc04, 0x82b2, 0x1, 0x0);
        gbc.writeMem(0x8de7, { 0x2e, 0x56 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd67f, gbc.sp());
        EXPECT(0x8de9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8de7));
        EXPECT(0x56, gbc.readMem(0x8de8));
        // 2E 02F0
        gbc.setState(0xb4ae, 0x2aa2, 0x9680, 0x28b5, 0x861d, 0x9af2, 0x0, 0x0);
        gbc.writeMem(0xb4ae, { 0x2e, 0x19 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2aa2, gbc.sp());
        EXPECT(0xb4b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb4ae));
        EXPECT(0x19, gbc.readMem(0xb4af));
        // 2E 02F1
        gbc.setState(0xc3ba, 0xc855, 0xc6a0, 0x7803, 0xdac5, 0x14a3, 0x1, 0x1);
        gbc.writeMem(0xc3ba, { 0x2e, 0x13 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc855, gbc.sp());
        EXPECT(0xc3bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc3ba));
        EXPECT(0x13, gbc.readMem(0xc3bb));
        // 2E 02F2
        gbc.setState(0x5d8c, 0xb2f3, 0xff0, 0x7cbf, 0x9d41, 0x22c0, 0x1, 0x1);
        gbc.writeMem(0x5d8c, { 0x2e, 0x4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb2f3, gbc.sp());
        EXPECT(0x5d8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 02F3
        gbc.setState(0xd48d, 0x1db2, 0x2be0, 0x33b, 0x8add, 0x579c, 0x1, 0x1);
        gbc.writeMem(0xd48d, { 0x2e, 0x3f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1db2, gbc.sp());
        EXPECT(0xd48f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd48d));
        EXPECT(0x3f, gbc.readMem(0xd48e));
        // 2E 02F5
        gbc.setState(0x7461, 0x89f7, 0x3910, 0xf357, 0x6c54, 0x783e, 0x0, 0x0);
        gbc.writeMem(0x7461, { 0x2e, 0x38 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x89f7, gbc.sp());
        EXPECT(0x7463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 02F6
        gbc.setState(0x94f5, 0x40ba, 0xed70, 0xd78c, 0xbe0c, 0x6ab5, 0x0, 0x0);
        gbc.writeMem(0x94f5, { 0x2e, 0x51 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x40ba, gbc.sp());
        EXPECT(0x94f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x94f5));
        EXPECT(0x51, gbc.readMem(0x94f6));
        // 2E 02F7
        gbc.setState(0x5270, 0x5c2f, 0x6660, 0x52e3, 0x50b6, 0xfb48, 0x1, 0x0);
        gbc.writeMem(0x5270, { 0x2e, 0x92 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5c2f, gbc.sp());
        EXPECT(0x5272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02F8
        gbc.setState(0xa351, 0x97a5, 0x7850, 0x99b3, 0xfaf1, 0x11fd, 0x0, 0x1);
        gbc.writeMem(0xa351, { 0x2e, 0x77 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x97a5, gbc.sp());
        EXPECT(0xa353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa351));
        EXPECT(0x77, gbc.readMem(0xa352));
        // 2E 02FA
        gbc.setState(0xd68, 0x853, 0x9370, 0x711d, 0x3fdf, 0x2db4, 0x1, 0x1);
        gbc.writeMem(0xd68, { 0x2e, 0x3c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x853, gbc.sp());
        EXPECT(0xd6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 02FB
        gbc.setState(0x2d35, 0x9850, 0x69e0, 0xb5a, 0xbcdc, 0xaf87, 0x0, 0x0);
        gbc.writeMem(0x2d35, { 0x2e, 0x6c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9850, gbc.sp());
        EXPECT(0x2d37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 02FC
        gbc.setState(0x80bd, 0xa18d, 0x4950, 0x1cc2, 0xbc44, 0x9590, 0x0, 0x0);
        gbc.writeMem(0x80bd, { 0x2e, 0xe5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa18d, gbc.sp());
        EXPECT(0x80bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x80bd));
        EXPECT(0xe5, gbc.readMem(0x80be));
        // 2E 02FD
        gbc.setState(0xc324, 0x5309, 0xf630, 0xb590, 0x8cd7, 0x70cb, 0x1, 0x1);
        gbc.writeMem(0xc324, { 0x2e, 0xb1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5309, gbc.sp());
        EXPECT(0xc326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc324));
        EXPECT(0xb1, gbc.readMem(0xc325));
        // 2E 02FE
        gbc.setState(0xc569, 0xdb9f, 0x29a0, 0xb6a0, 0xaa36, 0x13b8, 0x0, 0x0);
        gbc.writeMem(0xc569, { 0x2e, 0x30 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdb9f, gbc.sp());
        EXPECT(0xc56b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc569));
        EXPECT(0x30, gbc.readMem(0xc56a));
        // 2E 02FF
        gbc.setState(0x4dbd, 0x9129, 0x9150, 0xf580, 0x451f, 0x9255, 0x0, 0x0);
        gbc.writeMem(0x4dbd, { 0x2e, 0x9f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9129, gbc.sp());
        EXPECT(0x4dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0300
        gbc.setState(0x851, 0xe263, 0x3270, 0xeebc, 0x2fbf, 0xc41, 0x0, 0x0);
        gbc.writeMem(0x851, { 0x2e, 0x51 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe263, gbc.sp());
        EXPECT(0x853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0301
        gbc.setState(0x5b44, 0xcb58, 0x3280, 0x3910, 0x304c, 0xe767, 0x0, 0x1);
        gbc.writeMem(0x5b44, { 0x2e, 0xea });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcb58, gbc.sp());
        EXPECT(0x5b46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0302
        gbc.setState(0x832, 0x3b49, 0xf160, 0x15a1, 0x733b, 0x4577, 0x1, 0x1);
        gbc.writeMem(0x832, { 0x2e, 0xb8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3b49, gbc.sp());
        EXPECT(0x834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0303
        gbc.setState(0x6a15, 0x841c, 0x37e0, 0x6207, 0x1847, 0x25aa, 0x0, 0x0);
        gbc.writeMem(0x6a15, { 0x2e, 0xd1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x841c, gbc.sp());
        EXPECT(0x6a17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0304
        gbc.setState(0xeafa, 0x3167, 0x6e30, 0xbd89, 0xa7c7, 0x934f, 0x1, 0x1);
        gbc.writeMem(0xeafa, { 0x2e, 0x3c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3167, gbc.sp());
        EXPECT(0xeafc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xeafa));
        EXPECT(0x3c, gbc.readMem(0xeafb));
        // 2E 0305
        gbc.setState(0x2e0a, 0x812e, 0xdb30, 0xf614, 0xe8a1, 0x853f, 0x1, 0x1);
        gbc.writeMem(0x2e0a, { 0x2e, 0x34 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x812e, gbc.sp());
        EXPECT(0x2e0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0306
        gbc.setState(0x1c76, 0x5d70, 0xcca0, 0x241c, 0xf339, 0x987d, 0x1, 0x1);
        gbc.writeMem(0x1c76, { 0x2e, 0x2e });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5d70, gbc.sp());
        EXPECT(0x1c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0308
        gbc.setState(0xe16a, 0x93e6, 0x2db0, 0xbe78, 0x7b40, 0x7f75, 0x1, 0x0);
        gbc.writeMem(0xe16a, { 0x2e, 0xfb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x93e6, gbc.sp());
        EXPECT(0xe16c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe16a));
        EXPECT(0xfb, gbc.readMem(0xe16b));
        // 2E 0309
        gbc.setState(0x2763, 0xeba4, 0x5c70, 0x742d, 0xc2a9, 0xa6a5, 0x0, 0x0);
        gbc.writeMem(0x2763, { 0x2e, 0xb1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xeba4, gbc.sp());
        EXPECT(0x2765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 030A
        gbc.setState(0xe5c1, 0xb9da, 0xe0d0, 0x9d75, 0xfd2f, 0x1c00, 0x0, 0x0);
        gbc.writeMem(0xe5c1, { 0x2e, 0x79 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb9da, gbc.sp());
        EXPECT(0xe5c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe5c1));
        EXPECT(0x79, gbc.readMem(0xe5c2));
        // 2E 030B
        gbc.setState(0x4b3b, 0x8767, 0x91b0, 0xa17d, 0x412d, 0x2997, 0x0, 0x1);
        gbc.writeMem(0x4b3b, { 0x2e, 0xe7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8767, gbc.sp());
        EXPECT(0x4b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 030C
        gbc.setState(0x4f7a, 0xce58, 0x5ae0, 0x4daa, 0x312c, 0xc35d, 0x0, 0x1);
        gbc.writeMem(0x4f7a, { 0x2e, 0xe7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xce58, gbc.sp());
        EXPECT(0x4f7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 030D
        gbc.setState(0x4318, 0x3b90, 0xaa20, 0xf7aa, 0xc4b2, 0x456a, 0x1, 0x1);
        gbc.writeMem(0x4318, { 0x2e, 0xe0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3b90, gbc.sp());
        EXPECT(0x431a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 030E
        gbc.setState(0xd94e, 0xbf61, 0x7bc0, 0xf9be, 0x7197, 0x4ba7, 0x1, 0x1);
        gbc.writeMem(0xd94e, { 0x2e, 0xa7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbf61, gbc.sp());
        EXPECT(0xd950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd94e));
        EXPECT(0xa7, gbc.readMem(0xd94f));
        // 2E 0310
        gbc.setState(0x9cdc, 0x4099, 0xbb40, 0xd2e1, 0x4e11, 0x42c3, 0x1, 0x0);
        gbc.writeMem(0x9cdc, { 0x2e, 0xc0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4099, gbc.sp());
        EXPECT(0x9cde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9cdc));
        EXPECT(0xc0, gbc.readMem(0x9cdd));
        // 2E 0311
        gbc.setState(0x27d, 0xac5f, 0x75e0, 0xf66b, 0xbaae, 0x6386, 0x1, 0x0);
        gbc.writeMem(0x27d, { 0x2e, 0xd5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xac5f, gbc.sp());
        EXPECT(0x27f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0312
        gbc.setState(0x672c, 0xe63a, 0xe800, 0x28ef, 0x777, 0xca07, 0x0, 0x1);
        gbc.writeMem(0x672c, { 0x2e, 0xc9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe63a, gbc.sp());
        EXPECT(0x672e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0313
        gbc.setState(0xc76a, 0x5204, 0x5d10, 0x6201, 0x7b26, 0xbad3, 0x0, 0x0);
        gbc.writeMem(0xc76a, { 0x2e, 0x4d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5204, gbc.sp());
        EXPECT(0xc76c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc76a));
        EXPECT(0x4d, gbc.readMem(0xc76b));
        // 2E 0314
        gbc.setState(0x4b5, 0x408, 0x6140, 0xfe40, 0x9709, 0xe1c9, 0x0, 0x0);
        gbc.writeMem(0x4b5, { 0x2e, 0xc8 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x408, gbc.sp());
        EXPECT(0x4b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0315
        gbc.setState(0x8775, 0xde00, 0xa90, 0xe0d8, 0xa1be, 0xbe46, 0x1, 0x0);
        gbc.writeMem(0x8775, { 0x2e, 0x99 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xde00, gbc.sp());
        EXPECT(0x8777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8775));
        EXPECT(0x99, gbc.readMem(0x8776));
        // 2E 0316
        gbc.setState(0x1559, 0x231f, 0x770, 0x4c5, 0xc705, 0xb8b9, 0x1, 0x1);
        gbc.writeMem(0x1559, { 0x2e, 0x41 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x231f, gbc.sp());
        EXPECT(0x155b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0317
        gbc.setState(0xc9fc, 0xbd71, 0x53a0, 0x3c5, 0x1a42, 0x7614, 0x1, 0x0);
        gbc.writeMem(0xc9fc, { 0x2e, 0x5e });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbd71, gbc.sp());
        EXPECT(0xc9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc9fc));
        EXPECT(0x5e, gbc.readMem(0xc9fd));
        // 2E 0318
        gbc.setState(0x90ad, 0x9346, 0xe6a0, 0x760f, 0xd15, 0x3961, 0x0, 0x1);
        gbc.writeMem(0x90ad, { 0x2e, 0xdd });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9346, gbc.sp());
        EXPECT(0x90af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x90ad));
        EXPECT(0xdd, gbc.readMem(0x90ae));
        // 2E 0319
        gbc.setState(0x8223, 0x997d, 0x2460, 0xa4e1, 0xa4a5, 0xdf65, 0x1, 0x0);
        gbc.writeMem(0x8223, { 0x2e, 0x2a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x997d, gbc.sp());
        EXPECT(0x8225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8223));
        EXPECT(0x2a, gbc.readMem(0x8224));
        // 2E 031A
        gbc.setState(0x6058, 0xc6fc, 0x280, 0x6990, 0x95af, 0xb1da, 0x0, 0x1);
        gbc.writeMem(0x6058, { 0x2e, 0xcb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc6fc, gbc.sp());
        EXPECT(0x605a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 031B
        gbc.setState(0x9ec0, 0xc0ce, 0x1c10, 0xd29b, 0x3b5e, 0xdc6d, 0x1, 0x0);
        gbc.writeMem(0x9ec0, { 0x2e, 0xf2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc0ce, gbc.sp());
        EXPECT(0x9ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9ec0));
        EXPECT(0xf2, gbc.readMem(0x9ec1));
        // 2E 031C
        gbc.setState(0xde7d, 0x1192, 0xb7c0, 0xea80, 0xe834, 0x8839, 0x1, 0x0);
        gbc.writeMem(0xde7d, { 0x2e, 0x75 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1192, gbc.sp());
        EXPECT(0xde7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xde7d));
        EXPECT(0x75, gbc.readMem(0xde7e));
        // 2E 031D
        gbc.setState(0x30b, 0x7384, 0x3f60, 0x2e39, 0xf2fc, 0xcc85, 0x1, 0x0);
        gbc.writeMem(0x30b, { 0x2e, 0x2c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7384, gbc.sp());
        EXPECT(0x30d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 031E
        gbc.setState(0xab92, 0x971, 0x2220, 0xfab3, 0x41f3, 0xddbc, 0x1, 0x1);
        gbc.writeMem(0xab92, { 0x2e, 0x2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x971, gbc.sp());
        EXPECT(0xab94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xab92));
        EXPECT(0x2, gbc.readMem(0xab93));
        // 2E 031F
        gbc.setState(0xa4a, 0x52b1, 0xf420, 0xee5c, 0xd4b9, 0x32c5, 0x0, 0x1);
        gbc.writeMem(0xa4a, { 0x2e, 0xe3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x52b1, gbc.sp());
        EXPECT(0xa4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0320
        gbc.setState(0x20ac, 0xfd4b, 0x5530, 0x95c6, 0x6bb4, 0x8ca1, 0x1, 0x1);
        gbc.writeMem(0x20ac, { 0x2e, 0xeb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfd4b, gbc.sp());
        EXPECT(0x20ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0321
        gbc.setState(0x7e18, 0x4f7c, 0xeff0, 0x754c, 0xa68c, 0x26c7, 0x1, 0x1);
        gbc.writeMem(0x7e18, { 0x2e, 0x1e });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4f7c, gbc.sp());
        EXPECT(0x7e1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0322
        gbc.setState(0x8908, 0xf315, 0x51f0, 0xd1cf, 0x7219, 0x779d, 0x1, 0x0);
        gbc.writeMem(0x8908, { 0x2e, 0xb5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf315, gbc.sp());
        EXPECT(0x890a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8908));
        EXPECT(0xb5, gbc.readMem(0x8909));
        // 2E 0323
        gbc.setState(0x4eb, 0xf00a, 0x9600, 0x4fa7, 0xc0f5, 0x2f89, 0x1, 0x0);
        gbc.writeMem(0x4eb, { 0x2e, 0x51 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf00a, gbc.sp());
        EXPECT(0x4ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0324
        gbc.setState(0xe28d, 0x83b8, 0x32a0, 0x3a04, 0xfa85, 0xd41a, 0x0, 0x0);
        gbc.writeMem(0xe28d, { 0x2e, 0x73 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x83b8, gbc.sp());
        EXPECT(0xe28f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe28d));
        EXPECT(0x73, gbc.readMem(0xe28e));
        // 2E 0325
        gbc.setState(0x2d19, 0x7df9, 0x4620, 0x39ad, 0xd635, 0x3985, 0x1, 0x0);
        gbc.writeMem(0x2d19, { 0x2e, 0x7f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7df9, gbc.sp());
        EXPECT(0x2d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0326
        gbc.setState(0xd116, 0x4228, 0x9160, 0x1e3e, 0xd8e9, 0x43a8, 0x1, 0x0);
        gbc.writeMem(0xd116, { 0x2e, 0x7a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4228, gbc.sp());
        EXPECT(0xd118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd116));
        EXPECT(0x7a, gbc.readMem(0xd117));
        // 2E 0327
        gbc.setState(0x485f, 0x7308, 0x5900, 0xdd35, 0x38ab, 0xb3b7, 0x1, 0x1);
        gbc.writeMem(0x485f, { 0x2e, 0xf0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7308, gbc.sp());
        EXPECT(0x4861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0328
        gbc.setState(0x48f1, 0xc30e, 0xc170, 0xf791, 0x6242, 0xd6e2, 0x1, 0x0);
        gbc.writeMem(0x48f1, { 0x2e, 0x91 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc30e, gbc.sp());
        EXPECT(0x48f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 032A
        gbc.setState(0x13d9, 0x63c3, 0xe80, 0xfa5e, 0x4147, 0x7dab, 0x1, 0x1);
        gbc.writeMem(0x13d9, { 0x2e, 0xd5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x63c3, gbc.sp());
        EXPECT(0x13db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 032B
        gbc.setState(0x6184, 0xf35, 0x4a80, 0xdd26, 0x2d8f, 0xaffb, 0x1, 0x0);
        gbc.writeMem(0x6184, { 0x2e, 0xc7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf35, gbc.sp());
        EXPECT(0x6186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 032C
        gbc.setState(0x2199, 0x3206, 0x6d40, 0xf286, 0x99ec, 0x250b, 0x1, 0x1);
        gbc.writeMem(0x2199, { 0x2e, 0x32 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3206, gbc.sp());
        EXPECT(0x219b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 032D
        gbc.setState(0xb48d, 0xd3c0, 0x63f0, 0x7a0b, 0x8412, 0x9aa0, 0x0, 0x1);
        gbc.writeMem(0xb48d, { 0x2e, 0x75 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd3c0, gbc.sp());
        EXPECT(0xb48f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb48d));
        EXPECT(0x75, gbc.readMem(0xb48e));
        // 2E 032E
        gbc.setState(0x3a1e, 0x5dd1, 0x7320, 0xfff0, 0xff7c, 0xa3a8, 0x0, 0x1);
        gbc.writeMem(0x3a1e, { 0x2e, 0x23 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5dd1, gbc.sp());
        EXPECT(0x3a20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 032F
        gbc.setState(0xf8d, 0x1225, 0x4480, 0x4564, 0x4b96, 0xc6d5, 0x1, 0x1);
        gbc.writeMem(0xf8d, { 0x2e, 0x8f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1225, gbc.sp());
        EXPECT(0xf8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0330
        gbc.setState(0x99ff, 0xf8e, 0xcf20, 0xe398, 0xb58c, 0xca4d, 0x1, 0x0);
        gbc.writeMem(0x99ff, { 0x2e, 0x8a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf8e, gbc.sp());
        EXPECT(0x9a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x99ff));
        EXPECT(0x8a, gbc.readMem(0x9a00));
        // 2E 0331
        gbc.setState(0x7bfa, 0xb69f, 0xd2b0, 0xaac5, 0xd7df, 0x90aa, 0x0, 0x0);
        gbc.writeMem(0x7bfa, { 0x2e, 0x25 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb69f, gbc.sp());
        EXPECT(0x7bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0332
        gbc.setState(0x2b4a, 0xe43f, 0xa5d0, 0x2455, 0x6fe4, 0x8431, 0x1, 0x1);
        gbc.writeMem(0x2b4a, { 0x2e, 0x91 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe43f, gbc.sp());
        EXPECT(0x2b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0333
        gbc.setState(0x5b1b, 0xfe9e, 0xf620, 0x266, 0x65e0, 0x99b9, 0x1, 0x0);
        gbc.writeMem(0x5b1b, { 0x2e, 0xcc });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xfe9e, gbc.sp());
        EXPECT(0x5b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0334
        gbc.setState(0x7a22, 0xf410, 0x47d0, 0x77b0, 0x88a4, 0xb02, 0x1, 0x1);
        gbc.writeMem(0x7a22, { 0x2e, 0xae });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf410, gbc.sp());
        EXPECT(0x7a24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0335
        gbc.setState(0x12b0, 0x7811, 0x2600, 0x9906, 0x4df3, 0x6d87, 0x0, 0x1);
        gbc.writeMem(0x12b0, { 0x2e, 0x8d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7811, gbc.sp());
        EXPECT(0x12b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0336
        gbc.setState(0xc2ac, 0x85db, 0x6500, 0x5079, 0x2bc8, 0xbb5c, 0x1, 0x0);
        gbc.writeMem(0xc2ac, { 0x2e, 0x3b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x85db, gbc.sp());
        EXPECT(0xc2ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc2ac));
        EXPECT(0x3b, gbc.readMem(0xc2ad));
        // 2E 0337
        gbc.setState(0x956, 0x41b2, 0xf6b0, 0xbbb6, 0xdad3, 0x1aae, 0x0, 0x0);
        gbc.writeMem(0x956, { 0x2e, 0xf9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x41b2, gbc.sp());
        EXPECT(0x958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0338
        gbc.setState(0xd86a, 0xda4, 0x62f0, 0xe133, 0x94dc, 0x3620, 0x0, 0x0);
        gbc.writeMem(0xd86a, { 0x2e, 0x91 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xda4, gbc.sp());
        EXPECT(0xd86c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd86a));
        EXPECT(0x91, gbc.readMem(0xd86b));
        // 2E 0339
        gbc.setState(0xe227, 0x9e77, 0x3ef0, 0xbefd, 0x9b4e, 0xf845, 0x0, 0x0);
        gbc.writeMem(0xe227, { 0x2e, 0xdf });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9e77, gbc.sp());
        EXPECT(0xe229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe227));
        EXPECT(0xdf, gbc.readMem(0xe228));
        // 2E 033A
        gbc.setState(0x9d5f, 0x950c, 0xe600, 0xf51f, 0x4827, 0x6714, 0x0, 0x0);
        gbc.writeMem(0x9d5f, { 0x2e, 0xbf });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x950c, gbc.sp());
        EXPECT(0x9d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9d5f));
        EXPECT(0xbf, gbc.readMem(0x9d60));
        // 2E 033B
        gbc.setState(0x917b, 0x6043, 0x810, 0xdf5c, 0x31e9, 0x5dfd, 0x0, 0x0);
        gbc.writeMem(0x917b, { 0x2e, 0x50 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6043, gbc.sp());
        EXPECT(0x917d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x917b));
        EXPECT(0x50, gbc.readMem(0x917c));
        // 2E 033C
        gbc.setState(0x430, 0x12b1, 0xa250, 0xc18f, 0x5b52, 0x9f6e, 0x1, 0x0);
        gbc.writeMem(0x430, { 0x2e, 0x7c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x12b1, gbc.sp());
        EXPECT(0x432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 033D
        gbc.setState(0xe419, 0x472b, 0x8070, 0xe282, 0x95e8, 0xb671, 0x0, 0x1);
        gbc.writeMem(0xe419, { 0x2e, 0xfa });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x472b, gbc.sp());
        EXPECT(0xe41b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe419));
        EXPECT(0xfa, gbc.readMem(0xe41a));
        // 2E 033E
        gbc.setState(0xa17b, 0xee4a, 0xdd50, 0x70a5, 0x8a83, 0x61f5, 0x0, 0x0);
        gbc.writeMem(0xa17b, { 0x2e, 0x87 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xee4a, gbc.sp());
        EXPECT(0xa17d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa17b));
        EXPECT(0x87, gbc.readMem(0xa17c));
        // 2E 033F
        gbc.setState(0x3dad, 0xc019, 0x91f0, 0xfa63, 0xc505, 0xc062, 0x0, 0x1);
        gbc.writeMem(0x3dad, { 0x2e, 0xdf });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc019, gbc.sp());
        EXPECT(0x3daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0340
        gbc.setState(0x7345, 0xd58c, 0xfad0, 0x13b1, 0xeb73, 0x9b04, 0x0, 0x0);
        gbc.writeMem(0x7345, { 0x2e, 0x44 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd58c, gbc.sp());
        EXPECT(0x7347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0341
        gbc.setState(0x656c, 0x65c6, 0x1f80, 0xb385, 0xf166, 0xd59f, 0x1, 0x1);
        gbc.writeMem(0x656c, { 0x2e, 0x68 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x65c6, gbc.sp());
        EXPECT(0x656e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0342
        gbc.setState(0x50c3, 0x2da0, 0xcc0, 0x5769, 0x74b4, 0xac9b, 0x1, 0x0);
        gbc.writeMem(0x50c3, { 0x2e, 0x99 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2da0, gbc.sp());
        EXPECT(0x50c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0343
        gbc.setState(0x3eae, 0xced6, 0x5610, 0x10f, 0x989a, 0x6f83, 0x1, 0x0);
        gbc.writeMem(0x3eae, { 0x2e, 0x8c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xced6, gbc.sp());
        EXPECT(0x3eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0344
        gbc.setState(0xea17, 0xc0fd, 0x55f0, 0x553c, 0xa991, 0xe804, 0x0, 0x1);
        gbc.writeMem(0xea17, { 0x2e, 0x2e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc0fd, gbc.sp());
        EXPECT(0xea19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xea17));
        EXPECT(0x2e, gbc.readMem(0xea18));
        // 2E 0345
        gbc.setState(0x97a, 0xeeee, 0xbb50, 0x3, 0x47b7, 0x72c5, 0x1, 0x1);
        gbc.writeMem(0x97a, { 0x2e, 0xb1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xeeee, gbc.sp());
        EXPECT(0x97c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0346
        gbc.setState(0x2274, 0xd88c, 0xe790, 0xf5fe, 0x4fbe, 0x1cad, 0x1, 0x1);
        gbc.writeMem(0x2274, { 0x2e, 0xe });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd88c, gbc.sp());
        EXPECT(0x2276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0347
        gbc.setState(0x5fe5, 0x26c5, 0x1c0, 0x9107, 0x36fb, 0x1ef6, 0x1, 0x1);
        gbc.writeMem(0x5fe5, { 0x2e, 0x40 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x26c5, gbc.sp());
        EXPECT(0x5fe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0348
        gbc.setState(0x4df7, 0xebfd, 0xe870, 0x577d, 0x3984, 0xa988, 0x0, 0x1);
        gbc.writeMem(0x4df7, { 0x2e, 0x22 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xebfd, gbc.sp());
        EXPECT(0x4df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0349
        gbc.setState(0x4710, 0xaaa2, 0xece0, 0xf7f5, 0x40cd, 0xa1a6, 0x0, 0x0);
        gbc.writeMem(0x4710, { 0x2e, 0x2e });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xaaa2, gbc.sp());
        EXPECT(0x4712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 034A
        gbc.setState(0x60c3, 0xd73a, 0x2ff0, 0xdf17, 0x91a, 0x70f5, 0x1, 0x1);
        gbc.writeMem(0x60c3, { 0x2e, 0x16 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd73a, gbc.sp());
        EXPECT(0x60c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 034B
        gbc.setState(0xb94, 0x497c, 0xce30, 0x6eff, 0xd5a4, 0xf1c4, 0x1, 0x1);
        gbc.writeMem(0xb94, { 0x2e, 0x90 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x497c, gbc.sp());
        EXPECT(0xb96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 034C
        gbc.setState(0x6344, 0xfdbe, 0xe4d0, 0x2be0, 0xb688, 0xd79b, 0x1, 0x0);
        gbc.writeMem(0x6344, { 0x2e, 0xbd });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xfdbe, gbc.sp());
        EXPECT(0x6346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 034D
        gbc.setState(0xc4ac, 0xb3d6, 0x85c0, 0xfa52, 0x2578, 0xfba7, 0x0, 0x1);
        gbc.writeMem(0xc4ac, { 0x2e, 0xd3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb3d6, gbc.sp());
        EXPECT(0xc4ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc4ac));
        EXPECT(0xd3, gbc.readMem(0xc4ad));
        // 2E 034E
        gbc.setState(0xb440, 0x430f, 0x50f0, 0xe1f0, 0x14ce, 0x6ec4, 0x1, 0x1);
        gbc.writeMem(0xb440, { 0x2e, 0xce });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x430f, gbc.sp());
        EXPECT(0xb442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb440));
        EXPECT(0xce, gbc.readMem(0xb441));
        // 2E 034F
        gbc.setState(0x7b8c, 0x4a9d, 0x41a0, 0x9bbe, 0x7fc6, 0xb0e0, 0x0, 0x1);
        gbc.writeMem(0x7b8c, { 0x2e, 0xc4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4a9d, gbc.sp());
        EXPECT(0x7b8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0350
        gbc.setState(0xb57f, 0xe358, 0x8340, 0x4522, 0x943c, 0x5c75, 0x0, 0x0);
        gbc.writeMem(0xb57f, { 0x2e, 0xd8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe358, gbc.sp());
        EXPECT(0xb581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb57f));
        EXPECT(0xd8, gbc.readMem(0xb580));
        // 2E 0351
        gbc.setState(0x6a, 0xdd17, 0xbfd0, 0xa5d1, 0x525a, 0x79c, 0x1, 0x0);
        gbc.writeMem(0x6a, { 0x2e, 0xef });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdd17, gbc.sp());
        EXPECT(0x6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0352
        gbc.setState(0xe2f5, 0xcafa, 0xf20, 0xeb82, 0x3901, 0xd38a, 0x0, 0x1);
        gbc.writeMem(0xe2f5, { 0x2e, 0xaf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcafa, gbc.sp());
        EXPECT(0xe2f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe2f5));
        EXPECT(0xaf, gbc.readMem(0xe2f6));
        // 2E 0353
        gbc.setState(0x438f, 0xc662, 0x2f00, 0xb18d, 0x4f0e, 0x568, 0x0, 0x1);
        gbc.writeMem(0x438f, { 0x2e, 0xce });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc662, gbc.sp());
        EXPECT(0x4391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0354
        gbc.setState(0x25c7, 0xdba1, 0x72d0, 0x91f3, 0xa53c, 0xce37, 0x0, 0x0);
        gbc.writeMem(0x25c7, { 0x2e, 0x9c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdba1, gbc.sp());
        EXPECT(0x25c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0355
        gbc.setState(0x5824, 0xbd64, 0x49d0, 0x7d22, 0x4a48, 0x969b, 0x1, 0x1);
        gbc.writeMem(0x5824, { 0x2e, 0x4a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbd64, gbc.sp());
        EXPECT(0x5826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0356
        gbc.setState(0x99c4, 0x36c4, 0x1b80, 0xfc0d, 0x2550, 0x1d43, 0x0, 0x0);
        gbc.writeMem(0x99c4, { 0x2e, 0x68 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x36c4, gbc.sp());
        EXPECT(0x99c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x99c4));
        EXPECT(0x68, gbc.readMem(0x99c5));
        // 2E 0357
        gbc.setState(0x331a, 0xe0c9, 0x62b0, 0x98db, 0xcba1, 0xe8f1, 0x0, 0x1);
        gbc.writeMem(0x331a, { 0x2e, 0x51 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe0c9, gbc.sp());
        EXPECT(0x331c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0358
        gbc.setState(0xd51d, 0xa3b2, 0x9810, 0x9fca, 0xa506, 0x9088, 0x1, 0x0);
        gbc.writeMem(0xd51d, { 0x2e, 0x1b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa3b2, gbc.sp());
        EXPECT(0xd51f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd51d));
        EXPECT(0x1b, gbc.readMem(0xd51e));
        // 2E 035A
        gbc.setState(0xac72, 0xc9ab, 0xe390, 0x5bb3, 0x4a4b, 0x7d52, 0x1, 0x0);
        gbc.writeMem(0xac72, { 0x2e, 0x3e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc9ab, gbc.sp());
        EXPECT(0xac74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xac72));
        EXPECT(0x3e, gbc.readMem(0xac73));
        // 2E 035B
        gbc.setState(0xcb73, 0x164f, 0xe0c0, 0xa0f7, 0x4097, 0x570c, 0x0, 0x0);
        gbc.writeMem(0xcb73, { 0x2e, 0xa8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x164f, gbc.sp());
        EXPECT(0xcb75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xcb73));
        EXPECT(0xa8, gbc.readMem(0xcb74));
        // 2E 035C
        gbc.setState(0x88a4, 0x3497, 0x8280, 0x668a, 0x6bf3, 0xb49c, 0x1, 0x1);
        gbc.writeMem(0x88a4, { 0x2e, 0x4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3497, gbc.sp());
        EXPECT(0x88a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x88a4));
        EXPECT(0x4, gbc.readMem(0x88a5));
        // 2E 035D
        gbc.setState(0x5c61, 0x7971, 0x5f70, 0x4e72, 0x3eec, 0xae6c, 0x0, 0x1);
        gbc.writeMem(0x5c61, { 0x2e, 0x75 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7971, gbc.sp());
        EXPECT(0x5c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 035E
        gbc.setState(0x77b6, 0x3203, 0xadc0, 0x6ee, 0x341d, 0xebe4, 0x1, 0x1);
        gbc.writeMem(0x77b6, { 0x2e, 0xed });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3203, gbc.sp());
        EXPECT(0x77b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 035F
        gbc.setState(0xbd16, 0xd01c, 0xe9c0, 0x7dd7, 0x6fc9, 0x915c, 0x0, 0x1);
        gbc.writeMem(0xbd16, { 0x2e, 0x8d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd01c, gbc.sp());
        EXPECT(0xbd18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbd16));
        EXPECT(0x8d, gbc.readMem(0xbd17));
        // 2E 0360
        gbc.setState(0xaf9a, 0x4bab, 0xb180, 0xd6ec, 0x4775, 0xfbaf, 0x1, 0x1);
        gbc.writeMem(0xaf9a, { 0x2e, 0x37 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4bab, gbc.sp());
        EXPECT(0xaf9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xaf9a));
        EXPECT(0x37, gbc.readMem(0xaf9b));
        // 2E 0361
        gbc.setState(0xb8e0, 0xf5c4, 0xf080, 0x2900, 0xbc1f, 0xbf68, 0x1, 0x0);
        gbc.writeMem(0xb8e0, { 0x2e, 0x15 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf5c4, gbc.sp());
        EXPECT(0xb8e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb8e0));
        EXPECT(0x15, gbc.readMem(0xb8e1));
        // 2E 0362
        gbc.setState(0x3cec, 0x62a3, 0xe5d0, 0xa661, 0xc3d5, 0xa7ed, 0x1, 0x1);
        gbc.writeMem(0x3cec, { 0x2e, 0xdd });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x62a3, gbc.sp());
        EXPECT(0x3cee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0363
        gbc.setState(0x912d, 0x288, 0x8ee0, 0xf255, 0x90c1, 0x33fc, 0x1, 0x0);
        gbc.writeMem(0x912d, { 0x2e, 0x7f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x288, gbc.sp());
        EXPECT(0x912f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x912d));
        EXPECT(0x7f, gbc.readMem(0x912e));
        // 2E 0364
        gbc.setState(0x7045, 0x7541, 0xc860, 0xf1b5, 0xd9a3, 0x7b46, 0x0, 0x0);
        gbc.writeMem(0x7045, { 0x2e, 0xe4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7541, gbc.sp());
        EXPECT(0x7047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0365
        gbc.setState(0xc44, 0xfb81, 0x1490, 0xa376, 0xcb45, 0xaa98, 0x0, 0x0);
        gbc.writeMem(0xc44, { 0x2e, 0x45 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfb81, gbc.sp());
        EXPECT(0xc46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0367
        gbc.setState(0x9dbe, 0x84e7, 0xffa0, 0x5d5, 0x8e3b, 0xf4aa, 0x1, 0x0);
        gbc.writeMem(0x9dbe, { 0x2e, 0xe9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x84e7, gbc.sp());
        EXPECT(0x9dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9dbe));
        EXPECT(0xe9, gbc.readMem(0x9dbf));
        // 2E 0368
        gbc.setState(0x706, 0x58cf, 0x43e0, 0xd4f2, 0x4fba, 0xf296, 0x1, 0x1);
        gbc.writeMem(0x706, { 0x2e, 0x5f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x58cf, gbc.sp());
        EXPECT(0x708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0369
        gbc.setState(0xcad0, 0x8f11, 0xd3e0, 0xa9c2, 0x6dde, 0xf3b3, 0x1, 0x1);
        gbc.writeMem(0xcad0, { 0x2e, 0xe });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8f11, gbc.sp());
        EXPECT(0xcad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xcad0));
        EXPECT(0xe, gbc.readMem(0xcad1));
        // 2E 036A
        gbc.setState(0xbf97, 0x2690, 0xbbc0, 0x3006, 0x6f4c, 0x639e, 0x1, 0x1);
        gbc.writeMem(0xbf97, { 0x2e, 0x16 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2690, gbc.sp());
        EXPECT(0xbf99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbf97));
        EXPECT(0x16, gbc.readMem(0xbf98));
        // 2E 036B
        gbc.setState(0x9e9f, 0x36fb, 0x6ea0, 0xa120, 0x7b3c, 0x3ffb, 0x1, 0x1);
        gbc.writeMem(0x9e9f, { 0x2e, 0xa4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x36fb, gbc.sp());
        EXPECT(0x9ea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9e9f));
        EXPECT(0xa4, gbc.readMem(0x9ea0));
        // 2E 036D
        gbc.setState(0x6b6c, 0x559f, 0xf6f0, 0xe6f9, 0xe5ed, 0xef58, 0x1, 0x1);
        gbc.writeMem(0x6b6c, { 0x2e, 0x5c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x559f, gbc.sp());
        EXPECT(0x6b6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 036E
        gbc.setState(0x47d, 0x2a93, 0x9150, 0x5660, 0xd9a4, 0xb2c4, 0x0, 0x0);
        gbc.writeMem(0x47d, { 0x2e, 0xc0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2a93, gbc.sp());
        EXPECT(0x47f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 036F
        gbc.setState(0xe4d1, 0x7688, 0xa730, 0xe581, 0x7a64, 0x9c9b, 0x0, 0x1);
        gbc.writeMem(0xe4d1, { 0x2e, 0xd });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7688, gbc.sp());
        EXPECT(0xe4d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe4d1));
        EXPECT(0xd, gbc.readMem(0xe4d2));
        // 2E 0370
        gbc.setState(0x5050, 0x67ed, 0xff60, 0x834b, 0x62f2, 0x8b13, 0x0, 0x0);
        gbc.writeMem(0x5050, { 0x2e, 0xe0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x67ed, gbc.sp());
        EXPECT(0x5052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0371
        gbc.setState(0x51f2, 0x8e79, 0xdd40, 0x40e, 0x53eb, 0xc49d, 0x1, 0x0);
        gbc.writeMem(0x51f2, { 0x2e, 0x4a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8e79, gbc.sp());
        EXPECT(0x51f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0372
        gbc.setState(0x1115, 0x1c9f, 0xf510, 0xfd6d, 0xc52b, 0x32af, 0x1, 0x0);
        gbc.writeMem(0x1115, { 0x2e, 0x9a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1c9f, gbc.sp());
        EXPECT(0x1117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0373
        gbc.setState(0xca4c, 0x94b1, 0x2a50, 0xdd7c, 0xb273, 0xd98c, 0x0, 0x1);
        gbc.writeMem(0xca4c, { 0x2e, 0x17 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x94b1, gbc.sp());
        EXPECT(0xca4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xca4c));
        EXPECT(0x17, gbc.readMem(0xca4d));
        // 2E 0374
        gbc.setState(0x760d, 0xc230, 0xe8d0, 0x332f, 0x1809, 0x59d9, 0x0, 0x1);
        gbc.writeMem(0x760d, { 0x2e, 0xe0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc230, gbc.sp());
        EXPECT(0x760f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0375
        gbc.setState(0xdfdb, 0xdc1f, 0x7d0, 0xc782, 0x4858, 0xc3b3, 0x1, 0x1);
        gbc.writeMem(0xdfdb, { 0x2e, 0xbd });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xdc1f, gbc.sp());
        EXPECT(0xdfdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xdfdb));
        EXPECT(0xbd, gbc.readMem(0xdfdc));
        // 2E 0376
        gbc.setState(0xe1ff, 0x40f2, 0x4ea0, 0x17cf, 0x80d0, 0x4262, 0x1, 0x0);
        gbc.writeMem(0xe1ff, { 0x2e, 0x5e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x40f2, gbc.sp());
        EXPECT(0xe201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe1ff));
        EXPECT(0x5e, gbc.readMem(0xe200));
        // 2E 0377
        gbc.setState(0xb5f4, 0xf1a9, 0x9ad0, 0x16c0, 0x70e, 0x314a, 0x1, 0x1);
        gbc.writeMem(0xb5f4, { 0x2e, 0x61 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf1a9, gbc.sp());
        EXPECT(0xb5f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb5f4));
        EXPECT(0x61, gbc.readMem(0xb5f5));
        // 2E 0378
        gbc.setState(0x7bc1, 0xa4c7, 0x60f0, 0x22a2, 0x41e, 0x5fa4, 0x1, 0x0);
        gbc.writeMem(0x7bc1, { 0x2e, 0x49 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa4c7, gbc.sp());
        EXPECT(0x7bc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0379
        gbc.setState(0x2b1d, 0xaabb, 0x7980, 0x5eaf, 0x563a, 0xd121, 0x0, 0x0);
        gbc.writeMem(0x2b1d, { 0x2e, 0x11 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xaabb, gbc.sp());
        EXPECT(0x2b1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 037A
        gbc.setState(0xd422, 0xbf10, 0x1730, 0x6cf2, 0x120, 0x2cc1, 0x0, 0x0);
        gbc.writeMem(0xd422, { 0x2e, 0x1f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbf10, gbc.sp());
        EXPECT(0xd424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd422));
        EXPECT(0x1f, gbc.readMem(0xd423));
        // 2E 037B
        gbc.setState(0xc68e, 0xe503, 0x8780, 0x8a9b, 0x2413, 0x38a0, 0x0, 0x1);
        gbc.writeMem(0xc68e, { 0x2e, 0x88 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe503, gbc.sp());
        EXPECT(0xc690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc68e));
        EXPECT(0x88, gbc.readMem(0xc68f));
        // 2E 037C
        gbc.setState(0xa68, 0xed0d, 0x4110, 0xb731, 0x890e, 0xf26c, 0x1, 0x0);
        gbc.writeMem(0xa68, { 0x2e, 0xa3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xed0d, gbc.sp());
        EXPECT(0xa6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 037D
        gbc.setState(0xa5e4, 0x8a22, 0x17f0, 0xa837, 0x2102, 0x2122, 0x1, 0x1);
        gbc.writeMem(0xa5e4, { 0x2e, 0xd5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8a22, gbc.sp());
        EXPECT(0xa5e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa5e4));
        EXPECT(0xd5, gbc.readMem(0xa5e5));
        // 2E 037E
        gbc.setState(0xedf, 0xe5b1, 0x7920, 0x5249, 0x2ff7, 0xea48, 0x1, 0x1);
        gbc.writeMem(0xedf, { 0x2e, 0x78 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe5b1, gbc.sp());
        EXPECT(0xee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 037F
        gbc.setState(0xe169, 0xcbfe, 0x57a0, 0x57cb, 0xf040, 0xbdf, 0x0, 0x1);
        gbc.writeMem(0xe169, { 0x2e, 0x46 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xcbfe, gbc.sp());
        EXPECT(0xe16b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe169));
        EXPECT(0x46, gbc.readMem(0xe16a));
        // 2E 0380
        gbc.setState(0x43ed, 0xd2f7, 0x78f0, 0x4d96, 0xea08, 0x8941, 0x1, 0x1);
        gbc.writeMem(0x43ed, { 0x2e, 0x4f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd2f7, gbc.sp());
        EXPECT(0x43ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0381
        gbc.setState(0xc722, 0x89ef, 0x8bd0, 0xcf67, 0xe7c6, 0x7e85, 0x1, 0x1);
        gbc.writeMem(0xc722, { 0x2e, 0xec });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x89ef, gbc.sp());
        EXPECT(0xc724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc722));
        EXPECT(0xec, gbc.readMem(0xc723));
        // 2E 0382
        gbc.setState(0xe553, 0x380c, 0x2ff0, 0xcd85, 0x4d24, 0xa70f, 0x0, 0x1);
        gbc.writeMem(0xe553, { 0x2e, 0xa4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x380c, gbc.sp());
        EXPECT(0xe555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe553));
        EXPECT(0xa4, gbc.readMem(0xe554));
        // 2E 0383
        gbc.setState(0x4eb8, 0xd197, 0x5180, 0xec, 0xab73, 0x94ca, 0x1, 0x0);
        gbc.writeMem(0x4eb8, { 0x2e, 0x21 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd197, gbc.sp());
        EXPECT(0x4eba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0384
        gbc.setState(0x2f5e, 0x75ba, 0x6070, 0x9f74, 0xf5ef, 0xb66c, 0x1, 0x1);
        gbc.writeMem(0x2f5e, { 0x2e, 0x5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x75ba, gbc.sp());
        EXPECT(0x2f60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0385
        gbc.setState(0x8594, 0x7ab4, 0xee0, 0x68d2, 0x1601, 0x95e8, 0x1, 0x0);
        gbc.writeMem(0x8594, { 0x2e, 0xab });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7ab4, gbc.sp());
        EXPECT(0x8596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8594));
        EXPECT(0xab, gbc.readMem(0x8595));
        // 2E 0386
        gbc.setState(0x80cc, 0x58f, 0xe0e0, 0xbb65, 0x73a1, 0xde4b, 0x0, 0x0);
        gbc.writeMem(0x80cc, { 0x2e, 0xfd });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x58f, gbc.sp());
        EXPECT(0x80ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x80cc));
        EXPECT(0xfd, gbc.readMem(0x80cd));
        // 2E 0387
        gbc.setState(0x137, 0xccf5, 0xbe40, 0x1749, 0x6d25, 0x9f22, 0x1, 0x0);
        gbc.writeMem(0x137, { 0x2e, 0x25 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xccf5, gbc.sp());
        EXPECT(0x139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0388
        gbc.setState(0x35b8, 0xe8cf, 0x5200, 0xbc8e, 0xe533, 0x1944, 0x0, 0x1);
        gbc.writeMem(0x35b8, { 0x2e, 0xbf });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe8cf, gbc.sp());
        EXPECT(0x35ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 038A
        gbc.setState(0x2d52, 0xc9b7, 0x35e0, 0x3713, 0xa0d6, 0xde2c, 0x0, 0x0);
        gbc.writeMem(0x2d52, { 0x2e, 0x2f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc9b7, gbc.sp());
        EXPECT(0x2d54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 038C
        gbc.setState(0x7c5e, 0xa186, 0x29e0, 0x953c, 0xee58, 0xa84f, 0x1, 0x1);
        gbc.writeMem(0x7c5e, { 0x2e, 0xae });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa186, gbc.sp());
        EXPECT(0x7c60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 038D
        gbc.setState(0x364c, 0xce3c, 0x5b00, 0x6fe7, 0xadbb, 0x79d9, 0x1, 0x1);
        gbc.writeMem(0x364c, { 0x2e, 0xc2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xce3c, gbc.sp());
        EXPECT(0x364e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 038E
        gbc.setState(0xb33e, 0xda28, 0xecd0, 0x34c4, 0xe3a5, 0xf83d, 0x1, 0x1);
        gbc.writeMem(0xb33e, { 0x2e, 0x4c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xda28, gbc.sp());
        EXPECT(0xb340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb33e));
        EXPECT(0x4c, gbc.readMem(0xb33f));
        // 2E 038F
        gbc.setState(0xc2dd, 0x5624, 0x11e0, 0xb7cc, 0x6279, 0x4b13, 0x1, 0x0);
        gbc.writeMem(0xc2dd, { 0x2e, 0x92 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5624, gbc.sp());
        EXPECT(0xc2df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc2dd));
        EXPECT(0x92, gbc.readMem(0xc2de));
        // 2E 0390
        gbc.setState(0x4e10, 0x6338, 0x7a90, 0xd87f, 0xb306, 0x3276, 0x1, 0x0);
        gbc.writeMem(0x4e10, { 0x2e, 0xe1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6338, gbc.sp());
        EXPECT(0x4e12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0391
        gbc.setState(0xc6d, 0x2f5a, 0xfe0, 0x9ad4, 0xce18, 0x55e3, 0x0, 0x1);
        gbc.writeMem(0xc6d, { 0x2e, 0xb9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2f5a, gbc.sp());
        EXPECT(0xc6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0392
        gbc.setState(0x99c2, 0x4c9e, 0x98a0, 0x222f, 0x132c, 0xcde4, 0x0, 0x0);
        gbc.writeMem(0x99c2, { 0x2e, 0x1e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4c9e, gbc.sp());
        EXPECT(0x99c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x99c2));
        EXPECT(0x1e, gbc.readMem(0x99c3));
        // 2E 0393
        gbc.setState(0xaa0c, 0x96ce, 0x79a0, 0x8820, 0x9b72, 0xa09d, 0x0, 0x1);
        gbc.writeMem(0xaa0c, { 0x2e, 0xda });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x96ce, gbc.sp());
        EXPECT(0xaa0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xaa0c));
        EXPECT(0xda, gbc.readMem(0xaa0d));
        // 2E 0394
        gbc.setState(0x7ba0, 0xabbc, 0xf350, 0x4276, 0xd41, 0x4ccb, 0x1, 0x1);
        gbc.writeMem(0x7ba0, { 0x2e, 0x4c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xabbc, gbc.sp());
        EXPECT(0x7ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 0395
        gbc.setState(0x669e, 0x71f5, 0x3320, 0xa3de, 0x792a, 0xae96, 0x1, 0x1);
        gbc.writeMem(0x669e, { 0x2e, 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x71f5, gbc.sp());
        EXPECT(0x66a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 0396
        gbc.setState(0xbdc7, 0xb676, 0xfa20, 0x6a41, 0x4d36, 0x31f, 0x1, 0x1);
        gbc.writeMem(0xbdc7, { 0x2e, 0xb6 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb676, gbc.sp());
        EXPECT(0xbdc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbdc7));
        EXPECT(0xb6, gbc.readMem(0xbdc8));
        // 2E 0397
        gbc.setState(0xc2e1, 0xf7fe, 0x6f70, 0xd58, 0x35a6, 0x98c8, 0x1, 0x0);
        gbc.writeMem(0xc2e1, { 0x2e, 0xa5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf7fe, gbc.sp());
        EXPECT(0xc2e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc2e1));
        EXPECT(0xa5, gbc.readMem(0xc2e2));
        // 2E 0399
        gbc.setState(0xd988, 0x8ab, 0xd460, 0x1e72, 0x1b6, 0x5d17, 0x0, 0x0);
        gbc.writeMem(0xd988, { 0x2e, 0x8c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8ab, gbc.sp());
        EXPECT(0xd98a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd988));
        EXPECT(0x8c, gbc.readMem(0xd989));
        // 2E 039A
        gbc.setState(0x76f9, 0x93cb, 0x2320, 0x902c, 0x895b, 0x6a74, 0x1, 0x1);
        gbc.writeMem(0x76f9, { 0x2e, 0xe8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x93cb, gbc.sp());
        EXPECT(0x76fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 039B
        gbc.setState(0x1476, 0xe336, 0x1e00, 0x38a0, 0xa2a, 0x84b5, 0x1, 0x0);
        gbc.writeMem(0x1476, { 0x2e, 0x62 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe336, gbc.sp());
        EXPECT(0x1478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 039C
        gbc.setState(0xcca8, 0x5bb3, 0x5390, 0xd2ca, 0x9bc0, 0x7540, 0x1, 0x0);
        gbc.writeMem(0xcca8, { 0x2e, 0xa9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5bb3, gbc.sp());
        EXPECT(0xccaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xcca8));
        EXPECT(0xa9, gbc.readMem(0xcca9));
        // 2E 039D
        gbc.setState(0x2154, 0xd4ae, 0xb6f0, 0xeedb, 0xac73, 0x7303, 0x0, 0x1);
        gbc.writeMem(0x2154, { 0x2e, 0x70 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd4ae, gbc.sp());
        EXPECT(0x2156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 039E
        gbc.setState(0xc728, 0xebdf, 0x1b70, 0xf52a, 0x9c36, 0x4083, 0x0, 0x1);
        gbc.writeMem(0xc728, { 0x2e, 0xbb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xebdf, gbc.sp());
        EXPECT(0xc72a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc728));
        EXPECT(0xbb, gbc.readMem(0xc729));
        // 2E 039F
        gbc.setState(0x5693, 0xff6e, 0x7760, 0x9bf9, 0x2ffe, 0x6ff6, 0x1, 0x0);
        gbc.writeMem(0x5693, { 0x2e, 0xb1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xff6e, gbc.sp());
        EXPECT(0x5695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 03A0
        gbc.setState(0x1348, 0x5b6d, 0xbe60, 0xc668, 0x2921, 0x96af, 0x0, 0x0);
        gbc.writeMem(0x1348, { 0x2e, 0x14 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5b6d, gbc.sp());
        EXPECT(0x134a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 03A1
        gbc.setState(0xbad8, 0xb54, 0xe4e0, 0x1dfe, 0x1dcd, 0x3ce8, 0x0, 0x0);
        gbc.writeMem(0xbad8, { 0x2e, 0xfb });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb54, gbc.sp());
        EXPECT(0xbada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbad8));
        EXPECT(0xfb, gbc.readMem(0xbad9));
        // 2E 03A2
        gbc.setState(0x1a6c, 0xd1e4, 0xb560, 0x2b0, 0x1974, 0xd08e, 0x1, 0x1);
        gbc.writeMem(0x1a6c, { 0x2e, 0xc });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd1e4, gbc.sp());
        EXPECT(0x1a6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 03A3
        gbc.setState(0x4f70, 0xeb33, 0xe010, 0xe6c8, 0xb0df, 0xd6d8, 0x1, 0x1);
        gbc.writeMem(0x4f70, { 0x2e, 0x64 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xeb33, gbc.sp());
        EXPECT(0x4f72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 03A4
        gbc.setState(0x8c34, 0xdcc2, 0x52b0, 0xa7b, 0x122a, 0x9284, 0x0, 0x0);
        gbc.writeMem(0x8c34, { 0x2e, 0x2b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xdcc2, gbc.sp());
        EXPECT(0x8c36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8c34));
        EXPECT(0x2b, gbc.readMem(0x8c35));
        // 2E 03A5
        gbc.setState(0x7f54, 0x22b2, 0x91f0, 0x5a49, 0xa05b, 0x7d90, 0x0, 0x1);
        gbc.writeMem(0x7f54, { 0x2e, 0xe6 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x22b2, gbc.sp());
        EXPECT(0x7f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 03A6
        gbc.setState(0x96ea, 0x4fba, 0x6ce0, 0x863e, 0x68af, 0xfdbf, 0x1, 0x0);
        gbc.writeMem(0x96ea, { 0x2e, 0xa7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4fba, gbc.sp());
        EXPECT(0x96ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x96ea));
        EXPECT(0xa7, gbc.readMem(0x96eb));
        // 2E 03A7
        gbc.setState(0x4c4d, 0x5e6e, 0x9e10, 0x8311, 0x1c30, 0x5c67, 0x1, 0x0);
        gbc.writeMem(0x4c4d, { 0x2e, 0xcc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5e6e, gbc.sp());
        EXPECT(0x4c4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 03A8
        gbc.setState(0x936f, 0xf5d2, 0x9f50, 0x18f0, 0xce10, 0x2b9, 0x0, 0x0);
        gbc.writeMem(0x936f, { 0x2e, 0xae });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf5d2, gbc.sp());
        EXPECT(0x9371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x936f));
        EXPECT(0xae, gbc.readMem(0x9370));
        // 2E 03A9
        gbc.setState(0x17b4, 0xd33d, 0x510, 0xd05d, 0x72bc, 0x97f2, 0x0, 0x0);
        gbc.writeMem(0x17b4, { 0x2e, 0x28 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd33d, gbc.sp());
        EXPECT(0x17b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 03AA
        gbc.setState(0x680f, 0x58d2, 0xb190, 0xe18b, 0xad4d, 0x4933, 0x1, 0x0);
        gbc.writeMem(0x680f, { 0x2e, 0x6f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x58d2, gbc.sp());
        EXPECT(0x6811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 03AB
        gbc.setState(0xbebc, 0x3588, 0x46c0, 0xcfdf, 0xd497, 0x3a82, 0x1, 0x0);
        gbc.writeMem(0xbebc, { 0x2e, 0x54 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3588, gbc.sp());
        EXPECT(0xbebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbebc));
        EXPECT(0x54, gbc.readMem(0xbebd));
        // 2E 03AC
        gbc.setState(0x26e6, 0x8669, 0x9ab0, 0xe383, 0xf5ce, 0xd26c, 0x0, 0x1);
        gbc.writeMem(0x26e6, { 0x2e, 0xb1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8669, gbc.sp());
        EXPECT(0x26e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 03AD
        gbc.setState(0xadb4, 0xb9b8, 0xe390, 0xeee9, 0x6f8b, 0x1d7b, 0x1, 0x1);
        gbc.writeMem(0xadb4, { 0x2e, 0xdb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb9b8, gbc.sp());
        EXPECT(0xadb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xadb4));
        EXPECT(0xdb, gbc.readMem(0xadb5));
        // 2E 03AF
        gbc.setState(0x4c9b, 0x864e, 0x1810, 0x9cc7, 0x3c3a, 0x25f0, 0x1, 0x1);
        gbc.writeMem(0x4c9b, { 0x2e, 0x89 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x864e, gbc.sp());
        EXPECT(0x4c9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 03B0
        gbc.setState(0xdd7f, 0xc2c9, 0xa4b0, 0xca82, 0x5c09, 0x6b25, 0x1, 0x0);
        gbc.writeMem(0xdd7f, { 0x2e, 0xde });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc2c9, gbc.sp());
        EXPECT(0xdd81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xdd7f));
        EXPECT(0xde, gbc.readMem(0xdd80));
        // 2E 03B2
        gbc.setState(0xe66, 0xd650, 0xb0f0, 0x255e, 0x8e22, 0xa9b1, 0x0, 0x0);
        gbc.writeMem(0xe66, { 0x2e, 0x89 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd650, gbc.sp());
        EXPECT(0xe68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 03B3
        gbc.setState(0x9ffd, 0xb9fb, 0xaea0, 0x4998, 0xc5ef, 0x9a1e, 0x0, 0x1);
        gbc.writeMem(0x9ffd, { 0x2e, 0xcd });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb9fb, gbc.sp());
        EXPECT(0x9fff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9ffd));
        EXPECT(0xcd, gbc.readMem(0x9ffe));
        // 2E 03B4
        gbc.setState(0xecb7, 0xb64c, 0x7d50, 0x4f60, 0xa894, 0xe722, 0x1, 0x0);
        gbc.writeMem(0xecb7, { 0x2e, 0xbd });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb64c, gbc.sp());
        EXPECT(0xecb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xecb7));
        EXPECT(0xbd, gbc.readMem(0xecb8));
        // 2E 03B5
        gbc.setState(0x7679, 0x6850, 0x1e80, 0x862e, 0xb7df, 0xc7ed, 0x0, 0x1);
        gbc.writeMem(0x7679, { 0x2e, 0x81 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6850, gbc.sp());
        EXPECT(0x767b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 03B7
        gbc.setState(0x5e09, 0x12dc, 0x86d0, 0x1cef, 0x4650, 0x903b, 0x1, 0x0);
        gbc.writeMem(0x5e09, { 0x2e, 0x3d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x12dc, gbc.sp());
        EXPECT(0x5e0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 03B8
        gbc.setState(0x42b2, 0x2bc1, 0xc330, 0x61b6, 0xf062, 0xa54a, 0x0, 0x1);
        gbc.writeMem(0x42b2, { 0x2e, 0xf0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2bc1, gbc.sp());
        EXPECT(0x42b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 03B9
        gbc.setState(0x5f90, 0xd614, 0x4e60, 0x7db2, 0xf9a5, 0x8f06, 0x0, 0x0);
        gbc.writeMem(0x5f90, { 0x2e, 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd614, gbc.sp());
        EXPECT(0x5f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 03BA
        gbc.setState(0xcf4a, 0x365, 0x400, 0xe67d, 0xfac4, 0x10f3, 0x0, 0x1);
        gbc.writeMem(0xcf4a, { 0x2e, 0xd8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x365, gbc.sp());
        EXPECT(0xcf4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xcf4a));
        EXPECT(0xd8, gbc.readMem(0xcf4b));
        // 2E 03BB
        gbc.setState(0x516e, 0x9b57, 0x34f0, 0xe9c9, 0xd677, 0xc41a, 0x1, 0x0);
        gbc.writeMem(0x516e, { 0x2e, 0x12 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9b57, gbc.sp());
        EXPECT(0x5170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 03BD
        gbc.setState(0x546f, 0x86a3, 0xc0, 0xfd79, 0x91e4, 0xc49c, 0x0, 0x1);
        gbc.writeMem(0x546f, { 0x2e, 0x8f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x86a3, gbc.sp());
        EXPECT(0x5471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 03BE
        gbc.setState(0xe3b6, 0x4a23, 0xbe60, 0x3714, 0x7931, 0xb8b2, 0x1, 0x1);
        gbc.writeMem(0xe3b6, { 0x2e, 0x78 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4a23, gbc.sp());
        EXPECT(0xe3b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe3b6));
        EXPECT(0x78, gbc.readMem(0xe3b7));
        // 2E 03BF
        gbc.setState(0x174a, 0x99e1, 0xdf60, 0xf62d, 0x356e, 0x3a3b, 0x1, 0x1);
        gbc.writeMem(0x174a, { 0x2e, 0xed });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x99e1, gbc.sp());
        EXPECT(0x174c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 03C0
        gbc.setState(0x1d8a, 0x4ad1, 0xa7e0, 0xed6, 0xf5a6, 0x37e0, 0x1, 0x0);
        gbc.writeMem(0x1d8a, { 0x2e, 0x3 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4ad1, gbc.sp());
        EXPECT(0x1d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 03C1
        gbc.setState(0x5ff4, 0x3dd2, 0xaa80, 0xdf3e, 0xf29c, 0xf0fa, 0x1, 0x1);
        gbc.writeMem(0x5ff4, { 0x2e, 0x71 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3dd2, gbc.sp());
        EXPECT(0x5ff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 03C2
        gbc.setState(0x502d, 0x3f87, 0xd3a0, 0xeeec, 0xa507, 0x5b2, 0x1, 0x1);
        gbc.writeMem(0x502d, { 0x2e, 0xc9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3f87, gbc.sp());
        EXPECT(0x502f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 03C3
        gbc.setState(0x14b9, 0x73c8, 0x180, 0x33ba, 0x3795, 0xb4c4, 0x1, 0x0);
        gbc.writeMem(0x14b9, { 0x2e, 0xb1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x73c8, gbc.sp());
        EXPECT(0x14bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 03C5
        gbc.setState(0x8bb5, 0xc641, 0x8020, 0x988b, 0xd17d, 0x49b4, 0x0, 0x0);
        gbc.writeMem(0x8bb5, { 0x2e, 0x65 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc641, gbc.sp());
        EXPECT(0x8bb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8bb5));
        EXPECT(0x65, gbc.readMem(0x8bb6));
        // 2E 03C6
        gbc.setState(0x2c5d, 0x62e, 0x6e60, 0xaaa2, 0x810f, 0x3f7, 0x1, 0x1);
        gbc.writeMem(0x2c5d, { 0x2e, 0x1d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x62e, gbc.sp());
        EXPECT(0x2c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 03C7
        gbc.setState(0x97c0, 0xa8de, 0x81e0, 0xcaeb, 0x2044, 0x526f, 0x0, 0x1);
        gbc.writeMem(0x97c0, { 0x2e, 0xaf });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa8de, gbc.sp());
        EXPECT(0x97c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x97c0));
        EXPECT(0xaf, gbc.readMem(0x97c1));
        // 2E 03C8
        gbc.setState(0x52f, 0xf02d, 0xd7e0, 0xac0f, 0x1de1, 0x8f41, 0x0, 0x1);
        gbc.writeMem(0x52f, { 0x2e, 0x5d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf02d, gbc.sp());
        EXPECT(0x531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 03C9
        gbc.setState(0x59eb, 0x8e21, 0x6bd0, 0xb31c, 0x7e9b, 0xa8e4, 0x0, 0x0);
        gbc.writeMem(0x59eb, { 0x2e, 0x7a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8e21, gbc.sp());
        EXPECT(0x59ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 03CA
        gbc.setState(0xbd5d, 0xadac, 0x6610, 0xdbb7, 0xe344, 0x9bfe, 0x1, 0x1);
        gbc.writeMem(0xbd5d, { 0x2e, 0xaf });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xadac, gbc.sp());
        EXPECT(0xbd5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbd5d));
        EXPECT(0xaf, gbc.readMem(0xbd5e));
        // 2E 03CC
        gbc.setState(0x388e, 0xd4fe, 0x4700, 0xb593, 0x1e27, 0x29e1, 0x0, 0x0);
        gbc.writeMem(0x388e, { 0x2e, 0x1f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd4fe, gbc.sp());
        EXPECT(0x3890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 03CD
        gbc.setState(0xae48, 0x9013, 0x5360, 0x9473, 0xab25, 0xe6bd, 0x0, 0x1);
        gbc.writeMem(0xae48, { 0x2e, 0xd8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9013, gbc.sp());
        EXPECT(0xae4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xae48));
        EXPECT(0xd8, gbc.readMem(0xae49));
        // 2E 03CE
        gbc.setState(0xc293, 0xcff4, 0x6d40, 0x9a35, 0x9396, 0x3c1b, 0x0, 0x0);
        gbc.writeMem(0xc293, { 0x2e, 0xf0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xcff4, gbc.sp());
        EXPECT(0xc295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc293));
        EXPECT(0xf0, gbc.readMem(0xc294));
        // 2E 03CF
        gbc.setState(0xe6cd, 0x93d7, 0xa0d0, 0xc1c2, 0x569e, 0xdafa, 0x0, 0x1);
        gbc.writeMem(0xe6cd, { 0x2e, 0xf0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x93d7, gbc.sp());
        EXPECT(0xe6cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe6cd));
        EXPECT(0xf0, gbc.readMem(0xe6ce));
        // 2E 03D0
        gbc.setState(0x9317, 0x158f, 0x5260, 0xe803, 0x5adb, 0x94bd, 0x1, 0x1);
        gbc.writeMem(0x9317, { 0x2e, 0x42 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x158f, gbc.sp());
        EXPECT(0x9319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9317));
        EXPECT(0x42, gbc.readMem(0x9318));
        // 2E 03D1
        gbc.setState(0xea31, 0x7cd7, 0xea50, 0xeaf, 0x8659, 0x4f92, 0x1, 0x0);
        gbc.writeMem(0xea31, { 0x2e, 0x6a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7cd7, gbc.sp());
        EXPECT(0xea33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xea31));
        EXPECT(0x6a, gbc.readMem(0xea32));
        // 2E 03D2
        gbc.setState(0x1664, 0xe32a, 0x5f00, 0xcdd3, 0xd3ea, 0xdd35, 0x1, 0x1);
        gbc.writeMem(0x1664, { 0x2e, 0xa });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe32a, gbc.sp());
        EXPECT(0x1666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 03D3
        gbc.setState(0xc1bd, 0x5341, 0x9d80, 0xa443, 0x34ec, 0x1b0, 0x1, 0x1);
        gbc.writeMem(0xc1bd, { 0x2e, 0x95 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5341, gbc.sp());
        EXPECT(0xc1bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc1bd));
        EXPECT(0x95, gbc.readMem(0xc1be));
        // 2E 03D4
        gbc.setState(0xa459, 0x4296, 0x4f50, 0x9e33, 0x55b3, 0x6a70, 0x1, 0x1);
        gbc.writeMem(0xa459, { 0x2e, 0x54 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4296, gbc.sp());
        EXPECT(0xa45b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa459));
        EXPECT(0x54, gbc.readMem(0xa45a));
        // 2E 03D5
        gbc.setState(0x96b7, 0x3767, 0x7240, 0xc097, 0x3298, 0x6d3f, 0x1, 0x0);
        gbc.writeMem(0x96b7, { 0x2e, 0x64 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3767, gbc.sp());
        EXPECT(0x96b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x96b7));
        EXPECT(0x64, gbc.readMem(0x96b8));
        // 2E 03D6
        gbc.setState(0x9c57, 0x9598, 0xfac0, 0xb501, 0x5565, 0x4c1b, 0x0, 0x0);
        gbc.writeMem(0x9c57, { 0x2e, 0x7b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9598, gbc.sp());
        EXPECT(0x9c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9c57));
        EXPECT(0x7b, gbc.readMem(0x9c58));
        // 2E 03D7
        gbc.setState(0x3353, 0xc44a, 0x4a60, 0x2e59, 0xbfc4, 0x8c33, 0x1, 0x1);
        gbc.writeMem(0x3353, { 0x2e, 0xbd });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc44a, gbc.sp());
        EXPECT(0x3355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 03D8
        gbc.setState(0xdcc0, 0x8d2f, 0x6730, 0x31d8, 0xafb7, 0x4d22, 0x0, 0x1);
        gbc.writeMem(0xdcc0, { 0x2e, 0x18 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8d2f, gbc.sp());
        EXPECT(0xdcc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xdcc0));
        EXPECT(0x18, gbc.readMem(0xdcc1));
        // 2E 03D9
        gbc.setState(0xd867, 0x922c, 0x6390, 0x37a2, 0xbe14, 0x5ea4, 0x0, 0x1);
        gbc.writeMem(0xd867, { 0x2e, 0xfd });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x922c, gbc.sp());
        EXPECT(0xd869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd867));
        EXPECT(0xfd, gbc.readMem(0xd868));
        // 2E 03DA
        gbc.setState(0xaee4, 0x9f33, 0xa9f0, 0xf2e9, 0x9dd7, 0x245a, 0x0, 0x0);
        gbc.writeMem(0xaee4, { 0x2e, 0xda });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9f33, gbc.sp());
        EXPECT(0xaee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xaee4));
        EXPECT(0xda, gbc.readMem(0xaee5));
        // 2E 03DB
        gbc.setState(0x7c5e, 0xe18, 0x8c20, 0xce01, 0xcf18, 0x56c2, 0x0, 0x0);
        gbc.writeMem(0x7c5e, { 0x2e, 0xae });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe18, gbc.sp());
        EXPECT(0x7c60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2E 03DC
        gbc.setState(0xbc07, 0xdf25, 0xfc60, 0x22da, 0x7a35, 0xdbd5, 0x1, 0x1);
        gbc.writeMem(0xbc07, { 0x2e, 0x6e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdf25, gbc.sp());
        EXPECT(0xbc09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbc07));
        EXPECT(0x6e, gbc.readMem(0xbc08));
        // 2E 03DD
        gbc.setState(0xe69f, 0xc463, 0xa200, 0xcdae, 0x57c9, 0x30ce, 0x0, 0x0);
        gbc.writeMem(0xe69f, { 0x2e, 0xd7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc463, gbc.sp());
        EXPECT(0xe6a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe69f));
        EXPECT(0xd7, gbc.readMem(0xe6a0));
        // 2E 03DE
        gbc.setState(0xed36, 0xd6c0, 0x2c60, 0x2adb, 0x2d1d, 0x9c7a, 0x1, 0x0);
        gbc.writeMem(0xed36, { 0x2e, 0x9b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd6c0, gbc.sp());
        EXPECT(0xed38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xed36));
        EXPECT(0x9b, gbc.readMem(0xed37));
        // 2E 03DF
        gbc.setState(0x1b5e, 0x9abe, 0x6cd0, 0x9135, 0x7f5f, 0x6142, 0x0, 0x0);
        gbc.writeMem(0x1b5e, { 0x2e, 0xf1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9abe, gbc.sp());
        EXPECT(0x1b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 03E0
        gbc.setState(0xe93a, 0xa269, 0x2620, 0xe980, 0x26ca, 0x5d1c, 0x1, 0x1);
        gbc.writeMem(0xe93a, { 0x2e, 0xf8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa269, gbc.sp());
        EXPECT(0xe93c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe93a));
        EXPECT(0xf8, gbc.readMem(0xe93b));
        // 2E 03E1
        gbc.setState(0x19a2, 0xdcc7, 0x47d0, 0xc958, 0x8ea0, 0x8be5, 0x0, 0x1);
        gbc.writeMem(0x19a2, { 0x2e, 0xd4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdcc7, gbc.sp());
        EXPECT(0x19a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 03E2
        gbc.setState(0x8e38, 0x180a, 0x3970, 0x7918, 0x1812, 0x6959, 0x1, 0x0);
        gbc.writeMem(0x8e38, { 0x2e, 0x95 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x180a, gbc.sp());
        EXPECT(0x8e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8e38));
        EXPECT(0x95, gbc.readMem(0x8e39));
        // 2E 03E3
        gbc.setState(0xd607, 0x9cb5, 0x24c0, 0x51b6, 0xe55f, 0x1c6, 0x1, 0x1);
        gbc.writeMem(0xd607, { 0x2e, 0x8 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9cb5, gbc.sp());
        EXPECT(0xd609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd607));
        EXPECT(0x8, gbc.readMem(0xd608));
        // 2E 03E4
        gbc.setState(0xadbf, 0x7f79, 0x7a70, 0x8cf6, 0x568a, 0xd24b, 0x0, 0x1);
        gbc.writeMem(0xadbf, { 0x2e, 0xca });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7f79, gbc.sp());
        EXPECT(0xadc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xadbf));
        EXPECT(0xca, gbc.readMem(0xadc0));
        // 2E 03E5
        gbc.setState(0x68b0, 0x3822, 0x5970, 0x9934, 0x7333, 0x87e, 0x1, 0x0);
        gbc.writeMem(0x68b0, { 0x2e, 0x79 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3822, gbc.sp());
        EXPECT(0x68b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2E 03E7
        gbc.setState(0x3653, 0xd29a, 0x8060, 0xcfd7, 0x1ff8, 0x7ece, 0x0, 0x0);
        gbc.writeMem(0x3653, { 0x2e, 0xc6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd29a, gbc.sp());
        EXPECT(0x3655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
