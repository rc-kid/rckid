    TEST(gbcemu, opcode_e1) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // E1 0000
        gbc.setState(0xa28e, 0x5f59, 0x9360, 0xc2fd, 0x29bf, 0x4592, 0x1, 0x0);
        gbc.writeMem(0x5f59, { 0x16, 0x8a });
        gbc.writeMem(0xa28e, { 0xe1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5f5b, gbc.sp());
        EXPECT(0xa28f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa28e));
        // E1 0001
        gbc.setState(0x118f, 0x14a2, 0x4610, 0xe818, 0xbe29, 0x1623, 0x1, 0x1);
        gbc.writeMem(0x118f, { 0xe1 });
        gbc.writeMem(0x14a2, { 0x2, 0x57 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x14a4, gbc.sp());
        EXPECT(0x1190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0002
        gbc.setState(0x28ab, 0xc0cd, 0xb980, 0x2625, 0xb9c7, 0xb853, 0x0, 0x1);
        gbc.writeMem(0x28ab, { 0xe1 });
        gbc.writeMem(0xc0cd, { 0x88, 0x52 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc0cf, gbc.sp());
        EXPECT(0x28ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc0cd));
        EXPECT(0x52, gbc.readMem(0xc0ce));
        // E1 0003
        gbc.setState(0x93f1, 0x20fc, 0x9a0, 0xa1dd, 0xa579, 0x48e2, 0x1, 0x0);
        gbc.writeMem(0x20fc, { 0x54, 0x4f });
        gbc.writeMem(0x93f1, { 0xe1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x20fe, gbc.sp());
        EXPECT(0x93f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x93f1));
        // E1 0004
        gbc.setState(0xbcfd, 0x7991, 0x6450, 0x418c, 0x7ae9, 0x1345, 0x0, 0x0);
        gbc.writeMem(0x7991, { 0xc4, 0x53 });
        gbc.writeMem(0xbcfd, { 0xe1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7993, gbc.sp());
        EXPECT(0xbcfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xbcfd));
        // E1 0005
        gbc.setState(0x11e4, 0xd881, 0x7950, 0xc4aa, 0xbd5b, 0xfc6e, 0x1, 0x1);
        gbc.writeMem(0x11e4, { 0xe1 });
        gbc.writeMem(0xd881, { 0x2c, 0xd2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd883, gbc.sp());
        EXPECT(0x11e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd881));
        EXPECT(0xd2, gbc.readMem(0xd882));
        // E1 0006
        gbc.setState(0x5183, 0x2448, 0x8100, 0x4de8, 0x669f, 0xcc12, 0x0, 0x1);
        gbc.writeMem(0x2448, { 0x21, 0xb3 });
        gbc.writeMem(0x5183, { 0xe1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x244a, gbc.sp());
        EXPECT(0x5184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0007
        gbc.setState(0x3a1c, 0xdc69, 0x5640, 0x1550, 0xa9a9, 0xfff9, 0x0, 0x1);
        gbc.writeMem(0x3a1c, { 0xe1 });
        gbc.writeMem(0xdc69, { 0x40, 0x18 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xdc6b, gbc.sp());
        EXPECT(0x3a1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xdc69));
        EXPECT(0x18, gbc.readMem(0xdc6a));
        // E1 0008
        gbc.setState(0x627b, 0x203d, 0x5990, 0xca0d, 0xb32f, 0x37fe, 0x0, 0x0);
        gbc.writeMem(0x203d, { 0xce, 0x5b });
        gbc.writeMem(0x627b, { 0xe1 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x203f, gbc.sp());
        EXPECT(0x627c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0009
        gbc.setState(0xa37f, 0xb75c, 0x36e0, 0x6849, 0xb380, 0x28f1, 0x1, 0x0);
        gbc.writeMem(0xa37f, { 0xe1 });
        gbc.writeMem(0xb75c, { 0xa0, 0xed });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb75e, gbc.sp());
        EXPECT(0xa380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa37f));
        EXPECT(0xa0, gbc.readMem(0xb75c));
        EXPECT(0xed, gbc.readMem(0xb75d));
        // E1 000A
        gbc.setState(0x5cc8, 0x97ae, 0x1a50, 0x33d8, 0xfce8, 0x22df, 0x0, 0x1);
        gbc.writeMem(0x5cc8, { 0xe1 });
        gbc.writeMem(0x97ae, { 0x66, 0x88 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x97b0, gbc.sp());
        EXPECT(0x5cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x97ae));
        EXPECT(0x88, gbc.readMem(0x97af));
        // E1 000C
        gbc.setState(0x96a0, 0xded4, 0xbb70, 0xea29, 0x6cb1, 0xf894, 0x0, 0x0);
        gbc.writeMem(0x96a0, { 0xe1 });
        gbc.writeMem(0xded4, { 0x44, 0xa8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xded6, gbc.sp());
        EXPECT(0x96a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x96a0));
        EXPECT(0x44, gbc.readMem(0xded4));
        EXPECT(0xa8, gbc.readMem(0xded5));
        // E1 000D
        gbc.setState(0x25ea, 0xa4b2, 0xf2b0, 0xc4ca, 0xafbf, 0x5aba, 0x1, 0x0);
        gbc.writeMem(0x25ea, { 0xe1 });
        gbc.writeMem(0xa4b2, { 0x22, 0xc8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa4b4, gbc.sp());
        EXPECT(0x25eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xa4b2));
        EXPECT(0xc8, gbc.readMem(0xa4b3));
        // E1 000F
        gbc.setState(0xe8a6, 0x9736, 0x5500, 0x9835, 0x833c, 0x4e37, 0x0, 0x0);
        gbc.writeMem(0x9736, { 0x0, 0x9a });
        gbc.writeMem(0xe8a6, { 0xe1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9738, gbc.sp());
        EXPECT(0xe8a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9736));
        EXPECT(0x9a, gbc.readMem(0x9737));
        EXPECT(0xe1, gbc.readMem(0xe8a6));
        // E1 0010
        gbc.setState(0x79d7, 0x536a, 0xf2d0, 0x3056, 0x81c4, 0x8c91, 0x1, 0x0);
        gbc.writeMem(0x536a, { 0x13, 0xcb });
        gbc.writeMem(0x79d7, { 0xe1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x536c, gbc.sp());
        EXPECT(0x79d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0011
        gbc.setState(0xbcd2, 0x5453, 0x8090, 0x3d09, 0xe0d7, 0x495d, 0x0, 0x1);
        gbc.writeMem(0x5453, { 0xda, 0xf7 });
        gbc.writeMem(0xbcd2, { 0xe1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5455, gbc.sp());
        EXPECT(0xbcd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xbcd2));
        // E1 0012
        gbc.setState(0xb131, 0x91b3, 0xbb0, 0x9249, 0x128b, 0xb0dd, 0x1, 0x1);
        gbc.writeMem(0x91b3, { 0x44, 0xd8 });
        gbc.writeMem(0xb131, { 0xe1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x91b5, gbc.sp());
        EXPECT(0xb132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x91b3));
        EXPECT(0xd8, gbc.readMem(0x91b4));
        EXPECT(0xe1, gbc.readMem(0xb131));
        // E1 0013
        gbc.setState(0x373e, 0x86f1, 0xabc0, 0x9664, 0x98ee, 0x588f, 0x1, 0x1);
        gbc.writeMem(0x373e, { 0xe1 });
        gbc.writeMem(0x86f1, { 0xb, 0x5d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x86f3, gbc.sp());
        EXPECT(0x373f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x86f1));
        EXPECT(0x5d, gbc.readMem(0x86f2));
        // E1 0014
        gbc.setState(0xd566, 0x1ab7, 0x7d80, 0x263e, 0x904e, 0xe6be, 0x0, 0x1);
        gbc.writeMem(0x1ab7, { 0x3e, 0x18 });
        gbc.writeMem(0xd566, { 0xe1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1ab9, gbc.sp());
        EXPECT(0xd567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd566));
        // E1 0015
        gbc.setState(0x738e, 0xaf7c, 0xf500, 0xa88d, 0x5b0f, 0x5d91, 0x1, 0x0);
        gbc.writeMem(0x738e, { 0xe1 });
        gbc.writeMem(0xaf7c, { 0x5f, 0xd1 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xaf7e, gbc.sp());
        EXPECT(0x738f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xaf7c));
        EXPECT(0xd1, gbc.readMem(0xaf7d));
        // E1 0016
        gbc.setState(0x388d, 0x6057, 0x45a0, 0xcb85, 0x8ee8, 0xd1ca, 0x1, 0x1);
        gbc.writeMem(0x388d, { 0xe1 });
        gbc.writeMem(0x6057, { 0x4a, 0x4c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6059, gbc.sp());
        EXPECT(0x388e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0017
        gbc.setState(0x11a7, 0x1fab, 0xd6c0, 0x8673, 0x35cb, 0x2f20, 0x0, 0x1);
        gbc.writeMem(0x11a7, { 0xe1 });
        gbc.writeMem(0x1fab, { 0xb5, 0xb5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1fad, gbc.sp());
        EXPECT(0x11a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0019
        gbc.setState(0x1b3e, 0x3166, 0xf6d0, 0xb385, 0x8e17, 0x67bf, 0x1, 0x1);
        gbc.writeMem(0x1b3e, { 0xe1 });
        gbc.writeMem(0x3166, { 0x5a, 0x3b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3168, gbc.sp());
        EXPECT(0x1b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 001A
        gbc.setState(0x50b4, 0xfd1e, 0x27c0, 0x2fb5, 0x88b0, 0x9208, 0x0, 0x1);
        gbc.writeMem(0x50b4, { 0xe1 });
        gbc.writeMem(0xfd1e, { 0xca, 0xf2 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfd20, gbc.sp());
        EXPECT(0x50b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xfd1e));
        EXPECT(0xf2, gbc.readMem(0xfd1f));
        // E1 001B
        gbc.setState(0xa7cd, 0xbfc5, 0x5350, 0x70e7, 0x503f, 0xde6d, 0x1, 0x1);
        gbc.writeMem(0xa7cd, { 0xe1 });
        gbc.writeMem(0xbfc5, { 0x46, 0xac });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbfc7, gbc.sp());
        EXPECT(0xa7ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa7cd));
        EXPECT(0x46, gbc.readMem(0xbfc5));
        EXPECT(0xac, gbc.readMem(0xbfc6));
        // E1 001C
        gbc.setState(0x9eeb, 0xf063, 0xc4f0, 0xad38, 0xe048, 0x6a53, 0x1, 0x0);
        gbc.writeMem(0x9eeb, { 0xe1 });
        gbc.writeMem(0xf063, { 0x1e, 0xd7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf065, gbc.sp());
        EXPECT(0x9eec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9eeb));
        EXPECT(0x1e, gbc.readMem(0xf063));
        EXPECT(0xd7, gbc.readMem(0xf064));
        // E1 001D
        gbc.setState(0x8574, 0xabca, 0x5fe0, 0xfda5, 0x7155, 0xdc0, 0x0, 0x1);
        gbc.writeMem(0x8574, { 0xe1 });
        gbc.writeMem(0xabca, { 0x93, 0x1f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xabcc, gbc.sp());
        EXPECT(0x8575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8574));
        EXPECT(0x93, gbc.readMem(0xabca));
        EXPECT(0x1f, gbc.readMem(0xabcb));
        // E1 001E
        gbc.setState(0x7870, 0xf944, 0x6120, 0x564f, 0xb33c, 0x17d5, 0x1, 0x0);
        gbc.writeMem(0x7870, { 0xe1 });
        gbc.writeMem(0xf944, { 0xb5, 0xde });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf946, gbc.sp());
        EXPECT(0x7871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xf944));
        EXPECT(0xde, gbc.readMem(0xf945));
        // E1 001F
        gbc.setState(0x916, 0xa934, 0x8020, 0xaa2, 0x17a, 0x5826, 0x0, 0x1);
        gbc.writeMem(0x916, { 0xe1 });
        gbc.writeMem(0xa934, { 0xb1, 0x71 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa936, gbc.sp());
        EXPECT(0x917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xa934));
        EXPECT(0x71, gbc.readMem(0xa935));
        // E1 0020
        gbc.setState(0xe1ae, 0xf87c, 0xa520, 0xa41d, 0x9b41, 0x3c64, 0x1, 0x0);
        gbc.writeMem(0xe1ae, { 0xe1 });
        gbc.writeMem(0xf87c, { 0x21, 0xa4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf87e, gbc.sp());
        EXPECT(0xe1af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe1ae));
        EXPECT(0x21, gbc.readMem(0xf87c));
        EXPECT(0xa4, gbc.readMem(0xf87d));
        // E1 0021
        gbc.setState(0x98d4, 0x1550, 0xc730, 0x6c14, 0x7b85, 0xbebf, 0x0, 0x1);
        gbc.writeMem(0x1550, { 0x7d, 0x12 });
        gbc.writeMem(0x98d4, { 0xe1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1552, gbc.sp());
        EXPECT(0x98d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x98d4));
        // E1 0022
        gbc.setState(0x9ecf, 0xc034, 0x4a70, 0x9ba9, 0xb6dd, 0x77b, 0x1, 0x0);
        gbc.writeMem(0x9ecf, { 0xe1 });
        gbc.writeMem(0xc034, { 0x7e, 0xa2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc036, gbc.sp());
        EXPECT(0x9ed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9ecf));
        EXPECT(0x7e, gbc.readMem(0xc034));
        EXPECT(0xa2, gbc.readMem(0xc035));
        // E1 0023
        gbc.setState(0xe008, 0x5249, 0xf1b0, 0x6ef0, 0x3d4c, 0x1a44, 0x0, 0x1);
        gbc.writeMem(0x5249, { 0xfc, 0xdb });
        gbc.writeMem(0xe008, { 0xe1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x524b, gbc.sp());
        EXPECT(0xe009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe008));
        // E1 0024
        gbc.setState(0x95e5, 0xcafb, 0xca90, 0xad89, 0xdcea, 0xa80c, 0x1, 0x1);
        gbc.writeMem(0x95e5, { 0xe1 });
        gbc.writeMem(0xcafb, { 0x2e, 0x81 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcafd, gbc.sp());
        EXPECT(0x95e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x95e5));
        EXPECT(0x2e, gbc.readMem(0xcafb));
        EXPECT(0x81, gbc.readMem(0xcafc));
        // E1 0025
        gbc.setState(0x482a, 0xc42, 0xa7f0, 0x2446, 0x976d, 0x17f6, 0x1, 0x0);
        gbc.writeMem(0xc42, { 0xf3, 0x81 });
        gbc.writeMem(0x482a, { 0xe1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc44, gbc.sp());
        EXPECT(0x482b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0026
        gbc.setState(0xc0ca, 0xdeda, 0xa450, 0x608f, 0x53fd, 0xdcaa, 0x1, 0x1);
        gbc.writeMem(0xc0ca, { 0xe1 });
        gbc.writeMem(0xdeda, { 0x43, 0x40 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xdedc, gbc.sp());
        EXPECT(0xc0cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc0ca));
        EXPECT(0x43, gbc.readMem(0xdeda));
        EXPECT(0x40, gbc.readMem(0xdedb));
        // E1 0027
        gbc.setState(0x5ec8, 0xb19, 0x7a30, 0xfd1f, 0x6667, 0x2aa5, 0x1, 0x0);
        gbc.writeMem(0xb19, { 0xaa, 0x5a });
        gbc.writeMem(0x5ec8, { 0xe1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb1b, gbc.sp());
        EXPECT(0x5ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0029
        gbc.setState(0x8339, 0x39ae, 0xd800, 0x43cb, 0xce62, 0x53c9, 0x0, 0x0);
        gbc.writeMem(0x39ae, { 0x32, 0xd4 });
        gbc.writeMem(0x8339, { 0xe1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x39b0, gbc.sp());
        EXPECT(0x833a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8339));
        // E1 002A
        gbc.setState(0x58e8, 0xbe99, 0x9870, 0x9eed, 0xc754, 0x6dc7, 0x1, 0x0);
        gbc.writeMem(0x58e8, { 0xe1 });
        gbc.writeMem(0xbe99, { 0x26, 0xca });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbe9b, gbc.sp());
        EXPECT(0x58e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbe99));
        EXPECT(0xca, gbc.readMem(0xbe9a));
        // E1 002B
        gbc.setState(0x86b9, 0xdbce, 0xcdd0, 0x583b, 0x2c42, 0x5e04, 0x1, 0x1);
        gbc.writeMem(0x86b9, { 0xe1 });
        gbc.writeMem(0xdbce, { 0xe2, 0x8b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdbd0, gbc.sp());
        EXPECT(0x86ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x86b9));
        EXPECT(0xe2, gbc.readMem(0xdbce));
        EXPECT(0x8b, gbc.readMem(0xdbcf));
        // E1 002C
        gbc.setState(0xa99c, 0xa079, 0x85b0, 0x957b, 0xc2bd, 0xba60, 0x0, 0x1);
        gbc.writeMem(0xa079, { 0xdc, 0xa7 });
        gbc.writeMem(0xa99c, { 0xe1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa07b, gbc.sp());
        EXPECT(0xa99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xa079));
        EXPECT(0xa7, gbc.readMem(0xa07a));
        EXPECT(0xe1, gbc.readMem(0xa99c));
        // E1 002D
        gbc.setState(0xaf00, 0x8f97, 0xd7b0, 0x7e7a, 0xd2d3, 0x935f, 0x0, 0x1);
        gbc.writeMem(0x8f97, { 0xc5, 0xba });
        gbc.writeMem(0xaf00, { 0xe1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8f99, gbc.sp());
        EXPECT(0xaf01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8f97));
        EXPECT(0xba, gbc.readMem(0x8f98));
        EXPECT(0xe1, gbc.readMem(0xaf00));
        // E1 002E
        gbc.setState(0x8e87, 0xa60b, 0xcbc0, 0x5d45, 0x7b0e, 0x18ee, 0x0, 0x0);
        gbc.writeMem(0x8e87, { 0xe1 });
        gbc.writeMem(0xa60b, { 0xfc, 0x9a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa60d, gbc.sp());
        EXPECT(0x8e88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8e87));
        EXPECT(0xfc, gbc.readMem(0xa60b));
        EXPECT(0x9a, gbc.readMem(0xa60c));
        // E1 002F
        gbc.setState(0xcdec, 0x227d, 0x7620, 0x1718, 0x9b5d, 0x4ee6, 0x0, 0x1);
        gbc.writeMem(0x227d, { 0x5, 0xd3 });
        gbc.writeMem(0xcdec, { 0xe1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x227f, gbc.sp());
        EXPECT(0xcded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xcdec));
        // E1 0030
        gbc.setState(0x4e6, 0xce06, 0x2d90, 0x3c1a, 0x5d56, 0x9e4, 0x0, 0x1);
        gbc.writeMem(0x4e6, { 0xe1 });
        gbc.writeMem(0xce06, { 0xd0, 0x48 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xce08, gbc.sp());
        EXPECT(0x4e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xce06));
        EXPECT(0x48, gbc.readMem(0xce07));
        // E1 0031
        gbc.setState(0x5c9d, 0xba7a, 0x6df0, 0x3138, 0xbc4c, 0x29b2, 0x1, 0x0);
        gbc.writeMem(0x5c9d, { 0xe1 });
        gbc.writeMem(0xba7a, { 0xe0, 0xdd });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xba7c, gbc.sp());
        EXPECT(0x5c9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xba7a));
        EXPECT(0xdd, gbc.readMem(0xba7b));
        // E1 0032
        gbc.setState(0xc38e, 0x74c, 0x8000, 0x907c, 0x5c4d, 0xbfc3, 0x1, 0x0);
        gbc.writeMem(0x74c, { 0xad, 0x26 });
        gbc.writeMem(0xc38e, { 0xe1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x74e, gbc.sp());
        EXPECT(0xc38f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc38e));
        // E1 0033
        gbc.setState(0x4782, 0x1327, 0x2490, 0xb6ea, 0x2d2c, 0xd8c6, 0x1, 0x0);
        gbc.writeMem(0x1327, { 0x5a, 0x80 });
        gbc.writeMem(0x4782, { 0xe1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1329, gbc.sp());
        EXPECT(0x4783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0034
        gbc.setState(0x7a36, 0xb762, 0x3330, 0xbf75, 0xf34a, 0x2327, 0x1, 0x1);
        gbc.writeMem(0x7a36, { 0xe1 });
        gbc.writeMem(0xb762, { 0x6a, 0xf1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb764, gbc.sp());
        EXPECT(0x7a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb762));
        EXPECT(0xf1, gbc.readMem(0xb763));
        // E1 0035
        gbc.setState(0x3f04, 0x9469, 0x1ef0, 0x1cca, 0xc3f1, 0x2656, 0x0, 0x0);
        gbc.writeMem(0x3f04, { 0xe1 });
        gbc.writeMem(0x9469, { 0xed, 0x6c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x946b, gbc.sp());
        EXPECT(0x3f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x9469));
        EXPECT(0x6c, gbc.readMem(0x946a));
        // E1 0036
        gbc.setState(0xdde1, 0x6e2, 0x3040, 0x1e4f, 0xd7a3, 0x7fd8, 0x1, 0x0);
        gbc.writeMem(0x6e2, { 0x91, 0xd8 });
        gbc.writeMem(0xdde1, { 0xe1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6e4, gbc.sp());
        EXPECT(0xdde2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xdde1));
        // E1 0037
        gbc.setState(0xd2e3, 0x9fc, 0x5100, 0xd612, 0x8aa7, 0xcf12, 0x0, 0x1);
        gbc.writeMem(0x9fc, { 0x38, 0x1d });
        gbc.writeMem(0xd2e3, { 0xe1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9fe, gbc.sp());
        EXPECT(0xd2e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd2e3));
        // E1 0038
        gbc.setState(0x87a3, 0xd0cd, 0xd4c0, 0x999d, 0x382b, 0xdc7d, 0x0, 0x0);
        gbc.writeMem(0x87a3, { 0xe1 });
        gbc.writeMem(0xd0cd, { 0x9e, 0xfe });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd0cf, gbc.sp());
        EXPECT(0x87a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x87a3));
        EXPECT(0x9e, gbc.readMem(0xd0cd));
        EXPECT(0xfe, gbc.readMem(0xd0ce));
        // E1 0039
        gbc.setState(0xb1a9, 0xa816, 0x98c0, 0x8fd3, 0x8d39, 0x806c, 0x0, 0x0);
        gbc.writeMem(0xa816, { 0x5e, 0x72 });
        gbc.writeMem(0xb1a9, { 0xe1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa818, gbc.sp());
        EXPECT(0xb1aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa816));
        EXPECT(0x72, gbc.readMem(0xa817));
        EXPECT(0xe1, gbc.readMem(0xb1a9));
        // E1 003A
        gbc.setState(0x8fc, 0xbc93, 0x42a0, 0xeb1e, 0x5d7f, 0xa382, 0x0, 0x0);
        gbc.writeMem(0x8fc, { 0xe1 });
        gbc.writeMem(0xbc93, { 0x6d, 0xb0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xbc95, gbc.sp());
        EXPECT(0x8fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbc93));
        EXPECT(0xb0, gbc.readMem(0xbc94));
        // E1 003B
        gbc.setState(0x41f8, 0x6864, 0xb6f0, 0x586e, 0xb369, 0xedd5, 0x0, 0x1);
        gbc.writeMem(0x41f8, { 0xe1 });
        gbc.writeMem(0x6864, { 0x17, 0x90 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6866, gbc.sp());
        EXPECT(0x41f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 003C
        gbc.setState(0x52a2, 0x6017, 0xa2b0, 0x82f5, 0xa791, 0x7dac, 0x0, 0x1);
        gbc.writeMem(0x52a2, { 0xe1 });
        gbc.writeMem(0x6017, { 0xec, 0x75 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6019, gbc.sp());
        EXPECT(0x52a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 003D
        gbc.setState(0x84d0, 0x803d, 0x8190, 0xab23, 0x8954, 0x835c, 0x0, 0x0);
        gbc.writeMem(0x803d, { 0x53, 0x7d });
        gbc.writeMem(0x84d0, { 0xe1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x803f, gbc.sp());
        EXPECT(0x84d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x803d));
        EXPECT(0x7d, gbc.readMem(0x803e));
        EXPECT(0xe1, gbc.readMem(0x84d0));
        // E1 0040
        gbc.setState(0x87aa, 0x3f9e, 0x5de0, 0x96af, 0x81b9, 0x75f3, 0x0, 0x0);
        gbc.writeMem(0x3f9e, { 0xe5, 0xd7 });
        gbc.writeMem(0x87aa, { 0xe1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3fa0, gbc.sp());
        EXPECT(0x87ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x87aa));
        // E1 0041
        gbc.setState(0x85fb, 0xadfb, 0x9e20, 0xcba3, 0xb467, 0xe036, 0x0, 0x1);
        gbc.writeMem(0x85fb, { 0xe1 });
        gbc.writeMem(0xadfb, { 0xaf, 0x37 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xadfd, gbc.sp());
        EXPECT(0x85fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x85fb));
        EXPECT(0xaf, gbc.readMem(0xadfb));
        EXPECT(0x37, gbc.readMem(0xadfc));
        // E1 0042
        gbc.setState(0x594f, 0xca60, 0x360, 0x52c, 0xc77, 0x2f25, 0x1, 0x0);
        gbc.writeMem(0x594f, { 0xe1 });
        gbc.writeMem(0xca60, { 0xd7, 0x79 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xca62, gbc.sp());
        EXPECT(0x5950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xca60));
        EXPECT(0x79, gbc.readMem(0xca61));
        // E1 0043
        gbc.setState(0xc741, 0xa008, 0x3290, 0x95a8, 0x9b84, 0xc82b, 0x1, 0x1);
        gbc.writeMem(0xa008, { 0xe0, 0x22 });
        gbc.writeMem(0xc741, { 0xe1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa00a, gbc.sp());
        EXPECT(0xc742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa008));
        EXPECT(0x22, gbc.readMem(0xa009));
        EXPECT(0xe1, gbc.readMem(0xc741));
        // E1 0044
        gbc.setState(0xb4a4, 0x6f4b, 0x5590, 0xe27a, 0x510a, 0x3715, 0x1, 0x0);
        gbc.writeMem(0x6f4b, { 0x1e, 0x72 });
        gbc.writeMem(0xb4a4, { 0xe1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6f4d, gbc.sp());
        EXPECT(0xb4a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb4a4));
        // E1 0045
        gbc.setState(0x6404, 0x49d0, 0xb060, 0xf9a0, 0xf7d0, 0xce4d, 0x0, 0x0);
        gbc.writeMem(0x49d0, { 0x3c, 0xdc });
        gbc.writeMem(0x6404, { 0xe1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x49d2, gbc.sp());
        EXPECT(0x6405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0046
        gbc.setState(0x11bf, 0x4a29, 0x8d70, 0x7ac0, 0xc4d9, 0xc465, 0x1, 0x0);
        gbc.writeMem(0x11bf, { 0xe1 });
        gbc.writeMem(0x4a29, { 0x1b, 0xbc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4a2b, gbc.sp());
        EXPECT(0x11c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0047
        gbc.setState(0x67a0, 0xfe84, 0x80c0, 0x194e, 0x19, 0xbce6, 0x0, 0x0);
        gbc.writeMem(0x67a0, { 0xe1 });
        gbc.writeMem(0xfe84, { 0xa0, 0x3e });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfe86, gbc.sp());
        EXPECT(0x67a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xfe84));
        EXPECT(0x3e, gbc.readMem(0xfe85));
        // E1 0049
        gbc.setState(0xa1af, 0x5150, 0xc490, 0x371f, 0x894f, 0x7fc, 0x1, 0x0);
        gbc.writeMem(0x5150, { 0x3c, 0xb });
        gbc.writeMem(0xa1af, { 0xe1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5152, gbc.sp());
        EXPECT(0xa1b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa1af));
        // E1 004A
        gbc.setState(0xbf84, 0xa40c, 0x92e0, 0xb8bd, 0x43d8, 0x3a24, 0x1, 0x0);
        gbc.writeMem(0xa40c, { 0xa4, 0x6f });
        gbc.writeMem(0xbf84, { 0xe1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa40e, gbc.sp());
        EXPECT(0xbf85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa40c));
        EXPECT(0x6f, gbc.readMem(0xa40d));
        EXPECT(0xe1, gbc.readMem(0xbf84));
        // E1 004B
        gbc.setState(0x45f8, 0x9f14, 0xbb00, 0x3061, 0xd592, 0xc271, 0x1, 0x0);
        gbc.writeMem(0x45f8, { 0xe1 });
        gbc.writeMem(0x9f14, { 0x8b, 0x40 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9f16, gbc.sp());
        EXPECT(0x45f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x9f14));
        EXPECT(0x40, gbc.readMem(0x9f15));
        // E1 004C
        gbc.setState(0xc06b, 0xa8c, 0xa510, 0xca8f, 0x370e, 0x310b, 0x1, 0x1);
        gbc.writeMem(0xa8c, { 0x93, 0x9f });
        gbc.writeMem(0xc06b, { 0xe1 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa8e, gbc.sp());
        EXPECT(0xc06c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc06b));
        // E1 004D
        gbc.setState(0xbf93, 0xb1d, 0xb4a0, 0x98a, 0xa2a8, 0x56b6, 0x0, 0x0);
        gbc.writeMem(0xb1d, { 0xdf, 0x9d });
        gbc.writeMem(0xbf93, { 0xe1 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb1f, gbc.sp());
        EXPECT(0xbf94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xbf93));
        // E1 004E
        gbc.setState(0x29fe, 0xab0b, 0x8a50, 0xb3f0, 0xaff4, 0x5c0b, 0x0, 0x0);
        gbc.writeMem(0x29fe, { 0xe1 });
        gbc.writeMem(0xab0b, { 0x67, 0xf8 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xab0d, gbc.sp());
        EXPECT(0x29ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xab0b));
        EXPECT(0xf8, gbc.readMem(0xab0c));
        // E1 004F
        gbc.setState(0xdc6d, 0xa4b5, 0x8d20, 0x6e3f, 0xb320, 0xbb08, 0x0, 0x1);
        gbc.writeMem(0xa4b5, { 0x38, 0xaf });
        gbc.writeMem(0xdc6d, { 0xe1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa4b7, gbc.sp());
        EXPECT(0xdc6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa4b5));
        EXPECT(0xaf, gbc.readMem(0xa4b6));
        EXPECT(0xe1, gbc.readMem(0xdc6d));
        // E1 0050
        gbc.setState(0x9741, 0x9359, 0x7ca0, 0xf882, 0x3c50, 0xf4a1, 0x0, 0x0);
        gbc.writeMem(0x9359, { 0xeb, 0x6f });
        gbc.writeMem(0x9741, { 0xe1 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x935b, gbc.sp());
        EXPECT(0x9742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x9359));
        EXPECT(0x6f, gbc.readMem(0x935a));
        EXPECT(0xe1, gbc.readMem(0x9741));
        // E1 0051
        gbc.setState(0x444f, 0x7f4d, 0xf2d0, 0x9db9, 0x9a87, 0x7d6c, 0x1, 0x0);
        gbc.writeMem(0x444f, { 0xe1 });
        gbc.writeMem(0x7f4d, { 0x55, 0x97 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7f4f, gbc.sp());
        EXPECT(0x4450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0052
        gbc.setState(0x817b, 0x9cb2, 0x1d60, 0x51f0, 0x4836, 0x8f5d, 0x1, 0x0);
        gbc.writeMem(0x817b, { 0xe1 });
        gbc.writeMem(0x9cb2, { 0x5e, 0x98 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9cb4, gbc.sp());
        EXPECT(0x817c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x817b));
        EXPECT(0x5e, gbc.readMem(0x9cb2));
        EXPECT(0x98, gbc.readMem(0x9cb3));
        // E1 0053
        gbc.setState(0xd03f, 0x9845, 0x8050, 0xad65, 0x518d, 0x6b43, 0x0, 0x0);
        gbc.writeMem(0x9845, { 0xff, 0x90 });
        gbc.writeMem(0xd03f, { 0xe1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9847, gbc.sp());
        EXPECT(0xd040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9845));
        EXPECT(0x90, gbc.readMem(0x9846));
        EXPECT(0xe1, gbc.readMem(0xd03f));
        // E1 0054
        gbc.setState(0x4378, 0x3e67, 0x900, 0xb2d4, 0x39ad, 0xdfb5, 0x1, 0x0);
        gbc.writeMem(0x3e67, { 0x2f, 0x1c });
        gbc.writeMem(0x4378, { 0xe1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3e69, gbc.sp());
        EXPECT(0x4379, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0055
        gbc.setState(0xab0e, 0x84de, 0x6fd0, 0x2bcd, 0xc4, 0x1f7d, 0x0, 0x1);
        gbc.writeMem(0x84de, { 0x95, 0x47 });
        gbc.writeMem(0xab0e, { 0xe1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x84e0, gbc.sp());
        EXPECT(0xab0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x84de));
        EXPECT(0x47, gbc.readMem(0x84df));
        EXPECT(0xe1, gbc.readMem(0xab0e));
        // E1 0056
        gbc.setState(0xada6, 0x4cbc, 0xba00, 0x8372, 0x601c, 0xd224, 0x1, 0x0);
        gbc.writeMem(0x4cbc, { 0xf0, 0xd8 });
        gbc.writeMem(0xada6, { 0xe1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4cbe, gbc.sp());
        EXPECT(0xada7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xada6));
        // E1 0057
        gbc.setState(0xa07b, 0x98c8, 0xf890, 0x1f02, 0x92bc, 0xc847, 0x0, 0x1);
        gbc.writeMem(0x98c8, { 0xf2, 0x80 });
        gbc.writeMem(0xa07b, { 0xe1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x98ca, gbc.sp());
        EXPECT(0xa07c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x98c8));
        EXPECT(0x80, gbc.readMem(0x98c9));
        EXPECT(0xe1, gbc.readMem(0xa07b));
        // E1 0058
        gbc.setState(0x51f3, 0x8b41, 0x68b0, 0x177c, 0x4004, 0xfc34, 0x0, 0x1);
        gbc.writeMem(0x51f3, { 0xe1 });
        gbc.writeMem(0x8b41, { 0x64, 0xc8 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8b43, gbc.sp());
        EXPECT(0x51f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8b41));
        EXPECT(0xc8, gbc.readMem(0x8b42));
        // E1 0059
        gbc.setState(0xbd6b, 0xb761, 0x1a30, 0x633b, 0xdd7b, 0x476f, 0x0, 0x0);
        gbc.writeMem(0xb761, { 0xcb, 0x6a });
        gbc.writeMem(0xbd6b, { 0xe1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb763, gbc.sp());
        EXPECT(0xbd6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb761));
        EXPECT(0x6a, gbc.readMem(0xb762));
        EXPECT(0xe1, gbc.readMem(0xbd6b));
        // E1 005A
        gbc.setState(0x7a46, 0xbb7, 0x7660, 0x9927, 0xcbaa, 0x723c, 0x0, 0x1);
        gbc.writeMem(0xbb7, { 0xe4, 0x7e });
        gbc.writeMem(0x7a46, { 0xe1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbb9, gbc.sp());
        EXPECT(0x7a47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 005B
        gbc.setState(0x5c10, 0xb9c0, 0xf4b0, 0x27ed, 0x383f, 0x5582, 0x0, 0x1);
        gbc.writeMem(0x5c10, { 0xe1 });
        gbc.writeMem(0xb9c0, { 0x8e, 0xf9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb9c2, gbc.sp());
        EXPECT(0x5c11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xb9c0));
        EXPECT(0xf9, gbc.readMem(0xb9c1));
        // E1 005C
        gbc.setState(0x523a, 0xf559, 0x7d0, 0xca5, 0x8b20, 0xbc05, 0x0, 0x1);
        gbc.writeMem(0x523a, { 0xe1 });
        gbc.writeMem(0xf559, { 0x94, 0x91 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf55b, gbc.sp());
        EXPECT(0x523b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xf559));
        EXPECT(0x91, gbc.readMem(0xf55a));
        // E1 005D
        gbc.setState(0x8912, 0xf5ea, 0xb6e0, 0x956a, 0x8fe, 0x952, 0x0, 0x1);
        gbc.writeMem(0x8912, { 0xe1 });
        gbc.writeMem(0xf5ea, { 0x85, 0xf3 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf5ec, gbc.sp());
        EXPECT(0x8913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8912));
        EXPECT(0x85, gbc.readMem(0xf5ea));
        EXPECT(0xf3, gbc.readMem(0xf5eb));
        // E1 005E
        gbc.setState(0xbf61, 0x6608, 0x6120, 0x5435, 0x2549, 0xaf65, 0x0, 0x1);
        gbc.writeMem(0x6608, { 0x49, 0x87 });
        gbc.writeMem(0xbf61, { 0xe1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x660a, gbc.sp());
        EXPECT(0xbf62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xbf61));
        // E1 005F
        gbc.setState(0x2877, 0xf51, 0x7d10, 0xd30e, 0xa829, 0xe13b, 0x1, 0x0);
        gbc.writeMem(0xf51, { 0xc7, 0xf6 });
        gbc.writeMem(0x2877, { 0xe1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf53, gbc.sp());
        EXPECT(0x2878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0060
        gbc.setState(0x26db, 0x3abc, 0x64c0, 0x5ef1, 0x5b1b, 0x575a, 0x0, 0x0);
        gbc.writeMem(0x26db, { 0xe1 });
        gbc.writeMem(0x3abc, { 0xf, 0xfc });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3abe, gbc.sp());
        EXPECT(0x26dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0061
        gbc.setState(0xa60d, 0xdffc, 0x3650, 0xbcb, 0x2bc5, 0xed6b, 0x1, 0x1);
        gbc.writeMem(0xa60d, { 0xe1 });
        gbc.writeMem(0xdffc, { 0xf2, 0x10 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xdffe, gbc.sp());
        EXPECT(0xa60e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa60d));
        EXPECT(0xf2, gbc.readMem(0xdffc));
        EXPECT(0x10, gbc.readMem(0xdffd));
        // E1 0062
        gbc.setState(0x94b2, 0xf168, 0x1660, 0x201a, 0x4ad4, 0x5916, 0x1, 0x1);
        gbc.writeMem(0x94b2, { 0xe1 });
        gbc.writeMem(0xf168, { 0xee, 0xbd });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf16a, gbc.sp());
        EXPECT(0x94b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x94b2));
        EXPECT(0xee, gbc.readMem(0xf168));
        EXPECT(0xbd, gbc.readMem(0xf169));
        // E1 0063
        gbc.setState(0xed66, 0x11e7, 0x9af0, 0xa36e, 0x6fea, 0xaac8, 0x0, 0x0);
        gbc.writeMem(0x11e7, { 0x62, 0xa1 });
        gbc.writeMem(0xed66, { 0xe1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x11e9, gbc.sp());
        EXPECT(0xed67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xed66));
        // E1 0064
        gbc.setState(0x8801, 0x6a18, 0xf090, 0x97b0, 0xef49, 0xca61, 0x1, 0x1);
        gbc.writeMem(0x6a18, { 0xc, 0xd1 });
        gbc.writeMem(0x8801, { 0xe1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6a1a, gbc.sp());
        EXPECT(0x8802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8801));
        // E1 0065
        gbc.setState(0x9be1, 0xb3e5, 0x60c0, 0x63d2, 0x717d, 0x1f29, 0x0, 0x1);
        gbc.writeMem(0x9be1, { 0xe1 });
        gbc.writeMem(0xb3e5, { 0xe6, 0x58 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb3e7, gbc.sp());
        EXPECT(0x9be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9be1));
        EXPECT(0xe6, gbc.readMem(0xb3e5));
        EXPECT(0x58, gbc.readMem(0xb3e6));
        // E1 0066
        gbc.setState(0x7995, 0xab18, 0x78b0, 0x846c, 0xa795, 0x402d, 0x1, 0x0);
        gbc.writeMem(0x7995, { 0xe1 });
        gbc.writeMem(0xab18, { 0x9a, 0x95 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xab1a, gbc.sp());
        EXPECT(0x7996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xab18));
        EXPECT(0x95, gbc.readMem(0xab19));
        // E1 0067
        gbc.setState(0x4ad9, 0x45b6, 0x4820, 0x4c3e, 0xc93, 0xcf6c, 0x0, 0x0);
        gbc.writeMem(0x45b6, { 0x3c, 0x4e });
        gbc.writeMem(0x4ad9, { 0xe1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x45b8, gbc.sp());
        EXPECT(0x4ada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0068
        gbc.setState(0xac50, 0xf420, 0xd0d0, 0xfba9, 0x2525, 0x55c3, 0x1, 0x0);
        gbc.writeMem(0xac50, { 0xe1 });
        gbc.writeMem(0xf420, { 0x31, 0xf5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf422, gbc.sp());
        EXPECT(0xac51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xac50));
        EXPECT(0x31, gbc.readMem(0xf420));
        EXPECT(0xf5, gbc.readMem(0xf421));
        // E1 0069
        gbc.setState(0x4d4e, 0x250c, 0x9cb0, 0xc67d, 0x6cfe, 0xdcc2, 0x1, 0x1);
        gbc.writeMem(0x250c, { 0xc1, 0xf5 });
        gbc.writeMem(0x4d4e, { 0xe1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x250e, gbc.sp());
        EXPECT(0x4d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 006A
        gbc.setState(0xace, 0xa5c5, 0xf3b0, 0x44b1, 0xe1f5, 0xda18, 0x1, 0x1);
        gbc.writeMem(0xace, { 0xe1 });
        gbc.writeMem(0xa5c5, { 0xf7, 0xd8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa5c7, gbc.sp());
        EXPECT(0xacf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xa5c5));
        EXPECT(0xd8, gbc.readMem(0xa5c6));
        // E1 006B
        gbc.setState(0xc62c, 0x3b58, 0x400, 0x337f, 0xa066, 0x2477, 0x1, 0x1);
        gbc.writeMem(0x3b58, { 0x73, 0xc7 });
        gbc.writeMem(0xc62c, { 0xe1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3b5a, gbc.sp());
        EXPECT(0xc62d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc62c));
        // E1 006C
        gbc.setState(0x6977, 0xf035, 0xff40, 0x29f7, 0xcd1f, 0x2f4f, 0x1, 0x1);
        gbc.writeMem(0x6977, { 0xe1 });
        gbc.writeMem(0xf035, { 0xd3, 0xb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf037, gbc.sp());
        EXPECT(0x6978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xf035));
        EXPECT(0xb, gbc.readMem(0xf036));
        // E1 006D
        gbc.setState(0x24c, 0x3342, 0xdb50, 0xe897, 0x6293, 0xa2da, 0x1, 0x0);
        gbc.writeMem(0x24c, { 0xe1 });
        gbc.writeMem(0x3342, { 0x59, 0xc0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3344, gbc.sp());
        EXPECT(0x24d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 006E
        gbc.setState(0x19f6, 0x7e44, 0xdc00, 0x6bfb, 0xefe5, 0x876b, 0x1, 0x1);
        gbc.writeMem(0x19f6, { 0xe1 });
        gbc.writeMem(0x7e44, { 0xb5, 0xe9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7e46, gbc.sp());
        EXPECT(0x19f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 006F
        gbc.setState(0xa70d, 0xa008, 0xb150, 0xf272, 0xb6aa, 0x6b8d, 0x1, 0x1);
        gbc.writeMem(0xa008, { 0xe0, 0x22 });
        gbc.writeMem(0xa70d, { 0xe1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa00a, gbc.sp());
        EXPECT(0xa70e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa008));
        EXPECT(0x22, gbc.readMem(0xa009));
        EXPECT(0xe1, gbc.readMem(0xa70d));
        // E1 0070
        gbc.setState(0x8d67, 0x358, 0x45e0, 0x598a, 0x4e25, 0xbbc0, 0x0, 0x0);
        gbc.writeMem(0x358, { 0x3f, 0x1c });
        gbc.writeMem(0x8d67, { 0xe1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x35a, gbc.sp());
        EXPECT(0x8d68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8d67));
        // E1 0071
        gbc.setState(0xbf9a, 0x2414, 0x3860, 0xd91c, 0x11c8, 0x7a0a, 0x1, 0x0);
        gbc.writeMem(0x2414, { 0xe1, 0x9d });
        gbc.writeMem(0xbf9a, { 0xe1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2416, gbc.sp());
        EXPECT(0xbf9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xbf9a));
        // E1 0072
        gbc.setState(0xc3ec, 0xa8b, 0xe650, 0x4322, 0x5ad, 0xfcf9, 0x1, 0x0);
        gbc.writeMem(0xa8b, { 0xfd, 0x93 });
        gbc.writeMem(0xc3ec, { 0xe1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa8d, gbc.sp());
        EXPECT(0xc3ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc3ec));
        // E1 0073
        gbc.setState(0xec, 0x36b, 0x7ba0, 0xef5a, 0xc7ff, 0x7fcf, 0x1, 0x1);
        gbc.writeMem(0xec, { 0xe1 });
        gbc.writeMem(0x36b, { 0xf6, 0xb3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x36d, gbc.sp());
        EXPECT(0xed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0074
        gbc.setState(0x70b9, 0x8d89, 0x2950, 0x9bd5, 0x7430, 0x34c7, 0x1, 0x0);
        gbc.writeMem(0x70b9, { 0xe1 });
        gbc.writeMem(0x8d89, { 0x99, 0x79 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8d8b, gbc.sp());
        EXPECT(0x70ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8d89));
        EXPECT(0x79, gbc.readMem(0x8d8a));
        // E1 0075
        gbc.setState(0x9def, 0x206, 0x9ea0, 0xaa2, 0x4937, 0xa376, 0x1, 0x1);
        gbc.writeMem(0x206, { 0xfd, 0xcb });
        gbc.writeMem(0x9def, { 0xe1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x208, gbc.sp());
        EXPECT(0x9df0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9def));
        // E1 0076
        gbc.setState(0xc680, 0x8053, 0x620, 0x8b7d, 0x1a90, 0xc500, 0x1, 0x1);
        gbc.writeMem(0x8053, { 0xe3, 0x57 });
        gbc.writeMem(0xc680, { 0xe1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8055, gbc.sp());
        EXPECT(0xc681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x8053));
        EXPECT(0x57, gbc.readMem(0x8054));
        EXPECT(0xe1, gbc.readMem(0xc680));
        // E1 0077
        gbc.setState(0x845, 0x77ef, 0x4e20, 0x98bd, 0xc735, 0xd965, 0x1, 0x0);
        gbc.writeMem(0x845, { 0xe1 });
        gbc.writeMem(0x77ef, { 0xc1, 0x41 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x77f1, gbc.sp());
        EXPECT(0x846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0078
        gbc.setState(0x561b, 0x799d, 0x4df0, 0x732c, 0xb8a0, 0x6a3a, 0x0, 0x1);
        gbc.writeMem(0x561b, { 0xe1 });
        gbc.writeMem(0x799d, { 0x15, 0x7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x799f, gbc.sp());
        EXPECT(0x561c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0079
        gbc.setState(0x4457, 0xb77, 0x3520, 0x598a, 0x3863, 0xf13a, 0x0, 0x1);
        gbc.writeMem(0xb77, { 0x62, 0xcf });
        gbc.writeMem(0x4457, { 0xe1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb79, gbc.sp());
        EXPECT(0x4458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 007A
        gbc.setState(0x2748, 0x2b8b, 0xd710, 0x88a3, 0xc14a, 0xf07c, 0x1, 0x1);
        gbc.writeMem(0x2748, { 0xe1 });
        gbc.writeMem(0x2b8b, { 0xfd, 0x82 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2b8d, gbc.sp());
        EXPECT(0x2749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 007B
        gbc.setState(0x39e1, 0x6efd, 0x5b60, 0x55b8, 0x7167, 0x60af, 0x0, 0x1);
        gbc.writeMem(0x39e1, { 0xe1 });
        gbc.writeMem(0x6efd, { 0xa0, 0xfd });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6eff, gbc.sp());
        EXPECT(0x39e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 007C
        gbc.setState(0x6256, 0x56ac, 0x8f70, 0xca9b, 0xfb13, 0xd700, 0x1, 0x1);
        gbc.writeMem(0x56ac, { 0x47, 0x80 });
        gbc.writeMem(0x6256, { 0xe1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x56ae, gbc.sp());
        EXPECT(0x6257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 007D
        gbc.setState(0x8ae7, 0x5306, 0x1e60, 0xfb3b, 0xcb0c, 0x242e, 0x0, 0x0);
        gbc.writeMem(0x5306, { 0x45, 0x51 });
        gbc.writeMem(0x8ae7, { 0xe1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5308, gbc.sp());
        EXPECT(0x8ae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8ae7));
        // E1 007E
        gbc.setState(0xabbf, 0x793, 0x4ab0, 0xabda, 0x45ea, 0x1453, 0x1, 0x1);
        gbc.writeMem(0x793, { 0x70, 0x8c });
        gbc.writeMem(0xabbf, { 0xe1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x795, gbc.sp());
        EXPECT(0xabc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xabbf));
        // E1 007F
        gbc.setState(0xe259, 0xafc6, 0x9f40, 0x1309, 0xc37b, 0xe3ba, 0x1, 0x0);
        gbc.writeMem(0xafc6, { 0x46, 0xcb });
        gbc.writeMem(0xe259, { 0xe1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xafc8, gbc.sp());
        EXPECT(0xe25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xafc6));
        EXPECT(0xcb, gbc.readMem(0xafc7));
        EXPECT(0xe1, gbc.readMem(0xe259));
        // E1 0080
        gbc.setState(0x3e45, 0xbb1, 0x23b0, 0xf0ce, 0x2d25, 0xd132, 0x0, 0x0);
        gbc.writeMem(0xbb1, { 0x1a, 0xfa });
        gbc.writeMem(0x3e45, { 0xe1 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbb3, gbc.sp());
        EXPECT(0x3e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0081
        gbc.setState(0x89bd, 0x574b, 0xa640, 0xa0ac, 0x97a7, 0x6b40, 0x0, 0x0);
        gbc.writeMem(0x574b, { 0xce, 0x0 });
        gbc.writeMem(0x89bd, { 0xe1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x574d, gbc.sp());
        EXPECT(0x89be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x89bd));
        // E1 0082
        gbc.setState(0x4e90, 0xc9fa, 0xb3b0, 0xb83c, 0xcc66, 0xa691, 0x0, 0x1);
        gbc.writeMem(0x4e90, { 0xe1 });
        gbc.writeMem(0xc9fa, { 0xd, 0x21 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc9fc, gbc.sp());
        EXPECT(0x4e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xc9fa));
        EXPECT(0x21, gbc.readMem(0xc9fb));
        // E1 0083
        gbc.setState(0xd4b8, 0xa255, 0x9100, 0x7bb1, 0x6b6, 0xe35d, 0x1, 0x1);
        gbc.writeMem(0xa255, { 0x92, 0xa6 });
        gbc.writeMem(0xd4b8, { 0xe1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa257, gbc.sp());
        EXPECT(0xd4b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa255));
        EXPECT(0xa6, gbc.readMem(0xa256));
        EXPECT(0xe1, gbc.readMem(0xd4b8));
        // E1 0084
        gbc.setState(0xb4f3, 0x7c8, 0xde0, 0x58cf, 0xeb9e, 0x5af0, 0x1, 0x1);
        gbc.writeMem(0x7c8, { 0x82, 0x57 });
        gbc.writeMem(0xb4f3, { 0xe1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7ca, gbc.sp());
        EXPECT(0xb4f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb4f3));
        // E1 0085
        gbc.setState(0x80e6, 0x63e8, 0x9d50, 0x4102, 0xfba8, 0x2c45, 0x0, 0x0);
        gbc.writeMem(0x63e8, { 0x17, 0x1b });
        gbc.writeMem(0x80e6, { 0xe1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x63ea, gbc.sp());
        EXPECT(0x80e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x80e6));
        // E1 0086
        gbc.setState(0xd8f1, 0xa2cb, 0xaaa0, 0x2f41, 0x827e, 0x5901, 0x1, 0x0);
        gbc.writeMem(0xa2cb, { 0xd9, 0x65 });
        gbc.writeMem(0xd8f1, { 0xe1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa2cd, gbc.sp());
        EXPECT(0xd8f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa2cb));
        EXPECT(0x65, gbc.readMem(0xa2cc));
        EXPECT(0xe1, gbc.readMem(0xd8f1));
        // E1 0087
        gbc.setState(0x124b, 0x2ca7, 0x79f0, 0x2b45, 0xf4a9, 0xda48, 0x0, 0x0);
        gbc.writeMem(0x124b, { 0xe1 });
        gbc.writeMem(0x2ca7, { 0x8b, 0xde });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2ca9, gbc.sp());
        EXPECT(0x124c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0088
        gbc.setState(0xbe1, 0xe51b, 0xaa60, 0x1cfa, 0x1cd, 0x15f8, 0x1, 0x0);
        gbc.writeMem(0xbe1, { 0xe1 });
        gbc.writeMem(0xe51b, { 0x47, 0xe3 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe51d, gbc.sp());
        EXPECT(0xbe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe51b));
        EXPECT(0xe3, gbc.readMem(0xe51c));
        // E1 0089
        gbc.setState(0x988d, 0x79d2, 0x3320, 0x49b5, 0xdb34, 0x8442, 0x0, 0x0);
        gbc.writeMem(0x79d2, { 0xdb, 0xbd });
        gbc.writeMem(0x988d, { 0xe1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x79d4, gbc.sp());
        EXPECT(0x988e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x988d));
        // E1 008A
        gbc.setState(0x59ba, 0xc368, 0x6b0, 0x75f9, 0x431b, 0xc2fa, 0x0, 0x0);
        gbc.writeMem(0x59ba, { 0xe1 });
        gbc.writeMem(0xc368, { 0xea, 0x77 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc36a, gbc.sp());
        EXPECT(0x59bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xc368));
        EXPECT(0x77, gbc.readMem(0xc369));
        // E1 008B
        gbc.setState(0xe996, 0xa7db, 0xe230, 0xda12, 0x4cfe, 0x6464, 0x0, 0x1);
        gbc.writeMem(0xa7db, { 0x31, 0xcd });
        gbc.writeMem(0xe996, { 0xe1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa7dd, gbc.sp());
        EXPECT(0xe997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa7db));
        EXPECT(0xcd, gbc.readMem(0xa7dc));
        EXPECT(0xe1, gbc.readMem(0xe996));
        // E1 008C
        gbc.setState(0x7808, 0x6aeb, 0x7ed0, 0x3d26, 0x665d, 0x1bdf, 0x1, 0x0);
        gbc.writeMem(0x6aeb, { 0x90, 0x1f });
        gbc.writeMem(0x7808, { 0xe1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6aed, gbc.sp());
        EXPECT(0x7809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 008D
        gbc.setState(0x5e9b, 0xf052, 0xc360, 0x684, 0x2bf7, 0x1299, 0x1, 0x1);
        gbc.writeMem(0x5e9b, { 0xe1 });
        gbc.writeMem(0xf052, { 0xf7, 0xb3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf054, gbc.sp());
        EXPECT(0x5e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xf052));
        EXPECT(0xb3, gbc.readMem(0xf053));
        // E1 008E
        gbc.setState(0x15a5, 0xcb21, 0xbf10, 0x37d7, 0x7e, 0x1776, 0x1, 0x0);
        gbc.writeMem(0x15a5, { 0xe1 });
        gbc.writeMem(0xcb21, { 0xa2, 0x7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcb23, gbc.sp());
        EXPECT(0x15a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xcb21));
        EXPECT(0x7, gbc.readMem(0xcb22));
        // E1 008F
        gbc.setState(0x5802, 0x278f, 0x51e0, 0x5181, 0x38e1, 0x7c4c, 0x0, 0x1);
        gbc.writeMem(0x278f, { 0xab, 0xeb });
        gbc.writeMem(0x5802, { 0xe1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2791, gbc.sp());
        EXPECT(0x5803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0090
        gbc.setState(0x4693, 0x79ae, 0x68e0, 0xd9e, 0x8731, 0x29cd, 0x0, 0x0);
        gbc.writeMem(0x4693, { 0xe1 });
        gbc.writeMem(0x79ae, { 0x63, 0x60 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x79b0, gbc.sp());
        EXPECT(0x4694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0091
        gbc.setState(0x8f00, 0xca70, 0x41f0, 0x785, 0x4ba0, 0x7e74, 0x1, 0x0);
        gbc.writeMem(0x8f00, { 0xe1 });
        gbc.writeMem(0xca70, { 0x86, 0x1e });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xca72, gbc.sp());
        EXPECT(0x8f01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8f00));
        EXPECT(0x86, gbc.readMem(0xca70));
        EXPECT(0x1e, gbc.readMem(0xca71));
        // E1 0092
        gbc.setState(0x64a6, 0xeaaf, 0x3b90, 0x7e4a, 0x6a0a, 0x5155, 0x0, 0x0);
        gbc.writeMem(0x64a6, { 0xe1 });
        gbc.writeMem(0xeaaf, { 0x4b, 0x33 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xeab1, gbc.sp());
        EXPECT(0x64a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xeaaf));
        EXPECT(0x33, gbc.readMem(0xeab0));
        // E1 0093
        gbc.setState(0x4b0, 0x3442, 0xb6b0, 0xdddb, 0x87f1, 0x210e, 0x1, 0x1);
        gbc.writeMem(0x4b0, { 0xe1 });
        gbc.writeMem(0x3442, { 0xc5, 0xe3 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3444, gbc.sp());
        EXPECT(0x4b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0094
        gbc.setState(0xa42f, 0x1481, 0xa450, 0xbe3c, 0xb61d, 0x60ac, 0x1, 0x0);
        gbc.writeMem(0x1481, { 0xd1, 0x18 });
        gbc.writeMem(0xa42f, { 0xe1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1483, gbc.sp());
        EXPECT(0xa430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa42f));
        // E1 0095
        gbc.setState(0x8322, 0x8932, 0x7db0, 0x896c, 0x20ae, 0xe9ee, 0x1, 0x1);
        gbc.writeMem(0x8322, { 0xe1 });
        gbc.writeMem(0x8932, { 0x14, 0x30 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8934, gbc.sp());
        EXPECT(0x8323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8322));
        EXPECT(0x14, gbc.readMem(0x8932));
        EXPECT(0x30, gbc.readMem(0x8933));
        // E1 0096
        gbc.setState(0x2177, 0xa5ae, 0x4070, 0xfcc6, 0x6fa7, 0xbebc, 0x0, 0x1);
        gbc.writeMem(0x2177, { 0xe1 });
        gbc.writeMem(0xa5ae, { 0xab, 0xc6 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa5b0, gbc.sp());
        EXPECT(0x2178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xa5ae));
        EXPECT(0xc6, gbc.readMem(0xa5af));
        // E1 0097
        gbc.setState(0x18ff, 0x4b06, 0x8030, 0xcb51, 0xa3e1, 0xfbf7, 0x1, 0x1);
        gbc.writeMem(0x18ff, { 0xe1 });
        gbc.writeMem(0x4b06, { 0xca, 0x43 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4b08, gbc.sp());
        EXPECT(0x1900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0099
        gbc.setState(0xce6, 0x7183, 0xe9f0, 0x2a48, 0x9faf, 0x63a6, 0x1, 0x0);
        gbc.writeMem(0xce6, { 0xe1 });
        gbc.writeMem(0x7183, { 0x36, 0x7e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7185, gbc.sp());
        EXPECT(0xce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 009A
        gbc.setState(0xa55f, 0x1a66, 0x2e80, 0xb275, 0x12, 0x2867, 0x0, 0x0);
        gbc.writeMem(0x1a66, { 0x27, 0x76 });
        gbc.writeMem(0xa55f, { 0xe1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1a68, gbc.sp());
        EXPECT(0xa560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa55f));
        // E1 009B
        gbc.setState(0xf70, 0xcc69, 0x6a60, 0xc1f3, 0x8060, 0xb1d0, 0x0, 0x1);
        gbc.writeMem(0xf70, { 0xe1 });
        gbc.writeMem(0xcc69, { 0xb4, 0x16 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xcc6b, gbc.sp());
        EXPECT(0xf71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xcc69));
        EXPECT(0x16, gbc.readMem(0xcc6a));
        // E1 009C
        gbc.setState(0xd626, 0x1593, 0x43a0, 0xbc90, 0x4770, 0xf6c8, 0x1, 0x0);
        gbc.writeMem(0x1593, { 0xb, 0xfd });
        gbc.writeMem(0xd626, { 0xe1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1595, gbc.sp());
        EXPECT(0xd627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd626));
        // E1 009D
        gbc.setState(0x235e, 0x9126, 0x4e0, 0xab7d, 0x4439, 0xfef8, 0x1, 0x0);
        gbc.writeMem(0x235e, { 0xe1 });
        gbc.writeMem(0x9126, { 0x52, 0x30 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9128, gbc.sp());
        EXPECT(0x235f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9126));
        EXPECT(0x30, gbc.readMem(0x9127));
        // E1 009E
        gbc.setState(0xbf85, 0x5d8d, 0x8a10, 0xb113, 0xe1e2, 0x736f, 0x0, 0x0);
        gbc.writeMem(0x5d8d, { 0x4, 0x8 });
        gbc.writeMem(0xbf85, { 0xe1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5d8f, gbc.sp());
        EXPECT(0xbf86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xbf85));
        // E1 009F
        gbc.setState(0xa40b, 0xc267, 0x55b0, 0xa95e, 0xfbc4, 0xaebd, 0x1, 0x0);
        gbc.writeMem(0xa40b, { 0xe1 });
        gbc.writeMem(0xc267, { 0x45, 0x80 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc269, gbc.sp());
        EXPECT(0xa40c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa40b));
        EXPECT(0x45, gbc.readMem(0xc267));
        EXPECT(0x80, gbc.readMem(0xc268));
        // E1 00A0
        gbc.setState(0xeef8, 0x554, 0x8cd0, 0xf8eb, 0x287e, 0xe8c3, 0x0, 0x1);
        gbc.writeMem(0x554, { 0x11, 0x96 });
        gbc.writeMem(0xeef8, { 0xe1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x556, gbc.sp());
        EXPECT(0xeef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xeef8));
        // E1 00A1
        gbc.setState(0xe79c, 0x5f05, 0xe690, 0xabc2, 0x5149, 0x829a, 0x1, 0x1);
        gbc.writeMem(0x5f05, { 0xba, 0x4c });
        gbc.writeMem(0xe79c, { 0xe1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5f07, gbc.sp());
        EXPECT(0xe79d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe79c));
        // E1 00A2
        gbc.setState(0x5db3, 0x1296, 0x3c00, 0xd11f, 0x7000, 0xac53, 0x1, 0x1);
        gbc.writeMem(0x1296, { 0xb1, 0xd8 });
        gbc.writeMem(0x5db3, { 0xe1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1298, gbc.sp());
        EXPECT(0x5db4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 00A3
        gbc.setState(0x7482, 0x4a29, 0xee60, 0xce83, 0xd920, 0xa8e7, 0x1, 0x1);
        gbc.writeMem(0x4a29, { 0x1b, 0xbc });
        gbc.writeMem(0x7482, { 0xe1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4a2b, gbc.sp());
        EXPECT(0x7483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 00A5
        gbc.setState(0x6aa1, 0xf4ac, 0xdfb0, 0x6c3c, 0xb904, 0xae52, 0x0, 0x0);
        gbc.writeMem(0x6aa1, { 0xe1 });
        gbc.writeMem(0xf4ac, { 0xb1, 0x16 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf4ae, gbc.sp());
        EXPECT(0x6aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xf4ac));
        EXPECT(0x16, gbc.readMem(0xf4ad));
        // E1 00A6
        gbc.setState(0xc788, 0x3c81, 0xb930, 0xaa0d, 0xe0e6, 0x263b, 0x0, 0x0);
        gbc.writeMem(0x3c81, { 0x16, 0x92 });
        gbc.writeMem(0xc788, { 0xe1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3c83, gbc.sp());
        EXPECT(0xc789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc788));
        // E1 00A7
        gbc.setState(0x296b, 0xcf5b, 0x54c0, 0x3ab4, 0x1e4b, 0x549c, 0x1, 0x1);
        gbc.writeMem(0x296b, { 0xe1 });
        gbc.writeMem(0xcf5b, { 0xec, 0xf1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xcf5d, gbc.sp());
        EXPECT(0x296c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xcf5b));
        EXPECT(0xf1, gbc.readMem(0xcf5c));
        // E1 00A8
        gbc.setState(0xe676, 0xbf35, 0xf8c0, 0xa8ca, 0x79f2, 0xce5e, 0x1, 0x1);
        gbc.writeMem(0xbf35, { 0xbb, 0x1 });
        gbc.writeMem(0xe676, { 0xe1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbf37, gbc.sp());
        EXPECT(0xe677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbf35));
        EXPECT(0x1, gbc.readMem(0xbf36));
        EXPECT(0xe1, gbc.readMem(0xe676));
        // E1 00A9
        gbc.setState(0x7df7, 0xdd31, 0xefb0, 0x7d7b, 0x823, 0xc56c, 0x1, 0x1);
        gbc.writeMem(0x7df7, { 0xe1 });
        gbc.writeMem(0xdd31, { 0xb8, 0x80 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xdd33, gbc.sp());
        EXPECT(0x7df8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xdd31));
        EXPECT(0x80, gbc.readMem(0xdd32));
        // E1 00AA
        gbc.setState(0xba76, 0x55f9, 0x6710, 0xc117, 0xa603, 0x6231, 0x1, 0x1);
        gbc.writeMem(0x55f9, { 0x9c, 0xa4 });
        gbc.writeMem(0xba76, { 0xe1 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x55fb, gbc.sp());
        EXPECT(0xba77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xba76));
        // E1 00AB
        gbc.setState(0x3b5a, 0x105a, 0x54f0, 0xcd63, 0xe172, 0x7a0, 0x0, 0x0);
        gbc.writeMem(0x105a, { 0xe6, 0x9a });
        gbc.writeMem(0x3b5a, { 0xe1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x105c, gbc.sp());
        EXPECT(0x3b5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 00AC
        gbc.setState(0x725f, 0x2057, 0xfb20, 0xfa0c, 0x3b2c, 0x2e5, 0x0, 0x0);
        gbc.writeMem(0x2057, { 0x9, 0x12 });
        gbc.writeMem(0x725f, { 0xe1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2059, gbc.sp());
        EXPECT(0x7260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 00AD
        gbc.setState(0x6fcc, 0xba86, 0x6620, 0xa288, 0x75ee, 0xc811, 0x0, 0x1);
        gbc.writeMem(0x6fcc, { 0xe1 });
        gbc.writeMem(0xba86, { 0xf1, 0x8c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xba88, gbc.sp());
        EXPECT(0x6fcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xba86));
        EXPECT(0x8c, gbc.readMem(0xba87));
        // E1 00AE
        gbc.setState(0xa411, 0xa5a2, 0x7170, 0x50b8, 0xd57, 0xbc79, 0x0, 0x1);
        gbc.writeMem(0xa411, { 0xe1 });
        gbc.writeMem(0xa5a2, { 0x42, 0xee });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa5a4, gbc.sp());
        EXPECT(0xa412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa411));
        EXPECT(0x42, gbc.readMem(0xa5a2));
        EXPECT(0xee, gbc.readMem(0xa5a3));
        // E1 00AF
        gbc.setState(0xe17a, 0xf285, 0x8850, 0xc42d, 0xe1cf, 0x2699, 0x1, 0x0);
        gbc.writeMem(0xe17a, { 0xe1 });
        gbc.writeMem(0xf285, { 0x3b, 0xd4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf287, gbc.sp());
        EXPECT(0xe17b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe17a));
        EXPECT(0x3b, gbc.readMem(0xf285));
        EXPECT(0xd4, gbc.readMem(0xf286));
        // E1 00B0
        gbc.setState(0x6892, 0x3c63, 0xc8c0, 0xa5bb, 0x804, 0x8b24, 0x1, 0x1);
        gbc.writeMem(0x3c63, { 0xe0, 0x7d });
        gbc.writeMem(0x6892, { 0xe1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3c65, gbc.sp());
        EXPECT(0x6893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 00B1
        gbc.setState(0xd550, 0x83b, 0x6a40, 0x7dec, 0x16b9, 0x700f, 0x1, 0x0);
        gbc.writeMem(0x83b, { 0xd4, 0x53 });
        gbc.writeMem(0xd550, { 0xe1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x83d, gbc.sp());
        EXPECT(0xd551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd550));
        // E1 00B2
        gbc.setState(0x6b77, 0x64a2, 0x5120, 0x251, 0x8e, 0x95fb, 0x1, 0x1);
        gbc.writeMem(0x64a2, { 0x81, 0xfa });
        gbc.writeMem(0x6b77, { 0xe1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x64a4, gbc.sp());
        EXPECT(0x6b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 00B3
        gbc.setState(0xcd99, 0xeb9f, 0x57c0, 0xee7a, 0xd3e2, 0xcf13, 0x0, 0x0);
        gbc.writeMem(0xcd99, { 0xe1 });
        gbc.writeMem(0xeb9f, { 0x4, 0xcd });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xeba1, gbc.sp());
        EXPECT(0xcd9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xcd99));
        EXPECT(0x4, gbc.readMem(0xeb9f));
        EXPECT(0xcd, gbc.readMem(0xeba0));
        // E1 00B4
        gbc.setState(0x5549, 0x4164, 0xf340, 0x435e, 0xd7c0, 0x950a, 0x0, 0x0);
        gbc.writeMem(0x4164, { 0xef, 0x82 });
        gbc.writeMem(0x5549, { 0xe1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4166, gbc.sp());
        EXPECT(0x554a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 00B5
        gbc.setState(0x199d, 0xa723, 0xd260, 0x1bcb, 0xf937, 0x2dcc, 0x1, 0x0);
        gbc.writeMem(0x199d, { 0xe1 });
        gbc.writeMem(0xa723, { 0xb2, 0xb6 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa725, gbc.sp());
        EXPECT(0x199e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa723));
        EXPECT(0xb6, gbc.readMem(0xa724));
        // E1 00B6
        gbc.setState(0x60c7, 0x7180, 0x9e00, 0x510b, 0xebd4, 0x3de2, 0x1, 0x0);
        gbc.writeMem(0x60c7, { 0xe1 });
        gbc.writeMem(0x7180, { 0xb1, 0x8c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7182, gbc.sp());
        EXPECT(0x60c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 00B7
        gbc.setState(0xed1, 0xdb13, 0x2c50, 0x8651, 0xb554, 0xd16f, 0x1, 0x0);
        gbc.writeMem(0xed1, { 0xe1 });
        gbc.writeMem(0xdb13, { 0xa7, 0x40 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xdb15, gbc.sp());
        EXPECT(0xed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xdb13));
        EXPECT(0x40, gbc.readMem(0xdb14));
        // E1 00B8
        gbc.setState(0xa2b6, 0xf729, 0x7b30, 0xc03a, 0x8ced, 0xa8ac, 0x0, 0x0);
        gbc.writeMem(0xa2b6, { 0xe1 });
        gbc.writeMem(0xf729, { 0xed, 0xb0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf72b, gbc.sp());
        EXPECT(0xa2b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa2b6));
        EXPECT(0xed, gbc.readMem(0xf729));
        EXPECT(0xb0, gbc.readMem(0xf72a));
        // E1 00B9
        gbc.setState(0x53fd, 0x9320, 0x64b0, 0x42f0, 0xf8ec, 0x8a1d, 0x0, 0x0);
        gbc.writeMem(0x53fd, { 0xe1 });
        gbc.writeMem(0x9320, { 0x95, 0xa8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9322, gbc.sp());
        EXPECT(0x53fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9320));
        EXPECT(0xa8, gbc.readMem(0x9321));
        // E1 00BA
        gbc.setState(0x3dcf, 0xfed4, 0xbe0, 0xecb9, 0x5f50, 0x1e33, 0x0, 0x0);
        gbc.writeMem(0x3dcf, { 0xe1 });
        gbc.writeMem(0xfed4, { 0x4a, 0x2b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfed6, gbc.sp());
        EXPECT(0x3dd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xfed4));
        EXPECT(0x2b, gbc.readMem(0xfed5));
        // E1 00BB
        gbc.setState(0x6fe0, 0x8ab2, 0xc3c0, 0x8e6e, 0xfa9a, 0x8e12, 0x0, 0x0);
        gbc.writeMem(0x6fe0, { 0xe1 });
        gbc.writeMem(0x8ab2, { 0x9c, 0x28 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8ab4, gbc.sp());
        EXPECT(0x6fe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8ab2));
        EXPECT(0x28, gbc.readMem(0x8ab3));
        // E1 00BC
        gbc.setState(0x6159, 0x8e6f, 0x7580, 0xad67, 0xa351, 0x51a4, 0x0, 0x1);
        gbc.writeMem(0x6159, { 0xe1 });
        gbc.writeMem(0x8e6f, { 0x2e, 0x44 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8e71, gbc.sp());
        EXPECT(0x615a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8e6f));
        EXPECT(0x44, gbc.readMem(0x8e70));
        // E1 00BD
        gbc.setState(0xafb4, 0x437, 0xa6e0, 0x63ba, 0x4517, 0xbf42, 0x0, 0x1);
        gbc.writeMem(0x437, { 0x5a, 0x3d });
        gbc.writeMem(0xafb4, { 0xe1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x439, gbc.sp());
        EXPECT(0xafb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xafb4));
        // E1 00BE
        gbc.setState(0x385a, 0xfb0f, 0x26d0, 0x91f2, 0xe577, 0x14da, 0x1, 0x0);
        gbc.writeMem(0x385a, { 0xe1 });
        gbc.writeMem(0xfb0f, { 0x35, 0xde });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfb11, gbc.sp());
        EXPECT(0x385b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xfb0f));
        EXPECT(0xde, gbc.readMem(0xfb10));
        // E1 00BF
        gbc.setState(0x8d76, 0xc04e, 0x31e0, 0x1f74, 0x8110, 0xcf82, 0x0, 0x1);
        gbc.writeMem(0x8d76, { 0xe1 });
        gbc.writeMem(0xc04e, { 0xe7, 0x56 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc050, gbc.sp());
        EXPECT(0x8d77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8d76));
        EXPECT(0xe7, gbc.readMem(0xc04e));
        EXPECT(0x56, gbc.readMem(0xc04f));
        // E1 00C0
        gbc.setState(0x5ae4, 0x64f8, 0x3970, 0x823c, 0x1f66, 0xafe8, 0x1, 0x0);
        gbc.writeMem(0x5ae4, { 0xe1 });
        gbc.writeMem(0x64f8, { 0x24, 0x56 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x64fa, gbc.sp());
        EXPECT(0x5ae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 00C1
        gbc.setState(0xb44f, 0xf5e3, 0x9870, 0x68c7, 0xca98, 0xdcd6, 0x1, 0x0);
        gbc.writeMem(0xb44f, { 0xe1 });
        gbc.writeMem(0xf5e3, { 0x19, 0x60 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf5e5, gbc.sp());
        EXPECT(0xb450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb44f));
        EXPECT(0x19, gbc.readMem(0xf5e3));
        EXPECT(0x60, gbc.readMem(0xf5e4));
        // E1 00C2
        gbc.setState(0xd1c0, 0xfde4, 0x7b00, 0xbb28, 0x823f, 0x7c44, 0x0, 0x1);
        gbc.writeMem(0xd1c0, { 0xe1 });
        gbc.writeMem(0xfde4, { 0x22, 0x13 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xfde6, gbc.sp());
        EXPECT(0xd1c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd1c0));
        EXPECT(0x22, gbc.readMem(0xfde4));
        EXPECT(0x13, gbc.readMem(0xfde5));
        // E1 00C3
        gbc.setState(0x1f19, 0x2982, 0xf3d0, 0x8d46, 0x8f1b, 0xf7df, 0x0, 0x0);
        gbc.writeMem(0x1f19, { 0xe1 });
        gbc.writeMem(0x2982, { 0xad, 0x9b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2984, gbc.sp());
        EXPECT(0x1f1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 00C4
        gbc.setState(0x4ab4, 0x74ec, 0x9a70, 0xa66a, 0xa4df, 0x2c2b, 0x1, 0x0);
        gbc.writeMem(0x4ab4, { 0xe1 });
        gbc.writeMem(0x74ec, { 0x1, 0xe5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x74ee, gbc.sp());
        EXPECT(0x4ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 00C5
        gbc.setState(0xb6fd, 0x968e, 0x73e0, 0x9965, 0x495a, 0xe32b, 0x0, 0x1);
        gbc.writeMem(0x968e, { 0x62, 0x2e });
        gbc.writeMem(0xb6fd, { 0xe1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9690, gbc.sp());
        EXPECT(0xb6fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x968e));
        EXPECT(0x2e, gbc.readMem(0x968f));
        EXPECT(0xe1, gbc.readMem(0xb6fd));
        // E1 00C6
        gbc.setState(0x74e3, 0xe245, 0x2820, 0x96ec, 0xd367, 0x8510, 0x0, 0x1);
        gbc.writeMem(0x74e3, { 0xe1 });
        gbc.writeMem(0xe245, { 0x67, 0x4d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe247, gbc.sp());
        EXPECT(0x74e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xe245));
        EXPECT(0x4d, gbc.readMem(0xe246));
        // E1 00C7
        gbc.setState(0x7841, 0x25d7, 0x3c10, 0x6b66, 0x7530, 0x3b89, 0x0, 0x1);
        gbc.writeMem(0x25d7, { 0xd3, 0x8d });
        gbc.writeMem(0x7841, { 0xe1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x25d9, gbc.sp());
        EXPECT(0x7842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 00C8
        gbc.setState(0x7c41, 0x7b2b, 0xb6d0, 0xa759, 0x249d, 0x7f3, 0x0, 0x0);
        gbc.writeMem(0x7b2b, { 0x18, 0xde });
        gbc.writeMem(0x7c41, { 0xe1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7b2d, gbc.sp());
        EXPECT(0x7c42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 00C9
        gbc.setState(0x6cb7, 0x10d9, 0x5580, 0xe640, 0x8a9d, 0x6542, 0x1, 0x0);
        gbc.writeMem(0x10d9, { 0xcc, 0x61 });
        gbc.writeMem(0x6cb7, { 0xe1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x10db, gbc.sp());
        EXPECT(0x6cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 00CA
        gbc.setState(0xeeab, 0x5fc1, 0x8560, 0x35bc, 0x2db0, 0x89a9, 0x0, 0x1);
        gbc.writeMem(0x5fc1, { 0xfa, 0xf2 });
        gbc.writeMem(0xeeab, { 0xe1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5fc3, gbc.sp());
        EXPECT(0xeeac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xeeab));
        // E1 00CB
        gbc.setState(0xe2af, 0x81a4, 0x8610, 0x6152, 0x5958, 0x80d4, 0x0, 0x1);
        gbc.writeMem(0x81a4, { 0xce, 0xad });
        gbc.writeMem(0xe2af, { 0xe1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x81a6, gbc.sp());
        EXPECT(0xe2b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x81a4));
        EXPECT(0xad, gbc.readMem(0x81a5));
        EXPECT(0xe1, gbc.readMem(0xe2af));
        // E1 00CC
        gbc.setState(0x305, 0x46bc, 0x3c90, 0xadae, 0x42d, 0x878f, 0x0, 0x1);
        gbc.writeMem(0x305, { 0xe1 });
        gbc.writeMem(0x46bc, { 0xa8, 0xb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x46be, gbc.sp());
        EXPECT(0x306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 00CD
        gbc.setState(0x8b0d, 0x2083, 0x2840, 0x7965, 0x93c7, 0x9e2a, 0x0, 0x1);
        gbc.writeMem(0x2083, { 0x5e, 0x71 });
        gbc.writeMem(0x8b0d, { 0xe1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2085, gbc.sp());
        EXPECT(0x8b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8b0d));
        // E1 00CF
        gbc.setState(0x5486, 0x5bd, 0xd970, 0x6193, 0x650d, 0xca3a, 0x0, 0x0);
        gbc.writeMem(0x5bd, { 0xe1, 0x10 });
        gbc.writeMem(0x5486, { 0xe1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5bf, gbc.sp());
        EXPECT(0x5487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 00D0
        gbc.setState(0x6aa6, 0x7759, 0x9b20, 0x3217, 0xa7dc, 0xedb5, 0x0, 0x0);
        gbc.writeMem(0x6aa6, { 0xe1 });
        gbc.writeMem(0x7759, { 0x23, 0xa4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x775b, gbc.sp());
        EXPECT(0x6aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 00D1
        gbc.setState(0x8dfb, 0x1c9b, 0x1980, 0x4d90, 0x8da2, 0x2c92, 0x1, 0x0);
        gbc.writeMem(0x1c9b, { 0xd3, 0x85 });
        gbc.writeMem(0x8dfb, { 0xe1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1c9d, gbc.sp());
        EXPECT(0x8dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8dfb));
        // E1 00D2
        gbc.setState(0x351, 0xbaf6, 0x1cf0, 0x9808, 0x1706, 0x9d15, 0x1, 0x0);
        gbc.writeMem(0x351, { 0xe1 });
        gbc.writeMem(0xbaf6, { 0xa6, 0xbf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbaf8, gbc.sp());
        EXPECT(0x352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbaf6));
        EXPECT(0xbf, gbc.readMem(0xbaf7));
        // E1 00D3
        gbc.setState(0x292d, 0x7b3c, 0x6e70, 0xb7b0, 0x5af4, 0xdb87, 0x0, 0x1);
        gbc.writeMem(0x292d, { 0xe1 });
        gbc.writeMem(0x7b3c, { 0x4d, 0xa1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7b3e, gbc.sp());
        EXPECT(0x292e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 00D4
        gbc.setState(0x6171, 0x6749, 0x3210, 0x9c80, 0xf9c0, 0x6cb6, 0x1, 0x1);
        gbc.writeMem(0x6171, { 0xe1 });
        gbc.writeMem(0x6749, { 0x52, 0xc0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x674b, gbc.sp());
        EXPECT(0x6172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 00D5
        gbc.setState(0xa075, 0x1ed5, 0x25f0, 0x3cf2, 0x8e59, 0xcd9a, 0x1, 0x1);
        gbc.writeMem(0x1ed5, { 0xb, 0x16 });
        gbc.writeMem(0xa075, { 0xe1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1ed7, gbc.sp());
        EXPECT(0xa076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa075));
        // E1 00D6
        gbc.setState(0xce8, 0xbef4, 0x36f0, 0x9cf2, 0x51c2, 0x2cab, 0x1, 0x1);
        gbc.writeMem(0xce8, { 0xe1 });
        gbc.writeMem(0xbef4, { 0xb4, 0x3a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbef6, gbc.sp());
        EXPECT(0xce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xbef4));
        EXPECT(0x3a, gbc.readMem(0xbef5));
        // E1 00D7
        gbc.setState(0x62fe, 0xc9fa, 0xab30, 0xd3da, 0x78d, 0xda7d, 0x0, 0x0);
        gbc.writeMem(0x62fe, { 0xe1 });
        gbc.writeMem(0xc9fa, { 0xd, 0x21 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc9fc, gbc.sp());
        EXPECT(0x62ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xc9fa));
        EXPECT(0x21, gbc.readMem(0xc9fb));
        // E1 00D8
        gbc.setState(0x63ec, 0x8800, 0xb8c0, 0x79c, 0xc53a, 0x5af9, 0x1, 0x0);
        gbc.writeMem(0x63ec, { 0xe1 });
        gbc.writeMem(0x8800, { 0xbf, 0xbe });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8802, gbc.sp());
        EXPECT(0x63ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8800));
        EXPECT(0xbe, gbc.readMem(0x8801));
        // E1 00D9
        gbc.setState(0xea24, 0x928a, 0xe080, 0x6692, 0x6eb1, 0x766a, 0x1, 0x0);
        gbc.writeMem(0x928a, { 0x14, 0xeb });
        gbc.writeMem(0xea24, { 0xe1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x928c, gbc.sp());
        EXPECT(0xea25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x928a));
        EXPECT(0xeb, gbc.readMem(0x928b));
        EXPECT(0xe1, gbc.readMem(0xea24));
        // E1 00DA
        gbc.setState(0x2795, 0xf400, 0x4e90, 0xe21a, 0x2620, 0xfbb7, 0x1, 0x1);
        gbc.writeMem(0x2795, { 0xe1 });
        gbc.writeMem(0xf400, { 0x1e, 0x16 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf402, gbc.sp());
        EXPECT(0x2796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xf400));
        EXPECT(0x16, gbc.readMem(0xf401));
        // E1 00DB
        gbc.setState(0xcd50, 0x5882, 0xccd0, 0x5030, 0x3c39, 0x2683, 0x1, 0x0);
        gbc.writeMem(0x5882, { 0x82, 0x9e });
        gbc.writeMem(0xcd50, { 0xe1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5884, gbc.sp());
        EXPECT(0xcd51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xcd50));
        // E1 00DC
        gbc.setState(0xe5e0, 0x9955, 0xe0, 0xd141, 0x8a38, 0x5919, 0x0, 0x0);
        gbc.writeMem(0x9955, { 0x35, 0xb2 });
        gbc.writeMem(0xe5e0, { 0xe1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9957, gbc.sp());
        EXPECT(0xe5e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9955));
        EXPECT(0xb2, gbc.readMem(0x9956));
        EXPECT(0xe1, gbc.readMem(0xe5e0));
        // E1 00DD
        gbc.setState(0x3411, 0xa92c, 0xbd80, 0x8c92, 0xa90c, 0x3c4, 0x1, 0x1);
        gbc.writeMem(0x3411, { 0xe1 });
        gbc.writeMem(0xa92c, { 0xc5, 0x8c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa92e, gbc.sp());
        EXPECT(0x3412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa92c));
        EXPECT(0x8c, gbc.readMem(0xa92d));
        // E1 00DE
        gbc.setState(0xea1c, 0xa863, 0x3930, 0xd1b8, 0x1738, 0xbb92, 0x0, 0x0);
        gbc.writeMem(0xa863, { 0x6f, 0x40 });
        gbc.writeMem(0xea1c, { 0xe1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa865, gbc.sp());
        EXPECT(0xea1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xa863));
        EXPECT(0x40, gbc.readMem(0xa864));
        EXPECT(0xe1, gbc.readMem(0xea1c));
        // E1 00DF
        gbc.setState(0xe4d, 0x5216, 0x8b60, 0xf9ca, 0xde14, 0xb1a2, 0x0, 0x1);
        gbc.writeMem(0xe4d, { 0xe1 });
        gbc.writeMem(0x5216, { 0x86, 0x28 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5218, gbc.sp());
        EXPECT(0xe4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 00E0
        gbc.setState(0xa6a1, 0xb9d3, 0xb540, 0x5a5f, 0xe45d, 0xe1d5, 0x1, 0x1);
        gbc.writeMem(0xa6a1, { 0xe1 });
        gbc.writeMem(0xb9d3, { 0x85, 0x79 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb9d5, gbc.sp());
        EXPECT(0xa6a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa6a1));
        EXPECT(0x85, gbc.readMem(0xb9d3));
        EXPECT(0x79, gbc.readMem(0xb9d4));
        // E1 00E1
        gbc.setState(0x2dd0, 0xd80b, 0xda0, 0xa275, 0xc083, 0x2ced, 0x1, 0x1);
        gbc.writeMem(0x2dd0, { 0xe1 });
        gbc.writeMem(0xd80b, { 0x5f, 0xa });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd80d, gbc.sp());
        EXPECT(0x2dd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xd80b));
        EXPECT(0xa, gbc.readMem(0xd80c));
        // E1 00E2
        gbc.setState(0xc65b, 0x5a1f, 0x86f0, 0xc459, 0xfb22, 0x67aa, 0x1, 0x0);
        gbc.writeMem(0x5a1f, { 0x8b, 0x3b });
        gbc.writeMem(0xc65b, { 0xe1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5a21, gbc.sp());
        EXPECT(0xc65c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc65b));
        // E1 00E3
        gbc.setState(0xd16a, 0x15d6, 0x8050, 0x3ad9, 0x8c5b, 0x6c18, 0x0, 0x1);
        gbc.writeMem(0x15d6, { 0x31, 0xb3 });
        gbc.writeMem(0xd16a, { 0xe1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x15d8, gbc.sp());
        EXPECT(0xd16b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd16a));
        // E1 00E4
        gbc.setState(0xa6ee, 0xc019, 0xb30, 0xf86b, 0xd2ee, 0x7060, 0x1, 0x0);
        gbc.writeMem(0xa6ee, { 0xe1 });
        gbc.writeMem(0xc019, { 0x4d, 0x85 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc01b, gbc.sp());
        EXPECT(0xa6ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa6ee));
        EXPECT(0x4d, gbc.readMem(0xc019));
        EXPECT(0x85, gbc.readMem(0xc01a));
        // E1 00E5
        gbc.setState(0xd39c, 0x4946, 0x3690, 0x1799, 0xcb3f, 0x663d, 0x1, 0x1);
        gbc.writeMem(0x4946, { 0x19, 0x1d });
        gbc.writeMem(0xd39c, { 0xe1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4948, gbc.sp());
        EXPECT(0xd39d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd39c));
        // E1 00E6
        gbc.setState(0x9c88, 0x9163, 0xdc30, 0xa10f, 0xa72, 0xa17e, 0x0, 0x0);
        gbc.writeMem(0x9163, { 0x2a, 0x8 });
        gbc.writeMem(0x9c88, { 0xe1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9165, gbc.sp());
        EXPECT(0x9c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x9163));
        EXPECT(0x8, gbc.readMem(0x9164));
        EXPECT(0xe1, gbc.readMem(0x9c88));
        // E1 00E7
        gbc.setState(0x2b1b, 0x58d3, 0x1b00, 0x3206, 0xf043, 0x5724, 0x0, 0x0);
        gbc.writeMem(0x2b1b, { 0xe1 });
        gbc.writeMem(0x58d3, { 0x6, 0xd1 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x58d5, gbc.sp());
        EXPECT(0x2b1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 00E8
        gbc.setState(0x9e64, 0xfeaa, 0xa7c0, 0x6ad8, 0x180c, 0xbcd3, 0x0, 0x1);
        gbc.writeMem(0x9e64, { 0xe1 });
        gbc.writeMem(0xfeaa, { 0x6d, 0xcb });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfeac, gbc.sp());
        EXPECT(0x9e65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9e64));
        EXPECT(0x6d, gbc.readMem(0xfeaa));
        EXPECT(0xcb, gbc.readMem(0xfeab));
        // E1 00E9
        gbc.setState(0x38ea, 0x2460, 0x93b0, 0x5da6, 0x44d8, 0x2673, 0x0, 0x0);
        gbc.writeMem(0x2460, { 0x96, 0xc7 });
        gbc.writeMem(0x38ea, { 0xe1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2462, gbc.sp());
        EXPECT(0x38eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 00EA
        gbc.setState(0xefa2, 0xa170, 0x1940, 0x61f9, 0xbb7d, 0x7b3d, 0x1, 0x1);
        gbc.writeMem(0xa170, { 0x6b, 0x75 });
        gbc.writeMem(0xefa2, { 0xe1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa172, gbc.sp());
        EXPECT(0xefa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xa170));
        EXPECT(0x75, gbc.readMem(0xa171));
        EXPECT(0xe1, gbc.readMem(0xefa2));
        // E1 00EB
        gbc.setState(0x1188, 0xee44, 0xfab0, 0xca93, 0x2949, 0xa5c6, 0x0, 0x0);
        gbc.writeMem(0x1188, { 0xe1 });
        gbc.writeMem(0xee44, { 0x25, 0x73 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xee46, gbc.sp());
        EXPECT(0x1189, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xee44));
        EXPECT(0x73, gbc.readMem(0xee45));
        // E1 00EC
        gbc.setState(0x2473, 0x915f, 0x50b0, 0x1f9, 0xdeb1, 0x1c66, 0x0, 0x1);
        gbc.writeMem(0x2473, { 0xe1 });
        gbc.writeMem(0x915f, { 0x85, 0x54 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9161, gbc.sp());
        EXPECT(0x2474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x915f));
        EXPECT(0x54, gbc.readMem(0x9160));
        // E1 00ED
        gbc.setState(0xd16d, 0xcd24, 0xb3e0, 0x6471, 0xd247, 0xce78, 0x1, 0x1);
        gbc.writeMem(0xcd24, { 0x60, 0xa9 });
        gbc.writeMem(0xd16d, { 0xe1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcd26, gbc.sp());
        EXPECT(0xd16e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xcd24));
        EXPECT(0xa9, gbc.readMem(0xcd25));
        EXPECT(0xe1, gbc.readMem(0xd16d));
        // E1 00EE
        gbc.setState(0xd929, 0x5c03, 0x6aa0, 0x3db4, 0x9992, 0x86d1, 0x0, 0x1);
        gbc.writeMem(0x5c03, { 0x5c, 0xb6 });
        gbc.writeMem(0xd929, { 0xe1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5c05, gbc.sp());
        EXPECT(0xd92a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd929));
        // E1 00EF
        gbc.setState(0x82cb, 0xd7f9, 0x2390, 0x40fb, 0x964f, 0xb997, 0x1, 0x0);
        gbc.writeMem(0x82cb, { 0xe1 });
        gbc.writeMem(0xd7f9, { 0x32, 0xcf });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd7fb, gbc.sp());
        EXPECT(0x82cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x82cb));
        EXPECT(0x32, gbc.readMem(0xd7f9));
        EXPECT(0xcf, gbc.readMem(0xd7fa));
        // E1 00F0
        gbc.setState(0xb916, 0x159f, 0xd0a0, 0x41e5, 0x388d, 0xb37, 0x1, 0x1);
        gbc.writeMem(0x159f, { 0x85, 0x8c });
        gbc.writeMem(0xb916, { 0xe1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x15a1, gbc.sp());
        EXPECT(0xb917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb916));
        // E1 00F1
        gbc.setState(0x7b0f, 0x26c2, 0x26b0, 0x89be, 0xd305, 0x7edc, 0x0, 0x0);
        gbc.writeMem(0x26c2, { 0x3, 0x3f });
        gbc.writeMem(0x7b0f, { 0xe1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x26c4, gbc.sp());
        EXPECT(0x7b10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 00F2
        gbc.setState(0x879d, 0xa90d, 0xb790, 0x21b9, 0x9ccd, 0xcc13, 0x0, 0x0);
        gbc.writeMem(0x879d, { 0xe1 });
        gbc.writeMem(0xa90d, { 0x32, 0x6e });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa90f, gbc.sp());
        EXPECT(0x879e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x879d));
        EXPECT(0x32, gbc.readMem(0xa90d));
        EXPECT(0x6e, gbc.readMem(0xa90e));
        // E1 00F3
        gbc.setState(0xe3ed, 0x86ee, 0xa860, 0xb6b5, 0x3874, 0x696e, 0x1, 0x1);
        gbc.writeMem(0x86ee, { 0x59, 0x89 });
        gbc.writeMem(0xe3ed, { 0xe1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x86f0, gbc.sp());
        EXPECT(0xe3ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x86ee));
        EXPECT(0x89, gbc.readMem(0x86ef));
        EXPECT(0xe1, gbc.readMem(0xe3ed));
        // E1 00F4
        gbc.setState(0xce38, 0xe326, 0xe790, 0xe7f3, 0x2053, 0xca50, 0x0, 0x1);
        gbc.writeMem(0xce38, { 0xe1 });
        gbc.writeMem(0xe326, { 0xfa, 0x3a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe328, gbc.sp());
        EXPECT(0xce39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xce38));
        EXPECT(0xfa, gbc.readMem(0xe326));
        EXPECT(0x3a, gbc.readMem(0xe327));
        // E1 00F5
        gbc.setState(0x9bb5, 0xd9c2, 0xd5e0, 0xb760, 0xd584, 0xb524, 0x0, 0x1);
        gbc.writeMem(0x9bb5, { 0xe1 });
        gbc.writeMem(0xd9c2, { 0x70, 0xe9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd9c4, gbc.sp());
        EXPECT(0x9bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9bb5));
        EXPECT(0x70, gbc.readMem(0xd9c2));
        EXPECT(0xe9, gbc.readMem(0xd9c3));
        // E1 00F6
        gbc.setState(0x47e6, 0x22db, 0xb690, 0x318b, 0xe073, 0x95d2, 0x0, 0x1);
        gbc.writeMem(0x22db, { 0x3e, 0x2a });
        gbc.writeMem(0x47e6, { 0xe1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x22dd, gbc.sp());
        EXPECT(0x47e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 00F7
        gbc.setState(0xc1df, 0x38ed, 0xac40, 0x7ae3, 0x2ec3, 0xeb28, 0x0, 0x0);
        gbc.writeMem(0x38ed, { 0x5c, 0xd0 });
        gbc.writeMem(0xc1df, { 0xe1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x38ef, gbc.sp());
        EXPECT(0xc1e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc1df));
        // E1 00F8
        gbc.setState(0x9ffa, 0x8dbc, 0xf580, 0x8cec, 0x123e, 0x1184, 0x1, 0x1);
        gbc.writeMem(0x8dbc, { 0x43, 0xd0 });
        gbc.writeMem(0x9ffa, { 0xe1 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8dbe, gbc.sp());
        EXPECT(0x9ffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8dbc));
        EXPECT(0xd0, gbc.readMem(0x8dbd));
        EXPECT(0xe1, gbc.readMem(0x9ffa));
        // E1 00F9
        gbc.setState(0xad4f, 0x2803, 0x4250, 0x985a, 0x89d9, 0xf7dc, 0x0, 0x0);
        gbc.writeMem(0x2803, { 0x5f, 0xaf });
        gbc.writeMem(0xad4f, { 0xe1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2805, gbc.sp());
        EXPECT(0xad50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xad4f));
        // E1 00FA
        gbc.setState(0xc450, 0xca76, 0x8c60, 0xf7b1, 0x6f3, 0x7a57, 0x0, 0x0);
        gbc.writeMem(0xc450, { 0xe1 });
        gbc.writeMem(0xca76, { 0x7, 0xfd });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xca78, gbc.sp());
        EXPECT(0xc451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc450));
        EXPECT(0x7, gbc.readMem(0xca76));
        EXPECT(0xfd, gbc.readMem(0xca77));
        // E1 00FB
        gbc.setState(0x18c, 0xe347, 0x95d0, 0xf295, 0x870, 0xbe0d, 0x0, 0x0);
        gbc.writeMem(0x18c, { 0xe1 });
        gbc.writeMem(0xe347, { 0xb4, 0xc0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe349, gbc.sp());
        EXPECT(0x18d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xe347));
        EXPECT(0xc0, gbc.readMem(0xe348));
        // E1 00FC
        gbc.setState(0x1d18, 0x9abc, 0x1be0, 0x9890, 0x72c6, 0xbaae, 0x0, 0x0);
        gbc.writeMem(0x1d18, { 0xe1 });
        gbc.writeMem(0x9abc, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9abe, gbc.sp());
        EXPECT(0x1d19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abc));
        EXPECT(0x6e, gbc.readMem(0x9abd));
        // E1 00FD
        gbc.setState(0x3ff4, 0xc744, 0x9460, 0xce92, 0xa1bb, 0xa3bf, 0x1, 0x0);
        gbc.writeMem(0x3ff4, { 0xe1 });
        gbc.writeMem(0xc744, { 0xdd, 0xaf });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc746, gbc.sp());
        EXPECT(0x3ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xc744));
        EXPECT(0xaf, gbc.readMem(0xc745));
        // E1 00FE
        gbc.setState(0x6cfe, 0x9b7a, 0xe650, 0x8c92, 0xccf8, 0x4bbe, 0x1, 0x0);
        gbc.writeMem(0x6cfe, { 0xe1 });
        gbc.writeMem(0x9b7a, { 0xa0, 0xda });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9b7c, gbc.sp());
        EXPECT(0x6cff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9b7a));
        EXPECT(0xda, gbc.readMem(0x9b7b));
        // E1 00FF
        gbc.setState(0xb1e6, 0xd580, 0xca60, 0x6065, 0x886f, 0xfa85, 0x1, 0x1);
        gbc.writeMem(0xb1e6, { 0xe1 });
        gbc.writeMem(0xd580, { 0xbb, 0xa5 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd582, gbc.sp());
        EXPECT(0xb1e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb1e6));
        EXPECT(0xbb, gbc.readMem(0xd580));
        EXPECT(0xa5, gbc.readMem(0xd581));
        // E1 0100
        gbc.setState(0x2952, 0xf3aa, 0xe490, 0x4aeb, 0xe19b, 0x1818, 0x0, 0x0);
        gbc.writeMem(0x2952, { 0xe1 });
        gbc.writeMem(0xf3aa, { 0x4f, 0x97 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf3ac, gbc.sp());
        EXPECT(0x2953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xf3aa));
        EXPECT(0x97, gbc.readMem(0xf3ab));
        // E1 0101
        gbc.setState(0xb3f8, 0x9638, 0x27d0, 0xbe67, 0xf455, 0x7bb4, 0x1, 0x0);
        gbc.writeMem(0x9638, { 0xe7, 0xcf });
        gbc.writeMem(0xb3f8, { 0xe1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x963a, gbc.sp());
        EXPECT(0xb3f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x9638));
        EXPECT(0xcf, gbc.readMem(0x9639));
        EXPECT(0xe1, gbc.readMem(0xb3f8));
        // E1 0102
        gbc.setState(0xd39b, 0x1489, 0x9d80, 0x9e74, 0xf324, 0xe983, 0x1, 0x0);
        gbc.writeMem(0x1489, { 0x46, 0xff });
        gbc.writeMem(0xd39b, { 0xe1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x148b, gbc.sp());
        EXPECT(0xd39c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd39b));
        // E1 0103
        gbc.setState(0x89e8, 0xe6c6, 0x7270, 0x8c76, 0xaa60, 0x4044, 0x1, 0x0);
        gbc.writeMem(0x89e8, { 0xe1 });
        gbc.writeMem(0xe6c6, { 0x5, 0xaa });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe6c8, gbc.sp());
        EXPECT(0x89e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x89e8));
        EXPECT(0x5, gbc.readMem(0xe6c6));
        EXPECT(0xaa, gbc.readMem(0xe6c7));
        // E1 0104
        gbc.setState(0x5bdf, 0x5779, 0x9e70, 0x91c, 0xeefa, 0x6b63, 0x1, 0x1);
        gbc.writeMem(0x5779, { 0x59, 0x9d });
        gbc.writeMem(0x5bdf, { 0xe1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x577b, gbc.sp());
        EXPECT(0x5be0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0105
        gbc.setState(0x636a, 0x86c1, 0x7d50, 0xb159, 0x843b, 0xf15e, 0x0, 0x1);
        gbc.writeMem(0x636a, { 0xe1 });
        gbc.writeMem(0x86c1, { 0x8, 0xec });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x86c3, gbc.sp());
        EXPECT(0x636b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x86c1));
        EXPECT(0xec, gbc.readMem(0x86c2));
        // E1 0106
        gbc.setState(0x213c, 0x703, 0x9f40, 0x3eab, 0x5004, 0xbfde, 0x1, 0x0);
        gbc.writeMem(0x703, { 0xfc, 0x6 });
        gbc.writeMem(0x213c, { 0xe1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x705, gbc.sp());
        EXPECT(0x213d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0107
        gbc.setState(0x9421, 0xfb6f, 0xab70, 0x2328, 0x5cb4, 0x388d, 0x1, 0x1);
        gbc.writeMem(0x9421, { 0xe1 });
        gbc.writeMem(0xfb6f, { 0x54, 0x4b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfb71, gbc.sp());
        EXPECT(0x9422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9421));
        EXPECT(0x54, gbc.readMem(0xfb6f));
        EXPECT(0x4b, gbc.readMem(0xfb70));
        // E1 0108
        gbc.setState(0x77b2, 0x980b, 0x2eb0, 0xad82, 0x3f2, 0x613f, 0x1, 0x0);
        gbc.writeMem(0x77b2, { 0xe1 });
        gbc.writeMem(0x980b, { 0xc1, 0xf4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x980d, gbc.sp());
        EXPECT(0x77b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x980b));
        EXPECT(0xf4, gbc.readMem(0x980c));
        // E1 0109
        gbc.setState(0x77a2, 0x57fd, 0x4d60, 0xd63a, 0xb963, 0x2c0b, 0x0, 0x1);
        gbc.writeMem(0x57fd, { 0x6f, 0xc5 });
        gbc.writeMem(0x77a2, { 0xe1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x57ff, gbc.sp());
        EXPECT(0x77a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 010A
        gbc.setState(0xbe0, 0x6966, 0x9190, 0x8148, 0x3d2c, 0xc0dc, 0x0, 0x1);
        gbc.writeMem(0xbe0, { 0xe1 });
        gbc.writeMem(0x6966, { 0x7, 0x6e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6968, gbc.sp());
        EXPECT(0xbe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 010B
        gbc.setState(0x93bb, 0x48a5, 0x3240, 0x5b0c, 0x6aa2, 0x493a, 0x0, 0x1);
        gbc.writeMem(0x48a5, { 0xac, 0x57 });
        gbc.writeMem(0x93bb, { 0xe1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x48a7, gbc.sp());
        EXPECT(0x93bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x93bb));
        // E1 010C
        gbc.setState(0x210c, 0x8dc6, 0xc530, 0x1623, 0x2f7e, 0xcac8, 0x1, 0x1);
        gbc.writeMem(0x210c, { 0xe1 });
        gbc.writeMem(0x8dc6, { 0xa1, 0x75 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8dc8, gbc.sp());
        EXPECT(0x210d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8dc6));
        EXPECT(0x75, gbc.readMem(0x8dc7));
        // E1 010D
        gbc.setState(0xda66, 0xf530, 0x76d0, 0x3dcb, 0xd739, 0x93f6, 0x1, 0x0);
        gbc.writeMem(0xda66, { 0xe1 });
        gbc.writeMem(0xf530, { 0x6d, 0xc9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf532, gbc.sp());
        EXPECT(0xda67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xda66));
        EXPECT(0x6d, gbc.readMem(0xf530));
        EXPECT(0xc9, gbc.readMem(0xf531));
        // E1 010E
        gbc.setState(0xdfef, 0xafc4, 0xd780, 0x77da, 0xd06b, 0x2c69, 0x1, 0x1);
        gbc.writeMem(0xafc4, { 0x3d, 0x9b });
        gbc.writeMem(0xdfef, { 0xe1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xafc6, gbc.sp());
        EXPECT(0xdff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xafc4));
        EXPECT(0x9b, gbc.readMem(0xafc5));
        EXPECT(0xe1, gbc.readMem(0xdfef));
        // E1 010F
        gbc.setState(0xe1a6, 0xcfe6, 0x7830, 0xa335, 0xab53, 0x8b11, 0x1, 0x0);
        gbc.writeMem(0xcfe6, { 0x60, 0x4a });
        gbc.writeMem(0xe1a6, { 0xe1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcfe8, gbc.sp());
        EXPECT(0xe1a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xcfe6));
        EXPECT(0x4a, gbc.readMem(0xcfe7));
        EXPECT(0xe1, gbc.readMem(0xe1a6));
        // E1 0110
        gbc.setState(0x847e, 0xef3e, 0x4100, 0x36bb, 0xd027, 0xd0b9, 0x0, 0x1);
        gbc.writeMem(0x847e, { 0xe1 });
        gbc.writeMem(0xef3e, { 0x60, 0x16 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xef40, gbc.sp());
        EXPECT(0x847f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x847e));
        EXPECT(0x60, gbc.readMem(0xef3e));
        EXPECT(0x16, gbc.readMem(0xef3f));
        // E1 0111
        gbc.setState(0xcfcb, 0x51c2, 0x8b50, 0xd7d6, 0xebb9, 0x6793, 0x1, 0x0);
        gbc.writeMem(0x51c2, { 0x60, 0x6b });
        gbc.writeMem(0xcfcb, { 0xe1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x51c4, gbc.sp());
        EXPECT(0xcfcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xcfcb));
        // E1 0112
        gbc.setState(0x545a, 0xbc9, 0xdfd0, 0x3454, 0xfe33, 0x1c0f, 0x0, 0x1);
        gbc.writeMem(0xbc9, { 0x30, 0x95 });
        gbc.writeMem(0x545a, { 0xe1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbcb, gbc.sp());
        EXPECT(0x545b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0113
        gbc.setState(0x4d51, 0xf5fb, 0xde50, 0xb8c5, 0x3a3f, 0xa5b7, 0x1, 0x0);
        gbc.writeMem(0x4d51, { 0xe1 });
        gbc.writeMem(0xf5fb, { 0x13, 0x2b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf5fd, gbc.sp());
        EXPECT(0x4d52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xf5fb));
        EXPECT(0x2b, gbc.readMem(0xf5fc));
        // E1 0114
        gbc.setState(0xe094, 0xbc78, 0xb2a0, 0xd1b2, 0x6ea1, 0x13f0, 0x0, 0x0);
        gbc.writeMem(0xbc78, { 0x81, 0xa4 });
        gbc.writeMem(0xe094, { 0xe1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbc7a, gbc.sp());
        EXPECT(0xe095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbc78));
        EXPECT(0xa4, gbc.readMem(0xbc79));
        EXPECT(0xe1, gbc.readMem(0xe094));
        // E1 0115
        gbc.setState(0x71d, 0xcaf8, 0x37c0, 0x7d35, 0xa025, 0xe0bb, 0x0, 0x1);
        gbc.writeMem(0x71d, { 0xe1 });
        gbc.writeMem(0xcaf8, { 0x49, 0xbf });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcafa, gbc.sp());
        EXPECT(0x71e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xcaf8));
        EXPECT(0xbf, gbc.readMem(0xcaf9));
        // E1 0116
        gbc.setState(0xb8c9, 0x671c, 0x64d0, 0x73, 0xfe5f, 0x36d0, 0x0, 0x0);
        gbc.writeMem(0x671c, { 0x4, 0xab });
        gbc.writeMem(0xb8c9, { 0xe1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x671e, gbc.sp());
        EXPECT(0xb8ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb8c9));
        // E1 0117
        gbc.setState(0x8ed6, 0x673e, 0x4400, 0x4bca, 0x7b35, 0x3582, 0x0, 0x1);
        gbc.writeMem(0x673e, { 0x66, 0x55 });
        gbc.writeMem(0x8ed6, { 0xe1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6740, gbc.sp());
        EXPECT(0x8ed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8ed6));
        // E1 0118
        gbc.setState(0x8478, 0xcb54, 0xc400, 0xbddb, 0xe74b, 0x428a, 0x1, 0x0);
        gbc.writeMem(0x8478, { 0xe1 });
        gbc.writeMem(0xcb54, { 0xb3, 0x7b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xcb56, gbc.sp());
        EXPECT(0x8479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8478));
        EXPECT(0xb3, gbc.readMem(0xcb54));
        EXPECT(0x7b, gbc.readMem(0xcb55));
        // E1 0119
        gbc.setState(0x7d60, 0xf92d, 0xad40, 0x960c, 0x9c9, 0xe995, 0x0, 0x1);
        gbc.writeMem(0x7d60, { 0xe1 });
        gbc.writeMem(0xf92d, { 0x56, 0x9e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf92f, gbc.sp());
        EXPECT(0x7d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xf92d));
        EXPECT(0x9e, gbc.readMem(0xf92e));
        // E1 011A
        gbc.setState(0x272, 0x5b71, 0x6610, 0xaa8, 0x102d, 0x65c4, 0x0, 0x1);
        gbc.writeMem(0x272, { 0xe1 });
        gbc.writeMem(0x5b71, { 0x2a, 0xb6 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5b73, gbc.sp());
        EXPECT(0x273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 011B
        gbc.setState(0x7abb, 0x3b15, 0x2ae0, 0xa6b, 0xf268, 0x9652, 0x1, 0x0);
        gbc.writeMem(0x3b15, { 0xb0, 0x50 });
        gbc.writeMem(0x7abb, { 0xe1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3b17, gbc.sp());
        EXPECT(0x7abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 011C
        gbc.setState(0xb05e, 0xd695, 0x7370, 0xe7d7, 0x9d96, 0x9f8f, 0x0, 0x0);
        gbc.writeMem(0xb05e, { 0xe1 });
        gbc.writeMem(0xd695, { 0x5b, 0x6f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd697, gbc.sp());
        EXPECT(0xb05f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb05e));
        EXPECT(0x5b, gbc.readMem(0xd695));
        EXPECT(0x6f, gbc.readMem(0xd696));
        // E1 011D
        gbc.setState(0x40c5, 0x9f20, 0x6d40, 0x66ed, 0x1e27, 0x6062, 0x1, 0x0);
        gbc.writeMem(0x40c5, { 0xe1 });
        gbc.writeMem(0x9f20, { 0x2c, 0xe6 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9f22, gbc.sp());
        EXPECT(0x40c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9f20));
        EXPECT(0xe6, gbc.readMem(0x9f21));
        // E1 011F
        gbc.setState(0xc3c, 0xdc4f, 0x7bd0, 0x1ff2, 0xa558, 0xa10b, 0x1, 0x0);
        gbc.writeMem(0xc3c, { 0xe1 });
        gbc.writeMem(0xdc4f, { 0x5a, 0xe9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdc51, gbc.sp());
        EXPECT(0xc3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xdc4f));
        EXPECT(0xe9, gbc.readMem(0xdc50));
        // E1 0120
        gbc.setState(0xbcc4, 0x900d, 0x8eb0, 0x3220, 0x3a15, 0x8b18, 0x1, 0x1);
        gbc.writeMem(0x900d, { 0xc0, 0x83 });
        gbc.writeMem(0xbcc4, { 0xe1 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x900f, gbc.sp());
        EXPECT(0xbcc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x900d));
        EXPECT(0x83, gbc.readMem(0x900e));
        EXPECT(0xe1, gbc.readMem(0xbcc4));
        // E1 0121
        gbc.setState(0xbe33, 0x9317, 0x3e60, 0xe3cf, 0x1817, 0xc8d4, 0x1, 0x0);
        gbc.writeMem(0x9317, { 0xdd, 0x42 });
        gbc.writeMem(0xbe33, { 0xe1 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9319, gbc.sp());
        EXPECT(0xbe34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x9317));
        EXPECT(0x42, gbc.readMem(0x9318));
        EXPECT(0xe1, gbc.readMem(0xbe33));
        // E1 0122
        gbc.setState(0xacb, 0x4a3a, 0xe5c0, 0x130d, 0xcae9, 0xb141, 0x1, 0x0);
        gbc.writeMem(0xacb, { 0xe1 });
        gbc.writeMem(0x4a3a, { 0xfd, 0x4b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4a3c, gbc.sp());
        EXPECT(0xacc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0123
        gbc.setState(0x4472, 0x1086, 0x86b0, 0xe20a, 0xd381, 0xed93, 0x0, 0x0);
        gbc.writeMem(0x1086, { 0xcf, 0xa });
        gbc.writeMem(0x4472, { 0xe1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1088, gbc.sp());
        EXPECT(0x4473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0124
        gbc.setState(0xcfe, 0x29b0, 0xad0, 0xe2f9, 0x6b0c, 0x413a, 0x1, 0x0);
        gbc.writeMem(0xcfe, { 0xe1 });
        gbc.writeMem(0x29b0, { 0x71, 0x44 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x29b2, gbc.sp());
        EXPECT(0xcff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0125
        gbc.setState(0xd8de, 0x6070, 0x9b40, 0xb5de, 0xc251, 0xf786, 0x1, 0x1);
        gbc.writeMem(0x6070, { 0x7b, 0xe0 });
        gbc.writeMem(0xd8de, { 0xe1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6072, gbc.sp());
        EXPECT(0xd8df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd8de));
        // E1 0126
        gbc.setState(0x99d, 0x909b, 0x310, 0x1af9, 0x3c6c, 0x2820, 0x1, 0x0);
        gbc.writeMem(0x99d, { 0xe1 });
        gbc.writeMem(0x909b, { 0x29, 0xfb });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x909d, gbc.sp());
        EXPECT(0x99e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x909b));
        EXPECT(0xfb, gbc.readMem(0x909c));
        // E1 0127
        gbc.setState(0xbaeb, 0xfaf0, 0x9b60, 0xaba5, 0xced2, 0x57a1, 0x0, 0x1);
        gbc.writeMem(0xbaeb, { 0xe1 });
        gbc.writeMem(0xfaf0, { 0x6b, 0xf6 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfaf2, gbc.sp());
        EXPECT(0xbaec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xbaeb));
        EXPECT(0x6b, gbc.readMem(0xfaf0));
        EXPECT(0xf6, gbc.readMem(0xfaf1));
        // E1 0128
        gbc.setState(0xad50, 0x9f24, 0x7fe0, 0x3b61, 0x5d2a, 0x3b06, 0x1, 0x0);
        gbc.writeMem(0x9f24, { 0x2c, 0x3a });
        gbc.writeMem(0xad50, { 0xe1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9f26, gbc.sp());
        EXPECT(0xad51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9f24));
        EXPECT(0x3a, gbc.readMem(0x9f25));
        EXPECT(0xe1, gbc.readMem(0xad50));
        // E1 0129
        gbc.setState(0xa2b2, 0x204f, 0x97b0, 0x792a, 0xb5ef, 0x3e30, 0x1, 0x0);
        gbc.writeMem(0x204f, { 0x84, 0xa0 });
        gbc.writeMem(0xa2b2, { 0xe1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2051, gbc.sp());
        EXPECT(0xa2b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa2b2));
        // E1 012A
        gbc.setState(0xb9ec, 0xedd8, 0xb3d0, 0x6df4, 0xe0c5, 0x9c9d, 0x0, 0x1);
        gbc.writeMem(0xb9ec, { 0xe1 });
        gbc.writeMem(0xedd8, { 0x7c, 0x3f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xedda, gbc.sp());
        EXPECT(0xb9ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb9ec));
        EXPECT(0x7c, gbc.readMem(0xedd8));
        EXPECT(0x3f, gbc.readMem(0xedd9));
        // E1 012B
        gbc.setState(0x66e4, 0x2474, 0x6ee0, 0x5817, 0xda5a, 0x7e37, 0x1, 0x0);
        gbc.writeMem(0x2474, { 0xc4, 0x49 });
        gbc.writeMem(0x66e4, { 0xe1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2476, gbc.sp());
        EXPECT(0x66e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 012C
        gbc.setState(0x9a96, 0x2e63, 0x5560, 0xc945, 0xf567, 0x9aa4, 0x1, 0x0);
        gbc.writeMem(0x2e63, { 0x43, 0x99 });
        gbc.writeMem(0x9a96, { 0xe1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2e65, gbc.sp());
        EXPECT(0x9a97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9a96));
        // E1 012D
        gbc.setState(0x60, 0x99d8, 0x3ba0, 0x59f, 0xa86c, 0x9808, 0x1, 0x0);
        gbc.writeMem(0x60, { 0xe1 });
        gbc.writeMem(0x99d8, { 0x63, 0xad });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x99da, gbc.sp());
        EXPECT(0x61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x99d8));
        EXPECT(0xad, gbc.readMem(0x99d9));
        // E1 012E
        gbc.setState(0x3158, 0xbaba, 0xe990, 0x138f, 0x2cb, 0xdc12, 0x1, 0x0);
        gbc.writeMem(0x3158, { 0xe1 });
        gbc.writeMem(0xbaba, { 0x58, 0x2d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbabc, gbc.sp());
        EXPECT(0x3159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbaba));
        EXPECT(0x2d, gbc.readMem(0xbabb));
        // E1 012F
        gbc.setState(0x6587, 0x62c4, 0x9ba0, 0x5c84, 0xd21a, 0x6602, 0x1, 0x1);
        gbc.writeMem(0x62c4, { 0x55, 0x71 });
        gbc.writeMem(0x6587, { 0xe1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x62c6, gbc.sp());
        EXPECT(0x6588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0130
        gbc.setState(0x39fb, 0x6ab9, 0x2a60, 0x16f1, 0x6a67, 0x53c0, 0x0, 0x0);
        gbc.writeMem(0x39fb, { 0xe1 });
        gbc.writeMem(0x6ab9, { 0x3f, 0xaa });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6abb, gbc.sp());
        EXPECT(0x39fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0131
        gbc.setState(0x5efe, 0xb5eb, 0x9bd0, 0xf557, 0x2675, 0x8573, 0x1, 0x0);
        gbc.writeMem(0x5efe, { 0xe1 });
        gbc.writeMem(0xb5eb, { 0x73, 0x3c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb5ed, gbc.sp());
        EXPECT(0x5eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xb5eb));
        EXPECT(0x3c, gbc.readMem(0xb5ec));
        // E1 0132
        gbc.setState(0x4b58, 0x4a73, 0xdff0, 0x22a4, 0xd7cf, 0xcbf8, 0x1, 0x0);
        gbc.writeMem(0x4a73, { 0x17, 0xda });
        gbc.writeMem(0x4b58, { 0xe1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4a75, gbc.sp());
        EXPECT(0x4b59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0133
        gbc.setState(0x59f8, 0x54d8, 0x56a0, 0x20f4, 0xc556, 0xd7e6, 0x1, 0x1);
        gbc.writeMem(0x54d8, { 0x2e, 0xb4 });
        gbc.writeMem(0x59f8, { 0xe1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x54da, gbc.sp());
        EXPECT(0x59f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0134
        gbc.setState(0x77b1, 0x77e6, 0xe2b0, 0x2771, 0x616e, 0x85cd, 0x0, 0x1);
        gbc.writeMem(0x77b1, { 0xe1 });
        gbc.writeMem(0x77e6, { 0xb2, 0xd2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x77e8, gbc.sp());
        EXPECT(0x77b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0135
        gbc.setState(0x696b, 0xfc71, 0xcd10, 0x340e, 0x9994, 0x3d4b, 0x1, 0x1);
        gbc.writeMem(0x696b, { 0xe1 });
        gbc.writeMem(0xfc71, { 0x13, 0x1d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfc73, gbc.sp());
        EXPECT(0x696c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xfc71));
        EXPECT(0x1d, gbc.readMem(0xfc72));
        // E1 0136
        gbc.setState(0x1e1, 0x17f9, 0xf420, 0xcda4, 0x3fb1, 0x8618, 0x1, 0x0);
        gbc.writeMem(0x1e1, { 0xe1 });
        gbc.writeMem(0x17f9, { 0xf3, 0xcc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x17fb, gbc.sp());
        EXPECT(0x1e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0137
        gbc.setState(0x1c01, 0xadc9, 0x5f80, 0x3f15, 0x77a7, 0x5c92, 0x1, 0x0);
        gbc.writeMem(0x1c01, { 0xe1 });
        gbc.writeMem(0xadc9, { 0xca, 0xb2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xadcb, gbc.sp());
        EXPECT(0x1c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xadc9));
        EXPECT(0xb2, gbc.readMem(0xadca));
        // E1 0138
        gbc.setState(0xc93e, 0x62ab, 0x7780, 0xd182, 0x66db, 0x47b2, 0x0, 0x1);
        gbc.writeMem(0x62ab, { 0x33, 0x95 });
        gbc.writeMem(0xc93e, { 0xe1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x62ad, gbc.sp());
        EXPECT(0xc93f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc93e));
        // E1 0139
        gbc.setState(0x6c5b, 0xd2d3, 0x880, 0xdf0e, 0x6885, 0x5e31, 0x0, 0x0);
        gbc.writeMem(0x6c5b, { 0xe1 });
        gbc.writeMem(0xd2d3, { 0x62, 0xdf });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd2d5, gbc.sp());
        EXPECT(0x6c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xd2d3));
        EXPECT(0xdf, gbc.readMem(0xd2d4));
        // E1 013A
        gbc.setState(0x57be, 0x5d2e, 0xfbb0, 0xf091, 0x9f, 0xfe9a, 0x0, 0x1);
        gbc.writeMem(0x57be, { 0xe1 });
        gbc.writeMem(0x5d2e, { 0xb6, 0xc7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5d30, gbc.sp());
        EXPECT(0x57bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 013B
        gbc.setState(0xa28e, 0x29b3, 0xe720, 0xccab, 0xe83e, 0x6150, 0x1, 0x1);
        gbc.writeMem(0x29b3, { 0x6d, 0x71 });
        gbc.writeMem(0xa28e, { 0xe1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x29b5, gbc.sp());
        EXPECT(0xa28f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa28e));
        // E1 013C
        gbc.setState(0x4121, 0x1d41, 0xf0, 0xc1c, 0xe035, 0xd2a, 0x1, 0x1);
        gbc.writeMem(0x1d41, { 0x84, 0x46 });
        gbc.writeMem(0x4121, { 0xe1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1d43, gbc.sp());
        EXPECT(0x4122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 013D
        gbc.setState(0x17a5, 0xbd3e, 0x5b30, 0x477, 0xf333, 0x40bb, 0x1, 0x0);
        gbc.writeMem(0x17a5, { 0xe1 });
        gbc.writeMem(0xbd3e, { 0x2d, 0x78 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbd40, gbc.sp());
        EXPECT(0x17a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbd3e));
        EXPECT(0x78, gbc.readMem(0xbd3f));
        // E1 013E
        gbc.setState(0x54cd, 0xab27, 0x53d0, 0xcb33, 0x357e, 0x8d56, 0x1, 0x0);
        gbc.writeMem(0x54cd, { 0xe1 });
        gbc.writeMem(0xab27, { 0xd8, 0x14 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xab29, gbc.sp());
        EXPECT(0x54ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xab27));
        EXPECT(0x14, gbc.readMem(0xab28));
        // E1 013F
        gbc.setState(0x855a, 0xddbe, 0x7f60, 0xcaf9, 0xfc24, 0x7282, 0x0, 0x1);
        gbc.writeMem(0x855a, { 0xe1 });
        gbc.writeMem(0xddbe, { 0x5c, 0x20 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xddc0, gbc.sp());
        EXPECT(0x855b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x855a));
        EXPECT(0x5c, gbc.readMem(0xddbe));
        EXPECT(0x20, gbc.readMem(0xddbf));
        // E1 0140
        gbc.setState(0x7df4, 0x8b95, 0x7920, 0x4ef6, 0x69e1, 0x87a8, 0x1, 0x0);
        gbc.writeMem(0x7df4, { 0xe1 });
        gbc.writeMem(0x8b95, { 0xa5, 0x39 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8b97, gbc.sp());
        EXPECT(0x7df5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x8b95));
        EXPECT(0x39, gbc.readMem(0x8b96));
        // E1 0141
        gbc.setState(0x73f5, 0x869, 0xbab0, 0xdaa1, 0x1852, 0x154e, 0x0, 0x0);
        gbc.writeMem(0x869, { 0x65, 0x7 });
        gbc.writeMem(0x73f5, { 0xe1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x86b, gbc.sp());
        EXPECT(0x73f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0142
        gbc.setState(0x9608, 0x62d4, 0x8470, 0x83af, 0x4cd1, 0x16b2, 0x0, 0x1);
        gbc.writeMem(0x62d4, { 0x89, 0x26 });
        gbc.writeMem(0x9608, { 0xe1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x62d6, gbc.sp());
        EXPECT(0x9609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9608));
        // E1 0143
        gbc.setState(0x4c7, 0xcaab, 0xd870, 0xe0b7, 0x34e, 0x62d, 0x0, 0x0);
        gbc.writeMem(0x4c7, { 0xe1 });
        gbc.writeMem(0xcaab, { 0x29, 0x56 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcaad, gbc.sp());
        EXPECT(0x4c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xcaab));
        EXPECT(0x56, gbc.readMem(0xcaac));
        // E1 0144
        gbc.setState(0xcf83, 0x4045, 0x72d0, 0x2ce1, 0x6162, 0xc816, 0x0, 0x0);
        gbc.writeMem(0x4045, { 0xde, 0x2b });
        gbc.writeMem(0xcf83, { 0xe1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4047, gbc.sp());
        EXPECT(0xcf84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xcf83));
        // E1 0145
        gbc.setState(0x7352, 0xed56, 0x9cb0, 0x963b, 0x496b, 0x2911, 0x1, 0x1);
        gbc.writeMem(0x7352, { 0xe1 });
        gbc.writeMem(0xed56, { 0x77, 0xd8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xed58, gbc.sp());
        EXPECT(0x7353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xed56));
        EXPECT(0xd8, gbc.readMem(0xed57));
        // E1 0146
        gbc.setState(0x3b88, 0x2457, 0xe220, 0xd696, 0x3652, 0xc6ee, 0x0, 0x1);
        gbc.writeMem(0x2457, { 0xe, 0xe9 });
        gbc.writeMem(0x3b88, { 0xe1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2459, gbc.sp());
        EXPECT(0x3b89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0148
        gbc.setState(0x2b09, 0x6191, 0x5020, 0xe92, 0x572f, 0x494, 0x0, 0x1);
        gbc.writeMem(0x2b09, { 0xe1 });
        gbc.writeMem(0x6191, { 0xde, 0x8a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6193, gbc.sp());
        EXPECT(0x2b0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0149
        gbc.setState(0x5034, 0x4e24, 0xd320, 0x3d22, 0x845d, 0xa32c, 0x1, 0x1);
        gbc.writeMem(0x4e24, { 0xc, 0x34 });
        gbc.writeMem(0x5034, { 0xe1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4e26, gbc.sp());
        EXPECT(0x5035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 014A
        gbc.setState(0x1722, 0xcadf, 0x45a0, 0x6262, 0xd50d, 0x7919, 0x0, 0x1);
        gbc.writeMem(0x1722, { 0xe1 });
        gbc.writeMem(0xcadf, { 0x37, 0x4c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcae1, gbc.sp());
        EXPECT(0x1723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xcadf));
        EXPECT(0x4c, gbc.readMem(0xcae0));
        // E1 014B
        gbc.setState(0x4c81, 0xb840, 0xe1b0, 0x9ab1, 0xd706, 0xc0b1, 0x1, 0x0);
        gbc.writeMem(0x4c81, { 0xe1 });
        gbc.writeMem(0xb840, { 0xd4, 0x41 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb842, gbc.sp());
        EXPECT(0x4c82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb840));
        EXPECT(0x41, gbc.readMem(0xb841));
        // E1 014C
        gbc.setState(0x2a53, 0x19d3, 0xf480, 0x3a3f, 0x67c1, 0xd2a5, 0x0, 0x0);
        gbc.writeMem(0x19d3, { 0x46, 0xe1 });
        gbc.writeMem(0x2a53, { 0xe1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x19d5, gbc.sp());
        EXPECT(0x2a54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 014D
        gbc.setState(0xe0e6, 0x2f07, 0x51d0, 0xf1a3, 0x4414, 0x5b8d, 0x0, 0x1);
        gbc.writeMem(0x2f07, { 0x8b, 0x60 });
        gbc.writeMem(0xe0e6, { 0xe1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2f09, gbc.sp());
        EXPECT(0xe0e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe0e6));
        // E1 014F
        gbc.setState(0xc709, 0xfa2d, 0x23a0, 0x99e1, 0xde50, 0xd453, 0x1, 0x0);
        gbc.writeMem(0xc709, { 0xe1 });
        gbc.writeMem(0xfa2d, { 0x7a, 0xb9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xfa2f, gbc.sp());
        EXPECT(0xc70a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc709));
        EXPECT(0x7a, gbc.readMem(0xfa2d));
        EXPECT(0xb9, gbc.readMem(0xfa2e));
        // E1 0150
        gbc.setState(0x51ae, 0x2434, 0x7a80, 0xf369, 0x94a1, 0xe77e, 0x0, 0x0);
        gbc.writeMem(0x2434, { 0xb7, 0xc9 });
        gbc.writeMem(0x51ae, { 0xe1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2436, gbc.sp());
        EXPECT(0x51af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0151
        gbc.setState(0x9902, 0x7b57, 0x7980, 0xc1b9, 0x40ee, 0x8fbb, 0x0, 0x1);
        gbc.writeMem(0x7b57, { 0xc0, 0x70 });
        gbc.writeMem(0x9902, { 0xe1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7b59, gbc.sp());
        EXPECT(0x9903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9902));
        // E1 0152
        gbc.setState(0xa188, 0xc64f, 0xea40, 0xa52b, 0x3f76, 0x49f3, 0x1, 0x0);
        gbc.writeMem(0xa188, { 0xe1 });
        gbc.writeMem(0xc64f, { 0x61, 0x70 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc651, gbc.sp());
        EXPECT(0xa189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa188));
        EXPECT(0x61, gbc.readMem(0xc64f));
        EXPECT(0x70, gbc.readMem(0xc650));
        // E1 0153
        gbc.setState(0x7df1, 0x539a, 0x420, 0xe55f, 0x56fe, 0xede8, 0x1, 0x1);
        gbc.writeMem(0x539a, { 0x6d, 0x6a });
        gbc.writeMem(0x7df1, { 0xe1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x539c, gbc.sp());
        EXPECT(0x7df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0154
        gbc.setState(0x8c6a, 0xff9d, 0xcd50, 0x9f4f, 0x30a7, 0x7da2, 0x0, 0x1);
        gbc.writeMem(0x8c6a, { 0xe1 });
        gbc.writeMem(0xff9d, { 0xc, 0xde });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xff9f, gbc.sp());
        EXPECT(0x8c6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8c6a));
        EXPECT(0xc, gbc.readMem(0xff9d));
        EXPECT(0xde, gbc.readMem(0xff9e));
        // E1 0155
        gbc.setState(0x317e, 0xad1, 0xd9f0, 0xb702, 0x9175, 0x8e99, 0x0, 0x0);
        gbc.writeMem(0xad1, { 0xb7, 0xd0 });
        gbc.writeMem(0x317e, { 0xe1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xad3, gbc.sp());
        EXPECT(0x317f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0156
        gbc.setState(0xa2d1, 0xa819, 0x3410, 0x8cca, 0x499c, 0xdd43, 0x0, 0x1);
        gbc.writeMem(0xa2d1, { 0xe1 });
        gbc.writeMem(0xa819, { 0xa1, 0xa1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa81b, gbc.sp());
        EXPECT(0xa2d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa2d1));
        EXPECT(0xa1, gbc.readMem(0xa819));
        EXPECT(0xa1, gbc.readMem(0xa81a));
        // E1 0157
        gbc.setState(0x6273, 0x3eeb, 0x29b0, 0x576b, 0x1d31, 0x9095, 0x1, 0x1);
        gbc.writeMem(0x3eeb, { 0xfe, 0xa9 });
        gbc.writeMem(0x6273, { 0xe1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3eed, gbc.sp());
        EXPECT(0x6274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0158
        gbc.setState(0xd22c, 0x5b46, 0xbab0, 0x718c, 0x88a, 0x5ea2, 0x1, 0x0);
        gbc.writeMem(0x5b46, { 0x3, 0xbc });
        gbc.writeMem(0xd22c, { 0xe1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5b48, gbc.sp());
        EXPECT(0xd22d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd22c));
        // E1 0159
        gbc.setState(0x94c1, 0x75ed, 0x350, 0x2c47, 0xfc11, 0x6d00, 0x0, 0x1);
        gbc.writeMem(0x75ed, { 0x67, 0xae });
        gbc.writeMem(0x94c1, { 0xe1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x75ef, gbc.sp());
        EXPECT(0x94c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x94c1));
        // E1 015A
        gbc.setState(0xae84, 0x7160, 0xd190, 0x59c1, 0x5040, 0x45b3, 0x0, 0x1);
        gbc.writeMem(0x7160, { 0x7c, 0xc8 });
        gbc.writeMem(0xae84, { 0xe1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7162, gbc.sp());
        EXPECT(0xae85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xae84));
        // E1 015B
        gbc.setState(0x39ca, 0xca94, 0x4ca0, 0x346d, 0x872b, 0xb8d2, 0x1, 0x1);
        gbc.writeMem(0x39ca, { 0xe1 });
        gbc.writeMem(0xca94, { 0x66, 0xbb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xca96, gbc.sp());
        EXPECT(0x39cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xca94));
        EXPECT(0xbb, gbc.readMem(0xca95));
        // E1 015C
        gbc.setState(0x32e5, 0xce8c, 0x7b60, 0x7fdd, 0x432b, 0x637e, 0x0, 0x1);
        gbc.writeMem(0x32e5, { 0xe1 });
        gbc.writeMem(0xce8c, { 0xe7, 0x6a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xce8e, gbc.sp());
        EXPECT(0x32e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xce8c));
        EXPECT(0x6a, gbc.readMem(0xce8d));
        // E1 015D
        gbc.setState(0xb55b, 0xd1a6, 0xffd0, 0x9217, 0xa726, 0x6151, 0x0, 0x1);
        gbc.writeMem(0xb55b, { 0xe1 });
        gbc.writeMem(0xd1a6, { 0xc2, 0xb9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd1a8, gbc.sp());
        EXPECT(0xb55c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb55b));
        EXPECT(0xc2, gbc.readMem(0xd1a6));
        EXPECT(0xb9, gbc.readMem(0xd1a7));
        // E1 015E
        gbc.setState(0xae30, 0xbe01, 0x11f0, 0x4f8e, 0x973c, 0x14ac, 0x1, 0x0);
        gbc.writeMem(0xae30, { 0xe1 });
        gbc.writeMem(0xbe01, { 0xda, 0xb3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbe03, gbc.sp());
        EXPECT(0xae31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xae30));
        EXPECT(0xda, gbc.readMem(0xbe01));
        EXPECT(0xb3, gbc.readMem(0xbe02));
        // E1 015F
        gbc.setState(0x5f56, 0x6a0a, 0x98e0, 0x763, 0x8bb0, 0xeb6c, 0x0, 0x0);
        gbc.writeMem(0x5f56, { 0xe1 });
        gbc.writeMem(0x6a0a, { 0xf0, 0x58 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6a0c, gbc.sp());
        EXPECT(0x5f57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0161
        gbc.setState(0x5d38, 0x6a7, 0xb0c0, 0xb52, 0x563d, 0x3182, 0x0, 0x1);
        gbc.writeMem(0x6a7, { 0x2f, 0x30 });
        gbc.writeMem(0x5d38, { 0xe1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6a9, gbc.sp());
        EXPECT(0x5d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0162
        gbc.setState(0x9561, 0xfdc3, 0x5e80, 0xbe61, 0x9d89, 0x6955, 0x1, 0x1);
        gbc.writeMem(0x9561, { 0xe1 });
        gbc.writeMem(0xfdc3, { 0xe0, 0x1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfdc5, gbc.sp());
        EXPECT(0x9562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9561));
        EXPECT(0xe0, gbc.readMem(0xfdc3));
        EXPECT(0x1, gbc.readMem(0xfdc4));
        // E1 0163
        gbc.setState(0xe88a, 0xfeef, 0xf3c0, 0xe0bc, 0xf9e6, 0x6274, 0x0, 0x1);
        gbc.writeMem(0xe88a, { 0xe1 });
        gbc.writeMem(0xfeef, { 0xda, 0x35 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xfef1, gbc.sp());
        EXPECT(0xe88b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe88a));
        EXPECT(0xda, gbc.readMem(0xfeef));
        EXPECT(0x35, gbc.readMem(0xfef0));
        // E1 0165
        gbc.setState(0x6393, 0x6595, 0x4320, 0x62b9, 0x5f7, 0xb464, 0x0, 0x1);
        gbc.writeMem(0x6393, { 0xe1 });
        gbc.writeMem(0x6595, { 0x33, 0x1a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6597, gbc.sp());
        EXPECT(0x6394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0166
        gbc.setState(0xc6bc, 0xbc2b, 0xb990, 0x1967, 0x41b1, 0x50b8, 0x0, 0x1);
        gbc.writeMem(0xbc2b, { 0x67, 0x76 });
        gbc.writeMem(0xc6bc, { 0xe1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbc2d, gbc.sp());
        EXPECT(0xc6bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xbc2b));
        EXPECT(0x76, gbc.readMem(0xbc2c));
        EXPECT(0xe1, gbc.readMem(0xc6bc));
        // E1 0167
        gbc.setState(0x1e61, 0x61e4, 0x2ce0, 0xfe1d, 0x4e96, 0x9116, 0x0, 0x0);
        gbc.writeMem(0x1e61, { 0xe1 });
        gbc.writeMem(0x61e4, { 0x8b, 0xdc });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x61e6, gbc.sp());
        EXPECT(0x1e62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0168
        gbc.setState(0xa505, 0x224e, 0x8440, 0xeafb, 0x1cac, 0x2520, 0x1, 0x1);
        gbc.writeMem(0x224e, { 0xba, 0x78 });
        gbc.writeMem(0xa505, { 0xe1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2250, gbc.sp());
        EXPECT(0xa506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa505));
        // E1 0169
        gbc.setState(0x8476, 0xee05, 0xf5b0, 0xad03, 0xa96a, 0x429b, 0x1, 0x1);
        gbc.writeMem(0x8476, { 0xe1 });
        gbc.writeMem(0xee05, { 0x51, 0xfd });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xee07, gbc.sp());
        EXPECT(0x8477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8476));
        EXPECT(0x51, gbc.readMem(0xee05));
        EXPECT(0xfd, gbc.readMem(0xee06));
        // E1 016A
        gbc.setState(0xa9f4, 0xe7af, 0x8f90, 0xa1fc, 0xd8db, 0x39bf, 0x1, 0x1);
        gbc.writeMem(0xa9f4, { 0xe1 });
        gbc.writeMem(0xe7af, { 0x24, 0xed });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe7b1, gbc.sp());
        EXPECT(0xa9f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa9f4));
        EXPECT(0x24, gbc.readMem(0xe7af));
        EXPECT(0xed, gbc.readMem(0xe7b0));
        // E1 016B
        gbc.setState(0x3605, 0x3b1e, 0x23f0, 0xb640, 0x32e1, 0xb8ae, 0x1, 0x1);
        gbc.writeMem(0x3605, { 0xe1 });
        gbc.writeMem(0x3b1e, { 0xfd, 0x8f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3b20, gbc.sp());
        EXPECT(0x3606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 016C
        gbc.setState(0x6a0c, 0x8df2, 0x4720, 0x9b3c, 0xd7f7, 0x4b87, 0x0, 0x0);
        gbc.writeMem(0x6a0c, { 0xe1 });
        gbc.writeMem(0x8df2, { 0x96, 0xca });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8df4, gbc.sp());
        EXPECT(0x6a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x8df2));
        EXPECT(0xca, gbc.readMem(0x8df3));
        // E1 016D
        gbc.setState(0x13cc, 0xc485, 0xe460, 0x305c, 0x7f12, 0x3614, 0x1, 0x1);
        gbc.writeMem(0x13cc, { 0xe1 });
        gbc.writeMem(0xc485, { 0x76, 0x9e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc487, gbc.sp());
        EXPECT(0x13cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc485));
        EXPECT(0x9e, gbc.readMem(0xc486));
        // E1 016E
        gbc.setState(0x656d, 0xad1d, 0xaf70, 0x1480, 0x5c44, 0x35f1, 0x0, 0x1);
        gbc.writeMem(0x656d, { 0xe1 });
        gbc.writeMem(0xad1d, { 0xd6, 0x7d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xad1f, gbc.sp());
        EXPECT(0x656e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xad1d));
        EXPECT(0x7d, gbc.readMem(0xad1e));
        // E1 016F
        gbc.setState(0x76e0, 0x7c62, 0x5c40, 0x38d0, 0x48de, 0x5aa, 0x1, 0x0);
        gbc.writeMem(0x76e0, { 0xe1 });
        gbc.writeMem(0x7c62, { 0xf9, 0xe8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7c64, gbc.sp());
        EXPECT(0x76e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0170
        gbc.setState(0xb06f, 0x7551, 0xb9e0, 0x6150, 0x9024, 0xca10, 0x0, 0x0);
        gbc.writeMem(0x7551, { 0x7e, 0x2f });
        gbc.writeMem(0xb06f, { 0xe1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7553, gbc.sp());
        EXPECT(0xb070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb06f));
        // E1 0171
        gbc.setState(0x4470, 0xab06, 0xb0a0, 0x2b3, 0xa522, 0xe7fe, 0x1, 0x1);
        gbc.writeMem(0x4470, { 0xe1 });
        gbc.writeMem(0xab06, { 0x58, 0x7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xab08, gbc.sp());
        EXPECT(0x4471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xab06));
        EXPECT(0x7, gbc.readMem(0xab07));
        // E1 0172
        gbc.setState(0xe9c1, 0x8a79, 0x7270, 0x9b2c, 0xf6b2, 0x8779, 0x1, 0x1);
        gbc.writeMem(0x8a79, { 0x51, 0x71 });
        gbc.writeMem(0xe9c1, { 0xe1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8a7b, gbc.sp());
        EXPECT(0xe9c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8a79));
        EXPECT(0x71, gbc.readMem(0x8a7a));
        EXPECT(0xe1, gbc.readMem(0xe9c1));
        // E1 0173
        gbc.setState(0xc9c7, 0xb8bd, 0x82e0, 0x8a38, 0xb97f, 0x79e5, 0x1, 0x1);
        gbc.writeMem(0xb8bd, { 0x38, 0xc });
        gbc.writeMem(0xc9c7, { 0xe1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb8bf, gbc.sp());
        EXPECT(0xc9c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb8bd));
        EXPECT(0xc, gbc.readMem(0xb8be));
        EXPECT(0xe1, gbc.readMem(0xc9c7));
        // E1 0174
        gbc.setState(0xbbcf, 0xcecd, 0xae20, 0x15ca, 0x7ce2, 0x6ffd, 0x0, 0x1);
        gbc.writeMem(0xbbcf, { 0xe1 });
        gbc.writeMem(0xcecd, { 0x45, 0x5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcecf, gbc.sp());
        EXPECT(0xbbd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xbbcf));
        EXPECT(0x45, gbc.readMem(0xcecd));
        EXPECT(0x5, gbc.readMem(0xcece));
        // E1 0175
        gbc.setState(0x9ef1, 0xf949, 0x8430, 0xc30b, 0x2f44, 0xbb35, 0x1, 0x0);
        gbc.writeMem(0x9ef1, { 0xe1 });
        gbc.writeMem(0xf949, { 0x92, 0x5c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf94b, gbc.sp());
        EXPECT(0x9ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9ef1));
        EXPECT(0x92, gbc.readMem(0xf949));
        EXPECT(0x5c, gbc.readMem(0xf94a));
        // E1 0176
        gbc.setState(0xbd37, 0xbd11, 0x4930, 0xdbc1, 0x2825, 0x962f, 0x1, 0x1);
        gbc.writeMem(0xbd11, { 0xc9, 0xf9 });
        gbc.writeMem(0xbd37, { 0xe1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbd13, gbc.sp());
        EXPECT(0xbd38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xbd11));
        EXPECT(0xf9, gbc.readMem(0xbd12));
        EXPECT(0xe1, gbc.readMem(0xbd37));
        // E1 0177
        gbc.setState(0x8746, 0xc169, 0x5390, 0x4489, 0x7ac8, 0x6dc8, 0x1, 0x1);
        gbc.writeMem(0x8746, { 0xe1 });
        gbc.writeMem(0xc169, { 0x41, 0x4b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc16b, gbc.sp());
        EXPECT(0x8747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8746));
        EXPECT(0x41, gbc.readMem(0xc169));
        EXPECT(0x4b, gbc.readMem(0xc16a));
        // E1 0178
        gbc.setState(0xaaf2, 0xcedf, 0x81e0, 0xe5f7, 0xf46f, 0x7c5, 0x1, 0x1);
        gbc.writeMem(0xaaf2, { 0xe1 });
        gbc.writeMem(0xcedf, { 0xd9, 0xd1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xcee1, gbc.sp());
        EXPECT(0xaaf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xaaf2));
        EXPECT(0xd9, gbc.readMem(0xcedf));
        EXPECT(0xd1, gbc.readMem(0xcee0));
        // E1 0179
        gbc.setState(0x2eec, 0xc29c, 0x4130, 0x73b, 0xa173, 0x8028, 0x0, 0x0);
        gbc.writeMem(0x2eec, { 0xe1 });
        gbc.writeMem(0xc29c, { 0x76, 0x52 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc29e, gbc.sp());
        EXPECT(0x2eed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc29c));
        EXPECT(0x52, gbc.readMem(0xc29d));
        // E1 017A
        gbc.setState(0x5557, 0x6f02, 0xdc0, 0xff4f, 0x1117, 0x1f64, 0x0, 0x0);
        gbc.writeMem(0x5557, { 0xe1 });
        gbc.writeMem(0x6f02, { 0x69, 0x37 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6f04, gbc.sp());
        EXPECT(0x5558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 017B
        gbc.setState(0xe7fc, 0xe58c, 0xb8c0, 0xc23a, 0x1c33, 0xb658, 0x0, 0x1);
        gbc.writeMem(0xe58c, { 0x3c, 0xe6 });
        gbc.writeMem(0xe7fc, { 0xe1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe58e, gbc.sp());
        EXPECT(0xe7fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe58c));
        EXPECT(0xe6, gbc.readMem(0xe58d));
        EXPECT(0xe1, gbc.readMem(0xe7fc));
        // E1 017C
        gbc.setState(0xa37a, 0x3a31, 0x41c0, 0x55f, 0xe54e, 0xabda, 0x1, 0x0);
        gbc.writeMem(0x3a31, { 0x70, 0x77 });
        gbc.writeMem(0xa37a, { 0xe1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3a33, gbc.sp());
        EXPECT(0xa37b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa37a));
        // E1 017E
        gbc.setState(0x4c82, 0xa8ff, 0xc110, 0x1bc8, 0x6396, 0x6a8a, 0x0, 0x1);
        gbc.writeMem(0x4c82, { 0xe1 });
        gbc.writeMem(0xa8ff, { 0x68, 0x18 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa901, gbc.sp());
        EXPECT(0x4c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa8ff));
        EXPECT(0x18, gbc.readMem(0xa900));
        // E1 017F
        gbc.setState(0x17f2, 0x10a0, 0x25d0, 0xc64c, 0x4d20, 0x42c8, 0x0, 0x1);
        gbc.writeMem(0x10a0, { 0x7c, 0x14 });
        gbc.writeMem(0x17f2, { 0xe1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x10a2, gbc.sp());
        EXPECT(0x17f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0180
        gbc.setState(0x2f6e, 0xa3de, 0x85f0, 0x2598, 0x6d75, 0x7d2d, 0x1, 0x0);
        gbc.writeMem(0x2f6e, { 0xe1 });
        gbc.writeMem(0xa3de, { 0xf3, 0x7f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa3e0, gbc.sp());
        EXPECT(0x2f6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xa3de));
        EXPECT(0x7f, gbc.readMem(0xa3df));
        // E1 0181
        gbc.setState(0x3d5d, 0x39a1, 0x8320, 0xed8f, 0xfdae, 0x54ab, 0x1, 0x1);
        gbc.writeMem(0x39a1, { 0xdc, 0xc0 });
        gbc.writeMem(0x3d5d, { 0xe1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x39a3, gbc.sp());
        EXPECT(0x3d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0182
        gbc.setState(0xace1, 0xaa40, 0x9570, 0xa900, 0x68f, 0x96ea, 0x1, 0x0);
        gbc.writeMem(0xaa40, { 0x29, 0xe3 });
        gbc.writeMem(0xace1, { 0xe1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xaa42, gbc.sp());
        EXPECT(0xace2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xaa40));
        EXPECT(0xe3, gbc.readMem(0xaa41));
        EXPECT(0xe1, gbc.readMem(0xace1));
        // E1 0183
        gbc.setState(0x235b, 0x1d5e, 0x730, 0x53fc, 0x7bed, 0xfd6f, 0x1, 0x1);
        gbc.writeMem(0x1d5e, { 0x47, 0x66 });
        gbc.writeMem(0x235b, { 0xe1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1d60, gbc.sp());
        EXPECT(0x235c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0185
        gbc.setState(0x5f28, 0x39af, 0x3590, 0x8c1f, 0x7d6, 0xdfcb, 0x1, 0x0);
        gbc.writeMem(0x39af, { 0xd4, 0xf2 });
        gbc.writeMem(0x5f28, { 0xe1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x39b1, gbc.sp());
        EXPECT(0x5f29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0186
        gbc.setState(0x4ef8, 0x130c, 0x3c90, 0xfb14, 0x70fc, 0x5eac, 0x1, 0x0);
        gbc.writeMem(0x130c, { 0x5b, 0x65 });
        gbc.writeMem(0x4ef8, { 0xe1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x130e, gbc.sp());
        EXPECT(0x4ef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0188
        gbc.setState(0x54bb, 0xee9d, 0xc3b0, 0x7aec, 0x59b, 0xfdfb, 0x0, 0x0);
        gbc.writeMem(0x54bb, { 0xe1 });
        gbc.writeMem(0xee9d, { 0x89, 0xe2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xee9f, gbc.sp());
        EXPECT(0x54bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xee9d));
        EXPECT(0xe2, gbc.readMem(0xee9e));
        // E1 0189
        gbc.setState(0xacf3, 0x656b, 0xa640, 0x9ff0, 0x8917, 0xa3c7, 0x0, 0x1);
        gbc.writeMem(0x656b, { 0x1d, 0xd2 });
        gbc.writeMem(0xacf3, { 0xe1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x656d, gbc.sp());
        EXPECT(0xacf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xacf3));
        // E1 018A
        gbc.setState(0xedc2, 0xaf6, 0x3a60, 0x3160, 0x96fd, 0x622a, 0x0, 0x1);
        gbc.writeMem(0xaf6, { 0x43, 0x42 });
        gbc.writeMem(0xedc2, { 0xe1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xaf8, gbc.sp());
        EXPECT(0xedc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xedc2));
        // E1 018B
        gbc.setState(0x7847, 0x8151, 0xaa40, 0x1c44, 0xddd8, 0xd8a9, 0x0, 0x0);
        gbc.writeMem(0x7847, { 0xe1 });
        gbc.writeMem(0x8151, { 0xb4, 0x10 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8153, gbc.sp());
        EXPECT(0x7848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x8151));
        EXPECT(0x10, gbc.readMem(0x8152));
        // E1 018C
        gbc.setState(0xb5a8, 0xa1bc, 0xd350, 0x472b, 0x42ff, 0x2a6d, 0x0, 0x1);
        gbc.writeMem(0xa1bc, { 0xeb, 0x95 });
        gbc.writeMem(0xb5a8, { 0xe1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa1be, gbc.sp());
        EXPECT(0xb5a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xa1bc));
        EXPECT(0x95, gbc.readMem(0xa1bd));
        EXPECT(0xe1, gbc.readMem(0xb5a8));
        // E1 018D
        gbc.setState(0x8ea3, 0xc2eb, 0x56b0, 0xfccc, 0x2cbd, 0x8ed6, 0x0, 0x0);
        gbc.writeMem(0x8ea3, { 0xe1 });
        gbc.writeMem(0xc2eb, { 0xe7, 0xc7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc2ed, gbc.sp());
        EXPECT(0x8ea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8ea3));
        EXPECT(0xe7, gbc.readMem(0xc2eb));
        EXPECT(0xc7, gbc.readMem(0xc2ec));
        // E1 018E
        gbc.setState(0x58a1, 0xa607, 0xe640, 0x55ca, 0xb011, 0x5ea4, 0x1, 0x1);
        gbc.writeMem(0x58a1, { 0xe1 });
        gbc.writeMem(0xa607, { 0x49, 0x24 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa609, gbc.sp());
        EXPECT(0x58a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa607));
        EXPECT(0x24, gbc.readMem(0xa608));
        // E1 018F
        gbc.setState(0x7250, 0x8e90, 0xf10, 0x7f75, 0xba8f, 0x3e41, 0x1, 0x1);
        gbc.writeMem(0x7250, { 0xe1 });
        gbc.writeMem(0x8e90, { 0xa2, 0xc2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8e92, gbc.sp());
        EXPECT(0x7251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8e90));
        EXPECT(0xc2, gbc.readMem(0x8e91));
        // E1 0190
        gbc.setState(0x19f3, 0xaa53, 0x2ae0, 0x98ed, 0x1398, 0xe3b2, 0x0, 0x0);
        gbc.writeMem(0x19f3, { 0xe1 });
        gbc.writeMem(0xaa53, { 0xd5, 0xd7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xaa55, gbc.sp());
        EXPECT(0x19f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xaa53));
        EXPECT(0xd7, gbc.readMem(0xaa54));
        // E1 0192
        gbc.setState(0x3c8b, 0xca73, 0xa5d0, 0xb611, 0x6abd, 0x415e, 0x1, 0x0);
        gbc.writeMem(0x3c8b, { 0xe1 });
        gbc.writeMem(0xca73, { 0x75, 0xbb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xca75, gbc.sp());
        EXPECT(0x3c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xca73));
        EXPECT(0xbb, gbc.readMem(0xca74));
        // E1 0193
        gbc.setState(0xd670, 0x5ad9, 0xe8d0, 0x6337, 0xbeff, 0x6ec8, 0x1, 0x1);
        gbc.writeMem(0x5ad9, { 0xde, 0x12 });
        gbc.writeMem(0xd670, { 0xe1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5adb, gbc.sp());
        EXPECT(0xd671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd670));
        // E1 0194
        gbc.setState(0x162e, 0x4a0, 0xd7e0, 0x45bd, 0x1be1, 0x4824, 0x0, 0x1);
        gbc.writeMem(0x4a0, { 0x9c, 0xdd });
        gbc.writeMem(0x162e, { 0xe1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4a2, gbc.sp());
        EXPECT(0x162f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0195
        gbc.setState(0x7fe6, 0xde2a, 0x1c20, 0xa342, 0xbe2b, 0x7763, 0x1, 0x0);
        gbc.writeMem(0x7fe6, { 0xe1 });
        gbc.writeMem(0xde2a, { 0x1e, 0x58 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xde2c, gbc.sp());
        EXPECT(0x7fe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xde2a));
        EXPECT(0x58, gbc.readMem(0xde2b));
        // E1 0196
        gbc.setState(0x28cc, 0xd6f2, 0x580, 0xfd79, 0xbde0, 0xd7b6, 0x1, 0x1);
        gbc.writeMem(0x28cc, { 0xe1 });
        gbc.writeMem(0xd6f2, { 0x57, 0xa2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd6f4, gbc.sp());
        EXPECT(0x28cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd6f2));
        EXPECT(0xa2, gbc.readMem(0xd6f3));
        // E1 0198
        gbc.setState(0x9f95, 0x8c9a, 0x4d70, 0xd83e, 0x228, 0xef9a, 0x0, 0x0);
        gbc.writeMem(0x8c9a, { 0xec, 0x3d });
        gbc.writeMem(0x9f95, { 0xe1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8c9c, gbc.sp());
        EXPECT(0x9f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x8c9a));
        EXPECT(0x3d, gbc.readMem(0x8c9b));
        EXPECT(0xe1, gbc.readMem(0x9f95));
        // E1 0199
        gbc.setState(0x9e4d, 0x783a, 0x8560, 0x412c, 0x4d37, 0x7e07, 0x0, 0x1);
        gbc.writeMem(0x783a, { 0x53, 0xe5 });
        gbc.writeMem(0x9e4d, { 0xe1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x783c, gbc.sp());
        EXPECT(0x9e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9e4d));
        // E1 019A
        gbc.setState(0x70f0, 0x2c91, 0xe8c0, 0x5148, 0x453d, 0x7baa, 0x1, 0x1);
        gbc.writeMem(0x2c91, { 0x17, 0xeb });
        gbc.writeMem(0x70f0, { 0xe1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2c93, gbc.sp());
        EXPECT(0x70f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 019B
        gbc.setState(0x9913, 0x5169, 0xc980, 0x7fd9, 0xd72e, 0xb646, 0x0, 0x1);
        gbc.writeMem(0x5169, { 0xc9, 0xd3 });
        gbc.writeMem(0x9913, { 0xe1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x516b, gbc.sp());
        EXPECT(0x9914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9913));
        // E1 019C
        gbc.setState(0xd0fd, 0x5437, 0x10b0, 0x853f, 0x8ea6, 0x2379, 0x0, 0x1);
        gbc.writeMem(0x5437, { 0xa6, 0x98 });
        gbc.writeMem(0xd0fd, { 0xe1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5439, gbc.sp());
        EXPECT(0xd0fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd0fd));
        // E1 019D
        gbc.setState(0x82d0, 0xce8e, 0x6710, 0xbd7d, 0xf2b3, 0xf7ee, 0x1, 0x0);
        gbc.writeMem(0x82d0, { 0xe1 });
        gbc.writeMem(0xce8e, { 0xab, 0x15 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xce90, gbc.sp());
        EXPECT(0x82d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x82d0));
        EXPECT(0xab, gbc.readMem(0xce8e));
        EXPECT(0x15, gbc.readMem(0xce8f));
        // E1 019F
        gbc.setState(0x8bdc, 0xd890, 0xb380, 0xf1f2, 0x273, 0xf41b, 0x0, 0x0);
        gbc.writeMem(0x8bdc, { 0xe1 });
        gbc.writeMem(0xd890, { 0xac, 0xc4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd892, gbc.sp());
        EXPECT(0x8bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8bdc));
        EXPECT(0xac, gbc.readMem(0xd890));
        EXPECT(0xc4, gbc.readMem(0xd891));
        // E1 01A0
        gbc.setState(0xe83, 0xa79, 0xd80, 0xa61f, 0x13b8, 0x4801, 0x1, 0x1);
        gbc.writeMem(0xa79, { 0xcd, 0x3 });
        gbc.writeMem(0xe83, { 0xe1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa7b, gbc.sp());
        EXPECT(0xe84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 01A1
        gbc.setState(0xee15, 0x77d2, 0xe780, 0x8784, 0x3594, 0x3824, 0x0, 0x1);
        gbc.writeMem(0x77d2, { 0x3a, 0xf8 });
        gbc.writeMem(0xee15, { 0xe1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x77d4, gbc.sp());
        EXPECT(0xee16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xee15));
        // E1 01A2
        gbc.setState(0x8c9d, 0x8d0a, 0xe870, 0x6be1, 0x414d, 0x595, 0x0, 0x0);
        gbc.writeMem(0x8c9d, { 0xe1 });
        gbc.writeMem(0x8d0a, { 0xc1, 0x8b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8d0c, gbc.sp());
        EXPECT(0x8c9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8c9d));
        EXPECT(0xc1, gbc.readMem(0x8d0a));
        EXPECT(0x8b, gbc.readMem(0x8d0b));
        // E1 01A3
        gbc.setState(0xcbd7, 0xd631, 0x54f0, 0xc6fb, 0x7bba, 0x8869, 0x1, 0x1);
        gbc.writeMem(0xcbd7, { 0xe1 });
        gbc.writeMem(0xd631, { 0x5d, 0x6a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd633, gbc.sp());
        EXPECT(0xcbd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xcbd7));
        EXPECT(0x5d, gbc.readMem(0xd631));
        EXPECT(0x6a, gbc.readMem(0xd632));
        // E1 01A5
        gbc.setState(0xc282, 0x521e, 0x3510, 0x3150, 0x3b40, 0xc885, 0x0, 0x1);
        gbc.writeMem(0x521e, { 0x66, 0x88 });
        gbc.writeMem(0xc282, { 0xe1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5220, gbc.sp());
        EXPECT(0xc283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc282));
        // E1 01A6
        gbc.setState(0x675c, 0x5782, 0xc280, 0x5ddd, 0x3f40, 0xbbbe, 0x1, 0x1);
        gbc.writeMem(0x5782, { 0x3b, 0x0 });
        gbc.writeMem(0x675c, { 0xe1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5784, gbc.sp());
        EXPECT(0x675d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 01A9
        gbc.setState(0xbad0, 0xbbe9, 0xb360, 0x96d7, 0x689a, 0x4a96, 0x0, 0x1);
        gbc.writeMem(0xbad0, { 0xe1 });
        gbc.writeMem(0xbbe9, { 0xf3, 0x16 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xbbeb, gbc.sp());
        EXPECT(0xbad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xbad0));
        EXPECT(0xf3, gbc.readMem(0xbbe9));
        EXPECT(0x16, gbc.readMem(0xbbea));
        // E1 01AA
        gbc.setState(0xcac7, 0x1820, 0x57a0, 0x18c8, 0x110, 0x38be, 0x0, 0x1);
        gbc.writeMem(0x1820, { 0xba, 0xae });
        gbc.writeMem(0xcac7, { 0xe1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1822, gbc.sp());
        EXPECT(0xcac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xcac7));
        // E1 01AB
        gbc.setState(0xa13e, 0x3157, 0x4680, 0x3ec8, 0x5941, 0xe913, 0x1, 0x1);
        gbc.writeMem(0x3157, { 0xd5, 0xd7 });
        gbc.writeMem(0xa13e, { 0xe1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3159, gbc.sp());
        EXPECT(0xa13f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa13e));
        // E1 01AC
        gbc.setState(0x8c58, 0x9641, 0x9d30, 0x715c, 0x6b28, 0xa142, 0x1, 0x0);
        gbc.writeMem(0x8c58, { 0xe1 });
        gbc.writeMem(0x9641, { 0x37, 0x90 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9643, gbc.sp());
        EXPECT(0x8c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8c58));
        EXPECT(0x37, gbc.readMem(0x9641));
        EXPECT(0x90, gbc.readMem(0x9642));
        // E1 01AD
        gbc.setState(0x15c5, 0x378f, 0x5450, 0x3867, 0xd75e, 0xcbbe, 0x0, 0x0);
        gbc.writeMem(0x15c5, { 0xe1 });
        gbc.writeMem(0x378f, { 0xea, 0x98 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3791, gbc.sp());
        EXPECT(0x15c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 01AE
        gbc.setState(0xd9e0, 0xdcb1, 0x5070, 0x5555, 0x2590, 0x85f5, 0x1, 0x0);
        gbc.writeMem(0xd9e0, { 0xe1 });
        gbc.writeMem(0xdcb1, { 0xe8, 0x4f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdcb3, gbc.sp());
        EXPECT(0xd9e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd9e0));
        EXPECT(0xe8, gbc.readMem(0xdcb1));
        EXPECT(0x4f, gbc.readMem(0xdcb2));
        // E1 01AF
        gbc.setState(0xd40d, 0xce5e, 0x7330, 0x2087, 0x7090, 0xb4d2, 0x0, 0x0);
        gbc.writeMem(0xce5e, { 0x66, 0x25 });
        gbc.writeMem(0xd40d, { 0xe1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xce60, gbc.sp());
        EXPECT(0xd40e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xce5e));
        EXPECT(0x25, gbc.readMem(0xce5f));
        EXPECT(0xe1, gbc.readMem(0xd40d));
        // E1 01B0
        gbc.setState(0x19bf, 0xc348, 0x33b0, 0x285e, 0xd153, 0x9278, 0x0, 0x0);
        gbc.writeMem(0x19bf, { 0xe1 });
        gbc.writeMem(0xc348, { 0xd6, 0xe6 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc34a, gbc.sp());
        EXPECT(0x19c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc348));
        EXPECT(0xe6, gbc.readMem(0xc349));
        // E1 01B1
        gbc.setState(0x5921, 0x6e6a, 0x9750, 0xf578, 0x8bb4, 0x9cb7, 0x1, 0x1);
        gbc.writeMem(0x5921, { 0xe1 });
        gbc.writeMem(0x6e6a, { 0xa8, 0x51 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6e6c, gbc.sp());
        EXPECT(0x5922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 01B2
        gbc.setState(0x7016, 0x26b0, 0xb470, 0xb8da, 0xc6ce, 0x2a42, 0x0, 0x1);
        gbc.writeMem(0x26b0, { 0x9, 0x1e });
        gbc.writeMem(0x7016, { 0xe1 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x26b2, gbc.sp());
        EXPECT(0x7017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 01B3
        gbc.setState(0x7b35, 0xc91b, 0xac20, 0xe735, 0x2b73, 0x8a26, 0x1, 0x0);
        gbc.writeMem(0x7b35, { 0xe1 });
        gbc.writeMem(0xc91b, { 0x83, 0x40 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc91d, gbc.sp());
        EXPECT(0x7b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xc91b));
        EXPECT(0x40, gbc.readMem(0xc91c));
        // E1 01B5
        gbc.setState(0x52c, 0x8549, 0x3930, 0x470c, 0x3fce, 0x90e3, 0x1, 0x1);
        gbc.writeMem(0x52c, { 0xe1 });
        gbc.writeMem(0x8549, { 0xa8, 0xf9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x854b, gbc.sp());
        EXPECT(0x52d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0x8549));
        EXPECT(0xf9, gbc.readMem(0x854a));
        // E1 01B6
        gbc.setState(0xc3f0, 0x3a52, 0xe950, 0xb2b3, 0xcbc3, 0xe75d, 0x1, 0x0);
        gbc.writeMem(0x3a52, { 0x17, 0x42 });
        gbc.writeMem(0xc3f0, { 0xe1 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3a54, gbc.sp());
        EXPECT(0xc3f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc3f0));
        // E1 01B7
        gbc.setState(0xe31f, 0x44e0, 0x4d10, 0x4bef, 0x182f, 0x95be, 0x1, 0x0);
        gbc.writeMem(0x44e0, { 0x78, 0xe4 });
        gbc.writeMem(0xe31f, { 0xe1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x44e2, gbc.sp());
        EXPECT(0xe320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe31f));
        // E1 01B8
        gbc.setState(0xc891, 0x33c5, 0x8220, 0x7b62, 0x9dc5, 0x3c0f, 0x1, 0x1);
        gbc.writeMem(0x33c5, { 0xe2, 0xf5 });
        gbc.writeMem(0xc891, { 0xe1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x33c7, gbc.sp());
        EXPECT(0xc892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc891));
        // E1 01B9
        gbc.setState(0x2e26, 0xe036, 0xcac0, 0x74a5, 0x25e9, 0x4f9f, 0x0, 0x1);
        gbc.writeMem(0x2e26, { 0xe1 });
        gbc.writeMem(0xe036, { 0xd6, 0x5c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe038, gbc.sp());
        EXPECT(0x2e27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe036));
        EXPECT(0x5c, gbc.readMem(0xe037));
        // E1 01BA
        gbc.setState(0x6036, 0x6985, 0x4730, 0x718e, 0xe45b, 0xb3e6, 0x1, 0x1);
        gbc.writeMem(0x6036, { 0xe1 });
        gbc.writeMem(0x6985, { 0x54, 0x9c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6987, gbc.sp());
        EXPECT(0x6037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 01BB
        gbc.setState(0xb287, 0x275c, 0xcd90, 0x1fbe, 0x8db, 0x9356, 0x1, 0x0);
        gbc.writeMem(0x275c, { 0x8e, 0x97 });
        gbc.writeMem(0xb287, { 0xe1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x275e, gbc.sp());
        EXPECT(0xb288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb287));
        // E1 01BC
        gbc.setState(0x83ca, 0x7aac, 0x7410, 0x83fa, 0x4e6a, 0xce31, 0x1, 0x1);
        gbc.writeMem(0x7aac, { 0x8e, 0xd1 });
        gbc.writeMem(0x83ca, { 0xe1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7aae, gbc.sp());
        EXPECT(0x83cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x83ca));
        // E1 01BD
        gbc.setState(0xbe98, 0xae29, 0x5150, 0x65de, 0x74de, 0xc2c3, 0x0, 0x1);
        gbc.writeMem(0xae29, { 0x34, 0xe8 });
        gbc.writeMem(0xbe98, { 0xe1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xae2b, gbc.sp());
        EXPECT(0xbe99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xae29));
        EXPECT(0xe8, gbc.readMem(0xae2a));
        EXPECT(0xe1, gbc.readMem(0xbe98));
        // E1 01BE
        gbc.setState(0x5426, 0x93c8, 0x2510, 0xf31a, 0x9f7d, 0x80c4, 0x0, 0x0);
        gbc.writeMem(0x5426, { 0xe1 });
        gbc.writeMem(0x93c8, { 0xef, 0xbf });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x93ca, gbc.sp());
        EXPECT(0x5427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x93c8));
        EXPECT(0xbf, gbc.readMem(0x93c9));
        // E1 01C0
        gbc.setState(0x6b95, 0x26bc, 0x53a0, 0xe8e6, 0x1230, 0x98a0, 0x0, 0x0);
        gbc.writeMem(0x26bc, { 0xfe, 0x2d });
        gbc.writeMem(0x6b95, { 0xe1 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x26be, gbc.sp());
        EXPECT(0x6b96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 01C1
        gbc.setState(0x49f3, 0xf643, 0x9380, 0x14d4, 0x418, 0xed37, 0x1, 0x0);
        gbc.writeMem(0x49f3, { 0xe1 });
        gbc.writeMem(0xf643, { 0xf3, 0x23 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf645, gbc.sp());
        EXPECT(0x49f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xf643));
        EXPECT(0x23, gbc.readMem(0xf644));
        // E1 01C2
        gbc.setState(0x579, 0xdc38, 0x31a0, 0xc1cb, 0x2b04, 0x710d, 0x0, 0x0);
        gbc.writeMem(0x579, { 0xe1 });
        gbc.writeMem(0xdc38, { 0x8e, 0x31 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdc3a, gbc.sp());
        EXPECT(0x57a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xdc38));
        EXPECT(0x31, gbc.readMem(0xdc39));
        // E1 01C3
        gbc.setState(0xa84b, 0x674e, 0x8c0, 0xe93d, 0x9bc7, 0xcc13, 0x1, 0x1);
        gbc.writeMem(0x674e, { 0x18, 0xbc });
        gbc.writeMem(0xa84b, { 0xe1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6750, gbc.sp());
        EXPECT(0xa84c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa84b));
        // E1 01C4
        gbc.setState(0x1c36, 0xf26, 0x48e0, 0x56c1, 0x6d76, 0xdf17, 0x0, 0x0);
        gbc.writeMem(0xf26, { 0x0, 0x2a });
        gbc.writeMem(0x1c36, { 0xe1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf28, gbc.sp());
        EXPECT(0x1c37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 01C5
        gbc.setState(0x8af8, 0x2cff, 0x9e50, 0xae96, 0xd203, 0x801f, 0x1, 0x0);
        gbc.writeMem(0x2cff, { 0x90, 0xe8 });
        gbc.writeMem(0x8af8, { 0xe1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2d01, gbc.sp());
        EXPECT(0x8af9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8af8));
        // E1 01C6
        gbc.setState(0x91d9, 0x763c, 0x5c10, 0xdb11, 0x855, 0x6010, 0x1, 0x0);
        gbc.writeMem(0x763c, { 0x3f, 0x52 });
        gbc.writeMem(0x91d9, { 0xe1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x763e, gbc.sp());
        EXPECT(0x91da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x91d9));
        // E1 01C7
        gbc.setState(0x618a, 0xe825, 0xfb40, 0xb169, 0x5dca, 0x1c06, 0x1, 0x1);
        gbc.writeMem(0x618a, { 0xe1 });
        gbc.writeMem(0xe825, { 0x79, 0xa2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe827, gbc.sp());
        EXPECT(0x618b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe825));
        EXPECT(0xa2, gbc.readMem(0xe826));
        // E1 01C8
        gbc.setState(0x29af, 0x4b75, 0xdf60, 0x5173, 0x648c, 0x9e6f, 0x1, 0x0);
        gbc.writeMem(0x29af, { 0xe1 });
        gbc.writeMem(0x4b75, { 0x1e, 0x9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4b77, gbc.sp());
        EXPECT(0x29b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 01C9
        gbc.setState(0x9ae, 0xb65a, 0x7710, 0xec32, 0x988c, 0xe68f, 0x0, 0x1);
        gbc.writeMem(0x9ae, { 0xe1 });
        gbc.writeMem(0xb65a, { 0x6e, 0xe4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb65c, gbc.sp());
        EXPECT(0x9af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb65a));
        EXPECT(0xe4, gbc.readMem(0xb65b));
        // E1 01CA
        gbc.setState(0x4151, 0xeea2, 0x4110, 0x95d1, 0xb62d, 0x685b, 0x0, 0x0);
        gbc.writeMem(0x4151, { 0xe1 });
        gbc.writeMem(0xeea2, { 0x1e, 0x81 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xeea4, gbc.sp());
        EXPECT(0x4152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xeea2));
        EXPECT(0x81, gbc.readMem(0xeea3));
        // E1 01CB
        gbc.setState(0xc023, 0x446f, 0x1600, 0xce11, 0xcd9c, 0xe97b, 0x1, 0x0);
        gbc.writeMem(0x446f, { 0x80, 0x52 });
        gbc.writeMem(0xc023, { 0xe1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4471, gbc.sp());
        EXPECT(0xc024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc023));
        // E1 01CC
        gbc.setState(0x5ccd, 0xe619, 0xb7a0, 0xeb31, 0x7776, 0x7dd0, 0x0, 0x0);
        gbc.writeMem(0x5ccd, { 0xe1 });
        gbc.writeMem(0xe619, { 0x71, 0x80 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe61b, gbc.sp());
        EXPECT(0x5cce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xe619));
        EXPECT(0x80, gbc.readMem(0xe61a));
        // E1 01CD
        gbc.setState(0xb110, 0x32d0, 0xf7b0, 0x4b2, 0xc524, 0xd3d5, 0x1, 0x0);
        gbc.writeMem(0x32d0, { 0xfe, 0x83 });
        gbc.writeMem(0xb110, { 0xe1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x32d2, gbc.sp());
        EXPECT(0xb111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb110));
        // E1 01CE
        gbc.setState(0x7e4b, 0x30b3, 0xd20, 0x8748, 0xe265, 0x3fa6, 0x0, 0x0);
        gbc.writeMem(0x30b3, { 0x6f, 0x75 });
        gbc.writeMem(0x7e4b, { 0xe1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x30b5, gbc.sp());
        EXPECT(0x7e4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 01CF
        gbc.setState(0x22aa, 0x9bc9, 0xa840, 0xa913, 0xcdfe, 0x7d5d, 0x0, 0x0);
        gbc.writeMem(0x22aa, { 0xe1 });
        gbc.writeMem(0x9bc9, { 0xb1, 0x4e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9bcb, gbc.sp());
        EXPECT(0x22ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x9bc9));
        EXPECT(0x4e, gbc.readMem(0x9bca));
        // E1 01D0
        gbc.setState(0x3612, 0xf85e, 0xdc60, 0xdb03, 0xf5d0, 0xb58f, 0x1, 0x1);
        gbc.writeMem(0x3612, { 0xe1 });
        gbc.writeMem(0xf85e, { 0x67, 0xea });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf860, gbc.sp());
        EXPECT(0x3613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xf85e));
        EXPECT(0xea, gbc.readMem(0xf85f));
        // E1 01D2
        gbc.setState(0xd00a, 0x37c2, 0xaec0, 0x5d44, 0x9eef, 0x68a5, 0x1, 0x0);
        gbc.writeMem(0x37c2, { 0xce, 0xb3 });
        gbc.writeMem(0xd00a, { 0xe1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x37c4, gbc.sp());
        EXPECT(0xd00b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd00a));
        // E1 01D3
        gbc.setState(0x419d, 0xa06e, 0x2060, 0xcd8a, 0xcb91, 0x3d70, 0x0, 0x1);
        gbc.writeMem(0x419d, { 0xe1 });
        gbc.writeMem(0xa06e, { 0xd5, 0x3e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa070, gbc.sp());
        EXPECT(0x419e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa06e));
        EXPECT(0x3e, gbc.readMem(0xa06f));
        // E1 01D4
        gbc.setState(0x6b86, 0x7126, 0xe250, 0xde4a, 0xb95f, 0x11bd, 0x0, 0x1);
        gbc.writeMem(0x6b86, { 0xe1 });
        gbc.writeMem(0x7126, { 0x1a, 0x6d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7128, gbc.sp());
        EXPECT(0x6b87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 01D5
        gbc.setState(0x4ef2, 0x9304, 0x3470, 0x875e, 0xbbb7, 0xdee7, 0x0, 0x1);
        gbc.writeMem(0x4ef2, { 0xe1 });
        gbc.writeMem(0x9304, { 0xa5, 0x4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9306, gbc.sp());
        EXPECT(0x4ef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x9304));
        EXPECT(0x4, gbc.readMem(0x9305));
        // E1 01D6
        gbc.setState(0x36de, 0xfe17, 0x1b30, 0xb2aa, 0x9921, 0x3573, 0x0, 0x1);
        gbc.writeMem(0x36de, { 0xe1 });
        gbc.writeMem(0xfe17, { 0xf3, 0xd });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xfe19, gbc.sp());
        EXPECT(0x36df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xfe17));
        EXPECT(0xd, gbc.readMem(0xfe18));
        // E1 01D7
        gbc.setState(0x8f37, 0x797f, 0x5c80, 0x6640, 0x4b9d, 0x8b35, 0x1, 0x0);
        gbc.writeMem(0x797f, { 0xe6, 0x76 });
        gbc.writeMem(0x8f37, { 0xe1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7981, gbc.sp());
        EXPECT(0x8f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8f37));
        // E1 01D8
        gbc.setState(0xd7a6, 0xf80b, 0x4260, 0x90e1, 0x96ed, 0xf3d9, 0x0, 0x0);
        gbc.writeMem(0xd7a6, { 0xe1 });
        gbc.writeMem(0xf80b, { 0x5f, 0x5c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf80d, gbc.sp());
        EXPECT(0xd7a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd7a6));
        EXPECT(0x5f, gbc.readMem(0xf80b));
        EXPECT(0x5c, gbc.readMem(0xf80c));
        // E1 01D9
        gbc.setState(0x4130, 0x8602, 0xbdf0, 0x3791, 0x6ef7, 0xd22, 0x0, 0x1);
        gbc.writeMem(0x4130, { 0xe1 });
        gbc.writeMem(0x8602, { 0xa1, 0xc8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8604, gbc.sp());
        EXPECT(0x4131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8602));
        EXPECT(0xc8, gbc.readMem(0x8603));
        // E1 01DA
        gbc.setState(0xd089, 0x1c05, 0x9e90, 0x40d9, 0xe81e, 0x153d, 0x0, 0x0);
        gbc.writeMem(0x1c05, { 0x53, 0x46 });
        gbc.writeMem(0xd089, { 0xe1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1c07, gbc.sp());
        EXPECT(0xd08a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd089));
        // E1 01DB
        gbc.setState(0x16e, 0x201b, 0xd0b0, 0xf186, 0x5ff6, 0x86bd, 0x1, 0x1);
        gbc.writeMem(0x16e, { 0xe1 });
        gbc.writeMem(0x201b, { 0x25, 0xa0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x201d, gbc.sp());
        EXPECT(0x16f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 01DC
        gbc.setState(0x595b, 0x7518, 0x66d0, 0x9056, 0x179e, 0x328e, 0x0, 0x0);
        gbc.writeMem(0x595b, { 0xe1 });
        gbc.writeMem(0x7518, { 0xb8, 0xe5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x751a, gbc.sp());
        EXPECT(0x595c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 01DD
        gbc.setState(0x366a, 0xe36d, 0xf500, 0xd411, 0x8d3, 0x866b, 0x0, 0x1);
        gbc.writeMem(0x366a, { 0xe1 });
        gbc.writeMem(0xe36d, { 0xd9, 0x29 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe36f, gbc.sp());
        EXPECT(0x366b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe36d));
        EXPECT(0x29, gbc.readMem(0xe36e));
        // E1 01DE
        gbc.setState(0x1f29, 0x41e4, 0xbc70, 0x2603, 0x2ec9, 0x6572, 0x0, 0x1);
        gbc.writeMem(0x1f29, { 0xe1 });
        gbc.writeMem(0x41e4, { 0x82, 0x2d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x41e6, gbc.sp());
        EXPECT(0x1f2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 01DF
        gbc.setState(0xb32d, 0xbaed, 0xa440, 0x6efd, 0xf9b3, 0x145d, 0x0, 0x1);
        gbc.writeMem(0xb32d, { 0xe1 });
        gbc.writeMem(0xbaed, { 0xcb, 0xf4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbaef, gbc.sp());
        EXPECT(0xb32e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb32d));
        EXPECT(0xcb, gbc.readMem(0xbaed));
        EXPECT(0xf4, gbc.readMem(0xbaee));
        // E1 01E0
        gbc.setState(0xdddf, 0x65c, 0xac40, 0xedfe, 0x977b, 0xb0c0, 0x1, 0x1);
        gbc.writeMem(0x65c, { 0x84, 0x1 });
        gbc.writeMem(0xdddf, { 0xe1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x65e, gbc.sp());
        EXPECT(0xdde0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xdddf));
        // E1 01E1
        gbc.setState(0x4d4, 0x1bdc, 0xa10, 0xac9a, 0x40a8, 0x2641, 0x0, 0x1);
        gbc.writeMem(0x4d4, { 0xe1 });
        gbc.writeMem(0x1bdc, { 0xd5, 0xd0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1bde, gbc.sp());
        EXPECT(0x4d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 01E2
        gbc.setState(0x8bad, 0x9aa0, 0x8070, 0x2b1a, 0xc789, 0xf167, 0x1, 0x0);
        gbc.writeMem(0x8bad, { 0xe1 });
        gbc.writeMem(0x9aa0, { 0x73, 0x28 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9aa2, gbc.sp());
        EXPECT(0x8bae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8bad));
        EXPECT(0x73, gbc.readMem(0x9aa0));
        EXPECT(0x28, gbc.readMem(0x9aa1));
        // E1 01E5
        gbc.setState(0x2755, 0x4423, 0xaa00, 0xe0d9, 0x43a1, 0x53ea, 0x0, 0x1);
        gbc.writeMem(0x2755, { 0xe1 });
        gbc.writeMem(0x4423, { 0x71, 0xa });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4425, gbc.sp());
        EXPECT(0x2756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 01E6
        gbc.setState(0x4c55, 0x3e6e, 0x3b70, 0xa979, 0x49d0, 0xae0a, 0x0, 0x0);
        gbc.writeMem(0x3e6e, { 0xad, 0xad });
        gbc.writeMem(0x4c55, { 0xe1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3e70, gbc.sp());
        EXPECT(0x4c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 01E7
        gbc.setState(0xa975, 0x70a0, 0xe8b0, 0xa3c5, 0xd0e, 0x1732, 0x1, 0x0);
        gbc.writeMem(0x70a0, { 0x54, 0x2a });
        gbc.writeMem(0xa975, { 0xe1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x70a2, gbc.sp());
        EXPECT(0xa976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa975));
        // E1 01E8
        gbc.setState(0x93e6, 0x9944, 0x2420, 0x6a14, 0x4a0b, 0x153a, 0x0, 0x1);
        gbc.writeMem(0x93e6, { 0xe1 });
        gbc.writeMem(0x9944, { 0x6b, 0x9d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9946, gbc.sp());
        EXPECT(0x93e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x93e6));
        EXPECT(0x6b, gbc.readMem(0x9944));
        EXPECT(0x9d, gbc.readMem(0x9945));
        // E1 01E9
        gbc.setState(0xbbc7, 0x6dee, 0x4d0, 0x83d4, 0xfe61, 0x538a, 0x0, 0x1);
        gbc.writeMem(0x6dee, { 0x48, 0x79 });
        gbc.writeMem(0xbbc7, { 0xe1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6df0, gbc.sp());
        EXPECT(0xbbc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xbbc7));
        // E1 01EC
        gbc.setState(0xa40d, 0x11a8, 0x71a0, 0x7dbc, 0xa0cf, 0x43dc, 0x1, 0x0);
        gbc.writeMem(0x11a8, { 0xb6, 0x73 });
        gbc.writeMem(0xa40d, { 0xe1 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x11aa, gbc.sp());
        EXPECT(0xa40e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa40d));
        // E1 01EE
        gbc.setState(0xab24, 0x9a4a, 0xa5a0, 0x2cb2, 0x6d79, 0xdfde, 0x0, 0x0);
        gbc.writeMem(0x9a4a, { 0xbf, 0xdf });
        gbc.writeMem(0xab24, { 0xe1 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9a4c, gbc.sp());
        EXPECT(0xab25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9a4a));
        EXPECT(0xdf, gbc.readMem(0x9a4b));
        EXPECT(0xe1, gbc.readMem(0xab24));
        // E1 01EF
        gbc.setState(0x7ea3, 0x41a6, 0x76e0, 0x3997, 0x7f92, 0x47dc, 0x0, 0x1);
        gbc.writeMem(0x41a6, { 0xa6, 0x34 });
        gbc.writeMem(0x7ea3, { 0xe1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x41a8, gbc.sp());
        EXPECT(0x7ea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 01F0
        gbc.setState(0x2b9, 0x1b4b, 0x8620, 0x59a6, 0x7d9c, 0xfc36, 0x0, 0x0);
        gbc.writeMem(0x2b9, { 0xe1 });
        gbc.writeMem(0x1b4b, { 0x2a, 0xcd });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1b4d, gbc.sp());
        EXPECT(0x2ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 01F2
        gbc.setState(0x6e72, 0x876f, 0x27e0, 0x4a67, 0x2de8, 0xc94d, 0x0, 0x0);
        gbc.writeMem(0x6e72, { 0xe1 });
        gbc.writeMem(0x876f, { 0x2c, 0xd1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8771, gbc.sp());
        EXPECT(0x6e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x876f));
        EXPECT(0xd1, gbc.readMem(0x8770));
        // E1 01F3
        gbc.setState(0x871a, 0x8148, 0x6b10, 0xf049, 0x6912, 0x8f4d, 0x0, 0x1);
        gbc.writeMem(0x8148, { 0x2a, 0xdb });
        gbc.writeMem(0x871a, { 0xe1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x814a, gbc.sp());
        EXPECT(0x871b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x8148));
        EXPECT(0xdb, gbc.readMem(0x8149));
        EXPECT(0xe1, gbc.readMem(0x871a));
        // E1 01F4
        gbc.setState(0xce08, 0x923a, 0xaa70, 0xa7f0, 0x27a, 0x8a98, 0x1, 0x0);
        gbc.writeMem(0x923a, { 0x30, 0x4b });
        gbc.writeMem(0xce08, { 0xe1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x923c, gbc.sp());
        EXPECT(0xce09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x923a));
        EXPECT(0x4b, gbc.readMem(0x923b));
        EXPECT(0xe1, gbc.readMem(0xce08));
        // E1 01F5
        gbc.setState(0x33ea, 0x5a77, 0x11b0, 0xd393, 0xe23b, 0x57eb, 0x1, 0x1);
        gbc.writeMem(0x33ea, { 0xe1 });
        gbc.writeMem(0x5a77, { 0x8c, 0xee });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5a79, gbc.sp());
        EXPECT(0x33eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 01F7
        gbc.setState(0x6675, 0x5cf6, 0x6920, 0xff85, 0x7601, 0xa3ea, 0x1, 0x0);
        gbc.writeMem(0x5cf6, { 0xa8, 0x26 });
        gbc.writeMem(0x6675, { 0xe1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5cf8, gbc.sp());
        EXPECT(0x6676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 01F8
        gbc.setState(0xe708, 0xc521, 0x1c0, 0xe148, 0x9bc3, 0xdcde, 0x1, 0x1);
        gbc.writeMem(0xc521, { 0xc2, 0x27 });
        gbc.writeMem(0xe708, { 0xe1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc523, gbc.sp());
        EXPECT(0xe709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc521));
        EXPECT(0x27, gbc.readMem(0xc522));
        EXPECT(0xe1, gbc.readMem(0xe708));
        // E1 01F9
        gbc.setState(0xa57f, 0x807, 0xd840, 0x8932, 0xd51d, 0x7085, 0x0, 0x1);
        gbc.writeMem(0x807, { 0x95, 0xe3 });
        gbc.writeMem(0xa57f, { 0xe1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x809, gbc.sp());
        EXPECT(0xa580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa57f));
        // E1 01FA
        gbc.setState(0xbca7, 0x2370, 0x52b0, 0xfa7d, 0x1537, 0x81e5, 0x0, 0x0);
        gbc.writeMem(0x2370, { 0x87, 0x84 });
        gbc.writeMem(0xbca7, { 0xe1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2372, gbc.sp());
        EXPECT(0xbca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xbca7));
        // E1 01FB
        gbc.setState(0xc362, 0xbf4f, 0x9390, 0xc541, 0xdf1b, 0x7ad0, 0x0, 0x1);
        gbc.writeMem(0xbf4f, { 0xa9, 0xd0 });
        gbc.writeMem(0xc362, { 0xe1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xbf51, gbc.sp());
        EXPECT(0xc363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xbf4f));
        EXPECT(0xd0, gbc.readMem(0xbf50));
        EXPECT(0xe1, gbc.readMem(0xc362));
        // E1 01FC
        gbc.setState(0xe5a4, 0xef5c, 0xf500, 0xb99e, 0xb9d1, 0x8bb9, 0x0, 0x0);
        gbc.writeMem(0xe5a4, { 0xe1 });
        gbc.writeMem(0xef5c, { 0x6a, 0x15 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xef5e, gbc.sp());
        EXPECT(0xe5a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe5a4));
        EXPECT(0x6a, gbc.readMem(0xef5c));
        EXPECT(0x15, gbc.readMem(0xef5d));
        // E1 01FD
        gbc.setState(0x2d4f, 0x428f, 0x4420, 0x3d34, 0x53f5, 0x20a9, 0x0, 0x1);
        gbc.writeMem(0x2d4f, { 0xe1 });
        gbc.writeMem(0x428f, { 0x1a, 0x17 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4291, gbc.sp());
        EXPECT(0x2d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 01FF
        gbc.setState(0x2af5, 0x4ded, 0xe0b0, 0xa673, 0xbafc, 0xe74, 0x0, 0x0);
        gbc.writeMem(0x2af5, { 0xe1 });
        gbc.writeMem(0x4ded, { 0x6a, 0xda });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4def, gbc.sp());
        EXPECT(0x2af6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0200
        gbc.setState(0xbfbc, 0x98b3, 0x1340, 0x38cc, 0x3782, 0x661f, 0x1, 0x0);
        gbc.writeMem(0x98b3, { 0x88, 0x7e });
        gbc.writeMem(0xbfbc, { 0xe1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x98b5, gbc.sp());
        EXPECT(0xbfbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x98b3));
        EXPECT(0x7e, gbc.readMem(0x98b4));
        EXPECT(0xe1, gbc.readMem(0xbfbc));
        // E1 0201
        gbc.setState(0x43b4, 0xf98b, 0xa80, 0x80ab, 0x8178, 0x43f6, 0x0, 0x1);
        gbc.writeMem(0x43b4, { 0xe1 });
        gbc.writeMem(0xf98b, { 0x77, 0x7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf98d, gbc.sp());
        EXPECT(0x43b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xf98b));
        EXPECT(0x7, gbc.readMem(0xf98c));
        // E1 0203
        gbc.setState(0x7377, 0x8cc, 0x9050, 0x320f, 0xe149, 0xf6fc, 0x1, 0x1);
        gbc.writeMem(0x8cc, { 0x72, 0xce });
        gbc.writeMem(0x7377, { 0xe1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8ce, gbc.sp());
        EXPECT(0x7378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0204
        gbc.setState(0x6bfd, 0x2012, 0x68b0, 0x276e, 0x2da4, 0x996b, 0x0, 0x1);
        gbc.writeMem(0x2012, { 0x63, 0xd8 });
        gbc.writeMem(0x6bfd, { 0xe1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2014, gbc.sp());
        EXPECT(0x6bfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0205
        gbc.setState(0x7607, 0x1d7c, 0x7870, 0x2f77, 0xf104, 0x882b, 0x0, 0x1);
        gbc.writeMem(0x1d7c, { 0xbd, 0xc0 });
        gbc.writeMem(0x7607, { 0xe1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1d7e, gbc.sp());
        EXPECT(0x7608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0206
        gbc.setState(0xbe36, 0x89ed, 0x87b0, 0x6439, 0x59ab, 0xdfd4, 0x1, 0x0);
        gbc.writeMem(0x89ed, { 0x34, 0xf2 });
        gbc.writeMem(0xbe36, { 0xe1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x89ef, gbc.sp());
        EXPECT(0xbe37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x89ed));
        EXPECT(0xf2, gbc.readMem(0x89ee));
        EXPECT(0xe1, gbc.readMem(0xbe36));
        // E1 0207
        gbc.setState(0x27f5, 0x2cf1, 0xf20, 0xa36b, 0x2c77, 0x67c1, 0x0, 0x1);
        gbc.writeMem(0x27f5, { 0xe1 });
        gbc.writeMem(0x2cf1, { 0x78, 0x2c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2cf3, gbc.sp());
        EXPECT(0x27f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0208
        gbc.setState(0xc85a, 0xbbe1, 0x3d40, 0x6a87, 0x453, 0x66f6, 0x0, 0x1);
        gbc.writeMem(0xbbe1, { 0xd, 0x43 });
        gbc.writeMem(0xc85a, { 0xe1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xbbe3, gbc.sp());
        EXPECT(0xc85b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xbbe1));
        EXPECT(0x43, gbc.readMem(0xbbe2));
        EXPECT(0xe1, gbc.readMem(0xc85a));
        // E1 0209
        gbc.setState(0x65cc, 0xbdde, 0xc210, 0xbd64, 0xfe04, 0x3c66, 0x0, 0x0);
        gbc.writeMem(0x65cc, { 0xe1 });
        gbc.writeMem(0xbdde, { 0xc9, 0xc4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbde0, gbc.sp());
        EXPECT(0x65cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xbdde));
        EXPECT(0xc4, gbc.readMem(0xbddf));
        // E1 020A
        gbc.setState(0xa894, 0x98de, 0x1490, 0xa94b, 0x17ec, 0x9710, 0x0, 0x0);
        gbc.writeMem(0x98de, { 0x85, 0x7b });
        gbc.writeMem(0xa894, { 0xe1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x98e0, gbc.sp());
        EXPECT(0xa895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x98de));
        EXPECT(0x7b, gbc.readMem(0x98df));
        EXPECT(0xe1, gbc.readMem(0xa894));
        // E1 020B
        gbc.setState(0x5162, 0xf619, 0xe850, 0xb95d, 0xb125, 0xb556, 0x0, 0x0);
        gbc.writeMem(0x5162, { 0xe1 });
        gbc.writeMem(0xf619, { 0x1f, 0x3f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf61b, gbc.sp());
        EXPECT(0x5163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xf619));
        EXPECT(0x3f, gbc.readMem(0xf61a));
        // E1 020C
        gbc.setState(0xadb8, 0x6914, 0x4500, 0xd6a2, 0xbab1, 0xb506, 0x1, 0x0);
        gbc.writeMem(0x6914, { 0x59, 0x7b });
        gbc.writeMem(0xadb8, { 0xe1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6916, gbc.sp());
        EXPECT(0xadb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xadb8));
        // E1 020D
        gbc.setState(0x81b6, 0xe618, 0x43a0, 0xd585, 0x5162, 0xaa35, 0x1, 0x0);
        gbc.writeMem(0x81b6, { 0xe1 });
        gbc.writeMem(0xe618, { 0x4a, 0x71 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe61a, gbc.sp());
        EXPECT(0x81b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x81b6));
        EXPECT(0x4a, gbc.readMem(0xe618));
        EXPECT(0x71, gbc.readMem(0xe619));
        // E1 020E
        gbc.setState(0xd694, 0x2fd0, 0x1cc0, 0x8353, 0x1f77, 0x955a, 0x1, 0x1);
        gbc.writeMem(0x2fd0, { 0x60, 0x26 });
        gbc.writeMem(0xd694, { 0xe1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2fd2, gbc.sp());
        EXPECT(0xd695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd694));
        // E1 020F
        gbc.setState(0xce65, 0x12d3, 0x1ab0, 0x1964, 0xa17d, 0x904b, 0x1, 0x0);
        gbc.writeMem(0x12d3, { 0x89, 0x15 });
        gbc.writeMem(0xce65, { 0xe1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x12d5, gbc.sp());
        EXPECT(0xce66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xce65));
        // E1 0210
        gbc.setState(0xc51a, 0x6e43, 0x4790, 0xc751, 0xbe0b, 0x353f, 0x1, 0x1);
        gbc.writeMem(0x6e43, { 0x81, 0x99 });
        gbc.writeMem(0xc51a, { 0xe1 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6e45, gbc.sp());
        EXPECT(0xc51b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc51a));
        // E1 0211
        gbc.setState(0xc070, 0x2f43, 0x5060, 0x663b, 0xe3d1, 0xbe70, 0x0, 0x0);
        gbc.writeMem(0x2f43, { 0xb5, 0xc5 });
        gbc.writeMem(0xc070, { 0xe1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2f45, gbc.sp());
        EXPECT(0xc071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc070));
        // E1 0212
        gbc.setState(0x1250, 0xba5b, 0x8440, 0xb4a9, 0x8207, 0x165c, 0x1, 0x1);
        gbc.writeMem(0x1250, { 0xe1 });
        gbc.writeMem(0xba5b, { 0x2f, 0x1a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xba5d, gbc.sp());
        EXPECT(0x1251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xba5b));
        EXPECT(0x1a, gbc.readMem(0xba5c));
        // E1 0214
        gbc.setState(0x607, 0x9cd5, 0xf260, 0x20c2, 0xd02e, 0x8810, 0x0, 0x0);
        gbc.writeMem(0x607, { 0xe1 });
        gbc.writeMem(0x9cd5, { 0x6b, 0xe8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9cd7, gbc.sp());
        EXPECT(0x608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x9cd5));
        EXPECT(0xe8, gbc.readMem(0x9cd6));
        // E1 0215
        gbc.setState(0xe88e, 0x7ea8, 0xdc30, 0x86b5, 0x1771, 0x3560, 0x0, 0x1);
        gbc.writeMem(0x7ea8, { 0x96, 0x3c });
        gbc.writeMem(0xe88e, { 0xe1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7eaa, gbc.sp());
        EXPECT(0xe88f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe88e));
        // E1 0216
        gbc.setState(0x788a, 0x8213, 0xdbd0, 0x9ed4, 0xd63d, 0xa222, 0x1, 0x1);
        gbc.writeMem(0x788a, { 0xe1 });
        gbc.writeMem(0x8213, { 0xc6, 0x54 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8215, gbc.sp());
        EXPECT(0x788b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8213));
        EXPECT(0x54, gbc.readMem(0x8214));
        // E1 0217
        gbc.setState(0xa371, 0x99a6, 0x8f20, 0x2baa, 0xbfe5, 0xc51a, 0x1, 0x1);
        gbc.writeMem(0x99a6, { 0xe8, 0xfd });
        gbc.writeMem(0xa371, { 0xe1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x99a8, gbc.sp());
        EXPECT(0xa372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x99a6));
        EXPECT(0xfd, gbc.readMem(0x99a7));
        EXPECT(0xe1, gbc.readMem(0xa371));
        // E1 0218
        gbc.setState(0x20e3, 0xfb12, 0x1460, 0x48c6, 0x4357, 0x7266, 0x0, 0x1);
        gbc.writeMem(0x20e3, { 0xe1 });
        gbc.writeMem(0xfb12, { 0x97, 0x4e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfb14, gbc.sp());
        EXPECT(0x20e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xfb12));
        EXPECT(0x4e, gbc.readMem(0xfb13));
        // E1 0219
        gbc.setState(0xea85, 0x7401, 0x6120, 0xb965, 0x35b6, 0x9a83, 0x0, 0x1);
        gbc.writeMem(0x7401, { 0xbd, 0x52 });
        gbc.writeMem(0xea85, { 0xe1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7403, gbc.sp());
        EXPECT(0xea86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xea85));
        // E1 021A
        gbc.setState(0xc331, 0x9fbe, 0x8360, 0x919e, 0x7f2e, 0xe17, 0x1, 0x1);
        gbc.writeMem(0x9fbe, { 0x48, 0xf });
        gbc.writeMem(0xc331, { 0xe1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9fc0, gbc.sp());
        EXPECT(0xc332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9fbe));
        EXPECT(0xf, gbc.readMem(0x9fbf));
        EXPECT(0xe1, gbc.readMem(0xc331));
        // E1 021B
        gbc.setState(0x1c88, 0xcf68, 0x38e0, 0xca9b, 0x611f, 0x410d, 0x0, 0x0);
        gbc.writeMem(0x1c88, { 0xe1 });
        gbc.writeMem(0xcf68, { 0x2e, 0x55 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcf6a, gbc.sp());
        EXPECT(0x1c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xcf68));
        EXPECT(0x55, gbc.readMem(0xcf69));
        // E1 021C
        gbc.setState(0x2626, 0xe2ef, 0x7d90, 0x9863, 0x5033, 0x50eb, 0x0, 0x0);
        gbc.writeMem(0x2626, { 0xe1 });
        gbc.writeMem(0xe2ef, { 0xac, 0x1e });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe2f1, gbc.sp());
        EXPECT(0x2627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe2ef));
        EXPECT(0x1e, gbc.readMem(0xe2f0));
        // E1 021D
        gbc.setState(0x12d6, 0x8328, 0xa050, 0x6bf0, 0x13a8, 0x4526, 0x0, 0x1);
        gbc.writeMem(0x12d6, { 0xe1 });
        gbc.writeMem(0x8328, { 0x7f, 0xd1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x832a, gbc.sp());
        EXPECT(0x12d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x8328));
        EXPECT(0xd1, gbc.readMem(0x8329));
        // E1 021E
        gbc.setState(0xbe37, 0xaaa0, 0xeba0, 0x9b62, 0xd009, 0xdaf1, 0x1, 0x1);
        gbc.writeMem(0xaaa0, { 0xa1, 0x96 });
        gbc.writeMem(0xbe37, { 0xe1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xaaa2, gbc.sp());
        EXPECT(0xbe38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xaaa0));
        EXPECT(0x96, gbc.readMem(0xaaa1));
        EXPECT(0xe1, gbc.readMem(0xbe37));
        // E1 021F
        gbc.setState(0xb5db, 0x9c42, 0xba40, 0x6708, 0x8c05, 0xdcad, 0x0, 0x0);
        gbc.writeMem(0x9c42, { 0x99, 0xf8 });
        gbc.writeMem(0xb5db, { 0xe1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9c44, gbc.sp());
        EXPECT(0xb5dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9c42));
        EXPECT(0xf8, gbc.readMem(0x9c43));
        EXPECT(0xe1, gbc.readMem(0xb5db));
        // E1 0220
        gbc.setState(0x75b6, 0x8949, 0xa6b0, 0x89a0, 0x7a1, 0x8d3, 0x1, 0x0);
        gbc.writeMem(0x75b6, { 0xe1 });
        gbc.writeMem(0x8949, { 0x12, 0x7c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x894b, gbc.sp());
        EXPECT(0x75b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x8949));
        EXPECT(0x7c, gbc.readMem(0x894a));
        // E1 0221
        gbc.setState(0x1d1b, 0x5a0c, 0xa980, 0xa22b, 0xb37a, 0xa5a3, 0x1, 0x0);
        gbc.writeMem(0x1d1b, { 0xe1 });
        gbc.writeMem(0x5a0c, { 0x3a, 0xa3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5a0e, gbc.sp());
        EXPECT(0x1d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0222
        gbc.setState(0x7612, 0x608a, 0xe240, 0xdb4c, 0x3882, 0x703c, 0x1, 0x1);
        gbc.writeMem(0x608a, { 0xfc, 0xa6 });
        gbc.writeMem(0x7612, { 0xe1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x608c, gbc.sp());
        EXPECT(0x7613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0223
        gbc.setState(0xd216, 0xbd06, 0x2180, 0xf827, 0x42a8, 0xc62, 0x1, 0x1);
        gbc.writeMem(0xbd06, { 0x35, 0x93 });
        gbc.writeMem(0xd216, { 0xe1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbd08, gbc.sp());
        EXPECT(0xd217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xbd06));
        EXPECT(0x93, gbc.readMem(0xbd07));
        EXPECT(0xe1, gbc.readMem(0xd216));
        // E1 0224
        gbc.setState(0x23d1, 0x133, 0xbc80, 0x1293, 0x2820, 0xee80, 0x0, 0x0);
        gbc.writeMem(0x133, { 0x85, 0x77 });
        gbc.writeMem(0x23d1, { 0xe1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x135, gbc.sp());
        EXPECT(0x23d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0225
        gbc.setState(0x5c3b, 0xe36f, 0x4340, 0xf54, 0xd589, 0x15ac, 0x1, 0x1);
        gbc.writeMem(0x5c3b, { 0xe1 });
        gbc.writeMem(0xe36f, { 0x1b, 0xcc });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe371, gbc.sp());
        EXPECT(0x5c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xe36f));
        EXPECT(0xcc, gbc.readMem(0xe370));
        // E1 0226
        gbc.setState(0x58c1, 0xf5b1, 0x4b40, 0x9c24, 0x5e4c, 0x874c, 0x1, 0x0);
        gbc.writeMem(0x58c1, { 0xe1 });
        gbc.writeMem(0xf5b1, { 0x5f, 0x7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf5b3, gbc.sp());
        EXPECT(0x58c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xf5b1));
        EXPECT(0x7, gbc.readMem(0xf5b2));
        // E1 0227
        gbc.setState(0x3cff, 0x4690, 0x5cf0, 0xb9f5, 0xb1ac, 0x6baa, 0x1, 0x0);
        gbc.writeMem(0x3cff, { 0xe1 });
        gbc.writeMem(0x4690, { 0x54, 0x73 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4692, gbc.sp());
        EXPECT(0x3d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0228
        gbc.setState(0x4861, 0xb55b, 0x1d90, 0x7081, 0xacf0, 0xd154, 0x0, 0x0);
        gbc.writeMem(0x4861, { 0xe1 });
        gbc.writeMem(0xb55b, { 0x46, 0x3a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb55d, gbc.sp());
        EXPECT(0x4862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xb55b));
        EXPECT(0x3a, gbc.readMem(0xb55c));
        // E1 0229
        gbc.setState(0xde8a, 0x45c4, 0x9ca0, 0x3f5b, 0x4f59, 0x93f2, 0x1, 0x1);
        gbc.writeMem(0x45c4, { 0x62, 0x8b });
        gbc.writeMem(0xde8a, { 0xe1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x45c6, gbc.sp());
        EXPECT(0xde8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xde8a));
        // E1 022A
        gbc.setState(0xa6f1, 0x8e15, 0xd6c0, 0x8d13, 0x9525, 0x1b3b, 0x1, 0x1);
        gbc.writeMem(0x8e15, { 0x84, 0x27 });
        gbc.writeMem(0xa6f1, { 0xe1 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8e17, gbc.sp());
        EXPECT(0xa6f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x8e15));
        EXPECT(0x27, gbc.readMem(0x8e16));
        EXPECT(0xe1, gbc.readMem(0xa6f1));
        // E1 022B
        gbc.setState(0xab7a, 0xc86b, 0x1f60, 0xdb2, 0x6aa3, 0xbaa5, 0x0, 0x1);
        gbc.writeMem(0xab7a, { 0xe1 });
        gbc.writeMem(0xc86b, { 0x59, 0xc1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc86d, gbc.sp());
        EXPECT(0xab7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xab7a));
        EXPECT(0x59, gbc.readMem(0xc86b));
        EXPECT(0xc1, gbc.readMem(0xc86c));
        // E1 022C
        gbc.setState(0x9bb7, 0xbb33, 0x2750, 0x4f66, 0xa813, 0x6e55, 0x1, 0x1);
        gbc.writeMem(0x9bb7, { 0xe1 });
        gbc.writeMem(0xbb33, { 0xec, 0x3d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbb35, gbc.sp());
        EXPECT(0x9bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9bb7));
        EXPECT(0xec, gbc.readMem(0xbb33));
        EXPECT(0x3d, gbc.readMem(0xbb34));
        // E1 022D
        gbc.setState(0x79b, 0xe756, 0x54c0, 0xdf7a, 0xcd2e, 0xc809, 0x0, 0x0);
        gbc.writeMem(0x79b, { 0xe1 });
        gbc.writeMem(0xe756, { 0xa4, 0xa1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe758, gbc.sp());
        EXPECT(0x79c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe756));
        EXPECT(0xa1, gbc.readMem(0xe757));
        // E1 022E
        gbc.setState(0x6c2c, 0xb0b7, 0x8080, 0x6e6c, 0x813f, 0xaa89, 0x1, 0x1);
        gbc.writeMem(0x6c2c, { 0xe1 });
        gbc.writeMem(0xb0b7, { 0x8b, 0x25 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb0b9, gbc.sp());
        EXPECT(0x6c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xb0b7));
        EXPECT(0x25, gbc.readMem(0xb0b8));
        // E1 022F
        gbc.setState(0x7a26, 0xd205, 0x160, 0xed2f, 0x301d, 0x5a75, 0x0, 0x0);
        gbc.writeMem(0x7a26, { 0xe1 });
        gbc.writeMem(0xd205, { 0xa4, 0x58 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd207, gbc.sp());
        EXPECT(0x7a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd205));
        EXPECT(0x58, gbc.readMem(0xd206));
        // E1 0230
        gbc.setState(0x8823, 0xd9fe, 0xe0f0, 0x4c87, 0x442e, 0x7865, 0x0, 0x1);
        gbc.writeMem(0x8823, { 0xe1 });
        gbc.writeMem(0xd9fe, { 0x8e, 0x88 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xda00, gbc.sp());
        EXPECT(0x8824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8823));
        EXPECT(0x8e, gbc.readMem(0xd9fe));
        EXPECT(0x88, gbc.readMem(0xd9ff));
        // E1 0231
        gbc.setState(0x5544, 0x7941, 0xacf0, 0xd667, 0x12f4, 0x3c2e, 0x0, 0x0);
        gbc.writeMem(0x5544, { 0xe1 });
        gbc.writeMem(0x7941, { 0xd5, 0x27 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7943, gbc.sp());
        EXPECT(0x5545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0232
        gbc.setState(0x5ffa, 0x48de, 0x7320, 0xcbd4, 0x1330, 0x6e6c, 0x1, 0x0);
        gbc.writeMem(0x48de, { 0x3c, 0xb0 });
        gbc.writeMem(0x5ffa, { 0xe1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x48e0, gbc.sp());
        EXPECT(0x5ffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0233
        gbc.setState(0x1f62, 0xa18b, 0x7ac0, 0x2f75, 0x91b1, 0x4c8, 0x1, 0x1);
        gbc.writeMem(0x1f62, { 0xe1 });
        gbc.writeMem(0xa18b, { 0x3a, 0x68 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa18d, gbc.sp());
        EXPECT(0x1f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xa18b));
        EXPECT(0x68, gbc.readMem(0xa18c));
        // E1 0234
        gbc.setState(0xead8, 0x6e55, 0x7c0, 0x4dbf, 0x42ea, 0x6f64, 0x1, 0x1);
        gbc.writeMem(0x6e55, { 0xbe, 0x44 });
        gbc.writeMem(0xead8, { 0xe1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6e57, gbc.sp());
        EXPECT(0xead9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xead8));
        // E1 0235
        gbc.setState(0x38d3, 0xd26e, 0x80e0, 0x115f, 0xe728, 0x4d2, 0x0, 0x1);
        gbc.writeMem(0x38d3, { 0xe1 });
        gbc.writeMem(0xd26e, { 0x9c, 0xed });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd270, gbc.sp());
        EXPECT(0x38d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd26e));
        EXPECT(0xed, gbc.readMem(0xd26f));
        // E1 0236
        gbc.setState(0xb08f, 0x96d7, 0x7d50, 0x8e9e, 0x7248, 0x2b6, 0x0, 0x1);
        gbc.writeMem(0x96d7, { 0xc3, 0x30 });
        gbc.writeMem(0xb08f, { 0xe1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x96d9, gbc.sp());
        EXPECT(0xb090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x96d7));
        EXPECT(0x30, gbc.readMem(0x96d8));
        EXPECT(0xe1, gbc.readMem(0xb08f));
        // E1 0237
        gbc.setState(0x7d78, 0xb872, 0x40f0, 0xa6b5, 0xbb07, 0xfda0, 0x0, 0x1);
        gbc.writeMem(0x7d78, { 0xe1 });
        gbc.writeMem(0xb872, { 0x16, 0x3f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb874, gbc.sp());
        EXPECT(0x7d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb872));
        EXPECT(0x3f, gbc.readMem(0xb873));
        // E1 0238
        gbc.setState(0xc05d, 0x88dc, 0xa470, 0x2580, 0xded3, 0x95c0, 0x1, 0x1);
        gbc.writeMem(0x88dc, { 0x3b, 0x9 });
        gbc.writeMem(0xc05d, { 0xe1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x88de, gbc.sp());
        EXPECT(0xc05e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x88dc));
        EXPECT(0x9, gbc.readMem(0x88dd));
        EXPECT(0xe1, gbc.readMem(0xc05d));
        // E1 0239
        gbc.setState(0x699, 0x2721, 0x7be0, 0x377c, 0x5587, 0xc3b8, 0x0, 0x0);
        gbc.writeMem(0x699, { 0xe1 });
        gbc.writeMem(0x2721, { 0xc, 0xc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2723, gbc.sp());
        EXPECT(0x69a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 023A
        gbc.setState(0x1825, 0xb947, 0x7ec0, 0xfaf1, 0xbf6b, 0xd630, 0x1, 0x0);
        gbc.writeMem(0x1825, { 0xe1 });
        gbc.writeMem(0xb947, { 0x8d, 0xe9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb949, gbc.sp());
        EXPECT(0x1826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb947));
        EXPECT(0xe9, gbc.readMem(0xb948));
        // E1 023B
        gbc.setState(0xeebc, 0xcea1, 0xcc70, 0x246c, 0x9a2e, 0xc073, 0x1, 0x0);
        gbc.writeMem(0xcea1, { 0xba, 0x4d });
        gbc.writeMem(0xeebc, { 0xe1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcea3, gbc.sp());
        EXPECT(0xeebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xcea1));
        EXPECT(0x4d, gbc.readMem(0xcea2));
        EXPECT(0xe1, gbc.readMem(0xeebc));
        // E1 023C
        gbc.setState(0xdd1b, 0xebdd, 0x6740, 0x5c59, 0x17b8, 0x27ff, 0x1, 0x0);
        gbc.writeMem(0xdd1b, { 0xe1 });
        gbc.writeMem(0xebdd, { 0xff, 0x6e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xebdf, gbc.sp());
        EXPECT(0xdd1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xdd1b));
        EXPECT(0xff, gbc.readMem(0xebdd));
        EXPECT(0x6e, gbc.readMem(0xebde));
        // E1 023D
        gbc.setState(0xa2ae, 0x45c4, 0x75f0, 0xdb7e, 0x3175, 0xafb, 0x1, 0x1);
        gbc.writeMem(0x45c4, { 0x62, 0x8b });
        gbc.writeMem(0xa2ae, { 0xe1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x45c6, gbc.sp());
        EXPECT(0xa2af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa2ae));
        // E1 023E
        gbc.setState(0x36a2, 0xc741, 0x2ad0, 0xb3c2, 0xb533, 0xd4a1, 0x0, 0x0);
        gbc.writeMem(0x36a2, { 0xe1 });
        gbc.writeMem(0xc741, { 0x9d, 0x9e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc743, gbc.sp());
        EXPECT(0x36a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc741));
        EXPECT(0x9e, gbc.readMem(0xc742));
        // E1 023F
        gbc.setState(0xab44, 0x1b30, 0xe3c0, 0x909a, 0xf6fe, 0xc2b0, 0x0, 0x0);
        gbc.writeMem(0x1b30, { 0x2c, 0x3a });
        gbc.writeMem(0xab44, { 0xe1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1b32, gbc.sp());
        EXPECT(0xab45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xab44));
        // E1 0240
        gbc.setState(0x90f, 0xa64c, 0x1880, 0x3d78, 0x8c34, 0x9b18, 0x0, 0x0);
        gbc.writeMem(0x90f, { 0xe1 });
        gbc.writeMem(0xa64c, { 0x67, 0x72 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa64e, gbc.sp());
        EXPECT(0x910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xa64c));
        EXPECT(0x72, gbc.readMem(0xa64d));
        // E1 0241
        gbc.setState(0xedd5, 0xb2f2, 0xa0b0, 0x73df, 0xc03e, 0x3bb6, 0x1, 0x0);
        gbc.writeMem(0xb2f2, { 0x37, 0xbe });
        gbc.writeMem(0xedd5, { 0xe1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb2f4, gbc.sp());
        EXPECT(0xedd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb2f2));
        EXPECT(0xbe, gbc.readMem(0xb2f3));
        EXPECT(0xe1, gbc.readMem(0xedd5));
        // E1 0243
        gbc.setState(0x7959, 0x1fc8, 0xb590, 0x394d, 0xc08f, 0x3c86, 0x1, 0x0);
        gbc.writeMem(0x1fc8, { 0xdf, 0x52 });
        gbc.writeMem(0x7959, { 0xe1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1fca, gbc.sp());
        EXPECT(0x795a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0245
        gbc.setState(0xdfa, 0xdf62, 0x5900, 0x5cb0, 0xb393, 0x471f, 0x0, 0x1);
        gbc.writeMem(0xdfa, { 0xe1 });
        gbc.writeMem(0xdf62, { 0x8f, 0xd3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xdf64, gbc.sp());
        EXPECT(0xdfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xdf62));
        EXPECT(0xd3, gbc.readMem(0xdf63));
        // E1 0246
        gbc.setState(0x300e, 0xb22e, 0x7a20, 0x5db7, 0x166e, 0x9516, 0x1, 0x0);
        gbc.writeMem(0x300e, { 0xe1 });
        gbc.writeMem(0xb22e, { 0x27, 0xd });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb230, gbc.sp());
        EXPECT(0x300f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb22e));
        EXPECT(0xd, gbc.readMem(0xb22f));
        // E1 0247
        gbc.setState(0x7bc0, 0x1958, 0x6a60, 0xafa0, 0x2f2c, 0x30b4, 0x0, 0x0);
        gbc.writeMem(0x1958, { 0xa9, 0x4b });
        gbc.writeMem(0x7bc0, { 0xe1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x195a, gbc.sp());
        EXPECT(0x7bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0248
        gbc.setState(0x7f0c, 0x906e, 0x4600, 0xd763, 0x2a14, 0xba56, 0x0, 0x0);
        gbc.writeMem(0x7f0c, { 0xe1 });
        gbc.writeMem(0x906e, { 0x4c, 0x12 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9070, gbc.sp());
        EXPECT(0x7f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x906e));
        EXPECT(0x12, gbc.readMem(0x906f));
        // E1 0249
        gbc.setState(0xb115, 0x936d, 0xa040, 0x1a62, 0xf65, 0xf459, 0x1, 0x0);
        gbc.writeMem(0x936d, { 0x75, 0xdd });
        gbc.writeMem(0xb115, { 0xe1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x936f, gbc.sp());
        EXPECT(0xb116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x936d));
        EXPECT(0xdd, gbc.readMem(0x936e));
        EXPECT(0xe1, gbc.readMem(0xb115));
        // E1 024A
        gbc.setState(0x9747, 0xebd6, 0x72a0, 0x672f, 0x58e0, 0xf3b4, 0x0, 0x0);
        gbc.writeMem(0x9747, { 0xe1 });
        gbc.writeMem(0xebd6, { 0x1a, 0xb5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xebd8, gbc.sp());
        EXPECT(0x9748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9747));
        EXPECT(0x1a, gbc.readMem(0xebd6));
        EXPECT(0xb5, gbc.readMem(0xebd7));
        // E1 024B
        gbc.setState(0xb7cf, 0xffe4, 0xcf20, 0xf887, 0xa7fe, 0x5edc, 0x1, 0x0);
        gbc.writeMem(0xb7cf, { 0xe1 });
        gbc.writeMem(0xffe4, { 0xf, 0x8c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xffe6, gbc.sp());
        EXPECT(0xb7d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb7cf));
        EXPECT(0xf, gbc.readMem(0xffe4));
        EXPECT(0x8c, gbc.readMem(0xffe5));
        // E1 024C
        gbc.setState(0x6490, 0x6d3f, 0x4490, 0xec89, 0x6e82, 0xf5d6, 0x1, 0x1);
        gbc.writeMem(0x6490, { 0xe1 });
        gbc.writeMem(0x6d3f, { 0xad, 0x60 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6d41, gbc.sp());
        EXPECT(0x6491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 024D
        gbc.setState(0x83ac, 0x7f54, 0x7380, 0xbc5c, 0xb200, 0xc3ba, 0x0, 0x1);
        gbc.writeMem(0x7f54, { 0xf, 0xe6 });
        gbc.writeMem(0x83ac, { 0xe1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7f56, gbc.sp());
        EXPECT(0x83ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x83ac));
        // E1 024E
        gbc.setState(0x4e8c, 0xa40, 0x6d30, 0x666a, 0xf9e9, 0x26, 0x1, 0x0);
        gbc.writeMem(0xa40, { 0x81, 0xf0 });
        gbc.writeMem(0x4e8c, { 0xe1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa42, gbc.sp());
        EXPECT(0x4e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 024F
        gbc.setState(0x13ff, 0xee7f, 0x79b0, 0x230c, 0x925e, 0x96fe, 0x1, 0x0);
        gbc.writeMem(0x13ff, { 0xe1 });
        gbc.writeMem(0xee7f, { 0x15, 0x30 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xee81, gbc.sp());
        EXPECT(0x1400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xee7f));
        EXPECT(0x30, gbc.readMem(0xee80));
        // E1 0250
        gbc.setState(0xb50f, 0x37b2, 0x77d0, 0x652d, 0xd88d, 0x66d5, 0x0, 0x0);
        gbc.writeMem(0x37b2, { 0x4, 0xdc });
        gbc.writeMem(0xb50f, { 0xe1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x37b4, gbc.sp());
        EXPECT(0xb510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb50f));
        // E1 0251
        gbc.setState(0xe12e, 0xf9e3, 0xab50, 0xb6a8, 0x5eed, 0x669f, 0x0, 0x0);
        gbc.writeMem(0xe12e, { 0xe1 });
        gbc.writeMem(0xf9e3, { 0x69, 0x21 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf9e5, gbc.sp());
        EXPECT(0xe12f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe12e));
        EXPECT(0x69, gbc.readMem(0xf9e3));
        EXPECT(0x21, gbc.readMem(0xf9e4));
        // E1 0253
        gbc.setState(0x7ee7, 0xf2c2, 0xc8a0, 0x4a74, 0xc259, 0xe931, 0x0, 0x1);
        gbc.writeMem(0x7ee7, { 0xe1 });
        gbc.writeMem(0xf2c2, { 0x7e, 0x4c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf2c4, gbc.sp());
        EXPECT(0x7ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xf2c2));
        EXPECT(0x4c, gbc.readMem(0xf2c3));
        // E1 0254
        gbc.setState(0xc390, 0xdc0d, 0x1b20, 0x44f2, 0x3905, 0x7250, 0x1, 0x1);
        gbc.writeMem(0xc390, { 0xe1 });
        gbc.writeMem(0xdc0d, { 0xbb, 0xf1 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdc0f, gbc.sp());
        EXPECT(0xc391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc390));
        EXPECT(0xbb, gbc.readMem(0xdc0d));
        EXPECT(0xf1, gbc.readMem(0xdc0e));
        // E1 0255
        gbc.setState(0xdd95, 0xa260, 0x9510, 0x2754, 0x7100, 0x7f43, 0x1, 0x0);
        gbc.writeMem(0xa260, { 0xcb, 0x93 });
        gbc.writeMem(0xdd95, { 0xe1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa262, gbc.sp());
        EXPECT(0xdd96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa260));
        EXPECT(0x93, gbc.readMem(0xa261));
        EXPECT(0xe1, gbc.readMem(0xdd95));
        // E1 0256
        gbc.setState(0x41cd, 0xfbe2, 0x7e50, 0x2ab0, 0x4a3, 0xaa10, 0x0, 0x1);
        gbc.writeMem(0x41cd, { 0xe1 });
        gbc.writeMem(0xfbe2, { 0x76, 0xaf });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfbe4, gbc.sp());
        EXPECT(0x41ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xfbe2));
        EXPECT(0xaf, gbc.readMem(0xfbe3));
        // E1 0257
        gbc.setState(0x2916, 0x660a, 0xeff0, 0xae59, 0x3166, 0x1986, 0x1, 0x0);
        gbc.writeMem(0x2916, { 0xe1 });
        gbc.writeMem(0x660a, { 0xf9, 0xeb });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x660c, gbc.sp());
        EXPECT(0x2917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0258
        gbc.setState(0x992e, 0x6049, 0x50a0, 0xf64d, 0xc622, 0xeaa7, 0x0, 0x1);
        gbc.writeMem(0x6049, { 0x55, 0xc9 });
        gbc.writeMem(0x992e, { 0xe1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x604b, gbc.sp());
        EXPECT(0x992f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x992e));
        // E1 0259
        gbc.setState(0xa163, 0x48bf, 0xc210, 0x1a82, 0x2c72, 0xbb41, 0x1, 0x1);
        gbc.writeMem(0x48bf, { 0x2a, 0xe0 });
        gbc.writeMem(0xa163, { 0xe1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x48c1, gbc.sp());
        EXPECT(0xa164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa163));
        // E1 025A
        gbc.setState(0x2432, 0x8f26, 0x2ea0, 0x3681, 0xb7a3, 0xb196, 0x0, 0x0);
        gbc.writeMem(0x2432, { 0xe1 });
        gbc.writeMem(0x8f26, { 0x6, 0x58 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8f28, gbc.sp());
        EXPECT(0x2433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8f26));
        EXPECT(0x58, gbc.readMem(0x8f27));
        // E1 025B
        gbc.setState(0xe974, 0xa007, 0xd860, 0x783b, 0x772b, 0x833c, 0x1, 0x1);
        gbc.writeMem(0xa007, { 0x6, 0xe0 });
        gbc.writeMem(0xe974, { 0xe1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa009, gbc.sp());
        EXPECT(0xe975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa007));
        EXPECT(0xe0, gbc.readMem(0xa008));
        EXPECT(0xe1, gbc.readMem(0xe974));
        // E1 025D
        gbc.setState(0x3615, 0xd5f9, 0x6b70, 0xb877, 0x43d3, 0xbb34, 0x0, 0x0);
        gbc.writeMem(0x3615, { 0xe1 });
        gbc.writeMem(0xd5f9, { 0x42, 0x30 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd5fb, gbc.sp());
        EXPECT(0x3616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd5f9));
        EXPECT(0x30, gbc.readMem(0xd5fa));
        // E1 025E
        gbc.setState(0x4151, 0xdbe7, 0x52f0, 0x5f27, 0xa249, 0x5fb7, 0x0, 0x1);
        gbc.writeMem(0x4151, { 0xe1 });
        gbc.writeMem(0xdbe7, { 0x53, 0x8f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdbe9, gbc.sp());
        EXPECT(0x4152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xdbe7));
        EXPECT(0x8f, gbc.readMem(0xdbe8));
        // E1 025F
        gbc.setState(0x377c, 0x62cf, 0xcd40, 0x6b57, 0xca4d, 0xe72b, 0x0, 0x0);
        gbc.writeMem(0x377c, { 0xe1 });
        gbc.writeMem(0x62cf, { 0x93, 0x6b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x62d1, gbc.sp());
        EXPECT(0x377d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0260
        gbc.setState(0x2602, 0x2c0a, 0x7e60, 0x548, 0xd690, 0xb5ab, 0x0, 0x1);
        gbc.writeMem(0x2602, { 0xe1 });
        gbc.writeMem(0x2c0a, { 0x83, 0x7f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2c0c, gbc.sp());
        EXPECT(0x2603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0261
        gbc.setState(0xa43, 0x5941, 0x5a60, 0x3ba9, 0xfccb, 0xf808, 0x0, 0x0);
        gbc.writeMem(0xa43, { 0xe1 });
        gbc.writeMem(0x5941, { 0x7, 0x69 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5943, gbc.sp());
        EXPECT(0xa44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0262
        gbc.setState(0x727f, 0x5485, 0x54d0, 0x7fba, 0xef65, 0xba2a, 0x1, 0x1);
        gbc.writeMem(0x5485, { 0x7c, 0x4d });
        gbc.writeMem(0x727f, { 0xe1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5487, gbc.sp());
        EXPECT(0x7280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0263
        gbc.setState(0x47cf, 0xa2d9, 0xe350, 0xf962, 0x25d1, 0x36cc, 0x0, 0x1);
        gbc.writeMem(0x47cf, { 0xe1 });
        gbc.writeMem(0xa2d9, { 0x6f, 0xa7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa2db, gbc.sp());
        EXPECT(0x47d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xa2d9));
        EXPECT(0xa7, gbc.readMem(0xa2da));
        // E1 0264
        gbc.setState(0x2948, 0x5adb, 0x4580, 0x6254, 0x6e36, 0x7f53, 0x0, 0x0);
        gbc.writeMem(0x2948, { 0xe1 });
        gbc.writeMem(0x5adb, { 0xa3, 0x17 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5add, gbc.sp());
        EXPECT(0x2949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0265
        gbc.setState(0x750a, 0x66fb, 0xfe10, 0x4724, 0x392f, 0xee68, 0x0, 0x0);
        gbc.writeMem(0x66fb, { 0x99, 0xd9 });
        gbc.writeMem(0x750a, { 0xe1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x66fd, gbc.sp());
        EXPECT(0x750b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0266
        gbc.setState(0x7da, 0xaf5e, 0x160, 0x6dac, 0x4d93, 0xaf6, 0x0, 0x0);
        gbc.writeMem(0x7da, { 0xe1 });
        gbc.writeMem(0xaf5e, { 0xf6, 0xcc });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xaf60, gbc.sp());
        EXPECT(0x7db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xaf5e));
        EXPECT(0xcc, gbc.readMem(0xaf5f));
        // E1 0267
        gbc.setState(0x6ae5, 0x2643, 0xdd70, 0x26be, 0x5e2f, 0x5c62, 0x1, 0x1);
        gbc.writeMem(0x2643, { 0xb4, 0x32 });
        gbc.writeMem(0x6ae5, { 0xe1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2645, gbc.sp());
        EXPECT(0x6ae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0268
        gbc.setState(0x3621, 0xa805, 0x69c0, 0x45ca, 0xa77b, 0xf50d, 0x1, 0x0);
        gbc.writeMem(0x3621, { 0xe1 });
        gbc.writeMem(0xa805, { 0x1e, 0x9a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa807, gbc.sp());
        EXPECT(0x3622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xa805));
        EXPECT(0x9a, gbc.readMem(0xa806));
        // E1 0269
        gbc.setState(0x90e3, 0xa9cc, 0x6000, 0x3d17, 0x1174, 0x659d, 0x0, 0x1);
        gbc.writeMem(0x90e3, { 0xe1 });
        gbc.writeMem(0xa9cc, { 0x19, 0x15 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa9ce, gbc.sp());
        EXPECT(0x90e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x90e3));
        EXPECT(0x19, gbc.readMem(0xa9cc));
        EXPECT(0x15, gbc.readMem(0xa9cd));
        // E1 026A
        gbc.setState(0x387b, 0xd282, 0x9b00, 0xdf8, 0x75fa, 0xe2be, 0x1, 0x1);
        gbc.writeMem(0x387b, { 0xe1 });
        gbc.writeMem(0xd282, { 0x28, 0xb8 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd284, gbc.sp());
        EXPECT(0x387c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xd282));
        EXPECT(0xb8, gbc.readMem(0xd283));
        // E1 026B
        gbc.setState(0x5ca9, 0x3113, 0x8720, 0x897b, 0x1739, 0x4df1, 0x0, 0x0);
        gbc.writeMem(0x3113, { 0x48, 0x28 });
        gbc.writeMem(0x5ca9, { 0xe1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3115, gbc.sp());
        EXPECT(0x5caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 026C
        gbc.setState(0x53d4, 0x7209, 0x9c20, 0x94da, 0x531c, 0x4f72, 0x0, 0x1);
        gbc.writeMem(0x53d4, { 0xe1 });
        gbc.writeMem(0x7209, { 0x11, 0xf9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x720b, gbc.sp());
        EXPECT(0x53d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 026D
        gbc.setState(0x2c3c, 0x2680, 0xbc10, 0x7a22, 0x1cf0, 0xd8ab, 0x0, 0x1);
        gbc.writeMem(0x2680, { 0x6e, 0x2b });
        gbc.writeMem(0x2c3c, { 0xe1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2682, gbc.sp());
        EXPECT(0x2c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 026E
        gbc.setState(0x11e9, 0x4223, 0x6f30, 0xce68, 0xcd0a, 0x2605, 0x1, 0x0);
        gbc.writeMem(0x11e9, { 0xe1 });
        gbc.writeMem(0x4223, { 0x8, 0xfe });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4225, gbc.sp());
        EXPECT(0x11ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 026F
        gbc.setState(0x73bd, 0x159d, 0x63d0, 0x9917, 0x4a15, 0xde94, 0x1, 0x0);
        gbc.writeMem(0x159d, { 0xe5, 0x80 });
        gbc.writeMem(0x73bd, { 0xe1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x159f, gbc.sp());
        EXPECT(0x73be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0270
        gbc.setState(0x6a16, 0x4c1a, 0x260, 0x7935, 0x826a, 0x9506, 0x1, 0x1);
        gbc.writeMem(0x4c1a, { 0x49, 0x57 });
        gbc.writeMem(0x6a16, { 0xe1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4c1c, gbc.sp());
        EXPECT(0x6a17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0271
        gbc.setState(0x4221, 0x534f, 0xd6b0, 0x5331, 0x5c99, 0xd25d, 0x1, 0x1);
        gbc.writeMem(0x4221, { 0xe1 });
        gbc.writeMem(0x534f, { 0xea, 0xf6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5351, gbc.sp());
        EXPECT(0x4222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0272
        gbc.setState(0x1262, 0xc340, 0xd680, 0xcfb4, 0xa5d5, 0x5225, 0x0, 0x1);
        gbc.writeMem(0x1262, { 0xe1 });
        gbc.writeMem(0xc340, { 0x70, 0x72 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc342, gbc.sp());
        EXPECT(0x1263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xc340));
        EXPECT(0x72, gbc.readMem(0xc341));
        // E1 0273
        gbc.setState(0x4a56, 0x184c, 0xa50, 0xfd7a, 0x6055, 0x6a5e, 0x0, 0x1);
        gbc.writeMem(0x184c, { 0xe8, 0x8c });
        gbc.writeMem(0x4a56, { 0xe1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x184e, gbc.sp());
        EXPECT(0x4a57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0274
        gbc.setState(0x8020, 0x5a9c, 0x5810, 0x24b0, 0xb0df, 0x3759, 0x1, 0x0);
        gbc.writeMem(0x5a9c, { 0xad, 0x9e });
        gbc.writeMem(0x8020, { 0xe1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5a9e, gbc.sp());
        EXPECT(0x8021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8020));
        // E1 0275
        gbc.setState(0x7edd, 0x11a3, 0xd20, 0xac3, 0x1646, 0x3c22, 0x1, 0x1);
        gbc.writeMem(0x11a3, { 0x65, 0x1e });
        gbc.writeMem(0x7edd, { 0xe1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x11a5, gbc.sp());
        EXPECT(0x7ede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0276
        gbc.setState(0x9b9f, 0x6197, 0x2110, 0x6916, 0x4928, 0xc230, 0x0, 0x0);
        gbc.writeMem(0x6197, { 0x4e, 0x91 });
        gbc.writeMem(0x9b9f, { 0xe1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6199, gbc.sp());
        EXPECT(0x9ba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9b9f));
        // E1 0277
        gbc.setState(0x9467, 0xbe06, 0x8630, 0x8cce, 0x5972, 0x95b7, 0x0, 0x1);
        gbc.writeMem(0x9467, { 0xe1 });
        gbc.writeMem(0xbe06, { 0x1f, 0x60 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbe08, gbc.sp());
        EXPECT(0x9468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9467));
        EXPECT(0x1f, gbc.readMem(0xbe06));
        EXPECT(0x60, gbc.readMem(0xbe07));
        // E1 0278
        gbc.setState(0x7261, 0x92d7, 0xd420, 0x46fe, 0x7ee, 0x6a1b, 0x1, 0x1);
        gbc.writeMem(0x7261, { 0xe1 });
        gbc.writeMem(0x92d7, { 0x4e, 0x4e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x92d9, gbc.sp());
        EXPECT(0x7262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x92d7));
        EXPECT(0x4e, gbc.readMem(0x92d8));
        // E1 0279
        gbc.setState(0x6e4a, 0x3a59, 0x47d0, 0x7ebf, 0x61ff, 0x82d9, 0x1, 0x1);
        gbc.writeMem(0x3a59, { 0xb8, 0x4d });
        gbc.writeMem(0x6e4a, { 0xe1 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3a5b, gbc.sp());
        EXPECT(0x6e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 027A
        gbc.setState(0x4201, 0x6a98, 0x12f0, 0x2688, 0x1887, 0xfcaa, 0x1, 0x1);
        gbc.writeMem(0x4201, { 0xe1 });
        gbc.writeMem(0x6a98, { 0x66, 0x48 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6a9a, gbc.sp());
        EXPECT(0x4202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 027B
        gbc.setState(0x4709, 0xbfb7, 0xb260, 0xac0b, 0xc96e, 0xccbb, 0x0, 0x0);
        gbc.writeMem(0x4709, { 0xe1 });
        gbc.writeMem(0xbfb7, { 0xf8, 0x37 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbfb9, gbc.sp());
        EXPECT(0x470a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xbfb7));
        EXPECT(0x37, gbc.readMem(0xbfb8));
        // E1 027C
        gbc.setState(0x393c, 0x6f1, 0x180, 0xd4b, 0xa627, 0x8337, 0x1, 0x1);
        gbc.writeMem(0x6f1, { 0x44, 0x28 });
        gbc.writeMem(0x393c, { 0xe1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6f3, gbc.sp());
        EXPECT(0x393d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 027E
        gbc.setState(0xcfe1, 0xed34, 0xdcf0, 0x5ffd, 0xae7c, 0x1888, 0x0, 0x0);
        gbc.writeMem(0xcfe1, { 0xe1 });
        gbc.writeMem(0xed34, { 0x73, 0xc4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xed36, gbc.sp());
        EXPECT(0xcfe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xcfe1));
        EXPECT(0x73, gbc.readMem(0xed34));
        EXPECT(0xc4, gbc.readMem(0xed35));
        // E1 027F
        gbc.setState(0x8138, 0x9395, 0x4230, 0xbab5, 0xd755, 0x341e, 0x0, 0x0);
        gbc.writeMem(0x8138, { 0xe1 });
        gbc.writeMem(0x9395, { 0x66, 0xa1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9397, gbc.sp());
        EXPECT(0x8139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8138));
        EXPECT(0x66, gbc.readMem(0x9395));
        EXPECT(0xa1, gbc.readMem(0x9396));
        // E1 0280
        gbc.setState(0xe3d6, 0x54d6, 0xc3a0, 0x575c, 0xefba, 0x9de0, 0x0, 0x0);
        gbc.writeMem(0x54d6, { 0x8c, 0x97 });
        gbc.writeMem(0xe3d6, { 0xe1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x54d8, gbc.sp());
        EXPECT(0xe3d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe3d6));
        // E1 0281
        gbc.setState(0xd7ff, 0x906f, 0xf140, 0x1bf0, 0xe1c4, 0x532a, 0x1, 0x1);
        gbc.writeMem(0x906f, { 0x12, 0x69 });
        gbc.writeMem(0xd7ff, { 0xe1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9071, gbc.sp());
        EXPECT(0xd800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x906f));
        EXPECT(0x69, gbc.readMem(0x9070));
        EXPECT(0xe1, gbc.readMem(0xd7ff));
        // E1 0284
        gbc.setState(0x2a3a, 0x4ab, 0x8e60, 0xce5c, 0xd06c, 0x1a6e, 0x1, 0x0);
        gbc.writeMem(0x4ab, { 0x69, 0xea });
        gbc.writeMem(0x2a3a, { 0xe1 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4ad, gbc.sp());
        EXPECT(0x2a3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0285
        gbc.setState(0x97ae, 0xf44c, 0x5f00, 0x19, 0x33f7, 0x9d70, 0x0, 0x1);
        gbc.writeMem(0x97ae, { 0xe1 });
        gbc.writeMem(0xf44c, { 0xc2, 0xbf });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf44e, gbc.sp());
        EXPECT(0x97af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x97ae));
        EXPECT(0xc2, gbc.readMem(0xf44c));
        EXPECT(0xbf, gbc.readMem(0xf44d));
        // E1 0286
        gbc.setState(0x4621, 0x7b92, 0x6230, 0x5415, 0xa6de, 0x55b7, 0x1, 0x0);
        gbc.writeMem(0x4621, { 0xe1 });
        gbc.writeMem(0x7b92, { 0x29, 0xee });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7b94, gbc.sp());
        EXPECT(0x4622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0287
        gbc.setState(0x78db, 0x7936, 0x60d0, 0xf522, 0xd7da, 0xea63, 0x1, 0x1);
        gbc.writeMem(0x78db, { 0xe1 });
        gbc.writeMem(0x7936, { 0xb8, 0x65 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7938, gbc.sp());
        EXPECT(0x78dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0288
        gbc.setState(0x11b8, 0x1528, 0x61d0, 0x6d84, 0xa017, 0x6a1a, 0x1, 0x0);
        gbc.writeMem(0x11b8, { 0xe1 });
        gbc.writeMem(0x1528, { 0xdd, 0xf0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x152a, gbc.sp());
        EXPECT(0x11b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0289
        gbc.setState(0xca1b, 0x156, 0x6810, 0x7cba, 0xfd62, 0x7c3f, 0x0, 0x0);
        gbc.writeMem(0x156, { 0xda, 0x8 });
        gbc.writeMem(0xca1b, { 0xe1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x158, gbc.sp());
        EXPECT(0xca1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xca1b));
        // E1 028A
        gbc.setState(0x5e01, 0x7d06, 0xa810, 0xdc1a, 0x93d6, 0xade9, 0x1, 0x1);
        gbc.writeMem(0x5e01, { 0xe1 });
        gbc.writeMem(0x7d06, { 0xc2, 0x76 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7d08, gbc.sp());
        EXPECT(0x5e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 028B
        gbc.setState(0x63a9, 0x3f90, 0x14a0, 0x3333, 0xf720, 0xb688, 0x0, 0x0);
        gbc.writeMem(0x3f90, { 0xda, 0x6e });
        gbc.writeMem(0x63a9, { 0xe1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3f92, gbc.sp());
        EXPECT(0x63aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 028C
        gbc.setState(0x47fa, 0xca23, 0xc290, 0x64d0, 0x5b46, 0xac04, 0x1, 0x0);
        gbc.writeMem(0x47fa, { 0xe1 });
        gbc.writeMem(0xca23, { 0xe9, 0x6e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xca25, gbc.sp());
        EXPECT(0x47fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xca23));
        EXPECT(0x6e, gbc.readMem(0xca24));
        // E1 028D
        gbc.setState(0xcff9, 0x14c9, 0x5b30, 0xe861, 0x4f1f, 0x726e, 0x0, 0x0);
        gbc.writeMem(0x14c9, { 0x23, 0xa2 });
        gbc.writeMem(0xcff9, { 0xe1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x14cb, gbc.sp());
        EXPECT(0xcffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xcff9));
        // E1 028E
        gbc.setState(0xbdd0, 0x465a, 0x9ad0, 0x77a3, 0xf1b9, 0x8d3, 0x0, 0x0);
        gbc.writeMem(0x465a, { 0x1c, 0x3e });
        gbc.writeMem(0xbdd0, { 0xe1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x465c, gbc.sp());
        EXPECT(0xbdd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xbdd0));
        // E1 028F
        gbc.setState(0xbc6a, 0xfefb, 0x9d30, 0x31b0, 0x8cb4, 0x8f8, 0x1, 0x0);
        gbc.writeMem(0xbc6a, { 0xe1 });
        gbc.writeMem(0xfefb, { 0xe8, 0x73 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfefd, gbc.sp());
        EXPECT(0xbc6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xbc6a));
        EXPECT(0xe8, gbc.readMem(0xfefb));
        EXPECT(0x73, gbc.readMem(0xfefc));
        // E1 0290
        gbc.setState(0x620d, 0x7b3c, 0x44d0, 0xc827, 0xc816, 0x1b3c, 0x1, 0x0);
        gbc.writeMem(0x620d, { 0xe1 });
        gbc.writeMem(0x7b3c, { 0x4d, 0xa1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7b3e, gbc.sp());
        EXPECT(0x620e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0291
        gbc.setState(0x243, 0x4ee6, 0x76a0, 0x242e, 0xe741, 0x574d, 0x1, 0x1);
        gbc.writeMem(0x243, { 0xe1 });
        gbc.writeMem(0x4ee6, { 0x3f, 0x2b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4ee8, gbc.sp());
        EXPECT(0x244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0292
        gbc.setState(0x7c0c, 0xa69, 0xa100, 0x4d71, 0x8f99, 0x3951, 0x0, 0x0);
        gbc.writeMem(0xa69, { 0xa3, 0x9c });
        gbc.writeMem(0x7c0c, { 0xe1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa6b, gbc.sp());
        EXPECT(0x7c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0293
        gbc.setState(0x2b6e, 0x23e, 0xf70, 0xb733, 0x82ed, 0xad76, 0x1, 0x0);
        gbc.writeMem(0x23e, { 0x86, 0xd6 });
        gbc.writeMem(0x2b6e, { 0xe1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x240, gbc.sp());
        EXPECT(0x2b6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0294
        gbc.setState(0xb292, 0xfa00, 0x45e0, 0xa5b7, 0xc18, 0xa4ae, 0x1, 0x1);
        gbc.writeMem(0xb292, { 0xe1 });
        gbc.writeMem(0xfa00, { 0x72, 0xa2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xfa02, gbc.sp());
        EXPECT(0xb293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb292));
        EXPECT(0x72, gbc.readMem(0xfa00));
        EXPECT(0xa2, gbc.readMem(0xfa01));
        // E1 0296
        gbc.setState(0xaa6d, 0xd2a1, 0xf060, 0x8766, 0x6c33, 0x55f, 0x1, 0x1);
        gbc.writeMem(0xaa6d, { 0xe1 });
        gbc.writeMem(0xd2a1, { 0xc7, 0xa5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd2a3, gbc.sp());
        EXPECT(0xaa6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xaa6d));
        EXPECT(0xc7, gbc.readMem(0xd2a1));
        EXPECT(0xa5, gbc.readMem(0xd2a2));
        // E1 0297
        gbc.setState(0xe1dc, 0x93d, 0x6e70, 0x5c7b, 0xda00, 0xc0c9, 0x0, 0x0);
        gbc.writeMem(0x93d, { 0x40, 0x41 });
        gbc.writeMem(0xe1dc, { 0xe1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x93f, gbc.sp());
        EXPECT(0xe1dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe1dc));
        // E1 029A
        gbc.setState(0x7bf3, 0x730, 0x6e00, 0x398e, 0x82cc, 0x6700, 0x0, 0x1);
        gbc.writeMem(0x730, { 0xeb, 0x26 });
        gbc.writeMem(0x7bf3, { 0xe1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x732, gbc.sp());
        EXPECT(0x7bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 029B
        gbc.setState(0xa48f, 0x5d35, 0x8540, 0xb0d5, 0xaaf1, 0x2169, 0x1, 0x1);
        gbc.writeMem(0x5d35, { 0x20, 0xf7 });
        gbc.writeMem(0xa48f, { 0xe1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5d37, gbc.sp());
        EXPECT(0xa490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa48f));
        // E1 029C
        gbc.setState(0x619, 0x9cef, 0xc60, 0xbf68, 0x628c, 0xd5f3, 0x0, 0x0);
        gbc.writeMem(0x619, { 0xe1 });
        gbc.writeMem(0x9cef, { 0x91, 0x94 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9cf1, gbc.sp());
        EXPECT(0x61a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9cef));
        EXPECT(0x94, gbc.readMem(0x9cf0));
        // E1 029D
        gbc.setState(0x352b, 0x473e, 0x8570, 0xa959, 0xd210, 0x88d3, 0x1, 0x0);
        gbc.writeMem(0x352b, { 0xe1 });
        gbc.writeMem(0x473e, { 0x21, 0x9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4740, gbc.sp());
        EXPECT(0x352c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 029E
        gbc.setState(0x3f0, 0xd666, 0x2bf0, 0x26c8, 0x76ed, 0xfe63, 0x0, 0x1);
        gbc.writeMem(0x3f0, { 0xe1 });
        gbc.writeMem(0xd666, { 0x19, 0x9b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd668, gbc.sp());
        EXPECT(0x3f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd666));
        EXPECT(0x9b, gbc.readMem(0xd667));
        // E1 029F
        gbc.setState(0x4d5f, 0x8d6f, 0x31a0, 0xd000, 0xad92, 0x678b, 0x0, 0x1);
        gbc.writeMem(0x4d5f, { 0xe1 });
        gbc.writeMem(0x8d6f, { 0x3a, 0xa3 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8d71, gbc.sp());
        EXPECT(0x4d60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x8d6f));
        EXPECT(0xa3, gbc.readMem(0x8d70));
        // E1 02A0
        gbc.setState(0xb7bb, 0x3dd6, 0xa4b0, 0x5b0f, 0x4060, 0x42b6, 0x0, 0x0);
        gbc.writeMem(0x3dd6, { 0x95, 0xd5 });
        gbc.writeMem(0xb7bb, { 0xe1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3dd8, gbc.sp());
        EXPECT(0xb7bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb7bb));
        // E1 02A1
        gbc.setState(0xceff, 0x2774, 0xbf60, 0x2665, 0xdb8b, 0x3b4, 0x0, 0x1);
        gbc.writeMem(0x2774, { 0x3c, 0xfb });
        gbc.writeMem(0xceff, { 0xe1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2776, gbc.sp());
        EXPECT(0xcf00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xceff));
        // E1 02A3
        gbc.setState(0xabc7, 0x773a, 0x5ef0, 0xff7b, 0xfdca, 0x8cfe, 0x1, 0x1);
        gbc.writeMem(0x773a, { 0xfd, 0xc9 });
        gbc.writeMem(0xabc7, { 0xe1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x773c, gbc.sp());
        EXPECT(0xabc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xabc7));
        // E1 02A5
        gbc.setState(0x2bb5, 0x9b4a, 0x85b0, 0xeba3, 0xfbb, 0x824, 0x0, 0x1);
        gbc.writeMem(0x2bb5, { 0xe1 });
        gbc.writeMem(0x9b4a, { 0xb0, 0x88 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9b4c, gbc.sp());
        EXPECT(0x2bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9b4a));
        EXPECT(0x88, gbc.readMem(0x9b4b));
        // E1 02A6
        gbc.setState(0x134b, 0xa6ea, 0xf810, 0xf579, 0x7501, 0xf678, 0x0, 0x1);
        gbc.writeMem(0x134b, { 0xe1 });
        gbc.writeMem(0xa6ea, { 0x1f, 0xdb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa6ec, gbc.sp());
        EXPECT(0x134c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xa6ea));
        EXPECT(0xdb, gbc.readMem(0xa6eb));
        // E1 02A7
        gbc.setState(0xce41, 0x6bc7, 0xf870, 0x76ea, 0xce35, 0xdfa0, 0x0, 0x1);
        gbc.writeMem(0x6bc7, { 0xd7, 0x58 });
        gbc.writeMem(0xce41, { 0xe1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6bc9, gbc.sp());
        EXPECT(0xce42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xce41));
        // E1 02A8
        gbc.setState(0x46a5, 0xf53, 0xfa50, 0x5624, 0x1c07, 0x4cfe, 0x0, 0x0);
        gbc.writeMem(0xf53, { 0x6f, 0xd1 });
        gbc.writeMem(0x46a5, { 0xe1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf55, gbc.sp());
        EXPECT(0x46a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 02A9
        gbc.setState(0x209e, 0xaf11, 0x45c0, 0xd8fc, 0xf0fb, 0x1457, 0x0, 0x0);
        gbc.writeMem(0x209e, { 0xe1 });
        gbc.writeMem(0xaf11, { 0x8e, 0x4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xaf13, gbc.sp());
        EXPECT(0x209f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xaf11));
        EXPECT(0x4, gbc.readMem(0xaf12));
        // E1 02AA
        gbc.setState(0x26b9, 0x2e87, 0xfb40, 0x41a, 0x2496, 0xb70d, 0x0, 0x1);
        gbc.writeMem(0x26b9, { 0xe1 });
        gbc.writeMem(0x2e87, { 0x4e, 0x93 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2e89, gbc.sp());
        EXPECT(0x26ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 02AB
        gbc.setState(0x5306, 0x8430, 0x2bf0, 0x4ef4, 0xc5ec, 0xbea2, 0x0, 0x1);
        gbc.writeMem(0x5306, { 0xe1 });
        gbc.writeMem(0x8430, { 0x3f, 0xe0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8432, gbc.sp());
        EXPECT(0x5307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8430));
        EXPECT(0xe0, gbc.readMem(0x8431));
        // E1 02AC
        gbc.setState(0x6f57, 0xb5c2, 0x5640, 0xb28f, 0x4bee, 0x9369, 0x1, 0x1);
        gbc.writeMem(0x6f57, { 0xe1 });
        gbc.writeMem(0xb5c2, { 0x0, 0x80 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb5c4, gbc.sp());
        EXPECT(0x6f58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb5c2));
        EXPECT(0x80, gbc.readMem(0xb5c3));
        // E1 02AD
        gbc.setState(0x1543, 0xf303, 0xc390, 0x2e3b, 0xb63e, 0x54dc, 0x1, 0x1);
        gbc.writeMem(0x1543, { 0xe1 });
        gbc.writeMem(0xf303, { 0xe, 0xb3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf305, gbc.sp());
        EXPECT(0x1544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xf303));
        EXPECT(0xb3, gbc.readMem(0xf304));
        // E1 02AF
        gbc.setState(0xd985, 0xafbf, 0x96c0, 0xc05d, 0x8698, 0x1006, 0x1, 0x0);
        gbc.writeMem(0xafbf, { 0x58, 0xe2 });
        gbc.writeMem(0xd985, { 0xe1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xafc1, gbc.sp());
        EXPECT(0xd986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xafbf));
        EXPECT(0xe2, gbc.readMem(0xafc0));
        EXPECT(0xe1, gbc.readMem(0xd985));
        // E1 02B0
        gbc.setState(0x469d, 0x1db7, 0xd440, 0x1e0a, 0x64d1, 0x730, 0x1, 0x0);
        gbc.writeMem(0x1db7, { 0x8, 0x2e });
        gbc.writeMem(0x469d, { 0xe1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1db9, gbc.sp());
        EXPECT(0x469e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 02B1
        gbc.setState(0x9143, 0xbf20, 0x86e0, 0x1714, 0x9d94, 0xaccb, 0x0, 0x1);
        gbc.writeMem(0x9143, { 0xe1 });
        gbc.writeMem(0xbf20, { 0xd, 0xbb });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xbf22, gbc.sp());
        EXPECT(0x9144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9143));
        EXPECT(0xd, gbc.readMem(0xbf20));
        EXPECT(0xbb, gbc.readMem(0xbf21));
        // E1 02B2
        gbc.setState(0xc51f, 0xe924, 0x2090, 0x80f9, 0x831a, 0xbb2, 0x1, 0x0);
        gbc.writeMem(0xc51f, { 0xe1 });
        gbc.writeMem(0xe924, { 0xba, 0xb0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe926, gbc.sp());
        EXPECT(0xc520, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc51f));
        EXPECT(0xba, gbc.readMem(0xe924));
        EXPECT(0xb0, gbc.readMem(0xe925));
        // E1 02B3
        gbc.setState(0xe9a9, 0xfe9d, 0x4400, 0xf0b7, 0x9dfe, 0xad60, 0x0, 0x1);
        gbc.writeMem(0xe9a9, { 0xe1 });
        gbc.writeMem(0xfe9d, { 0xb9, 0x6d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfe9f, gbc.sp());
        EXPECT(0xe9aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe9a9));
        EXPECT(0xb9, gbc.readMem(0xfe9d));
        EXPECT(0x6d, gbc.readMem(0xfe9e));
        // E1 02B4
        gbc.setState(0xb3fb, 0x8172, 0x10c0, 0x2be5, 0xe50a, 0x373, 0x0, 0x1);
        gbc.writeMem(0x8172, { 0x68, 0xd8 });
        gbc.writeMem(0xb3fb, { 0xe1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8174, gbc.sp());
        EXPECT(0xb3fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8172));
        EXPECT(0xd8, gbc.readMem(0x8173));
        EXPECT(0xe1, gbc.readMem(0xb3fb));
        // E1 02B5
        gbc.setState(0xe139, 0x636c, 0x6940, 0x12d6, 0x841c, 0xa736, 0x0, 0x0);
        gbc.writeMem(0x636c, { 0xb, 0x17 });
        gbc.writeMem(0xe139, { 0xe1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x636e, gbc.sp());
        EXPECT(0xe13a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe139));
        // E1 02B6
        gbc.setState(0xcafe, 0xafe1, 0x5960, 0xd0a5, 0xb394, 0xf3ad, 0x1, 0x0);
        gbc.writeMem(0xafe1, { 0x68, 0xc5 });
        gbc.writeMem(0xcafe, { 0xe1 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xafe3, gbc.sp());
        EXPECT(0xcaff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xafe1));
        EXPECT(0xc5, gbc.readMem(0xafe2));
        EXPECT(0xe1, gbc.readMem(0xcafe));
        // E1 02B7
        gbc.setState(0xdbd7, 0xae80, 0x20f0, 0x8bc9, 0x9bf6, 0x7839, 0x1, 0x1);
        gbc.writeMem(0xae80, { 0xbe, 0xd3 });
        gbc.writeMem(0xdbd7, { 0xe1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xae82, gbc.sp());
        EXPECT(0xdbd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xae80));
        EXPECT(0xd3, gbc.readMem(0xae81));
        EXPECT(0xe1, gbc.readMem(0xdbd7));
        // E1 02B8
        gbc.setState(0x8248, 0x7e87, 0x24b0, 0x7f89, 0xcfc8, 0x6c4, 0x0, 0x1);
        gbc.writeMem(0x7e87, { 0x2b, 0x24 });
        gbc.writeMem(0x8248, { 0xe1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7e89, gbc.sp());
        EXPECT(0x8249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8248));
        // E1 02B9
        gbc.setState(0x6caf, 0x915d, 0x68d0, 0xbfac, 0xc21b, 0x2b5, 0x0, 0x1);
        gbc.writeMem(0x6caf, { 0xe1 });
        gbc.writeMem(0x915d, { 0xd2, 0xc5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x915f, gbc.sp());
        EXPECT(0x6cb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x915d));
        EXPECT(0xc5, gbc.readMem(0x915e));
        // E1 02BA
        gbc.setState(0x36fe, 0x8cc2, 0x6960, 0x9282, 0x9e54, 0xd936, 0x1, 0x0);
        gbc.writeMem(0x36fe, { 0xe1 });
        gbc.writeMem(0x8cc2, { 0x91, 0x40 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8cc4, gbc.sp());
        EXPECT(0x36ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8cc2));
        EXPECT(0x40, gbc.readMem(0x8cc3));
        // E1 02BB
        gbc.setState(0x2885, 0x15a8, 0xc190, 0x90b, 0xea86, 0xe280, 0x0, 0x0);
        gbc.writeMem(0x15a8, { 0x60, 0xe6 });
        gbc.writeMem(0x2885, { 0xe1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x15aa, gbc.sp());
        EXPECT(0x2886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 02BC
        gbc.setState(0x5bde, 0x9e79, 0x8940, 0xc355, 0x253d, 0x7424, 0x0, 0x0);
        gbc.writeMem(0x5bde, { 0xe1 });
        gbc.writeMem(0x9e79, { 0x68, 0x3e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9e7b, gbc.sp());
        EXPECT(0x5bdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9e79));
        EXPECT(0x3e, gbc.readMem(0x9e7a));
        // E1 02BD
        gbc.setState(0x2982, 0x919f, 0x5840, 0x16c1, 0x47d4, 0xaff3, 0x1, 0x0);
        gbc.writeMem(0x2982, { 0xe1 });
        gbc.writeMem(0x919f, { 0x48, 0xc4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x91a1, gbc.sp());
        EXPECT(0x2983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x919f));
        EXPECT(0xc4, gbc.readMem(0x91a0));
        // E1 02BE
        gbc.setState(0x4f5b, 0x3d7a, 0x5a90, 0xaa84, 0x90f1, 0x1181, 0x1, 0x0);
        gbc.writeMem(0x3d7a, { 0xfd, 0xf9 });
        gbc.writeMem(0x4f5b, { 0xe1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3d7c, gbc.sp());
        EXPECT(0x4f5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 02BF
        gbc.setState(0x82cd, 0x6ca3, 0xbaf0, 0x5d9d, 0x23eb, 0x12b0, 0x0, 0x1);
        gbc.writeMem(0x6ca3, { 0xf7, 0x4a });
        gbc.writeMem(0x82cd, { 0xe1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6ca5, gbc.sp());
        EXPECT(0x82ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x82cd));
        // E1 02C0
        gbc.setState(0x9d11, 0x1f05, 0xe8c0, 0x1a88, 0xdce6, 0xeb3f, 0x1, 0x0);
        gbc.writeMem(0x1f05, { 0x46, 0x16 });
        gbc.writeMem(0x9d11, { 0xe1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1f07, gbc.sp());
        EXPECT(0x9d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9d11));
        // E1 02C1
        gbc.setState(0xa468, 0xbfff, 0x29e0, 0x478e, 0xe41, 0x4b4c, 0x1, 0x1);
        gbc.writeMem(0xa468, { 0xe1 });
        gbc.writeMem(0xbfff, { 0x41, 0xd1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc001, gbc.sp());
        EXPECT(0xa469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa468));
        EXPECT(0x41, gbc.readMem(0xbfff));
        EXPECT(0xd1, gbc.readMem(0xc000));
        // E1 02C2
        gbc.setState(0x2fef, 0x5953, 0x2050, 0x7da4, 0x298d, 0xe567, 0x0, 0x1);
        gbc.writeMem(0x2fef, { 0xe1 });
        gbc.writeMem(0x5953, { 0x1, 0xcc });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5955, gbc.sp());
        EXPECT(0x2ff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 02C3
        gbc.setState(0xe539, 0x5fbe, 0x3680, 0x1b92, 0x4501, 0xc9b5, 0x0, 0x0);
        gbc.writeMem(0x5fbe, { 0x15, 0x98 });
        gbc.writeMem(0xe539, { 0xe1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5fc0, gbc.sp());
        EXPECT(0xe53a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe539));
        // E1 02C4
        gbc.setState(0x370f, 0x3c5f, 0xe640, 0x8872, 0xb735, 0x9bd8, 0x1, 0x1);
        gbc.writeMem(0x370f, { 0xe1 });
        gbc.writeMem(0x3c5f, { 0x11, 0xef });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3c61, gbc.sp());
        EXPECT(0x3710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 02C5
        gbc.setState(0x26b5, 0x8d32, 0xafe0, 0x348c, 0xa366, 0xb068, 0x0, 0x0);
        gbc.writeMem(0x26b5, { 0xe1 });
        gbc.writeMem(0x8d32, { 0xcb, 0xa8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8d34, gbc.sp());
        EXPECT(0x26b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d32));
        EXPECT(0xa8, gbc.readMem(0x8d33));
        // E1 02C6
        gbc.setState(0x700, 0x63a7, 0x21f0, 0x9489, 0xe9d9, 0x7131, 0x0, 0x0);
        gbc.writeMem(0x700, { 0xe1 });
        gbc.writeMem(0x63a7, { 0xcd, 0xf7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x63a9, gbc.sp());
        EXPECT(0x701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 02C7
        gbc.setState(0x6c8d, 0xe707, 0xa870, 0x6061, 0xee1c, 0xd455, 0x1, 0x0);
        gbc.writeMem(0x6c8d, { 0xe1 });
        gbc.writeMem(0xe707, { 0x77, 0x88 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe709, gbc.sp());
        EXPECT(0x6c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xe707));
        EXPECT(0x88, gbc.readMem(0xe708));
        // E1 02C8
        gbc.setState(0x3f35, 0x5f2f, 0x7320, 0x50fd, 0xf44f, 0x80e1, 0x1, 0x0);
        gbc.writeMem(0x3f35, { 0xe1 });
        gbc.writeMem(0x5f2f, { 0xee, 0x3e });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5f31, gbc.sp());
        EXPECT(0x3f36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 02C9
        gbc.setState(0xbd8b, 0x4e58, 0xced0, 0xd549, 0xb2e, 0x55bd, 0x0, 0x0);
        gbc.writeMem(0x4e58, { 0xe5, 0xb0 });
        gbc.writeMem(0xbd8b, { 0xe1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4e5a, gbc.sp());
        EXPECT(0xbd8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xbd8b));
        // E1 02CA
        gbc.setState(0x466f, 0xc50d, 0xc020, 0x20bc, 0x9db9, 0xe6c, 0x1, 0x0);
        gbc.writeMem(0x466f, { 0xe1 });
        gbc.writeMem(0xc50d, { 0xf8, 0xa8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc50f, gbc.sp());
        EXPECT(0x4670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc50d));
        EXPECT(0xa8, gbc.readMem(0xc50e));
        // E1 02CB
        gbc.setState(0x2ab0, 0x37ab, 0xc790, 0xaa23, 0xc4a7, 0xc89c, 0x1, 0x1);
        gbc.writeMem(0x2ab0, { 0xe1 });
        gbc.writeMem(0x37ab, { 0xd5, 0x6a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x37ad, gbc.sp());
        EXPECT(0x2ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 02CC
        gbc.setState(0x8bc7, 0x9bc2, 0xb000, 0x5848, 0xc41b, 0x56f2, 0x0, 0x0);
        gbc.writeMem(0x8bc7, { 0xe1 });
        gbc.writeMem(0x9bc2, { 0xb0, 0x9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9bc4, gbc.sp());
        EXPECT(0x8bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8bc7));
        EXPECT(0xb0, gbc.readMem(0x9bc2));
        EXPECT(0x9, gbc.readMem(0x9bc3));
        // E1 02CE
        gbc.setState(0x2b4a, 0xe586, 0xe340, 0x34bf, 0xb7d5, 0xc62d, 0x1, 0x0);
        gbc.writeMem(0x2b4a, { 0xe1 });
        gbc.writeMem(0xe586, { 0x36, 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe588, gbc.sp());
        EXPECT(0x2b4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xe586));
        EXPECT(0x0, gbc.readMem(0xe587));
        // E1 02CF
        gbc.setState(0x735f, 0x65e8, 0x2eb0, 0xb151, 0xbc0e, 0xa343, 0x1, 0x0);
        gbc.writeMem(0x65e8, { 0x87, 0x82 });
        gbc.writeMem(0x735f, { 0xe1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x65ea, gbc.sp());
        EXPECT(0x7360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 02D0
        gbc.setState(0xbb3b, 0x50bb, 0x9d50, 0xa03a, 0xd3e6, 0xc632, 0x1, 0x1);
        gbc.writeMem(0x50bb, { 0x1a, 0xb4 });
        gbc.writeMem(0xbb3b, { 0xe1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x50bd, gbc.sp());
        EXPECT(0xbb3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xbb3b));
        // E1 02D1
        gbc.setState(0x711e, 0xcc8, 0x9e70, 0x81f, 0xea2, 0x7d92, 0x0, 0x0);
        gbc.writeMem(0xcc8, { 0xae, 0x1d });
        gbc.writeMem(0x711e, { 0xe1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcca, gbc.sp());
        EXPECT(0x711f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 02D2
        gbc.setState(0x9fe, 0x7517, 0x7a0, 0xbef0, 0xc3a2, 0xce94, 0x0, 0x1);
        gbc.writeMem(0x9fe, { 0xe1 });
        gbc.writeMem(0x7517, { 0xc9, 0xb8 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7519, gbc.sp());
        EXPECT(0x9ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 02D3
        gbc.setState(0x2439, 0x46ac, 0x4790, 0xb2e8, 0x57fc, 0x2567, 0x1, 0x1);
        gbc.writeMem(0x2439, { 0xe1 });
        gbc.writeMem(0x46ac, { 0xb5, 0x7a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x46ae, gbc.sp());
        EXPECT(0x243a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 02D4
        gbc.setState(0x137f, 0xdb6c, 0x45b0, 0xc134, 0xc649, 0xc17f, 0x0, 0x0);
        gbc.writeMem(0x137f, { 0xe1 });
        gbc.writeMem(0xdb6c, { 0xc5, 0x61 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdb6e, gbc.sp());
        EXPECT(0x1380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xdb6c));
        EXPECT(0x61, gbc.readMem(0xdb6d));
        // E1 02D5
        gbc.setState(0xb31a, 0x773c, 0x5720, 0xdc03, 0x70ce, 0x882d, 0x1, 0x1);
        gbc.writeMem(0x773c, { 0xc8, 0xc5 });
        gbc.writeMem(0xb31a, { 0xe1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x773e, gbc.sp());
        EXPECT(0xb31b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb31a));
        // E1 02D6
        gbc.setState(0xc854, 0x6dc3, 0x3d90, 0x44d8, 0xd2b3, 0xbebe, 0x0, 0x0);
        gbc.writeMem(0x6dc3, { 0x4d, 0x63 });
        gbc.writeMem(0xc854, { 0xe1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6dc5, gbc.sp());
        EXPECT(0xc855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc854));
        // E1 02D8
        gbc.setState(0x795b, 0x6ba3, 0x22c0, 0x9cb4, 0x5d93, 0xe271, 0x1, 0x1);
        gbc.writeMem(0x6ba3, { 0x43, 0xcc });
        gbc.writeMem(0x795b, { 0xe1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6ba5, gbc.sp());
        EXPECT(0x795c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 02D9
        gbc.setState(0x54ac, 0xdc2f, 0xc420, 0xe1ef, 0xd2a2, 0x9fa7, 0x1, 0x0);
        gbc.writeMem(0x54ac, { 0xe1 });
        gbc.writeMem(0xdc2f, { 0x6b, 0x7d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xdc31, gbc.sp());
        EXPECT(0x54ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xdc2f));
        EXPECT(0x7d, gbc.readMem(0xdc30));
        // E1 02DA
        gbc.setState(0x9800, 0x1186, 0xff50, 0xc0ec, 0xa13d, 0x265f, 0x1, 0x1);
        gbc.writeMem(0x1186, { 0x28, 0x3f });
        gbc.writeMem(0x9800, { 0xe1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1188, gbc.sp());
        EXPECT(0x9801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9800));
        // E1 02DB
        gbc.setState(0x3391, 0x79aa, 0xf390, 0x62df, 0xb90b, 0xa5ba, 0x0, 0x0);
        gbc.writeMem(0x3391, { 0xe1 });
        gbc.writeMem(0x79aa, { 0x8c, 0xff });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x79ac, gbc.sp());
        EXPECT(0x3392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 02DC
        gbc.setState(0xc188, 0xa15, 0x8df0, 0x97a9, 0xe34d, 0xe5e5, 0x1, 0x0);
        gbc.writeMem(0xa15, { 0xf5, 0xc4 });
        gbc.writeMem(0xc188, { 0xe1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa17, gbc.sp());
        EXPECT(0xc189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc188));
        // E1 02DD
        gbc.setState(0xb411, 0x9782, 0xd160, 0x7618, 0x5ad8, 0xad5a, 0x1, 0x1);
        gbc.writeMem(0x9782, { 0x98, 0x92 });
        gbc.writeMem(0xb411, { 0xe1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9784, gbc.sp());
        EXPECT(0xb412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9782));
        EXPECT(0x92, gbc.readMem(0x9783));
        EXPECT(0xe1, gbc.readMem(0xb411));
        // E1 02DE
        gbc.setState(0x4b5e, 0xd499, 0xea90, 0xd547, 0x454b, 0x3be6, 0x1, 0x1);
        gbc.writeMem(0x4b5e, { 0xe1 });
        gbc.writeMem(0xd499, { 0x44, 0x46 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd49b, gbc.sp());
        EXPECT(0x4b5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd499));
        EXPECT(0x46, gbc.readMem(0xd49a));
        // E1 02DF
        gbc.setState(0x49c, 0xa8f6, 0xd840, 0xc94c, 0xe56e, 0xa71, 0x0, 0x0);
        gbc.writeMem(0x49c, { 0xe1 });
        gbc.writeMem(0xa8f6, { 0x4f, 0x20 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa8f8, gbc.sp());
        EXPECT(0x49d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xa8f6));
        EXPECT(0x20, gbc.readMem(0xa8f7));
        // E1 02E0
        gbc.setState(0x3fb7, 0xf9ca, 0xf910, 0x5a83, 0xad0b, 0x8a65, 0x0, 0x0);
        gbc.writeMem(0x3fb7, { 0xe1 });
        gbc.writeMem(0xf9ca, { 0xf1, 0xd5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf9cc, gbc.sp());
        EXPECT(0x3fb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xf9ca));
        EXPECT(0xd5, gbc.readMem(0xf9cb));
        // E1 02E1
        gbc.setState(0xea42, 0x6346, 0x3040, 0xf87, 0xaee3, 0x1b30, 0x1, 0x1);
        gbc.writeMem(0x6346, { 0x79, 0x1 });
        gbc.writeMem(0xea42, { 0xe1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6348, gbc.sp());
        EXPECT(0xea43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xea42));
        // E1 02E2
        gbc.setState(0x5f00, 0xd4ba, 0xf220, 0x8901, 0xb7fc, 0x2b1a, 0x1, 0x1);
        gbc.writeMem(0x5f00, { 0xe1 });
        gbc.writeMem(0xd4ba, { 0x7b, 0x4b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd4bc, gbc.sp());
        EXPECT(0x5f01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd4ba));
        EXPECT(0x4b, gbc.readMem(0xd4bb));
        // E1 02E3
        gbc.setState(0x400b, 0xef66, 0xc250, 0x560d, 0x739b, 0x50a1, 0x1, 0x1);
        gbc.writeMem(0x400b, { 0xe1 });
        gbc.writeMem(0xef66, { 0x94, 0x9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xef68, gbc.sp());
        EXPECT(0x400c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xef66));
        EXPECT(0x9, gbc.readMem(0xef67));
        // E1 02E4
        gbc.setState(0x1232, 0xec9e, 0xa4e0, 0x4652, 0x69c6, 0xd6ab, 0x0, 0x0);
        gbc.writeMem(0x1232, { 0xe1 });
        gbc.writeMem(0xec9e, { 0x34, 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xeca0, gbc.sp());
        EXPECT(0x1233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xec9e));
        EXPECT(0xa4, gbc.readMem(0xec9f));
        // E1 02E5
        gbc.setState(0xb73e, 0xc3ac, 0x6750, 0xbcfd, 0x3dc2, 0x63bf, 0x0, 0x1);
        gbc.writeMem(0xb73e, { 0xe1 });
        gbc.writeMem(0xc3ac, { 0xc8, 0x69 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc3ae, gbc.sp());
        EXPECT(0xb73f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb73e));
        EXPECT(0xc8, gbc.readMem(0xc3ac));
        EXPECT(0x69, gbc.readMem(0xc3ad));
        // E1 02E6
        gbc.setState(0xcfd9, 0x3516, 0xa950, 0x911f, 0xed0, 0x70aa, 0x1, 0x1);
        gbc.writeMem(0x3516, { 0x0, 0x2b });
        gbc.writeMem(0xcfd9, { 0xe1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3518, gbc.sp());
        EXPECT(0xcfda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xcfd9));
        // E1 02E8
        gbc.setState(0x1178, 0xcae3, 0x6630, 0x876c, 0x4df5, 0x1e13, 0x1, 0x0);
        gbc.writeMem(0x1178, { 0xe1 });
        gbc.writeMem(0xcae3, { 0x57, 0xc7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xcae5, gbc.sp());
        EXPECT(0x1179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcae3));
        EXPECT(0xc7, gbc.readMem(0xcae4));
        // E1 02E9
        gbc.setState(0x9c31, 0x2127, 0xe330, 0xf7e5, 0xec59, 0x2144, 0x0, 0x0);
        gbc.writeMem(0x2127, { 0xd6, 0x3a });
        gbc.writeMem(0x9c31, { 0xe1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2129, gbc.sp());
        EXPECT(0x9c32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9c31));
        // E1 02EA
        gbc.setState(0x5109, 0x6674, 0x3bf0, 0x9cbf, 0x6045, 0xb52f, 0x1, 0x1);
        gbc.writeMem(0x5109, { 0xe1 });
        gbc.writeMem(0x6674, { 0x58, 0xac });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6676, gbc.sp());
        EXPECT(0x510a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 02EC
        gbc.setState(0x58a3, 0xfe9, 0x4ac0, 0xe42b, 0x3349, 0x8ac3, 0x0, 0x1);
        gbc.writeMem(0xfe9, { 0x3, 0x4e });
        gbc.writeMem(0x58a3, { 0xe1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xfeb, gbc.sp());
        EXPECT(0x58a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 02ED
        gbc.setState(0xe14f, 0x1555, 0xf610, 0xfc4c, 0x2a4a, 0x53c5, 0x0, 0x1);
        gbc.writeMem(0x1555, { 0xf0, 0xdb });
        gbc.writeMem(0xe14f, { 0xe1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1557, gbc.sp());
        EXPECT(0xe150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe14f));
        // E1 02EE
        gbc.setState(0x7c72, 0xa72b, 0x9740, 0x4244, 0x3a47, 0x335f, 0x0, 0x1);
        gbc.writeMem(0x7c72, { 0xe1 });
        gbc.writeMem(0xa72b, { 0x70, 0xd0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa72d, gbc.sp());
        EXPECT(0x7c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xa72b));
        EXPECT(0xd0, gbc.readMem(0xa72c));
        // E1 02EF
        gbc.setState(0x1cee, 0xdf73, 0xe00, 0xf3b, 0xc403, 0xc02c, 0x1, 0x1);
        gbc.writeMem(0x1cee, { 0xe1 });
        gbc.writeMem(0xdf73, { 0xb7, 0x47 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdf75, gbc.sp());
        EXPECT(0x1cef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdf73));
        EXPECT(0x47, gbc.readMem(0xdf74));
        // E1 02F0
        gbc.setState(0xd01, 0xf10d, 0x1c90, 0x4c44, 0x52c4, 0x207, 0x1, 0x0);
        gbc.writeMem(0xd01, { 0xe1 });
        gbc.writeMem(0xf10d, { 0x4f, 0xeb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf10f, gbc.sp());
        EXPECT(0xd02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xf10d));
        EXPECT(0xeb, gbc.readMem(0xf10e));
        // E1 02F1
        gbc.setState(0xc702, 0xff5c, 0x3f10, 0x9d55, 0x6a23, 0x36e4, 0x0, 0x0);
        gbc.writeMem(0xc702, { 0xe1 });
        gbc.writeMem(0xff5c, { 0xc3, 0x1a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xff5e, gbc.sp());
        EXPECT(0xc703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc702));
        EXPECT(0xc3, gbc.readMem(0xff5c));
        EXPECT(0x1a, gbc.readMem(0xff5d));
        // E1 02F2
        gbc.setState(0xbd03, 0xb605, 0xb00, 0x891b, 0xbcf7, 0x6721, 0x0, 0x0);
        gbc.writeMem(0xb605, { 0x26, 0x9d });
        gbc.writeMem(0xbd03, { 0xe1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb607, gbc.sp());
        EXPECT(0xbd04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb605));
        EXPECT(0x9d, gbc.readMem(0xb606));
        EXPECT(0xe1, gbc.readMem(0xbd03));
        // E1 02F3
        gbc.setState(0x15be, 0xafa, 0x82b0, 0x4081, 0xefd6, 0x6523, 0x0, 0x0);
        gbc.writeMem(0xafa, { 0xdc, 0x5b });
        gbc.writeMem(0x15be, { 0xe1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xafc, gbc.sp());
        EXPECT(0x15bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 02F4
        gbc.setState(0x6c46, 0xee33, 0x4850, 0x3020, 0xd4a0, 0xf64a, 0x1, 0x1);
        gbc.writeMem(0x6c46, { 0xe1 });
        gbc.writeMem(0xee33, { 0x7e, 0x5c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xee35, gbc.sp());
        EXPECT(0x6c47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xee33));
        EXPECT(0x5c, gbc.readMem(0xee34));
        // E1 02F5
        gbc.setState(0x7222, 0x3860, 0x4d90, 0xf64c, 0xa134, 0xf3d5, 0x1, 0x1);
        gbc.writeMem(0x3860, { 0x74, 0xdb });
        gbc.writeMem(0x7222, { 0xe1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3862, gbc.sp());
        EXPECT(0x7223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 02F6
        gbc.setState(0x538c, 0xc7ed, 0xcba0, 0x25bc, 0xf404, 0xdfe4, 0x0, 0x0);
        gbc.writeMem(0x538c, { 0xe1 });
        gbc.writeMem(0xc7ed, { 0x9d, 0x4f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc7ef, gbc.sp());
        EXPECT(0x538d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc7ed));
        EXPECT(0x4f, gbc.readMem(0xc7ee));
        // E1 02F7
        gbc.setState(0x3448, 0x8e36, 0x8850, 0x5314, 0x6dc9, 0x6137, 0x1, 0x0);
        gbc.writeMem(0x3448, { 0xe1 });
        gbc.writeMem(0x8e36, { 0x9c, 0x47 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8e38, gbc.sp());
        EXPECT(0x3449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8e36));
        EXPECT(0x47, gbc.readMem(0x8e37));
        // E1 02F8
        gbc.setState(0x6fd, 0xf5f9, 0xc460, 0x195e, 0xbad7, 0x1779, 0x0, 0x0);
        gbc.writeMem(0x6fd, { 0xe1 });
        gbc.writeMem(0xf5f9, { 0x82, 0x3 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf5fb, gbc.sp());
        EXPECT(0x6fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xf5f9));
        EXPECT(0x3, gbc.readMem(0xf5fa));
        // E1 02F9
        gbc.setState(0x348c, 0xb93f, 0x6180, 0x6bce, 0xf067, 0x783f, 0x0, 0x1);
        gbc.writeMem(0x348c, { 0xe1 });
        gbc.writeMem(0xb93f, { 0x6e, 0xc8 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb941, gbc.sp());
        EXPECT(0x348d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb93f));
        EXPECT(0xc8, gbc.readMem(0xb940));
        // E1 02FA
        gbc.setState(0xc215, 0x70a8, 0xa7d0, 0x7247, 0x7c09, 0xe1fb, 0x1, 0x1);
        gbc.writeMem(0x70a8, { 0x1a, 0xf });
        gbc.writeMem(0xc215, { 0xe1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x70aa, gbc.sp());
        EXPECT(0xc216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc215));
        // E1 02FB
        gbc.setState(0xa397, 0x5b42, 0x7770, 0xa2a7, 0xfdca, 0xdd98, 0x1, 0x1);
        gbc.writeMem(0x5b42, { 0x4b, 0x15 });
        gbc.writeMem(0xa397, { 0xe1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5b44, gbc.sp());
        EXPECT(0xa398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa397));
        // E1 02FE
        gbc.setState(0xc948, 0xb5b6, 0x9e00, 0xcebe, 0x6601, 0x49be, 0x0, 0x0);
        gbc.writeMem(0xb5b6, { 0xce, 0xc9 });
        gbc.writeMem(0xc948, { 0xe1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb5b8, gbc.sp());
        EXPECT(0xc949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xb5b6));
        EXPECT(0xc9, gbc.readMem(0xb5b7));
        EXPECT(0xe1, gbc.readMem(0xc948));
        // E1 0300
        gbc.setState(0xbbc4, 0x8c8b, 0xa990, 0x3652, 0xfaf0, 0x7fb3, 0x1, 0x1);
        gbc.writeMem(0x8c8b, { 0x46, 0x96 });
        gbc.writeMem(0xbbc4, { 0xe1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8c8d, gbc.sp());
        EXPECT(0xbbc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x8c8b));
        EXPECT(0x96, gbc.readMem(0x8c8c));
        EXPECT(0xe1, gbc.readMem(0xbbc4));
        // E1 0301
        gbc.setState(0xb37b, 0xc33e, 0xe5a0, 0x9a45, 0x4fd5, 0xdfd6, 0x0, 0x1);
        gbc.writeMem(0xb37b, { 0xe1 });
        gbc.writeMem(0xc33e, { 0x72, 0x6d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc340, gbc.sp());
        EXPECT(0xb37c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb37b));
        EXPECT(0x72, gbc.readMem(0xc33e));
        EXPECT(0x6d, gbc.readMem(0xc33f));
        // E1 0302
        gbc.setState(0x4887, 0xe92f, 0xc2d0, 0xcef3, 0x292d, 0xc718, 0x0, 0x1);
        gbc.writeMem(0x4887, { 0xe1 });
        gbc.writeMem(0xe92f, { 0x68, 0x4f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe931, gbc.sp());
        EXPECT(0x4888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe92f));
        EXPECT(0x4f, gbc.readMem(0xe930));
        // E1 0303
        gbc.setState(0xa4e9, 0x3c1f, 0x83c0, 0x2729, 0x1c6c, 0x225, 0x1, 0x1);
        gbc.writeMem(0x3c1f, { 0x46, 0xdf });
        gbc.writeMem(0xa4e9, { 0xe1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3c21, gbc.sp());
        EXPECT(0xa4ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa4e9));
        // E1 0304
        gbc.setState(0xefed, 0xbc4f, 0x50d0, 0x6516, 0x6b92, 0xc654, 0x0, 0x0);
        gbc.writeMem(0xbc4f, { 0x38, 0x89 });
        gbc.writeMem(0xefed, { 0xe1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbc51, gbc.sp());
        EXPECT(0xefee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbc4f));
        EXPECT(0x89, gbc.readMem(0xbc50));
        EXPECT(0xe1, gbc.readMem(0xefed));
        // E1 0305
        gbc.setState(0x87e1, 0x574, 0xd380, 0xa32, 0x6f6a, 0x5cf9, 0x1, 0x0);
        gbc.writeMem(0x574, { 0xea, 0xe8 });
        gbc.writeMem(0x87e1, { 0xe1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x576, gbc.sp());
        EXPECT(0x87e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x87e1));
        // E1 0306
        gbc.setState(0x79dc, 0xd75e, 0x32c0, 0x3c2c, 0xa9c, 0x1aa0, 0x0, 0x0);
        gbc.writeMem(0x79dc, { 0xe1 });
        gbc.writeMem(0xd75e, { 0xee, 0xd2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd760, gbc.sp());
        EXPECT(0x79dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xd75e));
        EXPECT(0xd2, gbc.readMem(0xd75f));
        // E1 0307
        gbc.setState(0x6488, 0xdcc0, 0x7130, 0xe001, 0xfd7f, 0x3eed, 0x1, 0x0);
        gbc.writeMem(0x6488, { 0xe1 });
        gbc.writeMem(0xdcc0, { 0x22, 0x18 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xdcc2, gbc.sp());
        EXPECT(0x6489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xdcc0));
        EXPECT(0x18, gbc.readMem(0xdcc1));
        // E1 0308
        gbc.setState(0xa71b, 0xbd0d, 0xfb60, 0x9f33, 0xb179, 0x617a, 0x1, 0x1);
        gbc.writeMem(0xa71b, { 0xe1 });
        gbc.writeMem(0xbd0d, { 0xeb, 0x51 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xbd0f, gbc.sp());
        EXPECT(0xa71c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa71b));
        EXPECT(0xeb, gbc.readMem(0xbd0d));
        EXPECT(0x51, gbc.readMem(0xbd0e));
        // E1 0309
        gbc.setState(0x7817, 0x375c, 0x44f0, 0x9741, 0x4e30, 0x8cc9, 0x0, 0x0);
        gbc.writeMem(0x375c, { 0x4a, 0xfb });
        gbc.writeMem(0x7817, { 0xe1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x375e, gbc.sp());
        EXPECT(0x7818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 030A
        gbc.setState(0x127c, 0x8698, 0x6750, 0xe57f, 0x9c62, 0x7d29, 0x1, 0x1);
        gbc.writeMem(0x127c, { 0xe1 });
        gbc.writeMem(0x8698, { 0xf0, 0xd6 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x869a, gbc.sp());
        EXPECT(0x127d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8698));
        EXPECT(0xd6, gbc.readMem(0x8699));
        // E1 030B
        gbc.setState(0xeb9e, 0xec75, 0x4000, 0x213d, 0xaa40, 0xf0ce, 0x1, 0x1);
        gbc.writeMem(0xeb9e, { 0xe1 });
        gbc.writeMem(0xec75, { 0xa6, 0x63 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xec77, gbc.sp());
        EXPECT(0xeb9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xeb9e));
        EXPECT(0xa6, gbc.readMem(0xec75));
        EXPECT(0x63, gbc.readMem(0xec76));
        // E1 030C
        gbc.setState(0xb086, 0xbf1a, 0x1570, 0x4091, 0x60d7, 0x90d9, 0x1, 0x0);
        gbc.writeMem(0xb086, { 0xe1 });
        gbc.writeMem(0xbf1a, { 0x6d, 0x62 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xbf1c, gbc.sp());
        EXPECT(0xb087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb086));
        EXPECT(0x6d, gbc.readMem(0xbf1a));
        EXPECT(0x62, gbc.readMem(0xbf1b));
        // E1 030D
        gbc.setState(0x5824, 0xd7a0, 0xd7c0, 0x3cff, 0xa25c, 0x21c8, 0x1, 0x1);
        gbc.writeMem(0x5824, { 0xe1 });
        gbc.writeMem(0xd7a0, { 0x51, 0xe4 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd7a2, gbc.sp());
        EXPECT(0x5825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd7a0));
        EXPECT(0xe4, gbc.readMem(0xd7a1));
        // E1 030E
        gbc.setState(0x7327, 0xcb64, 0xec70, 0x5dd3, 0xdab2, 0x10a3, 0x1, 0x1);
        gbc.writeMem(0x7327, { 0xe1 });
        gbc.writeMem(0xcb64, { 0xcf, 0x16 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xcb66, gbc.sp());
        EXPECT(0x7328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xcb64));
        EXPECT(0x16, gbc.readMem(0xcb65));
        // E1 030F
        gbc.setState(0x8ae3, 0xec8, 0xa2a0, 0x4d05, 0x88f1, 0x3a37, 0x0, 0x1);
        gbc.writeMem(0xec8, { 0xe9, 0x9d });
        gbc.writeMem(0x8ae3, { 0xe1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xeca, gbc.sp());
        EXPECT(0x8ae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8ae3));
        // E1 0310
        gbc.setState(0xce0f, 0x3bb5, 0x3210, 0xcce0, 0x9ee5, 0x1214, 0x1, 0x0);
        gbc.writeMem(0x3bb5, { 0xbe, 0xde });
        gbc.writeMem(0xce0f, { 0xe1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3bb7, gbc.sp());
        EXPECT(0xce10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xce0f));
        // E1 0311
        gbc.setState(0xb81b, 0xc595, 0xf430, 0x3e58, 0x390d, 0xda7, 0x1, 0x0);
        gbc.writeMem(0xb81b, { 0xe1 });
        gbc.writeMem(0xc595, { 0xf4, 0xb5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc597, gbc.sp());
        EXPECT(0xb81c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb81b));
        EXPECT(0xf4, gbc.readMem(0xc595));
        EXPECT(0xb5, gbc.readMem(0xc596));
        // E1 0312
        gbc.setState(0x4d13, 0xb248, 0x7f0, 0xa14b, 0xd2, 0xe830, 0x0, 0x1);
        gbc.writeMem(0x4d13, { 0xe1 });
        gbc.writeMem(0xb248, { 0xb2, 0x3e });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb24a, gbc.sp());
        EXPECT(0x4d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb248));
        EXPECT(0x3e, gbc.readMem(0xb249));
        // E1 0313
        gbc.setState(0xa3cb, 0x32e1, 0x2190, 0x7d73, 0x2b1a, 0xbf76, 0x0, 0x1);
        gbc.writeMem(0x32e1, { 0xe1, 0x7e });
        gbc.writeMem(0xa3cb, { 0xe1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x32e3, gbc.sp());
        EXPECT(0xa3cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa3cb));
        // E1 0314
        gbc.setState(0xec30, 0x7626, 0x970, 0x9a12, 0x6b90, 0xa40c, 0x0, 0x0);
        gbc.writeMem(0x7626, { 0x9e, 0x3 });
        gbc.writeMem(0xec30, { 0xe1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7628, gbc.sp());
        EXPECT(0xec31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xec30));
        // E1 0315
        gbc.setState(0x1032, 0x1975, 0x9b00, 0xb1b9, 0xf80c, 0x2ceb, 0x1, 0x0);
        gbc.writeMem(0x1032, { 0xe1 });
        gbc.writeMem(0x1975, { 0xdc, 0x16 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1977, gbc.sp());
        EXPECT(0x1033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0316
        gbc.setState(0x551d, 0x36b5, 0xc00, 0xb9ae, 0x8777, 0xf4b4, 0x0, 0x1);
        gbc.writeMem(0x36b5, { 0x77, 0xc1 });
        gbc.writeMem(0x551d, { 0xe1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x36b7, gbc.sp());
        EXPECT(0x551e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0317
        gbc.setState(0x7a9c, 0x8be5, 0x9910, 0xe843, 0x6be7, 0x7e35, 0x0, 0x0);
        gbc.writeMem(0x7a9c, { 0xe1 });
        gbc.writeMem(0x8be5, { 0xf7, 0xec });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8be7, gbc.sp());
        EXPECT(0x7a9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8be5));
        EXPECT(0xec, gbc.readMem(0x8be6));
        // E1 0318
        gbc.setState(0x410f, 0x35ef, 0x1d20, 0x9f6d, 0xf4e4, 0x1145, 0x1, 0x0);
        gbc.writeMem(0x35ef, { 0xe5, 0x20 });
        gbc.writeMem(0x410f, { 0xe1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x35f1, gbc.sp());
        EXPECT(0x4110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0319
        gbc.setState(0x2273, 0x221e, 0xb3a0, 0xf382, 0x76f5, 0xeb76, 0x1, 0x1);
        gbc.writeMem(0x221e, { 0xf7, 0xfa });
        gbc.writeMem(0x2273, { 0xe1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2220, gbc.sp());
        EXPECT(0x2274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 031A
        gbc.setState(0x4ded, 0xcb23, 0x3a50, 0x5010, 0x794f, 0xa259, 0x0, 0x0);
        gbc.writeMem(0x4ded, { 0xe1 });
        gbc.writeMem(0xcb23, { 0xde, 0xd2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcb25, gbc.sp());
        EXPECT(0x4dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xcb23));
        EXPECT(0xd2, gbc.readMem(0xcb24));
        // E1 031B
        gbc.setState(0xcb06, 0x5d44, 0x4360, 0x8876, 0xaad7, 0xdb98, 0x0, 0x1);
        gbc.writeMem(0x5d44, { 0x95, 0x98 });
        gbc.writeMem(0xcb06, { 0xe1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5d46, gbc.sp());
        EXPECT(0xcb07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xcb06));
        // E1 031C
        gbc.setState(0x9305, 0x5465, 0x6050, 0x2bd1, 0x3269, 0x9fcd, 0x1, 0x1);
        gbc.writeMem(0x5465, { 0xbc, 0xfd });
        gbc.writeMem(0x9305, { 0xe1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5467, gbc.sp());
        EXPECT(0x9306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9305));
        // E1 031D
        gbc.setState(0x7312, 0x4e10, 0xe820, 0x4d52, 0x7ccf, 0x338e, 0x1, 0x1);
        gbc.writeMem(0x4e10, { 0xee, 0xe1 });
        gbc.writeMem(0x7312, { 0xe1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4e12, gbc.sp());
        EXPECT(0x7313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 031E
        gbc.setState(0x317d, 0x7edf, 0x71c0, 0xf8c0, 0x2c0f, 0x8c0e, 0x1, 0x1);
        gbc.writeMem(0x317d, { 0xe1 });
        gbc.writeMem(0x7edf, { 0x7a, 0x2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7ee1, gbc.sp());
        EXPECT(0x317e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 031F
        gbc.setState(0xcf93, 0x1756, 0x46b0, 0x4501, 0x7c23, 0x8221, 0x1, 0x1);
        gbc.writeMem(0x1756, { 0x1d, 0xad });
        gbc.writeMem(0xcf93, { 0xe1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1758, gbc.sp());
        EXPECT(0xcf94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xcf93));
        // E1 0320
        gbc.setState(0xa6ad, 0x4af0, 0x4db0, 0x36a1, 0xdec5, 0xafff, 0x0, 0x0);
        gbc.writeMem(0x4af0, { 0xb9, 0x51 });
        gbc.writeMem(0xa6ad, { 0xe1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4af2, gbc.sp());
        EXPECT(0xa6ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa6ad));
        // E1 0321
        gbc.setState(0x71cb, 0xa652, 0x3cf0, 0x9cc2, 0x8767, 0xc30d, 0x0, 0x0);
        gbc.writeMem(0x71cb, { 0xe1 });
        gbc.writeMem(0xa652, { 0x25, 0x28 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa654, gbc.sp());
        EXPECT(0x71cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa652));
        EXPECT(0x28, gbc.readMem(0xa653));
        // E1 0322
        gbc.setState(0xd709, 0xdfc8, 0xe690, 0x297f, 0x6c3e, 0x58, 0x0, 0x0);
        gbc.writeMem(0xd709, { 0xe1 });
        gbc.writeMem(0xdfc8, { 0x72, 0x89 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xdfca, gbc.sp());
        EXPECT(0xd70a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd709));
        EXPECT(0x72, gbc.readMem(0xdfc8));
        EXPECT(0x89, gbc.readMem(0xdfc9));
        // E1 0323
        gbc.setState(0xde3f, 0x134f, 0xfc20, 0xe2da, 0x20df, 0xb4d8, 0x1, 0x0);
        gbc.writeMem(0x134f, { 0xef, 0xc6 });
        gbc.writeMem(0xde3f, { 0xe1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1351, gbc.sp());
        EXPECT(0xde40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xde3f));
        // E1 0324
        gbc.setState(0x2391, 0xbd25, 0x4db0, 0x1e79, 0x179b, 0xe87e, 0x0, 0x0);
        gbc.writeMem(0x2391, { 0xe1 });
        gbc.writeMem(0xbd25, { 0x38, 0xb1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbd27, gbc.sp());
        EXPECT(0x2392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbd25));
        EXPECT(0xb1, gbc.readMem(0xbd26));
        // E1 0325
        gbc.setState(0x8d0a, 0x1cce, 0x5650, 0x40cd, 0x38c0, 0xfb24, 0x0, 0x0);
        gbc.writeMem(0x1cce, { 0x1b, 0x51 });
        gbc.writeMem(0x8d0a, { 0xe1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1cd0, gbc.sp());
        EXPECT(0x8d0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8d0a));
        // E1 0326
        gbc.setState(0x9500, 0xa9cb, 0x2010, 0x1be1, 0xaa89, 0x66b7, 0x1, 0x0);
        gbc.writeMem(0x9500, { 0xe1 });
        gbc.writeMem(0xa9cb, { 0x82, 0x19 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa9cd, gbc.sp());
        EXPECT(0x9501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9500));
        EXPECT(0x82, gbc.readMem(0xa9cb));
        EXPECT(0x19, gbc.readMem(0xa9cc));
        // E1 0327
        gbc.setState(0x4830, 0x7751, 0x50, 0x59ed, 0xc507, 0xe11e, 0x1, 0x1);
        gbc.writeMem(0x4830, { 0xe1 });
        gbc.writeMem(0x7751, { 0x9c, 0x4c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7753, gbc.sp());
        EXPECT(0x4831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0328
        gbc.setState(0x8a2f, 0x81b4, 0xd6d0, 0x415d, 0x8362, 0x6599, 0x1, 0x1);
        gbc.writeMem(0x81b4, { 0x6e, 0xdf });
        gbc.writeMem(0x8a2f, { 0xe1 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x81b6, gbc.sp());
        EXPECT(0x8a30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x81b4));
        EXPECT(0xdf, gbc.readMem(0x81b5));
        EXPECT(0xe1, gbc.readMem(0x8a2f));
        // E1 0329
        gbc.setState(0x3e2d, 0x9fd6, 0x33a0, 0x8244, 0x7601, 0x4d17, 0x1, 0x1);
        gbc.writeMem(0x3e2d, { 0xe1 });
        gbc.writeMem(0x9fd6, { 0x59, 0x72 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9fd8, gbc.sp());
        EXPECT(0x3e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x9fd6));
        EXPECT(0x72, gbc.readMem(0x9fd7));
        // E1 032A
        gbc.setState(0x1ee4, 0xd481, 0x18f0, 0xd470, 0x4775, 0xb379, 0x0, 0x1);
        gbc.writeMem(0x1ee4, { 0xe1 });
        gbc.writeMem(0xd481, { 0x1b, 0xd0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd483, gbc.sp());
        EXPECT(0x1ee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xd481));
        EXPECT(0xd0, gbc.readMem(0xd482));
        // E1 032B
        gbc.setState(0xc158, 0x33e, 0xd5f0, 0x6d8c, 0x1b1c, 0x31be, 0x1, 0x0);
        gbc.writeMem(0x33e, { 0xfe, 0x55 });
        gbc.writeMem(0xc158, { 0xe1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x340, gbc.sp());
        EXPECT(0xc159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc158));
        // E1 032C
        gbc.setState(0xe5a, 0x2e0f, 0xa010, 0x1b47, 0x1718, 0xe4a1, 0x0, 0x1);
        gbc.writeMem(0xe5a, { 0xe1 });
        gbc.writeMem(0x2e0f, { 0xbd, 0xbd });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2e11, gbc.sp());
        EXPECT(0xe5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 032D
        gbc.setState(0xa727, 0xee6b, 0xa380, 0x99b, 0x1bf1, 0xd3c8, 0x0, 0x1);
        gbc.writeMem(0xa727, { 0xe1 });
        gbc.writeMem(0xee6b, { 0xc0, 0xd4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xee6d, gbc.sp());
        EXPECT(0xa728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa727));
        EXPECT(0xc0, gbc.readMem(0xee6b));
        EXPECT(0xd4, gbc.readMem(0xee6c));
        // E1 032E
        gbc.setState(0xa3bd, 0x63b, 0x800, 0x6ef, 0xa09a, 0x414d, 0x1, 0x1);
        gbc.writeMem(0x63b, { 0x6c, 0xc4 });
        gbc.writeMem(0xa3bd, { 0xe1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x63d, gbc.sp());
        EXPECT(0xa3be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa3bd));
        // E1 032F
        gbc.setState(0x3eb9, 0x8d4b, 0xa3d0, 0xfb69, 0xa4db, 0x496a, 0x0, 0x0);
        gbc.writeMem(0x3eb9, { 0xe1 });
        gbc.writeMem(0x8d4b, { 0xf8, 0x99 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8d4d, gbc.sp());
        EXPECT(0x3eba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8d4b));
        EXPECT(0x99, gbc.readMem(0x8d4c));
        // E1 0330
        gbc.setState(0x43ec, 0xc557, 0x5b60, 0xeda, 0x2c56, 0xe10e, 0x1, 0x0);
        gbc.writeMem(0x43ec, { 0xe1 });
        gbc.writeMem(0xc557, { 0x5f, 0xc1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc559, gbc.sp());
        EXPECT(0x43ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xc557));
        EXPECT(0xc1, gbc.readMem(0xc558));
        // E1 0331
        gbc.setState(0x2f8f, 0xb8c3, 0x7e60, 0xb05b, 0x6718, 0x6670, 0x0, 0x0);
        gbc.writeMem(0x2f8f, { 0xe1 });
        gbc.writeMem(0xb8c3, { 0xc4, 0xa2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb8c5, gbc.sp());
        EXPECT(0x2f90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xb8c3));
        EXPECT(0xa2, gbc.readMem(0xb8c4));
        // E1 0332
        gbc.setState(0x45d, 0xa67, 0xac70, 0xb165, 0x18ab, 0x8eb0, 0x0, 0x1);
        gbc.writeMem(0x45d, { 0xe1 });
        gbc.writeMem(0xa67, { 0x46, 0x29 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa69, gbc.sp());
        EXPECT(0x45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0333
        gbc.setState(0x38eb, 0x86f3, 0x9de0, 0xd63f, 0xee53, 0x74bd, 0x0, 0x1);
        gbc.writeMem(0x38eb, { 0xe1 });
        gbc.writeMem(0x86f3, { 0x95, 0x34 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x86f5, gbc.sp());
        EXPECT(0x38ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x86f3));
        EXPECT(0x34, gbc.readMem(0x86f4));
        // E1 0334
        gbc.setState(0x3a22, 0x16d5, 0x5a30, 0x2c4c, 0xc366, 0xe17e, 0x0, 0x0);
        gbc.writeMem(0x16d5, { 0x90, 0x3f });
        gbc.writeMem(0x3a22, { 0xe1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x16d7, gbc.sp());
        EXPECT(0x3a23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0335
        gbc.setState(0x327d, 0x966d, 0xcf90, 0x9347, 0x8c5, 0xbeda, 0x1, 0x0);
        gbc.writeMem(0x327d, { 0xe1 });
        gbc.writeMem(0x966d, { 0x74, 0x5b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x966f, gbc.sp());
        EXPECT(0x327e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x966d));
        EXPECT(0x5b, gbc.readMem(0x966e));
        // E1 0336
        gbc.setState(0x6195, 0x6dc4, 0xcef0, 0xab6, 0x3b7e, 0xfd0d, 0x0, 0x1);
        gbc.writeMem(0x6195, { 0xe1 });
        gbc.writeMem(0x6dc4, { 0x63, 0xe5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6dc6, gbc.sp());
        EXPECT(0x6196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0337
        gbc.setState(0x65b4, 0x1ebc, 0x6cd0, 0xb774, 0x52dd, 0x699, 0x0, 0x1);
        gbc.writeMem(0x1ebc, { 0x5c, 0x20 });
        gbc.writeMem(0x65b4, { 0xe1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1ebe, gbc.sp());
        EXPECT(0x65b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0338
        gbc.setState(0x469, 0x33d0, 0x37a0, 0x295c, 0xbf4b, 0x9e5f, 0x0, 0x1);
        gbc.writeMem(0x469, { 0xe1 });
        gbc.writeMem(0x33d0, { 0xcb, 0xd8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x33d2, gbc.sp());
        EXPECT(0x46a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0339
        gbc.setState(0x6894, 0x7df3, 0x2150, 0x63bc, 0xe248, 0x2497, 0x0, 0x1);
        gbc.writeMem(0x6894, { 0xe1 });
        gbc.writeMem(0x7df3, { 0xdd, 0x30 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7df5, gbc.sp());
        EXPECT(0x6895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 033A
        gbc.setState(0xccd7, 0x32d7, 0x7520, 0x7d61, 0x2aae, 0x43e4, 0x1, 0x1);
        gbc.writeMem(0x32d7, { 0x2a, 0xbe });
        gbc.writeMem(0xccd7, { 0xe1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x32d9, gbc.sp());
        EXPECT(0xccd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xccd7));
        // E1 033B
        gbc.setState(0x5db3, 0xa9e4, 0x6a00, 0xfda2, 0x6cdc, 0x9a7b, 0x0, 0x1);
        gbc.writeMem(0x5db3, { 0xe1 });
        gbc.writeMem(0xa9e4, { 0x54, 0xb5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa9e6, gbc.sp());
        EXPECT(0x5db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xa9e4));
        EXPECT(0xb5, gbc.readMem(0xa9e5));
        // E1 033C
        gbc.setState(0xa0d1, 0xa8c7, 0x62f0, 0x8d6b, 0xb3fa, 0x3ac1, 0x1, 0x1);
        gbc.writeMem(0xa0d1, { 0xe1 });
        gbc.writeMem(0xa8c7, { 0xf1, 0xdf });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa8c9, gbc.sp());
        EXPECT(0xa0d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa0d1));
        EXPECT(0xf1, gbc.readMem(0xa8c7));
        EXPECT(0xdf, gbc.readMem(0xa8c8));
        // E1 033D
        gbc.setState(0xd9fe, 0x9ea, 0xad60, 0x6e95, 0x1ab4, 0xfe97, 0x0, 0x1);
        gbc.writeMem(0x9ea, { 0xa2, 0x5 });
        gbc.writeMem(0xd9fe, { 0xe1 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9ec, gbc.sp());
        EXPECT(0xd9ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd9fe));
        // E1 033E
        gbc.setState(0xd19c, 0x7913, 0xeca0, 0xd54, 0xc81e, 0xcfaf, 0x1, 0x1);
        gbc.writeMem(0x7913, { 0x15, 0x70 });
        gbc.writeMem(0xd19c, { 0xe1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7915, gbc.sp());
        EXPECT(0xd19d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd19c));
        // E1 033F
        gbc.setState(0x14e5, 0xb557, 0x16a0, 0x6845, 0xeb31, 0x5321, 0x0, 0x0);
        gbc.writeMem(0x14e5, { 0xe1 });
        gbc.writeMem(0xb557, { 0x4c, 0xde });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb559, gbc.sp());
        EXPECT(0x14e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb557));
        EXPECT(0xde, gbc.readMem(0xb558));
        // E1 0340
        gbc.setState(0xbc41, 0xb8ae, 0xb040, 0x6875, 0x7e48, 0xd36f, 0x0, 0x1);
        gbc.writeMem(0xb8ae, { 0x2, 0x19 });
        gbc.writeMem(0xbc41, { 0xe1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb8b0, gbc.sp());
        EXPECT(0xbc42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xb8ae));
        EXPECT(0x19, gbc.readMem(0xb8af));
        EXPECT(0xe1, gbc.readMem(0xbc41));
        // E1 0341
        gbc.setState(0x6c94, 0x1bfb, 0x9ed0, 0xad13, 0x325, 0x818b, 0x1, 0x0);
        gbc.writeMem(0x1bfb, { 0xf0, 0x3a });
        gbc.writeMem(0x6c94, { 0xe1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1bfd, gbc.sp());
        EXPECT(0x6c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0342
        gbc.setState(0x3e4b, 0xd73e, 0x350, 0xef2e, 0x79aa, 0xe8e9, 0x0, 0x1);
        gbc.writeMem(0x3e4b, { 0xe1 });
        gbc.writeMem(0xd73e, { 0x3e, 0x50 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd740, gbc.sp());
        EXPECT(0x3e4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd73e));
        EXPECT(0x50, gbc.readMem(0xd73f));
        // E1 0343
        gbc.setState(0x9aaf, 0x2476, 0x29d0, 0xd49c, 0xa315, 0x903e, 0x0, 0x0);
        gbc.writeMem(0x2476, { 0xa4, 0xfa });
        gbc.writeMem(0x9aaf, { 0xe1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2478, gbc.sp());
        EXPECT(0x9ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9aaf));
        // E1 0344
        gbc.setState(0x563, 0xb140, 0x7d20, 0xd14b, 0xb07b, 0xd390, 0x1, 0x0);
        gbc.writeMem(0x563, { 0xe1 });
        gbc.writeMem(0xb140, { 0x61, 0x2c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb142, gbc.sp());
        EXPECT(0x564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb140));
        EXPECT(0x2c, gbc.readMem(0xb141));
        // E1 0345
        gbc.setState(0x9597, 0x49a9, 0x5ee0, 0x968d, 0xe998, 0x3bc2, 0x0, 0x1);
        gbc.writeMem(0x49a9, { 0x7a, 0xf9 });
        gbc.writeMem(0x9597, { 0xe1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x49ab, gbc.sp());
        EXPECT(0x9598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9597));
        // E1 0346
        gbc.setState(0x297f, 0x718e, 0x1e70, 0x80e, 0x38c8, 0x4427, 0x1, 0x1);
        gbc.writeMem(0x297f, { 0xe1 });
        gbc.writeMem(0x718e, { 0x74, 0xd3 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7190, gbc.sp());
        EXPECT(0x2980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0347
        gbc.setState(0x349c, 0xb47e, 0x1520, 0x73fc, 0x2c20, 0x3b84, 0x0, 0x1);
        gbc.writeMem(0x349c, { 0xe1 });
        gbc.writeMem(0xb47e, { 0x41, 0xcb });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb480, gbc.sp());
        EXPECT(0x349d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xb47e));
        EXPECT(0xcb, gbc.readMem(0xb47f));
        // E1 0348
        gbc.setState(0xeba8, 0x6bf2, 0xaf40, 0xc91a, 0xcffb, 0x90bc, 0x1, 0x0);
        gbc.writeMem(0x6bf2, { 0xa7, 0x47 });
        gbc.writeMem(0xeba8, { 0xe1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6bf4, gbc.sp());
        EXPECT(0xeba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xeba8));
        // E1 0349
        gbc.setState(0xa199, 0x5091, 0xb030, 0x2070, 0x6b66, 0x64, 0x1, 0x0);
        gbc.writeMem(0x5091, { 0x5d, 0x1 });
        gbc.writeMem(0xa199, { 0xe1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5093, gbc.sp());
        EXPECT(0xa19a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa199));
        // E1 034A
        gbc.setState(0x3f3e, 0x1da1, 0x9d00, 0x833b, 0xb065, 0x854c, 0x0, 0x1);
        gbc.writeMem(0x1da1, { 0x3b, 0x4a });
        gbc.writeMem(0x3f3e, { 0xe1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1da3, gbc.sp());
        EXPECT(0x3f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 034B
        gbc.setState(0x5f31, 0xea40, 0x9e20, 0xa925, 0xf305, 0xaedb, 0x1, 0x0);
        gbc.writeMem(0x5f31, { 0xe1 });
        gbc.writeMem(0xea40, { 0x9e, 0x4a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xea42, gbc.sp());
        EXPECT(0x5f32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xea40));
        EXPECT(0x4a, gbc.readMem(0xea41));
        // E1 034C
        gbc.setState(0x379f, 0x2265, 0x8030, 0x844d, 0xfed4, 0x91dc, 0x1, 0x0);
        gbc.writeMem(0x2265, { 0x2d, 0xaa });
        gbc.writeMem(0x379f, { 0xe1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2267, gbc.sp());
        EXPECT(0x37a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 034D
        gbc.setState(0x4cb5, 0x550c, 0x8440, 0xa115, 0x8a6, 0x7c36, 0x0, 0x0);
        gbc.writeMem(0x4cb5, { 0xe1 });
        gbc.writeMem(0x550c, { 0x9f, 0x71 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x550e, gbc.sp());
        EXPECT(0x4cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 034E
        gbc.setState(0x9324, 0xfc89, 0xbcd0, 0x49b9, 0xd99e, 0x838f, 0x1, 0x0);
        gbc.writeMem(0x9324, { 0xe1 });
        gbc.writeMem(0xfc89, { 0x14, 0x9b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfc8b, gbc.sp());
        EXPECT(0x9325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9324));
        EXPECT(0x14, gbc.readMem(0xfc89));
        EXPECT(0x9b, gbc.readMem(0xfc8a));
        // E1 034F
        gbc.setState(0x1bb, 0x9fd6, 0x4e30, 0x8ba6, 0xa709, 0x14d9, 0x0, 0x1);
        gbc.writeMem(0x1bb, { 0xe1 });
        gbc.writeMem(0x9fd6, { 0x59, 0x72 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9fd8, gbc.sp());
        EXPECT(0x1bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x9fd6));
        EXPECT(0x72, gbc.readMem(0x9fd7));
        // E1 0350
        gbc.setState(0x6ee2, 0x439, 0x4ad0, 0x9c8a, 0x83c9, 0x4efe, 0x0, 0x0);
        gbc.writeMem(0x439, { 0xda, 0x14 });
        gbc.writeMem(0x6ee2, { 0xe1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x43b, gbc.sp());
        EXPECT(0x6ee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0351
        gbc.setState(0x530a, 0xce53, 0xc70, 0x76b8, 0xc4a3, 0xeec4, 0x0, 0x0);
        gbc.writeMem(0x530a, { 0xe1 });
        gbc.writeMem(0xce53, { 0x9d, 0xa9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xce55, gbc.sp());
        EXPECT(0x530b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xce53));
        EXPECT(0xa9, gbc.readMem(0xce54));
        // E1 0352
        gbc.setState(0xb229, 0xe83e, 0xeb90, 0x7d84, 0xd63, 0x8633, 0x1, 0x0);
        gbc.writeMem(0xb229, { 0xe1 });
        gbc.writeMem(0xe83e, { 0xc8, 0xc });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe840, gbc.sp());
        EXPECT(0xb22a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb229));
        EXPECT(0xc8, gbc.readMem(0xe83e));
        EXPECT(0xc, gbc.readMem(0xe83f));
        // E1 0353
        gbc.setState(0x9c34, 0xf21e, 0x2aa0, 0xf08a, 0xba6, 0x1073, 0x0, 0x1);
        gbc.writeMem(0x9c34, { 0xe1 });
        gbc.writeMem(0xf21e, { 0x88, 0xd8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf220, gbc.sp());
        EXPECT(0x9c35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9c34));
        EXPECT(0x88, gbc.readMem(0xf21e));
        EXPECT(0xd8, gbc.readMem(0xf21f));
        // E1 0354
        gbc.setState(0x3dc4, 0x82ba, 0x1f00, 0xfc92, 0x920e, 0x488a, 0x0, 0x0);
        gbc.writeMem(0x3dc4, { 0xe1 });
        gbc.writeMem(0x82ba, { 0x88, 0x21 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x82bc, gbc.sp());
        EXPECT(0x3dc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x82ba));
        EXPECT(0x21, gbc.readMem(0x82bb));
        // E1 0355
        gbc.setState(0xd17c, 0xf65a, 0x5fa0, 0xc90d, 0xa38b, 0x4e7f, 0x0, 0x1);
        gbc.writeMem(0xd17c, { 0xe1 });
        gbc.writeMem(0xf65a, { 0xdb, 0xb6 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf65c, gbc.sp());
        EXPECT(0xd17d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd17c));
        EXPECT(0xdb, gbc.readMem(0xf65a));
        EXPECT(0xb6, gbc.readMem(0xf65b));
        // E1 0356
        gbc.setState(0x41f4, 0x59e3, 0x2bf0, 0x3bb5, 0x8412, 0xa425, 0x1, 0x0);
        gbc.writeMem(0x41f4, { 0xe1 });
        gbc.writeMem(0x59e3, { 0x81, 0x53 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x59e5, gbc.sp());
        EXPECT(0x41f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0357
        gbc.setState(0x799c, 0x2f41, 0xd150, 0xef91, 0x41ac, 0x7628, 0x1, 0x0);
        gbc.writeMem(0x2f41, { 0x9a, 0x49 });
        gbc.writeMem(0x799c, { 0xe1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2f43, gbc.sp());
        EXPECT(0x799d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0358
        gbc.setState(0x2769, 0x2e63, 0x79f0, 0x6ca9, 0xaa13, 0xcd54, 0x1, 0x0);
        gbc.writeMem(0x2769, { 0xe1 });
        gbc.writeMem(0x2e63, { 0x43, 0x99 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2e65, gbc.sp());
        EXPECT(0x276a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0359
        gbc.setState(0x457e, 0xffdf, 0x62e0, 0xdb5, 0xf60d, 0xe897, 0x1, 0x0);
        gbc.writeMem(0x457e, { 0xe1 });
        gbc.writeMem(0xffdf, { 0xd, 0x75 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xffe1, gbc.sp());
        EXPECT(0x457f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xffdf));
        EXPECT(0x75, gbc.readMem(0xffe0));
        // E1 035A
        gbc.setState(0xcb6b, 0x26d7, 0xccb0, 0x4e27, 0x756e, 0xf5ef, 0x0, 0x1);
        gbc.writeMem(0x26d7, { 0x90, 0x64 });
        gbc.writeMem(0xcb6b, { 0xe1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x26d9, gbc.sp());
        EXPECT(0xcb6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xcb6b));
        // E1 035C
        gbc.setState(0xdb2a, 0xde8c, 0x5be0, 0xff10, 0xa8b5, 0x6881, 0x1, 0x1);
        gbc.writeMem(0xdb2a, { 0xe1 });
        gbc.writeMem(0xde8c, { 0x97, 0x5b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xde8e, gbc.sp());
        EXPECT(0xdb2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xdb2a));
        EXPECT(0x97, gbc.readMem(0xde8c));
        EXPECT(0x5b, gbc.readMem(0xde8d));
        // E1 035D
        gbc.setState(0x2593, 0xa812, 0xa570, 0x17bc, 0xef76, 0x88ca, 0x1, 0x0);
        gbc.writeMem(0x2593, { 0xe1 });
        gbc.writeMem(0xa812, { 0x18, 0x52 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa814, gbc.sp());
        EXPECT(0x2594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xa812));
        EXPECT(0x52, gbc.readMem(0xa813));
        // E1 035E
        gbc.setState(0xdfb, 0xef6c, 0xf660, 0x4f98, 0x25c8, 0xa0b8, 0x1, 0x1);
        gbc.writeMem(0xdfb, { 0xe1 });
        gbc.writeMem(0xef6c, { 0xfb, 0x71 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xef6e, gbc.sp());
        EXPECT(0xdfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xef6c));
        EXPECT(0x71, gbc.readMem(0xef6d));
        // E1 035F
        gbc.setState(0x14a0, 0x1754, 0xb790, 0x4999, 0xb595, 0x58a4, 0x1, 0x0);
        gbc.writeMem(0x14a0, { 0xe1 });
        gbc.writeMem(0x1754, { 0xc2, 0x7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1756, gbc.sp());
        EXPECT(0x14a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0360
        gbc.setState(0x3471, 0x95f4, 0x1870, 0x978b, 0x67cd, 0xd0d5, 0x0, 0x1);
        gbc.writeMem(0x3471, { 0xe1 });
        gbc.writeMem(0x95f4, { 0xc7, 0x65 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x95f6, gbc.sp());
        EXPECT(0x3472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x95f4));
        EXPECT(0x65, gbc.readMem(0x95f5));
        // E1 0361
        gbc.setState(0x8909, 0x224d, 0xfe20, 0x895a, 0xf7d6, 0xb513, 0x1, 0x1);
        gbc.writeMem(0x224d, { 0x7a, 0xba });
        gbc.writeMem(0x8909, { 0xe1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x224f, gbc.sp());
        EXPECT(0x890a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8909));
        // E1 0362
        gbc.setState(0xdacf, 0xccd5, 0xb300, 0x7e9d, 0x23c, 0xc1ed, 0x0, 0x0);
        gbc.writeMem(0xccd5, { 0xcd, 0xd });
        gbc.writeMem(0xdacf, { 0xe1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xccd7, gbc.sp());
        EXPECT(0xdad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xccd5));
        EXPECT(0xd, gbc.readMem(0xccd6));
        EXPECT(0xe1, gbc.readMem(0xdacf));
        // E1 0363
        gbc.setState(0x7105, 0xd397, 0xe1a0, 0x74ca, 0x23dc, 0xb615, 0x1, 0x0);
        gbc.writeMem(0x7105, { 0xe1 });
        gbc.writeMem(0xd397, { 0x55, 0xf9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd399, gbc.sp());
        EXPECT(0x7106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd397));
        EXPECT(0xf9, gbc.readMem(0xd398));
        // E1 0364
        gbc.setState(0x67d9, 0x7380, 0xd140, 0xebca, 0xccc8, 0xc0ab, 0x0, 0x1);
        gbc.writeMem(0x67d9, { 0xe1 });
        gbc.writeMem(0x7380, { 0xc8, 0x39 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7382, gbc.sp());
        EXPECT(0x67da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0365
        gbc.setState(0xa052, 0x99f2, 0x9410, 0x84c4, 0x36d0, 0x83d1, 0x0, 0x0);
        gbc.writeMem(0x99f2, { 0x2b, 0xe0 });
        gbc.writeMem(0xa052, { 0xe1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x99f4, gbc.sp());
        EXPECT(0xa053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x99f2));
        EXPECT(0xe0, gbc.readMem(0x99f3));
        EXPECT(0xe1, gbc.readMem(0xa052));
        // E1 0366
        gbc.setState(0xa76c, 0x15bb, 0x9b30, 0x7ae0, 0xb020, 0x38bc, 0x1, 0x0);
        gbc.writeMem(0x15bb, { 0xf4, 0x40 });
        gbc.writeMem(0xa76c, { 0xe1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x15bd, gbc.sp());
        EXPECT(0xa76d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa76c));
        // E1 0367
        gbc.setState(0xdc2a, 0x58a8, 0xaed0, 0x7f0b, 0x6f1b, 0x79fa, 0x1, 0x1);
        gbc.writeMem(0x58a8, { 0x80, 0x78 });
        gbc.writeMem(0xdc2a, { 0xe1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x58aa, gbc.sp());
        EXPECT(0xdc2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xdc2a));
        // E1 0368
        gbc.setState(0xb0cf, 0x7a26, 0x70b0, 0x650f, 0x4f0c, 0x4911, 0x1, 0x0);
        gbc.writeMem(0x7a26, { 0xe5, 0x8e });
        gbc.writeMem(0xb0cf, { 0xe1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7a28, gbc.sp());
        EXPECT(0xb0d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb0cf));
        // E1 0369
        gbc.setState(0x71d3, 0x4da4, 0x1d50, 0x8b95, 0x2c4d, 0x542f, 0x0, 0x1);
        gbc.writeMem(0x4da4, { 0xec, 0x55 });
        gbc.writeMem(0x71d3, { 0xe1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4da6, gbc.sp());
        EXPECT(0x71d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 036A
        gbc.setState(0x4402, 0x7a94, 0x5c50, 0x8e3d, 0xebdc, 0x9396, 0x1, 0x1);
        gbc.writeMem(0x4402, { 0xe1 });
        gbc.writeMem(0x7a94, { 0xc2, 0x7f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7a96, gbc.sp());
        EXPECT(0x4403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 036B
        gbc.setState(0xdb9b, 0xb904, 0x63b0, 0x7b5f, 0x9f02, 0x42fe, 0x0, 0x0);
        gbc.writeMem(0xb904, { 0xf, 0x7a });
        gbc.writeMem(0xdb9b, { 0xe1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb906, gbc.sp());
        EXPECT(0xdb9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xb904));
        EXPECT(0x7a, gbc.readMem(0xb905));
        EXPECT(0xe1, gbc.readMem(0xdb9b));
        // E1 036C
        gbc.setState(0x6496, 0x5a24, 0x6b10, 0xfafd, 0x4324, 0x2ce6, 0x0, 0x0);
        gbc.writeMem(0x5a24, { 0x2b, 0x74 });
        gbc.writeMem(0x6496, { 0xe1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5a26, gbc.sp());
        EXPECT(0x6497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 036D
        gbc.setState(0xafac, 0x1b01, 0xbf20, 0x4d2b, 0xdf29, 0xf40c, 0x0, 0x0);
        gbc.writeMem(0x1b01, { 0xc, 0x18 });
        gbc.writeMem(0xafac, { 0xe1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1b03, gbc.sp());
        EXPECT(0xafad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xafac));
        // E1 036E
        gbc.setState(0x4d4e, 0x9c3, 0x50b0, 0x8d35, 0x699, 0xe30b, 0x0, 0x0);
        gbc.writeMem(0x9c3, { 0xf2, 0x82 });
        gbc.writeMem(0x4d4e, { 0xe1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9c5, gbc.sp());
        EXPECT(0x4d4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 036F
        gbc.setState(0xab2b, 0xc422, 0xa10, 0x92ad, 0x3d18, 0xd725, 0x0, 0x0);
        gbc.writeMem(0xab2b, { 0xe1 });
        gbc.writeMem(0xc422, { 0x86, 0xef });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc424, gbc.sp());
        EXPECT(0xab2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xab2b));
        EXPECT(0x86, gbc.readMem(0xc422));
        EXPECT(0xef, gbc.readMem(0xc423));
        // E1 0370
        gbc.setState(0x3ba0, 0xca5e, 0x37f0, 0x394c, 0x4c5d, 0xf3ce, 0x1, 0x0);
        gbc.writeMem(0x3ba0, { 0xe1 });
        gbc.writeMem(0xca5e, { 0x29, 0xae });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xca60, gbc.sp());
        EXPECT(0x3ba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xca5e));
        EXPECT(0xae, gbc.readMem(0xca5f));
        // E1 0371
        gbc.setState(0x8358, 0xd57a, 0x9180, 0x8c64, 0x238d, 0x2f82, 0x0, 0x1);
        gbc.writeMem(0x8358, { 0xe1 });
        gbc.writeMem(0xd57a, { 0x39, 0xa5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd57c, gbc.sp());
        EXPECT(0x8359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8358));
        EXPECT(0x39, gbc.readMem(0xd57a));
        EXPECT(0xa5, gbc.readMem(0xd57b));
        // E1 0372
        gbc.setState(0x7cb8, 0x4e2e, 0xafb0, 0xf7f0, 0x5fd6, 0xfaa8, 0x0, 0x1);
        gbc.writeMem(0x4e2e, { 0xc2, 0x65 });
        gbc.writeMem(0x7cb8, { 0xe1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4e30, gbc.sp());
        EXPECT(0x7cb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0373
        gbc.setState(0xa673, 0xe7e6, 0x55d0, 0x2a1e, 0x4c60, 0x665f, 0x1, 0x0);
        gbc.writeMem(0xa673, { 0xe1 });
        gbc.writeMem(0xe7e6, { 0xd4, 0xae });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe7e8, gbc.sp());
        EXPECT(0xa674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa673));
        EXPECT(0xd4, gbc.readMem(0xe7e6));
        EXPECT(0xae, gbc.readMem(0xe7e7));
        // E1 0375
        gbc.setState(0xade7, 0x271f, 0x940, 0x8846, 0x294e, 0x4a8, 0x0, 0x1);
        gbc.writeMem(0x271f, { 0xd, 0xd6 });
        gbc.writeMem(0xade7, { 0xe1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2721, gbc.sp());
        EXPECT(0xade8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xade7));
        // E1 0376
        gbc.setState(0xc438, 0xc8a8, 0xb80, 0x619c, 0xc8a6, 0x435c, 0x1, 0x0);
        gbc.writeMem(0xc438, { 0xe1 });
        gbc.writeMem(0xc8a8, { 0x7e, 0x33 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc8aa, gbc.sp());
        EXPECT(0xc439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc438));
        EXPECT(0x7e, gbc.readMem(0xc8a8));
        EXPECT(0x33, gbc.readMem(0xc8a9));
        // E1 0377
        gbc.setState(0xb25f, 0xb025, 0x9a60, 0xb247, 0x6baf, 0xa35a, 0x0, 0x0);
        gbc.writeMem(0xb025, { 0x9e, 0x82 });
        gbc.writeMem(0xb25f, { 0xe1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb027, gbc.sp());
        EXPECT(0xb260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb025));
        EXPECT(0x82, gbc.readMem(0xb026));
        EXPECT(0xe1, gbc.readMem(0xb25f));
        // E1 0378
        gbc.setState(0x93b7, 0xd0ea, 0xb990, 0xd9c1, 0x4391, 0xb13f, 0x1, 0x0);
        gbc.writeMem(0x93b7, { 0xe1 });
        gbc.writeMem(0xd0ea, { 0x62, 0xeb });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd0ec, gbc.sp());
        EXPECT(0x93b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x93b7));
        EXPECT(0x62, gbc.readMem(0xd0ea));
        EXPECT(0xeb, gbc.readMem(0xd0eb));
        // E1 0379
        gbc.setState(0xd514, 0xa1fb, 0xbb10, 0xa81e, 0xe338, 0x5ea3, 0x0, 0x0);
        gbc.writeMem(0xa1fb, { 0x9d, 0x14 });
        gbc.writeMem(0xd514, { 0xe1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa1fd, gbc.sp());
        EXPECT(0xd515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa1fb));
        EXPECT(0x14, gbc.readMem(0xa1fc));
        EXPECT(0xe1, gbc.readMem(0xd514));
        // E1 037A
        gbc.setState(0x3ca2, 0x2d9c, 0xc9e0, 0xbe7c, 0xe148, 0x755c, 0x0, 0x0);
        gbc.writeMem(0x2d9c, { 0xeb, 0xf0 });
        gbc.writeMem(0x3ca2, { 0xe1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2d9e, gbc.sp());
        EXPECT(0x3ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 037B
        gbc.setState(0xc471, 0x7ceb, 0x6710, 0x24e6, 0x42a9, 0x517e, 0x0, 0x1);
        gbc.writeMem(0x7ceb, { 0x47, 0x89 });
        gbc.writeMem(0xc471, { 0xe1 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7ced, gbc.sp());
        EXPECT(0xc472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc471));
        // E1 037C
        gbc.setState(0x9de1, 0x5e7f, 0x83c0, 0x811d, 0x1181, 0xdcdd, 0x0, 0x0);
        gbc.writeMem(0x5e7f, { 0xa, 0xa8 });
        gbc.writeMem(0x9de1, { 0xe1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5e81, gbc.sp());
        EXPECT(0x9de2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9de1));
        // E1 037D
        gbc.setState(0xaa3c, 0xe4cc, 0xa470, 0x4bed, 0xf2d5, 0xa60f, 0x0, 0x1);
        gbc.writeMem(0xaa3c, { 0xe1 });
        gbc.writeMem(0xe4cc, { 0x11, 0x6 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe4ce, gbc.sp());
        EXPECT(0xaa3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xaa3c));
        EXPECT(0x11, gbc.readMem(0xe4cc));
        EXPECT(0x6, gbc.readMem(0xe4cd));
        // E1 037E
        gbc.setState(0x3329, 0x28ba, 0x2aa0, 0xfb19, 0x7f55, 0x30c4, 0x0, 0x0);
        gbc.writeMem(0x28ba, { 0xd8, 0xb4 });
        gbc.writeMem(0x3329, { 0xe1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x28bc, gbc.sp());
        EXPECT(0x332a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 037F
        gbc.setState(0x402d, 0x7c79, 0x1e80, 0x67b5, 0xf0cd, 0x5c08, 0x1, 0x1);
        gbc.writeMem(0x402d, { 0xe1 });
        gbc.writeMem(0x7c79, { 0xe8, 0xe2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7c7b, gbc.sp());
        EXPECT(0x402e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0380
        gbc.setState(0x258, 0xb752, 0x2150, 0x6ad, 0x39d9, 0x7037, 0x1, 0x0);
        gbc.writeMem(0x258, { 0xe1 });
        gbc.writeMem(0xb752, { 0x6d, 0x97 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb754, gbc.sp());
        EXPECT(0x259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb752));
        EXPECT(0x97, gbc.readMem(0xb753));
        // E1 0381
        gbc.setState(0x46e3, 0x5420, 0x2c30, 0x3bf0, 0xe855, 0x797, 0x0, 0x0);
        gbc.writeMem(0x46e3, { 0xe1 });
        gbc.writeMem(0x5420, { 0xd5, 0x6a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5422, gbc.sp());
        EXPECT(0x46e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0382
        gbc.setState(0xc342, 0x89d5, 0x630, 0xa9b9, 0xaed3, 0x460a, 0x1, 0x0);
        gbc.writeMem(0x89d5, { 0x38, 0xac });
        gbc.writeMem(0xc342, { 0xe1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x89d7, gbc.sp());
        EXPECT(0xc343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x89d5));
        EXPECT(0xac, gbc.readMem(0x89d6));
        EXPECT(0xe1, gbc.readMem(0xc342));
        // E1 0383
        gbc.setState(0xe72d, 0xca1a, 0xe2e0, 0xe61c, 0x3985, 0x92c7, 0x0, 0x1);
        gbc.writeMem(0xca1a, { 0x97, 0x70 });
        gbc.writeMem(0xe72d, { 0xe1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xca1c, gbc.sp());
        EXPECT(0xe72e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xca1a));
        EXPECT(0x70, gbc.readMem(0xca1b));
        EXPECT(0xe1, gbc.readMem(0xe72d));
        // E1 0384
        gbc.setState(0xe806, 0xa4f7, 0xa340, 0x3a6f, 0xbaa3, 0x23e4, 0x0, 0x0);
        gbc.writeMem(0xa4f7, { 0x58, 0x30 });
        gbc.writeMem(0xe806, { 0xe1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa4f9, gbc.sp());
        EXPECT(0xe807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa4f7));
        EXPECT(0x30, gbc.readMem(0xa4f8));
        EXPECT(0xe1, gbc.readMem(0xe806));
        // E1 0385
        gbc.setState(0x1e83, 0x8701, 0xd870, 0x250a, 0x9efe, 0x991b, 0x1, 0x1);
        gbc.writeMem(0x1e83, { 0xe1 });
        gbc.writeMem(0x8701, { 0x87, 0x77 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8703, gbc.sp());
        EXPECT(0x1e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8701));
        EXPECT(0x77, gbc.readMem(0x8702));
        // E1 0387
        gbc.setState(0xb38c, 0xd3f8, 0xb820, 0xe9fe, 0xc7ff, 0x53f2, 0x0, 0x0);
        gbc.writeMem(0xb38c, { 0xe1 });
        gbc.writeMem(0xd3f8, { 0x48, 0x47 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd3fa, gbc.sp());
        EXPECT(0xb38d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb38c));
        EXPECT(0x48, gbc.readMem(0xd3f8));
        EXPECT(0x47, gbc.readMem(0xd3f9));
        // E1 0388
        gbc.setState(0xa7c1, 0xec81, 0x2460, 0xbdd0, 0xbee1, 0x56bb, 0x1, 0x0);
        gbc.writeMem(0xa7c1, { 0xe1 });
        gbc.writeMem(0xec81, { 0x2c, 0x7a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xec83, gbc.sp());
        EXPECT(0xa7c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa7c1));
        EXPECT(0x2c, gbc.readMem(0xec81));
        EXPECT(0x7a, gbc.readMem(0xec82));
        // E1 0389
        gbc.setState(0xc884, 0x4aed, 0xc4f0, 0xe289, 0x4544, 0x6074, 0x1, 0x1);
        gbc.writeMem(0x4aed, { 0x66, 0x4f });
        gbc.writeMem(0xc884, { 0xe1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4aef, gbc.sp());
        EXPECT(0xc885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc884));
        // E1 038A
        gbc.setState(0xd745, 0x93a1, 0x3880, 0x7e9e, 0xdeaf, 0xde76, 0x0, 0x1);
        gbc.writeMem(0x93a1, { 0x57, 0x1b });
        gbc.writeMem(0xd745, { 0xe1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x93a3, gbc.sp());
        EXPECT(0xd746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x93a1));
        EXPECT(0x1b, gbc.readMem(0x93a2));
        EXPECT(0xe1, gbc.readMem(0xd745));
        // E1 038B
        gbc.setState(0x7451, 0x4584, 0x8a20, 0xccb7, 0x4ae5, 0xaae2, 0x1, 0x0);
        gbc.writeMem(0x4584, { 0xe9, 0x45 });
        gbc.writeMem(0x7451, { 0xe1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4586, gbc.sp());
        EXPECT(0x7452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 038C
        gbc.setState(0x1838, 0x224f, 0x6dd0, 0xb962, 0x17ac, 0x26e3, 0x1, 0x1);
        gbc.writeMem(0x1838, { 0xe1 });
        gbc.writeMem(0x224f, { 0x78, 0x3c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2251, gbc.sp());
        EXPECT(0x1839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 038D
        gbc.setState(0x3243, 0x7683, 0x2d10, 0x4e1b, 0xbc1c, 0xe57d, 0x1, 0x0);
        gbc.writeMem(0x3243, { 0xe1 });
        gbc.writeMem(0x7683, { 0x73, 0xf8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7685, gbc.sp());
        EXPECT(0x3244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 038E
        gbc.setState(0x7f0b, 0x8620, 0x8700, 0xc3db, 0x922a, 0xcc47, 0x0, 0x1);
        gbc.writeMem(0x7f0b, { 0xe1 });
        gbc.writeMem(0x8620, { 0x7, 0xb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8622, gbc.sp());
        EXPECT(0x7f0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8620));
        EXPECT(0xb, gbc.readMem(0x8621));
        // E1 038F
        gbc.setState(0x832, 0x5b4f, 0x8ce0, 0xe71c, 0x1805, 0x13df, 0x1, 0x1);
        gbc.writeMem(0x832, { 0xe1 });
        gbc.writeMem(0x5b4f, { 0xd3, 0x95 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5b51, gbc.sp());
        EXPECT(0x833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0390
        gbc.setState(0x3754, 0x72e7, 0x6ab0, 0x44e7, 0xb048, 0x5a84, 0x0, 0x1);
        gbc.writeMem(0x3754, { 0xe1 });
        gbc.writeMem(0x72e7, { 0x7e, 0x87 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x72e9, gbc.sp());
        EXPECT(0x3755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0391
        gbc.setState(0x5aa1, 0xc631, 0x5790, 0xe1a9, 0xace8, 0xb683, 0x0, 0x1);
        gbc.writeMem(0x5aa1, { 0xe1 });
        gbc.writeMem(0xc631, { 0x64, 0xd4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc633, gbc.sp());
        EXPECT(0x5aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc631));
        EXPECT(0xd4, gbc.readMem(0xc632));
        // E1 0392
        gbc.setState(0x28c0, 0x12fc, 0xb760, 0x5ccc, 0x18ad, 0x1554, 0x0, 0x0);
        gbc.writeMem(0x12fc, { 0x47, 0x64 });
        gbc.writeMem(0x28c0, { 0xe1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x12fe, gbc.sp());
        EXPECT(0x28c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0393
        gbc.setState(0x91c9, 0x7f4, 0x2120, 0xaa1e, 0x3041, 0x3af4, 0x1, 0x1);
        gbc.writeMem(0x7f4, { 0xec, 0x55 });
        gbc.writeMem(0x91c9, { 0xe1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7f6, gbc.sp());
        EXPECT(0x91ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x91c9));
        // E1 0394
        gbc.setState(0x550e, 0x122e, 0x1470, 0xa298, 0x198a, 0x2abc, 0x1, 0x1);
        gbc.writeMem(0x122e, { 0x1e, 0xa });
        gbc.writeMem(0x550e, { 0xe1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1230, gbc.sp());
        EXPECT(0x550f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 0395
        gbc.setState(0x5e92, 0x2c89, 0xc460, 0xbc26, 0x589e, 0x98f4, 0x1, 0x0);
        gbc.writeMem(0x2c89, { 0x7f, 0x2e });
        gbc.writeMem(0x5e92, { 0xe1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2c8b, gbc.sp());
        EXPECT(0x5e93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 0396
        gbc.setState(0xca97, 0xb391, 0xe160, 0x5f21, 0x83bf, 0xd041, 0x1, 0x1);
        gbc.writeMem(0xb391, { 0x77, 0x27 });
        gbc.writeMem(0xca97, { 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb393, gbc.sp());
        EXPECT(0xca98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xb391));
        EXPECT(0x27, gbc.readMem(0xb392));
        EXPECT(0xe1, gbc.readMem(0xca97));
        // E1 0397
        gbc.setState(0x4919, 0xd2a7, 0xfdc0, 0x3ed0, 0x7f3b, 0x8cb5, 0x0, 0x1);
        gbc.writeMem(0x4919, { 0xe1 });
        gbc.writeMem(0xd2a7, { 0x92, 0x7d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd2a9, gbc.sp());
        EXPECT(0x491a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd2a7));
        EXPECT(0x7d, gbc.readMem(0xd2a8));
        // E1 0398
        gbc.setState(0x3039, 0x8b5f, 0x9470, 0x364a, 0xbcc6, 0xd281, 0x1, 0x1);
        gbc.writeMem(0x3039, { 0xe1 });
        gbc.writeMem(0x8b5f, { 0xc5, 0x5d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8b61, gbc.sp());
        EXPECT(0x303a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8b5f));
        EXPECT(0x5d, gbc.readMem(0x8b60));
        // E1 0399
        gbc.setState(0x8dbc, 0xc4fb, 0x5af0, 0x9893, 0x2f16, 0x542b, 0x1, 0x1);
        gbc.writeMem(0x8dbc, { 0xe1 });
        gbc.writeMem(0xc4fb, { 0xd4, 0x2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc4fd, gbc.sp());
        EXPECT(0x8dbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8dbc));
        EXPECT(0xd4, gbc.readMem(0xc4fb));
        EXPECT(0x2, gbc.readMem(0xc4fc));
        // E1 039A
        gbc.setState(0x1da6, 0x9751, 0x8590, 0xb3b1, 0x1e4b, 0x7c70, 0x1, 0x1);
        gbc.writeMem(0x1da6, { 0xe1 });
        gbc.writeMem(0x9751, { 0x7d, 0x86 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9753, gbc.sp());
        EXPECT(0x1da7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9751));
        EXPECT(0x86, gbc.readMem(0x9752));
        // E1 039B
        gbc.setState(0x9881, 0x2ffe, 0x72e0, 0x2a80, 0x41f, 0x9fe2, 0x0, 0x0);
        gbc.writeMem(0x2ffe, { 0x6f, 0x3c });
        gbc.writeMem(0x9881, { 0xe1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3000, gbc.sp());
        EXPECT(0x9882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9881));
        // E1 039C
        gbc.setState(0xd41d, 0x7957, 0x5100, 0xf7dd, 0x64b6, 0x3267, 0x0, 0x1);
        gbc.writeMem(0x7957, { 0xf3, 0x7 });
        gbc.writeMem(0xd41d, { 0xe1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7959, gbc.sp());
        EXPECT(0xd41e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd41d));
        // E1 039D
        gbc.setState(0xefcd, 0x1dd7, 0x2e70, 0xfd17, 0xf252, 0xb866, 0x1, 0x1);
        gbc.writeMem(0x1dd7, { 0x27, 0x8c });
        gbc.writeMem(0xefcd, { 0xe1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1dd9, gbc.sp());
        EXPECT(0xefce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xefcd));
        // E1 039E
        gbc.setState(0xac7b, 0x6f99, 0xecd0, 0x485b, 0x82c1, 0x4bd5, 0x0, 0x0);
        gbc.writeMem(0x6f99, { 0x58, 0xca });
        gbc.writeMem(0xac7b, { 0xe1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6f9b, gbc.sp());
        EXPECT(0xac7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xac7b));
        // E1 039F
        gbc.setState(0x6372, 0x73a, 0x5fa0, 0x4534, 0x801a, 0x4469, 0x1, 0x0);
        gbc.writeMem(0x73a, { 0x3a, 0x7a });
        gbc.writeMem(0x6372, { 0xe1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x73c, gbc.sp());
        EXPECT(0x6373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 03A0
        gbc.setState(0x169e, 0xe2c9, 0x830, 0x4704, 0x6b74, 0xc914, 0x1, 0x1);
        gbc.writeMem(0x169e, { 0xe1 });
        gbc.writeMem(0xe2c9, { 0x84, 0xc7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe2cb, gbc.sp());
        EXPECT(0x169f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xe2c9));
        EXPECT(0xc7, gbc.readMem(0xe2ca));
        // E1 03A1
        gbc.setState(0x8947, 0xb530, 0xbf60, 0x4dd, 0x60a9, 0xc3ca, 0x0, 0x1);
        gbc.writeMem(0x8947, { 0xe1 });
        gbc.writeMem(0xb530, { 0x5f, 0x45 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb532, gbc.sp());
        EXPECT(0x8948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8947));
        EXPECT(0x5f, gbc.readMem(0xb530));
        EXPECT(0x45, gbc.readMem(0xb531));
        // E1 03A2
        gbc.setState(0x255e, 0x7350, 0xb1f0, 0xd4e5, 0xb10d, 0x916a, 0x1, 0x1);
        gbc.writeMem(0x255e, { 0xe1 });
        gbc.writeMem(0x7350, { 0xa4, 0x82 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7352, gbc.sp());
        EXPECT(0x255f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 03A3
        gbc.setState(0x6fb3, 0x3a60, 0x5210, 0x4139, 0xe6f1, 0x4448, 0x0, 0x0);
        gbc.writeMem(0x3a60, { 0xc0, 0x20 });
        gbc.writeMem(0x6fb3, { 0xe1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3a62, gbc.sp());
        EXPECT(0x6fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 03A4
        gbc.setState(0x4663, 0x32d7, 0xaba0, 0xba81, 0xb38b, 0x5fec, 0x0, 0x0);
        gbc.writeMem(0x32d7, { 0x2a, 0xbe });
        gbc.writeMem(0x4663, { 0xe1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x32d9, gbc.sp());
        EXPECT(0x4664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 03A5
        gbc.setState(0xcd8, 0x23a9, 0xd950, 0xe350, 0x2d28, 0x20ec, 0x1, 0x0);
        gbc.writeMem(0xcd8, { 0xe1 });
        gbc.writeMem(0x23a9, { 0x36, 0x3b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x23ab, gbc.sp());
        EXPECT(0xcd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 03A6
        gbc.setState(0x5c47, 0xf3c, 0x9b60, 0x242b, 0xeb38, 0x5c06, 0x0, 0x1);
        gbc.writeMem(0xf3c, { 0xeb, 0xfc });
        gbc.writeMem(0x5c47, { 0xe1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf3e, gbc.sp());
        EXPECT(0x5c48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 03A7
        gbc.setState(0x6a73, 0xf08c, 0xe8c0, 0x6481, 0x9afd, 0xa2bb, 0x0, 0x0);
        gbc.writeMem(0x6a73, { 0xe1 });
        gbc.writeMem(0xf08c, { 0xb9, 0xdd });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf08e, gbc.sp());
        EXPECT(0x6a74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xf08c));
        EXPECT(0xdd, gbc.readMem(0xf08d));
        // E1 03A8
        gbc.setState(0x35a5, 0xeac8, 0x6be0, 0x3909, 0x33e1, 0x58df, 0x0, 0x1);
        gbc.writeMem(0x35a5, { 0xe1 });
        gbc.writeMem(0xeac8, { 0xef, 0x4c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xeaca, gbc.sp());
        EXPECT(0x35a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xeac8));
        EXPECT(0x4c, gbc.readMem(0xeac9));
        // E1 03A9
        gbc.setState(0xc05b, 0x483f, 0x9b50, 0x7f1f, 0xfcb0, 0xac41, 0x1, 0x0);
        gbc.writeMem(0x483f, { 0x91, 0x1e });
        gbc.writeMem(0xc05b, { 0xe1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4841, gbc.sp());
        EXPECT(0xc05c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc05b));
        // E1 03AA
        gbc.setState(0xe566, 0xe60f, 0xba0, 0xd39, 0x87f, 0x2b33, 0x0, 0x1);
        gbc.writeMem(0xe566, { 0xe1 });
        gbc.writeMem(0xe60f, { 0xc3, 0xca });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe611, gbc.sp());
        EXPECT(0xe567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe566));
        EXPECT(0xc3, gbc.readMem(0xe60f));
        EXPECT(0xca, gbc.readMem(0xe610));
        // E1 03AB
        gbc.setState(0x241b, 0x1c93, 0xfd30, 0xcc59, 0xa732, 0x2385, 0x0, 0x0);
        gbc.writeMem(0x1c93, { 0xaf, 0xa4 });
        gbc.writeMem(0x241b, { 0xe1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1c95, gbc.sp());
        EXPECT(0x241c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 03AC
        gbc.setState(0x606e, 0xc8d8, 0xb4a0, 0xaf2e, 0x53e2, 0x2898, 0x1, 0x1);
        gbc.writeMem(0x606e, { 0xe1 });
        gbc.writeMem(0xc8d8, { 0xcb, 0x98 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc8da, gbc.sp());
        EXPECT(0x606f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8d8));
        EXPECT(0x98, gbc.readMem(0xc8d9));
        // E1 03AD
        gbc.setState(0xab9c, 0x3527, 0xd9a0, 0xd9bc, 0x780a, 0xf55a, 0x0, 0x1);
        gbc.writeMem(0x3527, { 0xce, 0x5d });
        gbc.writeMem(0xab9c, { 0xe1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3529, gbc.sp());
        EXPECT(0xab9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xab9c));
        // E1 03AE
        gbc.setState(0xfaf, 0x172c, 0x6660, 0x5a3b, 0x8fc, 0x1d35, 0x0, 0x0);
        gbc.writeMem(0xfaf, { 0xe1 });
        gbc.writeMem(0x172c, { 0x3b, 0x29 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x172e, gbc.sp());
        EXPECT(0xfb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 03AF
        gbc.setState(0x12b4, 0x35d5, 0x59d0, 0xbbca, 0x16db, 0x314f, 0x0, 0x0);
        gbc.writeMem(0x12b4, { 0xe1 });
        gbc.writeMem(0x35d5, { 0x8c, 0x20 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x35d7, gbc.sp());
        EXPECT(0x12b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 03B0
        gbc.setState(0x4f80, 0x3e58, 0xcb70, 0xc02f, 0xc572, 0x3e0f, 0x0, 0x0);
        gbc.writeMem(0x3e58, { 0xc3, 0x4b });
        gbc.writeMem(0x4f80, { 0xe1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3e5a, gbc.sp());
        EXPECT(0x4f81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 03B1
        gbc.setState(0x7b9b, 0xe108, 0x2560, 0xd263, 0x5db1, 0xb329, 0x0, 0x1);
        gbc.writeMem(0x7b9b, { 0xe1 });
        gbc.writeMem(0xe108, { 0xf3, 0xf4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe10a, gbc.sp());
        EXPECT(0x7b9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xe108));
        EXPECT(0xf4, gbc.readMem(0xe109));
        // E1 03B2
        gbc.setState(0x42ee, 0x3f2e, 0x2650, 0x3e3b, 0xa99a, 0xfa02, 0x1, 0x1);
        gbc.writeMem(0x3f2e, { 0x79, 0x8a });
        gbc.writeMem(0x42ee, { 0xe1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3f30, gbc.sp());
        EXPECT(0x42ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 03B3
        gbc.setState(0xc4dc, 0x559f, 0x7960, 0xb038, 0x9710, 0x6ae0, 0x1, 0x1);
        gbc.writeMem(0x559f, { 0xd4, 0xe });
        gbc.writeMem(0xc4dc, { 0xe1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x55a1, gbc.sp());
        EXPECT(0xc4dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc4dc));
        // E1 03B4
        gbc.setState(0x3a84, 0x667f, 0x8860, 0x7176, 0x91c1, 0xca04, 0x0, 0x0);
        gbc.writeMem(0x3a84, { 0xe1 });
        gbc.writeMem(0x667f, { 0x8, 0x54 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6681, gbc.sp());
        EXPECT(0x3a85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 03B5
        gbc.setState(0x84b5, 0xaae6, 0xa3d0, 0xa026, 0x5341, 0xca25, 0x1, 0x0);
        gbc.writeMem(0x84b5, { 0xe1 });
        gbc.writeMem(0xaae6, { 0xeb, 0xd6 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xaae8, gbc.sp());
        EXPECT(0x84b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x84b5));
        EXPECT(0xeb, gbc.readMem(0xaae6));
        EXPECT(0xd6, gbc.readMem(0xaae7));
        // E1 03B6
        gbc.setState(0xe2c7, 0x4cf8, 0x1b80, 0x1d3a, 0xcd7b, 0x6c40, 0x0, 0x1);
        gbc.writeMem(0x4cf8, { 0xea, 0x9f });
        gbc.writeMem(0xe2c7, { 0xe1 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4cfa, gbc.sp());
        EXPECT(0xe2c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe2c7));
        // E1 03B7
        gbc.setState(0x3773, 0x16ad, 0x98f0, 0xcf66, 0x6063, 0x621e, 0x1, 0x0);
        gbc.writeMem(0x16ad, { 0xc, 0xd2 });
        gbc.writeMem(0x3773, { 0xe1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x16af, gbc.sp());
        EXPECT(0x3774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 03B8
        gbc.setState(0xa12, 0x625a, 0x3a30, 0x4d2f, 0x95e5, 0x3233, 0x1, 0x0);
        gbc.writeMem(0xa12, { 0xe1 });
        gbc.writeMem(0x625a, { 0x5a, 0xe7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x625c, gbc.sp());
        EXPECT(0xa13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 03B9
        gbc.setState(0x75d7, 0x19b4, 0x19a0, 0xa22d, 0xabfe, 0x4895, 0x1, 0x0);
        gbc.writeMem(0x19b4, { 0x62, 0x59 });
        gbc.writeMem(0x75d7, { 0xe1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x19b6, gbc.sp());
        EXPECT(0x75d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 03BA
        gbc.setState(0x576f, 0x9edd, 0x2650, 0xae3c, 0x74c0, 0xd682, 0x1, 0x0);
        gbc.writeMem(0x576f, { 0xe1 });
        gbc.writeMem(0x9edd, { 0x8d, 0x54 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9edf, gbc.sp());
        EXPECT(0x5770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9edd));
        EXPECT(0x54, gbc.readMem(0x9ede));
        // E1 03BB
        gbc.setState(0x60b3, 0xe83e, 0x6b70, 0x1f6d, 0xc794, 0x849c, 0x1, 0x0);
        gbc.writeMem(0x60b3, { 0xe1 });
        gbc.writeMem(0xe83e, { 0xc8, 0xc });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe840, gbc.sp());
        EXPECT(0x60b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe83e));
        EXPECT(0xc, gbc.readMem(0xe83f));
        // E1 03BC
        gbc.setState(0x632, 0xaf31, 0xda80, 0x451e, 0xabb2, 0x6609, 0x0, 0x1);
        gbc.writeMem(0x632, { 0xe1 });
        gbc.writeMem(0xaf31, { 0x7a, 0xc6 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xaf33, gbc.sp());
        EXPECT(0x633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xaf31));
        EXPECT(0xc6, gbc.readMem(0xaf32));
        // E1 03BD
        gbc.setState(0x27e4, 0xa326, 0x4130, 0x6df8, 0xaa93, 0xf7b8, 0x0, 0x1);
        gbc.writeMem(0x27e4, { 0xe1 });
        gbc.writeMem(0xa326, { 0x4e, 0x6b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa328, gbc.sp());
        EXPECT(0x27e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa326));
        EXPECT(0x6b, gbc.readMem(0xa327));
        // E1 03BE
        gbc.setState(0xacad, 0x37da, 0xf240, 0x31fd, 0xd32c, 0x6e03, 0x0, 0x1);
        gbc.writeMem(0x37da, { 0xf3, 0x14 });
        gbc.writeMem(0xacad, { 0xe1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x37dc, gbc.sp());
        EXPECT(0xacae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xacad));
        // E1 03BF
        gbc.setState(0xec42, 0x123a, 0xf6b0, 0x742a, 0xd12, 0xb684, 0x0, 0x0);
        gbc.writeMem(0x123a, { 0x19, 0x59 });
        gbc.writeMem(0xec42, { 0xe1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x123c, gbc.sp());
        EXPECT(0xec43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xec42));
        // E1 03C0
        gbc.setState(0x543d, 0xa572, 0x88c0, 0xe3da, 0x2a71, 0x11a6, 0x1, 0x1);
        gbc.writeMem(0x543d, { 0xe1 });
        gbc.writeMem(0xa572, { 0xa, 0xf5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa574, gbc.sp());
        EXPECT(0x543e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa572));
        EXPECT(0xf5, gbc.readMem(0xa573));
        // E1 03C1
        gbc.setState(0xcca, 0xb16, 0x5080, 0x2e0a, 0xabe8, 0xb939, 0x1, 0x0);
        gbc.writeMem(0xb16, { 0x87, 0x4b });
        gbc.writeMem(0xcca, { 0xe1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb18, gbc.sp());
        EXPECT(0xccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 03C2
        gbc.setState(0xba3e, 0xdb05, 0x920, 0xc388, 0x8457, 0xc4d4, 0x1, 0x1);
        gbc.writeMem(0xba3e, { 0xe1 });
        gbc.writeMem(0xdb05, { 0xc9, 0x89 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdb07, gbc.sp());
        EXPECT(0xba3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xba3e));
        EXPECT(0xc9, gbc.readMem(0xdb05));
        EXPECT(0x89, gbc.readMem(0xdb06));
        // E1 03C3
        gbc.setState(0x7fe7, 0xddb3, 0x22a0, 0x46dc, 0xd883, 0xc3a0, 0x1, 0x1);
        gbc.writeMem(0x7fe7, { 0xe1 });
        gbc.writeMem(0xddb3, { 0x1d, 0x1b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xddb5, gbc.sp());
        EXPECT(0x7fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xddb3));
        EXPECT(0x1b, gbc.readMem(0xddb4));
        // E1 03C4
        gbc.setState(0x84c9, 0x2877, 0x67f0, 0x8754, 0x8603, 0xab69, 0x1, 0x1);
        gbc.writeMem(0x2877, { 0xbc, 0x14 });
        gbc.writeMem(0x84c9, { 0xe1 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2879, gbc.sp());
        EXPECT(0x84ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x84c9));
        // E1 03C5
        gbc.setState(0x946a, 0xcf0f, 0x9ff0, 0xa906, 0x21e1, 0xeed6, 0x1, 0x1);
        gbc.writeMem(0x946a, { 0xe1 });
        gbc.writeMem(0xcf0f, { 0x53, 0xea });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcf11, gbc.sp());
        EXPECT(0x946b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x946a));
        EXPECT(0x53, gbc.readMem(0xcf0f));
        EXPECT(0xea, gbc.readMem(0xcf10));
        // E1 03C6
        gbc.setState(0xcaa1, 0x6457, 0xbab0, 0xa9b9, 0x30d, 0xdfee, 0x0, 0x0);
        gbc.writeMem(0x6457, { 0xb1, 0x7d });
        gbc.writeMem(0xcaa1, { 0xe1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6459, gbc.sp());
        EXPECT(0xcaa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xcaa1));
        // E1 03C7
        gbc.setState(0x58e5, 0x5982, 0x8c80, 0xa229, 0xefd9, 0xba66, 0x1, 0x0);
        gbc.writeMem(0x58e5, { 0xe1 });
        gbc.writeMem(0x5982, { 0xa7, 0xcd });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5984, gbc.sp());
        EXPECT(0x58e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 03C8
        gbc.setState(0x923d, 0xa553, 0xd370, 0xb097, 0xfd83, 0xec8, 0x1, 0x0);
        gbc.writeMem(0x923d, { 0xe1 });
        gbc.writeMem(0xa553, { 0xcd, 0x3f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa555, gbc.sp());
        EXPECT(0x923e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x923d));
        EXPECT(0xcd, gbc.readMem(0xa553));
        EXPECT(0x3f, gbc.readMem(0xa554));
        // E1 03C9
        gbc.setState(0xed45, 0x9df2, 0x1fd0, 0x2ce3, 0x1b05, 0x9f9e, 0x0, 0x1);
        gbc.writeMem(0x9df2, { 0x8a, 0x7f });
        gbc.writeMem(0xed45, { 0xe1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9df4, gbc.sp());
        EXPECT(0xed46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9df2));
        EXPECT(0x7f, gbc.readMem(0x9df3));
        EXPECT(0xe1, gbc.readMem(0xed45));
        // E1 03CA
        gbc.setState(0xab35, 0x434a, 0xd230, 0x4f0b, 0x7cf5, 0x1554, 0x0, 0x0);
        gbc.writeMem(0x434a, { 0x9e, 0xb5 });
        gbc.writeMem(0xab35, { 0xe1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x434c, gbc.sp());
        EXPECT(0xab36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xab35));
        // E1 03CB
        gbc.setState(0x927b, 0x639a, 0xd480, 0xe648, 0xbb05, 0x4918, 0x1, 0x0);
        gbc.writeMem(0x639a, { 0x67, 0xbe });
        gbc.writeMem(0x927b, { 0xe1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x639c, gbc.sp());
        EXPECT(0x927c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x927b));
        // E1 03CC
        gbc.setState(0xf45, 0x2271, 0x4d20, 0xd8e2, 0xcf0a, 0xd641, 0x1, 0x1);
        gbc.writeMem(0xf45, { 0xe1 });
        gbc.writeMem(0x2271, { 0xa3, 0xc3 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2273, gbc.sp());
        EXPECT(0xf46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 03CD
        gbc.setState(0x9318, 0x92c0, 0xed70, 0x7672, 0xaa78, 0x3ba0, 0x1, 0x1);
        gbc.writeMem(0x92c0, { 0x2a, 0xcb });
        gbc.writeMem(0x9318, { 0xe1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x92c2, gbc.sp());
        EXPECT(0x9319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x92c0));
        EXPECT(0xcb, gbc.readMem(0x92c1));
        EXPECT(0xe1, gbc.readMem(0x9318));
        // E1 03CE
        gbc.setState(0x2b6, 0x9a0a, 0x5270, 0x71a9, 0x95f5, 0xfc10, 0x1, 0x0);
        gbc.writeMem(0x2b6, { 0xe1 });
        gbc.writeMem(0x9a0a, { 0x75, 0x47 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9a0c, gbc.sp());
        EXPECT(0x2b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9a0a));
        EXPECT(0x47, gbc.readMem(0x9a0b));
        // E1 03CF
        gbc.setState(0x9774, 0xbe48, 0xead0, 0x1324, 0x491b, 0xdd08, 0x0, 0x1);
        gbc.writeMem(0x9774, { 0xe1 });
        gbc.writeMem(0xbe48, { 0x3b, 0x1f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbe4a, gbc.sp());
        EXPECT(0x9775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9774));
        EXPECT(0x3b, gbc.readMem(0xbe48));
        EXPECT(0x1f, gbc.readMem(0xbe49));
        // E1 03D0
        gbc.setState(0x7b37, 0xa832, 0xd900, 0x5abe, 0x45ca, 0x1d5a, 0x0, 0x0);
        gbc.writeMem(0x7b37, { 0xe1 });
        gbc.writeMem(0xa832, { 0x97, 0x38 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa834, gbc.sp());
        EXPECT(0x7b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa832));
        EXPECT(0x38, gbc.readMem(0xa833));
        // E1 03D1
        gbc.setState(0x9eee, 0x7579, 0x3d00, 0xd8f9, 0x30be, 0x3bb8, 0x1, 0x1);
        gbc.writeMem(0x7579, { 0xca, 0xd4 });
        gbc.writeMem(0x9eee, { 0xe1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x757b, gbc.sp());
        EXPECT(0x9eef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9eee));
        // E1 03D2
        gbc.setState(0x50a2, 0xcba8, 0x90e0, 0xe9ad, 0x8d06, 0x1f1f, 0x0, 0x1);
        gbc.writeMem(0x50a2, { 0xe1 });
        gbc.writeMem(0xcba8, { 0x5b, 0xab });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xcbaa, gbc.sp());
        EXPECT(0x50a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xcba8));
        EXPECT(0xab, gbc.readMem(0xcba9));
        // E1 03D3
        gbc.setState(0x1ba2, 0x5196, 0x7730, 0x189c, 0xf1f6, 0x142f, 0x0, 0x0);
        gbc.writeMem(0x1ba2, { 0xe1 });
        gbc.writeMem(0x5196, { 0x50, 0x28 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5198, gbc.sp());
        EXPECT(0x1ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 03D5
        gbc.setState(0x5263, 0x9aea, 0x4dc0, 0xf1d, 0x324b, 0xebf7, 0x1, 0x1);
        gbc.writeMem(0x5263, { 0xe1 });
        gbc.writeMem(0x9aea, { 0x13, 0x91 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9aec, gbc.sp());
        EXPECT(0x5264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9aea));
        EXPECT(0x91, gbc.readMem(0x9aeb));
        // E1 03D6
        gbc.setState(0x9, 0xae4f, 0x2220, 0xc5f1, 0x5542, 0x51c6, 0x0, 0x1);
        gbc.writeMem(0x9, { 0xe1 });
        gbc.writeMem(0xae4f, { 0xff, 0x37 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xae51, gbc.sp());
        EXPECT(0xa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xae4f));
        EXPECT(0x37, gbc.readMem(0xae50));
        // E1 03D7
        gbc.setState(0x8d4d, 0x6567, 0x44c0, 0xdad5, 0x70e0, 0x8baf, 0x1, 0x0);
        gbc.writeMem(0x6567, { 0x63, 0x68 });
        gbc.writeMem(0x8d4d, { 0xe1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6569, gbc.sp());
        EXPECT(0x8d4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8d4d));
        // E1 03D9
        gbc.setState(0x705b, 0x813, 0xb730, 0xbe18, 0x54f4, 0x2537, 0x1, 0x0);
        gbc.writeMem(0x813, { 0x56, 0x7f });
        gbc.writeMem(0x705b, { 0xe1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x815, gbc.sp());
        EXPECT(0x705c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E1 03DA
        gbc.setState(0x62ef, 0x4322, 0xa8e0, 0xadd3, 0xa06f, 0x548, 0x0, 0x0);
        gbc.writeMem(0x4322, { 0x89, 0xe3 });
        gbc.writeMem(0x62ef, { 0xe1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4324, gbc.sp());
        EXPECT(0x62f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 03DC
        gbc.setState(0xa8a1, 0xda94, 0x7d00, 0x309e, 0x48e0, 0x93f3, 0x0, 0x1);
        gbc.writeMem(0xa8a1, { 0xe1 });
        gbc.writeMem(0xda94, { 0x33, 0x4b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xda96, gbc.sp());
        EXPECT(0xa8a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa8a1));
        EXPECT(0x33, gbc.readMem(0xda94));
        EXPECT(0x4b, gbc.readMem(0xda95));
        // E1 03DD
        gbc.setState(0xb1c7, 0x6242, 0xef60, 0xacd1, 0x7ee4, 0x1465, 0x1, 0x0);
        gbc.writeMem(0x6242, { 0x10, 0xdd });
        gbc.writeMem(0xb1c7, { 0xe1 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6244, gbc.sp());
        EXPECT(0xb1c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb1c7));
        // E1 03DE
        gbc.setState(0x356c, 0xf86a, 0x5fc0, 0xc636, 0x216b, 0xfcca, 0x0, 0x0);
        gbc.writeMem(0x356c, { 0xe1 });
        gbc.writeMem(0xf86a, { 0x79, 0xbe });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf86c, gbc.sp());
        EXPECT(0x356d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xf86a));
        EXPECT(0xbe, gbc.readMem(0xf86b));
        // E1 03DF
        gbc.setState(0x21bb, 0x74b4, 0xc860, 0x4717, 0xbe6c, 0x56e5, 0x1, 0x1);
        gbc.writeMem(0x21bb, { 0xe1 });
        gbc.writeMem(0x74b4, { 0xdd, 0x1f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x74b6, gbc.sp());
        EXPECT(0x21bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 03E0
        gbc.setState(0xb810, 0xebbe, 0x7e30, 0x2923, 0xa963, 0x5ae, 0x1, 0x1);
        gbc.writeMem(0xb810, { 0xe1 });
        gbc.writeMem(0xebbe, { 0x16, 0x41 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xebc0, gbc.sp());
        EXPECT(0xb811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb810));
        EXPECT(0x16, gbc.readMem(0xebbe));
        EXPECT(0x41, gbc.readMem(0xebbf));
        // E1 03E1
        gbc.setState(0x5aec, 0xaa75, 0x3a40, 0x2919, 0x80e, 0x3cfa, 0x0, 0x1);
        gbc.writeMem(0x5aec, { 0xe1 });
        gbc.writeMem(0xaa75, { 0x82, 0x2b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xaa77, gbc.sp());
        EXPECT(0x5aed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xaa75));
        EXPECT(0x2b, gbc.readMem(0xaa76));
        // E1 03E2
        gbc.setState(0x2c75, 0xc3e8, 0xf710, 0x639d, 0xb9d5, 0x9476, 0x0, 0x1);
        gbc.writeMem(0x2c75, { 0xe1 });
        gbc.writeMem(0xc3e8, { 0x8, 0xa5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc3ea, gbc.sp());
        EXPECT(0x2c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xc3e8));
        EXPECT(0xa5, gbc.readMem(0xc3e9));
        // E1 03E3
        gbc.setState(0x7581, 0xedde, 0x3dd0, 0xc469, 0xc2fa, 0x6a01, 0x1, 0x0);
        gbc.writeMem(0x7581, { 0xe1 });
        gbc.writeMem(0xedde, { 0x1e, 0x4f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xede0, gbc.sp());
        EXPECT(0x7582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xedde));
        EXPECT(0x4f, gbc.readMem(0xeddf));
        // E1 03E4
        gbc.setState(0xcfb7, 0xc449, 0x7f70, 0x2518, 0x4cda, 0x9163, 0x1, 0x0);
        gbc.writeMem(0xc449, { 0xcc, 0x1 });
        gbc.writeMem(0xcfb7, { 0xe1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc44b, gbc.sp());
        EXPECT(0xcfb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xc449));
        EXPECT(0x1, gbc.readMem(0xc44a));
        EXPECT(0xe1, gbc.readMem(0xcfb7));
        // E1 03E5
        gbc.setState(0x69be, 0x604, 0x60c0, 0x3d64, 0x278f, 0x468f, 0x0, 0x0);
        gbc.writeMem(0x604, { 0x4e, 0xd2 });
        gbc.writeMem(0x69be, { 0xe1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x606, gbc.sp());
        EXPECT(0x69bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E1 03E6
        gbc.setState(0xdd4f, 0x7ac3, 0x4c80, 0x9b9, 0xbc20, 0xbebf, 0x1, 0x0);
        gbc.writeMem(0x7ac3, { 0xe6, 0xe0 });
        gbc.writeMem(0xdd4f, { 0xe1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7ac5, gbc.sp());
        EXPECT(0xdd50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xdd4f));
        // E1 03E7
        gbc.setState(0x4709, 0x2f4f, 0x8d90, 0xdea7, 0x41f6, 0x35fc, 0x1, 0x1);
        gbc.writeMem(0x2f4f, { 0xda, 0x97 });
        gbc.writeMem(0x4709, { 0xe1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2f51, gbc.sp());
        EXPECT(0x470a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
