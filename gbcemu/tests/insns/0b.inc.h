    TEST(gbcemu, opcode_0b) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 0B 0000
        gbc.setState(0xd191, 0xed4a, 0x8d90, 0x204, 0x3002, 0xbb53, 0x0, 0x0);
        gbc.writeMem(0xd191, { 0xb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xed4a, gbc.sp());
        EXPECT(0xd192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd191));
        // 0B 0001
        gbc.setState(0x993d, 0x3db9, 0x7210, 0x687c, 0xfb38, 0x6102, 0x1, 0x0);
        gbc.writeMem(0x993d, { 0xb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3db9, gbc.sp());
        EXPECT(0x993e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x993d));
        // 0B 0002
        gbc.setState(0x4452, 0x1e1e, 0xd550, 0x9ba, 0x6983, 0xf39d, 0x1, 0x1);
        gbc.writeMem(0x4452, { 0xb });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1e1e, gbc.sp());
        EXPECT(0x4453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0003
        gbc.setState(0x5ac1, 0x3aed, 0xa670, 0xfb14, 0xe9cd, 0xba5c, 0x1, 0x1);
        gbc.writeMem(0x5ac1, { 0xb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3aed, gbc.sp());
        EXPECT(0x5ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0004
        gbc.setState(0xc42, 0xfc32, 0x9f70, 0x47ec, 0xec2e, 0x6120, 0x0, 0x1);
        gbc.writeMem(0xc42, { 0xb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfc32, gbc.sp());
        EXPECT(0xc43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0005
        gbc.setState(0x2665, 0xa540, 0x8bf0, 0x75ca, 0xbca2, 0x938f, 0x0, 0x0);
        gbc.writeMem(0x2665, { 0xb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa540, gbc.sp());
        EXPECT(0x2666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0006
        gbc.setState(0xed94, 0x4035, 0x1c90, 0xf201, 0x7ad4, 0x1b08, 0x1, 0x1);
        gbc.writeMem(0xed94, { 0xb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4035, gbc.sp());
        EXPECT(0xed95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xed94));
        // 0B 0007
        gbc.setState(0x3b16, 0xb361, 0x9830, 0xce5, 0x508b, 0x61f3, 0x1, 0x0);
        gbc.writeMem(0x3b16, { 0xb });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb361, gbc.sp());
        EXPECT(0x3b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0008
        gbc.setState(0x9b40, 0x3f54, 0x4e10, 0xb3c7, 0xb3b, 0xf076, 0x1, 0x1);
        gbc.writeMem(0x9b40, { 0xb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3f54, gbc.sp());
        EXPECT(0x9b41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9b40));
        // 0B 0009
        gbc.setState(0xb5b6, 0xf0af, 0xbc70, 0x8a75, 0x5d52, 0xde08, 0x1, 0x1);
        gbc.writeMem(0xb5b6, { 0xb });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf0af, gbc.sp());
        EXPECT(0xb5b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb5b6));
        // 0B 000A
        gbc.setState(0x4a85, 0x1d3a, 0x6360, 0x7241, 0x5d1a, 0x1651, 0x1, 0x0);
        gbc.writeMem(0x4a85, { 0xb });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1d3a, gbc.sp());
        EXPECT(0x4a86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 000B
        gbc.setState(0x811, 0x84a8, 0xd370, 0xc9d7, 0x59fd, 0x1998, 0x1, 0x0);
        gbc.writeMem(0x811, { 0xb });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x84a8, gbc.sp());
        EXPECT(0x812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 000C
        gbc.setState(0xd7a0, 0xc168, 0xa280, 0x923e, 0xcc52, 0xd684, 0x1, 0x0);
        gbc.writeMem(0xd7a0, { 0xb });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc168, gbc.sp());
        EXPECT(0xd7a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd7a0));
        // 0B 000D
        gbc.setState(0xa1fa, 0x3b1f, 0x2760, 0x43ae, 0xa0d2, 0xff82, 0x1, 0x1);
        gbc.writeMem(0xa1fa, { 0xb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3b1f, gbc.sp());
        EXPECT(0xa1fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa1fa));
        // 0B 000E
        gbc.setState(0xd0be, 0x6e8d, 0xd970, 0x792a, 0x1928, 0xf99, 0x1, 0x0);
        gbc.writeMem(0xd0be, { 0xb });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6e8d, gbc.sp());
        EXPECT(0xd0bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd0be));
        // 0B 000F
        gbc.setState(0x4bb, 0xb5e7, 0xe810, 0x1d3d, 0x1a33, 0x1483, 0x0, 0x0);
        gbc.writeMem(0x4bb, { 0xb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb5e7, gbc.sp());
        EXPECT(0x4bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0010
        gbc.setState(0xb36, 0x1900, 0x4300, 0xaf8a, 0xfbd, 0x42bd, 0x0, 0x1);
        gbc.writeMem(0xb36, { 0xb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1900, gbc.sp());
        EXPECT(0xb37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0011
        gbc.setState(0xd7c9, 0x7fb4, 0xe150, 0x51b9, 0xaed1, 0xa737, 0x1, 0x1);
        gbc.writeMem(0xd7c9, { 0xb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7fb4, gbc.sp());
        EXPECT(0xd7ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd7c9));
        // 0B 0012
        gbc.setState(0x3864, 0x4009, 0x25b0, 0x9b22, 0x563b, 0x6799, 0x1, 0x1);
        gbc.writeMem(0x3864, { 0xb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4009, gbc.sp());
        EXPECT(0x3865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0013
        gbc.setState(0x75be, 0xfb7c, 0x5c50, 0x745e, 0x89eb, 0x81b, 0x1, 0x0);
        gbc.writeMem(0x75be, { 0xb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfb7c, gbc.sp());
        EXPECT(0x75bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0014
        gbc.setState(0x7c90, 0x1aaa, 0x6160, 0xd1e9, 0x703, 0x53fa, 0x1, 0x0);
        gbc.writeMem(0x7c90, { 0xb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1aaa, gbc.sp());
        EXPECT(0x7c91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0015
        gbc.setState(0x6f77, 0xa2e8, 0x8330, 0x7e38, 0x8949, 0x403b, 0x1, 0x1);
        gbc.writeMem(0x6f77, { 0xb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa2e8, gbc.sp());
        EXPECT(0x6f78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0016
        gbc.setState(0xd6ad, 0xc165, 0x9ba0, 0x5150, 0xe7df, 0x4116, 0x0, 0x1);
        gbc.writeMem(0xd6ad, { 0xb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc165, gbc.sp());
        EXPECT(0xd6ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd6ad));
        // 0B 0017
        gbc.setState(0x53c0, 0x7acf, 0x1c50, 0xb92f, 0x5e01, 0x16b9, 0x1, 0x1);
        gbc.writeMem(0x53c0, { 0xb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7acf, gbc.sp());
        EXPECT(0x53c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0018
        gbc.setState(0x53d4, 0xa0b7, 0xa990, 0x3493, 0x6551, 0x8bb9, 0x1, 0x0);
        gbc.writeMem(0x53d4, { 0xb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa0b7, gbc.sp());
        EXPECT(0x53d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0019
        gbc.setState(0x3d86, 0x97f8, 0x6c0, 0x46ea, 0x51e0, 0x43ff, 0x1, 0x1);
        gbc.writeMem(0x3d86, { 0xb });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x97f8, gbc.sp());
        EXPECT(0x3d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 001A
        gbc.setState(0xbbd9, 0xb52, 0xc270, 0x384a, 0x548, 0x8d1, 0x0, 0x1);
        gbc.writeMem(0xbbd9, { 0xb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb52, gbc.sp());
        EXPECT(0xbbda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbbd9));
        // 0B 001B
        gbc.setState(0xbc87, 0x70e1, 0x51e0, 0xb08e, 0xb4c8, 0x1f80, 0x0, 0x0);
        gbc.writeMem(0xbc87, { 0xb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x70e1, gbc.sp());
        EXPECT(0xbc88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbc87));
        // 0B 001C
        gbc.setState(0x55b5, 0x7b31, 0x2c50, 0x7661, 0x363f, 0xfa35, 0x1, 0x0);
        gbc.writeMem(0x55b5, { 0xb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7b31, gbc.sp());
        EXPECT(0x55b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 001D
        gbc.setState(0x6ef9, 0xbb8f, 0xcc60, 0x28ec, 0x48e, 0xbb1f, 0x1, 0x0);
        gbc.writeMem(0x6ef9, { 0xb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbb8f, gbc.sp());
        EXPECT(0x6efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 001E
        gbc.setState(0x58f, 0xb520, 0xace0, 0x798f, 0x9b0e, 0xc81f, 0x0, 0x1);
        gbc.writeMem(0x58f, { 0xb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb520, gbc.sp());
        EXPECT(0x590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 001F
        gbc.setState(0xd537, 0xad5f, 0x3140, 0x5c77, 0x1bd7, 0x556f, 0x0, 0x0);
        gbc.writeMem(0xd537, { 0xb });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xad5f, gbc.sp());
        EXPECT(0xd538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd537));
        // 0B 0020
        gbc.setState(0xd92a, 0x839b, 0x7720, 0x8847, 0xd3d3, 0x9aad, 0x0, 0x1);
        gbc.writeMem(0xd92a, { 0xb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x839b, gbc.sp());
        EXPECT(0xd92b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd92a));
        // 0B 0021
        gbc.setState(0x78d0, 0xd868, 0xbc90, 0xd443, 0xd6f0, 0x45fb, 0x1, 0x1);
        gbc.writeMem(0x78d0, { 0xb });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd868, gbc.sp());
        EXPECT(0x78d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0022
        gbc.setState(0x82f3, 0x34a8, 0x5450, 0x75b0, 0x68a9, 0xb8bf, 0x1, 0x1);
        gbc.writeMem(0x82f3, { 0xb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x34a8, gbc.sp());
        EXPECT(0x82f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x82f3));
        // 0B 0023
        gbc.setState(0x35e6, 0xe52a, 0x6f70, 0xd636, 0x5d77, 0x33f4, 0x1, 0x0);
        gbc.writeMem(0x35e6, { 0xb });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe52a, gbc.sp());
        EXPECT(0x35e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0024
        gbc.setState(0xc5e1, 0x8880, 0x45c0, 0x66e2, 0x31cb, 0xbf89, 0x1, 0x1);
        gbc.writeMem(0xc5e1, { 0xb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8880, gbc.sp());
        EXPECT(0xc5e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc5e1));
        // 0B 0025
        gbc.setState(0x946e, 0x5b2e, 0x5820, 0xe194, 0x26a2, 0xeabd, 0x0, 0x0);
        gbc.writeMem(0x946e, { 0xb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5b2e, gbc.sp());
        EXPECT(0x946f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x946e));
        // 0B 0026
        gbc.setState(0x1e6e, 0x9c33, 0x9690, 0xf15d, 0x247f, 0x69d1, 0x1, 0x0);
        gbc.writeMem(0x1e6e, { 0xb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9c33, gbc.sp());
        EXPECT(0x1e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0027
        gbc.setState(0xae6e, 0xbc6b, 0x190, 0xd745, 0xaa73, 0x5555, 0x0, 0x0);
        gbc.writeMem(0xae6e, { 0xb });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xbc6b, gbc.sp());
        EXPECT(0xae6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xae6e));
        // 0B 0028
        gbc.setState(0x616e, 0xf5b1, 0xdb0, 0xe281, 0xef81, 0xbbb8, 0x0, 0x1);
        gbc.writeMem(0x616e, { 0xb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf5b1, gbc.sp());
        EXPECT(0x616f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0029
        gbc.setState(0x6df9, 0x8534, 0xd060, 0x4fb1, 0x122, 0xbf1d, 0x1, 0x0);
        gbc.writeMem(0x6df9, { 0xb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8534, gbc.sp());
        EXPECT(0x6dfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 002A
        gbc.setState(0x3b4d, 0xf9df, 0x8a20, 0xc733, 0xe4b9, 0x9a08, 0x1, 0x0);
        gbc.writeMem(0x3b4d, { 0xb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf9df, gbc.sp());
        EXPECT(0x3b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 002B
        gbc.setState(0xd4b1, 0xa752, 0x21b0, 0xb58f, 0x5c2c, 0xa85a, 0x1, 0x1);
        gbc.writeMem(0xd4b1, { 0xb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa752, gbc.sp());
        EXPECT(0xd4b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd4b1));
        // 0B 002C
        gbc.setState(0x5274, 0xdab6, 0xed0, 0xd935, 0x6a70, 0x95e3, 0x1, 0x0);
        gbc.writeMem(0x5274, { 0xb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xdab6, gbc.sp());
        EXPECT(0x5275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 002D
        gbc.setState(0xe30c, 0x9d16, 0xc0, 0x177d, 0x55ef, 0x98c2, 0x1, 0x0);
        gbc.writeMem(0xe30c, { 0xb });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9d16, gbc.sp());
        EXPECT(0xe30d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe30c));
        // 0B 002E
        gbc.setState(0xdca4, 0x7cca, 0x8ec0, 0xa71c, 0xdb07, 0x5cd8, 0x1, 0x1);
        gbc.writeMem(0xdca4, { 0xb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7cca, gbc.sp());
        EXPECT(0xdca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xdca4));
        // 0B 002F
        gbc.setState(0x1fd8, 0x1380, 0xcb50, 0xc367, 0xb3d8, 0x87a0, 0x0, 0x0);
        gbc.writeMem(0x1fd8, { 0xb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1380, gbc.sp());
        EXPECT(0x1fd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0030
        gbc.setState(0x3739, 0x2d52, 0xda60, 0xab42, 0xfc0c, 0x6d3d, 0x0, 0x0);
        gbc.writeMem(0x3739, { 0xb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2d52, gbc.sp());
        EXPECT(0x373a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0031
        gbc.setState(0x3587, 0x6f58, 0x8d80, 0x3059, 0x77ab, 0x82a3, 0x1, 0x1);
        gbc.writeMem(0x3587, { 0xb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6f58, gbc.sp());
        EXPECT(0x3588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0032
        gbc.setState(0x57be, 0xba93, 0x2410, 0xb32f, 0xa7af, 0xb9d9, 0x1, 0x0);
        gbc.writeMem(0x57be, { 0xb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xba93, gbc.sp());
        EXPECT(0x57bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0033
        gbc.setState(0x9bf5, 0x464d, 0xcdc0, 0xe667, 0x5027, 0x9427, 0x1, 0x1);
        gbc.writeMem(0x9bf5, { 0xb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x464d, gbc.sp());
        EXPECT(0x9bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9bf5));
        // 0B 0034
        gbc.setState(0x658f, 0x15d9, 0x4e00, 0xb357, 0xa9f7, 0xb82f, 0x1, 0x1);
        gbc.writeMem(0x658f, { 0xb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x15d9, gbc.sp());
        EXPECT(0x6590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0035
        gbc.setState(0xde1d, 0xdb71, 0xf030, 0xdd18, 0x248d, 0x2e1f, 0x0, 0x1);
        gbc.writeMem(0xde1d, { 0xb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdb71, gbc.sp());
        EXPECT(0xde1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xde1d));
        // 0B 0036
        gbc.setState(0xa400, 0x80c8, 0x7a50, 0x1b44, 0x7c7f, 0xd607, 0x0, 0x0);
        gbc.writeMem(0xa400, { 0xb });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x80c8, gbc.sp());
        EXPECT(0xa401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa400));
        // 0B 0037
        gbc.setState(0x7b39, 0xc30e, 0x7090, 0x24bf, 0xed75, 0xc554, 0x1, 0x1);
        gbc.writeMem(0x7b39, { 0xb });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc30e, gbc.sp());
        EXPECT(0x7b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0038
        gbc.setState(0x7418, 0x9105, 0xf70, 0xc821, 0x991f, 0xbd49, 0x0, 0x0);
        gbc.writeMem(0x7418, { 0xb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9105, gbc.sp());
        EXPECT(0x7419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0039
        gbc.setState(0x4375, 0x2a6, 0xad60, 0xc497, 0x65f3, 0x8d93, 0x1, 0x0);
        gbc.writeMem(0x4375, { 0xb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2a6, gbc.sp());
        EXPECT(0x4376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 003A
        gbc.setState(0x377f, 0xbe66, 0xa9e0, 0x58d5, 0x60a, 0x38ef, 0x0, 0x0);
        gbc.writeMem(0x377f, { 0xb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbe66, gbc.sp());
        EXPECT(0x3780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 003B
        gbc.setState(0x6a42, 0xca31, 0x26c0, 0x909d, 0xb212, 0xe595, 0x1, 0x1);
        gbc.writeMem(0x6a42, { 0xb });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xca31, gbc.sp());
        EXPECT(0x6a43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 003C
        gbc.setState(0x5c42, 0x39a7, 0x1340, 0x5f47, 0xfd30, 0xd855, 0x0, 0x0);
        gbc.writeMem(0x5c42, { 0xb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x39a7, gbc.sp());
        EXPECT(0x5c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 003D
        gbc.setState(0x6635, 0x5b50, 0xc830, 0x4ca5, 0xc66, 0x2ff8, 0x1, 0x0);
        gbc.writeMem(0x6635, { 0xb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5b50, gbc.sp());
        EXPECT(0x6636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 003E
        gbc.setState(0x7dcc, 0x9b16, 0x92a0, 0x21a6, 0xde00, 0x896c, 0x1, 0x0);
        gbc.writeMem(0x7dcc, { 0xb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9b16, gbc.sp());
        EXPECT(0x7dcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 003F
        gbc.setState(0x2120, 0xa69f, 0xb440, 0x4e3e, 0xb8a2, 0xb96d, 0x1, 0x0);
        gbc.writeMem(0x2120, { 0xb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa69f, gbc.sp());
        EXPECT(0x2121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0040
        gbc.setState(0xa0b7, 0xdab6, 0xf480, 0xa4ec, 0xc1f6, 0x926d, 0x1, 0x1);
        gbc.writeMem(0xa0b7, { 0xb });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xdab6, gbc.sp());
        EXPECT(0xa0b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa0b7));
        // 0B 0041
        gbc.setState(0xc60b, 0x7ea8, 0xafd0, 0xe9aa, 0x9f75, 0xe1e9, 0x0, 0x0);
        gbc.writeMem(0xc60b, { 0xb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7ea8, gbc.sp());
        EXPECT(0xc60c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc60b));
        // 0B 0042
        gbc.setState(0xdf17, 0x7a30, 0xa280, 0xb677, 0xd651, 0x9fd6, 0x1, 0x0);
        gbc.writeMem(0xdf17, { 0xb });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7a30, gbc.sp());
        EXPECT(0xdf18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xdf17));
        // 0B 0044
        gbc.setState(0xab87, 0x2bd4, 0x85b0, 0x9fe7, 0xf066, 0xb730, 0x0, 0x0);
        gbc.writeMem(0xab87, { 0xb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2bd4, gbc.sp());
        EXPECT(0xab88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xab87));
        // 0B 0045
        gbc.setState(0x2361, 0x8688, 0xecf0, 0x7e96, 0xc473, 0xa956, 0x0, 0x0);
        gbc.writeMem(0x2361, { 0xb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8688, gbc.sp());
        EXPECT(0x2362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0047
        gbc.setState(0x36f2, 0x257e, 0xd790, 0xdd53, 0x67e7, 0x42, 0x0, 0x1);
        gbc.writeMem(0x36f2, { 0xb });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x257e, gbc.sp());
        EXPECT(0x36f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0048
        gbc.setState(0x5ab6, 0x8cfd, 0x40d0, 0xc0a5, 0x660f, 0x5ec1, 0x1, 0x1);
        gbc.writeMem(0x5ab6, { 0xb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8cfd, gbc.sp());
        EXPECT(0x5ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0049
        gbc.setState(0xb187, 0x2732, 0x3a90, 0xb5d5, 0x3960, 0xd6f2, 0x0, 0x0);
        gbc.writeMem(0xb187, { 0xb });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2732, gbc.sp());
        EXPECT(0xb188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb187));
        // 0B 004A
        gbc.setState(0xcffc, 0xbc97, 0xdef0, 0xad12, 0x63c4, 0x4306, 0x1, 0x1);
        gbc.writeMem(0xcffc, { 0xb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xbc97, gbc.sp());
        EXPECT(0xcffd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xcffc));
        // 0B 004B
        gbc.setState(0x44b6, 0xd8c9, 0xf200, 0xe87a, 0x7235, 0xb7ed, 0x1, 0x0);
        gbc.writeMem(0x44b6, { 0xb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd8c9, gbc.sp());
        EXPECT(0x44b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 004C
        gbc.setState(0x317b, 0x6834, 0xe330, 0x4a48, 0x8fa, 0x55a6, 0x0, 0x1);
        gbc.writeMem(0x317b, { 0xb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6834, gbc.sp());
        EXPECT(0x317c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 004D
        gbc.setState(0x3742, 0xefa, 0x3ce0, 0x5d77, 0xf945, 0x2f9a, 0x1, 0x0);
        gbc.writeMem(0x3742, { 0xb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xefa, gbc.sp());
        EXPECT(0x3743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 004E
        gbc.setState(0xcbb5, 0x9245, 0x3b30, 0xd96a, 0x31f2, 0x83a5, 0x1, 0x1);
        gbc.writeMem(0xcbb5, { 0xb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9245, gbc.sp());
        EXPECT(0xcbb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xcbb5));
        // 0B 004F
        gbc.setState(0xce7e, 0xfdd3, 0xea30, 0x560b, 0x3841, 0xf5f8, 0x0, 0x1);
        gbc.writeMem(0xce7e, { 0xb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfdd3, gbc.sp());
        EXPECT(0xce7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xce7e));
        // 0B 0050
        gbc.setState(0x83b7, 0xb840, 0x2f10, 0xc028, 0x8258, 0xe62e, 0x1, 0x0);
        gbc.writeMem(0x83b7, { 0xb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb840, gbc.sp());
        EXPECT(0x83b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x83b7));
        // 0B 0051
        gbc.setState(0xb66d, 0x4d47, 0x70a0, 0x544b, 0x3475, 0xabc3, 0x1, 0x0);
        gbc.writeMem(0xb66d, { 0xb });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4d47, gbc.sp());
        EXPECT(0xb66e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb66d));
        // 0B 0053
        gbc.setState(0x9edd, 0x372, 0x3eb0, 0xd68b, 0x5f4b, 0xf65f, 0x0, 0x1);
        gbc.writeMem(0x9edd, { 0xb });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x372, gbc.sp());
        EXPECT(0x9ede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9edd));
        // 0B 0054
        gbc.setState(0x3824, 0x273e, 0xb650, 0xda5e, 0x70e4, 0xf659, 0x0, 0x0);
        gbc.writeMem(0x3824, { 0xb });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x273e, gbc.sp());
        EXPECT(0x3825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0055
        gbc.setState(0x771b, 0x238c, 0x94d0, 0x258e, 0xecba, 0x176a, 0x1, 0x1);
        gbc.writeMem(0x771b, { 0xb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x238c, gbc.sp());
        EXPECT(0x771c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0056
        gbc.setState(0x173f, 0x1e62, 0xf470, 0x7825, 0x4f83, 0xe1b9, 0x0, 0x1);
        gbc.writeMem(0x173f, { 0xb });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1e62, gbc.sp());
        EXPECT(0x1740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0057
        gbc.setState(0x2bfe, 0x2892, 0xb130, 0x452b, 0x838a, 0xf923, 0x0, 0x1);
        gbc.writeMem(0x2bfe, { 0xb });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2892, gbc.sp());
        EXPECT(0x2bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0058
        gbc.setState(0xb822, 0x2269, 0x6a0, 0xc13b, 0x4a32, 0xc2e3, 0x0, 0x1);
        gbc.writeMem(0xb822, { 0xb });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2269, gbc.sp());
        EXPECT(0xb823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb822));
        // 0B 0059
        gbc.setState(0x7065, 0x2c94, 0xc030, 0x38dc, 0x588e, 0xc781, 0x1, 0x1);
        gbc.writeMem(0x7065, { 0xb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2c94, gbc.sp());
        EXPECT(0x7066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 005A
        gbc.setState(0x5015, 0x6911, 0xe3d0, 0x16f6, 0xc50a, 0x41c6, 0x0, 0x1);
        gbc.writeMem(0x5015, { 0xb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6911, gbc.sp());
        EXPECT(0x5016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 005B
        gbc.setState(0xe0b3, 0xd7af, 0xd10, 0x2892, 0x7ca0, 0x6c6f, 0x1, 0x0);
        gbc.writeMem(0xe0b3, { 0xb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd7af, gbc.sp());
        EXPECT(0xe0b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe0b3));
        // 0B 005C
        gbc.setState(0x7e9, 0x3f92, 0x6dd0, 0x8bf5, 0x7015, 0x465c, 0x1, 0x0);
        gbc.writeMem(0x7e9, { 0xb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3f92, gbc.sp());
        EXPECT(0x7ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 005D
        gbc.setState(0xd54b, 0x2b73, 0xa9d0, 0xb0cf, 0x2a1d, 0x52e, 0x0, 0x0);
        gbc.writeMem(0xd54b, { 0xb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2b73, gbc.sp());
        EXPECT(0xd54c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd54b));
        // 0B 005E
        gbc.setState(0xa3c1, 0x5923, 0x9ec0, 0xed15, 0x169b, 0x4188, 0x1, 0x0);
        gbc.writeMem(0xa3c1, { 0xb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5923, gbc.sp());
        EXPECT(0xa3c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa3c1));
        // 0B 0060
        gbc.setState(0x7b6d, 0xf712, 0x7760, 0x168b, 0xef69, 0xb883, 0x1, 0x1);
        gbc.writeMem(0x7b6d, { 0xb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf712, gbc.sp());
        EXPECT(0x7b6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0061
        gbc.setState(0xec6, 0xa04c, 0x29a0, 0x338a, 0x17f9, 0x5a30, 0x1, 0x1);
        gbc.writeMem(0xec6, { 0xb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa04c, gbc.sp());
        EXPECT(0xec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0062
        gbc.setState(0x9203, 0xde69, 0x4480, 0x1f67, 0x831b, 0xaace, 0x1, 0x0);
        gbc.writeMem(0x9203, { 0xb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xde69, gbc.sp());
        EXPECT(0x9204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9203));
        // 0B 0063
        gbc.setState(0x466a, 0xea5b, 0x5270, 0x8c0b, 0x207f, 0x66b, 0x0, 0x0);
        gbc.writeMem(0x466a, { 0xb });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xea5b, gbc.sp());
        EXPECT(0x466b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0064
        gbc.setState(0x72d2, 0x3f59, 0xbd20, 0xba26, 0x7008, 0x5a02, 0x0, 0x1);
        gbc.writeMem(0x72d2, { 0xb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3f59, gbc.sp());
        EXPECT(0x72d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0065
        gbc.setState(0xbd40, 0xb806, 0x65d0, 0x54ee, 0xd8d, 0x2cda, 0x0, 0x1);
        gbc.writeMem(0xbd40, { 0xb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb806, gbc.sp());
        EXPECT(0xbd41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbd40));
        // 0B 0066
        gbc.setState(0xafec, 0x6b67, 0x7d30, 0x9ffc, 0x5aa3, 0x3b4, 0x0, 0x0);
        gbc.writeMem(0xafec, { 0xb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6b67, gbc.sp());
        EXPECT(0xafed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xafec));
        // 0B 0067
        gbc.setState(0xb644, 0x9ef4, 0x8210, 0xdc0, 0x220f, 0x2c2d, 0x0, 0x0);
        gbc.writeMem(0xb644, { 0xb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9ef4, gbc.sp());
        EXPECT(0xb645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb644));
        // 0B 0068
        gbc.setState(0xd221, 0x7086, 0x5240, 0x5a40, 0x261d, 0xe839, 0x1, 0x0);
        gbc.writeMem(0xd221, { 0xb });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7086, gbc.sp());
        EXPECT(0xd222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd221));
        // 0B 006A
        gbc.setState(0x65d7, 0x2501, 0xa080, 0x22e8, 0xda01, 0x4475, 0x1, 0x0);
        gbc.writeMem(0x65d7, { 0xb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2501, gbc.sp());
        EXPECT(0x65d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 006C
        gbc.setState(0x853, 0x23f4, 0x4d80, 0xeca9, 0xbcec, 0x5724, 0x1, 0x0);
        gbc.writeMem(0x853, { 0xb });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x23f4, gbc.sp());
        EXPECT(0x854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 006D
        gbc.setState(0x3558, 0x1ef1, 0x95e0, 0xb504, 0x2e15, 0xd657, 0x0, 0x1);
        gbc.writeMem(0x3558, { 0xb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1ef1, gbc.sp());
        EXPECT(0x3559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 006E
        gbc.setState(0x2a7c, 0x1db9, 0x750, 0x1c58, 0x16c5, 0x1cad, 0x0, 0x1);
        gbc.writeMem(0x2a7c, { 0xb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1db9, gbc.sp());
        EXPECT(0x2a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 006F
        gbc.setState(0x5e72, 0x51af, 0x5a70, 0x814c, 0x437e, 0x73e5, 0x1, 0x1);
        gbc.writeMem(0x5e72, { 0xb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x51af, gbc.sp());
        EXPECT(0x5e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0070
        gbc.setState(0x2856, 0x5727, 0x3590, 0x2f57, 0x592f, 0x685f, 0x1, 0x0);
        gbc.writeMem(0x2856, { 0xb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5727, gbc.sp());
        EXPECT(0x2857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0072
        gbc.setState(0xc422, 0x9062, 0xaa40, 0x6cbc, 0xfd0f, 0x4a8b, 0x1, 0x0);
        gbc.writeMem(0xc422, { 0xb });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9062, gbc.sp());
        EXPECT(0xc423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc422));
        // 0B 0073
        gbc.setState(0xed5c, 0xd0f8, 0x3ff0, 0xc08b, 0x19c2, 0xb683, 0x1, 0x0);
        gbc.writeMem(0xed5c, { 0xb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd0f8, gbc.sp());
        EXPECT(0xed5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xed5c));
        // 0B 0074
        gbc.setState(0xbb60, 0x91e, 0x2eb0, 0x3377, 0x6f46, 0xba68, 0x1, 0x1);
        gbc.writeMem(0xbb60, { 0xb });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x91e, gbc.sp());
        EXPECT(0xbb61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbb60));
        // 0B 0075
        gbc.setState(0x9f6f, 0x4303, 0x2c40, 0xa3f8, 0x58b3, 0x6ab5, 0x1, 0x1);
        gbc.writeMem(0x9f6f, { 0xb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4303, gbc.sp());
        EXPECT(0x9f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9f6f));
        // 0B 0076
        gbc.setState(0x5e29, 0x2b26, 0x3db0, 0x9487, 0x4558, 0x72a5, 0x1, 0x0);
        gbc.writeMem(0x5e29, { 0xb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2b26, gbc.sp());
        EXPECT(0x5e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0077
        gbc.setState(0x5fcc, 0x2757, 0xdd60, 0x3fa, 0xec54, 0x1dd, 0x1, 0x1);
        gbc.writeMem(0x5fcc, { 0xb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2757, gbc.sp());
        EXPECT(0x5fcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0078
        gbc.setState(0x4e88, 0xe5b9, 0x1490, 0xf052, 0x554e, 0xd1b2, 0x0, 0x0);
        gbc.writeMem(0x4e88, { 0xb });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe5b9, gbc.sp());
        EXPECT(0x4e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0079
        gbc.setState(0x8735, 0xc9b7, 0x9a50, 0xb6f9, 0xc6ad, 0x5a95, 0x1, 0x1);
        gbc.writeMem(0x8735, { 0xb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc9b7, gbc.sp());
        EXPECT(0x8736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8735));
        // 0B 007A
        gbc.setState(0x8d33, 0x9c03, 0x3350, 0x487, 0x5423, 0x32ac, 0x0, 0x0);
        gbc.writeMem(0x8d33, { 0xb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9c03, gbc.sp());
        EXPECT(0x8d34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8d33));
        // 0B 007B
        gbc.setState(0xe9f2, 0xebc0, 0xf740, 0xc2a6, 0x3728, 0xfc8d, 0x1, 0x0);
        gbc.writeMem(0xe9f2, { 0xb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xebc0, gbc.sp());
        EXPECT(0xe9f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe9f2));
        // 0B 007C
        gbc.setState(0xcbf, 0x9291, 0xae40, 0x6bbf, 0x3d49, 0x685f, 0x1, 0x0);
        gbc.writeMem(0xcbf, { 0xb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9291, gbc.sp());
        EXPECT(0xcc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 007D
        gbc.setState(0x8170, 0x8fc1, 0x9720, 0x21f7, 0x5250, 0x511a, 0x1, 0x0);
        gbc.writeMem(0x8170, { 0xb });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8fc1, gbc.sp());
        EXPECT(0x8171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8170));
        // 0B 007E
        gbc.setState(0x90ef, 0x12c2, 0x2400, 0xc760, 0x4347, 0x1d16, 0x0, 0x0);
        gbc.writeMem(0x90ef, { 0xb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x12c2, gbc.sp());
        EXPECT(0x90f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x90ef));
        // 0B 007F
        gbc.setState(0xb59c, 0x52dc, 0x7530, 0x4ee0, 0xbb79, 0x57de, 0x1, 0x0);
        gbc.writeMem(0xb59c, { 0xb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x52dc, gbc.sp());
        EXPECT(0xb59d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb59c));
        // 0B 0080
        gbc.setState(0xa0be, 0x9444, 0xaed0, 0xfb9d, 0x4796, 0x55c8, 0x1, 0x0);
        gbc.writeMem(0xa0be, { 0xb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9444, gbc.sp());
        EXPECT(0xa0bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa0be));
        // 0B 0081
        gbc.setState(0x9d16, 0x7619, 0x5510, 0xf3c9, 0xb7ab, 0x73d5, 0x1, 0x0);
        gbc.writeMem(0x9d16, { 0xb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7619, gbc.sp());
        EXPECT(0x9d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9d16));
        // 0B 0082
        gbc.setState(0xc53f, 0x7b7a, 0x99f0, 0x3085, 0x5610, 0xf9d4, 0x0, 0x0);
        gbc.writeMem(0xc53f, { 0xb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7b7a, gbc.sp());
        EXPECT(0xc540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc53f));
        // 0B 0083
        gbc.setState(0x99f9, 0xb5ab, 0xa040, 0x437a, 0xd2de, 0x9402, 0x0, 0x1);
        gbc.writeMem(0x99f9, { 0xb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb5ab, gbc.sp());
        EXPECT(0x99fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x99f9));
        // 0B 0084
        gbc.setState(0x3378, 0xc6b8, 0xec20, 0xdb6f, 0x1b6b, 0xded5, 0x0, 0x1);
        gbc.writeMem(0x3378, { 0xb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc6b8, gbc.sp());
        EXPECT(0x3379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0085
        gbc.setState(0xae1b, 0x89f2, 0x8410, 0xaae5, 0xf10b, 0xc5a5, 0x0, 0x1);
        gbc.writeMem(0xae1b, { 0xb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x89f2, gbc.sp());
        EXPECT(0xae1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xae1b));
        // 0B 0086
        gbc.setState(0xd7fb, 0x3221, 0x2780, 0xaa92, 0xb189, 0x2a09, 0x1, 0x1);
        gbc.writeMem(0xd7fb, { 0xb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3221, gbc.sp());
        EXPECT(0xd7fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd7fb));
        // 0B 0087
        gbc.setState(0xb235, 0x4516, 0xe490, 0x13de, 0xada6, 0x1c7c, 0x0, 0x1);
        gbc.writeMem(0xb235, { 0xb });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4516, gbc.sp());
        EXPECT(0xb236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb235));
        // 0B 0088
        gbc.setState(0x8e95, 0x30d1, 0x8c50, 0x3cd3, 0x4adb, 0x6078, 0x1, 0x0);
        gbc.writeMem(0x8e95, { 0xb });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x30d1, gbc.sp());
        EXPECT(0x8e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8e95));
        // 0B 0089
        gbc.setState(0x603, 0xe8ab, 0xf980, 0xabb2, 0x97e, 0xe25d, 0x1, 0x1);
        gbc.writeMem(0x603, { 0xb });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe8ab, gbc.sp());
        EXPECT(0x604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 008A
        gbc.setState(0x55d2, 0x8928, 0x9030, 0x7e64, 0x5767, 0x4bad, 0x1, 0x1);
        gbc.writeMem(0x55d2, { 0xb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8928, gbc.sp());
        EXPECT(0x55d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 008B
        gbc.setState(0x8646, 0x648b, 0xac70, 0x1a05, 0xefb9, 0x3957, 0x1, 0x1);
        gbc.writeMem(0x8646, { 0xb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x648b, gbc.sp());
        EXPECT(0x8647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8646));
        // 0B 008C
        gbc.setState(0x13fa, 0x9070, 0x9950, 0x531c, 0x968a, 0x60c, 0x0, 0x0);
        gbc.writeMem(0x13fa, { 0xb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9070, gbc.sp());
        EXPECT(0x13fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 008D
        gbc.setState(0x9188, 0x35b6, 0xcde0, 0xe1a, 0xd554, 0x7ae8, 0x1, 0x1);
        gbc.writeMem(0x9188, { 0xb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x35b6, gbc.sp());
        EXPECT(0x9189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9188));
        // 0B 008E
        gbc.setState(0x4f81, 0xd79f, 0xab30, 0x7415, 0x3c0c, 0xd2e2, 0x1, 0x0);
        gbc.writeMem(0x4f81, { 0xb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd79f, gbc.sp());
        EXPECT(0x4f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 008F
        gbc.setState(0x1c46, 0x94ad, 0xfae0, 0xd53c, 0x6a06, 0x2d8d, 0x0, 0x1);
        gbc.writeMem(0x1c46, { 0xb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x94ad, gbc.sp());
        EXPECT(0x1c47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0090
        gbc.setState(0xbf12, 0xd283, 0x7320, 0xe0af, 0xac48, 0x4453, 0x0, 0x1);
        gbc.writeMem(0xbf12, { 0xb });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd283, gbc.sp());
        EXPECT(0xbf13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbf12));
        // 0B 0091
        gbc.setState(0x7da1, 0xde02, 0xaf20, 0x6523, 0x3603, 0xd202, 0x0, 0x0);
        gbc.writeMem(0x7da1, { 0xb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xde02, gbc.sp());
        EXPECT(0x7da2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0092
        gbc.setState(0xad6a, 0x82b1, 0x1150, 0x6eed, 0xd25c, 0x92ae, 0x0, 0x1);
        gbc.writeMem(0xad6a, { 0xb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x82b1, gbc.sp());
        EXPECT(0xad6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xad6a));
        // 0B 0093
        gbc.setState(0x372a, 0x330e, 0xc8a0, 0xd85c, 0x525c, 0x316f, 0x1, 0x0);
        gbc.writeMem(0x372a, { 0xb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x330e, gbc.sp());
        EXPECT(0x372b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0094
        gbc.setState(0x6a5d, 0x26bf, 0x40b0, 0x5ab7, 0xe851, 0x631a, 0x0, 0x0);
        gbc.writeMem(0x6a5d, { 0xb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x26bf, gbc.sp());
        EXPECT(0x6a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0095
        gbc.setState(0xdd99, 0x4f9b, 0x820, 0x7cf9, 0x8191, 0x8c17, 0x1, 0x1);
        gbc.writeMem(0xdd99, { 0xb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4f9b, gbc.sp());
        EXPECT(0xdd9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xdd99));
        // 0B 0096
        gbc.setState(0x3ff6, 0x2998, 0x7eb0, 0x6ed2, 0x9c78, 0x93a6, 0x1, 0x0);
        gbc.writeMem(0x3ff6, { 0xb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2998, gbc.sp());
        EXPECT(0x3ff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0097
        gbc.setState(0x157d, 0x4c1a, 0x8950, 0xffd0, 0x23f1, 0x2068, 0x0, 0x0);
        gbc.writeMem(0x157d, { 0xb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4c1a, gbc.sp());
        EXPECT(0x157e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0098
        gbc.setState(0x52a9, 0xdd8a, 0x1a40, 0xbb01, 0x729a, 0xd3ad, 0x1, 0x1);
        gbc.writeMem(0x52a9, { 0xb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xdd8a, gbc.sp());
        EXPECT(0x52aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0099
        gbc.setState(0x6953, 0x4a69, 0x1890, 0x380, 0x9a60, 0x7413, 0x1, 0x1);
        gbc.writeMem(0x6953, { 0xb });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4a69, gbc.sp());
        EXPECT(0x6954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 009A
        gbc.setState(0x713b, 0xd238, 0x8320, 0x6318, 0xf3ea, 0xbc30, 0x1, 0x1);
        gbc.writeMem(0x713b, { 0xb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd238, gbc.sp());
        EXPECT(0x713c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 009B
        gbc.setState(0x8a34, 0x43a2, 0x37e0, 0xa70d, 0x2099, 0xe544, 0x0, 0x1);
        gbc.writeMem(0x8a34, { 0xb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x43a2, gbc.sp());
        EXPECT(0x8a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8a34));
        // 0B 009C
        gbc.setState(0xb015, 0x9032, 0x8740, 0xd311, 0xa513, 0x4edb, 0x1, 0x1);
        gbc.writeMem(0xb015, { 0xb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9032, gbc.sp());
        EXPECT(0xb016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb015));
        // 0B 009D
        gbc.setState(0xd4a4, 0x57e1, 0x46d0, 0x6f38, 0x19d0, 0x5906, 0x0, 0x0);
        gbc.writeMem(0xd4a4, { 0xb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x57e1, gbc.sp());
        EXPECT(0xd4a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd4a4));
        // 0B 009E
        gbc.setState(0xceba, 0x9fa7, 0x6480, 0x3ffc, 0x336f, 0x8506, 0x1, 0x0);
        gbc.writeMem(0xceba, { 0xb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9fa7, gbc.sp());
        EXPECT(0xcebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xceba));
        // 0B 009F
        gbc.setState(0xe7dd, 0x382f, 0xcc80, 0x7f09, 0xc7dc, 0xcdaa, 0x1, 0x1);
        gbc.writeMem(0xe7dd, { 0xb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x382f, gbc.sp());
        EXPECT(0xe7de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe7dd));
        // 0B 00A0
        gbc.setState(0x1aea, 0x1ee9, 0xce50, 0xc4a3, 0xab4, 0xbf8b, 0x0, 0x0);
        gbc.writeMem(0x1aea, { 0xb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1ee9, gbc.sp());
        EXPECT(0x1aeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00A1
        gbc.setState(0x4b39, 0x1a2b, 0x90b0, 0x81ce, 0x5bd, 0x297a, 0x1, 0x1);
        gbc.writeMem(0x4b39, { 0xb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1a2b, gbc.sp());
        EXPECT(0x4b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00A2
        gbc.setState(0x2dc3, 0x9b16, 0xa440, 0x89ce, 0x53b3, 0x7baa, 0x1, 0x1);
        gbc.writeMem(0x2dc3, { 0xb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9b16, gbc.sp());
        EXPECT(0x2dc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00A3
        gbc.setState(0xae11, 0x5a61, 0x62e0, 0x284c, 0xfd2d, 0x3350, 0x1, 0x0);
        gbc.writeMem(0xae11, { 0xb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5a61, gbc.sp());
        EXPECT(0xae12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xae11));
        // 0B 00A4
        gbc.setState(0xc45e, 0x419b, 0xcc90, 0x9e09, 0x6812, 0x8ba3, 0x1, 0x1);
        gbc.writeMem(0xc45e, { 0xb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x419b, gbc.sp());
        EXPECT(0xc45f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc45e));
        // 0B 00A5
        gbc.setState(0xbfdd, 0xe3f5, 0xdc50, 0xe749, 0x3306, 0xdb5d, 0x0, 0x0);
        gbc.writeMem(0xbfdd, { 0xb });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe3f5, gbc.sp());
        EXPECT(0xbfde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbfdd));
        // 0B 00A6
        gbc.setState(0x131, 0x1bb2, 0x3750, 0x322b, 0xd2f1, 0x572a, 0x1, 0x1);
        gbc.writeMem(0x131, { 0xb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1bb2, gbc.sp());
        EXPECT(0x132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00A8
        gbc.setState(0x94b0, 0x6627, 0x1700, 0x9551, 0x3cd2, 0x2111, 0x0, 0x0);
        gbc.writeMem(0x94b0, { 0xb });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6627, gbc.sp());
        EXPECT(0x94b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x94b0));
        // 0B 00A9
        gbc.setState(0xd90c, 0x73ab, 0xea20, 0xbce8, 0xe0d9, 0x5d1, 0x0, 0x1);
        gbc.writeMem(0xd90c, { 0xb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x73ab, gbc.sp());
        EXPECT(0xd90d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd90c));
        // 0B 00AA
        gbc.setState(0x7b53, 0x2a7a, 0x8a20, 0xce17, 0xf26f, 0xf052, 0x0, 0x1);
        gbc.writeMem(0x7b53, { 0xb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2a7a, gbc.sp());
        EXPECT(0x7b54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00AB
        gbc.setState(0xdc67, 0x52c, 0xcc30, 0xe5ca, 0x699b, 0x9809, 0x0, 0x0);
        gbc.writeMem(0xdc67, { 0xb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x52c, gbc.sp());
        EXPECT(0xdc68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xdc67));
        // 0B 00AD
        gbc.setState(0x8336, 0xbc23, 0x7540, 0xf34c, 0x4502, 0x21f8, 0x0, 0x0);
        gbc.writeMem(0x8336, { 0xb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbc23, gbc.sp());
        EXPECT(0x8337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8336));
        // 0B 00AE
        gbc.setState(0x924b, 0x1498, 0xfe90, 0x2079, 0x727b, 0xc134, 0x1, 0x1);
        gbc.writeMem(0x924b, { 0xb });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1498, gbc.sp());
        EXPECT(0x924c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x924b));
        // 0B 00AF
        gbc.setState(0xa518, 0xf065, 0xf0, 0xe223, 0x6fa4, 0x8989, 0x1, 0x1);
        gbc.writeMem(0xa518, { 0xb });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf065, gbc.sp());
        EXPECT(0xa519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa518));
        // 0B 00B0
        gbc.setState(0xa4e3, 0xc3b5, 0xd8b0, 0x9420, 0xf4bd, 0x2459, 0x0, 0x1);
        gbc.writeMem(0xa4e3, { 0xb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc3b5, gbc.sp());
        EXPECT(0xa4e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa4e3));
        // 0B 00B1
        gbc.setState(0x84fd, 0x622b, 0x7800, 0xa4b9, 0x289f, 0x89bc, 0x0, 0x1);
        gbc.writeMem(0x84fd, { 0xb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x622b, gbc.sp());
        EXPECT(0x84fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x84fd));
        // 0B 00B2
        gbc.setState(0xd331, 0x2c48, 0x2710, 0xc47d, 0x4eb, 0xfb6c, 0x0, 0x1);
        gbc.writeMem(0xd331, { 0xb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2c48, gbc.sp());
        EXPECT(0xd332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd331));
        // 0B 00B3
        gbc.setState(0x8be5, 0xfcde, 0x1940, 0x90ed, 0x2753, 0x6f50, 0x0, 0x1);
        gbc.writeMem(0x8be5, { 0xb });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xfcde, gbc.sp());
        EXPECT(0x8be6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8be5));
        // 0B 00B4
        gbc.setState(0xdc9d, 0x93c6, 0x3660, 0x9037, 0xb4d7, 0x6043, 0x0, 0x0);
        gbc.writeMem(0xdc9d, { 0xb });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x93c6, gbc.sp());
        EXPECT(0xdc9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xdc9d));
        // 0B 00B5
        gbc.setState(0x5a2d, 0x4b0d, 0x5620, 0x9f3, 0x4bc0, 0x6334, 0x0, 0x1);
        gbc.writeMem(0x5a2d, { 0xb });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4b0d, gbc.sp());
        EXPECT(0x5a2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00B6
        gbc.setState(0x54a0, 0x588, 0xc330, 0xc7f9, 0x2277, 0x1d1a, 0x0, 0x0);
        gbc.writeMem(0x54a0, { 0xb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x588, gbc.sp());
        EXPECT(0x54a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00B7
        gbc.setState(0x8646, 0xc75a, 0x5bf0, 0x9560, 0x1e34, 0x5c4e, 0x1, 0x0);
        gbc.writeMem(0x8646, { 0xb });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc75a, gbc.sp());
        EXPECT(0x8647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8646));
        // 0B 00B8
        gbc.setState(0xd814, 0x9a12, 0x2690, 0xea8d, 0xbd3b, 0x1b26, 0x0, 0x0);
        gbc.writeMem(0xd814, { 0xb });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9a12, gbc.sp());
        EXPECT(0xd815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd814));
        // 0B 00B9
        gbc.setState(0x7346, 0xd7b, 0x27e0, 0x869b, 0xb736, 0x597e, 0x0, 0x1);
        gbc.writeMem(0x7346, { 0xb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd7b, gbc.sp());
        EXPECT(0x7347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00BA
        gbc.setState(0xa9fd, 0x5c7, 0x5320, 0xc95b, 0x3800, 0xc408, 0x0, 0x0);
        gbc.writeMem(0xa9fd, { 0xb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5c7, gbc.sp());
        EXPECT(0xa9fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa9fd));
        // 0B 00BC
        gbc.setState(0xef2d, 0x273c, 0x93c0, 0xfbaa, 0xca9e, 0xa845, 0x1, 0x0);
        gbc.writeMem(0xef2d, { 0xb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x273c, gbc.sp());
        EXPECT(0xef2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xef2d));
        // 0B 00BD
        gbc.setState(0xb9b5, 0x4df0, 0x8220, 0x406d, 0x49a0, 0xd2cb, 0x1, 0x0);
        gbc.writeMem(0xb9b5, { 0xb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4df0, gbc.sp());
        EXPECT(0xb9b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb9b5));
        // 0B 00BF
        gbc.setState(0x4db9, 0xc103, 0x8c60, 0x2bf5, 0xc718, 0x9294, 0x1, 0x1);
        gbc.writeMem(0x4db9, { 0xb });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc103, gbc.sp());
        EXPECT(0x4dba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00C0
        gbc.setState(0x719f, 0x38fa, 0xa830, 0x2f4d, 0xe866, 0xbffe, 0x1, 0x0);
        gbc.writeMem(0x719f, { 0xb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x38fa, gbc.sp());
        EXPECT(0x71a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00C1
        gbc.setState(0x1641, 0xb13, 0x6940, 0xac9f, 0x8bbc, 0x3722, 0x1, 0x0);
        gbc.writeMem(0x1641, { 0xb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb13, gbc.sp());
        EXPECT(0x1642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00C2
        gbc.setState(0x3776, 0x6de9, 0xa540, 0x4ef6, 0x99b6, 0xffe4, 0x1, 0x1);
        gbc.writeMem(0x3776, { 0xb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6de9, gbc.sp());
        EXPECT(0x3777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00C3
        gbc.setState(0xe3fc, 0xfae1, 0x8720, 0x4906, 0x2608, 0x9ac2, 0x1, 0x1);
        gbc.writeMem(0xe3fc, { 0xb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfae1, gbc.sp());
        EXPECT(0xe3fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe3fc));
        // 0B 00C4
        gbc.setState(0x1cf5, 0x1ae3, 0xc2b0, 0xaac5, 0x6471, 0x92c7, 0x0, 0x0);
        gbc.writeMem(0x1cf5, { 0xb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1ae3, gbc.sp());
        EXPECT(0x1cf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00C5
        gbc.setState(0xc1f, 0xa513, 0x6150, 0xa626, 0x7f73, 0xf567, 0x0, 0x0);
        gbc.writeMem(0xc1f, { 0xb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa513, gbc.sp());
        EXPECT(0xc20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00C6
        gbc.setState(0x9a5f, 0x4663, 0x4150, 0x9579, 0xf06d, 0xf65, 0x1, 0x0);
        gbc.writeMem(0x9a5f, { 0xb });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4663, gbc.sp());
        EXPECT(0x9a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9a5f));
        // 0B 00C7
        gbc.setState(0x8a01, 0xf236, 0x4650, 0x5c3c, 0x7e19, 0xdd09, 0x1, 0x0);
        gbc.writeMem(0x8a01, { 0xb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf236, gbc.sp());
        EXPECT(0x8a02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8a01));
        // 0B 00C8
        gbc.setState(0x5b87, 0x452d, 0x3450, 0xf0e7, 0x34cb, 0xe8bf, 0x1, 0x1);
        gbc.writeMem(0x5b87, { 0xb });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x452d, gbc.sp());
        EXPECT(0x5b88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00C9
        gbc.setState(0x1d2, 0xc227, 0x4720, 0xad16, 0xa995, 0xf145, 0x1, 0x1);
        gbc.writeMem(0x1d2, { 0xb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc227, gbc.sp());
        EXPECT(0x1d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00CA
        gbc.setState(0x4fe5, 0xfdf1, 0x9a60, 0x3dda, 0x827d, 0xf787, 0x0, 0x1);
        gbc.writeMem(0x4fe5, { 0xb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfdf1, gbc.sp());
        EXPECT(0x4fe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00CB
        gbc.setState(0x3606, 0x59ef, 0x3ca0, 0x4071, 0x7f84, 0xd196, 0x1, 0x0);
        gbc.writeMem(0x3606, { 0xb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x59ef, gbc.sp());
        EXPECT(0x3607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00CC
        gbc.setState(0x6bd3, 0x5d33, 0x3e40, 0xb4b, 0xc2b8, 0x43a1, 0x1, 0x1);
        gbc.writeMem(0x6bd3, { 0xb });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5d33, gbc.sp());
        EXPECT(0x6bd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00CD
        gbc.setState(0x17f2, 0x4bb1, 0x96c0, 0x917a, 0x64e9, 0x25dd, 0x0, 0x1);
        gbc.writeMem(0x17f2, { 0xb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4bb1, gbc.sp());
        EXPECT(0x17f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00CE
        gbc.setState(0x46, 0xc3ea, 0x7340, 0x5a1e, 0xf2ed, 0xf8be, 0x0, 0x1);
        gbc.writeMem(0x46, { 0xb });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc3ea, gbc.sp());
        EXPECT(0x47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00CF
        gbc.setState(0x3678, 0x77d9, 0xbec0, 0xb75c, 0x5546, 0xed01, 0x1, 0x0);
        gbc.writeMem(0x3678, { 0xb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x77d9, gbc.sp());
        EXPECT(0x3679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00D0
        gbc.setState(0xdf20, 0x254d, 0xeaf0, 0x7679, 0xab6, 0x5260, 0x0, 0x0);
        gbc.writeMem(0xdf20, { 0xb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x254d, gbc.sp());
        EXPECT(0xdf21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xdf20));
        // 0B 00D1
        gbc.setState(0xd7ee, 0x782a, 0xf5e0, 0x3f99, 0xdf6d, 0x2ce7, 0x0, 0x1);
        gbc.writeMem(0xd7ee, { 0xb });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x782a, gbc.sp());
        EXPECT(0xd7ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd7ee));
        // 0B 00D3
        gbc.setState(0x3500, 0x2011, 0xa5f0, 0xcdf3, 0xb574, 0xe017, 0x1, 0x0);
        gbc.writeMem(0x3500, { 0xb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2011, gbc.sp());
        EXPECT(0x3501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00D4
        gbc.setState(0x836, 0x8f39, 0xe310, 0xbcf7, 0x8de4, 0xd0e5, 0x0, 0x1);
        gbc.writeMem(0x836, { 0xb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8f39, gbc.sp());
        EXPECT(0x837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00D5
        gbc.setState(0x5d8c, 0x416e, 0x5290, 0xb7bb, 0x3ada, 0xbb11, 0x0, 0x0);
        gbc.writeMem(0x5d8c, { 0xb });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x416e, gbc.sp());
        EXPECT(0x5d8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00D6
        gbc.setState(0x1767, 0x34a8, 0xe220, 0x6295, 0x3fe1, 0x54dd, 0x0, 0x1);
        gbc.writeMem(0x1767, { 0xb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x34a8, gbc.sp());
        EXPECT(0x1768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00D7
        gbc.setState(0x5dbe, 0x119f, 0xa130, 0xbea9, 0xc351, 0x17d5, 0x0, 0x1);
        gbc.writeMem(0x5dbe, { 0xb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x119f, gbc.sp());
        EXPECT(0x5dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00D9
        gbc.setState(0x1b39, 0xf50f, 0x410, 0x7715, 0x8446, 0xbeba, 0x1, 0x1);
        gbc.writeMem(0x1b39, { 0xb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf50f, gbc.sp());
        EXPECT(0x1b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00DA
        gbc.setState(0xb07, 0xa1e7, 0xc080, 0x6fd2, 0x6ea, 0xaf15, 0x1, 0x0);
        gbc.writeMem(0xb07, { 0xb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa1e7, gbc.sp());
        EXPECT(0xb08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00DB
        gbc.setState(0xa47e, 0x15c1, 0x7d70, 0x2340, 0xed47, 0x1ef0, 0x1, 0x0);
        gbc.writeMem(0xa47e, { 0xb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x15c1, gbc.sp());
        EXPECT(0xa47f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa47e));
        // 0B 00DC
        gbc.setState(0x8257, 0x8e0d, 0xe9c0, 0x1c14, 0x4a98, 0xac9, 0x0, 0x0);
        gbc.writeMem(0x8257, { 0xb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8e0d, gbc.sp());
        EXPECT(0x8258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8257));
        // 0B 00DD
        gbc.setState(0xb9de, 0x262e, 0xcf00, 0xdbea, 0x4f9, 0xda73, 0x1, 0x1);
        gbc.writeMem(0xb9de, { 0xb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x262e, gbc.sp());
        EXPECT(0xb9df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb9de));
        // 0B 00DE
        gbc.setState(0xd703, 0x3188, 0xf0a0, 0xa540, 0x7396, 0x1bc, 0x0, 0x0);
        gbc.writeMem(0xd703, { 0xb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3188, gbc.sp());
        EXPECT(0xd704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd703));
        // 0B 00DF
        gbc.setState(0xdb7, 0xb821, 0x63f0, 0x1bb6, 0x174d, 0x3bdf, 0x0, 0x1);
        gbc.writeMem(0xdb7, { 0xb });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb821, gbc.sp());
        EXPECT(0xdb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00E0
        gbc.setState(0xb737, 0x6f5c, 0xc710, 0x1991, 0x841, 0xa1d6, 0x1, 0x0);
        gbc.writeMem(0xb737, { 0xb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6f5c, gbc.sp());
        EXPECT(0xb738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb737));
        // 0B 00E1
        gbc.setState(0x466a, 0xe078, 0xb10, 0xce5, 0x28d5, 0x78bb, 0x0, 0x1);
        gbc.writeMem(0x466a, { 0xb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe078, gbc.sp());
        EXPECT(0x466b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00E2
        gbc.setState(0xa995, 0x2751, 0x6130, 0xdddf, 0xdb1e, 0xb31, 0x0, 0x0);
        gbc.writeMem(0xa995, { 0xb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2751, gbc.sp());
        EXPECT(0xa996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa995));
        // 0B 00E3
        gbc.setState(0xa3d1, 0xd990, 0x1b80, 0xdcf4, 0xbc94, 0xcca3, 0x0, 0x1);
        gbc.writeMem(0xa3d1, { 0xb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd990, gbc.sp());
        EXPECT(0xa3d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa3d1));
        // 0B 00E4
        gbc.setState(0x58e4, 0xe786, 0x51f0, 0x915d, 0xa235, 0xf92b, 0x0, 0x1);
        gbc.writeMem(0x58e4, { 0xb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe786, gbc.sp());
        EXPECT(0x58e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00E5
        gbc.setState(0x11ba, 0x532d, 0x2100, 0xf9d8, 0x5166, 0x8fce, 0x0, 0x0);
        gbc.writeMem(0x11ba, { 0xb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x532d, gbc.sp());
        EXPECT(0x11bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00E6
        gbc.setState(0x807a, 0x8aa7, 0xc380, 0x3a35, 0x2331, 0x66bf, 0x1, 0x1);
        gbc.writeMem(0x807a, { 0xb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8aa7, gbc.sp());
        EXPECT(0x807b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x807a));
        // 0B 00E7
        gbc.setState(0x7195, 0x6f92, 0xc150, 0x60fd, 0xb94c, 0x4da, 0x0, 0x0);
        gbc.writeMem(0x7195, { 0xb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6f92, gbc.sp());
        EXPECT(0x7196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00E8
        gbc.setState(0xa676, 0x5a43, 0xa1b0, 0x784, 0x373f, 0x5125, 0x0, 0x0);
        gbc.writeMem(0xa676, { 0xb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5a43, gbc.sp());
        EXPECT(0xa677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa676));
        // 0B 00E9
        gbc.setState(0x1c52, 0x25e9, 0xa720, 0x5d29, 0xe49b, 0x7615, 0x0, 0x0);
        gbc.writeMem(0x1c52, { 0xb });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x25e9, gbc.sp());
        EXPECT(0x1c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00EA
        gbc.setState(0xb5c, 0x5ddd, 0x5280, 0x82c8, 0x7962, 0x19a6, 0x0, 0x1);
        gbc.writeMem(0xb5c, { 0xb });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5ddd, gbc.sp());
        EXPECT(0xb5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00EB
        gbc.setState(0xea40, 0xbbb, 0x7cb0, 0xfe55, 0x4286, 0xf131, 0x1, 0x1);
        gbc.writeMem(0xea40, { 0xb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbbb, gbc.sp());
        EXPECT(0xea41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xea40));
        // 0B 00EC
        gbc.setState(0x8e03, 0x7cbf, 0x8750, 0x68af, 0xbeeb, 0x6e46, 0x1, 0x1);
        gbc.writeMem(0x8e03, { 0xb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7cbf, gbc.sp());
        EXPECT(0x8e04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8e03));
        // 0B 00ED
        gbc.setState(0xd484, 0xc42f, 0x3e20, 0x603, 0xcfe0, 0xa89e, 0x0, 0x0);
        gbc.writeMem(0xd484, { 0xb });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc42f, gbc.sp());
        EXPECT(0xd485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd484));
        // 0B 00EE
        gbc.setState(0x4037, 0x2989, 0xba70, 0xe292, 0x9603, 0x29b8, 0x0, 0x0);
        gbc.writeMem(0x4037, { 0xb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2989, gbc.sp());
        EXPECT(0x4038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00EF
        gbc.setState(0x332b, 0xe5bf, 0x8730, 0x3105, 0x37d3, 0xd0ba, 0x0, 0x1);
        gbc.writeMem(0x332b, { 0xb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe5bf, gbc.sp());
        EXPECT(0x332c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00F0
        gbc.setState(0x348e, 0x3737, 0xa690, 0x7ad0, 0xe328, 0xef02, 0x1, 0x0);
        gbc.writeMem(0x348e, { 0xb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3737, gbc.sp());
        EXPECT(0x348f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00F1
        gbc.setState(0xb01a, 0x1f41, 0x5750, 0xab12, 0x1d46, 0x7110, 0x1, 0x0);
        gbc.writeMem(0xb01a, { 0xb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1f41, gbc.sp());
        EXPECT(0xb01b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb01a));
        // 0B 00F2
        gbc.setState(0x6583, 0xe3db, 0xc900, 0x87f3, 0xd630, 0x2b8e, 0x0, 0x0);
        gbc.writeMem(0x6583, { 0xb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe3db, gbc.sp());
        EXPECT(0x6584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00F3
        gbc.setState(0x6dd4, 0x12e4, 0xf3e0, 0x2121, 0x8189, 0x559c, 0x1, 0x1);
        gbc.writeMem(0x6dd4, { 0xb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x12e4, gbc.sp());
        EXPECT(0x6dd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00F4
        gbc.setState(0x6fde, 0xaf2e, 0xdad0, 0xfcf3, 0x26da, 0x3600, 0x1, 0x1);
        gbc.writeMem(0x6fde, { 0xb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xaf2e, gbc.sp());
        EXPECT(0x6fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00F5
        gbc.setState(0xb135, 0xd055, 0xbfa0, 0x8965, 0xcdc2, 0x8255, 0x0, 0x0);
        gbc.writeMem(0xb135, { 0xb });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd055, gbc.sp());
        EXPECT(0xb136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb135));
        // 0B 00F6
        gbc.setState(0xdf04, 0xc5e, 0x5860, 0xc2d9, 0x5f48, 0x79d0, 0x0, 0x1);
        gbc.writeMem(0xdf04, { 0xb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc5e, gbc.sp());
        EXPECT(0xdf05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xdf04));
        // 0B 00F7
        gbc.setState(0x3ea4, 0x8873, 0xbea0, 0xb949, 0xb3eb, 0x35c7, 0x1, 0x0);
        gbc.writeMem(0x3ea4, { 0xb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8873, gbc.sp());
        EXPECT(0x3ea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00F8
        gbc.setState(0x8cd4, 0xcb3f, 0xc360, 0xcdf2, 0xa14, 0xa6c7, 0x0, 0x0);
        gbc.writeMem(0x8cd4, { 0xb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcb3f, gbc.sp());
        EXPECT(0x8cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8cd4));
        // 0B 00F9
        gbc.setState(0x5511, 0xc53c, 0x42b0, 0x2b9f, 0x25aa, 0x5999, 0x1, 0x0);
        gbc.writeMem(0x5511, { 0xb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc53c, gbc.sp());
        EXPECT(0x5512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00FA
        gbc.setState(0x6417, 0x9b19, 0x65d0, 0x9c57, 0x8e90, 0xdd1c, 0x0, 0x1);
        gbc.writeMem(0x6417, { 0xb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9b19, gbc.sp());
        EXPECT(0x6418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 00FB
        gbc.setState(0xa0c7, 0xbd9c, 0x630, 0xcc08, 0x45b9, 0x2607, 0x1, 0x1);
        gbc.writeMem(0xa0c7, { 0xb });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbd9c, gbc.sp());
        EXPECT(0xa0c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa0c7));
        // 0B 00FE
        gbc.setState(0x4be9, 0x76bb, 0x8e40, 0x2675, 0x7dfb, 0x2969, 0x1, 0x0);
        gbc.writeMem(0x4be9, { 0xb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x76bb, gbc.sp());
        EXPECT(0x4bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 00FF
        gbc.setState(0x15ce, 0xf741, 0xde50, 0xc9d2, 0x1be8, 0x659, 0x0, 0x0);
        gbc.writeMem(0x15ce, { 0xb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf741, gbc.sp());
        EXPECT(0x15cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0100
        gbc.setState(0x941f, 0x134a, 0xc9d0, 0x231, 0x7c3e, 0x3a9a, 0x1, 0x1);
        gbc.writeMem(0x941f, { 0xb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x134a, gbc.sp());
        EXPECT(0x9420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x941f));
        // 0B 0101
        gbc.setState(0xdda9, 0xffa9, 0xe000, 0x680e, 0xff0d, 0xd7d6, 0x1, 0x0);
        gbc.writeMem(0xdda9, { 0xb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xffa9, gbc.sp());
        EXPECT(0xddaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xdda9));
        // 0B 0102
        gbc.setState(0xd5ac, 0x6163, 0x39c0, 0x9d37, 0x6fa0, 0x1364, 0x1, 0x1);
        gbc.writeMem(0xd5ac, { 0xb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6163, gbc.sp());
        EXPECT(0xd5ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd5ac));
        // 0B 0103
        gbc.setState(0xa739, 0xa19f, 0xf690, 0xf23b, 0x31d5, 0x27, 0x0, 0x1);
        gbc.writeMem(0xa739, { 0xb });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa19f, gbc.sp());
        EXPECT(0xa73a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa739));
        // 0B 0104
        gbc.setState(0x9071, 0x7f68, 0x5130, 0x2445, 0xedb9, 0xaaa5, 0x1, 0x1);
        gbc.writeMem(0x9071, { 0xb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7f68, gbc.sp());
        EXPECT(0x9072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9071));
        // 0B 0105
        gbc.setState(0x4420, 0x15c3, 0xbca0, 0x9407, 0xae38, 0x41da, 0x1, 0x0);
        gbc.writeMem(0x4420, { 0xb });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x15c3, gbc.sp());
        EXPECT(0x4421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0106
        gbc.setState(0xb8d8, 0xa9df, 0x40c0, 0xd570, 0x574a, 0x141f, 0x1, 0x1);
        gbc.writeMem(0xb8d8, { 0xb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa9df, gbc.sp());
        EXPECT(0xb8d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb8d8));
        // 0B 0107
        gbc.setState(0xe16e, 0x5fcc, 0xe180, 0x4cfe, 0x2cad, 0xc1f0, 0x1, 0x1);
        gbc.writeMem(0xe16e, { 0xb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5fcc, gbc.sp());
        EXPECT(0xe16f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe16e));
        // 0B 0108
        gbc.setState(0x78a3, 0xf9d5, 0x15e0, 0x38f7, 0xc431, 0x17b6, 0x1, 0x1);
        gbc.writeMem(0x78a3, { 0xb });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf9d5, gbc.sp());
        EXPECT(0x78a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0109
        gbc.setState(0x7236, 0x21df, 0x1860, 0x50c8, 0x9a75, 0xde63, 0x0, 0x0);
        gbc.writeMem(0x7236, { 0xb });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x21df, gbc.sp());
        EXPECT(0x7237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 010A
        gbc.setState(0x65d1, 0x448b, 0x5c20, 0xdbc1, 0x92e0, 0x478a, 0x0, 0x1);
        gbc.writeMem(0x65d1, { 0xb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x448b, gbc.sp());
        EXPECT(0x65d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 010B
        gbc.setState(0x2d16, 0x478a, 0xf7b0, 0x36e3, 0xe76f, 0x4719, 0x1, 0x0);
        gbc.writeMem(0x2d16, { 0xb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x478a, gbc.sp());
        EXPECT(0x2d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 010C
        gbc.setState(0x171d, 0x9bbb, 0x99f0, 0xac31, 0x55e6, 0x52fe, 0x0, 0x0);
        gbc.writeMem(0x171d, { 0xb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9bbb, gbc.sp());
        EXPECT(0x171e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 010D
        gbc.setState(0x29b9, 0xc99e, 0xf150, 0xf8f6, 0x4550, 0x6128, 0x1, 0x0);
        gbc.writeMem(0x29b9, { 0xb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc99e, gbc.sp());
        EXPECT(0x29ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 010E
        gbc.setState(0xa41c, 0x1c84, 0x7840, 0xa250, 0xe100, 0x98f, 0x1, 0x0);
        gbc.writeMem(0xa41c, { 0xb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1c84, gbc.sp());
        EXPECT(0xa41d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa41c));
        // 0B 010F
        gbc.setState(0x5b4a, 0x167e, 0xb140, 0x11c1, 0xdb61, 0x5c71, 0x0, 0x1);
        gbc.writeMem(0x5b4a, { 0xb });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x167e, gbc.sp());
        EXPECT(0x5b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0110
        gbc.setState(0x1d7, 0x68a, 0xa360, 0x9143, 0xb824, 0xe4ab, 0x0, 0x0);
        gbc.writeMem(0x1d7, { 0xb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x68a, gbc.sp());
        EXPECT(0x1d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0111
        gbc.setState(0x36a6, 0xbddf, 0x8190, 0xbee6, 0x8167, 0x98a4, 0x1, 0x0);
        gbc.writeMem(0x36a6, { 0xb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xbddf, gbc.sp());
        EXPECT(0x36a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0112
        gbc.setState(0xc392, 0x7a3b, 0x9fc0, 0x323e, 0x58db, 0xe63f, 0x1, 0x0);
        gbc.writeMem(0xc392, { 0xb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7a3b, gbc.sp());
        EXPECT(0xc393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc392));
        // 0B 0113
        gbc.setState(0x65d8, 0xdbea, 0x5e0, 0xa4f8, 0x7804, 0xc034, 0x1, 0x1);
        gbc.writeMem(0x65d8, { 0xb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xdbea, gbc.sp());
        EXPECT(0x65d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0115
        gbc.setState(0x9b2d, 0x83c5, 0x2fb0, 0x1cf3, 0x7cdc, 0x3dde, 0x1, 0x1);
        gbc.writeMem(0x9b2d, { 0xb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x83c5, gbc.sp());
        EXPECT(0x9b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9b2d));
        // 0B 0116
        gbc.setState(0x74ff, 0x4054, 0xb40, 0x1ad0, 0xef0e, 0xd64d, 0x1, 0x1);
        gbc.writeMem(0x74ff, { 0xb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4054, gbc.sp());
        EXPECT(0x7500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0117
        gbc.setState(0xc018, 0x8911, 0x92f0, 0xd9be, 0xf8e, 0x4959, 0x1, 0x1);
        gbc.writeMem(0xc018, { 0xb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8911, gbc.sp());
        EXPECT(0xc019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc018));
        // 0B 0118
        gbc.setState(0x667e, 0x6dcd, 0x4250, 0x2369, 0xd47a, 0x805, 0x1, 0x1);
        gbc.writeMem(0x667e, { 0xb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6dcd, gbc.sp());
        EXPECT(0x667f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0119
        gbc.setState(0x716e, 0x1c3, 0x3dd0, 0xc1a6, 0x8a0a, 0x3ae9, 0x0, 0x0);
        gbc.writeMem(0x716e, { 0xb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1c3, gbc.sp());
        EXPECT(0x716f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 011A
        gbc.setState(0x8bd7, 0x71fa, 0x5e40, 0xd9ad, 0xaf4c, 0x1b52, 0x0, 0x1);
        gbc.writeMem(0x8bd7, { 0xb });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x71fa, gbc.sp());
        EXPECT(0x8bd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8bd7));
        // 0B 011B
        gbc.setState(0x5d86, 0x8f46, 0x6bb0, 0xa67d, 0xfeca, 0xd24b, 0x1, 0x0);
        gbc.writeMem(0x5d86, { 0xb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8f46, gbc.sp());
        EXPECT(0x5d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 011C
        gbc.setState(0x7f9a, 0x97fc, 0x4da0, 0xc2cb, 0xe7ce, 0xa9c8, 0x0, 0x1);
        gbc.writeMem(0x7f9a, { 0xb });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x97fc, gbc.sp());
        EXPECT(0x7f9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 011D
        gbc.setState(0x2eaa, 0x45bc, 0x3cd0, 0x4611, 0x7450, 0x8f15, 0x1, 0x0);
        gbc.writeMem(0x2eaa, { 0xb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x45bc, gbc.sp());
        EXPECT(0x2eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 011E
        gbc.setState(0x6f0c, 0x2914, 0x330, 0x631c, 0x6509, 0xf768, 0x1, 0x0);
        gbc.writeMem(0x6f0c, { 0xb });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2914, gbc.sp());
        EXPECT(0x6f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0120
        gbc.setState(0x624, 0x1f12, 0x48c0, 0x41e2, 0xb917, 0x5b00, 0x0, 0x0);
        gbc.writeMem(0x624, { 0xb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1f12, gbc.sp());
        EXPECT(0x625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0121
        gbc.setState(0xdf19, 0x7173, 0x3bb0, 0xc913, 0xcac1, 0xd85f, 0x1, 0x1);
        gbc.writeMem(0xdf19, { 0xb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7173, gbc.sp());
        EXPECT(0xdf1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xdf19));
        // 0B 0122
        gbc.setState(0xaf7a, 0x3b8, 0xbdf0, 0x3198, 0xa9a5, 0xc0e3, 0x1, 0x0);
        gbc.writeMem(0xaf7a, { 0xb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3b8, gbc.sp());
        EXPECT(0xaf7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xaf7a));
        // 0B 0123
        gbc.setState(0x3f91, 0xea7f, 0xce40, 0xf5bb, 0x7d3a, 0x8e90, 0x0, 0x0);
        gbc.writeMem(0x3f91, { 0xb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xea7f, gbc.sp());
        EXPECT(0x3f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0124
        gbc.setState(0x7464, 0x950b, 0x810, 0x15ca, 0x80aa, 0x36bb, 0x0, 0x1);
        gbc.writeMem(0x7464, { 0xb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x950b, gbc.sp());
        EXPECT(0x7465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0125
        gbc.setState(0x5995, 0x60ac, 0xcc00, 0x8868, 0x992b, 0x1c8a, 0x0, 0x1);
        gbc.writeMem(0x5995, { 0xb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x60ac, gbc.sp());
        EXPECT(0x5996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0126
        gbc.setState(0x461, 0xe991, 0xac30, 0x1266, 0xe387, 0x1fe9, 0x1, 0x0);
        gbc.writeMem(0x461, { 0xb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe991, gbc.sp());
        EXPECT(0x462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0127
        gbc.setState(0x4f62, 0xfca7, 0xdaf0, 0xc4ee, 0xe642, 0x19d1, 0x1, 0x1);
        gbc.writeMem(0x4f62, { 0xb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xfca7, gbc.sp());
        EXPECT(0x4f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0128
        gbc.setState(0x998c, 0x4545, 0x8140, 0x76b3, 0xc05d, 0x3eda, 0x1, 0x1);
        gbc.writeMem(0x998c, { 0xb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4545, gbc.sp());
        EXPECT(0x998d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x998c));
        // 0B 0129
        gbc.setState(0x8a52, 0xd36b, 0xe7f0, 0x674b, 0x65ee, 0xfb82, 0x0, 0x1);
        gbc.writeMem(0x8a52, { 0xb });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd36b, gbc.sp());
        EXPECT(0x8a53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8a52));
        // 0B 012A
        gbc.setState(0x238c, 0xa4ab, 0xdf40, 0x3e7f, 0xd1fc, 0xce2b, 0x0, 0x1);
        gbc.writeMem(0x238c, { 0xb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa4ab, gbc.sp());
        EXPECT(0x238d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 012B
        gbc.setState(0x5ad1, 0xde5c, 0xcef0, 0x2157, 0x572c, 0x39fd, 0x1, 0x0);
        gbc.writeMem(0x5ad1, { 0xb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xde5c, gbc.sp());
        EXPECT(0x5ad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 012C
        gbc.setState(0x222f, 0x40ba, 0x2130, 0xa1a5, 0xe54f, 0x65d1, 0x1, 0x0);
        gbc.writeMem(0x222f, { 0xb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x40ba, gbc.sp());
        EXPECT(0x2230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 012D
        gbc.setState(0x9c25, 0xe41, 0xa1e0, 0x150e, 0x1366, 0xe97a, 0x0, 0x1);
        gbc.writeMem(0x9c25, { 0xb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe41, gbc.sp());
        EXPECT(0x9c26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9c25));
        // 0B 012E
        gbc.setState(0x225e, 0xae0a, 0xd440, 0x272d, 0x5607, 0xb55a, 0x1, 0x1);
        gbc.writeMem(0x225e, { 0xb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xae0a, gbc.sp());
        EXPECT(0x225f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 012F
        gbc.setState(0xd6a, 0x2f1b, 0x2bc0, 0x64bc, 0x283d, 0x57b1, 0x0, 0x0);
        gbc.writeMem(0xd6a, { 0xb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2f1b, gbc.sp());
        EXPECT(0xd6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0130
        gbc.setState(0xd24d, 0x2c8a, 0x43b0, 0x1014, 0xfd8, 0x886b, 0x1, 0x1);
        gbc.writeMem(0xd24d, { 0xb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2c8a, gbc.sp());
        EXPECT(0xd24e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd24d));
        // 0B 0131
        gbc.setState(0x2f75, 0x64d1, 0x5cf0, 0x1a1d, 0xe7f6, 0xeff1, 0x0, 0x1);
        gbc.writeMem(0x2f75, { 0xb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x64d1, gbc.sp());
        EXPECT(0x2f76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0132
        gbc.setState(0xbbd8, 0x780b, 0x6860, 0x2426, 0x649a, 0xd5f9, 0x1, 0x1);
        gbc.writeMem(0xbbd8, { 0xb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x780b, gbc.sp());
        EXPECT(0xbbd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbbd8));
        // 0B 0133
        gbc.setState(0xd3ba, 0x12e2, 0x2d30, 0x90bb, 0x1b79, 0x26a2, 0x1, 0x1);
        gbc.writeMem(0xd3ba, { 0xb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x12e2, gbc.sp());
        EXPECT(0xd3bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd3ba));
        // 0B 0134
        gbc.setState(0xef23, 0x1736, 0xf6e0, 0xd205, 0xfa23, 0xf149, 0x0, 0x0);
        gbc.writeMem(0xef23, { 0xb });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1736, gbc.sp());
        EXPECT(0xef24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xef23));
        // 0B 0136
        gbc.setState(0x9519, 0x3c43, 0xf90, 0x2798, 0xd4f1, 0x9a0d, 0x1, 0x0);
        gbc.writeMem(0x9519, { 0xb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3c43, gbc.sp());
        EXPECT(0x951a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9519));
        // 0B 0137
        gbc.setState(0x6a05, 0xa4d8, 0x190, 0xc235, 0xe4d8, 0x917b, 0x1, 0x0);
        gbc.writeMem(0x6a05, { 0xb });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa4d8, gbc.sp());
        EXPECT(0x6a06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0138
        gbc.setState(0xedff, 0x482e, 0x2d90, 0xe4, 0x5b5d, 0xc2ad, 0x1, 0x1);
        gbc.writeMem(0xedff, { 0xb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x482e, gbc.sp());
        EXPECT(0xee00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xedff));
        // 0B 0139
        gbc.setState(0x2468, 0xbcb2, 0x26f0, 0xab4b, 0x47fe, 0xd65e, 0x1, 0x0);
        gbc.writeMem(0x2468, { 0xb });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbcb2, gbc.sp());
        EXPECT(0x2469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 013A
        gbc.setState(0xd2a6, 0x6e26, 0xae60, 0x1095, 0xb684, 0x19e0, 0x0, 0x1);
        gbc.writeMem(0xd2a6, { 0xb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6e26, gbc.sp());
        EXPECT(0xd2a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd2a6));
        // 0B 013B
        gbc.setState(0x40c, 0x88b6, 0xa610, 0x660b, 0xa886, 0xe0c5, 0x0, 0x0);
        gbc.writeMem(0x40c, { 0xb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x88b6, gbc.sp());
        EXPECT(0x40d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 013C
        gbc.setState(0xce25, 0xe10b, 0x8230, 0x4da8, 0x4664, 0x7764, 0x1, 0x1);
        gbc.writeMem(0xce25, { 0xb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe10b, gbc.sp());
        EXPECT(0xce26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xce25));
        // 0B 013D
        gbc.setState(0xe8d7, 0x582b, 0xc100, 0xefc5, 0xf2ca, 0x929d, 0x0, 0x1);
        gbc.writeMem(0xe8d7, { 0xb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x582b, gbc.sp());
        EXPECT(0xe8d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe8d7));
        // 0B 013E
        gbc.setState(0x119b, 0x290a, 0x9ab0, 0x6849, 0xe567, 0xbb9a, 0x0, 0x0);
        gbc.writeMem(0x119b, { 0xb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x290a, gbc.sp());
        EXPECT(0x119c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 013F
        gbc.setState(0xac6e, 0xdcc5, 0x8e40, 0x9850, 0x9361, 0xb379, 0x1, 0x1);
        gbc.writeMem(0xac6e, { 0xb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdcc5, gbc.sp());
        EXPECT(0xac6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xac6e));
        // 0B 0140
        gbc.setState(0xd5e5, 0x4fbd, 0x300, 0xe842, 0x18b1, 0x32b0, 0x0, 0x1);
        gbc.writeMem(0xd5e5, { 0xb });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4fbd, gbc.sp());
        EXPECT(0xd5e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd5e5));
        // 0B 0141
        gbc.setState(0x3beb, 0xcfa9, 0x9d90, 0x80a4, 0xd929, 0xd083, 0x1, 0x0);
        gbc.writeMem(0x3beb, { 0xb });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xcfa9, gbc.sp());
        EXPECT(0x3bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0142
        gbc.setState(0x198e, 0x3034, 0x1160, 0xb5be, 0xd518, 0xf808, 0x0, 0x0);
        gbc.writeMem(0x198e, { 0xb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3034, gbc.sp());
        EXPECT(0x198f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0143
        gbc.setState(0x3182, 0xf2e4, 0xd3f0, 0xa027, 0xe2a4, 0x4997, 0x0, 0x0);
        gbc.writeMem(0x3182, { 0xb });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf2e4, gbc.sp());
        EXPECT(0x3183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0144
        gbc.setState(0x7873, 0xf3ab, 0x5690, 0x1d02, 0x5cf9, 0x3564, 0x1, 0x1);
        gbc.writeMem(0x7873, { 0xb });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf3ab, gbc.sp());
        EXPECT(0x7874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0145
        gbc.setState(0xe33, 0x696b, 0x4560, 0x61b1, 0xc73, 0x3983, 0x0, 0x1);
        gbc.writeMem(0xe33, { 0xb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x696b, gbc.sp());
        EXPECT(0xe34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0146
        gbc.setState(0xae6c, 0x937e, 0xe790, 0xa16f, 0x15f9, 0xb40f, 0x0, 0x1);
        gbc.writeMem(0xae6c, { 0xb });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x937e, gbc.sp());
        EXPECT(0xae6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xae6c));
        // 0B 0147
        gbc.setState(0xbcb5, 0x5ac2, 0x55a0, 0xed6b, 0x51f3, 0x3815, 0x1, 0x0);
        gbc.writeMem(0xbcb5, { 0xb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5ac2, gbc.sp());
        EXPECT(0xbcb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbcb5));
        // 0B 0148
        gbc.setState(0x1539, 0x48bd, 0x3130, 0x8709, 0x148d, 0x4a2a, 0x0, 0x0);
        gbc.writeMem(0x1539, { 0xb });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x48bd, gbc.sp());
        EXPECT(0x153a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0149
        gbc.setState(0x667c, 0xe3c1, 0xb650, 0x61eb, 0x7810, 0xb48a, 0x1, 0x0);
        gbc.writeMem(0x667c, { 0xb });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe3c1, gbc.sp());
        EXPECT(0x667d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 014A
        gbc.setState(0xa230, 0x6cdf, 0xcb70, 0x5336, 0xa823, 0xde1a, 0x1, 0x0);
        gbc.writeMem(0xa230, { 0xb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6cdf, gbc.sp());
        EXPECT(0xa231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa230));
        // 0B 014B
        gbc.setState(0x910e, 0x4f3b, 0x4f0, 0xf715, 0x5d56, 0xdbc3, 0x1, 0x1);
        gbc.writeMem(0x910e, { 0xb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4f3b, gbc.sp());
        EXPECT(0x910f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x910e));
        // 0B 014C
        gbc.setState(0x9422, 0x9ff0, 0x6e90, 0x63c9, 0xa143, 0x8498, 0x1, 0x0);
        gbc.writeMem(0x9422, { 0xb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9ff0, gbc.sp());
        EXPECT(0x9423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9422));
        // 0B 014D
        gbc.setState(0xa287, 0xc82e, 0x480, 0x2f5a, 0x7f1f, 0x9331, 0x0, 0x1);
        gbc.writeMem(0xa287, { 0xb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc82e, gbc.sp());
        EXPECT(0xa288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa287));
        // 0B 014E
        gbc.setState(0xf78, 0x64, 0x63c0, 0x549b, 0x17a9, 0x1b5, 0x0, 0x1);
        gbc.writeMem(0xf78, { 0xb });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x64, gbc.sp());
        EXPECT(0xf79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 014F
        gbc.setState(0x33ca, 0xffb4, 0xfa20, 0x9198, 0x60fc, 0x5836, 0x1, 0x1);
        gbc.writeMem(0x33ca, { 0xb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xffb4, gbc.sp());
        EXPECT(0x33cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0150
        gbc.setState(0xdb01, 0x81ac, 0x82c0, 0xaecd, 0xc6a9, 0xe2fe, 0x1, 0x1);
        gbc.writeMem(0xdb01, { 0xb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x81ac, gbc.sp());
        EXPECT(0xdb02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xdb01));
        // 0B 0151
        gbc.setState(0x169d, 0xf6e3, 0xdcb0, 0xbfb5, 0x1f95, 0xcf5b, 0x1, 0x0);
        gbc.writeMem(0x169d, { 0xb });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf6e3, gbc.sp());
        EXPECT(0x169e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0152
        gbc.setState(0x7f54, 0xdc70, 0xf860, 0x2fea, 0xb3e2, 0xffc4, 0x0, 0x0);
        gbc.writeMem(0x7f54, { 0xb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdc70, gbc.sp());
        EXPECT(0x7f55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0153
        gbc.setState(0x5450, 0xd4f2, 0xebb0, 0x409f, 0xe076, 0xbe92, 0x0, 0x1);
        gbc.writeMem(0x5450, { 0xb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd4f2, gbc.sp());
        EXPECT(0x5451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0155
        gbc.setState(0xd438, 0xb353, 0xeb20, 0xf57a, 0x43f7, 0x38e8, 0x1, 0x0);
        gbc.writeMem(0xd438, { 0xb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb353, gbc.sp());
        EXPECT(0xd439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd438));
        // 0B 0156
        gbc.setState(0x8343, 0x96d1, 0x3a90, 0xad79, 0x4f5d, 0xb513, 0x0, 0x1);
        gbc.writeMem(0x8343, { 0xb });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x96d1, gbc.sp());
        EXPECT(0x8344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8343));
        // 0B 0157
        gbc.setState(0x844f, 0x6744, 0x5360, 0x7088, 0x1200, 0x1049, 0x1, 0x1);
        gbc.writeMem(0x844f, { 0xb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6744, gbc.sp());
        EXPECT(0x8450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x844f));
        // 0B 0158
        gbc.setState(0x3bda, 0xd042, 0x2530, 0x4a33, 0x1a10, 0x5ec8, 0x1, 0x0);
        gbc.writeMem(0x3bda, { 0xb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd042, gbc.sp());
        EXPECT(0x3bdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0159
        gbc.setState(0x4a5b, 0x1667, 0xa6f0, 0xd5ca, 0x29d0, 0xa467, 0x1, 0x0);
        gbc.writeMem(0x4a5b, { 0xb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1667, gbc.sp());
        EXPECT(0x4a5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 015A
        gbc.setState(0xd2d3, 0x4d80, 0xfb50, 0x41b0, 0x9837, 0x5c16, 0x0, 0x1);
        gbc.writeMem(0xd2d3, { 0xb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4d80, gbc.sp());
        EXPECT(0xd2d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd2d3));
        // 0B 015B
        gbc.setState(0xe52c, 0xaba3, 0xcb00, 0xda8d, 0x7abf, 0x2675, 0x0, 0x0);
        gbc.writeMem(0xe52c, { 0xb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xaba3, gbc.sp());
        EXPECT(0xe52d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe52c));
        // 0B 015C
        gbc.setState(0x795c, 0xc74f, 0x43c0, 0xff69, 0xc6d4, 0x397, 0x0, 0x1);
        gbc.writeMem(0x795c, { 0xb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc74f, gbc.sp());
        EXPECT(0x795d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 015D
        gbc.setState(0xa461, 0xa99, 0xb880, 0xdb0f, 0x9d3f, 0x9e5a, 0x1, 0x1);
        gbc.writeMem(0xa461, { 0xb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa99, gbc.sp());
        EXPECT(0xa462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa461));
        // 0B 015E
        gbc.setState(0x2b47, 0x4ef0, 0xf7c0, 0xeb4d, 0xb965, 0x314c, 0x0, 0x1);
        gbc.writeMem(0x2b47, { 0xb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4ef0, gbc.sp());
        EXPECT(0x2b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 015F
        gbc.setState(0xcc4c, 0xdae0, 0x8f20, 0x16f8, 0x9f2, 0x8156, 0x0, 0x1);
        gbc.writeMem(0xcc4c, { 0xb });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdae0, gbc.sp());
        EXPECT(0xcc4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xcc4c));
        // 0B 0160
        gbc.setState(0x6ba4, 0xf7a7, 0x3cd0, 0x69ae, 0xd915, 0x2097, 0x0, 0x0);
        gbc.writeMem(0x6ba4, { 0xb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf7a7, gbc.sp());
        EXPECT(0x6ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0161
        gbc.setState(0x629b, 0xf337, 0x6840, 0x3ef7, 0x14d7, 0x9e01, 0x0, 0x1);
        gbc.writeMem(0x629b, { 0xb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf337, gbc.sp());
        EXPECT(0x629c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0162
        gbc.setState(0x3fb1, 0x331f, 0x7ad0, 0xc1d3, 0x4746, 0x2a7f, 0x1, 0x1);
        gbc.writeMem(0x3fb1, { 0xb });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x331f, gbc.sp());
        EXPECT(0x3fb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0163
        gbc.setState(0x4534, 0x4d14, 0x2970, 0x1ba1, 0x773f, 0x58c6, 0x1, 0x0);
        gbc.writeMem(0x4534, { 0xb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4d14, gbc.sp());
        EXPECT(0x4535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0164
        gbc.setState(0x1a75, 0xc684, 0xef90, 0x2c2d, 0x6010, 0x9641, 0x0, 0x1);
        gbc.writeMem(0x1a75, { 0xb });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc684, gbc.sp());
        EXPECT(0x1a76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0165
        gbc.setState(0xe097, 0x9e90, 0x9c80, 0xc346, 0x978c, 0x6ec2, 0x0, 0x0);
        gbc.writeMem(0xe097, { 0xb });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9e90, gbc.sp());
        EXPECT(0xe098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe097));
        // 0B 0166
        gbc.setState(0x3676, 0x8cdf, 0x3e20, 0xa260, 0xd692, 0xefba, 0x1, 0x0);
        gbc.writeMem(0x3676, { 0xb });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8cdf, gbc.sp());
        EXPECT(0x3677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0168
        gbc.setState(0xabe9, 0xc6a5, 0x1580, 0x260f, 0xf28d, 0x719c, 0x1, 0x0);
        gbc.writeMem(0xabe9, { 0xb });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc6a5, gbc.sp());
        EXPECT(0xabea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xabe9));
        // 0B 0169
        gbc.setState(0xa932, 0x5337, 0x3fc0, 0xb6f6, 0x5c8a, 0x720e, 0x0, 0x1);
        gbc.writeMem(0xa932, { 0xb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5337, gbc.sp());
        EXPECT(0xa933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa932));
        // 0B 016A
        gbc.setState(0xc77a, 0x78df, 0x6c0, 0x925a, 0x438a, 0x11c6, 0x1, 0x1);
        gbc.writeMem(0xc77a, { 0xb });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x78df, gbc.sp());
        EXPECT(0xc77b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc77a));
        // 0B 016B
        gbc.setState(0x1ec1, 0xbc5, 0x59d0, 0xbef5, 0xd24e, 0x1a7a, 0x1, 0x1);
        gbc.writeMem(0x1ec1, { 0xb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbc5, gbc.sp());
        EXPECT(0x1ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 016C
        gbc.setState(0xef6f, 0x94eb, 0x7910, 0xe582, 0x11ed, 0x4907, 0x0, 0x0);
        gbc.writeMem(0xef6f, { 0xb });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x94eb, gbc.sp());
        EXPECT(0xef70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xef6f));
        // 0B 016D
        gbc.setState(0x23c0, 0x9e3a, 0xa070, 0x26b9, 0x8c0, 0x27bd, 0x0, 0x0);
        gbc.writeMem(0x23c0, { 0xb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9e3a, gbc.sp());
        EXPECT(0x23c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 016E
        gbc.setState(0x988c, 0xdb64, 0x6e90, 0x27d2, 0xecb8, 0x8de7, 0x1, 0x1);
        gbc.writeMem(0x988c, { 0xb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xdb64, gbc.sp());
        EXPECT(0x988d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x988c));
        // 0B 016F
        gbc.setState(0x18f5, 0x84a4, 0x54b0, 0xd767, 0x3f8d, 0xbbf9, 0x0, 0x0);
        gbc.writeMem(0x18f5, { 0xb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x84a4, gbc.sp());
        EXPECT(0x18f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0170
        gbc.setState(0x7997, 0x745d, 0xbe90, 0x89, 0x4f36, 0xe14a, 0x1, 0x1);
        gbc.writeMem(0x7997, { 0xb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x745d, gbc.sp());
        EXPECT(0x7998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0171
        gbc.setState(0x9262, 0x8d2f, 0x89b0, 0xd96f, 0xc47, 0xab7d, 0x1, 0x1);
        gbc.writeMem(0x9262, { 0xb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8d2f, gbc.sp());
        EXPECT(0x9263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9262));
        // 0B 0172
        gbc.setState(0x3465, 0xc46c, 0x62a0, 0xb6b, 0x6ef4, 0xc441, 0x0, 0x1);
        gbc.writeMem(0x3465, { 0xb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc46c, gbc.sp());
        EXPECT(0x3466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0173
        gbc.setState(0xb566, 0xfdc8, 0xae90, 0x2224, 0x9e2d, 0xd2b7, 0x1, 0x1);
        gbc.writeMem(0xb566, { 0xb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xfdc8, gbc.sp());
        EXPECT(0xb567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb566));
        // 0B 0174
        gbc.setState(0x1224, 0x9f6f, 0xd590, 0x5639, 0xeac6, 0x2950, 0x1, 0x0);
        gbc.writeMem(0x1224, { 0xb });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9f6f, gbc.sp());
        EXPECT(0x1225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0175
        gbc.setState(0x3e34, 0x3157, 0x440, 0xb6cb, 0x94b7, 0x41b2, 0x1, 0x0);
        gbc.writeMem(0x3e34, { 0xb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3157, gbc.sp());
        EXPECT(0x3e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0176
        gbc.setState(0x46d4, 0x5e97, 0xc470, 0x185b, 0x21b2, 0x2fda, 0x1, 0x1);
        gbc.writeMem(0x46d4, { 0xb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5e97, gbc.sp());
        EXPECT(0x46d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0177
        gbc.setState(0x6d4, 0x469, 0xf3c0, 0x99fb, 0xdf77, 0xd8d2, 0x1, 0x1);
        gbc.writeMem(0x6d4, { 0xb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x469, gbc.sp());
        EXPECT(0x6d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0178
        gbc.setState(0x1847, 0xcc6e, 0xa440, 0xcf95, 0x8ca9, 0x7c3f, 0x0, 0x0);
        gbc.writeMem(0x1847, { 0xb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xcc6e, gbc.sp());
        EXPECT(0x1848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0179
        gbc.setState(0xa9b1, 0xa6fc, 0x28e0, 0x8baa, 0xa14d, 0x9284, 0x0, 0x0);
        gbc.writeMem(0xa9b1, { 0xb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa6fc, gbc.sp());
        EXPECT(0xa9b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa9b1));
        // 0B 017A
        gbc.setState(0x41d4, 0x7730, 0x22e0, 0xc451, 0xad4, 0xc7cf, 0x1, 0x0);
        gbc.writeMem(0x41d4, { 0xb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7730, gbc.sp());
        EXPECT(0x41d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 017B
        gbc.setState(0x86b5, 0x3997, 0x9af0, 0xbbca, 0xb986, 0x9e26, 0x1, 0x0);
        gbc.writeMem(0x86b5, { 0xb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3997, gbc.sp());
        EXPECT(0x86b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x86b5));
        // 0B 017D
        gbc.setState(0xc1fc, 0x515b, 0x7db0, 0xae90, 0xb8b9, 0xbb3f, 0x1, 0x1);
        gbc.writeMem(0xc1fc, { 0xb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x515b, gbc.sp());
        EXPECT(0xc1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc1fc));
        // 0B 017E
        gbc.setState(0x8f8e, 0x4f70, 0xc470, 0xce4a, 0xeb21, 0x61f8, 0x1, 0x1);
        gbc.writeMem(0x8f8e, { 0xb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4f70, gbc.sp());
        EXPECT(0x8f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8f8e));
        // 0B 017F
        gbc.setState(0x96d, 0x683, 0xeca0, 0x51d9, 0x28fd, 0xf1f3, 0x1, 0x1);
        gbc.writeMem(0x96d, { 0xb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x683, gbc.sp());
        EXPECT(0x96e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0180
        gbc.setState(0xc456, 0x284f, 0x4050, 0x168d, 0x7ec9, 0x4fa7, 0x1, 0x0);
        gbc.writeMem(0xc456, { 0xb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x284f, gbc.sp());
        EXPECT(0xc457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc456));
        // 0B 0181
        gbc.setState(0xa969, 0x86f7, 0xdb50, 0xac09, 0xd83e, 0xf657, 0x0, 0x0);
        gbc.writeMem(0xa969, { 0xb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x86f7, gbc.sp());
        EXPECT(0xa96a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa969));
        // 0B 0182
        gbc.setState(0xd23a, 0x3d59, 0x9800, 0x661e, 0x1adc, 0x72de, 0x0, 0x1);
        gbc.writeMem(0xd23a, { 0xb });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3d59, gbc.sp());
        EXPECT(0xd23b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd23a));
        // 0B 0183
        gbc.setState(0x3e47, 0x9bb3, 0xf370, 0x5902, 0x6d34, 0x9212, 0x1, 0x1);
        gbc.writeMem(0x3e47, { 0xb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9bb3, gbc.sp());
        EXPECT(0x3e48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0184
        gbc.setState(0x45c3, 0x9ccd, 0x9e20, 0xaa21, 0x5686, 0x293c, 0x1, 0x1);
        gbc.writeMem(0x45c3, { 0xb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9ccd, gbc.sp());
        EXPECT(0x45c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0185
        gbc.setState(0xcc9a, 0xbe44, 0xfe20, 0x210, 0x86e2, 0x2986, 0x1, 0x0);
        gbc.writeMem(0xcc9a, { 0xb });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbe44, gbc.sp());
        EXPECT(0xcc9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xcc9a));
        // 0B 0186
        gbc.setState(0x42be, 0x97c2, 0x3930, 0x52c8, 0xa57a, 0xea51, 0x0, 0x0);
        gbc.writeMem(0x42be, { 0xb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x97c2, gbc.sp());
        EXPECT(0x42bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0187
        gbc.setState(0x3a2d, 0x3a19, 0x2150, 0x88a6, 0xa0ba, 0xc2ae, 0x0, 0x1);
        gbc.writeMem(0x3a2d, { 0xb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3a19, gbc.sp());
        EXPECT(0x3a2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0188
        gbc.setState(0x7e77, 0x503a, 0xc260, 0x819e, 0xf305, 0x9432, 0x1, 0x0);
        gbc.writeMem(0x7e77, { 0xb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x503a, gbc.sp());
        EXPECT(0x7e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0189
        gbc.setState(0x846e, 0xddde, 0xebf0, 0x3eab, 0xddf, 0xdb0f, 0x1, 0x1);
        gbc.writeMem(0x846e, { 0xb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xddde, gbc.sp());
        EXPECT(0x846f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x846e));
        // 0B 018A
        gbc.setState(0xbfbd, 0x2ad2, 0x3700, 0xe0aa, 0xf63, 0x21a1, 0x1, 0x0);
        gbc.writeMem(0xbfbd, { 0xb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2ad2, gbc.sp());
        EXPECT(0xbfbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbfbd));
        // 0B 018B
        gbc.setState(0x171d, 0x49a8, 0xc0a0, 0x9e13, 0xc1e5, 0x1f40, 0x1, 0x1);
        gbc.writeMem(0x171d, { 0xb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x49a8, gbc.sp());
        EXPECT(0x171e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 018C
        gbc.setState(0x7c77, 0x4515, 0x3970, 0x82a6, 0xbbc0, 0xdf84, 0x0, 0x0);
        gbc.writeMem(0x7c77, { 0xb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4515, gbc.sp());
        EXPECT(0x7c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 018D
        gbc.setState(0xc4e0, 0xfbb0, 0x1920, 0xf060, 0x4e4c, 0xdaf7, 0x0, 0x0);
        gbc.writeMem(0xc4e0, { 0xb });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfbb0, gbc.sp());
        EXPECT(0xc4e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc4e0));
        // 0B 018E
        gbc.setState(0xc1e0, 0x4323, 0x9ba0, 0x475d, 0xc10d, 0x164c, 0x1, 0x1);
        gbc.writeMem(0xc1e0, { 0xb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4323, gbc.sp());
        EXPECT(0xc1e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc1e0));
        // 0B 018F
        gbc.setState(0x1914, 0x8177, 0x7850, 0xdbd5, 0xc5bb, 0x3e8c, 0x1, 0x1);
        gbc.writeMem(0x1914, { 0xb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8177, gbc.sp());
        EXPECT(0x1915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0190
        gbc.setState(0xc1ff, 0x1479, 0xd3b0, 0x6a54, 0xf7a7, 0x55b6, 0x1, 0x0);
        gbc.writeMem(0xc1ff, { 0xb });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1479, gbc.sp());
        EXPECT(0xc200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc1ff));
        // 0B 0191
        gbc.setState(0xd616, 0x3b59, 0x2910, 0xab7a, 0xd1f7, 0xd25b, 0x1, 0x0);
        gbc.writeMem(0xd616, { 0xb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3b59, gbc.sp());
        EXPECT(0xd617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd616));
        // 0B 0192
        gbc.setState(0xce76, 0x154d, 0x2300, 0x392c, 0xed9f, 0x490b, 0x0, 0x1);
        gbc.writeMem(0xce76, { 0xb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x154d, gbc.sp());
        EXPECT(0xce77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xce76));
        // 0B 0193
        gbc.setState(0x9ab4, 0xbe19, 0xab40, 0x3618, 0x8798, 0x757, 0x1, 0x0);
        gbc.writeMem(0x9ab4, { 0xb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbe19, gbc.sp());
        EXPECT(0x9ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9ab4));
        // 0B 0194
        gbc.setState(0xef68, 0xda79, 0x1f10, 0x4c2f, 0x95ac, 0x623f, 0x0, 0x1);
        gbc.writeMem(0xef68, { 0xb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xda79, gbc.sp());
        EXPECT(0xef69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xef68));
        // 0B 0195
        gbc.setState(0xca7e, 0x2ca0, 0x3030, 0x5aa9, 0x93f7, 0x1a95, 0x0, 0x0);
        gbc.writeMem(0xca7e, { 0xb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2ca0, gbc.sp());
        EXPECT(0xca7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xca7e));
        // 0B 0196
        gbc.setState(0xa5c0, 0x3e7f, 0x4500, 0xf1ba, 0xdf95, 0xddaa, 0x1, 0x0);
        gbc.writeMem(0xa5c0, { 0xb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3e7f, gbc.sp());
        EXPECT(0xa5c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa5c0));
        // 0B 0197
        gbc.setState(0x1ec6, 0x8971, 0xe0e0, 0x250a, 0x567d, 0x473a, 0x1, 0x1);
        gbc.writeMem(0x1ec6, { 0xb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8971, gbc.sp());
        EXPECT(0x1ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0198
        gbc.setState(0xe771, 0x648, 0x4f80, 0xd656, 0x1b5, 0x33b3, 0x1, 0x0);
        gbc.writeMem(0xe771, { 0xb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x648, gbc.sp());
        EXPECT(0xe772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe771));
        // 0B 0199
        gbc.setState(0x1f76, 0x94c8, 0x95d0, 0xefa0, 0x9942, 0x473b, 0x1, 0x1);
        gbc.writeMem(0x1f76, { 0xb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x94c8, gbc.sp());
        EXPECT(0x1f77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 019A
        gbc.setState(0x9d17, 0x8e38, 0x44f0, 0xaefe, 0x1b9e, 0xa171, 0x1, 0x0);
        gbc.writeMem(0x9d17, { 0xb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8e38, gbc.sp());
        EXPECT(0x9d18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9d17));
        // 0B 019B
        gbc.setState(0x71f1, 0x4a97, 0x8b70, 0x9120, 0x66f5, 0xdcad, 0x1, 0x0);
        gbc.writeMem(0x71f1, { 0xb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4a97, gbc.sp());
        EXPECT(0x71f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 019C
        gbc.setState(0x2ace, 0x9555, 0xf7e0, 0x3f9e, 0x2037, 0xea23, 0x1, 0x0);
        gbc.writeMem(0x2ace, { 0xb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9555, gbc.sp());
        EXPECT(0x2acf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 019D
        gbc.setState(0x88cf, 0xf3c3, 0xfcf0, 0x5246, 0x834b, 0xf06c, 0x0, 0x1);
        gbc.writeMem(0x88cf, { 0xb });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf3c3, gbc.sp());
        EXPECT(0x88d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x88cf));
        // 0B 019E
        gbc.setState(0xb112, 0xec74, 0xfbd0, 0xcac5, 0x635, 0x51f5, 0x1, 0x0);
        gbc.writeMem(0xb112, { 0xb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xec74, gbc.sp());
        EXPECT(0xb113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb112));
        // 0B 019F
        gbc.setState(0xb989, 0x37a9, 0xf5f0, 0x8318, 0x978c, 0xb1e3, 0x1, 0x0);
        gbc.writeMem(0xb989, { 0xb });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x37a9, gbc.sp());
        EXPECT(0xb98a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb989));
        // 0B 01A0
        gbc.setState(0x59f7, 0xb85e, 0x4fa0, 0x1b56, 0x2332, 0x6921, 0x1, 0x0);
        gbc.writeMem(0x59f7, { 0xb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb85e, gbc.sp());
        EXPECT(0x59f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01A1
        gbc.setState(0x14ce, 0x75de, 0x46b0, 0x6e87, 0xf4c2, 0xa400, 0x0, 0x1);
        gbc.writeMem(0x14ce, { 0xb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x75de, gbc.sp());
        EXPECT(0x14cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01A2
        gbc.setState(0x3c4d, 0xd1c2, 0xdeb0, 0x4bb6, 0x9b4a, 0x428a, 0x1, 0x1);
        gbc.writeMem(0x3c4d, { 0xb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd1c2, gbc.sp());
        EXPECT(0x3c4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01A3
        gbc.setState(0xa854, 0xc626, 0xa4f0, 0xd8e3, 0x42c5, 0xd436, 0x1, 0x1);
        gbc.writeMem(0xa854, { 0xb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc626, gbc.sp());
        EXPECT(0xa855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa854));
        // 0B 01A4
        gbc.setState(0x1707, 0x4e01, 0xe950, 0xe96c, 0xa9f9, 0x8678, 0x0, 0x0);
        gbc.writeMem(0x1707, { 0xb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4e01, gbc.sp());
        EXPECT(0x1708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01A5
        gbc.setState(0x9397, 0xdc80, 0xb290, 0xb7f8, 0xb567, 0xf6c4, 0x1, 0x1);
        gbc.writeMem(0x9397, { 0xb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdc80, gbc.sp());
        EXPECT(0x9398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9397));
        // 0B 01A6
        gbc.setState(0xa6db, 0x95e8, 0x7b20, 0x27d1, 0x68ec, 0xb845, 0x0, 0x0);
        gbc.writeMem(0xa6db, { 0xb });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x95e8, gbc.sp());
        EXPECT(0xa6dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa6db));
        // 0B 01A7
        gbc.setState(0x7c09, 0x7ef4, 0x93a0, 0x3dcc, 0xe5d5, 0xc0f7, 0x0, 0x1);
        gbc.writeMem(0x7c09, { 0xb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7ef4, gbc.sp());
        EXPECT(0x7c0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01A8
        gbc.setState(0xa7ac, 0x4e10, 0x49d0, 0xf27a, 0xb766, 0x5ab9, 0x0, 0x0);
        gbc.writeMem(0xa7ac, { 0xb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4e10, gbc.sp());
        EXPECT(0xa7ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa7ac));
        // 0B 01A9
        gbc.setState(0xe9df, 0x9f45, 0x4df0, 0xcd77, 0x9c3a, 0xf4f5, 0x1, 0x1);
        gbc.writeMem(0xe9df, { 0xb });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9f45, gbc.sp());
        EXPECT(0xe9e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe9df));
        // 0B 01AA
        gbc.setState(0xda7b, 0xc59f, 0xcea0, 0x262, 0x219c, 0xd89f, 0x1, 0x1);
        gbc.writeMem(0xda7b, { 0xb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc59f, gbc.sp());
        EXPECT(0xda7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xda7b));
        // 0B 01AB
        gbc.setState(0x5ac4, 0x7955, 0x2550, 0x8947, 0xfc81, 0x41a8, 0x1, 0x1);
        gbc.writeMem(0x5ac4, { 0xb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7955, gbc.sp());
        EXPECT(0x5ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01AC
        gbc.setState(0x6c9c, 0xe0df, 0x9490, 0x5b95, 0x81f6, 0x8d11, 0x1, 0x0);
        gbc.writeMem(0x6c9c, { 0xb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe0df, gbc.sp());
        EXPECT(0x6c9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01AD
        gbc.setState(0x5adf, 0x494a, 0xec10, 0x9c88, 0xce6, 0xec16, 0x1, 0x0);
        gbc.writeMem(0x5adf, { 0xb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x494a, gbc.sp());
        EXPECT(0x5ae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01AE
        gbc.setState(0xb50, 0xf679, 0xfd70, 0x28ab, 0xb1cd, 0xbf80, 0x1, 0x0);
        gbc.writeMem(0xb50, { 0xb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf679, gbc.sp());
        EXPECT(0xb51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01AF
        gbc.setState(0x9ab1, 0xa457, 0x5b80, 0x63e4, 0x9d0f, 0x10e, 0x0, 0x1);
        gbc.writeMem(0x9ab1, { 0xb });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa457, gbc.sp());
        EXPECT(0x9ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9ab1));
        // 0B 01B0
        gbc.setState(0xb132, 0x6856, 0x6ba0, 0xdb4e, 0x4171, 0x30c0, 0x1, 0x1);
        gbc.writeMem(0xb132, { 0xb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6856, gbc.sp());
        EXPECT(0xb133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb132));
        // 0B 01B1
        gbc.setState(0x3438, 0xe787, 0x4b10, 0x836e, 0xab96, 0xf8ad, 0x1, 0x1);
        gbc.writeMem(0x3438, { 0xb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe787, gbc.sp());
        EXPECT(0x3439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01B2
        gbc.setState(0x70da, 0x65a2, 0xbe90, 0x20dd, 0x336a, 0xe8aa, 0x0, 0x0);
        gbc.writeMem(0x70da, { 0xb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x65a2, gbc.sp());
        EXPECT(0x70db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01B3
        gbc.setState(0xa125, 0x17bc, 0xbd50, 0x51c6, 0x8ca8, 0xb3d0, 0x1, 0x0);
        gbc.writeMem(0xa125, { 0xb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x17bc, gbc.sp());
        EXPECT(0xa126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa125));
        // 0B 01B4
        gbc.setState(0x86ed, 0x19d, 0x9b50, 0x35c7, 0x8725, 0xe327, 0x0, 0x0);
        gbc.writeMem(0x86ed, { 0xb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x19d, gbc.sp());
        EXPECT(0x86ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x86ed));
        // 0B 01B5
        gbc.setState(0x5cec, 0x6ff9, 0x240, 0x5a99, 0xfb64, 0x415e, 0x1, 0x1);
        gbc.writeMem(0x5cec, { 0xb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6ff9, gbc.sp());
        EXPECT(0x5ced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01B7
        gbc.setState(0x7a68, 0xae02, 0x4180, 0x18a8, 0xe0c1, 0x310, 0x0, 0x1);
        gbc.writeMem(0x7a68, { 0xb });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xae02, gbc.sp());
        EXPECT(0x7a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01B8
        gbc.setState(0x4a51, 0x579c, 0x12b0, 0xbe9d, 0x35b0, 0x7416, 0x1, 0x0);
        gbc.writeMem(0x4a51, { 0xb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x579c, gbc.sp());
        EXPECT(0x4a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01B9
        gbc.setState(0x52e1, 0x8b9d, 0xc040, 0x242f, 0x212d, 0xb419, 0x1, 0x0);
        gbc.writeMem(0x52e1, { 0xb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8b9d, gbc.sp());
        EXPECT(0x52e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01BB
        gbc.setState(0x50a3, 0xf220, 0xb340, 0x7ef1, 0x4d0a, 0x309a, 0x1, 0x1);
        gbc.writeMem(0x50a3, { 0xb });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf220, gbc.sp());
        EXPECT(0x50a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01BC
        gbc.setState(0x33f9, 0xb082, 0xc730, 0x99a3, 0x366f, 0x3ab1, 0x0, 0x0);
        gbc.writeMem(0x33f9, { 0xb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb082, gbc.sp());
        EXPECT(0x33fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01BD
        gbc.setState(0x9079, 0xa74b, 0xba70, 0x8a20, 0x4440, 0xbdd3, 0x1, 0x1);
        gbc.writeMem(0x9079, { 0xb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa74b, gbc.sp());
        EXPECT(0x907a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9079));
        // 0B 01BE
        gbc.setState(0xe915, 0x6b3c, 0x8cd0, 0xd936, 0xd524, 0xfda7, 0x1, 0x0);
        gbc.writeMem(0xe915, { 0xb });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6b3c, gbc.sp());
        EXPECT(0xe916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe915));
        // 0B 01BF
        gbc.setState(0x72ce, 0xd50e, 0x4820, 0xbaa1, 0xded4, 0x5878, 0x1, 0x1);
        gbc.writeMem(0x72ce, { 0xb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd50e, gbc.sp());
        EXPECT(0x72cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01C0
        gbc.setState(0x380, 0x9b18, 0x9c50, 0xa7c5, 0xf080, 0x6422, 0x1, 0x1);
        gbc.writeMem(0x380, { 0xb });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9b18, gbc.sp());
        EXPECT(0x381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01C1
        gbc.setState(0xc7fe, 0xa9db, 0x42e0, 0x24cc, 0xc63e, 0xb80d, 0x0, 0x0);
        gbc.writeMem(0xc7fe, { 0xb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa9db, gbc.sp());
        EXPECT(0xc7ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc7fe));
        // 0B 01C2
        gbc.setState(0x66c1, 0x677a, 0xa510, 0x7519, 0xf940, 0xe5d, 0x0, 0x0);
        gbc.writeMem(0x66c1, { 0xb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x677a, gbc.sp());
        EXPECT(0x66c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01C3
        gbc.setState(0x199d, 0x5d6a, 0x4ed0, 0xf6c1, 0x2ee, 0x3b67, 0x1, 0x1);
        gbc.writeMem(0x199d, { 0xb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5d6a, gbc.sp());
        EXPECT(0x199e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01C4
        gbc.setState(0xd338, 0xac8d, 0x40d0, 0x26d3, 0xb589, 0x7c29, 0x0, 0x0);
        gbc.writeMem(0xd338, { 0xb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xac8d, gbc.sp());
        EXPECT(0xd339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd338));
        // 0B 01C5
        gbc.setState(0xcd9a, 0x3326, 0x8750, 0x9ab3, 0xd8c, 0x1212, 0x1, 0x1);
        gbc.writeMem(0xcd9a, { 0xb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3326, gbc.sp());
        EXPECT(0xcd9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xcd9a));
        // 0B 01C6
        gbc.setState(0x88f7, 0xd23b, 0x7ee0, 0xd313, 0x4072, 0x508c, 0x1, 0x0);
        gbc.writeMem(0x88f7, { 0xb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd23b, gbc.sp());
        EXPECT(0x88f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x88f7));
        // 0B 01C8
        gbc.setState(0xee38, 0x4ab4, 0xc1e0, 0x420e, 0x48a8, 0x3671, 0x1, 0x1);
        gbc.writeMem(0xee38, { 0xb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4ab4, gbc.sp());
        EXPECT(0xee39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xee38));
        // 0B 01C9
        gbc.setState(0x6cec, 0xb855, 0xe810, 0x9ba, 0x6beb, 0x317a, 0x1, 0x1);
        gbc.writeMem(0x6cec, { 0xb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb855, gbc.sp());
        EXPECT(0x6ced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01CA
        gbc.setState(0xb62c, 0x64c, 0x4120, 0xf4d3, 0x2845, 0xf950, 0x1, 0x1);
        gbc.writeMem(0xb62c, { 0xb });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x64c, gbc.sp());
        EXPECT(0xb62d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb62c));
        // 0B 01CB
        gbc.setState(0x10fd, 0x1851, 0xcad0, 0x77c2, 0xbd30, 0xb448, 0x1, 0x1);
        gbc.writeMem(0x10fd, { 0xb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1851, gbc.sp());
        EXPECT(0x10fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01CC
        gbc.setState(0xc774, 0x8d7, 0xa650, 0x9a67, 0xcb32, 0x9d64, 0x0, 0x0);
        gbc.writeMem(0xc774, { 0xb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8d7, gbc.sp());
        EXPECT(0xc775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc774));
        // 0B 01CD
        gbc.setState(0x262a, 0xd4e1, 0xf1a0, 0x3344, 0x4978, 0x48a, 0x1, 0x0);
        gbc.writeMem(0x262a, { 0xb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd4e1, gbc.sp());
        EXPECT(0x262b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01CF
        gbc.setState(0xa197, 0xcea1, 0x5e60, 0x2c7, 0xf560, 0x74f8, 0x0, 0x0);
        gbc.writeMem(0xa197, { 0xb });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xcea1, gbc.sp());
        EXPECT(0xa198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa197));
        // 0B 01D0
        gbc.setState(0x5520, 0xd756, 0xb9a0, 0x92a5, 0x3f0e, 0x6521, 0x0, 0x0);
        gbc.writeMem(0x5520, { 0xb });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd756, gbc.sp());
        EXPECT(0x5521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01D1
        gbc.setState(0x5699, 0x7f5e, 0x30f0, 0x6b47, 0xe34f, 0x439a, 0x1, 0x0);
        gbc.writeMem(0x5699, { 0xb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7f5e, gbc.sp());
        EXPECT(0x569a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01D2
        gbc.setState(0x275d, 0x25c8, 0xba10, 0xc150, 0x8ac7, 0x900f, 0x1, 0x1);
        gbc.writeMem(0x275d, { 0xb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x25c8, gbc.sp());
        EXPECT(0x275e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01D3
        gbc.setState(0x772f, 0x5fcf, 0xdaa0, 0xfc97, 0xa08, 0x6775, 0x0, 0x1);
        gbc.writeMem(0x772f, { 0xb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5fcf, gbc.sp());
        EXPECT(0x7730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01D4
        gbc.setState(0x254c, 0x8e69, 0x3310, 0x1fa4, 0x6782, 0xa669, 0x1, 0x1);
        gbc.writeMem(0x254c, { 0xb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8e69, gbc.sp());
        EXPECT(0x254d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01D5
        gbc.setState(0x2db1, 0xadd3, 0xbf40, 0x2ec5, 0xa5c6, 0x1d63, 0x1, 0x0);
        gbc.writeMem(0x2db1, { 0xb });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xadd3, gbc.sp());
        EXPECT(0x2db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01D6
        gbc.setState(0xa57, 0x19e2, 0xc030, 0xb8b1, 0x283c, 0x5001, 0x0, 0x1);
        gbc.writeMem(0xa57, { 0xb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x19e2, gbc.sp());
        EXPECT(0xa58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01D7
        gbc.setState(0x4524, 0xc715, 0x43f0, 0xb9b9, 0x4ea0, 0xd5e4, 0x0, 0x1);
        gbc.writeMem(0x4524, { 0xb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc715, gbc.sp());
        EXPECT(0x4525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01D8
        gbc.setState(0x250, 0x7616, 0xe9d0, 0x49d2, 0xbb4d, 0x7557, 0x1, 0x1);
        gbc.writeMem(0x250, { 0xb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7616, gbc.sp());
        EXPECT(0x251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01D9
        gbc.setState(0x744e, 0xf488, 0x3010, 0xfb80, 0x6453, 0x2ade, 0x0, 0x0);
        gbc.writeMem(0x744e, { 0xb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf488, gbc.sp());
        EXPECT(0x744f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01DA
        gbc.setState(0x8747, 0x5982, 0xe0d0, 0x84c5, 0x3384, 0xa9ca, 0x1, 0x1);
        gbc.writeMem(0x8747, { 0xb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5982, gbc.sp());
        EXPECT(0x8748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8747));
        // 0B 01DB
        gbc.setState(0xba52, 0x227c, 0x7810, 0x3a29, 0x57f9, 0x28e0, 0x1, 0x0);
        gbc.writeMem(0xba52, { 0xb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x227c, gbc.sp());
        EXPECT(0xba53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xba52));
        // 0B 01DC
        gbc.setState(0xc066, 0x6fac, 0xb530, 0xf695, 0xc584, 0x41dd, 0x1, 0x1);
        gbc.writeMem(0xc066, { 0xb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6fac, gbc.sp());
        EXPECT(0xc067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc066));
        // 0B 01DD
        gbc.setState(0xd175, 0x1e5b, 0x1a50, 0xd153, 0x417a, 0xf7c3, 0x0, 0x0);
        gbc.writeMem(0xd175, { 0xb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1e5b, gbc.sp());
        EXPECT(0xd176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd175));
        // 0B 01DE
        gbc.setState(0x62d, 0x4cb1, 0x7e10, 0x9a85, 0xd38f, 0xdf18, 0x1, 0x1);
        gbc.writeMem(0x62d, { 0xb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4cb1, gbc.sp());
        EXPECT(0x62e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01DF
        gbc.setState(0xbae9, 0x21b5, 0x5c70, 0x8d0d, 0xad92, 0x97c0, 0x0, 0x1);
        gbc.writeMem(0xbae9, { 0xb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x21b5, gbc.sp());
        EXPECT(0xbaea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbae9));
        // 0B 01E0
        gbc.setState(0x8692, 0x9e3e, 0xf1c0, 0xbf9a, 0x6f02, 0x60b6, 0x1, 0x1);
        gbc.writeMem(0x8692, { 0xb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9e3e, gbc.sp());
        EXPECT(0x8693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8692));
        // 0B 01E1
        gbc.setState(0xb666, 0x9d67, 0xfeb0, 0xa4b9, 0xb448, 0x58ac, 0x1, 0x1);
        gbc.writeMem(0xb666, { 0xb });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9d67, gbc.sp());
        EXPECT(0xb667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb666));
        // 0B 01E2
        gbc.setState(0x5638, 0xfaca, 0x6260, 0x1519, 0xcd47, 0xa4c8, 0x1, 0x1);
        gbc.writeMem(0x5638, { 0xb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfaca, gbc.sp());
        EXPECT(0x5639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01E3
        gbc.setState(0x9642, 0x48b6, 0x67d0, 0xbe5b, 0x83d9, 0xcd90, 0x0, 0x0);
        gbc.writeMem(0x9642, { 0xb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x48b6, gbc.sp());
        EXPECT(0x9643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9642));
        // 0B 01E4
        gbc.setState(0x4205, 0xb02d, 0x6530, 0x8ebb, 0xd733, 0xfec1, 0x1, 0x0);
        gbc.writeMem(0x4205, { 0xb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb02d, gbc.sp());
        EXPECT(0x4206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01E5
        gbc.setState(0x5873, 0x8e51, 0xd8e0, 0xb80e, 0x54f7, 0x4714, 0x0, 0x0);
        gbc.writeMem(0x5873, { 0xb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8e51, gbc.sp());
        EXPECT(0x5874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01E6
        gbc.setState(0xd24b, 0x4ed0, 0x64a0, 0x828c, 0xff6c, 0xcf69, 0x1, 0x0);
        gbc.writeMem(0xd24b, { 0xb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4ed0, gbc.sp());
        EXPECT(0xd24c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd24b));
        // 0B 01E7
        gbc.setState(0x5577, 0x843b, 0x2480, 0x627c, 0x71c6, 0xbebb, 0x1, 0x1);
        gbc.writeMem(0x5577, { 0xb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x843b, gbc.sp());
        EXPECT(0x5578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01E8
        gbc.setState(0x54ac, 0xaf97, 0x4090, 0x875a, 0x5cf0, 0xb809, 0x1, 0x0);
        gbc.writeMem(0x54ac, { 0xb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xaf97, gbc.sp());
        EXPECT(0x54ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01E9
        gbc.setState(0x3edf, 0x153a, 0x1450, 0xcdf3, 0x305b, 0xdf9, 0x1, 0x0);
        gbc.writeMem(0x3edf, { 0xb });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x153a, gbc.sp());
        EXPECT(0x3ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01EA
        gbc.setState(0xb0f, 0xdd3a, 0x69a0, 0xae84, 0x58e2, 0x433f, 0x0, 0x1);
        gbc.writeMem(0xb0f, { 0xb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdd3a, gbc.sp());
        EXPECT(0xb10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01EB
        gbc.setState(0x5b19, 0xf14a, 0x28f0, 0x91ac, 0x40b6, 0x408, 0x1, 0x0);
        gbc.writeMem(0x5b19, { 0xb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf14a, gbc.sp());
        EXPECT(0x5b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01EC
        gbc.setState(0x1f76, 0xd798, 0x9e60, 0x9174, 0x93d2, 0x44c7, 0x0, 0x0);
        gbc.writeMem(0x1f76, { 0xb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd798, gbc.sp());
        EXPECT(0x1f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01ED
        gbc.setState(0x1d3, 0x7581, 0xb870, 0x122, 0x23ff, 0x1fca, 0x1, 0x0);
        gbc.writeMem(0x1d3, { 0xb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7581, gbc.sp());
        EXPECT(0x1d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01EE
        gbc.setState(0x2bbe, 0xab1d, 0x9d90, 0x86d3, 0xd4f4, 0xf8ef, 0x1, 0x0);
        gbc.writeMem(0x2bbe, { 0xb });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xab1d, gbc.sp());
        EXPECT(0x2bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01EF
        gbc.setState(0xfdc, 0x3748, 0x16b0, 0x535c, 0x2f69, 0xc022, 0x1, 0x1);
        gbc.writeMem(0xfdc, { 0xb });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3748, gbc.sp());
        EXPECT(0xfdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01F0
        gbc.setState(0x2ddc, 0xaa5c, 0xc340, 0xd794, 0x4c7, 0xf527, 0x1, 0x0);
        gbc.writeMem(0x2ddc, { 0xb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xaa5c, gbc.sp());
        EXPECT(0x2ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01F1
        gbc.setState(0xe8e1, 0x5da8, 0x8340, 0x5181, 0xa1af, 0xbea9, 0x1, 0x0);
        gbc.writeMem(0xe8e1, { 0xb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5da8, gbc.sp());
        EXPECT(0xe8e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe8e1));
        // 0B 01F2
        gbc.setState(0xe9a3, 0xa770, 0x7510, 0x66c9, 0xcef8, 0xe315, 0x0, 0x1);
        gbc.writeMem(0xe9a3, { 0xb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa770, gbc.sp());
        EXPECT(0xe9a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe9a3));
        // 0B 01F3
        gbc.setState(0x330b, 0x3e6b, 0x94c0, 0x227c, 0xc652, 0x3373, 0x0, 0x1);
        gbc.writeMem(0x330b, { 0xb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3e6b, gbc.sp());
        EXPECT(0x330c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01F4
        gbc.setState(0x1f9d, 0xd304, 0x3060, 0x832c, 0x2a1e, 0x6e1e, 0x1, 0x0);
        gbc.writeMem(0x1f9d, { 0xb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd304, gbc.sp());
        EXPECT(0x1f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01F5
        gbc.setState(0x3043, 0x361c, 0x7f00, 0x59ce, 0xff01, 0x976b, 0x0, 0x1);
        gbc.writeMem(0x3043, { 0xb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x361c, gbc.sp());
        EXPECT(0x3044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01F6
        gbc.setState(0x2dc6, 0x1578, 0x8bc0, 0x16c, 0x774d, 0xa2c4, 0x0, 0x1);
        gbc.writeMem(0x2dc6, { 0xb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1578, gbc.sp());
        EXPECT(0x2dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01F7
        gbc.setState(0x9f6, 0xd56f, 0xdde0, 0x1b3, 0x43cf, 0x6100, 0x1, 0x0);
        gbc.writeMem(0x9f6, { 0xb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd56f, gbc.sp());
        EXPECT(0x9f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01F8
        gbc.setState(0x3713, 0x20ef, 0x8d60, 0xadbd, 0xf5a9, 0xce2b, 0x0, 0x0);
        gbc.writeMem(0x3713, { 0xb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x20ef, gbc.sp());
        EXPECT(0x3714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01F9
        gbc.setState(0x2129, 0xe96b, 0x750, 0x381d, 0xacd6, 0xd2e3, 0x1, 0x1);
        gbc.writeMem(0x2129, { 0xb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe96b, gbc.sp());
        EXPECT(0x212a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01FA
        gbc.setState(0x1a7c, 0xc60d, 0xfa00, 0x5f55, 0xf486, 0x6709, 0x0, 0x0);
        gbc.writeMem(0x1a7c, { 0xb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc60d, gbc.sp());
        EXPECT(0x1a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 01FB
        gbc.setState(0x5050, 0x376c, 0xb9f0, 0x66be, 0x40ae, 0x3873, 0x1, 0x0);
        gbc.writeMem(0x5050, { 0xb });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x376c, gbc.sp());
        EXPECT(0x5051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01FC
        gbc.setState(0x96b1, 0x2446, 0xabc0, 0x56a6, 0x60a7, 0xd8d0, 0x0, 0x1);
        gbc.writeMem(0x96b1, { 0xb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2446, gbc.sp());
        EXPECT(0x96b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x96b1));
        // 0B 01FD
        gbc.setState(0xc7d5, 0x543d, 0x80, 0x3073, 0x9ac2, 0x21b4, 0x1, 0x0);
        gbc.writeMem(0xc7d5, { 0xb });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x543d, gbc.sp());
        EXPECT(0xc7d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc7d5));
        // 0B 01FE
        gbc.setState(0x4080, 0xa423, 0x1d70, 0xe4f2, 0xe2c0, 0x1be3, 0x1, 0x1);
        gbc.writeMem(0x4080, { 0xb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa423, gbc.sp());
        EXPECT(0x4081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 01FF
        gbc.setState(0x3bfc, 0x55f8, 0x5450, 0x5e98, 0x7d29, 0xfe1d, 0x0, 0x1);
        gbc.writeMem(0x3bfc, { 0xb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x55f8, gbc.sp());
        EXPECT(0x3bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0200
        gbc.setState(0xe6e, 0xa2fd, 0xa490, 0x7f4f, 0xfa4e, 0xb4c, 0x0, 0x0);
        gbc.writeMem(0xe6e, { 0xb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa2fd, gbc.sp());
        EXPECT(0xe6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0201
        gbc.setState(0x2c56, 0xde4a, 0x6080, 0x8ed6, 0x34de, 0x3c51, 0x0, 0x0);
        gbc.writeMem(0x2c56, { 0xb });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xde4a, gbc.sp());
        EXPECT(0x2c57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0202
        gbc.setState(0xe9d7, 0x7651, 0x50e0, 0x28c3, 0xfe4d, 0x8a3a, 0x1, 0x1);
        gbc.writeMem(0xe9d7, { 0xb });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7651, gbc.sp());
        EXPECT(0xe9d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe9d7));
        // 0B 0203
        gbc.setState(0x5de5, 0x3583, 0x5eb0, 0xa6b5, 0xa3bc, 0x5eba, 0x1, 0x1);
        gbc.writeMem(0x5de5, { 0xb });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3583, gbc.sp());
        EXPECT(0x5de6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0204
        gbc.setState(0x9115, 0x1556, 0xf2c0, 0xc0d8, 0xeb8f, 0xcc3c, 0x0, 0x0);
        gbc.writeMem(0x9115, { 0xb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1556, gbc.sp());
        EXPECT(0x9116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9115));
        // 0B 0205
        gbc.setState(0x5de1, 0xb496, 0x4f10, 0x90ca, 0xbf2c, 0xa692, 0x1, 0x1);
        gbc.writeMem(0x5de1, { 0xb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb496, gbc.sp());
        EXPECT(0x5de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0206
        gbc.setState(0xc504, 0x5c8c, 0x2260, 0x2b1e, 0xbee5, 0xb57b, 0x1, 0x0);
        gbc.writeMem(0xc504, { 0xb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5c8c, gbc.sp());
        EXPECT(0xc505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc504));
        // 0B 0207
        gbc.setState(0x9990, 0xa472, 0xb6e0, 0xe48c, 0x43bf, 0xda2c, 0x1, 0x1);
        gbc.writeMem(0x9990, { 0xb });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa472, gbc.sp());
        EXPECT(0x9991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9990));
        // 0B 0208
        gbc.setState(0x127b, 0xf21c, 0x3fe0, 0xb7c4, 0xf956, 0x92bb, 0x0, 0x1);
        gbc.writeMem(0x127b, { 0xb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf21c, gbc.sp());
        EXPECT(0x127c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0209
        gbc.setState(0x3288, 0xa25e, 0x1690, 0xc2b1, 0xa507, 0x9e18, 0x0, 0x1);
        gbc.writeMem(0x3288, { 0xb });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa25e, gbc.sp());
        EXPECT(0x3289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 020A
        gbc.setState(0x8925, 0x9ae8, 0x200, 0xa9a6, 0x6a2c, 0x37b7, 0x1, 0x1);
        gbc.writeMem(0x8925, { 0xb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9ae8, gbc.sp());
        EXPECT(0x8926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8925));
        // 0B 020B
        gbc.setState(0x57eb, 0xb5b8, 0x8400, 0xeedf, 0x2241, 0x61a4, 0x0, 0x1);
        gbc.writeMem(0x57eb, { 0xb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb5b8, gbc.sp());
        EXPECT(0x57ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 020C
        gbc.setState(0xae72, 0xed28, 0xb590, 0x664b, 0x9169, 0x1ba3, 0x1, 0x0);
        gbc.writeMem(0xae72, { 0xb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xed28, gbc.sp());
        EXPECT(0xae73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xae72));
        // 0B 020D
        gbc.setState(0x3c6f, 0xd18, 0x12e0, 0x3798, 0x5d8e, 0x4790, 0x0, 0x1);
        gbc.writeMem(0x3c6f, { 0xb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd18, gbc.sp());
        EXPECT(0x3c70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 020E
        gbc.setState(0x8aff, 0xbfa1, 0xcc30, 0xed3b, 0x14a9, 0x8ca4, 0x1, 0x0);
        gbc.writeMem(0x8aff, { 0xb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xbfa1, gbc.sp());
        EXPECT(0x8b00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8aff));
        // 0B 020F
        gbc.setState(0xceb0, 0x3986, 0x27c0, 0x52de, 0x4da6, 0x2c78, 0x1, 0x1);
        gbc.writeMem(0xceb0, { 0xb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3986, gbc.sp());
        EXPECT(0xceb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xceb0));
        // 0B 0210
        gbc.setState(0x5b77, 0xb0cb, 0x2b0, 0x4949, 0x6866, 0xac31, 0x1, 0x0);
        gbc.writeMem(0x5b77, { 0xb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb0cb, gbc.sp());
        EXPECT(0x5b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0211
        gbc.setState(0xeb96, 0x94a5, 0x8830, 0x75dd, 0xe7a, 0x9142, 0x0, 0x1);
        gbc.writeMem(0xeb96, { 0xb });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x94a5, gbc.sp());
        EXPECT(0xeb97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xeb96));
        // 0B 0212
        gbc.setState(0x9a5a, 0x72e1, 0x38d0, 0x5c08, 0x707f, 0x33da, 0x1, 0x1);
        gbc.writeMem(0x9a5a, { 0xb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x72e1, gbc.sp());
        EXPECT(0x9a5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9a5a));
        // 0B 0213
        gbc.setState(0x1f0, 0x52c0, 0x38d0, 0x858e, 0xad10, 0xac7c, 0x1, 0x0);
        gbc.writeMem(0x1f0, { 0xb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x52c0, gbc.sp());
        EXPECT(0x1f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0214
        gbc.setState(0xbdaf, 0x3f27, 0x7830, 0xc1d3, 0x119f, 0xd6e9, 0x1, 0x1);
        gbc.writeMem(0xbdaf, { 0xb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3f27, gbc.sp());
        EXPECT(0xbdb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbdaf));
        // 0B 0215
        gbc.setState(0xa9c8, 0xc93e, 0x3820, 0xb7c8, 0xd2d6, 0x7ff3, 0x1, 0x1);
        gbc.writeMem(0xa9c8, { 0xb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc93e, gbc.sp());
        EXPECT(0xa9c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa9c8));
        // 0B 0216
        gbc.setState(0xb093, 0x6ebe, 0xe3f0, 0xb8fc, 0xca6f, 0x801, 0x1, 0x1);
        gbc.writeMem(0xb093, { 0xb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6ebe, gbc.sp());
        EXPECT(0xb094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb093));
        // 0B 0217
        gbc.setState(0x8a81, 0xf57, 0xf400, 0x3fa4, 0x61c, 0x193a, 0x0, 0x0);
        gbc.writeMem(0x8a81, { 0xb });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf57, gbc.sp());
        EXPECT(0x8a82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8a81));
        // 0B 0218
        gbc.setState(0x406c, 0x1fd0, 0x2bd0, 0x441d, 0x644, 0x7412, 0x1, 0x0);
        gbc.writeMem(0x406c, { 0xb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1fd0, gbc.sp());
        EXPECT(0x406d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0219
        gbc.setState(0xe368, 0x91ac, 0xb1e0, 0x5582, 0x79b2, 0x27a8, 0x0, 0x0);
        gbc.writeMem(0xe368, { 0xb });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x91ac, gbc.sp());
        EXPECT(0xe369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe368));
        // 0B 021B
        gbc.setState(0xc6a4, 0x7828, 0xf800, 0x8d75, 0xf43e, 0x402d, 0x1, 0x1);
        gbc.writeMem(0xc6a4, { 0xb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7828, gbc.sp());
        EXPECT(0xc6a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc6a4));
        // 0B 021C
        gbc.setState(0xe2da, 0x5e6b, 0x68d0, 0x8b87, 0x1fc9, 0xa42, 0x1, 0x0);
        gbc.writeMem(0xe2da, { 0xb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5e6b, gbc.sp());
        EXPECT(0xe2db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe2da));
        // 0B 021D
        gbc.setState(0x133, 0x2f1a, 0x7cb0, 0x1ac2, 0x539f, 0x32ca, 0x1, 0x1);
        gbc.writeMem(0x133, { 0xb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2f1a, gbc.sp());
        EXPECT(0x134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 021E
        gbc.setState(0x4c3a, 0x43b3, 0xe900, 0x8382, 0xc8a3, 0xf465, 0x1, 0x0);
        gbc.writeMem(0x4c3a, { 0xb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x43b3, gbc.sp());
        EXPECT(0x4c3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 021F
        gbc.setState(0xee7e, 0xfed4, 0xc870, 0x8181, 0x156e, 0xc2bf, 0x0, 0x1);
        gbc.writeMem(0xee7e, { 0xb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfed4, gbc.sp());
        EXPECT(0xee7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xee7e));
        // 0B 0220
        gbc.setState(0x2f14, 0x7840, 0xabf0, 0xabae, 0x15b8, 0x676e, 0x0, 0x1);
        gbc.writeMem(0x2f14, { 0xb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7840, gbc.sp());
        EXPECT(0x2f15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0221
        gbc.setState(0x4ba6, 0xe624, 0xa790, 0x2b4c, 0xc5f3, 0xd84, 0x0, 0x1);
        gbc.writeMem(0x4ba6, { 0xb });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe624, gbc.sp());
        EXPECT(0x4ba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0222
        gbc.setState(0x9b93, 0x5f30, 0x27b0, 0xc898, 0x1ab7, 0xd721, 0x0, 0x1);
        gbc.writeMem(0x9b93, { 0xb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5f30, gbc.sp());
        EXPECT(0x9b94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9b93));
        // 0B 0223
        gbc.setState(0x86c9, 0x513b, 0x97c0, 0x3929, 0x73d6, 0xf16a, 0x0, 0x0);
        gbc.writeMem(0x86c9, { 0xb });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x513b, gbc.sp());
        EXPECT(0x86ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x86c9));
        // 0B 0224
        gbc.setState(0x38a3, 0x419d, 0xa0, 0xd721, 0x7e94, 0x8cc0, 0x0, 0x0);
        gbc.writeMem(0x38a3, { 0xb });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x419d, gbc.sp());
        EXPECT(0x38a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0225
        gbc.setState(0x6ac9, 0xcc63, 0xeb50, 0x1a02, 0xd2d5, 0xd22f, 0x1, 0x1);
        gbc.writeMem(0x6ac9, { 0xb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xcc63, gbc.sp());
        EXPECT(0x6aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0226
        gbc.setState(0xe8fa, 0xf12b, 0xb2a0, 0xdfa6, 0x9f3a, 0xf923, 0x1, 0x0);
        gbc.writeMem(0xe8fa, { 0xb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf12b, gbc.sp());
        EXPECT(0xe8fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe8fa));
        // 0B 0227
        gbc.setState(0x81f5, 0x7350, 0x5500, 0xfe2b, 0x482c, 0x3136, 0x1, 0x0);
        gbc.writeMem(0x81f5, { 0xb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7350, gbc.sp());
        EXPECT(0x81f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x81f5));
        // 0B 0228
        gbc.setState(0x6f2c, 0x5999, 0xd3f0, 0x80fb, 0x892b, 0x3f21, 0x1, 0x1);
        gbc.writeMem(0x6f2c, { 0xb });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5999, gbc.sp());
        EXPECT(0x6f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0229
        gbc.setState(0x68f1, 0x8a27, 0x87c0, 0x3fa7, 0xa049, 0x8f9, 0x0, 0x1);
        gbc.writeMem(0x68f1, { 0xb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8a27, gbc.sp());
        EXPECT(0x68f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 022A
        gbc.setState(0x27de, 0x3e7e, 0x8260, 0x1c26, 0x5330, 0x31ba, 0x1, 0x1);
        gbc.writeMem(0x27de, { 0xb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3e7e, gbc.sp());
        EXPECT(0x27df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 022B
        gbc.setState(0x6c2c, 0xe9b5, 0x8320, 0x9371, 0x507e, 0xc1b8, 0x0, 0x1);
        gbc.writeMem(0x6c2c, { 0xb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe9b5, gbc.sp());
        EXPECT(0x6c2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 022C
        gbc.setState(0x353b, 0x354, 0x42f0, 0x1d7d, 0xfd22, 0x98a4, 0x1, 0x1);
        gbc.writeMem(0x353b, { 0xb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x354, gbc.sp());
        EXPECT(0x353c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 022D
        gbc.setState(0xe3ed, 0xfc57, 0xe880, 0x375f, 0x294e, 0x3e91, 0x0, 0x1);
        gbc.writeMem(0xe3ed, { 0xb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xfc57, gbc.sp());
        EXPECT(0xe3ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe3ed));
        // 0B 022E
        gbc.setState(0x6a8c, 0x44eb, 0xcc10, 0x4efd, 0x43d3, 0xa176, 0x1, 0x1);
        gbc.writeMem(0x6a8c, { 0xb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x44eb, gbc.sp());
        EXPECT(0x6a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 022F
        gbc.setState(0x1163, 0xd9c7, 0x2620, 0xc5a7, 0x1cf4, 0xf124, 0x1, 0x1);
        gbc.writeMem(0x1163, { 0xb });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd9c7, gbc.sp());
        EXPECT(0x1164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0230
        gbc.setState(0x2c5d, 0xbdcd, 0x3340, 0xc21d, 0x9140, 0x2ce2, 0x1, 0x1);
        gbc.writeMem(0x2c5d, { 0xb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xbdcd, gbc.sp());
        EXPECT(0x2c5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0231
        gbc.setState(0xdb7d, 0x48b3, 0x2fa0, 0xec70, 0x4076, 0x809f, 0x1, 0x1);
        gbc.writeMem(0xdb7d, { 0xb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x48b3, gbc.sp());
        EXPECT(0xdb7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xdb7d));
        // 0B 0232
        gbc.setState(0xee31, 0x4c55, 0x9c80, 0x9bea, 0xcdbc, 0xcef1, 0x0, 0x1);
        gbc.writeMem(0xee31, { 0xb });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4c55, gbc.sp());
        EXPECT(0xee32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xee31));
        // 0B 0233
        gbc.setState(0x2e13, 0x21e1, 0x88d0, 0x2a1b, 0x1bd0, 0x4188, 0x0, 0x1);
        gbc.writeMem(0x2e13, { 0xb });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x21e1, gbc.sp());
        EXPECT(0x2e14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0234
        gbc.setState(0xc86c, 0xa571, 0x9200, 0x7a64, 0x47db, 0x78d5, 0x1, 0x0);
        gbc.writeMem(0xc86c, { 0xb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa571, gbc.sp());
        EXPECT(0xc86d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc86c));
        // 0B 0235
        gbc.setState(0x63ee, 0x25e3, 0x6e10, 0xf12b, 0xf9e0, 0xfb5, 0x0, 0x0);
        gbc.writeMem(0x63ee, { 0xb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x25e3, gbc.sp());
        EXPECT(0x63ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0236
        gbc.setState(0x44b0, 0x5341, 0x2cc0, 0x27ff, 0xdcba, 0x1af, 0x0, 0x0);
        gbc.writeMem(0x44b0, { 0xb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5341, gbc.sp());
        EXPECT(0x44b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0237
        gbc.setState(0x1d07, 0xce48, 0x4050, 0x6013, 0x5349, 0x5511, 0x1, 0x0);
        gbc.writeMem(0x1d07, { 0xb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xce48, gbc.sp());
        EXPECT(0x1d08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0238
        gbc.setState(0x4673, 0x46b6, 0x2810, 0x20b8, 0x3fd1, 0xd93f, 0x1, 0x1);
        gbc.writeMem(0x4673, { 0xb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x46b6, gbc.sp());
        EXPECT(0x4674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0239
        gbc.setState(0x10b3, 0x9e70, 0x9930, 0x5e18, 0x1ee1, 0xf664, 0x1, 0x1);
        gbc.writeMem(0x10b3, { 0xb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9e70, gbc.sp());
        EXPECT(0x10b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 023A
        gbc.setState(0x426, 0xeb7e, 0x2870, 0x8a33, 0xc7e1, 0xf9b, 0x0, 0x1);
        gbc.writeMem(0x426, { 0xb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xeb7e, gbc.sp());
        EXPECT(0x427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 023B
        gbc.setState(0x851f, 0x4dc3, 0x6e10, 0x45bc, 0x7523, 0x1896, 0x0, 0x0);
        gbc.writeMem(0x851f, { 0xb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4dc3, gbc.sp());
        EXPECT(0x8520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x851f));
        // 0B 023C
        gbc.setState(0x3318, 0xd44a, 0xfd60, 0x9eca, 0xd8a9, 0x8513, 0x1, 0x1);
        gbc.writeMem(0x3318, { 0xb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd44a, gbc.sp());
        EXPECT(0x3319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 023D
        gbc.setState(0x5632, 0x63b8, 0x69f0, 0x26aa, 0x6ac5, 0xe696, 0x1, 0x1);
        gbc.writeMem(0x5632, { 0xb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x63b8, gbc.sp());
        EXPECT(0x5633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 023E
        gbc.setState(0x5245, 0x8830, 0x8e0, 0x7710, 0x28ea, 0x5c1f, 0x1, 0x1);
        gbc.writeMem(0x5245, { 0xb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8830, gbc.sp());
        EXPECT(0x5246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 023F
        gbc.setState(0x4350, 0xc991, 0x7860, 0x3cf0, 0x3981, 0x34c9, 0x1, 0x0);
        gbc.writeMem(0x4350, { 0xb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc991, gbc.sp());
        EXPECT(0x4351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0240
        gbc.setState(0x5c6b, 0xf13e, 0x6740, 0x8e8f, 0xe2d9, 0x1367, 0x0, 0x1);
        gbc.writeMem(0x5c6b, { 0xb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf13e, gbc.sp());
        EXPECT(0x5c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0241
        gbc.setState(0xe920, 0xe582, 0x7510, 0x1d6b, 0x9034, 0x1ae4, 0x1, 0x1);
        gbc.writeMem(0xe920, { 0xb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe582, gbc.sp());
        EXPECT(0xe921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe920));
        // 0B 0242
        gbc.setState(0x16f, 0x25e7, 0xd6e0, 0x35e4, 0x6b00, 0xa357, 0x0, 0x1);
        gbc.writeMem(0x16f, { 0xb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x25e7, gbc.sp());
        EXPECT(0x170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0243
        gbc.setState(0xca03, 0x300f, 0x5790, 0xe338, 0xf9e2, 0x5883, 0x0, 0x1);
        gbc.writeMem(0xca03, { 0xb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x300f, gbc.sp());
        EXPECT(0xca04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xca03));
        // 0B 0244
        gbc.setState(0x600, 0x84a5, 0x8e50, 0x60c6, 0x217b, 0xa12f, 0x1, 0x1);
        gbc.writeMem(0x600, { 0xb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x84a5, gbc.sp());
        EXPECT(0x601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0245
        gbc.setState(0x920c, 0xab89, 0x25a0, 0x4fae, 0xd0cb, 0x9509, 0x1, 0x1);
        gbc.writeMem(0x920c, { 0xb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xab89, gbc.sp());
        EXPECT(0x920d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x920c));
        // 0B 0246
        gbc.setState(0x42e3, 0x525c, 0xc100, 0xa8c7, 0x8b03, 0xae, 0x0, 0x0);
        gbc.writeMem(0x42e3, { 0xb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x525c, gbc.sp());
        EXPECT(0x42e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0247
        gbc.setState(0xdc11, 0xcb45, 0xe820, 0xa53a, 0x7e6a, 0xa0af, 0x1, 0x0);
        gbc.writeMem(0xdc11, { 0xb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcb45, gbc.sp());
        EXPECT(0xdc12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xdc11));
        // 0B 0248
        gbc.setState(0xca98, 0x178c, 0x62c0, 0x812e, 0x9b3d, 0x5925, 0x0, 0x0);
        gbc.writeMem(0xca98, { 0xb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x178c, gbc.sp());
        EXPECT(0xca99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xca98));
        // 0B 0249
        gbc.setState(0x6647, 0xcad2, 0x68a0, 0x25df, 0x2fc4, 0x2118, 0x0, 0x1);
        gbc.writeMem(0x6647, { 0xb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xcad2, gbc.sp());
        EXPECT(0x6648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 024C
        gbc.setState(0x8ceb, 0x9eed, 0xcb80, 0xf00c, 0x3377, 0x6647, 0x0, 0x0);
        gbc.writeMem(0x8ceb, { 0xb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9eed, gbc.sp());
        EXPECT(0x8cec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8ceb));
        // 0B 024D
        gbc.setState(0xa6c1, 0x339c, 0xace0, 0xa02, 0x1b91, 0xe3a4, 0x1, 0x0);
        gbc.writeMem(0xa6c1, { 0xb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x339c, gbc.sp());
        EXPECT(0xa6c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa6c1));
        // 0B 024E
        gbc.setState(0x238f, 0xa4e6, 0x58a0, 0xe1d7, 0x6a18, 0xe3cc, 0x1, 0x1);
        gbc.writeMem(0x238f, { 0xb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa4e6, gbc.sp());
        EXPECT(0x2390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 024F
        gbc.setState(0x8335, 0x405d, 0xfc10, 0xf1b5, 0xbf98, 0xac82, 0x0, 0x1);
        gbc.writeMem(0x8335, { 0xb });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x405d, gbc.sp());
        EXPECT(0x8336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8335));
        // 0B 0250
        gbc.setState(0x77a8, 0x5625, 0xd250, 0x22c7, 0x89b9, 0x4816, 0x1, 0x1);
        gbc.writeMem(0x77a8, { 0xb });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5625, gbc.sp());
        EXPECT(0x77a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0251
        gbc.setState(0x46a8, 0x45a4, 0x66e0, 0x235f, 0x9234, 0x8c8f, 0x1, 0x0);
        gbc.writeMem(0x46a8, { 0xb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x45a4, gbc.sp());
        EXPECT(0x46a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0253
        gbc.setState(0xa2b6, 0xf840, 0xe610, 0xb49a, 0x514, 0x9cff, 0x1, 0x1);
        gbc.writeMem(0xa2b6, { 0xb });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf840, gbc.sp());
        EXPECT(0xa2b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa2b6));
        // 0B 0254
        gbc.setState(0xad67, 0xae19, 0x1970, 0xb82d, 0xde38, 0xa5bc, 0x1, 0x0);
        gbc.writeMem(0xad67, { 0xb });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xae19, gbc.sp());
        EXPECT(0xad68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xad67));
        // 0B 0255
        gbc.setState(0x416d, 0xc247, 0x7fd0, 0x7182, 0xdb6, 0xd4b, 0x0, 0x1);
        gbc.writeMem(0x416d, { 0xb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc247, gbc.sp());
        EXPECT(0x416e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0256
        gbc.setState(0xa87b, 0xe458, 0x2c60, 0xe9d7, 0x5d92, 0x7d9c, 0x1, 0x0);
        gbc.writeMem(0xa87b, { 0xb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe458, gbc.sp());
        EXPECT(0xa87c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa87b));
        // 0B 0257
        gbc.setState(0x1fc8, 0x5021, 0x10b0, 0xcefb, 0x22bd, 0x885f, 0x1, 0x0);
        gbc.writeMem(0x1fc8, { 0xb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5021, gbc.sp());
        EXPECT(0x1fc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0258
        gbc.setState(0x28e8, 0x96eb, 0x6b10, 0xc463, 0xd141, 0x37ea, 0x1, 0x0);
        gbc.writeMem(0x28e8, { 0xb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x96eb, gbc.sp());
        EXPECT(0x28e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0259
        gbc.setState(0x8c9b, 0xde90, 0xf340, 0x40ec, 0x2eda, 0xce4, 0x0, 0x1);
        gbc.writeMem(0x8c9b, { 0xb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xde90, gbc.sp());
        EXPECT(0x8c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8c9b));
        // 0B 025A
        gbc.setState(0x9433, 0x491a, 0x1830, 0xd53f, 0x7121, 0x7cee, 0x1, 0x1);
        gbc.writeMem(0x9433, { 0xb });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x491a, gbc.sp());
        EXPECT(0x9434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9433));
        // 0B 025B
        gbc.setState(0xab0, 0x5df1, 0x2a40, 0x8951, 0xe7b3, 0x7080, 0x0, 0x0);
        gbc.writeMem(0xab0, { 0xb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5df1, gbc.sp());
        EXPECT(0xab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 025C
        gbc.setState(0xc103, 0xf916, 0x52f0, 0xde20, 0xb7d2, 0xc9c9, 0x1, 0x0);
        gbc.writeMem(0xc103, { 0xb });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf916, gbc.sp());
        EXPECT(0xc104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc103));
        // 0B 025D
        gbc.setState(0x81dc, 0x1df0, 0xd510, 0xba42, 0x4297, 0xae5d, 0x1, 0x1);
        gbc.writeMem(0x81dc, { 0xb });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1df0, gbc.sp());
        EXPECT(0x81dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x81dc));
        // 0B 025E
        gbc.setState(0x8402, 0xb022, 0xe440, 0xe4aa, 0xe515, 0x4575, 0x0, 0x1);
        gbc.writeMem(0x8402, { 0xb });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb022, gbc.sp());
        EXPECT(0x8403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8402));
        // 0B 025F
        gbc.setState(0x4f62, 0x1cad, 0x1d60, 0x3ed6, 0xb64d, 0x5fcc, 0x1, 0x0);
        gbc.writeMem(0x4f62, { 0xb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1cad, gbc.sp());
        EXPECT(0x4f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0260
        gbc.setState(0xbb1d, 0xbcdc, 0xa5f0, 0x7020, 0xbffe, 0xb3a, 0x1, 0x0);
        gbc.writeMem(0xbb1d, { 0xb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xbcdc, gbc.sp());
        EXPECT(0xbb1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbb1d));
        // 0B 0261
        gbc.setState(0x1b5c, 0x551a, 0xde50, 0xef84, 0xfe6a, 0x2b77, 0x0, 0x1);
        gbc.writeMem(0x1b5c, { 0xb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x551a, gbc.sp());
        EXPECT(0x1b5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0262
        gbc.setState(0xc82b, 0x8ed5, 0x73f0, 0xbbf0, 0xb589, 0xc9a7, 0x0, 0x1);
        gbc.writeMem(0xc82b, { 0xb });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8ed5, gbc.sp());
        EXPECT(0xc82c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc82b));
        // 0B 0263
        gbc.setState(0x17ae, 0x9f04, 0x66d0, 0x13bd, 0x3c56, 0x3730, 0x0, 0x1);
        gbc.writeMem(0x17ae, { 0xb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9f04, gbc.sp());
        EXPECT(0x17af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0264
        gbc.setState(0x5b34, 0xa813, 0x9300, 0xe632, 0x20a6, 0x86b8, 0x1, 0x1);
        gbc.writeMem(0x5b34, { 0xb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa813, gbc.sp());
        EXPECT(0x5b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0265
        gbc.setState(0x28cd, 0x9c76, 0x64f0, 0x2746, 0x88d1, 0x868e, 0x0, 0x1);
        gbc.writeMem(0x28cd, { 0xb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9c76, gbc.sp());
        EXPECT(0x28ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0266
        gbc.setState(0xdd18, 0xcd23, 0xcb30, 0x3042, 0xe1ab, 0xa9ce, 0x0, 0x1);
        gbc.writeMem(0xdd18, { 0xb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xcd23, gbc.sp());
        EXPECT(0xdd19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xdd18));
        // 0B 0267
        gbc.setState(0xea26, 0x79ad, 0x71e0, 0xf50a, 0x6b50, 0x8c8e, 0x1, 0x0);
        gbc.writeMem(0xea26, { 0xb });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x79ad, gbc.sp());
        EXPECT(0xea27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xea26));
        // 0B 0268
        gbc.setState(0x7f2f, 0x4b10, 0x93a0, 0x3649, 0xa09f, 0x2277, 0x0, 0x1);
        gbc.writeMem(0x7f2f, { 0xb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4b10, gbc.sp());
        EXPECT(0x7f30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0269
        gbc.setState(0x86fd, 0x77cb, 0x16e0, 0xe742, 0xfb60, 0xcfa3, 0x0, 0x1);
        gbc.writeMem(0x86fd, { 0xb });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x77cb, gbc.sp());
        EXPECT(0x86fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x86fd));
        // 0B 026A
        gbc.setState(0x2618, 0xcc95, 0x82f0, 0x9d6a, 0xd9f5, 0xd867, 0x0, 0x0);
        gbc.writeMem(0x2618, { 0xb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xcc95, gbc.sp());
        EXPECT(0x2619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 026B
        gbc.setState(0x27dc, 0x929e, 0xc140, 0x11a3, 0xe6ba, 0xca9c, 0x1, 0x1);
        gbc.writeMem(0x27dc, { 0xb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x929e, gbc.sp());
        EXPECT(0x27dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 026D
        gbc.setState(0x7740, 0x40dc, 0x6a90, 0xc4d3, 0x9cad, 0xe81d, 0x0, 0x0);
        gbc.writeMem(0x7740, { 0xb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x40dc, gbc.sp());
        EXPECT(0x7741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 026E
        gbc.setState(0xd14d, 0xd37a, 0x480, 0xf41c, 0x8bda, 0x26a, 0x0, 0x0);
        gbc.writeMem(0xd14d, { 0xb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd37a, gbc.sp());
        EXPECT(0xd14e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd14d));
        // 0B 026F
        gbc.setState(0x73db, 0xede2, 0x4690, 0x3aed, 0xb744, 0xbfa5, 0x0, 0x1);
        gbc.writeMem(0x73db, { 0xb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xede2, gbc.sp());
        EXPECT(0x73dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0270
        gbc.setState(0xa84a, 0x333a, 0x8920, 0x9b72, 0xabc9, 0xefd5, 0x0, 0x1);
        gbc.writeMem(0xa84a, { 0xb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x333a, gbc.sp());
        EXPECT(0xa84b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa84a));
        // 0B 0271
        gbc.setState(0x32c, 0xaaf6, 0xb4a0, 0xae46, 0x78c, 0xf7b2, 0x0, 0x0);
        gbc.writeMem(0x32c, { 0xb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xaaf6, gbc.sp());
        EXPECT(0x32d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0272
        gbc.setState(0x4cc2, 0x242e, 0x79d0, 0xc5f1, 0x93b5, 0x7d22, 0x0, 0x0);
        gbc.writeMem(0x4cc2, { 0xb });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x242e, gbc.sp());
        EXPECT(0x4cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0273
        gbc.setState(0xdfe3, 0xaa1, 0x1b70, 0xa63, 0x54ed, 0x4111, 0x0, 0x1);
        gbc.writeMem(0xdfe3, { 0xb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xaa1, gbc.sp());
        EXPECT(0xdfe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xdfe3));
        // 0B 0274
        gbc.setState(0x5168, 0xff63, 0x82b0, 0x7f59, 0x8653, 0x5696, 0x1, 0x1);
        gbc.writeMem(0x5168, { 0xb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xff63, gbc.sp());
        EXPECT(0x5169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0276
        gbc.setState(0xbdcd, 0x4427, 0x6500, 0x1485, 0xde3a, 0xfdc4, 0x1, 0x1);
        gbc.writeMem(0xbdcd, { 0xb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4427, gbc.sp());
        EXPECT(0xbdce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbdcd));
        // 0B 0277
        gbc.setState(0xb7cf, 0x1d7, 0x760, 0xe0e9, 0xe5e7, 0x3880, 0x1, 0x0);
        gbc.writeMem(0xb7cf, { 0xb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1d7, gbc.sp());
        EXPECT(0xb7d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb7cf));
        // 0B 0278
        gbc.setState(0xdc33, 0x9110, 0x6430, 0x52e6, 0xd625, 0xd780, 0x0, 0x0);
        gbc.writeMem(0xdc33, { 0xb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9110, gbc.sp());
        EXPECT(0xdc34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xdc33));
        // 0B 0279
        gbc.setState(0x4c36, 0x6840, 0x8a90, 0x3565, 0xdf2, 0x525d, 0x0, 0x0);
        gbc.writeMem(0x4c36, { 0xb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6840, gbc.sp());
        EXPECT(0x4c37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 027A
        gbc.setState(0xae5a, 0x75a9, 0x21c0, 0x6cbd, 0xec69, 0x883a, 0x0, 0x1);
        gbc.writeMem(0xae5a, { 0xb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x75a9, gbc.sp());
        EXPECT(0xae5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xae5a));
        // 0B 027B
        gbc.setState(0x1cf4, 0xd504, 0xc270, 0x67aa, 0xe984, 0x3377, 0x0, 0x1);
        gbc.writeMem(0x1cf4, { 0xb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd504, gbc.sp());
        EXPECT(0x1cf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 027C
        gbc.setState(0xb12b, 0x7bc0, 0xbe00, 0x4eff, 0x50e3, 0x3799, 0x1, 0x1);
        gbc.writeMem(0xb12b, { 0xb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7bc0, gbc.sp());
        EXPECT(0xb12c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb12b));
        // 0B 027D
        gbc.setState(0x624e, 0xb262, 0xe990, 0x6337, 0xa934, 0x416, 0x0, 0x0);
        gbc.writeMem(0x624e, { 0xb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb262, gbc.sp());
        EXPECT(0x624f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 027E
        gbc.setState(0xb7a, 0xda75, 0x60f0, 0x91bc, 0x52ab, 0x530f, 0x1, 0x1);
        gbc.writeMem(0xb7a, { 0xb });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xda75, gbc.sp());
        EXPECT(0xb7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 027F
        gbc.setState(0x8efb, 0xbee2, 0xfff0, 0xf65e, 0xdfa4, 0xaf64, 0x1, 0x0);
        gbc.writeMem(0x8efb, { 0xb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xbee2, gbc.sp());
        EXPECT(0x8efc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8efb));
        // 0B 0280
        gbc.setState(0x98f0, 0x25d8, 0x7fd0, 0x6e8e, 0x59c3, 0xdcd4, 0x1, 0x0);
        gbc.writeMem(0x98f0, { 0xb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x25d8, gbc.sp());
        EXPECT(0x98f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x98f0));
        // 0B 0281
        gbc.setState(0x558c, 0xcb0e, 0x1d80, 0xf6ad, 0xf7a2, 0xef7a, 0x0, 0x1);
        gbc.writeMem(0x558c, { 0xb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xcb0e, gbc.sp());
        EXPECT(0x558d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0282
        gbc.setState(0xe8dc, 0x55bc, 0x9b00, 0x4d57, 0xa981, 0xf14a, 0x0, 0x1);
        gbc.writeMem(0xe8dc, { 0xb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x55bc, gbc.sp());
        EXPECT(0xe8dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe8dc));
        // 0B 0283
        gbc.setState(0xe982, 0x48fb, 0x9730, 0x57ea, 0x6b09, 0x6bc2, 0x0, 0x0);
        gbc.writeMem(0xe982, { 0xb });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x48fb, gbc.sp());
        EXPECT(0xe983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe982));
        // 0B 0284
        gbc.setState(0x2211, 0x5dd4, 0x1630, 0x8003, 0xb7c9, 0x1647, 0x0, 0x0);
        gbc.writeMem(0x2211, { 0xb });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5dd4, gbc.sp());
        EXPECT(0x2212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0285
        gbc.setState(0x6ad6, 0x315e, 0x33f0, 0xd38d, 0x4c22, 0x57a2, 0x1, 0x1);
        gbc.writeMem(0x6ad6, { 0xb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x315e, gbc.sp());
        EXPECT(0x6ad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0286
        gbc.setState(0x95de, 0xddf7, 0xb970, 0xef0a, 0x8f0d, 0x66e8, 0x1, 0x0);
        gbc.writeMem(0x95de, { 0xb });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xddf7, gbc.sp());
        EXPECT(0x95df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x95de));
        // 0B 0287
        gbc.setState(0x2bc4, 0xb92c, 0xd190, 0x61ba, 0xd4ca, 0x566, 0x0, 0x0);
        gbc.writeMem(0x2bc4, { 0xb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb92c, gbc.sp());
        EXPECT(0x2bc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0288
        gbc.setState(0xd236, 0xd5a, 0x58d0, 0x40d2, 0x598c, 0x75bb, 0x0, 0x1);
        gbc.writeMem(0xd236, { 0xb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd5a, gbc.sp());
        EXPECT(0xd237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd236));
        // 0B 0289
        gbc.setState(0x9a6d, 0x27f0, 0xe530, 0x3cd3, 0x3e2e, 0xec17, 0x1, 0x1);
        gbc.writeMem(0x9a6d, { 0xb });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x27f0, gbc.sp());
        EXPECT(0x9a6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9a6d));
        // 0B 028A
        gbc.setState(0x8abe, 0xde68, 0xa4c0, 0xa359, 0xefb, 0x1760, 0x1, 0x1);
        gbc.writeMem(0x8abe, { 0xb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xde68, gbc.sp());
        EXPECT(0x8abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8abe));
        // 0B 028B
        gbc.setState(0x310e, 0x8cff, 0x27a0, 0xfd93, 0xd396, 0x8519, 0x1, 0x0);
        gbc.writeMem(0x310e, { 0xb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8cff, gbc.sp());
        EXPECT(0x310f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 028C
        gbc.setState(0x266a, 0xa214, 0x6160, 0x6d9, 0x221f, 0xd08, 0x0, 0x0);
        gbc.writeMem(0x266a, { 0xb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa214, gbc.sp());
        EXPECT(0x266b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 028D
        gbc.setState(0x195d, 0x12d3, 0x0, 0xc95, 0x6564, 0x3c41, 0x0, 0x0);
        gbc.writeMem(0x195d, { 0xb });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x12d3, gbc.sp());
        EXPECT(0x195e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 028E
        gbc.setState(0x8d2b, 0x4b23, 0x64d0, 0xd693, 0x925f, 0x6bf0, 0x0, 0x0);
        gbc.writeMem(0x8d2b, { 0xb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4b23, gbc.sp());
        EXPECT(0x8d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8d2b));
        // 0B 028F
        gbc.setState(0xce9f, 0x9da, 0xf290, 0xcb23, 0xc67b, 0x7791, 0x1, 0x0);
        gbc.writeMem(0xce9f, { 0xb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9da, gbc.sp());
        EXPECT(0xcea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xce9f));
        // 0B 0290
        gbc.setState(0x6a8e, 0x8261, 0x2370, 0x8cb4, 0xb6e3, 0xf8bc, 0x1, 0x1);
        gbc.writeMem(0x6a8e, { 0xb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8261, gbc.sp());
        EXPECT(0x6a8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0291
        gbc.setState(0x4407, 0xd9f9, 0x53f0, 0xaf2b, 0x7c2a, 0xf13f, 0x0, 0x0);
        gbc.writeMem(0x4407, { 0xb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd9f9, gbc.sp());
        EXPECT(0x4408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0292
        gbc.setState(0x6298, 0x950e, 0x3870, 0x1224, 0x8c1c, 0x1727, 0x0, 0x0);
        gbc.writeMem(0x6298, { 0xb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x950e, gbc.sp());
        EXPECT(0x6299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0293
        gbc.setState(0x4521, 0x2b5a, 0x8d90, 0x4061, 0x6fa8, 0xb75a, 0x1, 0x1);
        gbc.writeMem(0x4521, { 0xb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2b5a, gbc.sp());
        EXPECT(0x4522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0294
        gbc.setState(0x7ee0, 0x41d6, 0x1190, 0xbf7e, 0x5faa, 0xddb5, 0x1, 0x1);
        gbc.writeMem(0x7ee0, { 0xb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x41d6, gbc.sp());
        EXPECT(0x7ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0295
        gbc.setState(0x4fbc, 0x218b, 0x2f30, 0xb323, 0x9725, 0x96e2, 0x0, 0x1);
        gbc.writeMem(0x4fbc, { 0xb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x218b, gbc.sp());
        EXPECT(0x4fbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0296
        gbc.setState(0x3e04, 0xfa2c, 0xecc0, 0x20af, 0x3c51, 0xa89f, 0x1, 0x0);
        gbc.writeMem(0x3e04, { 0xb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfa2c, gbc.sp());
        EXPECT(0x3e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0297
        gbc.setState(0x8dc7, 0xc68e, 0x5b10, 0xecb1, 0x7c6b, 0xc4ef, 0x0, 0x1);
        gbc.writeMem(0x8dc7, { 0xb });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc68e, gbc.sp());
        EXPECT(0x8dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8dc7));
        // 0B 0298
        gbc.setState(0x3e45, 0x741f, 0xbbd0, 0x94ff, 0xb0f0, 0x1614, 0x0, 0x0);
        gbc.writeMem(0x3e45, { 0xb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x741f, gbc.sp());
        EXPECT(0x3e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 029A
        gbc.setState(0xb348, 0x596b, 0xce10, 0xdf37, 0x135, 0x2182, 0x0, 0x1);
        gbc.writeMem(0xb348, { 0xb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x596b, gbc.sp());
        EXPECT(0xb349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb348));
        // 0B 029B
        gbc.setState(0x76cb, 0x5e63, 0xf500, 0xf523, 0x5e3f, 0x30c5, 0x0, 0x0);
        gbc.writeMem(0x76cb, { 0xb });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5e63, gbc.sp());
        EXPECT(0x76cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 029C
        gbc.setState(0x49c0, 0xcd0d, 0xdff0, 0xb8eb, 0xae8a, 0xcd90, 0x1, 0x1);
        gbc.writeMem(0x49c0, { 0xb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcd0d, gbc.sp());
        EXPECT(0x49c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 029D
        gbc.setState(0x4621, 0x3446, 0xb90, 0xe3ef, 0x4867, 0x9e0a, 0x1, 0x1);
        gbc.writeMem(0x4621, { 0xb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3446, gbc.sp());
        EXPECT(0x4622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 029E
        gbc.setState(0x99c5, 0x2760, 0xa790, 0x7f4b, 0x9130, 0x7170, 0x0, 0x0);
        gbc.writeMem(0x99c5, { 0xb });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2760, gbc.sp());
        EXPECT(0x99c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x99c5));
        // 0B 029F
        gbc.setState(0x574c, 0x5149, 0xf760, 0x715, 0xa9bb, 0x6d80, 0x0, 0x1);
        gbc.writeMem(0x574c, { 0xb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5149, gbc.sp());
        EXPECT(0x574d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02A0
        gbc.setState(0x410e, 0x90e5, 0x5830, 0xb0ce, 0xd262, 0xcb34, 0x1, 0x1);
        gbc.writeMem(0x410e, { 0xb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x90e5, gbc.sp());
        EXPECT(0x410f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02A1
        gbc.setState(0x3b65, 0x377d, 0xf140, 0xdd59, 0xefc8, 0xd741, 0x1, 0x0);
        gbc.writeMem(0x3b65, { 0xb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x377d, gbc.sp());
        EXPECT(0x3b66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02A2
        gbc.setState(0xd517, 0xa8a4, 0x31c0, 0xdbe4, 0x1090, 0x4755, 0x1, 0x1);
        gbc.writeMem(0xd517, { 0xb });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa8a4, gbc.sp());
        EXPECT(0xd518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd517));
        // 0B 02A3
        gbc.setState(0xab25, 0xdbf1, 0x360, 0xd2f1, 0x4eaa, 0xffe1, 0x1, 0x0);
        gbc.writeMem(0xab25, { 0xb });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdbf1, gbc.sp());
        EXPECT(0xab26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xab25));
        // 0B 02A4
        gbc.setState(0x1469, 0x6c37, 0x25d0, 0x4e55, 0x4b9, 0xf03a, 0x0, 0x0);
        gbc.writeMem(0x1469, { 0xb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6c37, gbc.sp());
        EXPECT(0x146a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02A5
        gbc.setState(0x85f8, 0x1c14, 0x2570, 0xdda7, 0x5bd0, 0xf1, 0x1, 0x0);
        gbc.writeMem(0x85f8, { 0xb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1c14, gbc.sp());
        EXPECT(0x85f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x85f8));
        // 0B 02A6
        gbc.setState(0xb89f, 0x6522, 0x820, 0x4f3, 0x1d7b, 0x21d3, 0x0, 0x0);
        gbc.writeMem(0xb89f, { 0xb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6522, gbc.sp());
        EXPECT(0xb8a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb89f));
        // 0B 02A7
        gbc.setState(0x2d01, 0xbece, 0xd010, 0xb785, 0x4a3b, 0x6ea, 0x1, 0x0);
        gbc.writeMem(0x2d01, { 0xb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbece, gbc.sp());
        EXPECT(0x2d02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02A8
        gbc.setState(0x68d6, 0xecdc, 0x5ae0, 0x8af6, 0x72fa, 0xdae2, 0x0, 0x1);
        gbc.writeMem(0x68d6, { 0xb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xecdc, gbc.sp());
        EXPECT(0x68d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02A9
        gbc.setState(0x26b3, 0xbebf, 0x91d0, 0x3b27, 0xfc1, 0x142d, 0x1, 0x1);
        gbc.writeMem(0x26b3, { 0xb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbebf, gbc.sp());
        EXPECT(0x26b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02AA
        gbc.setState(0xd013, 0xd5bb, 0xe40, 0x5ec7, 0x7ebc, 0x719, 0x1, 0x0);
        gbc.writeMem(0xd013, { 0xb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd5bb, gbc.sp());
        EXPECT(0xd014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd013));
        // 0B 02AB
        gbc.setState(0x2332, 0xd172, 0xeeb0, 0x9def, 0xc142, 0x9cea, 0x0, 0x1);
        gbc.writeMem(0x2332, { 0xb });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd172, gbc.sp());
        EXPECT(0x2333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02AC
        gbc.setState(0xec08, 0xdf68, 0x7870, 0x51e3, 0x6bb5, 0x5ce2, 0x1, 0x1);
        gbc.writeMem(0xec08, { 0xb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdf68, gbc.sp());
        EXPECT(0xec09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xec08));
        // 0B 02AD
        gbc.setState(0x3e4e, 0x1a0f, 0x8030, 0x22b8, 0xd4f1, 0xca1a, 0x0, 0x1);
        gbc.writeMem(0x3e4e, { 0xb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1a0f, gbc.sp());
        EXPECT(0x3e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02AE
        gbc.setState(0x21c1, 0x96f0, 0xae40, 0x26d1, 0x9fbc, 0x1514, 0x1, 0x1);
        gbc.writeMem(0x21c1, { 0xb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x96f0, gbc.sp());
        EXPECT(0x21c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02AF
        gbc.setState(0xa4ac, 0x9d52, 0xa010, 0xb37d, 0x7cec, 0x27f4, 0x1, 0x1);
        gbc.writeMem(0xa4ac, { 0xb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9d52, gbc.sp());
        EXPECT(0xa4ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa4ac));
        // 0B 02B0
        gbc.setState(0xdee1, 0xd258, 0xeeb0, 0xd16b, 0x6491, 0xd004, 0x1, 0x0);
        gbc.writeMem(0xdee1, { 0xb });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd258, gbc.sp());
        EXPECT(0xdee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xdee1));
        // 0B 02B1
        gbc.setState(0xbf8, 0x53aa, 0x6c20, 0x4875, 0xf90e, 0xd699, 0x0, 0x0);
        gbc.writeMem(0xbf8, { 0xb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x53aa, gbc.sp());
        EXPECT(0xbf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02B2
        gbc.setState(0x1d1d, 0x546c, 0xaf30, 0xc18e, 0xa3fa, 0xc217, 0x1, 0x0);
        gbc.writeMem(0x1d1d, { 0xb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x546c, gbc.sp());
        EXPECT(0x1d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02B3
        gbc.setState(0x60c4, 0x74d1, 0x9cf0, 0x5e76, 0x1065, 0xb364, 0x0, 0x0);
        gbc.writeMem(0x60c4, { 0xb });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x74d1, gbc.sp());
        EXPECT(0x60c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02B4
        gbc.setState(0xd84a, 0x2fba, 0xa10, 0xb285, 0xb947, 0x3ea6, 0x1, 0x0);
        gbc.writeMem(0xd84a, { 0xb });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2fba, gbc.sp());
        EXPECT(0xd84b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd84a));
        // 0B 02B5
        gbc.setState(0x90bf, 0x8678, 0x92e0, 0xd76e, 0xae05, 0xc61c, 0x1, 0x1);
        gbc.writeMem(0x90bf, { 0xb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8678, gbc.sp());
        EXPECT(0x90c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x90bf));
        // 0B 02B6
        gbc.setState(0xa0ae, 0x3a20, 0xb870, 0xdd41, 0xcd9, 0x69a3, 0x0, 0x1);
        gbc.writeMem(0xa0ae, { 0xb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3a20, gbc.sp());
        EXPECT(0xa0af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa0ae));
        // 0B 02B7
        gbc.setState(0xd414, 0x56e4, 0x7f20, 0xcaf, 0x8063, 0x656f, 0x0, 0x0);
        gbc.writeMem(0xd414, { 0xb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x56e4, gbc.sp());
        EXPECT(0xd415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd414));
        // 0B 02B8
        gbc.setState(0x60b0, 0xb062, 0xf220, 0x111b, 0xed2a, 0xd853, 0x0, 0x1);
        gbc.writeMem(0x60b0, { 0xb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb062, gbc.sp());
        EXPECT(0x60b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02B9
        gbc.setState(0x5903, 0x80fa, 0x8af0, 0x923c, 0xafed, 0xf1dd, 0x0, 0x1);
        gbc.writeMem(0x5903, { 0xb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x80fa, gbc.sp());
        EXPECT(0x5904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02BA
        gbc.setState(0x6c1d, 0xcc5c, 0xebb0, 0x89cc, 0x48f1, 0xbe60, 0x1, 0x0);
        gbc.writeMem(0x6c1d, { 0xb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcc5c, gbc.sp());
        EXPECT(0x6c1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02BB
        gbc.setState(0x81f7, 0xd3b7, 0x69b0, 0xe53d, 0x9791, 0x72d2, 0x1, 0x0);
        gbc.writeMem(0x81f7, { 0xb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd3b7, gbc.sp());
        EXPECT(0x81f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x81f7));
        // 0B 02BC
        gbc.setState(0x7db0, 0x9892, 0x27c0, 0xb6a6, 0x30b3, 0x3416, 0x0, 0x0);
        gbc.writeMem(0x7db0, { 0xb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9892, gbc.sp());
        EXPECT(0x7db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02BD
        gbc.setState(0x62a2, 0xe213, 0xb460, 0x58fc, 0xc834, 0xe183, 0x0, 0x0);
        gbc.writeMem(0x62a2, { 0xb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe213, gbc.sp());
        EXPECT(0x62a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02BE
        gbc.setState(0x24cf, 0x89eb, 0xf190, 0x3310, 0x32df, 0x2079, 0x0, 0x1);
        gbc.writeMem(0x24cf, { 0xb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x89eb, gbc.sp());
        EXPECT(0x24d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02BF
        gbc.setState(0xaba1, 0xf357, 0x1390, 0x9c52, 0xaa82, 0xeb0, 0x1, 0x1);
        gbc.writeMem(0xaba1, { 0xb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf357, gbc.sp());
        EXPECT(0xaba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xaba1));
        // 0B 02C0
        gbc.setState(0xb62a, 0x7c55, 0xcb70, 0x51ad, 0x67b1, 0x2ac0, 0x1, 0x1);
        gbc.writeMem(0xb62a, { 0xb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7c55, gbc.sp());
        EXPECT(0xb62b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb62a));
        // 0B 02C1
        gbc.setState(0x4107, 0xc8de, 0x3cb0, 0x13c1, 0x1fe9, 0x67fc, 0x1, 0x1);
        gbc.writeMem(0x4107, { 0xb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc8de, gbc.sp());
        EXPECT(0x4108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02C2
        gbc.setState(0x4c5b, 0x8d1a, 0x9fc0, 0xfbac, 0x7f30, 0xa23c, 0x0, 0x0);
        gbc.writeMem(0x4c5b, { 0xb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8d1a, gbc.sp());
        EXPECT(0x4c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02C3
        gbc.setState(0x2561, 0x473d, 0x120, 0xfb98, 0x71a4, 0x8609, 0x1, 0x0);
        gbc.writeMem(0x2561, { 0xb });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x473d, gbc.sp());
        EXPECT(0x2562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02C4
        gbc.setState(0x62ca, 0x59fc, 0x3fd0, 0x237d, 0x1631, 0x40ba, 0x1, 0x1);
        gbc.writeMem(0x62ca, { 0xb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x59fc, gbc.sp());
        EXPECT(0x62cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02C5
        gbc.setState(0xa42b, 0x344f, 0xad80, 0x9068, 0x1557, 0x243a, 0x1, 0x0);
        gbc.writeMem(0xa42b, { 0xb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x344f, gbc.sp());
        EXPECT(0xa42c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa42b));
        // 0B 02C6
        gbc.setState(0x3917, 0xe182, 0xdb70, 0x9b67, 0xe8e5, 0xb284, 0x1, 0x1);
        gbc.writeMem(0x3917, { 0xb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe182, gbc.sp());
        EXPECT(0x3918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02C7
        gbc.setState(0xa232, 0xc4f2, 0x1000, 0x8d83, 0x14a1, 0x634b, 0x1, 0x1);
        gbc.writeMem(0xa232, { 0xb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc4f2, gbc.sp());
        EXPECT(0xa233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa232));
        // 0B 02C8
        gbc.setState(0x63f7, 0xb558, 0x350, 0x212a, 0x89a7, 0x8746, 0x0, 0x1);
        gbc.writeMem(0x63f7, { 0xb });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb558, gbc.sp());
        EXPECT(0x63f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02C9
        gbc.setState(0x1e5, 0x4875, 0xfd40, 0x5699, 0xacdf, 0x3d2f, 0x0, 0x1);
        gbc.writeMem(0x1e5, { 0xb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4875, gbc.sp());
        EXPECT(0x1e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02CA
        gbc.setState(0x3b4d, 0xf915, 0x5550, 0x3b13, 0x53d5, 0x458e, 0x1, 0x0);
        gbc.writeMem(0x3b4d, { 0xb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf915, gbc.sp());
        EXPECT(0x3b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02CC
        gbc.setState(0xe3e5, 0x7176, 0xce70, 0xe911, 0xd224, 0x86c0, 0x1, 0x0);
        gbc.writeMem(0xe3e5, { 0xb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7176, gbc.sp());
        EXPECT(0xe3e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe3e5));
        // 0B 02CD
        gbc.setState(0x236e, 0x9950, 0xd0f0, 0xd5de, 0x4d8b, 0xa61c, 0x1, 0x0);
        gbc.writeMem(0x236e, { 0xb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9950, gbc.sp());
        EXPECT(0x236f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02CE
        gbc.setState(0x7ee5, 0xf3ba, 0x50d0, 0x202b, 0x7688, 0x6caa, 0x1, 0x0);
        gbc.writeMem(0x7ee5, { 0xb });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf3ba, gbc.sp());
        EXPECT(0x7ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02CF
        gbc.setState(0xb280, 0x9596, 0x9b90, 0x1e9a, 0x9979, 0xce09, 0x1, 0x1);
        gbc.writeMem(0xb280, { 0xb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9596, gbc.sp());
        EXPECT(0xb281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb280));
        // 0B 02D0
        gbc.setState(0x6657, 0xcdf4, 0xf5a0, 0xfacc, 0x3d49, 0x49d6, 0x0, 0x0);
        gbc.writeMem(0x6657, { 0xb });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xcdf4, gbc.sp());
        EXPECT(0x6658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02D1
        gbc.setState(0xd3a2, 0x75da, 0x1510, 0x22f4, 0xbc7a, 0x3d04, 0x0, 0x0);
        gbc.writeMem(0xd3a2, { 0xb });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x75da, gbc.sp());
        EXPECT(0xd3a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd3a2));
        // 0B 02D2
        gbc.setState(0x1721, 0xad31, 0xeab0, 0x812c, 0x7380, 0x9c35, 0x0, 0x0);
        gbc.writeMem(0x1721, { 0xb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xad31, gbc.sp());
        EXPECT(0x1722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02D3
        gbc.setState(0x2628, 0xcc8c, 0xd1d0, 0xbf89, 0x1268, 0xe36d, 0x0, 0x0);
        gbc.writeMem(0x2628, { 0xb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xcc8c, gbc.sp());
        EXPECT(0x2629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02D4
        gbc.setState(0x515a, 0x374, 0x430, 0x5beb, 0x5554, 0xe400, 0x0, 0x0);
        gbc.writeMem(0x515a, { 0xb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x374, gbc.sp());
        EXPECT(0x515b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02D6
        gbc.setState(0xef78, 0xd6a1, 0xd9e0, 0x85d, 0x46fa, 0x9efd, 0x1, 0x0);
        gbc.writeMem(0xef78, { 0xb });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd6a1, gbc.sp());
        EXPECT(0xef79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xef78));
        // 0B 02D7
        gbc.setState(0x212c, 0x8cbf, 0xb2e0, 0x6da0, 0x160f, 0x53a9, 0x0, 0x1);
        gbc.writeMem(0x212c, { 0xb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8cbf, gbc.sp());
        EXPECT(0x212d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02D8
        gbc.setState(0x4fe2, 0xa950, 0xab00, 0xe92d, 0xeeeb, 0x79b7, 0x0, 0x1);
        gbc.writeMem(0x4fe2, { 0xb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa950, gbc.sp());
        EXPECT(0x4fe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02D9
        gbc.setState(0x9c1d, 0x3ca0, 0x3d30, 0x5b9, 0xe251, 0x6804, 0x1, 0x1);
        gbc.writeMem(0x9c1d, { 0xb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3ca0, gbc.sp());
        EXPECT(0x9c1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9c1d));
        // 0B 02DA
        gbc.setState(0x6211, 0x98be, 0x23e0, 0x3487, 0x6768, 0x640f, 0x1, 0x1);
        gbc.writeMem(0x6211, { 0xb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x98be, gbc.sp());
        EXPECT(0x6212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02DB
        gbc.setState(0xa4c2, 0x5d1, 0x6280, 0xc172, 0x8252, 0x2a05, 0x1, 0x1);
        gbc.writeMem(0xa4c2, { 0xb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5d1, gbc.sp());
        EXPECT(0xa4c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa4c2));
        // 0B 02DC
        gbc.setState(0x3069, 0x3938, 0xf240, 0xafa3, 0xb907, 0x4137, 0x0, 0x1);
        gbc.writeMem(0x3069, { 0xb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3938, gbc.sp());
        EXPECT(0x306a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02DD
        gbc.setState(0x5110, 0x80a5, 0x3660, 0x140f, 0x19d7, 0x411e, 0x0, 0x0);
        gbc.writeMem(0x5110, { 0xb });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x80a5, gbc.sp());
        EXPECT(0x5111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02DE
        gbc.setState(0x2d3d, 0xfe77, 0x3f10, 0xa1ee, 0x9a19, 0xdf37, 0x1, 0x0);
        gbc.writeMem(0x2d3d, { 0xb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfe77, gbc.sp());
        EXPECT(0x2d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02DF
        gbc.setState(0x141d, 0x6c0c, 0xd1e0, 0xe95f, 0xabe1, 0x8f, 0x0, 0x1);
        gbc.writeMem(0x141d, { 0xb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6c0c, gbc.sp());
        EXPECT(0x141e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02E0
        gbc.setState(0xd39d, 0xba18, 0xd0e0, 0x94a5, 0xb94c, 0x391, 0x0, 0x1);
        gbc.writeMem(0xd39d, { 0xb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xba18, gbc.sp());
        EXPECT(0xd39e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd39d));
        // 0B 02E1
        gbc.setState(0x5def, 0xe7d9, 0x9a20, 0xd01a, 0xc905, 0x8c20, 0x0, 0x0);
        gbc.writeMem(0x5def, { 0xb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe7d9, gbc.sp());
        EXPECT(0x5df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02E2
        gbc.setState(0x7fdf, 0xc228, 0xbe40, 0x8411, 0x4163, 0xdcbb, 0x0, 0x0);
        gbc.writeMem(0x7fdf, { 0xb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc228, gbc.sp());
        EXPECT(0x7fe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02E3
        gbc.setState(0x872f, 0x5951, 0x2fd0, 0x61d1, 0x96ce, 0x8e7b, 0x1, 0x1);
        gbc.writeMem(0x872f, { 0xb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5951, gbc.sp());
        EXPECT(0x8730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x872f));
        // 0B 02E4
        gbc.setState(0x6a4a, 0x444, 0x2bf0, 0xbe0d, 0x61bc, 0x2e5, 0x1, 0x0);
        gbc.writeMem(0x6a4a, { 0xb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x444, gbc.sp());
        EXPECT(0x6a4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02E5
        gbc.setState(0xc724, 0xae2a, 0x90e0, 0x28b8, 0x3346, 0x125a, 0x0, 0x0);
        gbc.writeMem(0xc724, { 0xb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xae2a, gbc.sp());
        EXPECT(0xc725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc724));
        // 0B 02E6
        gbc.setState(0xbf61, 0x5150, 0x890, 0x32ae, 0xc8ec, 0x3ddf, 0x0, 0x0);
        gbc.writeMem(0xbf61, { 0xb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5150, gbc.sp());
        EXPECT(0xbf62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbf61));
        // 0B 02E7
        gbc.setState(0x9c45, 0xd764, 0x9650, 0xbdf, 0x1872, 0x6a0c, 0x1, 0x1);
        gbc.writeMem(0x9c45, { 0xb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd764, gbc.sp());
        EXPECT(0x9c46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9c45));
        // 0B 02E8
        gbc.setState(0x54e, 0xf2e5, 0xc20, 0xe3a8, 0x1de9, 0xe160, 0x1, 0x1);
        gbc.writeMem(0x54e, { 0xb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf2e5, gbc.sp());
        EXPECT(0x54f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02E9
        gbc.setState(0xa9ed, 0xa3d, 0x7cc0, 0x335c, 0x8d73, 0x24e5, 0x1, 0x0);
        gbc.writeMem(0xa9ed, { 0xb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa3d, gbc.sp());
        EXPECT(0xa9ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa9ed));
        // 0B 02EA
        gbc.setState(0xb18d, 0xf1a6, 0xf430, 0x341f, 0xbb2c, 0x5255, 0x0, 0x0);
        gbc.writeMem(0xb18d, { 0xb });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf1a6, gbc.sp());
        EXPECT(0xb18e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb18d));
        // 0B 02EB
        gbc.setState(0x6646, 0xd7dc, 0x5870, 0xae06, 0xecc0, 0x1685, 0x1, 0x1);
        gbc.writeMem(0x6646, { 0xb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd7dc, gbc.sp());
        EXPECT(0x6647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02EC
        gbc.setState(0x59ed, 0x2ec4, 0xb530, 0x6a6a, 0x2811, 0x55bb, 0x0, 0x0);
        gbc.writeMem(0x59ed, { 0xb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2ec4, gbc.sp());
        EXPECT(0x59ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02ED
        gbc.setState(0xad8e, 0x498, 0x9fe0, 0xf6c6, 0x3ebb, 0x8e96, 0x0, 0x0);
        gbc.writeMem(0xad8e, { 0xb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x498, gbc.sp());
        EXPECT(0xad8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xad8e));
        // 0B 02EE
        gbc.setState(0xef41, 0xe687, 0x9d70, 0x6f6e, 0x751c, 0xf1a0, 0x0, 0x1);
        gbc.writeMem(0xef41, { 0xb });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe687, gbc.sp());
        EXPECT(0xef42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xef41));
        // 0B 02EF
        gbc.setState(0xee5, 0xdcc7, 0xdb90, 0xe4d3, 0xb71c, 0x88c9, 0x1, 0x0);
        gbc.writeMem(0xee5, { 0xb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdcc7, gbc.sp());
        EXPECT(0xee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02F0
        gbc.setState(0xcc96, 0x73ad, 0xb2a0, 0x4b25, 0x1e37, 0x8948, 0x1, 0x1);
        gbc.writeMem(0xcc96, { 0xb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x73ad, gbc.sp());
        EXPECT(0xcc97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xcc96));
        // 0B 02F1
        gbc.setState(0x7de7, 0xee7d, 0x6130, 0xff22, 0xa4bc, 0xb030, 0x0, 0x1);
        gbc.writeMem(0x7de7, { 0xb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xee7d, gbc.sp());
        EXPECT(0x7de8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02F2
        gbc.setState(0x364d, 0x3064, 0x84f0, 0x861f, 0x5523, 0x6676, 0x0, 0x1);
        gbc.writeMem(0x364d, { 0xb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3064, gbc.sp());
        EXPECT(0x364e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02F3
        gbc.setState(0xc1ae, 0xc93f, 0xb170, 0xfbd4, 0xd401, 0x8ab6, 0x0, 0x0);
        gbc.writeMem(0xc1ae, { 0xb });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc93f, gbc.sp());
        EXPECT(0xc1af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc1ae));
        // 0B 02F4
        gbc.setState(0xbec, 0x9109, 0x5bc0, 0x6f35, 0x760f, 0x918d, 0x0, 0x0);
        gbc.writeMem(0xbec, { 0xb });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9109, gbc.sp());
        EXPECT(0xbed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02F5
        gbc.setState(0x91e, 0x268f, 0x2250, 0x84c7, 0xc5e6, 0xf561, 0x1, 0x0);
        gbc.writeMem(0x91e, { 0xb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x268f, gbc.sp());
        EXPECT(0x91f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02F6
        gbc.setState(0xdb73, 0xfeb, 0xcd60, 0x814e, 0x351c, 0x6330, 0x0, 0x0);
        gbc.writeMem(0xdb73, { 0xb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfeb, gbc.sp());
        EXPECT(0xdb74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xdb73));
        // 0B 02F7
        gbc.setState(0x262b, 0x826c, 0x5040, 0x8f7a, 0x29e, 0xee49, 0x1, 0x0);
        gbc.writeMem(0x262b, { 0xb });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x826c, gbc.sp());
        EXPECT(0x262c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02F8
        gbc.setState(0x20b9, 0xd779, 0xbbc0, 0x8792, 0xb1e4, 0xdb43, 0x0, 0x0);
        gbc.writeMem(0x20b9, { 0xb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd779, gbc.sp());
        EXPECT(0x20ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02F9
        gbc.setState(0x9502, 0x8e05, 0xabc0, 0x917c, 0x703d, 0x1aa2, 0x0, 0x0);
        gbc.writeMem(0x9502, { 0xb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8e05, gbc.sp());
        EXPECT(0x9503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9502));
        // 0B 02FA
        gbc.setState(0x7121, 0xc2f8, 0xd70, 0x3f54, 0xd679, 0x3115, 0x1, 0x1);
        gbc.writeMem(0x7121, { 0xb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc2f8, gbc.sp());
        EXPECT(0x7122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02FB
        gbc.setState(0x1e99, 0xcfc7, 0xb420, 0x23f6, 0x8001, 0xf7aa, 0x1, 0x0);
        gbc.writeMem(0x1e99, { 0xb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xcfc7, gbc.sp());
        EXPECT(0x1e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 02FD
        gbc.setState(0x5d9, 0x4da8, 0xb8b0, 0x5dd2, 0x529, 0x3aab, 0x0, 0x1);
        gbc.writeMem(0x5d9, { 0xb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4da8, gbc.sp());
        EXPECT(0x5da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 02FE
        gbc.setState(0x3a97, 0xd007, 0xe5d0, 0xc7bc, 0xab6b, 0x2461, 0x1, 0x1);
        gbc.writeMem(0x3a97, { 0xb });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd007, gbc.sp());
        EXPECT(0x3a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0300
        gbc.setState(0xcefb, 0xbe13, 0xcf60, 0x7249, 0x1b1f, 0xdabc, 0x1, 0x1);
        gbc.writeMem(0xcefb, { 0xb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbe13, gbc.sp());
        EXPECT(0xcefc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xcefb));
        // 0B 0301
        gbc.setState(0xe959, 0xfb08, 0xc420, 0xf351, 0xe133, 0x7a1e, 0x1, 0x0);
        gbc.writeMem(0xe959, { 0xb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfb08, gbc.sp());
        EXPECT(0xe95a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe959));
        // 0B 0302
        gbc.setState(0xe9f4, 0xd593, 0x86a0, 0x729e, 0x63fe, 0xf2a6, 0x0, 0x0);
        gbc.writeMem(0xe9f4, { 0xb });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd593, gbc.sp());
        EXPECT(0xe9f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe9f4));
        // 0B 0304
        gbc.setState(0x6921, 0x8bfc, 0x6f50, 0xf5ce, 0xffe9, 0x27c6, 0x0, 0x1);
        gbc.writeMem(0x6921, { 0xb });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8bfc, gbc.sp());
        EXPECT(0x6922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0305
        gbc.setState(0x11a6, 0x7f62, 0xf9c0, 0x1f1d, 0x6a33, 0xba92, 0x1, 0x0);
        gbc.writeMem(0x11a6, { 0xb });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7f62, gbc.sp());
        EXPECT(0x11a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0306
        gbc.setState(0xa6e8, 0xaf43, 0x3b00, 0x245e, 0x2dfb, 0x9f85, 0x1, 0x0);
        gbc.writeMem(0xa6e8, { 0xb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xaf43, gbc.sp());
        EXPECT(0xa6e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa6e8));
        // 0B 0307
        gbc.setState(0x720, 0xe13f, 0x2a0, 0x13dd, 0x7609, 0xbae6, 0x0, 0x0);
        gbc.writeMem(0x720, { 0xb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe13f, gbc.sp());
        EXPECT(0x721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0308
        gbc.setState(0x5aa9, 0x22a9, 0xa000, 0x342f, 0x9e59, 0xa76a, 0x0, 0x0);
        gbc.writeMem(0x5aa9, { 0xb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x22a9, gbc.sp());
        EXPECT(0x5aaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0309
        gbc.setState(0x6b, 0x24f7, 0x92d0, 0x86da, 0x763e, 0xdc54, 0x0, 0x1);
        gbc.writeMem(0x6b, { 0xb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x24f7, gbc.sp());
        EXPECT(0x6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 030A
        gbc.setState(0xdd65, 0x2992, 0x3000, 0x7af9, 0x2f84, 0xf926, 0x0, 0x0);
        gbc.writeMem(0xdd65, { 0xb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2992, gbc.sp());
        EXPECT(0xdd66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xdd65));
        // 0B 030B
        gbc.setState(0x7d72, 0xfe26, 0x9a10, 0x3c8, 0x6d1a, 0x73e8, 0x1, 0x1);
        gbc.writeMem(0x7d72, { 0xb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfe26, gbc.sp());
        EXPECT(0x7d73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 030C
        gbc.setState(0x898c, 0x5910, 0x340, 0x8eb8, 0x2399, 0x224, 0x1, 0x0);
        gbc.writeMem(0x898c, { 0xb });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5910, gbc.sp());
        EXPECT(0x898d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x898c));
        // 0B 030D
        gbc.setState(0x55fe, 0xd4c9, 0x1910, 0x421, 0xcf71, 0xc681, 0x0, 0x0);
        gbc.writeMem(0x55fe, { 0xb });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd4c9, gbc.sp());
        EXPECT(0x55ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 030E
        gbc.setState(0xd8d, 0xa1b1, 0x6090, 0x4bc0, 0x8609, 0x3c5a, 0x0, 0x0);
        gbc.writeMem(0xd8d, { 0xb });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa1b1, gbc.sp());
        EXPECT(0xd8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 030F
        gbc.setState(0xd722, 0xaf21, 0x9ae0, 0xd35a, 0xe755, 0xaa30, 0x0, 0x1);
        gbc.writeMem(0xd722, { 0xb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xaf21, gbc.sp());
        EXPECT(0xd723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd722));
        // 0B 0310
        gbc.setState(0x5278, 0x7b6f, 0xd170, 0x43ad, 0xdeca, 0xdfd7, 0x0, 0x0);
        gbc.writeMem(0x5278, { 0xb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7b6f, gbc.sp());
        EXPECT(0x5279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0311
        gbc.setState(0x23b0, 0xf619, 0x2960, 0xd13a, 0x36d7, 0x2fe, 0x1, 0x0);
        gbc.writeMem(0x23b0, { 0xb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf619, gbc.sp());
        EXPECT(0x23b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0313
        gbc.setState(0x8dca, 0x8314, 0x1e60, 0xab4f, 0x2bd, 0x21b, 0x1, 0x1);
        gbc.writeMem(0x8dca, { 0xb });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8314, gbc.sp());
        EXPECT(0x8dcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8dca));
        // 0B 0314
        gbc.setState(0xb233, 0x5f35, 0x4a00, 0xbeb2, 0x1cd8, 0xcbb5, 0x0, 0x1);
        gbc.writeMem(0xb233, { 0xb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5f35, gbc.sp());
        EXPECT(0xb234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb233));
        // 0B 0315
        gbc.setState(0x4c08, 0x23e1, 0x420, 0x3631, 0xad45, 0x8f29, 0x1, 0x0);
        gbc.writeMem(0x4c08, { 0xb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x23e1, gbc.sp());
        EXPECT(0x4c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0316
        gbc.setState(0x8b33, 0xdfa9, 0x4ab0, 0x85cc, 0xbb24, 0x1cc7, 0x1, 0x0);
        gbc.writeMem(0x8b33, { 0xb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdfa9, gbc.sp());
        EXPECT(0x8b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8b33));
        // 0B 0317
        gbc.setState(0xce07, 0x725b, 0x7290, 0x8f7, 0xca79, 0xf52b, 0x1, 0x0);
        gbc.writeMem(0xce07, { 0xb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x725b, gbc.sp());
        EXPECT(0xce08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xce07));
        // 0B 0318
        gbc.setState(0xb908, 0x77df, 0x5d30, 0xfa64, 0xc1c7, 0xd7f, 0x1, 0x1);
        gbc.writeMem(0xb908, { 0xb });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x77df, gbc.sp());
        EXPECT(0xb909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb908));
        // 0B 0319
        gbc.setState(0xc361, 0xc5eb, 0x53e0, 0xd204, 0x7a7f, 0x6c53, 0x1, 0x0);
        gbc.writeMem(0xc361, { 0xb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc5eb, gbc.sp());
        EXPECT(0xc362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc361));
        // 0B 031A
        gbc.setState(0x759a, 0x1fb5, 0x7f70, 0x94f9, 0xd4a0, 0xe476, 0x0, 0x1);
        gbc.writeMem(0x759a, { 0xb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1fb5, gbc.sp());
        EXPECT(0x759b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 031B
        gbc.setState(0x4c44, 0x4d49, 0x5f80, 0xde28, 0x43d4, 0xec8a, 0x0, 0x0);
        gbc.writeMem(0x4c44, { 0xb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4d49, gbc.sp());
        EXPECT(0x4c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 031D
        gbc.setState(0x23c2, 0x5ea4, 0x2460, 0x3427, 0x2bd7, 0x7447, 0x0, 0x0);
        gbc.writeMem(0x23c2, { 0xb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5ea4, gbc.sp());
        EXPECT(0x23c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 031E
        gbc.setState(0xa15c, 0xf15f, 0xd5a0, 0x12a5, 0x2964, 0x5fdb, 0x0, 0x1);
        gbc.writeMem(0xa15c, { 0xb });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf15f, gbc.sp());
        EXPECT(0xa15d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa15c));
        // 0B 031F
        gbc.setState(0x4394, 0xd5c4, 0x2c10, 0x910c, 0xecb4, 0x47e, 0x1, 0x1);
        gbc.writeMem(0x4394, { 0xb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd5c4, gbc.sp());
        EXPECT(0x4395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0320
        gbc.setState(0x6c29, 0x6f42, 0x4410, 0x9d92, 0x674e, 0xdba5, 0x0, 0x1);
        gbc.writeMem(0x6c29, { 0xb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6f42, gbc.sp());
        EXPECT(0x6c2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0321
        gbc.setState(0xe589, 0x3607, 0x4330, 0xb7c3, 0xae15, 0x735e, 0x1, 0x0);
        gbc.writeMem(0xe589, { 0xb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3607, gbc.sp());
        EXPECT(0xe58a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe589));
        // 0B 0322
        gbc.setState(0xa8ef, 0x396a, 0x52a0, 0x555a, 0xac4e, 0x3e0b, 0x1, 0x1);
        gbc.writeMem(0xa8ef, { 0xb });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x396a, gbc.sp());
        EXPECT(0xa8f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa8ef));
        // 0B 0323
        gbc.setState(0x4804, 0x8a1c, 0x3c90, 0xd547, 0xb06e, 0xc8bf, 0x0, 0x0);
        gbc.writeMem(0x4804, { 0xb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8a1c, gbc.sp());
        EXPECT(0x4805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0324
        gbc.setState(0xa917, 0x59fa, 0x2230, 0x8f24, 0x936b, 0xc1e9, 0x0, 0x1);
        gbc.writeMem(0xa917, { 0xb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x59fa, gbc.sp());
        EXPECT(0xa918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa917));
        // 0B 0325
        gbc.setState(0xd9d9, 0x7afa, 0x4ac0, 0x1277, 0xd40a, 0x2cbc, 0x1, 0x1);
        gbc.writeMem(0xd9d9, { 0xb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7afa, gbc.sp());
        EXPECT(0xd9da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd9d9));
        // 0B 0326
        gbc.setState(0xbb33, 0x7ad7, 0x720, 0x5538, 0x9a7b, 0x357, 0x0, 0x1);
        gbc.writeMem(0xbb33, { 0xb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7ad7, gbc.sp());
        EXPECT(0xbb34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbb33));
        // 0B 0327
        gbc.setState(0xe375, 0x1f02, 0xfb20, 0x833c, 0x2381, 0x7df9, 0x1, 0x0);
        gbc.writeMem(0xe375, { 0xb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1f02, gbc.sp());
        EXPECT(0xe376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe375));
        // 0B 0328
        gbc.setState(0xd912, 0x947b, 0xa6a0, 0xd7ba, 0xcbf1, 0xdb10, 0x1, 0x0);
        gbc.writeMem(0xd912, { 0xb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x947b, gbc.sp());
        EXPECT(0xd913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd912));
        // 0B 0329
        gbc.setState(0x1db2, 0xf91, 0x8930, 0x60e7, 0x1cb4, 0x7ed4, 0x1, 0x1);
        gbc.writeMem(0x1db2, { 0xb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf91, gbc.sp());
        EXPECT(0x1db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 032A
        gbc.setState(0x9017, 0x3319, 0x3f80, 0xb073, 0x2cda, 0xaef8, 0x1, 0x0);
        gbc.writeMem(0x9017, { 0xb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3319, gbc.sp());
        EXPECT(0x9018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9017));
        // 0B 032B
        gbc.setState(0xca2d, 0x42cf, 0x1a20, 0x36c4, 0x76d1, 0x5ecb, 0x0, 0x0);
        gbc.writeMem(0xca2d, { 0xb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x42cf, gbc.sp());
        EXPECT(0xca2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xca2d));
        // 0B 032C
        gbc.setState(0xb11f, 0x2306, 0x48c0, 0x2bca, 0x976b, 0x258f, 0x0, 0x1);
        gbc.writeMem(0xb11f, { 0xb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2306, gbc.sp());
        EXPECT(0xb120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb11f));
        // 0B 032D
        gbc.setState(0xccbf, 0x77e2, 0x5410, 0x415b, 0x7ae6, 0x68ac, 0x1, 0x1);
        gbc.writeMem(0xccbf, { 0xb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x77e2, gbc.sp());
        EXPECT(0xccc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xccbf));
        // 0B 032E
        gbc.setState(0xa54f, 0x5b3e, 0x7da0, 0x4763, 0x3898, 0x5eee, 0x0, 0x1);
        gbc.writeMem(0xa54f, { 0xb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5b3e, gbc.sp());
        EXPECT(0xa550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa54f));
        // 0B 032F
        gbc.setState(0x7bff, 0xa5a4, 0x99f0, 0xbe6d, 0x3c43, 0x1c4b, 0x1, 0x0);
        gbc.writeMem(0x7bff, { 0xb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa5a4, gbc.sp());
        EXPECT(0x7c00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0330
        gbc.setState(0xe789, 0x3535, 0x4bc0, 0x65e3, 0x27ce, 0x7ffa, 0x1, 0x0);
        gbc.writeMem(0xe789, { 0xb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3535, gbc.sp());
        EXPECT(0xe78a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe789));
        // 0B 0331
        gbc.setState(0x81ba, 0x2e81, 0x4170, 0xedc1, 0x4a56, 0x30c, 0x0, 0x1);
        gbc.writeMem(0x81ba, { 0xb });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2e81, gbc.sp());
        EXPECT(0x81bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x81ba));
        // 0B 0333
        gbc.setState(0x4c44, 0xf0, 0x6000, 0x521, 0xea63, 0x231b, 0x0, 0x1);
        gbc.writeMem(0x4c44, { 0xb });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf0, gbc.sp());
        EXPECT(0x4c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0334
        gbc.setState(0x22c5, 0x6d3a, 0x8920, 0xad8e, 0x5d92, 0xc52d, 0x1, 0x1);
        gbc.writeMem(0x22c5, { 0xb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6d3a, gbc.sp());
        EXPECT(0x22c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0335
        gbc.setState(0xdde3, 0x1dbe, 0x77d0, 0x10af, 0x4313, 0x1bc0, 0x1, 0x1);
        gbc.writeMem(0xdde3, { 0xb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1dbe, gbc.sp());
        EXPECT(0xdde4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xdde3));
        // 0B 0336
        gbc.setState(0x5e54, 0x79d2, 0x2450, 0xf75f, 0x69bb, 0x10c4, 0x1, 0x1);
        gbc.writeMem(0x5e54, { 0xb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x79d2, gbc.sp());
        EXPECT(0x5e55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0337
        gbc.setState(0x8da5, 0xacfa, 0x1d50, 0x1df3, 0x73f2, 0x565c, 0x1, 0x0);
        gbc.writeMem(0x8da5, { 0xb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xacfa, gbc.sp());
        EXPECT(0x8da6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8da5));
        // 0B 0338
        gbc.setState(0x8d84, 0x36b0, 0xae20, 0x2291, 0xefb2, 0x29cb, 0x1, 0x0);
        gbc.writeMem(0x8d84, { 0xb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x36b0, gbc.sp());
        EXPECT(0x8d85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8d84));
        // 0B 0339
        gbc.setState(0xaa32, 0xb963, 0xa460, 0xe22d, 0x9364, 0x2c20, 0x0, 0x0);
        gbc.writeMem(0xaa32, { 0xb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb963, gbc.sp());
        EXPECT(0xaa33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xaa32));
        // 0B 033A
        gbc.setState(0x4b6d, 0x786d, 0xe410, 0xdfd8, 0x78ec, 0xbcc0, 0x1, 0x0);
        gbc.writeMem(0x4b6d, { 0xb });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x786d, gbc.sp());
        EXPECT(0x4b6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 033B
        gbc.setState(0x333b, 0x7205, 0xc7f0, 0x378c, 0x9494, 0x3e97, 0x1, 0x1);
        gbc.writeMem(0x333b, { 0xb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7205, gbc.sp());
        EXPECT(0x333c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 033C
        gbc.setState(0xb6f1, 0xeccb, 0xeb70, 0x53bc, 0x8075, 0x62dc, 0x0, 0x0);
        gbc.writeMem(0xb6f1, { 0xb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xeccb, gbc.sp());
        EXPECT(0xb6f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb6f1));
        // 0B 033D
        gbc.setState(0x5c4a, 0x4f69, 0x4560, 0x3c47, 0xa746, 0xc6c8, 0x1, 0x0);
        gbc.writeMem(0x5c4a, { 0xb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4f69, gbc.sp());
        EXPECT(0x5c4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 033E
        gbc.setState(0x6410, 0x3916, 0x3c60, 0xf18f, 0x3c37, 0x2368, 0x0, 0x0);
        gbc.writeMem(0x6410, { 0xb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3916, gbc.sp());
        EXPECT(0x6411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 033F
        gbc.setState(0xcf1b, 0x3288, 0x4630, 0x89ea, 0xa316, 0x1bfe, 0x1, 0x1);
        gbc.writeMem(0xcf1b, { 0xb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3288, gbc.sp());
        EXPECT(0xcf1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xcf1b));
        // 0B 0340
        gbc.setState(0xbfe7, 0xf3aa, 0xd8c0, 0x98a5, 0x5d89, 0x9380, 0x0, 0x1);
        gbc.writeMem(0xbfe7, { 0xb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf3aa, gbc.sp());
        EXPECT(0xbfe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbfe7));
        // 0B 0341
        gbc.setState(0x151a, 0xfc3c, 0x6570, 0x2cd7, 0x6cd1, 0x1306, 0x0, 0x1);
        gbc.writeMem(0x151a, { 0xb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfc3c, gbc.sp());
        EXPECT(0x151b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0342
        gbc.setState(0x6918, 0x501e, 0xda50, 0xd4ca, 0xd12c, 0x6409, 0x0, 0x0);
        gbc.writeMem(0x6918, { 0xb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x501e, gbc.sp());
        EXPECT(0x6919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0343
        gbc.setState(0x2088, 0xc7f0, 0x61f0, 0x5a09, 0xc07c, 0xe44b, 0x0, 0x0);
        gbc.writeMem(0x2088, { 0xb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc7f0, gbc.sp());
        EXPECT(0x2089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0344
        gbc.setState(0x50ca, 0xa9a, 0x5e10, 0x6b44, 0xbad0, 0xca56, 0x1, 0x0);
        gbc.writeMem(0x50ca, { 0xb });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa9a, gbc.sp());
        EXPECT(0x50cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0345
        gbc.setState(0xdfca, 0x23b, 0x490, 0x6718, 0xaee0, 0xffde, 0x1, 0x1);
        gbc.writeMem(0xdfca, { 0xb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x23b, gbc.sp());
        EXPECT(0xdfcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xdfca));
        // 0B 0346
        gbc.setState(0x6c61, 0x265a, 0xf920, 0x3057, 0xad1a, 0x8334, 0x0, 0x0);
        gbc.writeMem(0x6c61, { 0xb });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x265a, gbc.sp());
        EXPECT(0x6c62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0348
        gbc.setState(0x282e, 0x4d68, 0xdd70, 0x1525, 0x6048, 0x2807, 0x0, 0x0);
        gbc.writeMem(0x282e, { 0xb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4d68, gbc.sp());
        EXPECT(0x282f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0349
        gbc.setState(0x4da5, 0x8ec6, 0x25d0, 0x9c12, 0x1bcb, 0x5a5f, 0x1, 0x1);
        gbc.writeMem(0x4da5, { 0xb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8ec6, gbc.sp());
        EXPECT(0x4da6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 034A
        gbc.setState(0x2c65, 0x126e, 0x7200, 0xbafb, 0xcfe0, 0xb557, 0x0, 0x0);
        gbc.writeMem(0x2c65, { 0xb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x126e, gbc.sp());
        EXPECT(0x2c66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 034B
        gbc.setState(0x10ed, 0xc7b3, 0x49c0, 0xe6c2, 0xd31e, 0xc6d5, 0x1, 0x1);
        gbc.writeMem(0x10ed, { 0xb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc7b3, gbc.sp());
        EXPECT(0x10ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 034C
        gbc.setState(0xe39a, 0x6606, 0xebe0, 0x32c0, 0x5dc6, 0x437f, 0x1, 0x0);
        gbc.writeMem(0xe39a, { 0xb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6606, gbc.sp());
        EXPECT(0xe39b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe39a));
        // 0B 034D
        gbc.setState(0x1f0d, 0x7f6d, 0x9b60, 0xd55b, 0xcf95, 0x6b75, 0x0, 0x0);
        gbc.writeMem(0x1f0d, { 0xb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7f6d, gbc.sp());
        EXPECT(0x1f0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 034E
        gbc.setState(0x7c98, 0xe44a, 0x6280, 0x97a1, 0x5340, 0xc46, 0x1, 0x1);
        gbc.writeMem(0x7c98, { 0xb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe44a, gbc.sp());
        EXPECT(0x7c99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 034F
        gbc.setState(0x3e23, 0xfa0d, 0x10f0, 0x7892, 0x5cc4, 0x6466, 0x0, 0x0);
        gbc.writeMem(0x3e23, { 0xb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xfa0d, gbc.sp());
        EXPECT(0x3e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0350
        gbc.setState(0xb6dd, 0x89f3, 0x9a90, 0x309c, 0xcba0, 0x408, 0x0, 0x0);
        gbc.writeMem(0xb6dd, { 0xb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x89f3, gbc.sp());
        EXPECT(0xb6de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb6dd));
        // 0B 0351
        gbc.setState(0x7e03, 0x675f, 0x4e90, 0xb1f9, 0x9f82, 0xa90b, 0x0, 0x0);
        gbc.writeMem(0x7e03, { 0xb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x675f, gbc.sp());
        EXPECT(0x7e04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0352
        gbc.setState(0xb8ef, 0xac71, 0xe370, 0x18a2, 0x7c7e, 0x1b00, 0x1, 0x1);
        gbc.writeMem(0xb8ef, { 0xb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xac71, gbc.sp());
        EXPECT(0xb8f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb8ef));
        // 0B 0353
        gbc.setState(0xce51, 0x160a, 0x4380, 0xd2ed, 0xff8b, 0x4733, 0x1, 0x1);
        gbc.writeMem(0xce51, { 0xb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x160a, gbc.sp());
        EXPECT(0xce52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xce51));
        // 0B 0354
        gbc.setState(0x75e1, 0x44ac, 0xc360, 0xfb7c, 0x28d0, 0x9653, 0x0, 0x1);
        gbc.writeMem(0x75e1, { 0xb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x44ac, gbc.sp());
        EXPECT(0x75e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0355
        gbc.setState(0xb3ff, 0x8f45, 0x8970, 0x9ae1, 0xe975, 0x6335, 0x0, 0x0);
        gbc.writeMem(0xb3ff, { 0xb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8f45, gbc.sp());
        EXPECT(0xb400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb3ff));
        // 0B 0356
        gbc.setState(0xe7cc, 0x83b0, 0x9390, 0xa6f, 0xc938, 0x29f1, 0x0, 0x0);
        gbc.writeMem(0xe7cc, { 0xb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x83b0, gbc.sp());
        EXPECT(0xe7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe7cc));
        // 0B 0357
        gbc.setState(0x9474, 0x8dfe, 0xcf40, 0xf735, 0x8bc4, 0xfd7e, 0x1, 0x1);
        gbc.writeMem(0x9474, { 0xb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8dfe, gbc.sp());
        EXPECT(0x9475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9474));
        // 0B 0358
        gbc.setState(0xc881, 0x145f, 0x4450, 0x5303, 0x7831, 0xdb9a, 0x1, 0x0);
        gbc.writeMem(0xc881, { 0xb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x145f, gbc.sp());
        EXPECT(0xc882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc881));
        // 0B 0359
        gbc.setState(0xfae, 0xed30, 0x4530, 0x6a5f, 0x6b53, 0x4f84, 0x0, 0x0);
        gbc.writeMem(0xfae, { 0xb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xed30, gbc.sp());
        EXPECT(0xfaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 035B
        gbc.setState(0xc98f, 0xf6b5, 0x6cf0, 0x236d, 0x12b3, 0x49b6, 0x0, 0x0);
        gbc.writeMem(0xc98f, { 0xb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf6b5, gbc.sp());
        EXPECT(0xc990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc98f));
        // 0B 035C
        gbc.setState(0x4512, 0x5b54, 0xeee0, 0xccb1, 0xd4c, 0xfcb2, 0x1, 0x1);
        gbc.writeMem(0x4512, { 0xb });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5b54, gbc.sp());
        EXPECT(0x4513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 035D
        gbc.setState(0x5278, 0xae7b, 0x3720, 0x5dff, 0x7f68, 0xf153, 0x1, 0x1);
        gbc.writeMem(0x5278, { 0xb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xae7b, gbc.sp());
        EXPECT(0x5279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 035E
        gbc.setState(0x2ab9, 0x2d03, 0xa2b0, 0x2d40, 0x67c0, 0x8a98, 0x0, 0x0);
        gbc.writeMem(0x2ab9, { 0xb });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2d03, gbc.sp());
        EXPECT(0x2aba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 035F
        gbc.setState(0xb025, 0x3bfa, 0x6990, 0x2dd1, 0xf85f, 0xe59c, 0x0, 0x0);
        gbc.writeMem(0xb025, { 0xb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3bfa, gbc.sp());
        EXPECT(0xb026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb025));
        // 0B 0361
        gbc.setState(0xb7dd, 0x94c, 0x3630, 0x53f2, 0xd253, 0xe3e9, 0x1, 0x0);
        gbc.writeMem(0xb7dd, { 0xb });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x94c, gbc.sp());
        EXPECT(0xb7de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb7dd));
        // 0B 0362
        gbc.setState(0x3c09, 0xb551, 0xdaa0, 0x3496, 0x24cb, 0x96b5, 0x0, 0x1);
        gbc.writeMem(0x3c09, { 0xb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb551, gbc.sp());
        EXPECT(0x3c0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0363
        gbc.setState(0xd186, 0x1669, 0xe50, 0x96a4, 0xb13a, 0x93c9, 0x0, 0x1);
        gbc.writeMem(0xd186, { 0xb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1669, gbc.sp());
        EXPECT(0xd187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd186));
        // 0B 0364
        gbc.setState(0x7add, 0x4bb1, 0x1750, 0xc2f1, 0xa6ff, 0x4518, 0x1, 0x1);
        gbc.writeMem(0x7add, { 0xb });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4bb1, gbc.sp());
        EXPECT(0x7ade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0365
        gbc.setState(0x8fd1, 0x60ac, 0xe500, 0x2f88, 0x7722, 0x78a3, 0x1, 0x1);
        gbc.writeMem(0x8fd1, { 0xb });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x60ac, gbc.sp());
        EXPECT(0x8fd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8fd1));
        // 0B 0366
        gbc.setState(0xca38, 0xe495, 0x6450, 0x50b7, 0x5f95, 0x12cc, 0x1, 0x1);
        gbc.writeMem(0xca38, { 0xb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe495, gbc.sp());
        EXPECT(0xca39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xca38));
        // 0B 0367
        gbc.setState(0xc506, 0x4b03, 0x2b20, 0x16bf, 0x1846, 0x8ffc, 0x0, 0x0);
        gbc.writeMem(0xc506, { 0xb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4b03, gbc.sp());
        EXPECT(0xc507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc506));
        // 0B 0368
        gbc.setState(0x4962, 0xc323, 0x94b0, 0x9b8c, 0xcf4c, 0xff1e, 0x1, 0x0);
        gbc.writeMem(0x4962, { 0xb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc323, gbc.sp());
        EXPECT(0x4963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0369
        gbc.setState(0x90c6, 0x2360, 0xf240, 0x2f33, 0x8a24, 0x67f3, 0x0, 0x1);
        gbc.writeMem(0x90c6, { 0xb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2360, gbc.sp());
        EXPECT(0x90c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x90c6));
        // 0B 036A
        gbc.setState(0x1c14, 0x56cf, 0x1a70, 0xbd63, 0x29b6, 0xc4a1, 0x0, 0x0);
        gbc.writeMem(0x1c14, { 0xb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x56cf, gbc.sp());
        EXPECT(0x1c15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 036B
        gbc.setState(0x237f, 0x462b, 0x39b0, 0x5595, 0x3bd, 0x6560, 0x1, 0x0);
        gbc.writeMem(0x237f, { 0xb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x462b, gbc.sp());
        EXPECT(0x2380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 036C
        gbc.setState(0x5c62, 0x5c02, 0xbba0, 0x1327, 0xcd7e, 0xa596, 0x1, 0x1);
        gbc.writeMem(0x5c62, { 0xb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5c02, gbc.sp());
        EXPECT(0x5c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 036D
        gbc.setState(0x369b, 0x7d41, 0xbdb0, 0x2ecd, 0x9533, 0x3f19, 0x0, 0x1);
        gbc.writeMem(0x369b, { 0xb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7d41, gbc.sp());
        EXPECT(0x369c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 036E
        gbc.setState(0xd367, 0x108c, 0xb7a0, 0xe245, 0x731c, 0x957e, 0x0, 0x0);
        gbc.writeMem(0xd367, { 0xb });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x108c, gbc.sp());
        EXPECT(0xd368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd367));
        // 0B 036F
        gbc.setState(0x231f, 0x5b75, 0x97b0, 0x4b9a, 0xa64c, 0xfa8d, 0x0, 0x0);
        gbc.writeMem(0x231f, { 0xb });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5b75, gbc.sp());
        EXPECT(0x2320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0370
        gbc.setState(0xddd7, 0xbdb8, 0x1260, 0xed3d, 0xc49c, 0x40b6, 0x0, 0x0);
        gbc.writeMem(0xddd7, { 0xb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xbdb8, gbc.sp());
        EXPECT(0xddd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xddd7));
        // 0B 0371
        gbc.setState(0x6ebc, 0x89c1, 0x6210, 0x7188, 0x45e, 0x524c, 0x1, 0x0);
        gbc.writeMem(0x6ebc, { 0xb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x89c1, gbc.sp());
        EXPECT(0x6ebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0372
        gbc.setState(0x974d, 0x1301, 0x7130, 0xb506, 0xc9b7, 0x925c, 0x0, 0x0);
        gbc.writeMem(0x974d, { 0xb });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1301, gbc.sp());
        EXPECT(0x974e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x974d));
        // 0B 0373
        gbc.setState(0x4c99, 0x9770, 0x4e30, 0xbdd3, 0x4ff4, 0x9feb, 0x1, 0x0);
        gbc.writeMem(0x4c99, { 0xb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9770, gbc.sp());
        EXPECT(0x4c9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0374
        gbc.setState(0xc5fd, 0x9c39, 0x15a0, 0xf805, 0x1d15, 0xf99e, 0x0, 0x1);
        gbc.writeMem(0xc5fd, { 0xb });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9c39, gbc.sp());
        EXPECT(0xc5fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc5fd));
        // 0B 0375
        gbc.setState(0x61aa, 0x3d40, 0x6ec0, 0x44f3, 0xdc47, 0xc438, 0x1, 0x1);
        gbc.writeMem(0x61aa, { 0xb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3d40, gbc.sp());
        EXPECT(0x61ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0376
        gbc.setState(0x3224, 0x3107, 0x33c0, 0xd005, 0xa66a, 0x2723, 0x1, 0x0);
        gbc.writeMem(0x3224, { 0xb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3107, gbc.sp());
        EXPECT(0x3225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0377
        gbc.setState(0x1a07, 0x8a25, 0x1d30, 0x4149, 0x3deb, 0xd560, 0x1, 0x0);
        gbc.writeMem(0x1a07, { 0xb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8a25, gbc.sp());
        EXPECT(0x1a08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0378
        gbc.setState(0x6ae0, 0xcb9f, 0xf240, 0xa045, 0x6031, 0x7213, 0x1, 0x1);
        gbc.writeMem(0x6ae0, { 0xb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xcb9f, gbc.sp());
        EXPECT(0x6ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0379
        gbc.setState(0x6ea4, 0x27e8, 0x72a0, 0x47c4, 0xbb59, 0x2935, 0x0, 0x1);
        gbc.writeMem(0x6ea4, { 0xb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x27e8, gbc.sp());
        EXPECT(0x6ea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 037A
        gbc.setState(0x8d25, 0xebb, 0x49b0, 0x6b27, 0x2449, 0x8bf3, 0x0, 0x0);
        gbc.writeMem(0x8d25, { 0xb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xebb, gbc.sp());
        EXPECT(0x8d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8d25));
        // 0B 037B
        gbc.setState(0xe191, 0x3377, 0x3850, 0x264d, 0x28d2, 0xd917, 0x1, 0x1);
        gbc.writeMem(0xe191, { 0xb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3377, gbc.sp());
        EXPECT(0xe192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe191));
        // 0B 037C
        gbc.setState(0xc7c5, 0xc7ab, 0x7680, 0x4c82, 0x429a, 0x5b3, 0x0, 0x0);
        gbc.writeMem(0xc7c5, { 0xb });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc7ab, gbc.sp());
        EXPECT(0xc7c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc7c5));
        // 0B 037D
        gbc.setState(0xbb59, 0x90ad, 0x8f60, 0x8982, 0x43d1, 0xc2c7, 0x0, 0x1);
        gbc.writeMem(0xbb59, { 0xb });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x90ad, gbc.sp());
        EXPECT(0xbb5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbb59));
        // 0B 037E
        gbc.setState(0xa71e, 0xa135, 0x5d60, 0x4458, 0x833b, 0x4583, 0x1, 0x0);
        gbc.writeMem(0xa71e, { 0xb });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa135, gbc.sp());
        EXPECT(0xa71f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa71e));
        // 0B 037F
        gbc.setState(0x3250, 0xfd03, 0xc060, 0xff05, 0xd6ec, 0xcd0e, 0x1, 0x0);
        gbc.writeMem(0x3250, { 0xb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfd03, gbc.sp());
        EXPECT(0x3251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0380
        gbc.setState(0xeee3, 0x6b4, 0x7960, 0x816d, 0x8725, 0x9046, 0x1, 0x0);
        gbc.writeMem(0xeee3, { 0xb });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6b4, gbc.sp());
        EXPECT(0xeee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xeee3));
        // 0B 0381
        gbc.setState(0xaf05, 0xc169, 0x6730, 0x3129, 0x9bf2, 0x58ee, 0x0, 0x0);
        gbc.writeMem(0xaf05, { 0xb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc169, gbc.sp());
        EXPECT(0xaf06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xaf05));
        // 0B 0382
        gbc.setState(0xc6f1, 0x7f9d, 0x69e0, 0xac08, 0xbda9, 0xdc65, 0x1, 0x1);
        gbc.writeMem(0xc6f1, { 0xb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7f9d, gbc.sp());
        EXPECT(0xc6f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc6f1));
        // 0B 0383
        gbc.setState(0x3f80, 0xdd81, 0x9190, 0xcff4, 0x276f, 0x9f65, 0x1, 0x1);
        gbc.writeMem(0x3f80, { 0xb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xdd81, gbc.sp());
        EXPECT(0x3f81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0384
        gbc.setState(0xe1b1, 0x17c3, 0x5c00, 0x5dce, 0x8ae6, 0xf32d, 0x0, 0x1);
        gbc.writeMem(0xe1b1, { 0xb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x17c3, gbc.sp());
        EXPECT(0xe1b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe1b1));
        // 0B 0385
        gbc.setState(0xa85, 0xd62, 0x4070, 0x9db7, 0xadd8, 0x7dd5, 0x0, 0x0);
        gbc.writeMem(0xa85, { 0xb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd62, gbc.sp());
        EXPECT(0xa86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0386
        gbc.setState(0x1eb6, 0x1d5c, 0x6290, 0x5e45, 0x803f, 0x19b3, 0x1, 0x1);
        gbc.writeMem(0x1eb6, { 0xb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1d5c, gbc.sp());
        EXPECT(0x1eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0387
        gbc.setState(0x70f7, 0x1d7d, 0xc9e0, 0xd855, 0x8795, 0x4eab, 0x0, 0x0);
        gbc.writeMem(0x70f7, { 0xb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1d7d, gbc.sp());
        EXPECT(0x70f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0388
        gbc.setState(0xc79d, 0x95f2, 0x1e00, 0x50fb, 0xc3a3, 0xcbb7, 0x0, 0x0);
        gbc.writeMem(0xc79d, { 0xb });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x95f2, gbc.sp());
        EXPECT(0xc79e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc79d));
        // 0B 0389
        gbc.setState(0xa295, 0x2b06, 0x9640, 0xf17, 0x486c, 0xe7a5, 0x1, 0x0);
        gbc.writeMem(0xa295, { 0xb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2b06, gbc.sp());
        EXPECT(0xa296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa295));
        // 0B 038A
        gbc.setState(0xe91, 0xcb60, 0x5ce0, 0x4a42, 0x4e48, 0x19ea, 0x1, 0x0);
        gbc.writeMem(0xe91, { 0xb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcb60, gbc.sp());
        EXPECT(0xe92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 038B
        gbc.setState(0xada2, 0xcd1c, 0xa790, 0x2d22, 0xde5, 0x5990, 0x1, 0x1);
        gbc.writeMem(0xada2, { 0xb });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcd1c, gbc.sp());
        EXPECT(0xada3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xada2));
        // 0B 038C
        gbc.setState(0x2d7b, 0x9823, 0x6760, 0x19bf, 0x1faa, 0x2090, 0x1, 0x1);
        gbc.writeMem(0x2d7b, { 0xb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9823, gbc.sp());
        EXPECT(0x2d7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 038D
        gbc.setState(0xd4f1, 0x714d, 0x1f80, 0x6d05, 0xb837, 0x6bea, 0x1, 0x0);
        gbc.writeMem(0xd4f1, { 0xb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x714d, gbc.sp());
        EXPECT(0xd4f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd4f1));
        // 0B 038E
        gbc.setState(0x8907, 0xcbf, 0xb0, 0xd3b5, 0xec5d, 0xe6ef, 0x0, 0x0);
        gbc.writeMem(0x8907, { 0xb });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xcbf, gbc.sp());
        EXPECT(0x8908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8907));
        // 0B 038F
        gbc.setState(0x2666, 0x804d, 0xada0, 0x3520, 0x8869, 0x6ef1, 0x1, 0x1);
        gbc.writeMem(0x2666, { 0xb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x804d, gbc.sp());
        EXPECT(0x2667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0390
        gbc.setState(0xd7bc, 0x9494, 0x7e80, 0x88e2, 0x9043, 0xf69, 0x1, 0x0);
        gbc.writeMem(0xd7bc, { 0xb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9494, gbc.sp());
        EXPECT(0xd7bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd7bc));
        // 0B 0391
        gbc.setState(0x1ebf, 0x9a14, 0x7f80, 0x6dcf, 0x404d, 0x26a9, 0x1, 0x0);
        gbc.writeMem(0x1ebf, { 0xb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9a14, gbc.sp());
        EXPECT(0x1ec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0392
        gbc.setState(0x66ed, 0x2110, 0xab90, 0x6ee2, 0x88e8, 0x77b5, 0x1, 0x1);
        gbc.writeMem(0x66ed, { 0xb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2110, gbc.sp());
        EXPECT(0x66ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 0394
        gbc.setState(0x96fb, 0xcbd6, 0xc610, 0x5aba, 0x9c5d, 0x7180, 0x1, 0x0);
        gbc.writeMem(0x96fb, { 0xb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xcbd6, gbc.sp());
        EXPECT(0x96fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x96fb));
        // 0B 0395
        gbc.setState(0x9b75, 0xc4a6, 0xa970, 0xe94d, 0xf77d, 0xf6b4, 0x1, 0x0);
        gbc.writeMem(0x9b75, { 0xb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc4a6, gbc.sp());
        EXPECT(0x9b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9b75));
        // 0B 0396
        gbc.setState(0x13b4, 0xa1e1, 0x1200, 0x6458, 0x6473, 0x8fb1, 0x1, 0x0);
        gbc.writeMem(0x13b4, { 0xb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa1e1, gbc.sp());
        EXPECT(0x13b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 0397
        gbc.setState(0xe700, 0x35f0, 0xc9d0, 0x6a87, 0x9695, 0xf4ea, 0x0, 0x0);
        gbc.writeMem(0xe700, { 0xb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x35f0, gbc.sp());
        EXPECT(0xe701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe700));
        // 0B 0398
        gbc.setState(0xc0ee, 0x1271, 0x80c0, 0x881b, 0xd45c, 0x18f1, 0x1, 0x0);
        gbc.writeMem(0xc0ee, { 0xb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1271, gbc.sp());
        EXPECT(0xc0ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc0ee));
        // 0B 0399
        gbc.setState(0x3392, 0x54aa, 0xd420, 0x3c16, 0x6862, 0x408a, 0x0, 0x0);
        gbc.writeMem(0x3392, { 0xb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x54aa, gbc.sp());
        EXPECT(0x3393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 039B
        gbc.setState(0x460a, 0xa774, 0xcb70, 0xee19, 0xa437, 0xdfbd, 0x1, 0x0);
        gbc.writeMem(0x460a, { 0xb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa774, gbc.sp());
        EXPECT(0x460b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 039D
        gbc.setState(0xde16, 0x97bc, 0x2730, 0x8611, 0xdf8f, 0x117a, 0x0, 0x0);
        gbc.writeMem(0xde16, { 0xb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x97bc, gbc.sp());
        EXPECT(0xde17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xde16));
        // 0B 039E
        gbc.setState(0x443c, 0x2cf1, 0xc640, 0x4301, 0x95f4, 0xf57b, 0x0, 0x0);
        gbc.writeMem(0x443c, { 0xb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2cf1, gbc.sp());
        EXPECT(0x443d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 039F
        gbc.setState(0xe64b, 0x7972, 0x3340, 0xc7c6, 0xd7b2, 0xf35a, 0x1, 0x1);
        gbc.writeMem(0xe64b, { 0xb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7972, gbc.sp());
        EXPECT(0xe64c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe64b));
        // 0B 03A0
        gbc.setState(0x94b0, 0x6611, 0xc640, 0x6c9d, 0x1361, 0xa9ff, 0x0, 0x0);
        gbc.writeMem(0x94b0, { 0xb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6611, gbc.sp());
        EXPECT(0x94b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x94b0));
        // 0B 03A1
        gbc.setState(0xb3c, 0x8d15, 0xba00, 0xb24e, 0xef83, 0x5b5, 0x1, 0x0);
        gbc.writeMem(0xb3c, { 0xb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8d15, gbc.sp());
        EXPECT(0xb3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 03A2
        gbc.setState(0xcda, 0xa6f2, 0x8b00, 0x3138, 0xad0a, 0xf35f, 0x1, 0x1);
        gbc.writeMem(0xcda, { 0xb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa6f2, gbc.sp());
        EXPECT(0xcdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 03A3
        gbc.setState(0x5307, 0x3cc9, 0xadc0, 0x7e58, 0x9fe1, 0x54ef, 0x0, 0x0);
        gbc.writeMem(0x5307, { 0xb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3cc9, gbc.sp());
        EXPECT(0x5308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 03A4
        gbc.setState(0x2818, 0x7546, 0xc7c0, 0x7acd, 0x8b7d, 0x3f24, 0x1, 0x1);
        gbc.writeMem(0x2818, { 0xb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7546, gbc.sp());
        EXPECT(0x2819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 03A5
        gbc.setState(0x55aa, 0x1b82, 0x9680, 0x550a, 0xbba2, 0xdfca, 0x0, 0x1);
        gbc.writeMem(0x55aa, { 0xb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1b82, gbc.sp());
        EXPECT(0x55ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 03A6
        gbc.setState(0xdec5, 0xc29e, 0xaf90, 0xf3a0, 0x78fb, 0x6800, 0x0, 0x0);
        gbc.writeMem(0xdec5, { 0xb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc29e, gbc.sp());
        EXPECT(0xdec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xdec5));
        // 0B 03A8
        gbc.setState(0x4e33, 0x3fc, 0x50f0, 0xf875, 0xf9d5, 0x5e96, 0x0, 0x1);
        gbc.writeMem(0x4e33, { 0xb });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3fc, gbc.sp());
        EXPECT(0x4e34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 03A9
        gbc.setState(0x534f, 0x7816, 0xf0b0, 0xb488, 0xa250, 0x893f, 0x0, 0x1);
        gbc.writeMem(0x534f, { 0xb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7816, gbc.sp());
        EXPECT(0x5350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 03AA
        gbc.setState(0xbe66, 0xeafc, 0x550, 0xea4c, 0x8530, 0x8541, 0x0, 0x1);
        gbc.writeMem(0xbe66, { 0xb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xeafc, gbc.sp());
        EXPECT(0xbe67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbe66));
        // 0B 03AB
        gbc.setState(0x39d4, 0x3d62, 0xa800, 0xe0b1, 0x1a6, 0xa772, 0x0, 0x1);
        gbc.writeMem(0x39d4, { 0xb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3d62, gbc.sp());
        EXPECT(0x39d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 03AC
        gbc.setState(0xe8ad, 0x3200, 0xcf10, 0x3dea, 0x4874, 0xadb2, 0x0, 0x1);
        gbc.writeMem(0xe8ad, { 0xb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3200, gbc.sp());
        EXPECT(0xe8ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe8ad));
        // 0B 03AD
        gbc.setState(0x9577, 0x4093, 0x2ef0, 0x7081, 0x992f, 0x71e1, 0x1, 0x1);
        gbc.writeMem(0x9577, { 0xb });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4093, gbc.sp());
        EXPECT(0x9578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9577));
        // 0B 03AE
        gbc.setState(0xc2ea, 0x8ad1, 0x6ac0, 0xa35b, 0x19ab, 0xb2c2, 0x1, 0x1);
        gbc.writeMem(0xc2ea, { 0xb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8ad1, gbc.sp());
        EXPECT(0xc2eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc2ea));
        // 0B 03AF
        gbc.setState(0x16da, 0xb58, 0x9060, 0xfeeb, 0xe7fe, 0x255d, 0x1, 0x1);
        gbc.writeMem(0x16da, { 0xb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb58, gbc.sp());
        EXPECT(0x16db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 03B0
        gbc.setState(0x66c5, 0x2350, 0x32a0, 0x1013, 0x1fb8, 0xf62, 0x0, 0x0);
        gbc.writeMem(0x66c5, { 0xb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2350, gbc.sp());
        EXPECT(0x66c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 03B1
        gbc.setState(0x162d, 0xb40, 0x47f0, 0x311d, 0xee40, 0x17bf, 0x1, 0x0);
        gbc.writeMem(0x162d, { 0xb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb40, gbc.sp());
        EXPECT(0x162e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 03B2
        gbc.setState(0x824d, 0xee0c, 0xaeb0, 0x5b92, 0x7e16, 0x3d1c, 0x0, 0x1);
        gbc.writeMem(0x824d, { 0xb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xee0c, gbc.sp());
        EXPECT(0x824e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x824d));
        // 0B 03B3
        gbc.setState(0xb155, 0x950a, 0x7c40, 0xe3b2, 0x9456, 0x52f, 0x1, 0x1);
        gbc.writeMem(0xb155, { 0xb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x950a, gbc.sp());
        EXPECT(0xb156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb155));
        // 0B 03B4
        gbc.setState(0x892b, 0x5f19, 0xcb60, 0x2adf, 0xa37a, 0x3ad6, 0x0, 0x0);
        gbc.writeMem(0x892b, { 0xb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5f19, gbc.sp());
        EXPECT(0x892c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x892b));
        // 0B 03B5
        gbc.setState(0x6429, 0x78c9, 0x88a0, 0x4c61, 0xab37, 0x22e2, 0x0, 0x0);
        gbc.writeMem(0x6429, { 0xb });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x78c9, gbc.sp());
        EXPECT(0x642a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 03B6
        gbc.setState(0x906e, 0xaa71, 0x67c0, 0x430b, 0x41da, 0x3efb, 0x1, 0x1);
        gbc.writeMem(0x906e, { 0xb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xaa71, gbc.sp());
        EXPECT(0x906f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x906e));
        // 0B 03B7
        gbc.setState(0xb4d2, 0x8463, 0xc410, 0xfd1, 0x1fb1, 0x3511, 0x1, 0x0);
        gbc.writeMem(0xb4d2, { 0xb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8463, gbc.sp());
        EXPECT(0xb4d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb4d2));
        // 0B 03B8
        gbc.setState(0xc113, 0x3232, 0xe400, 0x831d, 0x59f9, 0xaed, 0x0, 0x1);
        gbc.writeMem(0xc113, { 0xb });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3232, gbc.sp());
        EXPECT(0xc114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc113));
        // 0B 03B9
        gbc.setState(0xa7d6, 0x337e, 0xccf0, 0x1b77, 0x5c86, 0x15, 0x1, 0x0);
        gbc.writeMem(0xa7d6, { 0xb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x337e, gbc.sp());
        EXPECT(0xa7d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa7d6));
        // 0B 03BA
        gbc.setState(0x398a, 0x6526, 0x6d20, 0x6ac3, 0x2a6, 0x28ee, 0x1, 0x1);
        gbc.writeMem(0x398a, { 0xb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6526, gbc.sp());
        EXPECT(0x398b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 03BB
        gbc.setState(0x19e2, 0xf5eb, 0xc470, 0x61a2, 0x821e, 0x126f, 0x1, 0x1);
        gbc.writeMem(0x19e2, { 0xb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf5eb, gbc.sp());
        EXPECT(0x19e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 03BC
        gbc.setState(0x6630, 0x6215, 0xb200, 0x54e3, 0x642e, 0xa553, 0x1, 0x1);
        gbc.writeMem(0x6630, { 0xb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6215, gbc.sp());
        EXPECT(0x6631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 03BD
        gbc.setState(0x63a6, 0x9fcf, 0x3370, 0xbf99, 0xa2c4, 0xd8e1, 0x0, 0x1);
        gbc.writeMem(0x63a6, { 0xb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9fcf, gbc.sp());
        EXPECT(0x63a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 03BE
        gbc.setState(0x2c5c, 0x4e85, 0x62c0, 0xc8f2, 0x8bc5, 0x494d, 0x1, 0x0);
        gbc.writeMem(0x2c5c, { 0xb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4e85, gbc.sp());
        EXPECT(0x2c5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 03BF
        gbc.setState(0xda4e, 0x88e, 0x5d80, 0x1333, 0x7d1e, 0x2047, 0x1, 0x0);
        gbc.writeMem(0xda4e, { 0xb });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x88e, gbc.sp());
        EXPECT(0xda4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xda4e));
        // 0B 03C0
        gbc.setState(0x1d94, 0x6595, 0x2210, 0xfa49, 0x94e9, 0xd3d7, 0x0, 0x0);
        gbc.writeMem(0x1d94, { 0xb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6595, gbc.sp());
        EXPECT(0x1d95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 03C1
        gbc.setState(0x9b0c, 0x450f, 0x4fd0, 0xf3f4, 0xc385, 0x4ebd, 0x0, 0x1);
        gbc.writeMem(0x9b0c, { 0xb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x450f, gbc.sp());
        EXPECT(0x9b0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9b0c));
        // 0B 03C2
        gbc.setState(0xbe0d, 0x64a0, 0x1c20, 0x4e81, 0x3d96, 0x4501, 0x0, 0x0);
        gbc.writeMem(0xbe0d, { 0xb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x64a0, gbc.sp());
        EXPECT(0xbe0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbe0d));
        // 0B 03C3
        gbc.setState(0x9333, 0x83b5, 0xa910, 0xb294, 0x9aa3, 0xf649, 0x0, 0x0);
        gbc.writeMem(0x9333, { 0xb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x83b5, gbc.sp());
        EXPECT(0x9334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9333));
        // 0B 03C4
        gbc.setState(0xdd47, 0x20d5, 0x4040, 0xc33c, 0x79e1, 0xd057, 0x1, 0x0);
        gbc.writeMem(0xdd47, { 0xb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x20d5, gbc.sp());
        EXPECT(0xdd48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xdd47));
        // 0B 03C5
        gbc.setState(0x3e3c, 0x87e8, 0x33d0, 0x8b97, 0xebf3, 0xe10e, 0x0, 0x0);
        gbc.writeMem(0x3e3c, { 0xb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x87e8, gbc.sp());
        EXPECT(0x3e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 03C6
        gbc.setState(0xd665, 0xd8fd, 0xdf30, 0x3ae8, 0xc5e4, 0x9217, 0x0, 0x0);
        gbc.writeMem(0xd665, { 0xb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd8fd, gbc.sp());
        EXPECT(0xd666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd665));
        // 0B 03C7
        gbc.setState(0xde4d, 0xc6c7, 0x95c0, 0x15f3, 0x39f2, 0x3726, 0x1, 0x0);
        gbc.writeMem(0xde4d, { 0xb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc6c7, gbc.sp());
        EXPECT(0xde4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xde4d));
        // 0B 03C8
        gbc.setState(0xde64, 0x8871, 0xed10, 0xfeee, 0x51b0, 0x3a38, 0x1, 0x0);
        gbc.writeMem(0xde64, { 0xb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8871, gbc.sp());
        EXPECT(0xde65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xde64));
        // 0B 03C9
        gbc.setState(0x4a5d, 0x4552, 0xa910, 0x8584, 0xfac1, 0xb874, 0x0, 0x0);
        gbc.writeMem(0x4a5d, { 0xb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4552, gbc.sp());
        EXPECT(0x4a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 03CA
        gbc.setState(0x3112, 0x90a, 0x6c60, 0x9215, 0xab3e, 0xe82d, 0x0, 0x1);
        gbc.writeMem(0x3112, { 0xb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x90a, gbc.sp());
        EXPECT(0x3113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 03CB
        gbc.setState(0x27d9, 0xbf86, 0x2510, 0xfce8, 0x9439, 0x5d63, 0x0, 0x0);
        gbc.writeMem(0x27d9, { 0xb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbf86, gbc.sp());
        EXPECT(0x27da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 03CC
        gbc.setState(0xb138, 0x5be8, 0xaf20, 0x4f92, 0x7653, 0x6d26, 0x1, 0x0);
        gbc.writeMem(0xb138, { 0xb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5be8, gbc.sp());
        EXPECT(0xb139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb138));
        // 0B 03CD
        gbc.setState(0x9634, 0x4103, 0xba80, 0xdbe3, 0x450d, 0x5626, 0x0, 0x0);
        gbc.writeMem(0x9634, { 0xb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4103, gbc.sp());
        EXPECT(0x9635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9634));
        // 0B 03CE
        gbc.setState(0x9eef, 0x247a, 0x5dc0, 0xedeb, 0xa4b3, 0xe477, 0x0, 0x0);
        gbc.writeMem(0x9eef, { 0xb });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x247a, gbc.sp());
        EXPECT(0x9ef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9eef));
        // 0B 03CF
        gbc.setState(0x1288, 0xd9c7, 0x4200, 0x6b, 0xd65a, 0xcf36, 0x0, 0x1);
        gbc.writeMem(0x1288, { 0xb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd9c7, gbc.sp());
        EXPECT(0x1289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 03D1
        gbc.setState(0xaca, 0xff5b, 0xbaf0, 0x8d03, 0xba3f, 0x428a, 0x0, 0x0);
        gbc.writeMem(0xaca, { 0xb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xff5b, gbc.sp());
        EXPECT(0xacb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 03D2
        gbc.setState(0x4788, 0xa85, 0x68d0, 0x1f63, 0x359f, 0xf703, 0x0, 0x0);
        gbc.writeMem(0x4788, { 0xb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa85, gbc.sp());
        EXPECT(0x4789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 03D3
        gbc.setState(0xa782, 0x352a, 0x2420, 0xf010, 0x4d8b, 0xd28f, 0x0, 0x1);
        gbc.writeMem(0xa782, { 0xb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x352a, gbc.sp());
        EXPECT(0xa783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa782));
        // 0B 03D4
        gbc.setState(0xc5d0, 0xa6e3, 0x64a0, 0x53eb, 0xcbd5, 0x78ac, 0x0, 0x1);
        gbc.writeMem(0xc5d0, { 0xb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa6e3, gbc.sp());
        EXPECT(0xc5d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc5d0));
        // 0B 03D5
        gbc.setState(0xb986, 0xee47, 0x2130, 0x2cde, 0x2602, 0x5ce, 0x0, 0x0);
        gbc.writeMem(0xb986, { 0xb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xee47, gbc.sp());
        EXPECT(0xb987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb986));
        // 0B 03D6
        gbc.setState(0x6c9b, 0x49c7, 0xd380, 0x377e, 0xa0f0, 0x8b89, 0x0, 0x0);
        gbc.writeMem(0x6c9b, { 0xb });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x49c7, gbc.sp());
        EXPECT(0x6c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 03D7
        gbc.setState(0xb306, 0x3623, 0x58e0, 0xe207, 0x8863, 0xe1dd, 0x1, 0x1);
        gbc.writeMem(0xb306, { 0xb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3623, gbc.sp());
        EXPECT(0xb307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb306));
        // 0B 03D8
        gbc.setState(0x6492, 0xb913, 0x9ff0, 0xba35, 0x50f, 0x216, 0x0, 0x1);
        gbc.writeMem(0x6492, { 0xb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb913, gbc.sp());
        EXPECT(0x6493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 03D9
        gbc.setState(0xa144, 0x3738, 0xdec0, 0xa0da, 0x5508, 0x4057, 0x1, 0x1);
        gbc.writeMem(0xa144, { 0xb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3738, gbc.sp());
        EXPECT(0xa145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa144));
        // 0B 03DA
        gbc.setState(0xeee4, 0x6513, 0x3550, 0x1558, 0x3e2d, 0xf6eb, 0x0, 0x0);
        gbc.writeMem(0xeee4, { 0xb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6513, gbc.sp());
        EXPECT(0xeee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xeee4));
        // 0B 03DB
        gbc.setState(0xaf8d, 0xc526, 0xdb90, 0x5e71, 0x204a, 0x647c, 0x1, 0x1);
        gbc.writeMem(0xaf8d, { 0xb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc526, gbc.sp());
        EXPECT(0xaf8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xaf8d));
        // 0B 03DC
        gbc.setState(0x9fb0, 0xf228, 0x2950, 0xf33d, 0xf51f, 0x77dd, 0x0, 0x1);
        gbc.writeMem(0x9fb0, { 0xb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf228, gbc.sp());
        EXPECT(0x9fb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9fb0));
        // 0B 03DD
        gbc.setState(0x545, 0x4dfb, 0x9670, 0x95ce, 0x8633, 0xe9f4, 0x0, 0x0);
        gbc.writeMem(0x545, { 0xb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4dfb, gbc.sp());
        EXPECT(0x546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 03DE
        gbc.setState(0x90d, 0xcb97, 0x8a40, 0xde4f, 0x6059, 0xe08d, 0x1, 0x0);
        gbc.writeMem(0x90d, { 0xb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcb97, gbc.sp());
        EXPECT(0x90e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 03DF
        gbc.setState(0xa5de, 0x8615, 0x50a0, 0x212c, 0x81f1, 0x681c, 0x1, 0x1);
        gbc.writeMem(0xa5de, { 0xb });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8615, gbc.sp());
        EXPECT(0xa5df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa5de));
        // 0B 03E0
        gbc.setState(0xcd39, 0x4a25, 0xfc70, 0xdefd, 0x73d5, 0xda31, 0x0, 0x1);
        gbc.writeMem(0xcd39, { 0xb });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4a25, gbc.sp());
        EXPECT(0xcd3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xcd39));
        // 0B 03E2
        gbc.setState(0x958f, 0x5b30, 0x89f0, 0x67, 0xaa09, 0xa16, 0x0, 0x0);
        gbc.writeMem(0x958f, { 0xb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5b30, gbc.sp());
        EXPECT(0x9590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x958f));
        // 0B 03E3
        gbc.setState(0x9747, 0x407e, 0xde00, 0xb844, 0xd5ee, 0xabf2, 0x0, 0x1);
        gbc.writeMem(0x9747, { 0xb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x407e, gbc.sp());
        EXPECT(0x9748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9747));
        // 0B 03E4
        gbc.setState(0x648e, 0x35b6, 0x32f0, 0x4357, 0x575b, 0x6bbe, 0x0, 0x1);
        gbc.writeMem(0x648e, { 0xb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x35b6, gbc.sp());
        EXPECT(0x648f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 03E5
        gbc.setState(0x5735, 0xbcd1, 0x6260, 0xe98b, 0xa983, 0x8b1f, 0x1, 0x0);
        gbc.writeMem(0x5735, { 0xb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbcd1, gbc.sp());
        EXPECT(0x5736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0B 03E6
        gbc.setState(0x5ce4, 0x5683, 0x8090, 0x441b, 0x7efe, 0x1a20, 0x1, 0x1);
        gbc.writeMem(0x5ce4, { 0xb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5683, gbc.sp());
        EXPECT(0x5ce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0B 03E7
        gbc.setState(0xc780, 0x5f1d, 0x8010, 0x7987, 0xdb14, 0x8871, 0x0, 0x1);
        gbc.writeMem(0xc780, { 0xb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5f1d, gbc.sp());
        EXPECT(0xc781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc780));
    }
