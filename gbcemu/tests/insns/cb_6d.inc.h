    TEST(gbcemu, opcode_cb_6d) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 6D 0000
        gbc.setState(0x28fd, 0xb355, 0x8540, 0x2c04, 0x445e, 0xba2, 0x1, 0x0);
        gbc.writeMem(0x28fd, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb355, gbc.sp());
        EXPECT(0x28ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0001
        gbc.setState(0x4e59, 0x1cc2, 0x1e50, 0x63d7, 0x114f, 0x2980, 0x0, 0x0);
        gbc.writeMem(0x4e59, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1cc2, gbc.sp());
        EXPECT(0x4e5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0002
        gbc.setState(0x2057, 0xbef, 0x6d50, 0x3e06, 0xc659, 0xf688, 0x1, 0x1);
        gbc.writeMem(0x2057, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xbef, gbc.sp());
        EXPECT(0x2059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0003
        gbc.setState(0xa2ca, 0x6cd9, 0x1db0, 0xa615, 0xd47b, 0x6244, 0x0, 0x1);
        gbc.writeMem(0xa2ca, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6cd9, gbc.sp());
        EXPECT(0xa2cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ca));
        EXPECT(0x6d, gbc.readMem(0xa2cb));
        // CB 6D 0004
        gbc.setState(0x85f4, 0x7aa3, 0xc390, 0x7e68, 0x3655, 0x71ef, 0x1, 0x1);
        gbc.writeMem(0x85f4, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7aa3, gbc.sp());
        EXPECT(0x85f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85f4));
        EXPECT(0x6d, gbc.readMem(0x85f5));
        // CB 6D 0005
        gbc.setState(0xc148, 0xf75, 0xa0d0, 0x8460, 0x1c74, 0xa97d, 0x0, 0x0);
        gbc.writeMem(0xc148, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf75, gbc.sp());
        EXPECT(0xc14a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc148));
        EXPECT(0x6d, gbc.readMem(0xc149));
        // CB 6D 0006
        gbc.setState(0x7726, 0x464, 0xf4f0, 0x5deb, 0xe664, 0xce91, 0x1, 0x0);
        gbc.writeMem(0x7726, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x464, gbc.sp());
        EXPECT(0x7728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0007
        gbc.setState(0xb2e7, 0x6ba2, 0x2250, 0x7c3e, 0x681, 0xaf68, 0x0, 0x0);
        gbc.writeMem(0xb2e7, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6ba2, gbc.sp());
        EXPECT(0xb2e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e7));
        EXPECT(0x6d, gbc.readMem(0xb2e8));
        // CB 6D 0008
        gbc.setState(0x1004, 0xe69a, 0xfe10, 0xeaf4, 0xf46b, 0x4b93, 0x0, 0x0);
        gbc.writeMem(0x1004, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe69a, gbc.sp());
        EXPECT(0x1006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0009
        gbc.setState(0x8bde, 0x3ee, 0x6a10, 0xac21, 0x5ea, 0x8837, 0x1, 0x1);
        gbc.writeMem(0x8bde, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3ee, gbc.sp());
        EXPECT(0x8be0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bde));
        EXPECT(0x6d, gbc.readMem(0x8bdf));
        // CB 6D 000A
        gbc.setState(0x2bce, 0x1299, 0x5f0, 0xf0b5, 0x8590, 0xf051, 0x1, 0x0);
        gbc.writeMem(0x2bce, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1299, gbc.sp());
        EXPECT(0x2bd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 000B
        gbc.setState(0xe16c, 0x91e, 0xd3d0, 0xb5a3, 0x46d5, 0x5ea5, 0x1, 0x1);
        gbc.writeMem(0xe16c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x91e, gbc.sp());
        EXPECT(0xe16e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe16c));
        EXPECT(0x6d, gbc.readMem(0xe16d));
        // CB 6D 000C
        gbc.setState(0x55ef, 0xb8d2, 0x6480, 0x9ead, 0x2134, 0x1b6e, 0x0, 0x1);
        gbc.writeMem(0x55ef, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb8d2, gbc.sp());
        EXPECT(0x55f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 000E
        gbc.setState(0xdc55, 0xdecb, 0xbd80, 0x7385, 0xdf15, 0x23d7, 0x1, 0x0);
        gbc.writeMem(0xdc55, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xdecb, gbc.sp());
        EXPECT(0xdc57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc55));
        EXPECT(0x6d, gbc.readMem(0xdc56));
        // CB 6D 0010
        gbc.setState(0x23fb, 0x8f05, 0xb370, 0x6dbb, 0x2598, 0xdaaa, 0x0, 0x1);
        gbc.writeMem(0x23fb, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8f05, gbc.sp());
        EXPECT(0x23fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0011
        gbc.setState(0x1e01, 0xbace, 0x5890, 0x245f, 0x4b22, 0xb347, 0x0, 0x1);
        gbc.writeMem(0x1e01, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbace, gbc.sp());
        EXPECT(0x1e03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0012
        gbc.setState(0xe45d, 0x84b5, 0xd470, 0x43e1, 0xecb6, 0x1f32, 0x1, 0x0);
        gbc.writeMem(0xe45d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x84b5, gbc.sp());
        EXPECT(0xe45f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe45d));
        EXPECT(0x6d, gbc.readMem(0xe45e));
        // CB 6D 0013
        gbc.setState(0x6163, 0xdd9d, 0x9180, 0x69fa, 0x2eb4, 0xf1a, 0x1, 0x0);
        gbc.writeMem(0x6163, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdd9d, gbc.sp());
        EXPECT(0x6165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0016
        gbc.setState(0x3da9, 0xe03d, 0xab00, 0x8dbe, 0xd7a5, 0x463c, 0x1, 0x0);
        gbc.writeMem(0x3da9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe03d, gbc.sp());
        EXPECT(0x3dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0017
        gbc.setState(0x7e56, 0x3112, 0x8010, 0x554d, 0x506b, 0xc632, 0x0, 0x0);
        gbc.writeMem(0x7e56, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3112, gbc.sp());
        EXPECT(0x7e58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0018
        gbc.setState(0x5efb, 0xcffd, 0x34a0, 0xd7e5, 0x80b6, 0xfdef, 0x0, 0x1);
        gbc.writeMem(0x5efb, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xcffd, gbc.sp());
        EXPECT(0x5efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0019
        gbc.setState(0x86d5, 0xf45f, 0x3d00, 0x776f, 0xa692, 0xe21d, 0x1, 0x1);
        gbc.writeMem(0x86d5, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf45f, gbc.sp());
        EXPECT(0x86d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86d5));
        EXPECT(0x6d, gbc.readMem(0x86d6));
        // CB 6D 001A
        gbc.setState(0x8abd, 0xd27, 0x4ad0, 0xff1d, 0x9e15, 0x35a0, 0x0, 0x1);
        gbc.writeMem(0x8abd, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd27, gbc.sp());
        EXPECT(0x8abf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8abd));
        EXPECT(0x6d, gbc.readMem(0x8abe));
        // CB 6D 001B
        gbc.setState(0x42d1, 0xe318, 0x4c60, 0xf2b3, 0x133f, 0x1fa2, 0x1, 0x1);
        gbc.writeMem(0x42d1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe318, gbc.sp());
        EXPECT(0x42d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 001D
        gbc.setState(0xed66, 0x16d0, 0x82e0, 0x7048, 0x575, 0x37d1, 0x1, 0x0);
        gbc.writeMem(0xed66, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x16d0, gbc.sp());
        EXPECT(0xed68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed66));
        EXPECT(0x6d, gbc.readMem(0xed67));
        // CB 6D 001E
        gbc.setState(0xe209, 0x9309, 0x4a60, 0xb96b, 0x316, 0x4a5e, 0x1, 0x0);
        gbc.writeMem(0xe209, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9309, gbc.sp());
        EXPECT(0xe20b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe209));
        EXPECT(0x6d, gbc.readMem(0xe20a));
        // CB 6D 001F
        gbc.setState(0xeb56, 0x6c91, 0x12e0, 0x732a, 0xb1ca, 0x6748, 0x1, 0x0);
        gbc.writeMem(0xeb56, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6c91, gbc.sp());
        EXPECT(0xeb58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb56));
        EXPECT(0x6d, gbc.readMem(0xeb57));
        // CB 6D 0021
        gbc.setState(0xa036, 0xff18, 0x4a40, 0x99f5, 0x5810, 0xa618, 0x1, 0x0);
        gbc.writeMem(0xa036, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xff18, gbc.sp());
        EXPECT(0xa038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa036));
        EXPECT(0x6d, gbc.readMem(0xa037));
        // CB 6D 0022
        gbc.setState(0x1a53, 0x2988, 0x57f0, 0x6c20, 0x1842, 0xe161, 0x1, 0x1);
        gbc.writeMem(0x1a53, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2988, gbc.sp());
        EXPECT(0x1a55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0023
        gbc.setState(0x8140, 0x172a, 0x8950, 0x4a8a, 0x1096, 0x6a4b, 0x0, 0x1);
        gbc.writeMem(0x8140, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x172a, gbc.sp());
        EXPECT(0x8142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8140));
        EXPECT(0x6d, gbc.readMem(0x8141));
        // CB 6D 0024
        gbc.setState(0xd84, 0x6b15, 0xc9b0, 0x9729, 0x7902, 0x97e5, 0x1, 0x1);
        gbc.writeMem(0xd84, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6b15, gbc.sp());
        EXPECT(0xd86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0025
        gbc.setState(0x240e, 0x5528, 0xe9e0, 0x4578, 0xffbc, 0x79b3, 0x1, 0x1);
        gbc.writeMem(0x240e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5528, gbc.sp());
        EXPECT(0x2410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0026
        gbc.setState(0x3965, 0xe56b, 0x6540, 0x1846, 0x87ea, 0x8585, 0x0, 0x1);
        gbc.writeMem(0x3965, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe56b, gbc.sp());
        EXPECT(0x3967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0027
        gbc.setState(0xe30b, 0x7571, 0xbec0, 0x5ebf, 0x7c31, 0xf7cc, 0x1, 0x1);
        gbc.writeMem(0xe30b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7571, gbc.sp());
        EXPECT(0xe30d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe30b));
        EXPECT(0x6d, gbc.readMem(0xe30c));
        // CB 6D 0028
        gbc.setState(0xb1ee, 0x2706, 0x6780, 0xcb6c, 0x29f7, 0xca9f, 0x1, 0x0);
        gbc.writeMem(0xb1ee, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2706, gbc.sp());
        EXPECT(0xb1f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ee));
        EXPECT(0x6d, gbc.readMem(0xb1ef));
        // CB 6D 002A
        gbc.setState(0xb063, 0xffde, 0x3760, 0xecd3, 0x717d, 0xf878, 0x0, 0x1);
        gbc.writeMem(0xb063, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xffde, gbc.sp());
        EXPECT(0xb065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb063));
        EXPECT(0x6d, gbc.readMem(0xb064));
        // CB 6D 002B
        gbc.setState(0x854b, 0x71b5, 0xef80, 0xe588, 0xe239, 0x93c4, 0x0, 0x1);
        gbc.writeMem(0x854b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x71b5, gbc.sp());
        EXPECT(0x854d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x854b));
        EXPECT(0x6d, gbc.readMem(0x854c));
        // CB 6D 002C
        gbc.setState(0xab45, 0x23b3, 0xa0d0, 0xb0cc, 0xafb3, 0x454e, 0x1, 0x1);
        gbc.writeMem(0xab45, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x23b3, gbc.sp());
        EXPECT(0xab47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab45));
        EXPECT(0x6d, gbc.readMem(0xab46));
        // CB 6D 002D
        gbc.setState(0xa3b8, 0x73ec, 0x200, 0xcd74, 0x1702, 0xe1b5, 0x0, 0x1);
        gbc.writeMem(0xa3b8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x73ec, gbc.sp());
        EXPECT(0xa3ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3b8));
        EXPECT(0x6d, gbc.readMem(0xa3b9));
        // CB 6D 002E
        gbc.setState(0x8847, 0xe7a, 0x59d0, 0xc674, 0xfe81, 0x4ffc, 0x1, 0x0);
        gbc.writeMem(0x8847, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe7a, gbc.sp());
        EXPECT(0x8849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8847));
        EXPECT(0x6d, gbc.readMem(0x8848));
        // CB 6D 002F
        gbc.setState(0xefeb, 0xf5bc, 0xae70, 0x286b, 0x7295, 0xaee, 0x1, 0x0);
        gbc.writeMem(0xefeb, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf5bc, gbc.sp());
        EXPECT(0xefed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefeb));
        EXPECT(0x6d, gbc.readMem(0xefec));
        // CB 6D 0030
        gbc.setState(0x5bdf, 0x2120, 0x24f0, 0x22d8, 0x9415, 0xfd76, 0x1, 0x0);
        gbc.writeMem(0x5bdf, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2120, gbc.sp());
        EXPECT(0x5be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0032
        gbc.setState(0xc2ae, 0xf818, 0xa350, 0x711b, 0xf741, 0xdf73, 0x0, 0x1);
        gbc.writeMem(0xc2ae, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf818, gbc.sp());
        EXPECT(0xc2b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ae));
        EXPECT(0x6d, gbc.readMem(0xc2af));
        // CB 6D 0034
        gbc.setState(0x10f8, 0xb9c, 0x6370, 0x580e, 0x593c, 0x25d3, 0x1, 0x0);
        gbc.writeMem(0x10f8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb9c, gbc.sp());
        EXPECT(0x10fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0035
        gbc.setState(0x3655, 0xad0f, 0x70, 0x6df9, 0xdd71, 0xdbae, 0x0, 0x1);
        gbc.writeMem(0x3655, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xad0f, gbc.sp());
        EXPECT(0x3657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0036
        gbc.setState(0xb5a9, 0x356f, 0xac10, 0x4534, 0xb6e, 0x9bc0, 0x1, 0x1);
        gbc.writeMem(0xb5a9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x356f, gbc.sp());
        EXPECT(0xb5ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5a9));
        EXPECT(0x6d, gbc.readMem(0xb5aa));
        // CB 6D 0037
        gbc.setState(0x4cd7, 0x1fd4, 0xfd70, 0xbb50, 0x87c, 0x144b, 0x1, 0x0);
        gbc.writeMem(0x4cd7, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1fd4, gbc.sp());
        EXPECT(0x4cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0038
        gbc.setState(0x1f27, 0xcc01, 0x3250, 0x94ed, 0xf3db, 0x668c, 0x1, 0x1);
        gbc.writeMem(0x1f27, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcc01, gbc.sp());
        EXPECT(0x1f29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 003A
        gbc.setState(0xb4a, 0x9b95, 0x2ee0, 0xed9a, 0xcd13, 0x3664, 0x0, 0x0);
        gbc.writeMem(0xb4a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9b95, gbc.sp());
        EXPECT(0xb4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 003B
        gbc.setState(0x3445, 0xe85f, 0x9910, 0x5073, 0xc95b, 0x159f, 0x1, 0x1);
        gbc.writeMem(0x3445, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe85f, gbc.sp());
        EXPECT(0x3447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 003D
        gbc.setState(0x533d, 0x4b09, 0x9640, 0xda74, 0x5d8f, 0x2a, 0x0, 0x1);
        gbc.writeMem(0x533d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4b09, gbc.sp());
        EXPECT(0x533f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 003E
        gbc.setState(0xaa32, 0xf2ad, 0x20d0, 0xfefe, 0x6eb7, 0xa67b, 0x0, 0x0);
        gbc.writeMem(0xaa32, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf2ad, gbc.sp());
        EXPECT(0xaa34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa32));
        EXPECT(0x6d, gbc.readMem(0xaa33));
        // CB 6D 003F
        gbc.setState(0x7d75, 0x6bf9, 0x9e00, 0x344d, 0xe168, 0xdcad, 0x1, 0x1);
        gbc.writeMem(0x7d75, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6bf9, gbc.sp());
        EXPECT(0x7d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0040
        gbc.setState(0xbb49, 0xebde, 0xf3c0, 0x97c9, 0xd267, 0x9d6b, 0x1, 0x1);
        gbc.writeMem(0xbb49, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xebde, gbc.sp());
        EXPECT(0xbb4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb49));
        EXPECT(0x6d, gbc.readMem(0xbb4a));
        // CB 6D 0041
        gbc.setState(0x9a51, 0xe548, 0x9190, 0x292c, 0x9086, 0x6119, 0x1, 0x0);
        gbc.writeMem(0x9a51, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe548, gbc.sp());
        EXPECT(0x9a53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a51));
        EXPECT(0x6d, gbc.readMem(0x9a52));
        // CB 6D 0042
        gbc.setState(0x3738, 0xd302, 0xb8f0, 0x1195, 0xcff8, 0x6572, 0x1, 0x1);
        gbc.writeMem(0x3738, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd302, gbc.sp());
        EXPECT(0x373a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0043
        gbc.setState(0x3cda, 0x6026, 0xde70, 0x19aa, 0x503, 0x2bb1, 0x0, 0x0);
        gbc.writeMem(0x3cda, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6026, gbc.sp());
        EXPECT(0x3cdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0044
        gbc.setState(0x1a0a, 0x93f7, 0x8850, 0xca6c, 0xfa83, 0x4051, 0x0, 0x1);
        gbc.writeMem(0x1a0a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x93f7, gbc.sp());
        EXPECT(0x1a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0045
        gbc.setState(0x4403, 0x12a4, 0xbc40, 0x8c0d, 0x6317, 0xbcde, 0x1, 0x1);
        gbc.writeMem(0x4403, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x12a4, gbc.sp());
        EXPECT(0x4405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0046
        gbc.setState(0x9720, 0x3b8e, 0xef10, 0xae5e, 0xd80a, 0xd17a, 0x0, 0x0);
        gbc.writeMem(0x9720, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3b8e, gbc.sp());
        EXPECT(0x9722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9720));
        EXPECT(0x6d, gbc.readMem(0x9721));
        // CB 6D 0047
        gbc.setState(0x91a0, 0xf562, 0xcdb0, 0xd300, 0x7322, 0x37a0, 0x0, 0x1);
        gbc.writeMem(0x91a0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf562, gbc.sp());
        EXPECT(0x91a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91a0));
        EXPECT(0x6d, gbc.readMem(0x91a1));
        // CB 6D 0048
        gbc.setState(0x76e5, 0xda63, 0x9d60, 0xb691, 0x2a79, 0xb9fe, 0x1, 0x1);
        gbc.writeMem(0x76e5, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xda63, gbc.sp());
        EXPECT(0x76e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0049
        gbc.setState(0x6772, 0x86d, 0xe7b0, 0x7e88, 0xa133, 0xab23, 0x0, 0x1);
        gbc.writeMem(0x6772, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x86d, gbc.sp());
        EXPECT(0x6774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 004A
        gbc.setState(0x8ad9, 0x35f6, 0xbef0, 0xb6e7, 0xa267, 0x65eb, 0x0, 0x1);
        gbc.writeMem(0x8ad9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x35f6, gbc.sp());
        EXPECT(0x8adb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad9));
        EXPECT(0x6d, gbc.readMem(0x8ada));
        // CB 6D 004B
        gbc.setState(0xe8f9, 0x34d6, 0x6750, 0x6e05, 0x4563, 0x3e97, 0x0, 0x1);
        gbc.writeMem(0xe8f9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x34d6, gbc.sp());
        EXPECT(0xe8fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8f9));
        EXPECT(0x6d, gbc.readMem(0xe8fa));
        // CB 6D 004C
        gbc.setState(0x6aed, 0x3805, 0xd7c0, 0xab5, 0x9fd6, 0x9dc8, 0x1, 0x1);
        gbc.writeMem(0x6aed, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3805, gbc.sp());
        EXPECT(0x6aef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 004D
        gbc.setState(0x3b58, 0xd4c1, 0x8080, 0xb6de, 0x40c8, 0x717b, 0x1, 0x1);
        gbc.writeMem(0x3b58, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd4c1, gbc.sp());
        EXPECT(0x3b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 004E
        gbc.setState(0xaf45, 0x1eae, 0xb150, 0xf6c, 0xb5c8, 0x1e23, 0x1, 0x0);
        gbc.writeMem(0xaf45, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1eae, gbc.sp());
        EXPECT(0xaf47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf45));
        EXPECT(0x6d, gbc.readMem(0xaf46));
        // CB 6D 004F
        gbc.setState(0x1ca4, 0x66ed, 0x2b20, 0x9889, 0x4e79, 0xf0cc, 0x0, 0x0);
        gbc.writeMem(0x1ca4, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x66ed, gbc.sp());
        EXPECT(0x1ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0050
        gbc.setState(0x6e33, 0x5ec5, 0xa660, 0xa08c, 0x9622, 0x5b51, 0x1, 0x0);
        gbc.writeMem(0x6e33, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5ec5, gbc.sp());
        EXPECT(0x6e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0051
        gbc.setState(0xd411, 0x6ec0, 0xa730, 0x6486, 0xc320, 0xf887, 0x0, 0x1);
        gbc.writeMem(0xd411, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6ec0, gbc.sp());
        EXPECT(0xd413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd411));
        EXPECT(0x6d, gbc.readMem(0xd412));
        // CB 6D 0053
        gbc.setState(0x6093, 0x6859, 0xc6b0, 0x7c1b, 0x3f20, 0x22ed, 0x1, 0x0);
        gbc.writeMem(0x6093, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6859, gbc.sp());
        EXPECT(0x6095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0054
        gbc.setState(0x9efc, 0x8b21, 0x69c0, 0x1fda, 0x3fc2, 0x767, 0x0, 0x0);
        gbc.writeMem(0x9efc, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8b21, gbc.sp());
        EXPECT(0x9efe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9efc));
        EXPECT(0x6d, gbc.readMem(0x9efd));
        // CB 6D 0055
        gbc.setState(0xe8c9, 0x1ac6, 0xf2c0, 0x7a9f, 0x24c, 0xc68d, 0x0, 0x1);
        gbc.writeMem(0xe8c9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1ac6, gbc.sp());
        EXPECT(0xe8cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c9));
        EXPECT(0x6d, gbc.readMem(0xe8ca));
        // CB 6D 0056
        gbc.setState(0x1cd3, 0x2357, 0x96f0, 0x93cd, 0xdf31, 0x200c, 0x0, 0x1);
        gbc.writeMem(0x1cd3, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2357, gbc.sp());
        EXPECT(0x1cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0058
        gbc.setState(0x9701, 0xfdc3, 0x5f40, 0x6e4e, 0xe284, 0x6551, 0x1, 0x1);
        gbc.writeMem(0x9701, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfdc3, gbc.sp());
        EXPECT(0x9703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9701));
        EXPECT(0x6d, gbc.readMem(0x9702));
        // CB 6D 0059
        gbc.setState(0x85df, 0x139d, 0x2d20, 0xd5c0, 0x990b, 0xc182, 0x0, 0x0);
        gbc.writeMem(0x85df, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x139d, gbc.sp());
        EXPECT(0x85e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85df));
        EXPECT(0x6d, gbc.readMem(0x85e0));
        // CB 6D 005A
        gbc.setState(0x90df, 0xa161, 0xb7f0, 0x880d, 0x4ce2, 0x7e1e, 0x0, 0x0);
        gbc.writeMem(0x90df, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa161, gbc.sp());
        EXPECT(0x90e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90df));
        EXPECT(0x6d, gbc.readMem(0x90e0));
        // CB 6D 005B
        gbc.setState(0xcaca, 0xfc29, 0x4f40, 0x2e7c, 0x300f, 0xcf00, 0x1, 0x1);
        gbc.writeMem(0xcaca, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfc29, gbc.sp());
        EXPECT(0xcacc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaca));
        EXPECT(0x6d, gbc.readMem(0xcacb));
        // CB 6D 005C
        gbc.setState(0x1aa3, 0xa19d, 0x800, 0xba0e, 0xa678, 0x5c0b, 0x1, 0x1);
        gbc.writeMem(0x1aa3, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa19d, gbc.sp());
        EXPECT(0x1aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 005D
        gbc.setState(0xcd57, 0xc957, 0xa840, 0x7c65, 0xc47b, 0x853c, 0x1, 0x1);
        gbc.writeMem(0xcd57, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc957, gbc.sp());
        EXPECT(0xcd59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd57));
        EXPECT(0x6d, gbc.readMem(0xcd58));
        // CB 6D 005E
        gbc.setState(0x8b75, 0x3bc3, 0xa10, 0xb78c, 0x3a0c, 0xcccc, 0x0, 0x1);
        gbc.writeMem(0x8b75, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3bc3, gbc.sp());
        EXPECT(0x8b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b75));
        EXPECT(0x6d, gbc.readMem(0x8b76));
        // CB 6D 005F
        gbc.setState(0xd19d, 0x42, 0x16a0, 0xcc42, 0x9fcf, 0xac1, 0x0, 0x0);
        gbc.writeMem(0xd19d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x42, gbc.sp());
        EXPECT(0xd19f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd19d));
        EXPECT(0x6d, gbc.readMem(0xd19e));
        // CB 6D 0060
        gbc.setState(0x6637, 0x4401, 0x6130, 0x916f, 0x3d35, 0xbece, 0x0, 0x1);
        gbc.writeMem(0x6637, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4401, gbc.sp());
        EXPECT(0x6639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0061
        gbc.setState(0x5288, 0x5ef1, 0x24a0, 0x32d1, 0xde68, 0x9b3b, 0x0, 0x1);
        gbc.writeMem(0x5288, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5ef1, gbc.sp());
        EXPECT(0x528a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0062
        gbc.setState(0x811c, 0x973f, 0x82f0, 0x9fee, 0x4d4e, 0x588f, 0x1, 0x0);
        gbc.writeMem(0x811c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x973f, gbc.sp());
        EXPECT(0x811e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x811c));
        EXPECT(0x6d, gbc.readMem(0x811d));
        // CB 6D 0063
        gbc.setState(0xcb95, 0xe6f1, 0x50f0, 0xf873, 0xff4d, 0xedae, 0x0, 0x0);
        gbc.writeMem(0xcb95, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe6f1, gbc.sp());
        EXPECT(0xcb97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb95));
        EXPECT(0x6d, gbc.readMem(0xcb96));
        // CB 6D 0064
        gbc.setState(0xe50d, 0x899, 0x57a0, 0xa857, 0xad08, 0xe342, 0x1, 0x0);
        gbc.writeMem(0xe50d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x899, gbc.sp());
        EXPECT(0xe50f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe50d));
        EXPECT(0x6d, gbc.readMem(0xe50e));
        // CB 6D 0065
        gbc.setState(0xa7ca, 0x3f55, 0x54d0, 0x1646, 0xd779, 0x621a, 0x0, 0x1);
        gbc.writeMem(0xa7ca, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3f55, gbc.sp());
        EXPECT(0xa7cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ca));
        EXPECT(0x6d, gbc.readMem(0xa7cb));
        // CB 6D 0066
        gbc.setState(0xc0d5, 0xaeb3, 0x7680, 0x35af, 0x46e6, 0x698b, 0x1, 0x0);
        gbc.writeMem(0xc0d5, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xaeb3, gbc.sp());
        EXPECT(0xc0d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0d5));
        EXPECT(0x6d, gbc.readMem(0xc0d6));
        // CB 6D 0067
        gbc.setState(0xbcde, 0xdc59, 0x5b30, 0x67a5, 0x3560, 0x8730, 0x1, 0x1);
        gbc.writeMem(0xbcde, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdc59, gbc.sp());
        EXPECT(0xbce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcde));
        EXPECT(0x6d, gbc.readMem(0xbcdf));
        // CB 6D 0068
        gbc.setState(0x4d87, 0xe5df, 0x4000, 0x6074, 0xb1b3, 0x658b, 0x0, 0x1);
        gbc.writeMem(0x4d87, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe5df, gbc.sp());
        EXPECT(0x4d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0069
        gbc.setState(0xc8e8, 0x764f, 0x7fc0, 0x8b23, 0x78e6, 0x2cf1, 0x1, 0x0);
        gbc.writeMem(0xc8e8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x764f, gbc.sp());
        EXPECT(0xc8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e8));
        EXPECT(0x6d, gbc.readMem(0xc8e9));
        // CB 6D 006A
        gbc.setState(0x16ba, 0x73be, 0xbb10, 0x9386, 0x388b, 0x62c4, 0x0, 0x0);
        gbc.writeMem(0x16ba, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x73be, gbc.sp());
        EXPECT(0x16bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 006B
        gbc.setState(0x46f, 0xbe2b, 0x6c90, 0x351f, 0x257, 0x535e, 0x1, 0x1);
        gbc.writeMem(0x46f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbe2b, gbc.sp());
        EXPECT(0x471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 006C
        gbc.setState(0x644, 0xa6a0, 0x71b0, 0x5c99, 0x14ff, 0xaf75, 0x0, 0x0);
        gbc.writeMem(0x644, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa6a0, gbc.sp());
        EXPECT(0x646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 006D
        gbc.setState(0xd0b, 0xac4d, 0x420, 0x687f, 0x9252, 0x13f0, 0x0, 0x1);
        gbc.writeMem(0xd0b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xac4d, gbc.sp());
        EXPECT(0xd0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 006E
        gbc.setState(0x766b, 0x6223, 0x5c90, 0xd568, 0x6efe, 0x1247, 0x1, 0x1);
        gbc.writeMem(0x766b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6223, gbc.sp());
        EXPECT(0x766d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 006F
        gbc.setState(0x6a09, 0xc305, 0xd0c0, 0x1338, 0x1bc6, 0xcf1, 0x1, 0x1);
        gbc.writeMem(0x6a09, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc305, gbc.sp());
        EXPECT(0x6a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0070
        gbc.setState(0x6276, 0xe744, 0x2000, 0xd27c, 0xe5c8, 0xad9a, 0x0, 0x0);
        gbc.writeMem(0x6276, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe744, gbc.sp());
        EXPECT(0x6278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0072
        gbc.setState(0x9580, 0x6dd4, 0xa030, 0x99c4, 0xe7c2, 0x9ef0, 0x0, 0x0);
        gbc.writeMem(0x9580, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6dd4, gbc.sp());
        EXPECT(0x9582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9580));
        EXPECT(0x6d, gbc.readMem(0x9581));
        // CB 6D 0073
        gbc.setState(0x7ca3, 0x3afc, 0xbf40, 0xf394, 0x7c59, 0x64b0, 0x1, 0x0);
        gbc.writeMem(0x7ca3, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3afc, gbc.sp());
        EXPECT(0x7ca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0074
        gbc.setState(0x67e5, 0x515a, 0x7330, 0x5c8c, 0xc3c, 0xd4a1, 0x1, 0x1);
        gbc.writeMem(0x67e5, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x515a, gbc.sp());
        EXPECT(0x67e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0075
        gbc.setState(0xac60, 0x831c, 0x9700, 0xd73a, 0x1f30, 0x8b7c, 0x1, 0x1);
        gbc.writeMem(0xac60, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x831c, gbc.sp());
        EXPECT(0xac62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac60));
        EXPECT(0x6d, gbc.readMem(0xac61));
        // CB 6D 0076
        gbc.setState(0x77f4, 0x436e, 0xe9d0, 0x89d7, 0x36de, 0xac05, 0x1, 0x1);
        gbc.writeMem(0x77f4, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x436e, gbc.sp());
        EXPECT(0x77f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0077
        gbc.setState(0x1d43, 0x5dea, 0x4010, 0xce6f, 0x6fb5, 0x616, 0x1, 0x1);
        gbc.writeMem(0x1d43, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5dea, gbc.sp());
        EXPECT(0x1d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0078
        gbc.setState(0xa99, 0x6a83, 0xac70, 0xe10, 0xfa05, 0xed3d, 0x1, 0x1);
        gbc.writeMem(0xa99, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6a83, gbc.sp());
        EXPECT(0xa9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0079
        gbc.setState(0xb9de, 0x727c, 0x6bb0, 0xcb76, 0xf83c, 0x144, 0x0, 0x1);
        gbc.writeMem(0xb9de, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x727c, gbc.sp());
        EXPECT(0xb9e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9de));
        EXPECT(0x6d, gbc.readMem(0xb9df));
        // CB 6D 007A
        gbc.setState(0x4297, 0xf25e, 0xef40, 0x2419, 0x9b61, 0x7b19, 0x0, 0x0);
        gbc.writeMem(0x4297, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf25e, gbc.sp());
        EXPECT(0x4299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 007B
        gbc.setState(0x1528, 0x9e2a, 0xe860, 0x896d, 0xedc4, 0x9715, 0x1, 0x0);
        gbc.writeMem(0x1528, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9e2a, gbc.sp());
        EXPECT(0x152a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 007C
        gbc.setState(0xeaa1, 0xb59, 0x75a0, 0xa943, 0x2e3d, 0x3707, 0x0, 0x0);
        gbc.writeMem(0xeaa1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb59, gbc.sp());
        EXPECT(0xeaa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaa1));
        EXPECT(0x6d, gbc.readMem(0xeaa2));
        // CB 6D 007D
        gbc.setState(0x7720, 0x3f38, 0x19c0, 0x5fc3, 0x64d5, 0xc74d, 0x0, 0x0);
        gbc.writeMem(0x7720, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3f38, gbc.sp());
        EXPECT(0x7722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 007E
        gbc.setState(0x7346, 0xbe2c, 0xd080, 0x5e14, 0x687e, 0xf048, 0x0, 0x0);
        gbc.writeMem(0x7346, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbe2c, gbc.sp());
        EXPECT(0x7348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 007F
        gbc.setState(0x921e, 0xa389, 0x5800, 0x20e6, 0xb783, 0xf795, 0x0, 0x1);
        gbc.writeMem(0x921e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa389, gbc.sp());
        EXPECT(0x9220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x921e));
        EXPECT(0x6d, gbc.readMem(0x921f));
        // CB 6D 0080
        gbc.setState(0x2dce, 0xebce, 0xa450, 0x3de9, 0xea11, 0x8084, 0x1, 0x0);
        gbc.writeMem(0x2dce, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xebce, gbc.sp());
        EXPECT(0x2dd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0081
        gbc.setState(0x428b, 0xcf63, 0x1470, 0x5664, 0xf08b, 0x8678, 0x1, 0x1);
        gbc.writeMem(0x428b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcf63, gbc.sp());
        EXPECT(0x428d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0082
        gbc.setState(0xa3d, 0x741b, 0xeb90, 0xc782, 0xfcc0, 0x4c38, 0x0, 0x1);
        gbc.writeMem(0xa3d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x741b, gbc.sp());
        EXPECT(0xa3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0083
        gbc.setState(0x9b95, 0xc299, 0x68b0, 0xcd66, 0xa6e4, 0xb180, 0x1, 0x1);
        gbc.writeMem(0x9b95, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc299, gbc.sp());
        EXPECT(0x9b97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b95));
        EXPECT(0x6d, gbc.readMem(0x9b96));
        // CB 6D 0084
        gbc.setState(0x16b4, 0x1ae9, 0xaf10, 0x8ebf, 0x95ae, 0xbe03, 0x1, 0x1);
        gbc.writeMem(0x16b4, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1ae9, gbc.sp());
        EXPECT(0x16b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0085
        gbc.setState(0x5d75, 0x3dd9, 0x3e00, 0xaabf, 0x53f7, 0x26a6, 0x0, 0x1);
        gbc.writeMem(0x5d75, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3dd9, gbc.sp());
        EXPECT(0x5d77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0086
        gbc.setState(0x18a2, 0xc859, 0xbb50, 0x67, 0x6f95, 0x3863, 0x1, 0x0);
        gbc.writeMem(0x18a2, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc859, gbc.sp());
        EXPECT(0x18a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0087
        gbc.setState(0x761, 0x520a, 0x780, 0xd207, 0xc7aa, 0xd9f2, 0x0, 0x1);
        gbc.writeMem(0x761, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x520a, gbc.sp());
        EXPECT(0x763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0088
        gbc.setState(0xceab, 0xde95, 0x1eb0, 0x338a, 0x33cb, 0x50b0, 0x0, 0x0);
        gbc.writeMem(0xceab, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xde95, gbc.sp());
        EXPECT(0xcead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceab));
        EXPECT(0x6d, gbc.readMem(0xceac));
        // CB 6D 008A
        gbc.setState(0xc012, 0x4fea, 0xba00, 0xf956, 0xde, 0x873d, 0x1, 0x0);
        gbc.writeMem(0xc012, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4fea, gbc.sp());
        EXPECT(0xc014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc012));
        EXPECT(0x6d, gbc.readMem(0xc013));
        // CB 6D 008B
        gbc.setState(0x49a3, 0x322f, 0xbce0, 0xd180, 0xd1f2, 0x8f3, 0x0, 0x1);
        gbc.writeMem(0x49a3, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x322f, gbc.sp());
        EXPECT(0x49a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 008C
        gbc.setState(0xa517, 0x1c4f, 0x1af0, 0x2e3b, 0xe3cd, 0xc95f, 0x0, 0x1);
        gbc.writeMem(0xa517, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1c4f, gbc.sp());
        EXPECT(0xa519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa517));
        EXPECT(0x6d, gbc.readMem(0xa518));
        // CB 6D 008D
        gbc.setState(0x7b9c, 0xd8b7, 0x59d0, 0x644a, 0xf5ff, 0xdd1d, 0x0, 0x1);
        gbc.writeMem(0x7b9c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd8b7, gbc.sp());
        EXPECT(0x7b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 008E
        gbc.setState(0x10ce, 0x9b3f, 0x7590, 0x6c08, 0xfc53, 0x7623, 0x1, 0x0);
        gbc.writeMem(0x10ce, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9b3f, gbc.sp());
        EXPECT(0x10d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 008F
        gbc.setState(0x473e, 0x14b2, 0x3440, 0xfbc8, 0x39f5, 0x3485, 0x0, 0x0);
        gbc.writeMem(0x473e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x14b2, gbc.sp());
        EXPECT(0x4740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0090
        gbc.setState(0xc540, 0x8c10, 0x92b0, 0xbddb, 0x77b2, 0x8b08, 0x0, 0x1);
        gbc.writeMem(0xc540, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8c10, gbc.sp());
        EXPECT(0xc542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc540));
        EXPECT(0x6d, gbc.readMem(0xc541));
        // CB 6D 0091
        gbc.setState(0xddc0, 0x1e31, 0xef0, 0x9a51, 0x8e5a, 0xcfb9, 0x0, 0x1);
        gbc.writeMem(0xddc0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1e31, gbc.sp());
        EXPECT(0xddc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc0));
        EXPECT(0x6d, gbc.readMem(0xddc1));
        // CB 6D 0092
        gbc.setState(0x7192, 0x1476, 0x3960, 0xbae1, 0x6785, 0x5ea3, 0x1, 0x1);
        gbc.writeMem(0x7192, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1476, gbc.sp());
        EXPECT(0x7194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0093
        gbc.setState(0xa1b0, 0xe755, 0x6880, 0x8ed3, 0xdfbf, 0x404a, 0x1, 0x1);
        gbc.writeMem(0xa1b0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe755, gbc.sp());
        EXPECT(0xa1b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b0));
        EXPECT(0x6d, gbc.readMem(0xa1b1));
        // CB 6D 0094
        gbc.setState(0x5204, 0xb7ac, 0x950, 0x48c7, 0x45b5, 0xea8b, 0x1, 0x1);
        gbc.writeMem(0x5204, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb7ac, gbc.sp());
        EXPECT(0x5206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0095
        gbc.setState(0xebb5, 0x7dae, 0x62a0, 0xe26b, 0x7fe3, 0x792d, 0x1, 0x1);
        gbc.writeMem(0xebb5, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7dae, gbc.sp());
        EXPECT(0xebb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb5));
        EXPECT(0x6d, gbc.readMem(0xebb6));
        // CB 6D 0096
        gbc.setState(0xa81b, 0xee76, 0xb80, 0x5945, 0x58eb, 0x12ed, 0x0, 0x1);
        gbc.writeMem(0xa81b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xee76, gbc.sp());
        EXPECT(0xa81d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa81b));
        EXPECT(0x6d, gbc.readMem(0xa81c));
        // CB 6D 0097
        gbc.setState(0x4f7d, 0x611, 0xc700, 0x616d, 0xc250, 0x75b3, 0x0, 0x0);
        gbc.writeMem(0x4f7d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x611, gbc.sp());
        EXPECT(0x4f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0098
        gbc.setState(0xc760, 0xe947, 0xb450, 0xc0d7, 0xffaa, 0xb570, 0x1, 0x1);
        gbc.writeMem(0xc760, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe947, gbc.sp());
        EXPECT(0xc762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc760));
        EXPECT(0x6d, gbc.readMem(0xc761));
        // CB 6D 0099
        gbc.setState(0xceef, 0x3e1a, 0xbc40, 0x22aa, 0x1d8c, 0x2223, 0x1, 0x1);
        gbc.writeMem(0xceef, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3e1a, gbc.sp());
        EXPECT(0xcef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceef));
        EXPECT(0x6d, gbc.readMem(0xcef0));
        // CB 6D 009B
        gbc.setState(0x8326, 0x24e6, 0x7220, 0x6121, 0x3fe5, 0x76e9, 0x0, 0x1);
        gbc.writeMem(0x8326, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x24e6, gbc.sp());
        EXPECT(0x8328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8326));
        EXPECT(0x6d, gbc.readMem(0x8327));
        // CB 6D 009C
        gbc.setState(0x2400, 0xbc0f, 0x3d20, 0xbd23, 0x829e, 0x53e1, 0x1, 0x1);
        gbc.writeMem(0x2400, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbc0f, gbc.sp());
        EXPECT(0x2402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 009E
        gbc.setState(0xcef2, 0xd469, 0xfec0, 0x7a63, 0x522a, 0x7a58, 0x0, 0x1);
        gbc.writeMem(0xcef2, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd469, gbc.sp());
        EXPECT(0xcef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef2));
        EXPECT(0x6d, gbc.readMem(0xcef3));
        // CB 6D 009F
        gbc.setState(0x80f0, 0x83a9, 0x6610, 0x3fe3, 0xaafa, 0x3e38, 0x0, 0x0);
        gbc.writeMem(0x80f0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x83a9, gbc.sp());
        EXPECT(0x80f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80f0));
        EXPECT(0x6d, gbc.readMem(0x80f1));
        // CB 6D 00A0
        gbc.setState(0xc618, 0x1700, 0x7060, 0x27db, 0xb191, 0xea7c, 0x1, 0x1);
        gbc.writeMem(0xc618, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1700, gbc.sp());
        EXPECT(0xc61a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc618));
        EXPECT(0x6d, gbc.readMem(0xc619));
        // CB 6D 00A1
        gbc.setState(0xee6f, 0xb539, 0x8a90, 0x5ff, 0x5c42, 0x4534, 0x0, 0x1);
        gbc.writeMem(0xee6f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb539, gbc.sp());
        EXPECT(0xee71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee6f));
        EXPECT(0x6d, gbc.readMem(0xee70));
        // CB 6D 00A2
        gbc.setState(0xb5bf, 0x59ca, 0xb690, 0xb16f, 0x666b, 0x5f66, 0x1, 0x0);
        gbc.writeMem(0xb5bf, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x59ca, gbc.sp());
        EXPECT(0xb5c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5bf));
        EXPECT(0x6d, gbc.readMem(0xb5c0));
        // CB 6D 00A3
        gbc.setState(0x76a1, 0xb461, 0x4e50, 0x3b7d, 0xd544, 0x4ea2, 0x0, 0x0);
        gbc.writeMem(0x76a1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb461, gbc.sp());
        EXPECT(0x76a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 00A4
        gbc.setState(0x7561, 0x658a, 0xb7e0, 0xc6e2, 0x631f, 0x2344, 0x0, 0x1);
        gbc.writeMem(0x7561, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x658a, gbc.sp());
        EXPECT(0x7563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 00A5
        gbc.setState(0x65ec, 0x241c, 0x4ed0, 0xcbcc, 0x11c9, 0xee5a, 0x0, 0x1);
        gbc.writeMem(0x65ec, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x241c, gbc.sp());
        EXPECT(0x65ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 00A6
        gbc.setState(0xeb71, 0x8545, 0x9a0, 0x7c77, 0xe7c8, 0x8086, 0x1, 0x0);
        gbc.writeMem(0xeb71, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8545, gbc.sp());
        EXPECT(0xeb73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb71));
        EXPECT(0x6d, gbc.readMem(0xeb72));
        // CB 6D 00A7
        gbc.setState(0x714c, 0x76ab, 0xa660, 0x53f3, 0x8844, 0xe393, 0x1, 0x1);
        gbc.writeMem(0x714c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x76ab, gbc.sp());
        EXPECT(0x714e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 00A8
        gbc.setState(0x29c8, 0xcdaf, 0xd4c0, 0xf72d, 0x6a69, 0xc9fd, 0x0, 0x1);
        gbc.writeMem(0x29c8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcdaf, gbc.sp());
        EXPECT(0x29ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 00A9
        gbc.setState(0xe8b6, 0x6ea, 0x4e40, 0xb700, 0xcf82, 0xd8, 0x0, 0x0);
        gbc.writeMem(0xe8b6, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6ea, gbc.sp());
        EXPECT(0xe8b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b6));
        EXPECT(0x6d, gbc.readMem(0xe8b7));
        // CB 6D 00AA
        gbc.setState(0xb442, 0x390d, 0xff60, 0xdd15, 0xdd76, 0x96c1, 0x1, 0x0);
        gbc.writeMem(0xb442, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x390d, gbc.sp());
        EXPECT(0xb444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb442));
        EXPECT(0x6d, gbc.readMem(0xb443));
        // CB 6D 00AB
        gbc.setState(0x5b19, 0xdf16, 0x6020, 0x68f2, 0x221b, 0x87d5, 0x1, 0x0);
        gbc.writeMem(0x5b19, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdf16, gbc.sp());
        EXPECT(0x5b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 00AE
        gbc.setState(0xfeb, 0x6c66, 0x9b70, 0x524d, 0x3f6e, 0xc98a, 0x1, 0x0);
        gbc.writeMem(0xfeb, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6c66, gbc.sp());
        EXPECT(0xfed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 00AF
        gbc.setState(0x3b9c, 0x8999, 0x6450, 0x35c7, 0xb47e, 0xa4fd, 0x0, 0x1);
        gbc.writeMem(0x3b9c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8999, gbc.sp());
        EXPECT(0x3b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 00B0
        gbc.setState(0xbd34, 0x8341, 0xc1e0, 0xc770, 0x1b35, 0x1f29, 0x0, 0x0);
        gbc.writeMem(0xbd34, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8341, gbc.sp());
        EXPECT(0xbd36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd34));
        EXPECT(0x6d, gbc.readMem(0xbd35));
        // CB 6D 00B2
        gbc.setState(0xbf51, 0x877d, 0x1f20, 0xccfb, 0x4ce6, 0x714e, 0x0, 0x0);
        gbc.writeMem(0xbf51, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x877d, gbc.sp());
        EXPECT(0xbf53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf51));
        EXPECT(0x6d, gbc.readMem(0xbf52));
        // CB 6D 00B3
        gbc.setState(0x850, 0x51dc, 0x4b0, 0xfef4, 0x9df9, 0x5acd, 0x1, 0x0);
        gbc.writeMem(0x850, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x51dc, gbc.sp());
        EXPECT(0x852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 00B4
        gbc.setState(0xea14, 0x96c0, 0x9870, 0xc2ab, 0x9a56, 0xf0c9, 0x1, 0x1);
        gbc.writeMem(0xea14, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x96c0, gbc.sp());
        EXPECT(0xea16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea14));
        EXPECT(0x6d, gbc.readMem(0xea15));
        // CB 6D 00B5
        gbc.setState(0xe2d7, 0x710a, 0x4b80, 0xc584, 0x3710, 0x3ec9, 0x0, 0x1);
        gbc.writeMem(0xe2d7, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x710a, gbc.sp());
        EXPECT(0xe2d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2d7));
        EXPECT(0x6d, gbc.readMem(0xe2d8));
        // CB 6D 00B6
        gbc.setState(0xe0ee, 0xc26c, 0xdcc0, 0x9aa5, 0xce25, 0xea8d, 0x1, 0x0);
        gbc.writeMem(0xe0ee, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc26c, gbc.sp());
        EXPECT(0xe0f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ee));
        EXPECT(0x6d, gbc.readMem(0xe0ef));
        // CB 6D 00B7
        gbc.setState(0x80b9, 0x2287, 0x8f00, 0xb761, 0xccda, 0x81e, 0x0, 0x1);
        gbc.writeMem(0x80b9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2287, gbc.sp());
        EXPECT(0x80bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80b9));
        EXPECT(0x6d, gbc.readMem(0x80ba));
        // CB 6D 00B8
        gbc.setState(0xeb30, 0x4633, 0x50a0, 0xc5b9, 0x2077, 0x3a84, 0x1, 0x1);
        gbc.writeMem(0xeb30, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4633, gbc.sp());
        EXPECT(0xeb32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb30));
        EXPECT(0x6d, gbc.readMem(0xeb31));
        // CB 6D 00B9
        gbc.setState(0x98b0, 0x38e1, 0x36f0, 0x9fdd, 0xb6d3, 0xc9ab, 0x0, 0x1);
        gbc.writeMem(0x98b0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x38e1, gbc.sp());
        EXPECT(0x98b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b0));
        EXPECT(0x6d, gbc.readMem(0x98b1));
        // CB 6D 00BA
        gbc.setState(0x90e4, 0x5cd0, 0xfb60, 0x365b, 0xfa9, 0xa90f, 0x0, 0x1);
        gbc.writeMem(0x90e4, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5cd0, gbc.sp());
        EXPECT(0x90e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e4));
        EXPECT(0x6d, gbc.readMem(0x90e5));
        // CB 6D 00BB
        gbc.setState(0x19a6, 0x1bd3, 0xdad0, 0xaf77, 0x1242, 0xb648, 0x0, 0x0);
        gbc.writeMem(0x19a6, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1bd3, gbc.sp());
        EXPECT(0x19a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 00BC
        gbc.setState(0xdbf1, 0x45c2, 0xf0c0, 0x9394, 0xd410, 0x2b31, 0x0, 0x0);
        gbc.writeMem(0xdbf1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x45c2, gbc.sp());
        EXPECT(0xdbf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf1));
        EXPECT(0x6d, gbc.readMem(0xdbf2));
        // CB 6D 00BE
        gbc.setState(0x1735, 0x259a, 0xb6c0, 0xa83c, 0x68e3, 0xe9c0, 0x1, 0x0);
        gbc.writeMem(0x1735, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x259a, gbc.sp());
        EXPECT(0x1737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 00BF
        gbc.setState(0x9ac6, 0xf10, 0x8150, 0x3768, 0xc5bd, 0x687f, 0x1, 0x1);
        gbc.writeMem(0x9ac6, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf10, gbc.sp());
        EXPECT(0x9ac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac6));
        EXPECT(0x6d, gbc.readMem(0x9ac7));
        // CB 6D 00C0
        gbc.setState(0x104b, 0x20eb, 0x3720, 0xdd31, 0x4e4d, 0x11a9, 0x0, 0x1);
        gbc.writeMem(0x104b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x20eb, gbc.sp());
        EXPECT(0x104d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 00C1
        gbc.setState(0xa014, 0x3317, 0x1ee0, 0x2c67, 0x10e7, 0x840, 0x1, 0x0);
        gbc.writeMem(0xa014, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3317, gbc.sp());
        EXPECT(0xa016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa014));
        EXPECT(0x6d, gbc.readMem(0xa015));
        // CB 6D 00C2
        gbc.setState(0x9b3, 0x1fb8, 0xcb90, 0xd0ff, 0x47f, 0xf101, 0x1, 0x0);
        gbc.writeMem(0x9b3, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1fb8, gbc.sp());
        EXPECT(0x9b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 00C3
        gbc.setState(0x8247, 0xec62, 0x4dc0, 0xdc1a, 0xe0cb, 0x1382, 0x1, 0x1);
        gbc.writeMem(0x8247, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xec62, gbc.sp());
        EXPECT(0x8249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8247));
        EXPECT(0x6d, gbc.readMem(0x8248));
        // CB 6D 00C4
        gbc.setState(0xaac3, 0x6c57, 0x9c70, 0xdfe6, 0xe8a9, 0xf002, 0x1, 0x0);
        gbc.writeMem(0xaac3, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6c57, gbc.sp());
        EXPECT(0xaac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaac3));
        EXPECT(0x6d, gbc.readMem(0xaac4));
        // CB 6D 00C5
        gbc.setState(0xa67, 0x390a, 0x20b0, 0x24a0, 0x516f, 0x73f6, 0x0, 0x1);
        gbc.writeMem(0xa67, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x390a, gbc.sp());
        EXPECT(0xa69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 00C6
        gbc.setState(0x7835, 0x57e, 0x3670, 0x6106, 0x252e, 0x94ba, 0x0, 0x0);
        gbc.writeMem(0x7835, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x57e, gbc.sp());
        EXPECT(0x7837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 00C7
        gbc.setState(0xdcb6, 0xb2cb, 0x1bb0, 0xec04, 0x3983, 0xc9cd, 0x1, 0x0);
        gbc.writeMem(0xdcb6, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb2cb, gbc.sp());
        EXPECT(0xdcb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb6));
        EXPECT(0x6d, gbc.readMem(0xdcb7));
        // CB 6D 00C8
        gbc.setState(0xe44b, 0x4e4, 0x99f0, 0x68c, 0x7aa9, 0x389e, 0x1, 0x1);
        gbc.writeMem(0xe44b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4e4, gbc.sp());
        EXPECT(0xe44d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe44b));
        EXPECT(0x6d, gbc.readMem(0xe44c));
        // CB 6D 00C9
        gbc.setState(0x92a4, 0x8a8f, 0xecb0, 0x9106, 0xacd4, 0x9239, 0x1, 0x1);
        gbc.writeMem(0x92a4, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8a8f, gbc.sp());
        EXPECT(0x92a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92a4));
        EXPECT(0x6d, gbc.readMem(0x92a5));
        // CB 6D 00CA
        gbc.setState(0x19cb, 0x1401, 0x37b0, 0xbb6f, 0x5b62, 0x44ef, 0x1, 0x1);
        gbc.writeMem(0x19cb, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1401, gbc.sp());
        EXPECT(0x19cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 00CB
        gbc.setState(0x3f3b, 0x1926, 0xf6f0, 0xf275, 0x64cb, 0xf34e, 0x1, 0x0);
        gbc.writeMem(0x3f3b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1926, gbc.sp());
        EXPECT(0x3f3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 00CC
        gbc.setState(0x8a01, 0x6e4b, 0x8120, 0x9bbb, 0xde2a, 0xdd47, 0x0, 0x0);
        gbc.writeMem(0x8a01, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6e4b, gbc.sp());
        EXPECT(0x8a03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a01));
        EXPECT(0x6d, gbc.readMem(0x8a02));
        // CB 6D 00CD
        gbc.setState(0x8dec, 0x3cb6, 0x950, 0x9bb2, 0xad6f, 0x4f6, 0x1, 0x0);
        gbc.writeMem(0x8dec, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3cb6, gbc.sp());
        EXPECT(0x8dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dec));
        EXPECT(0x6d, gbc.readMem(0x8ded));
        // CB 6D 00CE
        gbc.setState(0x8a33, 0xd9be, 0x700, 0x1aaa, 0x5309, 0x80ee, 0x0, 0x1);
        gbc.writeMem(0x8a33, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd9be, gbc.sp());
        EXPECT(0x8a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a33));
        EXPECT(0x6d, gbc.readMem(0x8a34));
        // CB 6D 00CF
        gbc.setState(0x3a4e, 0xa3b0, 0x2ef0, 0xbf0f, 0x6ed5, 0xe96f, 0x0, 0x0);
        gbc.writeMem(0x3a4e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa3b0, gbc.sp());
        EXPECT(0x3a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 00D0
        gbc.setState(0xc0fd, 0xb917, 0xc950, 0xd769, 0x993c, 0x6681, 0x1, 0x1);
        gbc.writeMem(0xc0fd, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb917, gbc.sp());
        EXPECT(0xc0ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0fd));
        EXPECT(0x6d, gbc.readMem(0xc0fe));
        // CB 6D 00D1
        gbc.setState(0xb628, 0xc1b4, 0x8a30, 0x37f2, 0xed69, 0xedbf, 0x0, 0x0);
        gbc.writeMem(0xb628, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc1b4, gbc.sp());
        EXPECT(0xb62a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb628));
        EXPECT(0x6d, gbc.readMem(0xb629));
        // CB 6D 00D2
        gbc.setState(0x1ec3, 0x7789, 0x8e60, 0xb82c, 0x27d9, 0x66b2, 0x1, 0x1);
        gbc.writeMem(0x1ec3, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7789, gbc.sp());
        EXPECT(0x1ec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 00D3
        gbc.setState(0x53eb, 0x311, 0xd740, 0x1af, 0xd120, 0x80ef, 0x1, 0x1);
        gbc.writeMem(0x53eb, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x311, gbc.sp());
        EXPECT(0x53ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 00D4
        gbc.setState(0x5fbd, 0x5946, 0x60e0, 0x2533, 0xc62b, 0xf17c, 0x0, 0x1);
        gbc.writeMem(0x5fbd, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5946, gbc.sp());
        EXPECT(0x5fbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 00D5
        gbc.setState(0x14c9, 0x2e06, 0x2b50, 0x8998, 0xa201, 0xdce6, 0x1, 0x0);
        gbc.writeMem(0x14c9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2e06, gbc.sp());
        EXPECT(0x14cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 00D6
        gbc.setState(0x1065, 0xd904, 0xb5a0, 0x9905, 0x773a, 0x516c, 0x0, 0x1);
        gbc.writeMem(0x1065, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd904, gbc.sp());
        EXPECT(0x1067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 00D7
        gbc.setState(0xa9c3, 0x7a6d, 0x2810, 0x4272, 0x4e4a, 0x8139, 0x0, 0x0);
        gbc.writeMem(0xa9c3, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7a6d, gbc.sp());
        EXPECT(0xa9c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9c3));
        EXPECT(0x6d, gbc.readMem(0xa9c4));
        // CB 6D 00D8
        gbc.setState(0xa655, 0x5ae0, 0x4be0, 0x416, 0x6539, 0x9033, 0x1, 0x1);
        gbc.writeMem(0xa655, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5ae0, gbc.sp());
        EXPECT(0xa657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa655));
        EXPECT(0x6d, gbc.readMem(0xa656));
        // CB 6D 00D9
        gbc.setState(0x9223, 0xf41c, 0x4340, 0x4a5d, 0xb276, 0xee3d, 0x0, 0x0);
        gbc.writeMem(0x9223, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf41c, gbc.sp());
        EXPECT(0x9225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9223));
        EXPECT(0x6d, gbc.readMem(0x9224));
        // CB 6D 00DA
        gbc.setState(0x2ad0, 0x7b8d, 0xbf90, 0x7a98, 0xba94, 0xeaf3, 0x0, 0x0);
        gbc.writeMem(0x2ad0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7b8d, gbc.sp());
        EXPECT(0x2ad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 00DB
        gbc.setState(0xd3d, 0x646f, 0x78c0, 0xb86f, 0xa86b, 0x4525, 0x0, 0x1);
        gbc.writeMem(0xd3d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x646f, gbc.sp());
        EXPECT(0xd3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 00DC
        gbc.setState(0xd666, 0x96e3, 0x3410, 0x7992, 0x71e0, 0xcdfe, 0x0, 0x0);
        gbc.writeMem(0xd666, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x96e3, gbc.sp());
        EXPECT(0xd668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd666));
        EXPECT(0x6d, gbc.readMem(0xd667));
        // CB 6D 00DD
        gbc.setState(0x377a, 0x5f0d, 0x38c0, 0xd9cf, 0x1f5b, 0x5eac, 0x1, 0x1);
        gbc.writeMem(0x377a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5f0d, gbc.sp());
        EXPECT(0x377c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 00DE
        gbc.setState(0xd955, 0xfbfb, 0xcbe0, 0x6d73, 0x7ab3, 0xb73d, 0x1, 0x1);
        gbc.writeMem(0xd955, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfbfb, gbc.sp());
        EXPECT(0xd957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd955));
        EXPECT(0x6d, gbc.readMem(0xd956));
        // CB 6D 00DF
        gbc.setState(0xe735, 0x6427, 0x2e90, 0x20a4, 0xdeef, 0xdd06, 0x0, 0x1);
        gbc.writeMem(0xe735, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6427, gbc.sp());
        EXPECT(0xe737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe735));
        EXPECT(0x6d, gbc.readMem(0xe736));
        // CB 6D 00E0
        gbc.setState(0x942c, 0x3b10, 0xb9d0, 0xb54e, 0x259b, 0x21f2, 0x0, 0x0);
        gbc.writeMem(0x942c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3b10, gbc.sp());
        EXPECT(0x942e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x942c));
        EXPECT(0x6d, gbc.readMem(0x942d));
        // CB 6D 00E1
        gbc.setState(0x1cd2, 0x163d, 0xcc10, 0x45d, 0x660b, 0xa17d, 0x1, 0x1);
        gbc.writeMem(0x1cd2, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x163d, gbc.sp());
        EXPECT(0x1cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 00E2
        gbc.setState(0x63fd, 0xb10f, 0x76f0, 0x7bd, 0x855e, 0xc621, 0x0, 0x0);
        gbc.writeMem(0x63fd, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb10f, gbc.sp());
        EXPECT(0x63ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 00E3
        gbc.setState(0x309f, 0xe45c, 0x480, 0xde99, 0x1986, 0xedd4, 0x1, 0x0);
        gbc.writeMem(0x309f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe45c, gbc.sp());
        EXPECT(0x30a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 00E5
        gbc.setState(0x7df1, 0xfc94, 0xc210, 0x8dc9, 0x3b20, 0xe83f, 0x1, 0x0);
        gbc.writeMem(0x7df1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xfc94, gbc.sp());
        EXPECT(0x7df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 00E6
        gbc.setState(0x8c13, 0x5da, 0x1410, 0x758f, 0xd73a, 0xa542, 0x0, 0x1);
        gbc.writeMem(0x8c13, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5da, gbc.sp());
        EXPECT(0x8c15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c13));
        EXPECT(0x6d, gbc.readMem(0x8c14));
        // CB 6D 00E7
        gbc.setState(0x6ee2, 0x52d2, 0xcb00, 0x38ac, 0x4e34, 0xf780, 0x0, 0x0);
        gbc.writeMem(0x6ee2, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x52d2, gbc.sp());
        EXPECT(0x6ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 00E8
        gbc.setState(0xadef, 0xb042, 0x26c0, 0x583, 0x2282, 0xc8c9, 0x0, 0x1);
        gbc.writeMem(0xadef, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb042, gbc.sp());
        EXPECT(0xadf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadef));
        EXPECT(0x6d, gbc.readMem(0xadf0));
        // CB 6D 00E9
        gbc.setState(0xa82, 0x5dfd, 0x20f0, 0x5fd6, 0x640c, 0x15b9, 0x0, 0x1);
        gbc.writeMem(0xa82, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5dfd, gbc.sp());
        EXPECT(0xa84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 00EA
        gbc.setState(0xeb8c, 0x906d, 0xe900, 0xe219, 0x960e, 0x7cae, 0x1, 0x0);
        gbc.writeMem(0xeb8c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x906d, gbc.sp());
        EXPECT(0xeb8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb8c));
        EXPECT(0x6d, gbc.readMem(0xeb8d));
        // CB 6D 00EB
        gbc.setState(0x2b70, 0x716d, 0x36e0, 0xd53a, 0xf64c, 0xb655, 0x0, 0x0);
        gbc.writeMem(0x2b70, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x716d, gbc.sp());
        EXPECT(0x2b72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 00EC
        gbc.setState(0x6972, 0x22a, 0x5020, 0xfa31, 0xd0ae, 0xee36, 0x1, 0x1);
        gbc.writeMem(0x6972, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x22a, gbc.sp());
        EXPECT(0x6974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 00ED
        gbc.setState(0xe900, 0x819f, 0x8d30, 0xb8b, 0x3c7f, 0x3321, 0x0, 0x0);
        gbc.writeMem(0xe900, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x819f, gbc.sp());
        EXPECT(0xe902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe900));
        EXPECT(0x6d, gbc.readMem(0xe901));
        // CB 6D 00EE
        gbc.setState(0x2ffc, 0x7b88, 0x5eb0, 0xfb51, 0x1001, 0xbb55, 0x1, 0x0);
        gbc.writeMem(0x2ffc, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7b88, gbc.sp());
        EXPECT(0x2ffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 00EF
        gbc.setState(0x5b76, 0xeea0, 0xed50, 0xc83f, 0x8e45, 0xa8d0, 0x0, 0x0);
        gbc.writeMem(0x5b76, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xeea0, gbc.sp());
        EXPECT(0x5b78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 00F0
        gbc.setState(0x8e0a, 0x8821, 0xf4f0, 0xe062, 0xffc6, 0xa23f, 0x1, 0x1);
        gbc.writeMem(0x8e0a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8821, gbc.sp());
        EXPECT(0x8e0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e0a));
        EXPECT(0x6d, gbc.readMem(0x8e0b));
        // CB 6D 00F1
        gbc.setState(0x449a, 0x34bc, 0xa0a0, 0x2b39, 0x1700, 0x21cc, 0x1, 0x0);
        gbc.writeMem(0x449a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x34bc, gbc.sp());
        EXPECT(0x449c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 00F2
        gbc.setState(0xeb53, 0xeab4, 0xeed0, 0x4995, 0x4d37, 0xeec, 0x0, 0x1);
        gbc.writeMem(0xeb53, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xeab4, gbc.sp());
        EXPECT(0xeb55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb53));
        EXPECT(0x6d, gbc.readMem(0xeb54));
        // CB 6D 00F3
        gbc.setState(0xb839, 0x1ca2, 0xfbb0, 0xa825, 0x3a2f, 0xc12f, 0x1, 0x1);
        gbc.writeMem(0xb839, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1ca2, gbc.sp());
        EXPECT(0xb83b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb839));
        EXPECT(0x6d, gbc.readMem(0xb83a));
        // CB 6D 00F4
        gbc.setState(0xdfdd, 0xcaf3, 0xa410, 0x3739, 0x3216, 0x79d7, 0x0, 0x0);
        gbc.writeMem(0xdfdd, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xcaf3, gbc.sp());
        EXPECT(0xdfdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfdd));
        EXPECT(0x6d, gbc.readMem(0xdfde));
        // CB 6D 00F5
        gbc.setState(0xdb06, 0x9534, 0x260, 0xd63f, 0xb7af, 0x8360, 0x1, 0x0);
        gbc.writeMem(0xdb06, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9534, gbc.sp());
        EXPECT(0xdb08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb06));
        EXPECT(0x6d, gbc.readMem(0xdb07));
        // CB 6D 00F6
        gbc.setState(0xa3d, 0x8579, 0x21c0, 0x4abf, 0x917e, 0x7e10, 0x0, 0x0);
        gbc.writeMem(0xa3d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8579, gbc.sp());
        EXPECT(0xa3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 00F7
        gbc.setState(0x87ba, 0x417d, 0x72e0, 0x3aec, 0xf627, 0x98a5, 0x0, 0x0);
        gbc.writeMem(0x87ba, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x417d, gbc.sp());
        EXPECT(0x87bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ba));
        EXPECT(0x6d, gbc.readMem(0x87bb));
        // CB 6D 00F8
        gbc.setState(0x89eb, 0x7054, 0x9c00, 0x50f1, 0x44a3, 0x43f, 0x1, 0x0);
        gbc.writeMem(0x89eb, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7054, gbc.sp());
        EXPECT(0x89ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89eb));
        EXPECT(0x6d, gbc.readMem(0x89ec));
        // CB 6D 00F9
        gbc.setState(0x17e5, 0x9c31, 0x8a0, 0x846b, 0x1101, 0x25aa, 0x1, 0x1);
        gbc.writeMem(0x17e5, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9c31, gbc.sp());
        EXPECT(0x17e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 00FA
        gbc.setState(0xd7c1, 0x29b, 0xb780, 0xd15, 0x8728, 0xbf6f, 0x1, 0x1);
        gbc.writeMem(0xd7c1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x29b, gbc.sp());
        EXPECT(0xd7c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c1));
        EXPECT(0x6d, gbc.readMem(0xd7c2));
        // CB 6D 00FB
        gbc.setState(0xdc3, 0xe008, 0xf9a0, 0x5457, 0x8654, 0x251f, 0x1, 0x0);
        gbc.writeMem(0xdc3, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe008, gbc.sp());
        EXPECT(0xdc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 00FC
        gbc.setState(0x7595, 0x9713, 0xd120, 0xab, 0x44ba, 0xf4c7, 0x0, 0x0);
        gbc.writeMem(0x7595, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9713, gbc.sp());
        EXPECT(0x7597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 00FD
        gbc.setState(0x11ac, 0xca79, 0xcbe0, 0x6e4d, 0x726b, 0xb168, 0x1, 0x1);
        gbc.writeMem(0x11ac, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xca79, gbc.sp());
        EXPECT(0x11ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 00FE
        gbc.setState(0x9efe, 0x7a73, 0x2df0, 0xece2, 0xef0f, 0x5b72, 0x0, 0x1);
        gbc.writeMem(0x9efe, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7a73, gbc.sp());
        EXPECT(0x9f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9efe));
        EXPECT(0x6d, gbc.readMem(0x9eff));
        // CB 6D 00FF
        gbc.setState(0x4349, 0xa6cb, 0x1eb0, 0xde21, 0x1a8c, 0xa958, 0x0, 0x1);
        gbc.writeMem(0x4349, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa6cb, gbc.sp());
        EXPECT(0x434b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0100
        gbc.setState(0x67ff, 0x136e, 0xc090, 0x7d0, 0xff07, 0xaebf, 0x0, 0x0);
        gbc.writeMem(0x67ff, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x136e, gbc.sp());
        EXPECT(0x6801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0101
        gbc.setState(0xc45c, 0xc51d, 0x7d50, 0x2f90, 0xb509, 0x9b08, 0x1, 0x1);
        gbc.writeMem(0xc45c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc51d, gbc.sp());
        EXPECT(0xc45e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45c));
        EXPECT(0x6d, gbc.readMem(0xc45d));
        // CB 6D 0102
        gbc.setState(0x5472, 0xbe3a, 0x41b0, 0x79f5, 0x1023, 0x1e79, 0x1, 0x0);
        gbc.writeMem(0x5472, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbe3a, gbc.sp());
        EXPECT(0x5474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0103
        gbc.setState(0x7fcf, 0x62b9, 0x1400, 0x9c27, 0xeab4, 0x5a40, 0x1, 0x1);
        gbc.writeMem(0x7fcf, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x62b9, gbc.sp());
        EXPECT(0x7fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0104
        gbc.setState(0xc98f, 0x3479, 0x9dc0, 0x481d, 0x8551, 0x3347, 0x0, 0x1);
        gbc.writeMem(0xc98f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3479, gbc.sp());
        EXPECT(0xc991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc98f));
        EXPECT(0x6d, gbc.readMem(0xc990));
        // CB 6D 0105
        gbc.setState(0xbfd0, 0x6152, 0x3420, 0xf98e, 0x3133, 0xa16d, 0x1, 0x0);
        gbc.writeMem(0xbfd0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6152, gbc.sp());
        EXPECT(0xbfd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfd0));
        EXPECT(0x6d, gbc.readMem(0xbfd1));
        // CB 6D 0106
        gbc.setState(0xe54, 0xd054, 0x7130, 0xe6c4, 0xb2b1, 0xc4fe, 0x1, 0x1);
        gbc.writeMem(0xe54, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd054, gbc.sp());
        EXPECT(0xe56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0107
        gbc.setState(0xe35d, 0x98a4, 0xd480, 0x8e83, 0x7185, 0x1247, 0x0, 0x0);
        gbc.writeMem(0xe35d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x98a4, gbc.sp());
        EXPECT(0xe35f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe35d));
        EXPECT(0x6d, gbc.readMem(0xe35e));
        // CB 6D 0108
        gbc.setState(0x2662, 0x76b0, 0x68d0, 0xc754, 0x5785, 0xdbb0, 0x1, 0x0);
        gbc.writeMem(0x2662, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x76b0, gbc.sp());
        EXPECT(0x2664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0109
        gbc.setState(0x3301, 0xc468, 0x86a0, 0x3ee6, 0x7700, 0x72ec, 0x1, 0x1);
        gbc.writeMem(0x3301, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc468, gbc.sp());
        EXPECT(0x3303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 010A
        gbc.setState(0xcd28, 0xa2c8, 0x300, 0xfb41, 0x1c08, 0x33c3, 0x0, 0x0);
        gbc.writeMem(0xcd28, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa2c8, gbc.sp());
        EXPECT(0xcd2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd28));
        EXPECT(0x6d, gbc.readMem(0xcd29));
        // CB 6D 010B
        gbc.setState(0xd6a7, 0xfdc8, 0x1fd0, 0x5de9, 0xa61d, 0x7a1c, 0x1, 0x0);
        gbc.writeMem(0xd6a7, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfdc8, gbc.sp());
        EXPECT(0xd6a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6a7));
        EXPECT(0x6d, gbc.readMem(0xd6a8));
        // CB 6D 010C
        gbc.setState(0xee7e, 0xea17, 0x27b0, 0xf782, 0x5735, 0x30e6, 0x1, 0x0);
        gbc.writeMem(0xee7e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xea17, gbc.sp());
        EXPECT(0xee80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee7e));
        EXPECT(0x6d, gbc.readMem(0xee7f));
        // CB 6D 010D
        gbc.setState(0x7f64, 0xd38e, 0x33e0, 0x4935, 0x8963, 0x9918, 0x1, 0x0);
        gbc.writeMem(0x7f64, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd38e, gbc.sp());
        EXPECT(0x7f66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 010E
        gbc.setState(0xcaa3, 0x557c, 0x8c70, 0xc7ae, 0xc1f6, 0x24b, 0x0, 0x1);
        gbc.writeMem(0xcaa3, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x557c, gbc.sp());
        EXPECT(0xcaa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaa3));
        EXPECT(0x6d, gbc.readMem(0xcaa4));
        // CB 6D 010F
        gbc.setState(0x8b6c, 0xae17, 0xb460, 0x8cfa, 0x7e78, 0x1e63, 0x1, 0x1);
        gbc.writeMem(0x8b6c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xae17, gbc.sp());
        EXPECT(0x8b6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b6c));
        EXPECT(0x6d, gbc.readMem(0x8b6d));
        // CB 6D 0110
        gbc.setState(0xa89e, 0xab7, 0xb2c0, 0xdd2c, 0x6285, 0xcb4d, 0x1, 0x1);
        gbc.writeMem(0xa89e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xab7, gbc.sp());
        EXPECT(0xa8a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa89e));
        EXPECT(0x6d, gbc.readMem(0xa89f));
        // CB 6D 0111
        gbc.setState(0x32fc, 0xe4ba, 0xfd60, 0x31c0, 0xb285, 0xbd0, 0x0, 0x1);
        gbc.writeMem(0x32fc, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe4ba, gbc.sp());
        EXPECT(0x32fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0112
        gbc.setState(0xbed, 0x1b4e, 0x12d0, 0x64f7, 0x7c10, 0xb8e, 0x1, 0x1);
        gbc.writeMem(0xbed, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1b4e, gbc.sp());
        EXPECT(0xbef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0113
        gbc.setState(0x2762, 0x11ce, 0x79d0, 0x79cf, 0xa92b, 0xc331, 0x0, 0x0);
        gbc.writeMem(0x2762, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x11ce, gbc.sp());
        EXPECT(0x2764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0114
        gbc.setState(0x74ef, 0xae02, 0x8cd0, 0xf27a, 0x7446, 0xfd1c, 0x0, 0x1);
        gbc.writeMem(0x74ef, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xae02, gbc.sp());
        EXPECT(0x74f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0115
        gbc.setState(0x1bbd, 0xe40f, 0x25b0, 0xff50, 0x41b4, 0x98f0, 0x0, 0x1);
        gbc.writeMem(0x1bbd, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe40f, gbc.sp());
        EXPECT(0x1bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0116
        gbc.setState(0x8bfa, 0xe67b, 0x50, 0x35c2, 0xe556, 0xa0db, 0x1, 0x0);
        gbc.writeMem(0x8bfa, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe67b, gbc.sp());
        EXPECT(0x8bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bfa));
        EXPECT(0x6d, gbc.readMem(0x8bfb));
        // CB 6D 0117
        gbc.setState(0xcd6, 0x8608, 0xdef0, 0x277d, 0xa47, 0xf899, 0x0, 0x1);
        gbc.writeMem(0xcd6, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8608, gbc.sp());
        EXPECT(0xcd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0118
        gbc.setState(0xd70b, 0xaeb2, 0x3e20, 0x9ab4, 0xd0ff, 0xe0ed, 0x1, 0x1);
        gbc.writeMem(0xd70b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xaeb2, gbc.sp());
        EXPECT(0xd70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd70b));
        EXPECT(0x6d, gbc.readMem(0xd70c));
        // CB 6D 0119
        gbc.setState(0x8f14, 0xae7b, 0xaf10, 0x9ed3, 0xd5b9, 0xb777, 0x1, 0x0);
        gbc.writeMem(0x8f14, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xae7b, gbc.sp());
        EXPECT(0x8f16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f14));
        EXPECT(0x6d, gbc.readMem(0x8f15));
        // CB 6D 011A
        gbc.setState(0x155d, 0xb753, 0x84a0, 0x832, 0x27aa, 0x6a05, 0x0, 0x1);
        gbc.writeMem(0x155d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb753, gbc.sp());
        EXPECT(0x155f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 011B
        gbc.setState(0x5a08, 0x2883, 0xeae0, 0xffb3, 0xcd58, 0x6c70, 0x0, 0x0);
        gbc.writeMem(0x5a08, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2883, gbc.sp());
        EXPECT(0x5a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 011D
        gbc.setState(0x6f05, 0x4b1f, 0x66f0, 0xf9ff, 0xa356, 0xc92f, 0x1, 0x0);
        gbc.writeMem(0x6f05, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4b1f, gbc.sp());
        EXPECT(0x6f07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 011E
        gbc.setState(0x1b29, 0xb42e, 0x59e0, 0x1926, 0x9fb0, 0x3a7, 0x1, 0x1);
        gbc.writeMem(0x1b29, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb42e, gbc.sp());
        EXPECT(0x1b2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 011F
        gbc.setState(0x466, 0x4d, 0xd8f0, 0x6bef, 0xd108, 0xf9c1, 0x1, 0x1);
        gbc.writeMem(0x466, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4d, gbc.sp());
        EXPECT(0x468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0120
        gbc.setState(0x87f8, 0x679b, 0xe610, 0x5b32, 0xfe34, 0xc931, 0x1, 0x0);
        gbc.writeMem(0x87f8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x679b, gbc.sp());
        EXPECT(0x87fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f8));
        EXPECT(0x6d, gbc.readMem(0x87f9));
        // CB 6D 0121
        gbc.setState(0xadf1, 0xf579, 0x55b0, 0xa6e7, 0x1284, 0x125c, 0x1, 0x1);
        gbc.writeMem(0xadf1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf579, gbc.sp());
        EXPECT(0xadf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf1));
        EXPECT(0x6d, gbc.readMem(0xadf2));
        // CB 6D 0122
        gbc.setState(0x62e3, 0xe801, 0xa850, 0x22d6, 0xf7cd, 0xef1b, 0x1, 0x1);
        gbc.writeMem(0x62e3, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe801, gbc.sp());
        EXPECT(0x62e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0123
        gbc.setState(0xbaa, 0x83f7, 0x9e20, 0xdf0d, 0xe0c7, 0xa244, 0x1, 0x0);
        gbc.writeMem(0xbaa, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x83f7, gbc.sp());
        EXPECT(0xbac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0124
        gbc.setState(0x5df0, 0xa0ef, 0x95b0, 0x57ef, 0x15ab, 0xb7e9, 0x1, 0x0);
        gbc.writeMem(0x5df0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa0ef, gbc.sp());
        EXPECT(0x5df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0125
        gbc.setState(0x8ef8, 0x5d43, 0x6a60, 0x1e3f, 0xde21, 0x22aa, 0x1, 0x0);
        gbc.writeMem(0x8ef8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5d43, gbc.sp());
        EXPECT(0x8efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef8));
        EXPECT(0x6d, gbc.readMem(0x8ef9));
        // CB 6D 0126
        gbc.setState(0x85bd, 0x4b4a, 0xa070, 0xcc27, 0xaf2f, 0x5eb0, 0x1, 0x1);
        gbc.writeMem(0x85bd, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4b4a, gbc.sp());
        EXPECT(0x85bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85bd));
        EXPECT(0x6d, gbc.readMem(0x85be));
        // CB 6D 0127
        gbc.setState(0xc210, 0xabb3, 0x2d20, 0x8f9, 0x65e5, 0xdd24, 0x0, 0x1);
        gbc.writeMem(0xc210, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xabb3, gbc.sp());
        EXPECT(0xc212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc210));
        EXPECT(0x6d, gbc.readMem(0xc211));
        // CB 6D 0128
        gbc.setState(0x180, 0x6dad, 0xf560, 0xa9a2, 0x5279, 0x536c, 0x0, 0x0);
        gbc.writeMem(0x180, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6dad, gbc.sp());
        EXPECT(0x182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0129
        gbc.setState(0x2941, 0x73e6, 0x3710, 0x9e41, 0x79e5, 0x60bb, 0x0, 0x0);
        gbc.writeMem(0x2941, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x73e6, gbc.sp());
        EXPECT(0x2943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 012A
        gbc.setState(0x826d, 0x4877, 0x7690, 0xf852, 0xa718, 0xa80a, 0x1, 0x0);
        gbc.writeMem(0x826d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4877, gbc.sp());
        EXPECT(0x826f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x826d));
        EXPECT(0x6d, gbc.readMem(0x826e));
        // CB 6D 012B
        gbc.setState(0xe022, 0x19eb, 0xebd0, 0x5d1b, 0xb99, 0x46cd, 0x1, 0x1);
        gbc.writeMem(0xe022, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x19eb, gbc.sp());
        EXPECT(0xe024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe022));
        EXPECT(0x6d, gbc.readMem(0xe023));
        // CB 6D 012C
        gbc.setState(0x5e5e, 0x32d0, 0xbaf0, 0x819a, 0xad65, 0x2ab8, 0x0, 0x0);
        gbc.writeMem(0x5e5e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x32d0, gbc.sp());
        EXPECT(0x5e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 012D
        gbc.setState(0x7bed, 0x52cf, 0xdb10, 0x41df, 0xf247, 0xa17f, 0x0, 0x0);
        gbc.writeMem(0x7bed, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x52cf, gbc.sp());
        EXPECT(0x7bef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 012E
        gbc.setState(0x200, 0x2298, 0x3eb0, 0xd2f9, 0x1329, 0xaac9, 0x0, 0x0);
        gbc.writeMem(0x200, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2298, gbc.sp());
        EXPECT(0x202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 012F
        gbc.setState(0x24af, 0xe9c5, 0x3b20, 0xce69, 0x461, 0x4926, 0x0, 0x1);
        gbc.writeMem(0x24af, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe9c5, gbc.sp());
        EXPECT(0x24b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0130
        gbc.setState(0x1d38, 0x2156, 0xe660, 0x4d27, 0x6c26, 0x38ba, 0x0, 0x0);
        gbc.writeMem(0x1d38, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2156, gbc.sp());
        EXPECT(0x1d3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0131
        gbc.setState(0xc438, 0xcf6c, 0x9470, 0xbc3a, 0x4501, 0x402c, 0x1, 0x0);
        gbc.writeMem(0xc438, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcf6c, gbc.sp());
        EXPECT(0xc43a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc438));
        EXPECT(0x6d, gbc.readMem(0xc439));
        // CB 6D 0132
        gbc.setState(0x5c4, 0x9806, 0xc2b0, 0x79fb, 0xace7, 0xd36, 0x0, 0x1);
        gbc.writeMem(0x5c4, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9806, gbc.sp());
        EXPECT(0x5c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0133
        gbc.setState(0xbe41, 0x7f8e, 0xe950, 0x7478, 0x594a, 0xab8e, 0x0, 0x1);
        gbc.writeMem(0xbe41, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7f8e, gbc.sp());
        EXPECT(0xbe43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe41));
        EXPECT(0x6d, gbc.readMem(0xbe42));
        // CB 6D 0134
        gbc.setState(0x7514, 0xcad0, 0x850, 0xa60, 0x3ca4, 0x55b8, 0x0, 0x0);
        gbc.writeMem(0x7514, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcad0, gbc.sp());
        EXPECT(0x7516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0135
        gbc.setState(0x79c0, 0xb895, 0xa4a0, 0xd7f3, 0x21da, 0xdc95, 0x1, 0x0);
        gbc.writeMem(0x79c0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb895, gbc.sp());
        EXPECT(0x79c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0136
        gbc.setState(0xc9a4, 0xa7cf, 0xfe30, 0x3689, 0xb192, 0xf92, 0x1, 0x1);
        gbc.writeMem(0xc9a4, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa7cf, gbc.sp());
        EXPECT(0xc9a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a4));
        EXPECT(0x6d, gbc.readMem(0xc9a5));
        // CB 6D 0137
        gbc.setState(0xe9a5, 0xbdf, 0x12f0, 0x154e, 0x3aeb, 0x40b2, 0x1, 0x0);
        gbc.writeMem(0xe9a5, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbdf, gbc.sp());
        EXPECT(0xe9a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9a5));
        EXPECT(0x6d, gbc.readMem(0xe9a6));
        // CB 6D 0138
        gbc.setState(0xb199, 0xb9d6, 0x4ea0, 0xc73d, 0x5ff6, 0x6eab, 0x0, 0x1);
        gbc.writeMem(0xb199, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb9d6, gbc.sp());
        EXPECT(0xb19b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb199));
        EXPECT(0x6d, gbc.readMem(0xb19a));
        // CB 6D 0139
        gbc.setState(0xa9b6, 0x587, 0xb8a0, 0xf7b2, 0x1239, 0x784d, 0x0, 0x0);
        gbc.writeMem(0xa9b6, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x587, gbc.sp());
        EXPECT(0xa9b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b6));
        EXPECT(0x6d, gbc.readMem(0xa9b7));
        // CB 6D 013A
        gbc.setState(0x2f5e, 0x102b, 0xe820, 0x9983, 0x4cd6, 0xa7b7, 0x1, 0x0);
        gbc.writeMem(0x2f5e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x102b, gbc.sp());
        EXPECT(0x2f60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 013B
        gbc.setState(0x864e, 0x8366, 0x4fc0, 0xa1ea, 0xb8f9, 0xf05c, 0x0, 0x1);
        gbc.writeMem(0x864e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8366, gbc.sp());
        EXPECT(0x8650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x864e));
        EXPECT(0x6d, gbc.readMem(0x864f));
        // CB 6D 013C
        gbc.setState(0xecd1, 0x4153, 0xc920, 0xcb2e, 0x52ab, 0xbde2, 0x0, 0x0);
        gbc.writeMem(0xecd1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4153, gbc.sp());
        EXPECT(0xecd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecd1));
        EXPECT(0x6d, gbc.readMem(0xecd2));
        // CB 6D 013D
        gbc.setState(0x2ee7, 0x6c0e, 0xafa0, 0xe7f5, 0xc0c7, 0xa43a, 0x0, 0x0);
        gbc.writeMem(0x2ee7, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6c0e, gbc.sp());
        EXPECT(0x2ee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 013E
        gbc.setState(0xc0, 0xa375, 0xb570, 0x4890, 0x2f2d, 0x4a23, 0x1, 0x1);
        gbc.writeMem(0xc0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa375, gbc.sp());
        EXPECT(0xc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0140
        gbc.setState(0x5fae, 0x6ecb, 0x98c0, 0x213, 0xc7a, 0x59ab, 0x0, 0x0);
        gbc.writeMem(0x5fae, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6ecb, gbc.sp());
        EXPECT(0x5fb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0141
        gbc.setState(0x7ff4, 0x169b, 0xfe10, 0x4f10, 0x585a, 0xa3ac, 0x1, 0x1);
        gbc.writeMem(0x7ff4, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x169b, gbc.sp());
        EXPECT(0x7ff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0142
        gbc.setState(0x8a14, 0x31d0, 0x9030, 0xbec6, 0x8e2, 0xe297, 0x0, 0x1);
        gbc.writeMem(0x8a14, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x31d0, gbc.sp());
        EXPECT(0x8a16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a14));
        EXPECT(0x6d, gbc.readMem(0x8a15));
        // CB 6D 0143
        gbc.setState(0x466e, 0xdd5a, 0x9e20, 0xe4e7, 0xb91d, 0x24c0, 0x1, 0x0);
        gbc.writeMem(0x466e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xdd5a, gbc.sp());
        EXPECT(0x4670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0144
        gbc.setState(0xe246, 0xc665, 0xfb00, 0xbe57, 0xcfc, 0xc135, 0x0, 0x1);
        gbc.writeMem(0xe246, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc665, gbc.sp());
        EXPECT(0xe248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe246));
        EXPECT(0x6d, gbc.readMem(0xe247));
        // CB 6D 0145
        gbc.setState(0x985c, 0xb17d, 0x16d0, 0xa434, 0x7cef, 0xdcd9, 0x1, 0x1);
        gbc.writeMem(0x985c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb17d, gbc.sp());
        EXPECT(0x985e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x985c));
        EXPECT(0x6d, gbc.readMem(0x985d));
        // CB 6D 0146
        gbc.setState(0x9bd, 0x3050, 0x130, 0xdf42, 0x4bad, 0x6cb9, 0x0, 0x1);
        gbc.writeMem(0x9bd, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3050, gbc.sp());
        EXPECT(0x9bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0147
        gbc.setState(0x7d13, 0xce9d, 0x1620, 0x3a53, 0x9919, 0x8495, 0x0, 0x0);
        gbc.writeMem(0x7d13, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xce9d, gbc.sp());
        EXPECT(0x7d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0148
        gbc.setState(0x7dba, 0x9c4e, 0xf900, 0x3638, 0x3658, 0xe8c4, 0x1, 0x1);
        gbc.writeMem(0x7dba, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9c4e, gbc.sp());
        EXPECT(0x7dbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0149
        gbc.setState(0xcc69, 0xeae1, 0xb030, 0xfc40, 0xe991, 0xb911, 0x0, 0x0);
        gbc.writeMem(0xcc69, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xeae1, gbc.sp());
        EXPECT(0xcc6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc69));
        EXPECT(0x6d, gbc.readMem(0xcc6a));
        // CB 6D 014A
        gbc.setState(0x9130, 0x49b0, 0xe900, 0xb0e0, 0xa9c6, 0x3756, 0x1, 0x0);
        gbc.writeMem(0x9130, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x49b0, gbc.sp());
        EXPECT(0x9132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9130));
        EXPECT(0x6d, gbc.readMem(0x9131));
        // CB 6D 014B
        gbc.setState(0x7450, 0x386b, 0xd9a0, 0x2214, 0xc062, 0xc8ce, 0x1, 0x0);
        gbc.writeMem(0x7450, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x386b, gbc.sp());
        EXPECT(0x7452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 014C
        gbc.setState(0xaa40, 0x6ef9, 0x9840, 0x78e, 0x8f63, 0x3c9d, 0x0, 0x1);
        gbc.writeMem(0xaa40, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6ef9, gbc.sp());
        EXPECT(0xaa42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa40));
        EXPECT(0x6d, gbc.readMem(0xaa41));
        // CB 6D 014D
        gbc.setState(0x5ebb, 0xaf93, 0x2c40, 0xf258, 0x9434, 0x68, 0x0, 0x1);
        gbc.writeMem(0x5ebb, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xaf93, gbc.sp());
        EXPECT(0x5ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 014E
        gbc.setState(0x5c99, 0x9024, 0x5660, 0xfc30, 0x2ffc, 0x24a1, 0x1, 0x1);
        gbc.writeMem(0x5c99, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9024, gbc.sp());
        EXPECT(0x5c9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 014F
        gbc.setState(0xc0a6, 0xb747, 0x4630, 0x675d, 0x498, 0x9db9, 0x1, 0x1);
        gbc.writeMem(0xc0a6, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb747, gbc.sp());
        EXPECT(0xc0a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a6));
        EXPECT(0x6d, gbc.readMem(0xc0a7));
        // CB 6D 0150
        gbc.setState(0xf9d, 0xa4e9, 0xc2b0, 0x199e, 0xa5f7, 0x620, 0x1, 0x1);
        gbc.writeMem(0xf9d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa4e9, gbc.sp());
        EXPECT(0xf9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0151
        gbc.setState(0x7504, 0x5d23, 0x7d0, 0xb4c5, 0x5dd6, 0x4f73, 0x0, 0x1);
        gbc.writeMem(0x7504, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5d23, gbc.sp());
        EXPECT(0x7506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0152
        gbc.setState(0x574f, 0x2b40, 0x1de0, 0x594, 0xe37a, 0xa927, 0x0, 0x1);
        gbc.writeMem(0x574f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2b40, gbc.sp());
        EXPECT(0x5751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0153
        gbc.setState(0x24ee, 0xf776, 0xced0, 0x127c, 0xbd17, 0x24d9, 0x1, 0x1);
        gbc.writeMem(0x24ee, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf776, gbc.sp());
        EXPECT(0x24f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0155
        gbc.setState(0xbc3f, 0xbe4c, 0x44b0, 0xcf62, 0xb171, 0x295b, 0x0, 0x1);
        gbc.writeMem(0xbc3f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbe4c, gbc.sp());
        EXPECT(0xbc41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc3f));
        EXPECT(0x6d, gbc.readMem(0xbc40));
        // CB 6D 0156
        gbc.setState(0x2343, 0xc84f, 0xd4c0, 0xced4, 0x32c1, 0xaa7c, 0x1, 0x1);
        gbc.writeMem(0x2343, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc84f, gbc.sp());
        EXPECT(0x2345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0157
        gbc.setState(0x294d, 0xc953, 0x2620, 0x5ccd, 0xfb61, 0x2ac7, 0x0, 0x1);
        gbc.writeMem(0x294d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc953, gbc.sp());
        EXPECT(0x294f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0158
        gbc.setState(0xd7aa, 0xf875, 0x8b70, 0x62b1, 0x451c, 0xc52c, 0x0, 0x0);
        gbc.writeMem(0xd7aa, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf875, gbc.sp());
        EXPECT(0xd7ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7aa));
        EXPECT(0x6d, gbc.readMem(0xd7ab));
        // CB 6D 0159
        gbc.setState(0x1503, 0x2bc3, 0xddb0, 0x160a, 0xf96a, 0x8eca, 0x0, 0x0);
        gbc.writeMem(0x1503, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2bc3, gbc.sp());
        EXPECT(0x1505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 015A
        gbc.setState(0xc0db, 0xdf95, 0xe7e0, 0x6933, 0x5492, 0xb13a, 0x0, 0x1);
        gbc.writeMem(0xc0db, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdf95, gbc.sp());
        EXPECT(0xc0dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0db));
        EXPECT(0x6d, gbc.readMem(0xc0dc));
        // CB 6D 015B
        gbc.setState(0xb106, 0xca4, 0x1b50, 0x6f81, 0xf774, 0x78ef, 0x1, 0x1);
        gbc.writeMem(0xb106, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xca4, gbc.sp());
        EXPECT(0xb108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb106));
        EXPECT(0x6d, gbc.readMem(0xb107));
        // CB 6D 015C
        gbc.setState(0x130e, 0x804b, 0xfb70, 0x81e9, 0xcc3, 0x2e92, 0x0, 0x1);
        gbc.writeMem(0x130e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x804b, gbc.sp());
        EXPECT(0x1310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 015D
        gbc.setState(0xf15, 0x5b09, 0xc480, 0xf17e, 0x79db, 0x825, 0x0, 0x1);
        gbc.writeMem(0xf15, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5b09, gbc.sp());
        EXPECT(0xf17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 015E
        gbc.setState(0x4459, 0x9138, 0x3c60, 0xdc4c, 0xceef, 0x78a2, 0x1, 0x1);
        gbc.writeMem(0x4459, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9138, gbc.sp());
        EXPECT(0x445b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 015F
        gbc.setState(0xe694, 0x9331, 0x3190, 0xf32f, 0x5dc8, 0xb31d, 0x0, 0x0);
        gbc.writeMem(0xe694, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9331, gbc.sp());
        EXPECT(0xe696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe694));
        EXPECT(0x6d, gbc.readMem(0xe695));
        // CB 6D 0160
        gbc.setState(0x90a6, 0x3206, 0xbd20, 0xaefc, 0x480, 0x21a9, 0x0, 0x1);
        gbc.writeMem(0x90a6, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3206, gbc.sp());
        EXPECT(0x90a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90a6));
        EXPECT(0x6d, gbc.readMem(0x90a7));
        // CB 6D 0161
        gbc.setState(0xa898, 0xe440, 0xd2e0, 0xde74, 0xcf7b, 0xc7c5, 0x0, 0x1);
        gbc.writeMem(0xa898, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe440, gbc.sp());
        EXPECT(0xa89a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa898));
        EXPECT(0x6d, gbc.readMem(0xa899));
        // CB 6D 0162
        gbc.setState(0x1bfc, 0x1c53, 0x990, 0x4f2a, 0x1105, 0xd4b3, 0x0, 0x1);
        gbc.writeMem(0x1bfc, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1c53, gbc.sp());
        EXPECT(0x1bfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0163
        gbc.setState(0xc019, 0x9bd3, 0xbd70, 0xbc54, 0x459e, 0x80f0, 0x0, 0x0);
        gbc.writeMem(0xc019, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9bd3, gbc.sp());
        EXPECT(0xc01b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc019));
        EXPECT(0x6d, gbc.readMem(0xc01a));
        // CB 6D 0164
        gbc.setState(0x5b56, 0xc473, 0x1da0, 0x522b, 0x2266, 0xc21c, 0x0, 0x1);
        gbc.writeMem(0x5b56, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc473, gbc.sp());
        EXPECT(0x5b58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0165
        gbc.setState(0x5bfe, 0x4564, 0xf980, 0xda68, 0x3657, 0xf74e, 0x0, 0x0);
        gbc.writeMem(0x5bfe, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4564, gbc.sp());
        EXPECT(0x5c00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0167
        gbc.setState(0x4a11, 0x30da, 0x45d0, 0xa009, 0x104e, 0x53b, 0x1, 0x0);
        gbc.writeMem(0x4a11, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x30da, gbc.sp());
        EXPECT(0x4a13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0168
        gbc.setState(0x949a, 0xe52d, 0x2670, 0x4d64, 0x3686, 0x8572, 0x0, 0x0);
        gbc.writeMem(0x949a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe52d, gbc.sp());
        EXPECT(0x949c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x949a));
        EXPECT(0x6d, gbc.readMem(0x949b));
        // CB 6D 0169
        gbc.setState(0x14fc, 0x44cb, 0x13e0, 0x41c9, 0x3bdd, 0x1803, 0x0, 0x1);
        gbc.writeMem(0x14fc, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x44cb, gbc.sp());
        EXPECT(0x14fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 016A
        gbc.setState(0x3f63, 0x42bc, 0x1a10, 0x475a, 0x5e7d, 0xc53e, 0x1, 0x1);
        gbc.writeMem(0x3f63, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x42bc, gbc.sp());
        EXPECT(0x3f65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 016B
        gbc.setState(0x597, 0x2271, 0x5c90, 0xd9f7, 0x9476, 0xbbec, 0x1, 0x0);
        gbc.writeMem(0x597, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2271, gbc.sp());
        EXPECT(0x599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 016C
        gbc.setState(0x561e, 0x6f8, 0x8e0, 0x6171, 0xa959, 0xb2b0, 0x1, 0x0);
        gbc.writeMem(0x561e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6f8, gbc.sp());
        EXPECT(0x5620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 016D
        gbc.setState(0x9746, 0xac68, 0xbd20, 0xef45, 0xadb6, 0x4104, 0x0, 0x1);
        gbc.writeMem(0x9746, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xac68, gbc.sp());
        EXPECT(0x9748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9746));
        EXPECT(0x6d, gbc.readMem(0x9747));
        // CB 6D 016E
        gbc.setState(0xdb05, 0x9f90, 0x6f0, 0x73d5, 0x972b, 0x95ea, 0x0, 0x0);
        gbc.writeMem(0xdb05, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9f90, gbc.sp());
        EXPECT(0xdb07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb05));
        EXPECT(0x6d, gbc.readMem(0xdb06));
        // CB 6D 016F
        gbc.setState(0x816b, 0xfbb2, 0x7740, 0xbfe9, 0x408f, 0x4517, 0x0, 0x1);
        gbc.writeMem(0x816b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfbb2, gbc.sp());
        EXPECT(0x816d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x816b));
        EXPECT(0x6d, gbc.readMem(0x816c));
        // CB 6D 0170
        gbc.setState(0xc454, 0x1612, 0x2660, 0xe538, 0xc4b2, 0x6eb8, 0x1, 0x0);
        gbc.writeMem(0xc454, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1612, gbc.sp());
        EXPECT(0xc456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc454));
        EXPECT(0x6d, gbc.readMem(0xc455));
        // CB 6D 0171
        gbc.setState(0xefb9, 0x369, 0xcf60, 0xf600, 0xf2a6, 0x4625, 0x0, 0x0);
        gbc.writeMem(0xefb9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x369, gbc.sp());
        EXPECT(0xefbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb9));
        EXPECT(0x6d, gbc.readMem(0xefba));
        // CB 6D 0172
        gbc.setState(0xe63b, 0x7588, 0x3c00, 0x5e4a, 0x4d2e, 0xd512, 0x1, 0x1);
        gbc.writeMem(0xe63b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7588, gbc.sp());
        EXPECT(0xe63d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe63b));
        EXPECT(0x6d, gbc.readMem(0xe63c));
        // CB 6D 0173
        gbc.setState(0x1501, 0xc596, 0x2130, 0x23cc, 0xb0d1, 0xc06a, 0x1, 0x0);
        gbc.writeMem(0x1501, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc596, gbc.sp());
        EXPECT(0x1503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0175
        gbc.setState(0xcb19, 0xcef1, 0x70, 0x4e53, 0x6d26, 0x318f, 0x0, 0x1);
        gbc.writeMem(0xcb19, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcef1, gbc.sp());
        EXPECT(0xcb1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb19));
        EXPECT(0x6d, gbc.readMem(0xcb1a));
        // CB 6D 0176
        gbc.setState(0x9a9f, 0xf61d, 0xfb80, 0x7ce8, 0x19b, 0x16fd, 0x0, 0x0);
        gbc.writeMem(0x9a9f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf61d, gbc.sp());
        EXPECT(0x9aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a9f));
        EXPECT(0x6d, gbc.readMem(0x9aa0));
        // CB 6D 0177
        gbc.setState(0xc982, 0xe770, 0x6d70, 0x3b2a, 0x8b47, 0x4cb3, 0x0, 0x1);
        gbc.writeMem(0xc982, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe770, gbc.sp());
        EXPECT(0xc984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc982));
        EXPECT(0x6d, gbc.readMem(0xc983));
        // CB 6D 0178
        gbc.setState(0xab6e, 0x8306, 0x1210, 0x6a1f, 0x1dea, 0x4618, 0x0, 0x1);
        gbc.writeMem(0xab6e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8306, gbc.sp());
        EXPECT(0xab70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab6e));
        EXPECT(0x6d, gbc.readMem(0xab6f));
        // CB 6D 0179
        gbc.setState(0x7d6f, 0x47a5, 0x7f10, 0x81aa, 0xb5e0, 0xa075, 0x0, 0x0);
        gbc.writeMem(0x7d6f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x47a5, gbc.sp());
        EXPECT(0x7d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 017A
        gbc.setState(0x35f, 0x493e, 0x450, 0x1cf, 0xbfd9, 0xcf72, 0x1, 0x1);
        gbc.writeMem(0x35f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x493e, gbc.sp());
        EXPECT(0x361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 017B
        gbc.setState(0x40ea, 0xc2d2, 0x5960, 0x3159, 0x2208, 0x5578, 0x1, 0x0);
        gbc.writeMem(0x40ea, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc2d2, gbc.sp());
        EXPECT(0x40ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 017C
        gbc.setState(0xd113, 0xc79c, 0xafc0, 0xaa81, 0xac42, 0x5a4f, 0x1, 0x1);
        gbc.writeMem(0xd113, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc79c, gbc.sp());
        EXPECT(0xd115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd113));
        EXPECT(0x6d, gbc.readMem(0xd114));
        // CB 6D 017D
        gbc.setState(0x50b9, 0xc2ce, 0x3680, 0x9167, 0xda6, 0x98c, 0x1, 0x1);
        gbc.writeMem(0x50b9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc2ce, gbc.sp());
        EXPECT(0x50bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 017E
        gbc.setState(0x5f61, 0x3f20, 0xb4a0, 0x9d3, 0xf9f0, 0xe20c, 0x1, 0x0);
        gbc.writeMem(0x5f61, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3f20, gbc.sp());
        EXPECT(0x5f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 017F
        gbc.setState(0xa98e, 0x8715, 0x38a0, 0xc25d, 0x9580, 0x1232, 0x0, 0x1);
        gbc.writeMem(0xa98e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8715, gbc.sp());
        EXPECT(0xa990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa98e));
        EXPECT(0x6d, gbc.readMem(0xa98f));
        // CB 6D 0180
        gbc.setState(0xc3ec, 0xd744, 0x8120, 0xe909, 0x43f1, 0xed01, 0x1, 0x0);
        gbc.writeMem(0xc3ec, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd744, gbc.sp());
        EXPECT(0xc3ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ec));
        EXPECT(0x6d, gbc.readMem(0xc3ed));
        // CB 6D 0181
        gbc.setState(0x46b8, 0xdd10, 0xaea0, 0xb536, 0x2620, 0x4f40, 0x0, 0x1);
        gbc.writeMem(0x46b8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xdd10, gbc.sp());
        EXPECT(0x46ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0182
        gbc.setState(0xa9ea, 0xbae0, 0x5170, 0x6fa6, 0xddf0, 0x13e0, 0x1, 0x1);
        gbc.writeMem(0xa9ea, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbae0, gbc.sp());
        EXPECT(0xa9ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9ea));
        EXPECT(0x6d, gbc.readMem(0xa9eb));
        // CB 6D 0183
        gbc.setState(0x4d70, 0xcb01, 0xeb80, 0xaff7, 0x6a61, 0x9afd, 0x1, 0x0);
        gbc.writeMem(0x4d70, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcb01, gbc.sp());
        EXPECT(0x4d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0184
        gbc.setState(0x3c91, 0x446, 0x38f0, 0xa25e, 0xe66, 0x5977, 0x0, 0x0);
        gbc.writeMem(0x3c91, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x446, gbc.sp());
        EXPECT(0x3c93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0185
        gbc.setState(0xea2a, 0xf6f6, 0xc0e0, 0x993f, 0xc6a6, 0x17f1, 0x1, 0x0);
        gbc.writeMem(0xea2a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf6f6, gbc.sp());
        EXPECT(0xea2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea2a));
        EXPECT(0x6d, gbc.readMem(0xea2b));
        // CB 6D 0186
        gbc.setState(0x8879, 0x4b53, 0x8ac0, 0x1b1d, 0xa017, 0x8524, 0x0, 0x0);
        gbc.writeMem(0x8879, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4b53, gbc.sp());
        EXPECT(0x887b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8879));
        EXPECT(0x6d, gbc.readMem(0x887a));
        // CB 6D 0187
        gbc.setState(0x1790, 0xde, 0x6fd0, 0xa1db, 0x195e, 0x9031, 0x1, 0x0);
        gbc.writeMem(0x1790, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xde, gbc.sp());
        EXPECT(0x1792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0188
        gbc.setState(0x2d8a, 0x77a9, 0xcc90, 0x3e7c, 0x49a7, 0xc11, 0x1, 0x1);
        gbc.writeMem(0x2d8a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x77a9, gbc.sp());
        EXPECT(0x2d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0189
        gbc.setState(0x4f38, 0x879c, 0x4390, 0xfbcb, 0xf12c, 0xe205, 0x0, 0x0);
        gbc.writeMem(0x4f38, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x879c, gbc.sp());
        EXPECT(0x4f3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 018A
        gbc.setState(0xd51c, 0x8ab1, 0xe2d0, 0x6677, 0xc730, 0x3a48, 0x0, 0x1);
        gbc.writeMem(0xd51c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8ab1, gbc.sp());
        EXPECT(0xd51e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd51c));
        EXPECT(0x6d, gbc.readMem(0xd51d));
        // CB 6D 018B
        gbc.setState(0x2c4d, 0x2f86, 0xdfa0, 0x1adb, 0xc217, 0xd1ac, 0x1, 0x1);
        gbc.writeMem(0x2c4d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2f86, gbc.sp());
        EXPECT(0x2c4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 018C
        gbc.setState(0xba9d, 0xcf2f, 0xf350, 0x3620, 0x130f, 0xfde, 0x0, 0x0);
        gbc.writeMem(0xba9d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcf2f, gbc.sp());
        EXPECT(0xba9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba9d));
        EXPECT(0x6d, gbc.readMem(0xba9e));
        // CB 6D 018D
        gbc.setState(0x7c95, 0x92f9, 0xfe20, 0xfaf4, 0x8610, 0x22af, 0x0, 0x1);
        gbc.writeMem(0x7c95, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x92f9, gbc.sp());
        EXPECT(0x7c97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 018E
        gbc.setState(0x9622, 0xbe35, 0xab80, 0x177d, 0x2f81, 0x8d95, 0x1, 0x1);
        gbc.writeMem(0x9622, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbe35, gbc.sp());
        EXPECT(0x9624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9622));
        EXPECT(0x6d, gbc.readMem(0x9623));
        // CB 6D 018F
        gbc.setState(0xe990, 0x7cb3, 0x80e0, 0xb9cc, 0xa9c2, 0x61d2, 0x0, 0x1);
        gbc.writeMem(0xe990, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7cb3, gbc.sp());
        EXPECT(0xe992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe990));
        EXPECT(0x6d, gbc.readMem(0xe991));
        // CB 6D 0190
        gbc.setState(0x7f8e, 0x2358, 0x5000, 0xafa1, 0xcf5a, 0x540e, 0x1, 0x0);
        gbc.writeMem(0x7f8e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2358, gbc.sp());
        EXPECT(0x7f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0191
        gbc.setState(0x5dc9, 0xd6da, 0x2470, 0x1b29, 0xb79d, 0xb6c, 0x0, 0x0);
        gbc.writeMem(0x5dc9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd6da, gbc.sp());
        EXPECT(0x5dcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0192
        gbc.setState(0x6f6d, 0xa6b7, 0xfb60, 0x2232, 0x86ef, 0xfc78, 0x1, 0x1);
        gbc.writeMem(0x6f6d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa6b7, gbc.sp());
        EXPECT(0x6f6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0193
        gbc.setState(0x238a, 0x1bd4, 0x6290, 0xd57f, 0x68b2, 0x6a2d, 0x1, 0x0);
        gbc.writeMem(0x238a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1bd4, gbc.sp());
        EXPECT(0x238c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0194
        gbc.setState(0x169f, 0xfd12, 0xa260, 0xd64b, 0x2e22, 0x9e0b, 0x1, 0x1);
        gbc.writeMem(0x169f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xfd12, gbc.sp());
        EXPECT(0x16a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0195
        gbc.setState(0x5313, 0xc83b, 0xf880, 0x2384, 0x22e5, 0x4ee0, 0x0, 0x1);
        gbc.writeMem(0x5313, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc83b, gbc.sp());
        EXPECT(0x5315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0196
        gbc.setState(0x369a, 0x63b6, 0x74e0, 0x4d38, 0x64ca, 0x8aa8, 0x0, 0x1);
        gbc.writeMem(0x369a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x63b6, gbc.sp());
        EXPECT(0x369c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0197
        gbc.setState(0xddd, 0x40ae, 0xf8f0, 0xf06a, 0xec6d, 0x4cd0, 0x0, 0x1);
        gbc.writeMem(0xddd, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x40ae, gbc.sp());
        EXPECT(0xddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0198
        gbc.setState(0x643e, 0xb690, 0x3fe0, 0x3e80, 0x9d11, 0x5283, 0x1, 0x1);
        gbc.writeMem(0x643e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb690, gbc.sp());
        EXPECT(0x6440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0199
        gbc.setState(0x4e87, 0x3c17, 0xff50, 0xb240, 0x8da2, 0x63b7, 0x0, 0x0);
        gbc.writeMem(0x4e87, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3c17, gbc.sp());
        EXPECT(0x4e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 019A
        gbc.setState(0xee64, 0x6e96, 0x3420, 0xc2be, 0xc0e5, 0xbb25, 0x0, 0x1);
        gbc.writeMem(0xee64, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6e96, gbc.sp());
        EXPECT(0xee66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee64));
        EXPECT(0x6d, gbc.readMem(0xee65));
        // CB 6D 019B
        gbc.setState(0x324b, 0x3a53, 0xe200, 0xdeb6, 0x1a3c, 0xe3a9, 0x1, 0x0);
        gbc.writeMem(0x324b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3a53, gbc.sp());
        EXPECT(0x324d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 019C
        gbc.setState(0x3343, 0x5cc4, 0xa360, 0x38b1, 0xc22, 0xbbb2, 0x1, 0x1);
        gbc.writeMem(0x3343, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5cc4, gbc.sp());
        EXPECT(0x3345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 019D
        gbc.setState(0x2950, 0x755a, 0x2410, 0xa71b, 0x9879, 0xb25d, 0x1, 0x1);
        gbc.writeMem(0x2950, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x755a, gbc.sp());
        EXPECT(0x2952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 019E
        gbc.setState(0x450a, 0xc96b, 0xad40, 0x7e89, 0xc118, 0x19b3, 0x0, 0x1);
        gbc.writeMem(0x450a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc96b, gbc.sp());
        EXPECT(0x450c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01A0
        gbc.setState(0x1170, 0x6bf8, 0xa200, 0x7659, 0xfd19, 0x5669, 0x0, 0x0);
        gbc.writeMem(0x1170, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6bf8, gbc.sp());
        EXPECT(0x1172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01A1
        gbc.setState(0xccba, 0xb863, 0x7cd0, 0x50ad, 0xd56e, 0x3b1e, 0x1, 0x1);
        gbc.writeMem(0xccba, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb863, gbc.sp());
        EXPECT(0xccbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccba));
        EXPECT(0x6d, gbc.readMem(0xccbb));
        // CB 6D 01A2
        gbc.setState(0x593, 0x9325, 0x45f0, 0x5a02, 0xa59, 0xc7f5, 0x1, 0x0);
        gbc.writeMem(0x593, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9325, gbc.sp());
        EXPECT(0x595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01A3
        gbc.setState(0x8148, 0x31c5, 0x7cc0, 0x53f, 0xb265, 0x752f, 0x1, 0x0);
        gbc.writeMem(0x8148, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x31c5, gbc.sp());
        EXPECT(0x814a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8148));
        EXPECT(0x6d, gbc.readMem(0x8149));
        // CB 6D 01A4
        gbc.setState(0x3e7d, 0xbdb7, 0x530, 0x925f, 0xd947, 0x9e27, 0x0, 0x1);
        gbc.writeMem(0x3e7d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbdb7, gbc.sp());
        EXPECT(0x3e7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01A5
        gbc.setState(0x2ef, 0x213, 0xb700, 0x24f7, 0x1a84, 0x167b, 0x1, 0x1);
        gbc.writeMem(0x2ef, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x213, gbc.sp());
        EXPECT(0x2f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01A6
        gbc.setState(0xca83, 0x7273, 0x80c0, 0xc834, 0xd5ac, 0xaab3, 0x0, 0x1);
        gbc.writeMem(0xca83, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7273, gbc.sp());
        EXPECT(0xca85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca83));
        EXPECT(0x6d, gbc.readMem(0xca84));
        // CB 6D 01A7
        gbc.setState(0xd81f, 0x58dc, 0xa740, 0x49a2, 0xf271, 0x602a, 0x0, 0x0);
        gbc.writeMem(0xd81f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x58dc, gbc.sp());
        EXPECT(0xd821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd81f));
        EXPECT(0x6d, gbc.readMem(0xd820));
        // CB 6D 01A8
        gbc.setState(0x7aeb, 0x5f9e, 0x13e0, 0x7dbd, 0x410f, 0x45ff, 0x0, 0x1);
        gbc.writeMem(0x7aeb, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5f9e, gbc.sp());
        EXPECT(0x7aed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01A9
        gbc.setState(0x5b69, 0x7415, 0xd20, 0xe7f6, 0xbf, 0x2720, 0x0, 0x0);
        gbc.writeMem(0x5b69, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7415, gbc.sp());
        EXPECT(0x5b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01AA
        gbc.setState(0x7181, 0xd9a, 0xc7c0, 0x87ec, 0x6cdb, 0x9f94, 0x0, 0x0);
        gbc.writeMem(0x7181, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd9a, gbc.sp());
        EXPECT(0x7183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01AB
        gbc.setState(0xc58e, 0xa57e, 0x680, 0xe17, 0x4304, 0x3a67, 0x1, 0x0);
        gbc.writeMem(0xc58e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa57e, gbc.sp());
        EXPECT(0xc590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc58e));
        EXPECT(0x6d, gbc.readMem(0xc58f));
        // CB 6D 01AC
        gbc.setState(0x42bb, 0xd132, 0xd470, 0x8855, 0xec20, 0xb147, 0x1, 0x1);
        gbc.writeMem(0x42bb, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd132, gbc.sp());
        EXPECT(0x42bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01AD
        gbc.setState(0xde5e, 0x8091, 0xfd10, 0x453, 0xbd64, 0xf2ce, 0x0, 0x1);
        gbc.writeMem(0xde5e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8091, gbc.sp());
        EXPECT(0xde60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde5e));
        EXPECT(0x6d, gbc.readMem(0xde5f));
        // CB 6D 01AE
        gbc.setState(0xa3c1, 0x2c95, 0xc6b0, 0xe720, 0x790b, 0xdda1, 0x1, 0x1);
        gbc.writeMem(0xa3c1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2c95, gbc.sp());
        EXPECT(0xa3c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3c1));
        EXPECT(0x6d, gbc.readMem(0xa3c2));
        // CB 6D 01AF
        gbc.setState(0xf46, 0x1d2f, 0x3a60, 0x9230, 0xbb31, 0xddf5, 0x0, 0x1);
        gbc.writeMem(0xf46, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1d2f, gbc.sp());
        EXPECT(0xf48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01B0
        gbc.setState(0xd188, 0xf928, 0xc320, 0x5d4b, 0x31, 0x809, 0x1, 0x0);
        gbc.writeMem(0xd188, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf928, gbc.sp());
        EXPECT(0xd18a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd188));
        EXPECT(0x6d, gbc.readMem(0xd189));
        // CB 6D 01B1
        gbc.setState(0xcf9e, 0xe69c, 0x440, 0x89e7, 0xd60c, 0x5a68, 0x1, 0x0);
        gbc.writeMem(0xcf9e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe69c, gbc.sp());
        EXPECT(0xcfa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf9e));
        EXPECT(0x6d, gbc.readMem(0xcf9f));
        // CB 6D 01B3
        gbc.setState(0x3a41, 0xb794, 0xb7c0, 0x4462, 0x10d8, 0x16f0, 0x1, 0x0);
        gbc.writeMem(0x3a41, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb794, gbc.sp());
        EXPECT(0x3a43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01B4
        gbc.setState(0x7e72, 0x2b9c, 0x4350, 0xd774, 0x95bf, 0xbf8c, 0x1, 0x1);
        gbc.writeMem(0x7e72, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2b9c, gbc.sp());
        EXPECT(0x7e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01B5
        gbc.setState(0x2642, 0xe022, 0x5530, 0x4e66, 0xf94d, 0xf5a7, 0x1, 0x1);
        gbc.writeMem(0x2642, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe022, gbc.sp());
        EXPECT(0x2644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01B6
        gbc.setState(0xecae, 0xda11, 0xa050, 0x6e1, 0x7667, 0x1606, 0x1, 0x1);
        gbc.writeMem(0xecae, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xda11, gbc.sp());
        EXPECT(0xecb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecae));
        EXPECT(0x6d, gbc.readMem(0xecaf));
        // CB 6D 01B7
        gbc.setState(0xc321, 0x321, 0xff10, 0x30d8, 0x11dd, 0x20ca, 0x1, 0x1);
        gbc.writeMem(0xc321, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x321, gbc.sp());
        EXPECT(0xc323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc321));
        EXPECT(0x6d, gbc.readMem(0xc322));
        // CB 6D 01B8
        gbc.setState(0x167a, 0x7f9a, 0x24a0, 0x63ed, 0xb436, 0x93a5, 0x0, 0x0);
        gbc.writeMem(0x167a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7f9a, gbc.sp());
        EXPECT(0x167c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01B9
        gbc.setState(0x3278, 0x568, 0x3b50, 0xc500, 0x665a, 0x3354, 0x1, 0x1);
        gbc.writeMem(0x3278, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x568, gbc.sp());
        EXPECT(0x327a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01BA
        gbc.setState(0x1681, 0x5abc, 0x1970, 0xc2e0, 0x7c00, 0xef24, 0x1, 0x0);
        gbc.writeMem(0x1681, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5abc, gbc.sp());
        EXPECT(0x1683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01BB
        gbc.setState(0x73b3, 0x81da, 0xe1f0, 0x240b, 0x79b0, 0xa8fc, 0x0, 0x1);
        gbc.writeMem(0x73b3, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x81da, gbc.sp());
        EXPECT(0x73b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01BC
        gbc.setState(0x6981, 0x5c26, 0x3fb0, 0x13c4, 0x9937, 0x333e, 0x0, 0x0);
        gbc.writeMem(0x6981, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5c26, gbc.sp());
        EXPECT(0x6983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01BD
        gbc.setState(0x793, 0x5658, 0xb6b0, 0xf413, 0x4a72, 0x2d0, 0x1, 0x1);
        gbc.writeMem(0x793, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5658, gbc.sp());
        EXPECT(0x795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01BE
        gbc.setState(0xd32a, 0x8ee9, 0x3950, 0x2799, 0x74bc, 0xa627, 0x1, 0x0);
        gbc.writeMem(0xd32a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8ee9, gbc.sp());
        EXPECT(0xd32c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32a));
        EXPECT(0x6d, gbc.readMem(0xd32b));
        // CB 6D 01BF
        gbc.setState(0x173e, 0x822a, 0x77f0, 0x6dc3, 0x8252, 0xd25a, 0x0, 0x1);
        gbc.writeMem(0x173e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x822a, gbc.sp());
        EXPECT(0x1740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01C0
        gbc.setState(0x18ee, 0x1839, 0xc1c0, 0xf01d, 0x319c, 0x8b77, 0x1, 0x0);
        gbc.writeMem(0x18ee, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1839, gbc.sp());
        EXPECT(0x18f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01C1
        gbc.setState(0xb818, 0xd5c, 0x8c70, 0x3df0, 0x6a63, 0x1a8f, 0x1, 0x1);
        gbc.writeMem(0xb818, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd5c, gbc.sp());
        EXPECT(0xb81a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb818));
        EXPECT(0x6d, gbc.readMem(0xb819));
        // CB 6D 01C2
        gbc.setState(0xb4f1, 0x64ea, 0x48a0, 0xbd93, 0xcce3, 0xe0d8, 0x1, 0x0);
        gbc.writeMem(0xb4f1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x64ea, gbc.sp());
        EXPECT(0xb4f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f1));
        EXPECT(0x6d, gbc.readMem(0xb4f2));
        // CB 6D 01C3
        gbc.setState(0xc008, 0x6a6b, 0xc980, 0xea7a, 0x52c3, 0x9a13, 0x0, 0x1);
        gbc.writeMem(0xc008, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6a6b, gbc.sp());
        EXPECT(0xc00a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc008));
        EXPECT(0x6d, gbc.readMem(0xc009));
        // CB 6D 01C4
        gbc.setState(0x433f, 0xc8f1, 0x170, 0x49b4, 0x8667, 0x12b6, 0x0, 0x1);
        gbc.writeMem(0x433f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc8f1, gbc.sp());
        EXPECT(0x4341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01C5
        gbc.setState(0x2d3c, 0xbb97, 0x3e40, 0x774b, 0x72f6, 0x2a08, 0x0, 0x1);
        gbc.writeMem(0x2d3c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbb97, gbc.sp());
        EXPECT(0x2d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01C6
        gbc.setState(0x4bdb, 0xeb3c, 0x2430, 0xe370, 0xfe02, 0xe7fd, 0x1, 0x1);
        gbc.writeMem(0x4bdb, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xeb3c, gbc.sp());
        EXPECT(0x4bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01C7
        gbc.setState(0x7851, 0xea22, 0x9680, 0x5352, 0xe75c, 0x2ac6, 0x1, 0x0);
        gbc.writeMem(0x7851, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xea22, gbc.sp());
        EXPECT(0x7853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01C8
        gbc.setState(0xc9b8, 0x4126, 0xb370, 0x371c, 0x1c28, 0x83d4, 0x1, 0x0);
        gbc.writeMem(0xc9b8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4126, gbc.sp());
        EXPECT(0xc9ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9b8));
        EXPECT(0x6d, gbc.readMem(0xc9b9));
        // CB 6D 01CA
        gbc.setState(0xd6df, 0x107, 0xc3a0, 0xffc1, 0x2d69, 0xa6f0, 0x0, 0x1);
        gbc.writeMem(0xd6df, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x107, gbc.sp());
        EXPECT(0xd6e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6df));
        EXPECT(0x6d, gbc.readMem(0xd6e0));
        // CB 6D 01CB
        gbc.setState(0x49d1, 0xd8e2, 0x85a0, 0x35e7, 0x25d5, 0x351, 0x1, 0x1);
        gbc.writeMem(0x49d1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd8e2, gbc.sp());
        EXPECT(0x49d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01CC
        gbc.setState(0x22df, 0x6e21, 0x8610, 0xbd0e, 0x25d4, 0xb6a2, 0x0, 0x1);
        gbc.writeMem(0x22df, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6e21, gbc.sp());
        EXPECT(0x22e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01CD
        gbc.setState(0x5bd0, 0x782c, 0xf2e0, 0xfa12, 0x72a3, 0xadbc, 0x1, 0x1);
        gbc.writeMem(0x5bd0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x782c, gbc.sp());
        EXPECT(0x5bd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01CE
        gbc.setState(0x9099, 0x2591, 0xcff0, 0xcd2d, 0x2570, 0x2b01, 0x1, 0x0);
        gbc.writeMem(0x9099, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2591, gbc.sp());
        EXPECT(0x909b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9099));
        EXPECT(0x6d, gbc.readMem(0x909a));
        // CB 6D 01CF
        gbc.setState(0x2f27, 0x75f, 0x91e0, 0x9fe8, 0x9432, 0xfa9c, 0x0, 0x1);
        gbc.writeMem(0x2f27, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x75f, gbc.sp());
        EXPECT(0x2f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01D0
        gbc.setState(0x35c, 0xa1, 0xe6d0, 0x4b63, 0xf870, 0xdbda, 0x0, 0x1);
        gbc.writeMem(0x35c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa1, gbc.sp());
        EXPECT(0x35e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01D1
        gbc.setState(0x738c, 0xb849, 0xee70, 0xcfd1, 0xbe10, 0x87e9, 0x0, 0x1);
        gbc.writeMem(0x738c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb849, gbc.sp());
        EXPECT(0x738e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01D2
        gbc.setState(0x54b, 0x90b0, 0x88e0, 0xb4f9, 0x35b8, 0xd837, 0x1, 0x1);
        gbc.writeMem(0x54b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x90b0, gbc.sp());
        EXPECT(0x54d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01D3
        gbc.setState(0xb0ac, 0x93e1, 0xda0, 0x7d62, 0xd585, 0xf9f4, 0x1, 0x0);
        gbc.writeMem(0xb0ac, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x93e1, gbc.sp());
        EXPECT(0xb0ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ac));
        EXPECT(0x6d, gbc.readMem(0xb0ad));
        // CB 6D 01D4
        gbc.setState(0x5efe, 0x7675, 0x26d0, 0xf4c, 0x27c3, 0x8f6a, 0x0, 0x1);
        gbc.writeMem(0x5efe, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7675, gbc.sp());
        EXPECT(0x5f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01D5
        gbc.setState(0x852a, 0xa79f, 0x8580, 0x9778, 0x99b6, 0x9c74, 0x1, 0x0);
        gbc.writeMem(0x852a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa79f, gbc.sp());
        EXPECT(0x852c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x852a));
        EXPECT(0x6d, gbc.readMem(0x852b));
        // CB 6D 01D6
        gbc.setState(0xd56f, 0x383b, 0x99f0, 0x3851, 0x2ec2, 0xb457, 0x1, 0x1);
        gbc.writeMem(0xd56f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x383b, gbc.sp());
        EXPECT(0xd571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd56f));
        EXPECT(0x6d, gbc.readMem(0xd570));
        // CB 6D 01D7
        gbc.setState(0x5a8b, 0x10fd, 0x2c00, 0xd3cd, 0xf26, 0x8b7, 0x0, 0x0);
        gbc.writeMem(0x5a8b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x10fd, gbc.sp());
        EXPECT(0x5a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01D8
        gbc.setState(0x165, 0x9c6b, 0x51a0, 0x8989, 0x61d0, 0x7a07, 0x1, 0x1);
        gbc.writeMem(0x165, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9c6b, gbc.sp());
        EXPECT(0x167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01DA
        gbc.setState(0x3b03, 0x7e28, 0xae00, 0x3a81, 0x6f0e, 0x8795, 0x1, 0x1);
        gbc.writeMem(0x3b03, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7e28, gbc.sp());
        EXPECT(0x3b05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01DB
        gbc.setState(0xef75, 0x73b1, 0x9950, 0x3e36, 0x73d4, 0x1ca6, 0x0, 0x1);
        gbc.writeMem(0xef75, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x73b1, gbc.sp());
        EXPECT(0xef77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef75));
        EXPECT(0x6d, gbc.readMem(0xef76));
        // CB 6D 01DC
        gbc.setState(0x8803, 0x913c, 0xb830, 0xd575, 0x3b0a, 0xe62c, 0x0, 0x0);
        gbc.writeMem(0x8803, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x913c, gbc.sp());
        EXPECT(0x8805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8803));
        EXPECT(0x6d, gbc.readMem(0x8804));
        // CB 6D 01DD
        gbc.setState(0x7464, 0xd1b1, 0xbae0, 0x5be5, 0x35f7, 0xce72, 0x1, 0x0);
        gbc.writeMem(0x7464, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd1b1, gbc.sp());
        EXPECT(0x7466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01DF
        gbc.setState(0x8c61, 0xf6a2, 0x3d00, 0x5087, 0x5d86, 0x4e1d, 0x1, 0x1);
        gbc.writeMem(0x8c61, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf6a2, gbc.sp());
        EXPECT(0x8c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c61));
        EXPECT(0x6d, gbc.readMem(0x8c62));
        // CB 6D 01E0
        gbc.setState(0xf62, 0x6721, 0x1bd0, 0x9e6c, 0xc5d4, 0xf191, 0x1, 0x1);
        gbc.writeMem(0xf62, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6721, gbc.sp());
        EXPECT(0xf64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01E1
        gbc.setState(0x466e, 0x5c04, 0x21c0, 0x80b5, 0x7290, 0xa93, 0x0, 0x1);
        gbc.writeMem(0x466e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5c04, gbc.sp());
        EXPECT(0x4670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01E2
        gbc.setState(0xeccd, 0x8862, 0xefb0, 0x683e, 0xb19b, 0xbd5, 0x1, 0x0);
        gbc.writeMem(0xeccd, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8862, gbc.sp());
        EXPECT(0xeccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeccd));
        EXPECT(0x6d, gbc.readMem(0xecce));
        // CB 6D 01E3
        gbc.setState(0x4b56, 0xdba3, 0xf170, 0xc220, 0x713e, 0x6e51, 0x0, 0x1);
        gbc.writeMem(0x4b56, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdba3, gbc.sp());
        EXPECT(0x4b58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01E4
        gbc.setState(0xc36b, 0x7fd9, 0x1ba0, 0xba33, 0x79ec, 0x5c80, 0x1, 0x0);
        gbc.writeMem(0xc36b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7fd9, gbc.sp());
        EXPECT(0xc36d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc36b));
        EXPECT(0x6d, gbc.readMem(0xc36c));
        // CB 6D 01E5
        gbc.setState(0xa50c, 0x28d4, 0x410, 0xeb27, 0x6eef, 0xf69b, 0x1, 0x0);
        gbc.writeMem(0xa50c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x28d4, gbc.sp());
        EXPECT(0xa50e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50c));
        EXPECT(0x6d, gbc.readMem(0xa50d));
        // CB 6D 01E6
        gbc.setState(0xa7ab, 0x59a4, 0x49d0, 0x61e4, 0xa345, 0xe8e6, 0x1, 0x1);
        gbc.writeMem(0xa7ab, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x59a4, gbc.sp());
        EXPECT(0xa7ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ab));
        EXPECT(0x6d, gbc.readMem(0xa7ac));
        // CB 6D 01E7
        gbc.setState(0x7c7e, 0x759, 0x5f80, 0xb246, 0x10ed, 0xf4d7, 0x0, 0x0);
        gbc.writeMem(0x7c7e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x759, gbc.sp());
        EXPECT(0x7c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01E8
        gbc.setState(0x5a91, 0xcd62, 0xdfb0, 0xe07b, 0x8055, 0x773d, 0x0, 0x1);
        gbc.writeMem(0x5a91, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xcd62, gbc.sp());
        EXPECT(0x5a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01E9
        gbc.setState(0x3010, 0xb864, 0xe500, 0x6f12, 0x1747, 0x270d, 0x0, 0x0);
        gbc.writeMem(0x3010, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb864, gbc.sp());
        EXPECT(0x3012, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01EA
        gbc.setState(0xb889, 0xc1d7, 0x740, 0xc143, 0x98a5, 0x32e9, 0x0, 0x1);
        gbc.writeMem(0xb889, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc1d7, gbc.sp());
        EXPECT(0xb88b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb889));
        EXPECT(0x6d, gbc.readMem(0xb88a));
        // CB 6D 01EB
        gbc.setState(0xa178, 0x1d7b, 0x8db0, 0x28e5, 0xd04b, 0xafb6, 0x0, 0x1);
        gbc.writeMem(0xa178, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1d7b, gbc.sp());
        EXPECT(0xa17a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa178));
        EXPECT(0x6d, gbc.readMem(0xa179));
        // CB 6D 01EC
        gbc.setState(0x9f34, 0xae15, 0x1c40, 0xda5, 0xff86, 0x9720, 0x0, 0x0);
        gbc.writeMem(0x9f34, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xae15, gbc.sp());
        EXPECT(0x9f36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f34));
        EXPECT(0x6d, gbc.readMem(0x9f35));
        // CB 6D 01ED
        gbc.setState(0x55f2, 0x4c61, 0xef80, 0x4a8f, 0x78e, 0xc52c, 0x0, 0x1);
        gbc.writeMem(0x55f2, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4c61, gbc.sp());
        EXPECT(0x55f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01EE
        gbc.setState(0x1293, 0xbec4, 0x3760, 0x6488, 0x100b, 0x4b06, 0x0, 0x1);
        gbc.writeMem(0x1293, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xbec4, gbc.sp());
        EXPECT(0x1295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01EF
        gbc.setState(0x2df4, 0xa85, 0xf0e0, 0x298c, 0xaec, 0x967a, 0x0, 0x0);
        gbc.writeMem(0x2df4, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa85, gbc.sp());
        EXPECT(0x2df6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01F0
        gbc.setState(0x8070, 0x7340, 0x68d0, 0x13b2, 0x8957, 0x946a, 0x1, 0x0);
        gbc.writeMem(0x8070, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7340, gbc.sp());
        EXPECT(0x8072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8070));
        EXPECT(0x6d, gbc.readMem(0x8071));
        // CB 6D 01F1
        gbc.setState(0x69dd, 0x4357, 0xb1b0, 0xe1eb, 0x7257, 0x7c6d, 0x0, 0x0);
        gbc.writeMem(0x69dd, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4357, gbc.sp());
        EXPECT(0x69df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01F2
        gbc.setState(0x72d0, 0xbaa5, 0x52f0, 0xec9, 0xa2fb, 0xd28d, 0x0, 0x1);
        gbc.writeMem(0x72d0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xbaa5, gbc.sp());
        EXPECT(0x72d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01F3
        gbc.setState(0x8ba7, 0x130d, 0xb270, 0x840d, 0x9c46, 0xb43, 0x1, 0x1);
        gbc.writeMem(0x8ba7, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x130d, gbc.sp());
        EXPECT(0x8ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba7));
        EXPECT(0x6d, gbc.readMem(0x8ba8));
        // CB 6D 01F4
        gbc.setState(0x532c, 0xa5f6, 0x5a50, 0xddab, 0xcf6f, 0x710a, 0x0, 0x0);
        gbc.writeMem(0x532c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa5f6, gbc.sp());
        EXPECT(0x532e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01F5
        gbc.setState(0x5e7, 0x7372, 0x5590, 0xb6cc, 0x3fdf, 0xe77e, 0x0, 0x1);
        gbc.writeMem(0x5e7, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7372, gbc.sp());
        EXPECT(0x5e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01F6
        gbc.setState(0x89e9, 0x58a5, 0x2600, 0xb74c, 0x8f79, 0x5297, 0x1, 0x1);
        gbc.writeMem(0x89e9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x58a5, gbc.sp());
        EXPECT(0x89eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e9));
        EXPECT(0x6d, gbc.readMem(0x89ea));
        // CB 6D 01F7
        gbc.setState(0x26fc, 0xa9c0, 0xccc0, 0xda4, 0x55fd, 0x7d0d, 0x0, 0x0);
        gbc.writeMem(0x26fc, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa9c0, gbc.sp());
        EXPECT(0x26fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01F8
        gbc.setState(0x5416, 0x6396, 0xc700, 0xb153, 0x9260, 0x182d, 0x0, 0x0);
        gbc.writeMem(0x5416, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6396, gbc.sp());
        EXPECT(0x5418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01F9
        gbc.setState(0xae6e, 0xe94c, 0xf220, 0x6a78, 0x8236, 0x4072, 0x0, 0x0);
        gbc.writeMem(0xae6e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe94c, gbc.sp());
        EXPECT(0xae70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae6e));
        EXPECT(0x6d, gbc.readMem(0xae6f));
        // CB 6D 01FA
        gbc.setState(0x7f49, 0xf7, 0xb1b0, 0xf618, 0x92ed, 0x60b8, 0x0, 0x1);
        gbc.writeMem(0x7f49, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf7, gbc.sp());
        EXPECT(0x7f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01FC
        gbc.setState(0x555b, 0x4735, 0x63d0, 0x7817, 0x38e6, 0x73d, 0x0, 0x1);
        gbc.writeMem(0x555b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4735, gbc.sp());
        EXPECT(0x555d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 01FD
        gbc.setState(0x4b58, 0xa47f, 0x400, 0x1888, 0xc077, 0x1e6, 0x1, 0x0);
        gbc.writeMem(0x4b58, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa47f, gbc.sp());
        EXPECT(0x4b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 01FE
        gbc.setState(0xbea8, 0x3729, 0x80d0, 0xa828, 0xcc0f, 0xd9a8, 0x1, 0x0);
        gbc.writeMem(0xbea8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3729, gbc.sp());
        EXPECT(0xbeaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbea8));
        EXPECT(0x6d, gbc.readMem(0xbea9));
        // CB 6D 01FF
        gbc.setState(0x2006, 0xa8f7, 0x6aa0, 0x5afc, 0xf88f, 0x390a, 0x1, 0x0);
        gbc.writeMem(0x2006, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa8f7, gbc.sp());
        EXPECT(0x2008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0200
        gbc.setState(0x888d, 0xf853, 0xeca0, 0x1c0d, 0x4a4d, 0x5965, 0x1, 0x0);
        gbc.writeMem(0x888d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf853, gbc.sp());
        EXPECT(0x888f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x888d));
        EXPECT(0x6d, gbc.readMem(0x888e));
        // CB 6D 0201
        gbc.setState(0x1f26, 0xf80, 0x4110, 0x8f60, 0x1367, 0x581d, 0x1, 0x0);
        gbc.writeMem(0x1f26, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf80, gbc.sp());
        EXPECT(0x1f28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0202
        gbc.setState(0x1835, 0xd35d, 0xcf20, 0xdbea, 0x96a4, 0x7bbd, 0x1, 0x1);
        gbc.writeMem(0x1835, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd35d, gbc.sp());
        EXPECT(0x1837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0203
        gbc.setState(0x3a7, 0x1238, 0x90c0, 0xc1e4, 0x7ff5, 0xe0ba, 0x1, 0x1);
        gbc.writeMem(0x3a7, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1238, gbc.sp());
        EXPECT(0x3a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0204
        gbc.setState(0x2b3e, 0xb521, 0xb50, 0x4786, 0x1d00, 0x311b, 0x0, 0x0);
        gbc.writeMem(0x2b3e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb521, gbc.sp());
        EXPECT(0x2b40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0205
        gbc.setState(0x8530, 0x437e, 0x9060, 0x80de, 0x674b, 0xe8e8, 0x0, 0x0);
        gbc.writeMem(0x8530, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x437e, gbc.sp());
        EXPECT(0x8532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8530));
        EXPECT(0x6d, gbc.readMem(0x8531));
        // CB 6D 0206
        gbc.setState(0x5f48, 0x9927, 0x1d50, 0x44ba, 0xadd4, 0x675a, 0x1, 0x1);
        gbc.writeMem(0x5f48, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9927, gbc.sp());
        EXPECT(0x5f4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0207
        gbc.setState(0x8490, 0x174d, 0xdfe0, 0x94f0, 0x5009, 0x7e6e, 0x0, 0x0);
        gbc.writeMem(0x8490, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x174d, gbc.sp());
        EXPECT(0x8492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8490));
        EXPECT(0x6d, gbc.readMem(0x8491));
        // CB 6D 0208
        gbc.setState(0xb6a0, 0xab0e, 0xe8c0, 0x9a04, 0xe611, 0x5b81, 0x1, 0x0);
        gbc.writeMem(0xb6a0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xab0e, gbc.sp());
        EXPECT(0xb6a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6a0));
        EXPECT(0x6d, gbc.readMem(0xb6a1));
        // CB 6D 0209
        gbc.setState(0xcdcc, 0x47a5, 0xf560, 0xf5f4, 0x5c46, 0x84a0, 0x1, 0x0);
        gbc.writeMem(0xcdcc, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x47a5, gbc.sp());
        EXPECT(0xcdce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdcc));
        EXPECT(0x6d, gbc.readMem(0xcdcd));
        // CB 6D 020A
        gbc.setState(0xc2a4, 0x9c2d, 0xd6f0, 0x36d4, 0xa85b, 0x8dbd, 0x1, 0x0);
        gbc.writeMem(0xc2a4, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9c2d, gbc.sp());
        EXPECT(0xc2a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a4));
        EXPECT(0x6d, gbc.readMem(0xc2a5));
        // CB 6D 020B
        gbc.setState(0x7574, 0x87f, 0xcc40, 0x1bf7, 0x528b, 0xf97, 0x0, 0x1);
        gbc.writeMem(0x7574, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x87f, gbc.sp());
        EXPECT(0x7576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 020D
        gbc.setState(0x1329, 0xb52b, 0x8350, 0xc6b4, 0x18c8, 0x4977, 0x0, 0x0);
        gbc.writeMem(0x1329, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb52b, gbc.sp());
        EXPECT(0x132b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 020E
        gbc.setState(0x25a8, 0x67dd, 0x6270, 0x9f02, 0x8999, 0x5689, 0x1, 0x0);
        gbc.writeMem(0x25a8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x67dd, gbc.sp());
        EXPECT(0x25aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 020F
        gbc.setState(0xedf9, 0xee3d, 0x97f0, 0xee43, 0xadac, 0x2980, 0x1, 0x0);
        gbc.writeMem(0xedf9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xee3d, gbc.sp());
        EXPECT(0xedfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf9));
        EXPECT(0x6d, gbc.readMem(0xedfa));
        // CB 6D 0210
        gbc.setState(0x2bbd, 0x612f, 0xa2b0, 0xc06c, 0xdd66, 0xb9be, 0x0, 0x0);
        gbc.writeMem(0x2bbd, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x612f, gbc.sp());
        EXPECT(0x2bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0211
        gbc.setState(0x85a6, 0x3dca, 0x9dc0, 0x79ee, 0x1e3, 0xbbcb, 0x1, 0x1);
        gbc.writeMem(0x85a6, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3dca, gbc.sp());
        EXPECT(0x85a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85a6));
        EXPECT(0x6d, gbc.readMem(0x85a7));
        // CB 6D 0212
        gbc.setState(0xd8ae, 0x5998, 0xa7f0, 0xfea3, 0x5f8d, 0xe2d5, 0x1, 0x1);
        gbc.writeMem(0xd8ae, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5998, gbc.sp());
        EXPECT(0xd8b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ae));
        EXPECT(0x6d, gbc.readMem(0xd8af));
        // CB 6D 0213
        gbc.setState(0xe584, 0x9a58, 0x26a0, 0xafdd, 0x6d4f, 0x8380, 0x1, 0x0);
        gbc.writeMem(0xe584, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9a58, gbc.sp());
        EXPECT(0xe586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe584));
        EXPECT(0x6d, gbc.readMem(0xe585));
        // CB 6D 0216
        gbc.setState(0x725d, 0x62ab, 0x7e40, 0x5293, 0xc9c8, 0x8e8a, 0x1, 0x0);
        gbc.writeMem(0x725d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x62ab, gbc.sp());
        EXPECT(0x725f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0217
        gbc.setState(0xc32c, 0xb725, 0x9510, 0x1976, 0x5aca, 0xd8b3, 0x1, 0x1);
        gbc.writeMem(0xc32c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb725, gbc.sp());
        EXPECT(0xc32e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc32c));
        EXPECT(0x6d, gbc.readMem(0xc32d));
        // CB 6D 0218
        gbc.setState(0x4ac8, 0x6b05, 0xdc70, 0xf29a, 0x5c50, 0xa782, 0x0, 0x0);
        gbc.writeMem(0x4ac8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6b05, gbc.sp());
        EXPECT(0x4aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0219
        gbc.setState(0xc5c2, 0xe2fe, 0xba0, 0xd890, 0xe310, 0x244, 0x0, 0x0);
        gbc.writeMem(0xc5c2, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe2fe, gbc.sp());
        EXPECT(0xc5c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c2));
        EXPECT(0x6d, gbc.readMem(0xc5c3));
        // CB 6D 021A
        gbc.setState(0xb652, 0x715c, 0xc1c0, 0x442, 0x77df, 0xf67a, 0x0, 0x1);
        gbc.writeMem(0xb652, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x715c, gbc.sp());
        EXPECT(0xb654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb652));
        EXPECT(0x6d, gbc.readMem(0xb653));
        // CB 6D 021B
        gbc.setState(0xbc45, 0x449, 0xe430, 0x98ad, 0x6b0d, 0x30fc, 0x1, 0x1);
        gbc.writeMem(0xbc45, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x449, gbc.sp());
        EXPECT(0xbc47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc45));
        EXPECT(0x6d, gbc.readMem(0xbc46));
        // CB 6D 021C
        gbc.setState(0x6c6f, 0xa99, 0xfbe0, 0x2ff2, 0x292d, 0xc054, 0x0, 0x0);
        gbc.writeMem(0x6c6f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa99, gbc.sp());
        EXPECT(0x6c71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 021D
        gbc.setState(0xe539, 0xd0ed, 0x3380, 0x3bb9, 0xdd1d, 0x76cf, 0x0, 0x0);
        gbc.writeMem(0xe539, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd0ed, gbc.sp());
        EXPECT(0xe53b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe539));
        EXPECT(0x6d, gbc.readMem(0xe53a));
        // CB 6D 021E
        gbc.setState(0x84cb, 0xdd7d, 0x9400, 0xd522, 0x102f, 0x81c2, 0x0, 0x0);
        gbc.writeMem(0x84cb, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdd7d, gbc.sp());
        EXPECT(0x84cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84cb));
        EXPECT(0x6d, gbc.readMem(0x84cc));
        // CB 6D 021F
        gbc.setState(0x4a3d, 0x93bc, 0x9230, 0xca22, 0x3f1, 0x2ad9, 0x0, 0x0);
        gbc.writeMem(0x4a3d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x93bc, gbc.sp());
        EXPECT(0x4a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0220
        gbc.setState(0x2042, 0x960c, 0x4ee0, 0xc085, 0x339e, 0x36ac, 0x1, 0x0);
        gbc.writeMem(0x2042, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x960c, gbc.sp());
        EXPECT(0x2044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0221
        gbc.setState(0xbdae, 0x81c1, 0x5590, 0x80f, 0xf7d0, 0x5b1e, 0x1, 0x0);
        gbc.writeMem(0xbdae, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x81c1, gbc.sp());
        EXPECT(0xbdb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdae));
        EXPECT(0x6d, gbc.readMem(0xbdaf));
        // CB 6D 0222
        gbc.setState(0xba28, 0x57d9, 0x6560, 0xf82a, 0x2dd, 0xed41, 0x1, 0x0);
        gbc.writeMem(0xba28, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x57d9, gbc.sp());
        EXPECT(0xba2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba28));
        EXPECT(0x6d, gbc.readMem(0xba29));
        // CB 6D 0223
        gbc.setState(0xe415, 0x5efa, 0xe430, 0x1a63, 0x7b80, 0x2220, 0x0, 0x1);
        gbc.writeMem(0xe415, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5efa, gbc.sp());
        EXPECT(0xe417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe415));
        EXPECT(0x6d, gbc.readMem(0xe416));
        // CB 6D 0224
        gbc.setState(0x50b9, 0xc58, 0xdda0, 0x7835, 0xd7c7, 0x49e3, 0x1, 0x0);
        gbc.writeMem(0x50b9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc58, gbc.sp());
        EXPECT(0x50bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0226
        gbc.setState(0x4c04, 0xccc5, 0x6430, 0x915e, 0x26c7, 0x52e, 0x0, 0x0);
        gbc.writeMem(0x4c04, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xccc5, gbc.sp());
        EXPECT(0x4c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0227
        gbc.setState(0xe872, 0x1b90, 0xd200, 0xfe29, 0x841f, 0xaedc, 0x1, 0x0);
        gbc.writeMem(0xe872, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1b90, gbc.sp());
        EXPECT(0xe874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe872));
        EXPECT(0x6d, gbc.readMem(0xe873));
        // CB 6D 0228
        gbc.setState(0x5890, 0x1793, 0x5f0, 0xbd9c, 0x5a76, 0x4f4d, 0x0, 0x0);
        gbc.writeMem(0x5890, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1793, gbc.sp());
        EXPECT(0x5892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0229
        gbc.setState(0xd7e7, 0x4565, 0xb4f0, 0x74cb, 0x337b, 0xc46e, 0x1, 0x1);
        gbc.writeMem(0xd7e7, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4565, gbc.sp());
        EXPECT(0xd7e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e7));
        EXPECT(0x6d, gbc.readMem(0xd7e8));
        // CB 6D 022A
        gbc.setState(0x400a, 0xf9a7, 0x5880, 0x6e7a, 0x9f3a, 0xe631, 0x1, 0x1);
        gbc.writeMem(0x400a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf9a7, gbc.sp());
        EXPECT(0x400c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 022B
        gbc.setState(0xdb02, 0x254b, 0x7d60, 0x5cff, 0xebe5, 0x9834, 0x1, 0x1);
        gbc.writeMem(0xdb02, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x254b, gbc.sp());
        EXPECT(0xdb04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb02));
        EXPECT(0x6d, gbc.readMem(0xdb03));
        // CB 6D 022C
        gbc.setState(0x547d, 0x26b3, 0x8e90, 0x3056, 0x4d72, 0x7857, 0x1, 0x0);
        gbc.writeMem(0x547d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x26b3, gbc.sp());
        EXPECT(0x547f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 022D
        gbc.setState(0x53f2, 0xd95e, 0x9810, 0xe227, 0x9f70, 0x5c41, 0x0, 0x0);
        gbc.writeMem(0x53f2, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd95e, gbc.sp());
        EXPECT(0x53f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 022E
        gbc.setState(0xb304, 0x5d4a, 0x6350, 0x159a, 0xcd58, 0xf8e9, 0x1, 0x1);
        gbc.writeMem(0xb304, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5d4a, gbc.sp());
        EXPECT(0xb306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb304));
        EXPECT(0x6d, gbc.readMem(0xb305));
        // CB 6D 022F
        gbc.setState(0x442d, 0x8f1c, 0x7490, 0x678, 0xea14, 0xdf13, 0x1, 0x1);
        gbc.writeMem(0x442d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8f1c, gbc.sp());
        EXPECT(0x442f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0230
        gbc.setState(0x5c89, 0xb029, 0x4d0, 0xa2b5, 0x243c, 0x5587, 0x1, 0x1);
        gbc.writeMem(0x5c89, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb029, gbc.sp());
        EXPECT(0x5c8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0231
        gbc.setState(0xb4dc, 0x850b, 0x9ea0, 0xc7b4, 0x4423, 0xecc2, 0x0, 0x1);
        gbc.writeMem(0xb4dc, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x850b, gbc.sp());
        EXPECT(0xb4de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4dc));
        EXPECT(0x6d, gbc.readMem(0xb4dd));
        // CB 6D 0232
        gbc.setState(0xc752, 0xa2b7, 0xf5d0, 0x1909, 0x8fdd, 0xe76c, 0x1, 0x1);
        gbc.writeMem(0xc752, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa2b7, gbc.sp());
        EXPECT(0xc754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc752));
        EXPECT(0x6d, gbc.readMem(0xc753));
        // CB 6D 0233
        gbc.setState(0x6174, 0xda60, 0x5a40, 0xde4a, 0xb1ff, 0x3c9, 0x0, 0x1);
        gbc.writeMem(0x6174, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xda60, gbc.sp());
        EXPECT(0x6176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0234
        gbc.setState(0x58e8, 0x379e, 0xa490, 0x87b7, 0x4fce, 0x2f6f, 0x1, 0x0);
        gbc.writeMem(0x58e8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x379e, gbc.sp());
        EXPECT(0x58ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0235
        gbc.setState(0x380e, 0xafc9, 0x5270, 0xcbbc, 0xdd5b, 0x2b33, 0x1, 0x1);
        gbc.writeMem(0x380e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xafc9, gbc.sp());
        EXPECT(0x3810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0236
        gbc.setState(0x5a2b, 0x220c, 0xce10, 0xe8c4, 0xe858, 0x55a1, 0x1, 0x0);
        gbc.writeMem(0x5a2b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x220c, gbc.sp());
        EXPECT(0x5a2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0237
        gbc.setState(0x4ffe, 0xb587, 0x54f0, 0x98d6, 0x40bb, 0xf038, 0x0, 0x0);
        gbc.writeMem(0x4ffe, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb587, gbc.sp());
        EXPECT(0x5000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0238
        gbc.setState(0x9afc, 0xacfe, 0x1100, 0x2ef5, 0x28a1, 0xe15e, 0x1, 0x0);
        gbc.writeMem(0x9afc, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xacfe, gbc.sp());
        EXPECT(0x9afe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9afc));
        EXPECT(0x6d, gbc.readMem(0x9afd));
        // CB 6D 0239
        gbc.setState(0x9b1b, 0x4fef, 0x1500, 0x66f, 0xbdd3, 0xfdfe, 0x1, 0x1);
        gbc.writeMem(0x9b1b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4fef, gbc.sp());
        EXPECT(0x9b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b1b));
        EXPECT(0x6d, gbc.readMem(0x9b1c));
        // CB 6D 023A
        gbc.setState(0x8081, 0xd3cf, 0xb9b0, 0x712f, 0x1356, 0x90e9, 0x1, 0x0);
        gbc.writeMem(0x8081, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd3cf, gbc.sp());
        EXPECT(0x8083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8081));
        EXPECT(0x6d, gbc.readMem(0x8082));
        // CB 6D 023B
        gbc.setState(0x314, 0x9ede, 0x620, 0xeca0, 0x99a0, 0xa5b, 0x1, 0x0);
        gbc.writeMem(0x314, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9ede, gbc.sp());
        EXPECT(0x316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 023C
        gbc.setState(0x5467, 0x6485, 0x77e0, 0xbaa5, 0xfb09, 0xfa3d, 0x0, 0x0);
        gbc.writeMem(0x5467, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6485, gbc.sp());
        EXPECT(0x5469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 023D
        gbc.setState(0x2a9c, 0x989c, 0xd600, 0xea1e, 0x778c, 0xc1e5, 0x0, 0x0);
        gbc.writeMem(0x2a9c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x989c, gbc.sp());
        EXPECT(0x2a9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 023E
        gbc.setState(0xc414, 0x5658, 0xda20, 0xdddb, 0xce51, 0x92da, 0x0, 0x1);
        gbc.writeMem(0xc414, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5658, gbc.sp());
        EXPECT(0xc416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc414));
        EXPECT(0x6d, gbc.readMem(0xc415));
        // CB 6D 023F
        gbc.setState(0x4c6c, 0x1831, 0x18f0, 0xf308, 0xd7c7, 0x89f, 0x1, 0x1);
        gbc.writeMem(0x4c6c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1831, gbc.sp());
        EXPECT(0x4c6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0240
        gbc.setState(0xaec, 0x2309, 0xfcc0, 0x511c, 0x6081, 0xacdd, 0x0, 0x1);
        gbc.writeMem(0xaec, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2309, gbc.sp());
        EXPECT(0xaee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0241
        gbc.setState(0xd8c5, 0x746a, 0x6150, 0x9de8, 0x7e03, 0xca01, 0x0, 0x0);
        gbc.writeMem(0xd8c5, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x746a, gbc.sp());
        EXPECT(0xd8c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8c5));
        EXPECT(0x6d, gbc.readMem(0xd8c6));
        // CB 6D 0242
        gbc.setState(0x6b88, 0x88b, 0x5cd0, 0xfe4c, 0x77bf, 0xa762, 0x0, 0x0);
        gbc.writeMem(0x6b88, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x88b, gbc.sp());
        EXPECT(0x6b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0243
        gbc.setState(0x3183, 0xc102, 0x41e0, 0xf2a8, 0xa4ab, 0x90ab, 0x0, 0x0);
        gbc.writeMem(0x3183, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc102, gbc.sp());
        EXPECT(0x3185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0244
        gbc.setState(0x5f8d, 0xf9a5, 0x1590, 0xccae, 0x697a, 0xea6a, 0x1, 0x1);
        gbc.writeMem(0x5f8d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf9a5, gbc.sp());
        EXPECT(0x5f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0245
        gbc.setState(0x3b92, 0xc8aa, 0x1e20, 0x6a2c, 0xc45f, 0x5a02, 0x0, 0x1);
        gbc.writeMem(0x3b92, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc8aa, gbc.sp());
        EXPECT(0x3b94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0246
        gbc.setState(0x662d, 0xb338, 0xcf00, 0xfec6, 0xe214, 0xff44, 0x0, 0x0);
        gbc.writeMem(0x662d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb338, gbc.sp());
        EXPECT(0x662f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0247
        gbc.setState(0xe350, 0xfdde, 0x4b10, 0xe3e1, 0xc35b, 0x688a, 0x1, 0x1);
        gbc.writeMem(0xe350, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfdde, gbc.sp());
        EXPECT(0xe352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe350));
        EXPECT(0x6d, gbc.readMem(0xe351));
        // CB 6D 0248
        gbc.setState(0xd2c1, 0x2457, 0xeed0, 0x872c, 0x777d, 0x2647, 0x1, 0x0);
        gbc.writeMem(0xd2c1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2457, gbc.sp());
        EXPECT(0xd2c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c1));
        EXPECT(0x6d, gbc.readMem(0xd2c2));
        // CB 6D 0249
        gbc.setState(0xa45a, 0x13a5, 0x2010, 0xf276, 0x83a1, 0x4244, 0x1, 0x1);
        gbc.writeMem(0xa45a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x13a5, gbc.sp());
        EXPECT(0xa45c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa45a));
        EXPECT(0x6d, gbc.readMem(0xa45b));
        // CB 6D 024A
        gbc.setState(0x8efb, 0x9f86, 0x3ca0, 0x5ac9, 0x45e8, 0x4308, 0x0, 0x1);
        gbc.writeMem(0x8efb, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9f86, gbc.sp());
        EXPECT(0x8efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8efb));
        EXPECT(0x6d, gbc.readMem(0x8efc));
        // CB 6D 024B
        gbc.setState(0xd0a1, 0x42ef, 0x32c0, 0x7080, 0x9f28, 0x521, 0x1, 0x0);
        gbc.writeMem(0xd0a1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x42ef, gbc.sp());
        EXPECT(0xd0a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a1));
        EXPECT(0x6d, gbc.readMem(0xd0a2));
        // CB 6D 024C
        gbc.setState(0xe680, 0x6f4c, 0x76b0, 0xc1ab, 0x7c31, 0x3ae1, 0x1, 0x1);
        gbc.writeMem(0xe680, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6f4c, gbc.sp());
        EXPECT(0xe682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe680));
        EXPECT(0x6d, gbc.readMem(0xe681));
        // CB 6D 024E
        gbc.setState(0xc091, 0xbf6e, 0xe610, 0xe64c, 0xdce7, 0x67d8, 0x0, 0x1);
        gbc.writeMem(0xc091, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbf6e, gbc.sp());
        EXPECT(0xc093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc091));
        EXPECT(0x6d, gbc.readMem(0xc092));
        // CB 6D 024F
        gbc.setState(0x975, 0x1277, 0x6940, 0xa1d8, 0x4509, 0x752e, 0x1, 0x0);
        gbc.writeMem(0x975, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1277, gbc.sp());
        EXPECT(0x977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0250
        gbc.setState(0x7613, 0xfa83, 0x9540, 0x32b4, 0xe366, 0xf60e, 0x0, 0x0);
        gbc.writeMem(0x7613, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfa83, gbc.sp());
        EXPECT(0x7615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0251
        gbc.setState(0x67f2, 0x7341, 0x12e0, 0x1cc6, 0xa66d, 0xa48e, 0x0, 0x0);
        gbc.writeMem(0x67f2, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7341, gbc.sp());
        EXPECT(0x67f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0252
        gbc.setState(0x219, 0xef19, 0xefb0, 0x7d03, 0x64e0, 0x93d0, 0x1, 0x0);
        gbc.writeMem(0x219, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xef19, gbc.sp());
        EXPECT(0x21b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0253
        gbc.setState(0x1077, 0x4d23, 0x2d0, 0xbdc1, 0xa0f0, 0x83f7, 0x0, 0x1);
        gbc.writeMem(0x1077, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4d23, gbc.sp());
        EXPECT(0x1079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0254
        gbc.setState(0x3dac, 0xf30e, 0xa7b0, 0x2039, 0xfad8, 0x6e50, 0x0, 0x0);
        gbc.writeMem(0x3dac, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf30e, gbc.sp());
        EXPECT(0x3dae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0255
        gbc.setState(0x778a, 0x5733, 0xd590, 0xd908, 0xc946, 0x6808, 0x0, 0x0);
        gbc.writeMem(0x778a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5733, gbc.sp());
        EXPECT(0x778c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0256
        gbc.setState(0xe740, 0x637, 0xa4a0, 0x5a3, 0x6ae3, 0xeeb6, 0x0, 0x1);
        gbc.writeMem(0xe740, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x637, gbc.sp());
        EXPECT(0xe742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe740));
        EXPECT(0x6d, gbc.readMem(0xe741));
        // CB 6D 0257
        gbc.setState(0x71c1, 0xc02d, 0x7bc0, 0xefd2, 0x13ef, 0x2736, 0x1, 0x1);
        gbc.writeMem(0x71c1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc02d, gbc.sp());
        EXPECT(0x71c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0258
        gbc.setState(0xa131, 0xd88e, 0xd7c0, 0xfd6, 0x758, 0x9a4d, 0x0, 0x0);
        gbc.writeMem(0xa131, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd88e, gbc.sp());
        EXPECT(0xa133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa131));
        EXPECT(0x6d, gbc.readMem(0xa132));
        // CB 6D 025A
        gbc.setState(0xd01d, 0xe31d, 0x84c0, 0x2cd6, 0x95de, 0x7978, 0x1, 0x0);
        gbc.writeMem(0xd01d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe31d, gbc.sp());
        EXPECT(0xd01f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd01d));
        EXPECT(0x6d, gbc.readMem(0xd01e));
        // CB 6D 025B
        gbc.setState(0x5cd8, 0x4c25, 0xc170, 0x6f97, 0xbdab, 0xb492, 0x0, 0x1);
        gbc.writeMem(0x5cd8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4c25, gbc.sp());
        EXPECT(0x5cda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 025C
        gbc.setState(0xb50f, 0x9edc, 0x5a20, 0x80e5, 0x963e, 0x3ef0, 0x0, 0x1);
        gbc.writeMem(0xb50f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9edc, gbc.sp());
        EXPECT(0xb511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb50f));
        EXPECT(0x6d, gbc.readMem(0xb510));
        // CB 6D 025D
        gbc.setState(0x8d0c, 0xb9e4, 0xc170, 0x439, 0xdbbf, 0x61d1, 0x1, 0x1);
        gbc.writeMem(0x8d0c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb9e4, gbc.sp());
        EXPECT(0x8d0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d0c));
        EXPECT(0x6d, gbc.readMem(0x8d0d));
        // CB 6D 025E
        gbc.setState(0x5dc0, 0xfcef, 0x74d0, 0x9290, 0x736d, 0x23d3, 0x1, 0x0);
        gbc.writeMem(0x5dc0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xfcef, gbc.sp());
        EXPECT(0x5dc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 025F
        gbc.setState(0x56bc, 0xa22c, 0x5e10, 0xb7b6, 0xc37d, 0x34b5, 0x0, 0x0);
        gbc.writeMem(0x56bc, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa22c, gbc.sp());
        EXPECT(0x56be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0260
        gbc.setState(0x4fb, 0x2a6b, 0xfa40, 0xdfea, 0x6387, 0xdbd8, 0x0, 0x1);
        gbc.writeMem(0x4fb, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2a6b, gbc.sp());
        EXPECT(0x4fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0262
        gbc.setState(0x36fe, 0x3c56, 0xbbc0, 0x7c70, 0x9749, 0xdf72, 0x0, 0x1);
        gbc.writeMem(0x36fe, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3c56, gbc.sp());
        EXPECT(0x3700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0263
        gbc.setState(0x7a84, 0xd791, 0xff00, 0x2f03, 0xace, 0x5ece, 0x0, 0x0);
        gbc.writeMem(0x7a84, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd791, gbc.sp());
        EXPECT(0x7a86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0264
        gbc.setState(0x1d2e, 0xc154, 0x49c0, 0xf229, 0x7f68, 0xfbed, 0x1, 0x0);
        gbc.writeMem(0x1d2e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc154, gbc.sp());
        EXPECT(0x1d30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0265
        gbc.setState(0x9a59, 0xe936, 0xd1d0, 0xd801, 0xe853, 0x72d1, 0x0, 0x0);
        gbc.writeMem(0x9a59, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe936, gbc.sp());
        EXPECT(0x9a5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a59));
        EXPECT(0x6d, gbc.readMem(0x9a5a));
        // CB 6D 0266
        gbc.setState(0x4413, 0xffce, 0x5fe0, 0x3e9f, 0x11ab, 0xd21f, 0x0, 0x0);
        gbc.writeMem(0x4413, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xffce, gbc.sp());
        EXPECT(0x4415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0267
        gbc.setState(0x96ea, 0x4cf9, 0xe120, 0x4bae, 0x6ef7, 0x7ce3, 0x0, 0x0);
        gbc.writeMem(0x96ea, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4cf9, gbc.sp());
        EXPECT(0x96ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ea));
        EXPECT(0x6d, gbc.readMem(0x96eb));
        // CB 6D 0268
        gbc.setState(0x9bb9, 0xe782, 0xe050, 0xb5c4, 0x26ce, 0x8021, 0x1, 0x0);
        gbc.writeMem(0x9bb9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe782, gbc.sp());
        EXPECT(0x9bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb9));
        EXPECT(0x6d, gbc.readMem(0x9bba));
        // CB 6D 0269
        gbc.setState(0x2438, 0x8d22, 0x3c80, 0xe046, 0x77b, 0x36b1, 0x1, 0x1);
        gbc.writeMem(0x2438, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8d22, gbc.sp());
        EXPECT(0x243a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 026A
        gbc.setState(0x22be, 0xa7d1, 0x9ec0, 0x3268, 0x1750, 0xc297, 0x0, 0x1);
        gbc.writeMem(0x22be, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa7d1, gbc.sp());
        EXPECT(0x22c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 026B
        gbc.setState(0x5b8a, 0x2478, 0xf820, 0xf295, 0xa0cb, 0x5451, 0x0, 0x1);
        gbc.writeMem(0x5b8a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2478, gbc.sp());
        EXPECT(0x5b8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 026C
        gbc.setState(0xd4f3, 0xbbc5, 0xf0, 0x2576, 0xe8f7, 0xa6ef, 0x1, 0x1);
        gbc.writeMem(0xd4f3, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbbc5, gbc.sp());
        EXPECT(0xd4f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f3));
        EXPECT(0x6d, gbc.readMem(0xd4f4));
        // CB 6D 026D
        gbc.setState(0x5a98, 0x308b, 0x24c0, 0xb179, 0x2db9, 0x452d, 0x0, 0x0);
        gbc.writeMem(0x5a98, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x308b, gbc.sp());
        EXPECT(0x5a9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 026E
        gbc.setState(0x242f, 0x86b, 0xdcf0, 0x4f26, 0x6841, 0x6795, 0x0, 0x0);
        gbc.writeMem(0x242f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x86b, gbc.sp());
        EXPECT(0x2431, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 026F
        gbc.setState(0x4ef6, 0x4f4d, 0x8960, 0xf9e8, 0x17e6, 0x9447, 0x0, 0x0);
        gbc.writeMem(0x4ef6, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4f4d, gbc.sp());
        EXPECT(0x4ef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0270
        gbc.setState(0xbb24, 0x3410, 0xc7f0, 0xb8aa, 0xce49, 0xbdbc, 0x0, 0x1);
        gbc.writeMem(0xbb24, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3410, gbc.sp());
        EXPECT(0xbb26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb24));
        EXPECT(0x6d, gbc.readMem(0xbb25));
        // CB 6D 0271
        gbc.setState(0x9105, 0x828, 0xdd00, 0x85b9, 0x2e84, 0xba25, 0x1, 0x0);
        gbc.writeMem(0x9105, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x828, gbc.sp());
        EXPECT(0x9107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9105));
        EXPECT(0x6d, gbc.readMem(0x9106));
        // CB 6D 0272
        gbc.setState(0x3f50, 0xa25a, 0xcac0, 0xf5f2, 0x1123, 0x3280, 0x1, 0x1);
        gbc.writeMem(0x3f50, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa25a, gbc.sp());
        EXPECT(0x3f52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0273
        gbc.setState(0x5d1d, 0xc590, 0x22b0, 0x88b8, 0xcf1c, 0x6fb1, 0x1, 0x1);
        gbc.writeMem(0x5d1d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc590, gbc.sp());
        EXPECT(0x5d1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0274
        gbc.setState(0x5b48, 0x3c2c, 0xaf30, 0xd72d, 0xc01c, 0x8ee5, 0x1, 0x1);
        gbc.writeMem(0x5b48, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3c2c, gbc.sp());
        EXPECT(0x5b4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0275
        gbc.setState(0x194, 0x81d5, 0xaf90, 0x872, 0xd748, 0xfcc7, 0x1, 0x0);
        gbc.writeMem(0x194, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x81d5, gbc.sp());
        EXPECT(0x196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0276
        gbc.setState(0x8fd7, 0xd2c0, 0xec0, 0x2f7e, 0x2658, 0xa5f5, 0x1, 0x1);
        gbc.writeMem(0x8fd7, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd2c0, gbc.sp());
        EXPECT(0x8fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fd7));
        EXPECT(0x6d, gbc.readMem(0x8fd8));
        // CB 6D 0277
        gbc.setState(0xbca6, 0x12c5, 0x53f0, 0x19ad, 0x8c6f, 0xfc23, 0x1, 0x0);
        gbc.writeMem(0xbca6, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x12c5, gbc.sp());
        EXPECT(0xbca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbca6));
        EXPECT(0x6d, gbc.readMem(0xbca7));
        // CB 6D 0278
        gbc.setState(0xa768, 0x162f, 0x6600, 0x362b, 0xfddb, 0x6f41, 0x0, 0x0);
        gbc.writeMem(0xa768, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x162f, gbc.sp());
        EXPECT(0xa76a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa768));
        EXPECT(0x6d, gbc.readMem(0xa769));
        // CB 6D 0279
        gbc.setState(0x4eb1, 0x213d, 0xf980, 0x1acb, 0x2e67, 0xea7f, 0x1, 0x1);
        gbc.writeMem(0x4eb1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x213d, gbc.sp());
        EXPECT(0x4eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 027A
        gbc.setState(0x8781, 0x6e13, 0xb810, 0x4300, 0x76d8, 0x6c38, 0x0, 0x0);
        gbc.writeMem(0x8781, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6e13, gbc.sp());
        EXPECT(0x8783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8781));
        EXPECT(0x6d, gbc.readMem(0x8782));
        // CB 6D 027B
        gbc.setState(0x196b, 0x9887, 0x5dd0, 0x2b4c, 0x403d, 0xea79, 0x1, 0x1);
        gbc.writeMem(0x196b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9887, gbc.sp());
        EXPECT(0x196d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 027C
        gbc.setState(0xc30f, 0x98fb, 0x8930, 0xd901, 0x9ff9, 0x6b8c, 0x0, 0x0);
        gbc.writeMem(0xc30f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x98fb, gbc.sp());
        EXPECT(0xc311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc30f));
        EXPECT(0x6d, gbc.readMem(0xc310));
        // CB 6D 027D
        gbc.setState(0xc9c0, 0xb36, 0xc4a0, 0xe632, 0x6460, 0x9277, 0x1, 0x1);
        gbc.writeMem(0xc9c0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb36, gbc.sp());
        EXPECT(0xc9c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c0));
        EXPECT(0x6d, gbc.readMem(0xc9c1));
        // CB 6D 027E
        gbc.setState(0x9ce6, 0xe55b, 0x2fa0, 0x5cba, 0x23a7, 0x92d0, 0x1, 0x1);
        gbc.writeMem(0x9ce6, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe55b, gbc.sp());
        EXPECT(0x9ce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ce6));
        EXPECT(0x6d, gbc.readMem(0x9ce7));
        // CB 6D 027F
        gbc.setState(0x7f8b, 0xf03, 0x76f0, 0xd26f, 0xb8a3, 0x66b5, 0x0, 0x0);
        gbc.writeMem(0x7f8b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf03, gbc.sp());
        EXPECT(0x7f8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0280
        gbc.setState(0xee50, 0xc506, 0xf460, 0x6443, 0xd349, 0x5e03, 0x1, 0x1);
        gbc.writeMem(0xee50, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc506, gbc.sp());
        EXPECT(0xee52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee50));
        EXPECT(0x6d, gbc.readMem(0xee51));
        // CB 6D 0281
        gbc.setState(0xe016, 0x82, 0x52b0, 0x7735, 0x90c5, 0xfe28, 0x1, 0x0);
        gbc.writeMem(0xe016, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x82, gbc.sp());
        EXPECT(0xe018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe016));
        EXPECT(0x6d, gbc.readMem(0xe017));
        // CB 6D 0283
        gbc.setState(0xeb27, 0x96cb, 0xeed0, 0xf28e, 0xb5b3, 0xaae3, 0x0, 0x0);
        gbc.writeMem(0xeb27, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x96cb, gbc.sp());
        EXPECT(0xeb29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb27));
        EXPECT(0x6d, gbc.readMem(0xeb28));
        // CB 6D 0284
        gbc.setState(0xd6a9, 0x9f5b, 0x630, 0x72dc, 0x13b6, 0xcb52, 0x0, 0x1);
        gbc.writeMem(0xd6a9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9f5b, gbc.sp());
        EXPECT(0xd6ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6a9));
        EXPECT(0x6d, gbc.readMem(0xd6aa));
        // CB 6D 0285
        gbc.setState(0x4264, 0xd514, 0x300, 0x42f2, 0xe60e, 0xfb31, 0x0, 0x1);
        gbc.writeMem(0x4264, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd514, gbc.sp());
        EXPECT(0x4266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0286
        gbc.setState(0x910c, 0x6642, 0xe7a0, 0x6474, 0xad4c, 0xd4fc, 0x0, 0x0);
        gbc.writeMem(0x910c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6642, gbc.sp());
        EXPECT(0x910e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x910c));
        EXPECT(0x6d, gbc.readMem(0x910d));
        // CB 6D 0287
        gbc.setState(0x9e11, 0xc28a, 0x8840, 0x7d78, 0xcac6, 0x8dcb, 0x1, 0x0);
        gbc.writeMem(0x9e11, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc28a, gbc.sp());
        EXPECT(0x9e13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e11));
        EXPECT(0x6d, gbc.readMem(0x9e12));
        // CB 6D 0288
        gbc.setState(0x8968, 0x4b7e, 0xabc0, 0xb674, 0x9043, 0xf282, 0x1, 0x1);
        gbc.writeMem(0x8968, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4b7e, gbc.sp());
        EXPECT(0x896a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8968));
        EXPECT(0x6d, gbc.readMem(0x8969));
        // CB 6D 0289
        gbc.setState(0x9c03, 0x483b, 0x6e70, 0x44a4, 0x8bf0, 0xa9b8, 0x1, 0x0);
        gbc.writeMem(0x9c03, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x483b, gbc.sp());
        EXPECT(0x9c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c03));
        EXPECT(0x6d, gbc.readMem(0x9c04));
        // CB 6D 028A
        gbc.setState(0x46c7, 0x7274, 0x7210, 0xe44b, 0xa365, 0x6085, 0x0, 0x1);
        gbc.writeMem(0x46c7, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7274, gbc.sp());
        EXPECT(0x46c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 028C
        gbc.setState(0x11de, 0xe5fa, 0x2700, 0xe0f6, 0x2603, 0xcadf, 0x1, 0x0);
        gbc.writeMem(0x11de, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe5fa, gbc.sp());
        EXPECT(0x11e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 028D
        gbc.setState(0x8b64, 0x77f4, 0xf080, 0x7cfd, 0x6de9, 0x4153, 0x1, 0x0);
        gbc.writeMem(0x8b64, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x77f4, gbc.sp());
        EXPECT(0x8b66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b64));
        EXPECT(0x6d, gbc.readMem(0x8b65));
        // CB 6D 028F
        gbc.setState(0xe14f, 0x3084, 0xea20, 0xf319, 0x6a6a, 0xcbd9, 0x0, 0x0);
        gbc.writeMem(0xe14f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3084, gbc.sp());
        EXPECT(0xe151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe14f));
        EXPECT(0x6d, gbc.readMem(0xe150));
        // CB 6D 0290
        gbc.setState(0x4593, 0x5284, 0xec70, 0x2c1b, 0x71d4, 0xc2a3, 0x1, 0x0);
        gbc.writeMem(0x4593, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5284, gbc.sp());
        EXPECT(0x4595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0291
        gbc.setState(0xc8a7, 0x297a, 0xc250, 0x20cb, 0xc700, 0x52d5, 0x0, 0x1);
        gbc.writeMem(0xc8a7, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x297a, gbc.sp());
        EXPECT(0xc8a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a7));
        EXPECT(0x6d, gbc.readMem(0xc8a8));
        // CB 6D 0292
        gbc.setState(0x5701, 0xb27f, 0x6cf0, 0x88fe, 0x3ec9, 0x5c7, 0x0, 0x1);
        gbc.writeMem(0x5701, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb27f, gbc.sp());
        EXPECT(0x5703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0293
        gbc.setState(0x1c0, 0xf287, 0x9640, 0x48f, 0x24c1, 0x77f9, 0x1, 0x1);
        gbc.writeMem(0x1c0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf287, gbc.sp());
        EXPECT(0x1c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0294
        gbc.setState(0x44f6, 0xbf89, 0x5950, 0x4e64, 0x8ced, 0x3d3e, 0x1, 0x0);
        gbc.writeMem(0x44f6, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbf89, gbc.sp());
        EXPECT(0x44f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0295
        gbc.setState(0xda19, 0x1f16, 0x10f0, 0x307f, 0x4424, 0x5ff9, 0x1, 0x1);
        gbc.writeMem(0xda19, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1f16, gbc.sp());
        EXPECT(0xda1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda19));
        EXPECT(0x6d, gbc.readMem(0xda1a));
        // CB 6D 0296
        gbc.setState(0x2f5d, 0x4a4f, 0xe360, 0xe21, 0xb0ee, 0xea06, 0x1, 0x1);
        gbc.writeMem(0x2f5d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4a4f, gbc.sp());
        EXPECT(0x2f5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0298
        gbc.setState(0xbfed, 0x401b, 0xea80, 0xc693, 0xfd29, 0xcb34, 0x1, 0x0);
        gbc.writeMem(0xbfed, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x401b, gbc.sp());
        EXPECT(0xbfef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfed));
        EXPECT(0x6d, gbc.readMem(0xbfee));
        // CB 6D 0299
        gbc.setState(0x4462, 0x33e8, 0xe30, 0x5cc3, 0xf549, 0x65b3, 0x1, 0x1);
        gbc.writeMem(0x4462, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x33e8, gbc.sp());
        EXPECT(0x4464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 029A
        gbc.setState(0xceb, 0x7d52, 0xf000, 0x6554, 0x2536, 0xc166, 0x1, 0x0);
        gbc.writeMem(0xceb, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7d52, gbc.sp());
        EXPECT(0xced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 029B
        gbc.setState(0x30a7, 0x42f2, 0xc4c0, 0x4fba, 0x7d02, 0x1a0a, 0x1, 0x1);
        gbc.writeMem(0x30a7, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x42f2, gbc.sp());
        EXPECT(0x30a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 029C
        gbc.setState(0x981c, 0x8c46, 0xae20, 0xb9f7, 0xe8cc, 0x515, 0x0, 0x1);
        gbc.writeMem(0x981c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8c46, gbc.sp());
        EXPECT(0x981e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x981c));
        EXPECT(0x6d, gbc.readMem(0x981d));
        // CB 6D 029D
        gbc.setState(0x8888, 0xbb1, 0x3bc0, 0x25c0, 0xb808, 0x1523, 0x0, 0x0);
        gbc.writeMem(0x8888, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbb1, gbc.sp());
        EXPECT(0x888a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8888));
        EXPECT(0x6d, gbc.readMem(0x8889));
        // CB 6D 029E
        gbc.setState(0x7aae, 0x945d, 0x86d0, 0x2a9e, 0xe717, 0x62a0, 0x0, 0x0);
        gbc.writeMem(0x7aae, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x945d, gbc.sp());
        EXPECT(0x7ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 029F
        gbc.setState(0x5a68, 0x74f6, 0xd320, 0x7125, 0xa2ad, 0xaadc, 0x0, 0x1);
        gbc.writeMem(0x5a68, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x74f6, gbc.sp());
        EXPECT(0x5a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 02A0
        gbc.setState(0x7f36, 0xb251, 0xa9f0, 0xed27, 0x13b3, 0xfcad, 0x0, 0x1);
        gbc.writeMem(0x7f36, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb251, gbc.sp());
        EXPECT(0x7f38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02A1
        gbc.setState(0x60b2, 0x16e5, 0x3f90, 0x6b4a, 0xc5d2, 0x9fe9, 0x0, 0x1);
        gbc.writeMem(0x60b2, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x16e5, gbc.sp());
        EXPECT(0x60b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02A2
        gbc.setState(0x819, 0x2a6a, 0x8140, 0xd37d, 0xdb75, 0x7029, 0x0, 0x0);
        gbc.writeMem(0x819, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2a6a, gbc.sp());
        EXPECT(0x81b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 02A4
        gbc.setState(0xcd2e, 0xc763, 0x3de0, 0x148b, 0xccc3, 0x7614, 0x0, 0x0);
        gbc.writeMem(0xcd2e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc763, gbc.sp());
        EXPECT(0xcd30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd2e));
        EXPECT(0x6d, gbc.readMem(0xcd2f));
        // CB 6D 02A5
        gbc.setState(0x120a, 0x36da, 0x6610, 0xb0b4, 0x604f, 0x224f, 0x0, 0x0);
        gbc.writeMem(0x120a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x36da, gbc.sp());
        EXPECT(0x120c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02A6
        gbc.setState(0xc845, 0xcae6, 0xdf50, 0xf96a, 0xae14, 0xb71d, 0x1, 0x1);
        gbc.writeMem(0xc845, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcae6, gbc.sp());
        EXPECT(0xc847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc845));
        EXPECT(0x6d, gbc.readMem(0xc846));
        // CB 6D 02A7
        gbc.setState(0x5da5, 0x60db, 0x8210, 0x5799, 0x34da, 0x509a, 0x1, 0x0);
        gbc.writeMem(0x5da5, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x60db, gbc.sp());
        EXPECT(0x5da7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02A8
        gbc.setState(0x1c24, 0xba24, 0x5900, 0x87f7, 0x6def, 0xef37, 0x1, 0x1);
        gbc.writeMem(0x1c24, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xba24, gbc.sp());
        EXPECT(0x1c26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 02A9
        gbc.setState(0x549d, 0x4613, 0xc1c0, 0x5393, 0x5d21, 0xd6ba, 0x0, 0x1);
        gbc.writeMem(0x549d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4613, gbc.sp());
        EXPECT(0x549f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 02AA
        gbc.setState(0x34b5, 0x8694, 0xf790, 0x99d0, 0x48e5, 0x7ab9, 0x0, 0x0);
        gbc.writeMem(0x34b5, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8694, gbc.sp());
        EXPECT(0x34b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02AB
        gbc.setState(0x8da1, 0x8712, 0x3d90, 0xa0aa, 0x5f0e, 0xd51d, 0x0, 0x0);
        gbc.writeMem(0x8da1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8712, gbc.sp());
        EXPECT(0x8da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da1));
        EXPECT(0x6d, gbc.readMem(0x8da2));
        // CB 6D 02AC
        gbc.setState(0xe2e2, 0x8834, 0x3f30, 0x969b, 0x7800, 0xb274, 0x1, 0x0);
        gbc.writeMem(0xe2e2, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8834, gbc.sp());
        EXPECT(0xe2e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2e2));
        EXPECT(0x6d, gbc.readMem(0xe2e3));
        // CB 6D 02AD
        gbc.setState(0xc345, 0x332f, 0xd60, 0x6b42, 0x3515, 0xf3b8, 0x1, 0x1);
        gbc.writeMem(0xc345, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x332f, gbc.sp());
        EXPECT(0xc347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc345));
        EXPECT(0x6d, gbc.readMem(0xc346));
        // CB 6D 02AE
        gbc.setState(0x2a8b, 0x6ab6, 0xfa90, 0x1df0, 0xab00, 0xdea9, 0x1, 0x0);
        gbc.writeMem(0x2a8b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6ab6, gbc.sp());
        EXPECT(0x2a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02AF
        gbc.setState(0x9a55, 0xda78, 0x4b0, 0xd92f, 0xdc80, 0x82f, 0x1, 0x0);
        gbc.writeMem(0x9a55, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xda78, gbc.sp());
        EXPECT(0x9a57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a55));
        EXPECT(0x6d, gbc.readMem(0x9a56));
        // CB 6D 02B0
        gbc.setState(0x77da, 0x6a04, 0x2fe0, 0x7b26, 0xbd0b, 0x900a, 0x0, 0x1);
        gbc.writeMem(0x77da, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6a04, gbc.sp());
        EXPECT(0x77dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 02B1
        gbc.setState(0xcedc, 0x1db3, 0xae90, 0x1a6c, 0xe059, 0xc167, 0x1, 0x0);
        gbc.writeMem(0xcedc, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1db3, gbc.sp());
        EXPECT(0xcede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcedc));
        EXPECT(0x6d, gbc.readMem(0xcedd));
        // CB 6D 02B2
        gbc.setState(0x7e45, 0xccde, 0xa730, 0x9a56, 0x9a74, 0xfa59, 0x0, 0x0);
        gbc.writeMem(0x7e45, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xccde, gbc.sp());
        EXPECT(0x7e47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02B3
        gbc.setState(0xcf90, 0x9ebc, 0x4ab0, 0xf6dc, 0x5eee, 0xa5a6, 0x0, 0x0);
        gbc.writeMem(0xcf90, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9ebc, gbc.sp());
        EXPECT(0xcf92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf90));
        EXPECT(0x6d, gbc.readMem(0xcf91));
        // CB 6D 02B4
        gbc.setState(0xe16a, 0xfad8, 0x9230, 0xb992, 0x43ed, 0x52b2, 0x1, 0x0);
        gbc.writeMem(0xe16a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfad8, gbc.sp());
        EXPECT(0xe16c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe16a));
        EXPECT(0x6d, gbc.readMem(0xe16b));
        // CB 6D 02B6
        gbc.setState(0x9ca8, 0x8678, 0xe540, 0xf571, 0x68c5, 0x6965, 0x1, 0x0);
        gbc.writeMem(0x9ca8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8678, gbc.sp());
        EXPECT(0x9caa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca8));
        EXPECT(0x6d, gbc.readMem(0x9ca9));
        // CB 6D 02B7
        gbc.setState(0x5349, 0xd8b6, 0xa4f0, 0xfafe, 0x1b28, 0x6a6d, 0x0, 0x0);
        gbc.writeMem(0x5349, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd8b6, gbc.sp());
        EXPECT(0x534b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02B8
        gbc.setState(0x1cb4, 0x8fc9, 0xbe60, 0xfaf4, 0x1759, 0xf53e, 0x1, 0x1);
        gbc.writeMem(0x1cb4, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8fc9, gbc.sp());
        EXPECT(0x1cb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 02B9
        gbc.setState(0x8446, 0xcf47, 0xc470, 0xeac2, 0x29fb, 0xc05b, 0x0, 0x0);
        gbc.writeMem(0x8446, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xcf47, gbc.sp());
        EXPECT(0x8448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8446));
        EXPECT(0x6d, gbc.readMem(0x8447));
        // CB 6D 02BA
        gbc.setState(0xc464, 0x9de6, 0x3c20, 0x53a9, 0x2674, 0x3d8b, 0x1, 0x0);
        gbc.writeMem(0xc464, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9de6, gbc.sp());
        EXPECT(0xc466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc464));
        EXPECT(0x6d, gbc.readMem(0xc465));
        // CB 6D 02BB
        gbc.setState(0x5eb1, 0x97e6, 0x7050, 0xac0a, 0x5eba, 0x4422, 0x0, 0x1);
        gbc.writeMem(0x5eb1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x97e6, gbc.sp());
        EXPECT(0x5eb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02BC
        gbc.setState(0x5fd2, 0x48e1, 0x7df0, 0xe710, 0x68ca, 0x2ce, 0x1, 0x1);
        gbc.writeMem(0x5fd2, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x48e1, gbc.sp());
        EXPECT(0x5fd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02BD
        gbc.setState(0xac05, 0x1a13, 0xe990, 0xfda6, 0xf440, 0xf98d, 0x0, 0x1);
        gbc.writeMem(0xac05, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1a13, gbc.sp());
        EXPECT(0xac07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac05));
        EXPECT(0x6d, gbc.readMem(0xac06));
        // CB 6D 02BF
        gbc.setState(0xd79, 0x9620, 0x6910, 0x9e85, 0x6a0c, 0xd12a, 0x1, 0x1);
        gbc.writeMem(0xd79, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9620, gbc.sp());
        EXPECT(0xd7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02C0
        gbc.setState(0xc7b9, 0x291, 0x26f0, 0x1c83, 0x2ec5, 0x5b58, 0x0, 0x1);
        gbc.writeMem(0xc7b9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x291, gbc.sp());
        EXPECT(0xc7bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b9));
        EXPECT(0x6d, gbc.readMem(0xc7ba));
        // CB 6D 02C1
        gbc.setState(0xbada, 0x7c9f, 0xfc0, 0x578b, 0x9b1f, 0x859a, 0x0, 0x1);
        gbc.writeMem(0xbada, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7c9f, gbc.sp());
        EXPECT(0xbadc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbada));
        EXPECT(0x6d, gbc.readMem(0xbadb));
        // CB 6D 02C2
        gbc.setState(0x5639, 0x3fc7, 0xe50, 0x4586, 0x169c, 0xef10, 0x0, 0x1);
        gbc.writeMem(0x5639, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3fc7, gbc.sp());
        EXPECT(0x563b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02C3
        gbc.setState(0x73d, 0xbfce, 0x92b0, 0xc93d, 0x2fe, 0xbdfe, 0x0, 0x0);
        gbc.writeMem(0x73d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xbfce, gbc.sp());
        EXPECT(0x73f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02C4
        gbc.setState(0xad84, 0x816d, 0xfb10, 0xc28a, 0xf1a6, 0x7c30, 0x0, 0x0);
        gbc.writeMem(0xad84, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x816d, gbc.sp());
        EXPECT(0xad86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad84));
        EXPECT(0x6d, gbc.readMem(0xad85));
        // CB 6D 02C5
        gbc.setState(0x370f, 0x3888, 0x85c0, 0x2e7, 0xd307, 0x3fc0, 0x1, 0x0);
        gbc.writeMem(0x370f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3888, gbc.sp());
        EXPECT(0x3711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 02C6
        gbc.setState(0x6606, 0x86f4, 0x8750, 0xdeda, 0x8793, 0xfe3, 0x1, 0x0);
        gbc.writeMem(0x6606, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x86f4, gbc.sp());
        EXPECT(0x6608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02C7
        gbc.setState(0xa5fd, 0x7aad, 0x9c0, 0x9d6, 0xcf8b, 0xbebf, 0x0, 0x0);
        gbc.writeMem(0xa5fd, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7aad, gbc.sp());
        EXPECT(0xa5ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5fd));
        EXPECT(0x6d, gbc.readMem(0xa5fe));
        // CB 6D 02C8
        gbc.setState(0xcd05, 0x1799, 0xe890, 0x4592, 0xe13a, 0xa867, 0x0, 0x1);
        gbc.writeMem(0xcd05, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1799, gbc.sp());
        EXPECT(0xcd07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd05));
        EXPECT(0x6d, gbc.readMem(0xcd06));
        // CB 6D 02C9
        gbc.setState(0x4301, 0x962, 0x6830, 0xd143, 0x852d, 0x962b, 0x1, 0x0);
        gbc.writeMem(0x4301, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x962, gbc.sp());
        EXPECT(0x4303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02CA
        gbc.setState(0xbc56, 0xb775, 0xe190, 0x7b97, 0x9316, 0x8d6b, 0x1, 0x1);
        gbc.writeMem(0xbc56, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb775, gbc.sp());
        EXPECT(0xbc58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc56));
        EXPECT(0x6d, gbc.readMem(0xbc57));
        // CB 6D 02CC
        gbc.setState(0xcb7a, 0x20e6, 0xc480, 0x7eae, 0x7498, 0xf75e, 0x0, 0x0);
        gbc.writeMem(0xcb7a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x20e6, gbc.sp());
        EXPECT(0xcb7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb7a));
        EXPECT(0x6d, gbc.readMem(0xcb7b));
        // CB 6D 02CD
        gbc.setState(0xb306, 0x65, 0xf910, 0x3da4, 0xd422, 0x4e2c, 0x0, 0x0);
        gbc.writeMem(0xb306, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x65, gbc.sp());
        EXPECT(0xb308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb306));
        EXPECT(0x6d, gbc.readMem(0xb307));
        // CB 6D 02CE
        gbc.setState(0x7edf, 0x6cb6, 0x29a0, 0x3486, 0x98bf, 0x9f6d, 0x1, 0x0);
        gbc.writeMem(0x7edf, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6cb6, gbc.sp());
        EXPECT(0x7ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 02CF
        gbc.setState(0x922, 0x5dd3, 0xc450, 0x5e19, 0x30a2, 0x2745, 0x1, 0x0);
        gbc.writeMem(0x922, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5dd3, gbc.sp());
        EXPECT(0x924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02D0
        gbc.setState(0x8f03, 0xcf4b, 0xddf0, 0x69ef, 0xf92f, 0x1892, 0x0, 0x0);
        gbc.writeMem(0x8f03, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xcf4b, gbc.sp());
        EXPECT(0x8f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f03));
        EXPECT(0x6d, gbc.readMem(0x8f04));
        // CB 6D 02D1
        gbc.setState(0xa0a5, 0x129b, 0x7470, 0x6e01, 0xf727, 0x9e8b, 0x0, 0x1);
        gbc.writeMem(0xa0a5, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x129b, gbc.sp());
        EXPECT(0xa0a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a5));
        EXPECT(0x6d, gbc.readMem(0xa0a6));
        // CB 6D 02D2
        gbc.setState(0x2cef, 0x3e05, 0xc2d0, 0x8adf, 0xe160, 0x3bc1, 0x0, 0x0);
        gbc.writeMem(0x2cef, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3e05, gbc.sp());
        EXPECT(0x2cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02D3
        gbc.setState(0xdd4d, 0xbaee, 0xd2e0, 0x677c, 0xa01f, 0x3e07, 0x1, 0x0);
        gbc.writeMem(0xdd4d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbaee, gbc.sp());
        EXPECT(0xdd4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd4d));
        EXPECT(0x6d, gbc.readMem(0xdd4e));
        // CB 6D 02D4
        gbc.setState(0xa34b, 0x115, 0x8e30, 0xd5e8, 0xf9e3, 0xbe86, 0x0, 0x0);
        gbc.writeMem(0xa34b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x115, gbc.sp());
        EXPECT(0xa34d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa34b));
        EXPECT(0x6d, gbc.readMem(0xa34c));
        // CB 6D 02D5
        gbc.setState(0x5bfb, 0x1a2b, 0xef60, 0x7f48, 0xc63a, 0x6dfd, 0x1, 0x1);
        gbc.writeMem(0x5bfb, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1a2b, gbc.sp());
        EXPECT(0x5bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 02D6
        gbc.setState(0x24e0, 0xa0d0, 0x1420, 0xd1bb, 0xb749, 0x1db4, 0x1, 0x1);
        gbc.writeMem(0x24e0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa0d0, gbc.sp());
        EXPECT(0x24e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 02D7
        gbc.setState(0xec2e, 0xba4f, 0xcf10, 0x80ea, 0xe5b6, 0xd274, 0x1, 0x0);
        gbc.writeMem(0xec2e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xba4f, gbc.sp());
        EXPECT(0xec30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec2e));
        EXPECT(0x6d, gbc.readMem(0xec2f));
        // CB 6D 02D8
        gbc.setState(0x5d05, 0xce39, 0xc0d0, 0x7dc, 0x6371, 0xc7ee, 0x0, 0x1);
        gbc.writeMem(0x5d05, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xce39, gbc.sp());
        EXPECT(0x5d07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02D9
        gbc.setState(0x1694, 0x16cb, 0x6750, 0x8a16, 0x792b, 0x93e4, 0x1, 0x0);
        gbc.writeMem(0x1694, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x16cb, gbc.sp());
        EXPECT(0x1696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02DA
        gbc.setState(0x918f, 0x6c29, 0xcf90, 0x1337, 0xd72a, 0x1d7c, 0x0, 0x1);
        gbc.writeMem(0x918f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6c29, gbc.sp());
        EXPECT(0x9191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x918f));
        EXPECT(0x6d, gbc.readMem(0x9190));
        // CB 6D 02DB
        gbc.setState(0xee42, 0xbf26, 0xbd80, 0xa29b, 0x6da7, 0xd09f, 0x1, 0x0);
        gbc.writeMem(0xee42, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbf26, gbc.sp());
        EXPECT(0xee44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee42));
        EXPECT(0x6d, gbc.readMem(0xee43));
        // CB 6D 02DC
        gbc.setState(0x2dda, 0xb518, 0x8140, 0x2a96, 0x5c8d, 0xa2d4, 0x1, 0x1);
        gbc.writeMem(0x2dda, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb518, gbc.sp());
        EXPECT(0x2ddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 02DE
        gbc.setState(0x5524, 0xd9d, 0x5860, 0x676c, 0x3f7c, 0x5de1, 0x1, 0x0);
        gbc.writeMem(0x5524, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd9d, gbc.sp());
        EXPECT(0x5526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 02DF
        gbc.setState(0x6e16, 0xe9ef, 0x2230, 0x2b22, 0x4057, 0x34b8, 0x1, 0x0);
        gbc.writeMem(0x6e16, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe9ef, gbc.sp());
        EXPECT(0x6e18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02E0
        gbc.setState(0xbb78, 0xe70a, 0x8600, 0xa2f6, 0x4310, 0xe5c7, 0x0, 0x1);
        gbc.writeMem(0xbb78, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe70a, gbc.sp());
        EXPECT(0xbb7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb78));
        EXPECT(0x6d, gbc.readMem(0xbb79));
        // CB 6D 02E1
        gbc.setState(0xa059, 0x9eeb, 0x13a0, 0xbfe0, 0xc259, 0x311, 0x1, 0x1);
        gbc.writeMem(0xa059, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9eeb, gbc.sp());
        EXPECT(0xa05b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa059));
        EXPECT(0x6d, gbc.readMem(0xa05a));
        // CB 6D 02E2
        gbc.setState(0x4ecc, 0xdf4, 0x1bf0, 0xb19e, 0x2538, 0x9290, 0x0, 0x0);
        gbc.writeMem(0x4ecc, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdf4, gbc.sp());
        EXPECT(0x4ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02E3
        gbc.setState(0x155a, 0x971a, 0x2c50, 0xdaa6, 0x3d88, 0xca40, 0x1, 0x1);
        gbc.writeMem(0x155a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x971a, gbc.sp());
        EXPECT(0x155c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02E4
        gbc.setState(0xc74d, 0x7b8, 0xb020, 0x31cd, 0xad6f, 0x217, 0x1, 0x1);
        gbc.writeMem(0xc74d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7b8, gbc.sp());
        EXPECT(0xc74f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc74d));
        EXPECT(0x6d, gbc.readMem(0xc74e));
        // CB 6D 02E5
        gbc.setState(0x9903, 0xdbf5, 0xcec0, 0x2766, 0x32a5, 0x46a8, 0x0, 0x0);
        gbc.writeMem(0x9903, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdbf5, gbc.sp());
        EXPECT(0x9905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9903));
        EXPECT(0x6d, gbc.readMem(0x9904));
        // CB 6D 02E6
        gbc.setState(0xe49f, 0x70b9, 0x6630, 0x7072, 0x105f, 0x9f19, 0x0, 0x1);
        gbc.writeMem(0xe49f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x70b9, gbc.sp());
        EXPECT(0xe4a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe49f));
        EXPECT(0x6d, gbc.readMem(0xe4a0));
        // CB 6D 02E7
        gbc.setState(0x557, 0x5510, 0xc770, 0x687b, 0xc3c8, 0x7028, 0x1, 0x1);
        gbc.writeMem(0x557, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5510, gbc.sp());
        EXPECT(0x559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02E8
        gbc.setState(0x80af, 0x7ed4, 0xac70, 0x326a, 0x6be0, 0x68e1, 0x1, 0x0);
        gbc.writeMem(0x80af, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7ed4, gbc.sp());
        EXPECT(0x80b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80af));
        EXPECT(0x6d, gbc.readMem(0x80b0));
        // CB 6D 02E9
        gbc.setState(0x80c, 0xe097, 0xeb60, 0xdc16, 0xb875, 0xd347, 0x1, 0x0);
        gbc.writeMem(0x80c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe097, gbc.sp());
        EXPECT(0x80e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 02EA
        gbc.setState(0x5b6f, 0x2f36, 0xf4c0, 0xbbdd, 0xeace, 0x33f8, 0x0, 0x1);
        gbc.writeMem(0x5b6f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2f36, gbc.sp());
        EXPECT(0x5b71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 02EB
        gbc.setState(0x9acb, 0xacb6, 0xf0, 0xb72, 0x2a8, 0xa609, 0x1, 0x0);
        gbc.writeMem(0x9acb, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xacb6, gbc.sp());
        EXPECT(0x9acd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9acb));
        EXPECT(0x6d, gbc.readMem(0x9acc));
        // CB 6D 02ED
        gbc.setState(0x613c, 0x3b21, 0x7e40, 0x8041, 0x9088, 0x41bd, 0x1, 0x0);
        gbc.writeMem(0x613c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3b21, gbc.sp());
        EXPECT(0x613e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 02EE
        gbc.setState(0x1d93, 0x1c36, 0xe3d0, 0x7045, 0x5a8c, 0xef38, 0x1, 0x1);
        gbc.writeMem(0x1d93, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1c36, gbc.sp());
        EXPECT(0x1d95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02EF
        gbc.setState(0x677d, 0xaa77, 0xca90, 0x667b, 0x6eb2, 0xd65b, 0x1, 0x1);
        gbc.writeMem(0x677d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xaa77, gbc.sp());
        EXPECT(0x677f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02F0
        gbc.setState(0xd87d, 0x47dd, 0x7000, 0x5ae8, 0x64f6, 0x565b, 0x0, 0x1);
        gbc.writeMem(0xd87d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x47dd, gbc.sp());
        EXPECT(0xd87f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd87d));
        EXPECT(0x6d, gbc.readMem(0xd87e));
        // CB 6D 02F1
        gbc.setState(0x67a, 0x5893, 0x38d0, 0xf039, 0x9b9f, 0x5ed, 0x0, 0x1);
        gbc.writeMem(0x67a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5893, gbc.sp());
        EXPECT(0x67c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02F2
        gbc.setState(0x946, 0xa161, 0x2370, 0x68f8, 0x1723, 0x8f7, 0x0, 0x0);
        gbc.writeMem(0x946, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa161, gbc.sp());
        EXPECT(0x948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02F3
        gbc.setState(0x4110, 0x4885, 0xf1f0, 0x5cbf, 0x9fe3, 0x5ada, 0x1, 0x0);
        gbc.writeMem(0x4110, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4885, gbc.sp());
        EXPECT(0x4112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02F4
        gbc.setState(0x7dfa, 0x94c2, 0x4650, 0x6431, 0xb090, 0x2767, 0x0, 0x0);
        gbc.writeMem(0x7dfa, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x94c2, gbc.sp());
        EXPECT(0x7dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02F5
        gbc.setState(0x655c, 0x41a0, 0xf3c0, 0x35d0, 0xb056, 0xc8bf, 0x0, 0x1);
        gbc.writeMem(0x655c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x41a0, gbc.sp());
        EXPECT(0x655e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 02F6
        gbc.setState(0x8b1d, 0x4b9c, 0x5c40, 0x95ba, 0xeb32, 0x39cb, 0x1, 0x1);
        gbc.writeMem(0x8b1d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4b9c, gbc.sp());
        EXPECT(0x8b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b1d));
        EXPECT(0x6d, gbc.readMem(0x8b1e));
        // CB 6D 02F7
        gbc.setState(0xd668, 0x5ec8, 0x240, 0x6a12, 0x23fa, 0xd61, 0x0, 0x0);
        gbc.writeMem(0xd668, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5ec8, gbc.sp());
        EXPECT(0xd66a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd668));
        EXPECT(0x6d, gbc.readMem(0xd669));
        // CB 6D 02F8
        gbc.setState(0xb5c8, 0x8419, 0xd230, 0xbb3b, 0xfc8f, 0x3d0b, 0x0, 0x0);
        gbc.writeMem(0xb5c8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8419, gbc.sp());
        EXPECT(0xb5ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c8));
        EXPECT(0x6d, gbc.readMem(0xb5c9));
        // CB 6D 02F9
        gbc.setState(0x596a, 0x5742, 0xf2d0, 0x4413, 0xdb25, 0xddee, 0x1, 0x1);
        gbc.writeMem(0x596a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5742, gbc.sp());
        EXPECT(0x596c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 02FB
        gbc.setState(0xbd19, 0x4bd2, 0xf680, 0x156c, 0xfb44, 0x2aa8, 0x0, 0x0);
        gbc.writeMem(0xbd19, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4bd2, gbc.sp());
        EXPECT(0xbd1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd19));
        EXPECT(0x6d, gbc.readMem(0xbd1a));
        // CB 6D 02FC
        gbc.setState(0x55d8, 0x2cf6, 0x9bc0, 0x22a8, 0x70a7, 0x5111, 0x0, 0x1);
        gbc.writeMem(0x55d8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2cf6, gbc.sp());
        EXPECT(0x55da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 02FD
        gbc.setState(0xd9b2, 0xe5c5, 0x7010, 0x9e46, 0xf524, 0x95d1, 0x1, 0x1);
        gbc.writeMem(0xd9b2, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe5c5, gbc.sp());
        EXPECT(0xd9b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9b2));
        EXPECT(0x6d, gbc.readMem(0xd9b3));
        // CB 6D 02FE
        gbc.setState(0x8fd0, 0x5110, 0xe90, 0xb679, 0x3900, 0x409f, 0x0, 0x0);
        gbc.writeMem(0x8fd0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5110, gbc.sp());
        EXPECT(0x8fd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fd0));
        EXPECT(0x6d, gbc.readMem(0x8fd1));
        // CB 6D 02FF
        gbc.setState(0x7110, 0x2ff2, 0x4fb0, 0xc3ed, 0xc9ab, 0x62b9, 0x1, 0x1);
        gbc.writeMem(0x7110, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2ff2, gbc.sp());
        EXPECT(0x7112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0300
        gbc.setState(0x403f, 0xdde9, 0x2680, 0x1f88, 0xbcd9, 0x4980, 0x0, 0x0);
        gbc.writeMem(0x403f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdde9, gbc.sp());
        EXPECT(0x4041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0301
        gbc.setState(0xe1a7, 0x91db, 0x1140, 0x32f7, 0xf9e2, 0x3210, 0x0, 0x0);
        gbc.writeMem(0xe1a7, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x91db, gbc.sp());
        EXPECT(0xe1a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a7));
        EXPECT(0x6d, gbc.readMem(0xe1a8));
        // CB 6D 0302
        gbc.setState(0x7868, 0x26fd, 0x6a20, 0x1c8a, 0x1a6a, 0xc901, 0x0, 0x1);
        gbc.writeMem(0x7868, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x26fd, gbc.sp());
        EXPECT(0x786a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0303
        gbc.setState(0x5c1c, 0x5b4f, 0xc9b0, 0x3fff, 0xfca, 0x2c94, 0x0, 0x1);
        gbc.writeMem(0x5c1c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5b4f, gbc.sp());
        EXPECT(0x5c1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0305
        gbc.setState(0xbd78, 0xc0cc, 0x9cc0, 0x27e5, 0x37bd, 0x3f0, 0x1, 0x0);
        gbc.writeMem(0xbd78, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc0cc, gbc.sp());
        EXPECT(0xbd7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd78));
        EXPECT(0x6d, gbc.readMem(0xbd79));
        // CB 6D 0306
        gbc.setState(0xe344, 0xdbfd, 0x80f0, 0x780a, 0x5326, 0x270c, 0x1, 0x1);
        gbc.writeMem(0xe344, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xdbfd, gbc.sp());
        EXPECT(0xe346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe344));
        EXPECT(0x6d, gbc.readMem(0xe345));
        // CB 6D 0307
        gbc.setState(0x7b73, 0xc5d6, 0xf7f0, 0x2403, 0x678e, 0x97c3, 0x1, 0x0);
        gbc.writeMem(0x7b73, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc5d6, gbc.sp());
        EXPECT(0x7b75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0308
        gbc.setState(0xa830, 0x8729, 0x4350, 0xf0f6, 0x6a52, 0x5267, 0x0, 0x1);
        gbc.writeMem(0xa830, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8729, gbc.sp());
        EXPECT(0xa832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa830));
        EXPECT(0x6d, gbc.readMem(0xa831));
        // CB 6D 0309
        gbc.setState(0x86a6, 0xf7a1, 0x1580, 0x92aa, 0x1b03, 0xb74b, 0x0, 0x1);
        gbc.writeMem(0x86a6, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf7a1, gbc.sp());
        EXPECT(0x86a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86a6));
        EXPECT(0x6d, gbc.readMem(0x86a7));
        // CB 6D 030A
        gbc.setState(0x87c0, 0x3e59, 0x49a0, 0xae0e, 0x646f, 0x48b9, 0x0, 0x1);
        gbc.writeMem(0x87c0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3e59, gbc.sp());
        EXPECT(0x87c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87c0));
        EXPECT(0x6d, gbc.readMem(0x87c1));
        // CB 6D 030B
        gbc.setState(0x309b, 0x1735, 0x9d50, 0xee17, 0x3325, 0xed6c, 0x1, 0x0);
        gbc.writeMem(0x309b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1735, gbc.sp());
        EXPECT(0x309d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 030C
        gbc.setState(0x3049, 0x9350, 0xff60, 0x57c9, 0x4f1f, 0x659b, 0x1, 0x0);
        gbc.writeMem(0x3049, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9350, gbc.sp());
        EXPECT(0x304b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 030D
        gbc.setState(0x3b26, 0x8247, 0xe80, 0x276a, 0xd39f, 0xca27, 0x0, 0x1);
        gbc.writeMem(0x3b26, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8247, gbc.sp());
        EXPECT(0x3b28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 030E
        gbc.setState(0x5541, 0x2fcf, 0xebe0, 0x40a5, 0x8cc, 0x8072, 0x1, 0x1);
        gbc.writeMem(0x5541, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2fcf, gbc.sp());
        EXPECT(0x5543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 030F
        gbc.setState(0xcc78, 0x8205, 0xd40, 0x2261, 0x822c, 0x9047, 0x0, 0x0);
        gbc.writeMem(0xcc78, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8205, gbc.sp());
        EXPECT(0xcc7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc78));
        EXPECT(0x6d, gbc.readMem(0xcc79));
        // CB 6D 0310
        gbc.setState(0xc69f, 0x76a2, 0x6110, 0xb99e, 0xf7f5, 0x1f0f, 0x0, 0x1);
        gbc.writeMem(0xc69f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x76a2, gbc.sp());
        EXPECT(0xc6a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc69f));
        EXPECT(0x6d, gbc.readMem(0xc6a0));
        // CB 6D 0311
        gbc.setState(0x60f1, 0x87d6, 0xab60, 0x5f50, 0x697a, 0x951b, 0x0, 0x0);
        gbc.writeMem(0x60f1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x87d6, gbc.sp());
        EXPECT(0x60f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0312
        gbc.setState(0x8687, 0x1ec7, 0x2880, 0x4432, 0xb392, 0xee4d, 0x0, 0x1);
        gbc.writeMem(0x8687, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1ec7, gbc.sp());
        EXPECT(0x8689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8687));
        EXPECT(0x6d, gbc.readMem(0x8688));
        // CB 6D 0313
        gbc.setState(0x4fbb, 0x74bd, 0x26b0, 0xbd39, 0x6e74, 0x549a, 0x0, 0x0);
        gbc.writeMem(0x4fbb, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x74bd, gbc.sp());
        EXPECT(0x4fbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0314
        gbc.setState(0xce1f, 0x98e4, 0x4ca0, 0x19, 0x2f15, 0x6efb, 0x0, 0x0);
        gbc.writeMem(0xce1f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x98e4, gbc.sp());
        EXPECT(0xce21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce1f));
        EXPECT(0x6d, gbc.readMem(0xce20));
        // CB 6D 0315
        gbc.setState(0xe3da, 0xcce5, 0x860, 0x1787, 0x6ca9, 0x803c, 0x1, 0x0);
        gbc.writeMem(0xe3da, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xcce5, gbc.sp());
        EXPECT(0xe3dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3da));
        EXPECT(0x6d, gbc.readMem(0xe3db));
        // CB 6D 0316
        gbc.setState(0xdc7f, 0xee85, 0x41e0, 0xb59a, 0x2d9d, 0xdf36, 0x0, 0x1);
        gbc.writeMem(0xdc7f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xee85, gbc.sp());
        EXPECT(0xdc81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc7f));
        EXPECT(0x6d, gbc.readMem(0xdc80));
        // CB 6D 0317
        gbc.setState(0x667e, 0x643b, 0xc140, 0x10ca, 0xfba8, 0x11, 0x0, 0x0);
        gbc.writeMem(0x667e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x643b, gbc.sp());
        EXPECT(0x6680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0318
        gbc.setState(0xc782, 0x474d, 0x2aa0, 0xc996, 0xdbbe, 0xc6ca, 0x0, 0x1);
        gbc.writeMem(0xc782, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x474d, gbc.sp());
        EXPECT(0xc784, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc782));
        EXPECT(0x6d, gbc.readMem(0xc783));
        // CB 6D 0319
        gbc.setState(0xeb5a, 0x93ba, 0xf1b0, 0x6218, 0x50fd, 0x5b3a, 0x0, 0x0);
        gbc.writeMem(0xeb5a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x93ba, gbc.sp());
        EXPECT(0xeb5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb5a));
        EXPECT(0x6d, gbc.readMem(0xeb5b));
        // CB 6D 031A
        gbc.setState(0x9b72, 0x44d3, 0x1740, 0x2736, 0xcaf9, 0xf246, 0x0, 0x1);
        gbc.writeMem(0x9b72, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x44d3, gbc.sp());
        EXPECT(0x9b74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b72));
        EXPECT(0x6d, gbc.readMem(0x9b73));
        // CB 6D 031B
        gbc.setState(0x51d4, 0x4ca3, 0x5870, 0x80c3, 0x7347, 0xb557, 0x1, 0x0);
        gbc.writeMem(0x51d4, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4ca3, gbc.sp());
        EXPECT(0x51d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 031C
        gbc.setState(0x8428, 0x1620, 0xcf30, 0xab54, 0x1049, 0xb9a7, 0x0, 0x0);
        gbc.writeMem(0x8428, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1620, gbc.sp());
        EXPECT(0x842a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8428));
        EXPECT(0x6d, gbc.readMem(0x8429));
        // CB 6D 031D
        gbc.setState(0xb29, 0x69b5, 0xad80, 0x978d, 0xbeb3, 0x314b, 0x1, 0x1);
        gbc.writeMem(0xb29, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x69b5, gbc.sp());
        EXPECT(0xb2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 031E
        gbc.setState(0x2850, 0xa2c2, 0x53b0, 0x121f, 0xcbf6, 0x9cc7, 0x1, 0x0);
        gbc.writeMem(0x2850, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa2c2, gbc.sp());
        EXPECT(0x2852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 031F
        gbc.setState(0xa7f6, 0xba17, 0xe760, 0x181e, 0xc952, 0x810f, 0x0, 0x0);
        gbc.writeMem(0xa7f6, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xba17, gbc.sp());
        EXPECT(0xa7f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f6));
        EXPECT(0x6d, gbc.readMem(0xa7f7));
        // CB 6D 0320
        gbc.setState(0x82b7, 0x56c5, 0x7d10, 0x8d2a, 0xbc56, 0x3bde, 0x0, 0x0);
        gbc.writeMem(0x82b7, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x56c5, gbc.sp());
        EXPECT(0x82b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82b7));
        EXPECT(0x6d, gbc.readMem(0x82b8));
        // CB 6D 0321
        gbc.setState(0x80d4, 0xa21e, 0x3330, 0xcac4, 0x89bd, 0xd891, 0x1, 0x0);
        gbc.writeMem(0x80d4, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa21e, gbc.sp());
        EXPECT(0x80d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80d4));
        EXPECT(0x6d, gbc.readMem(0x80d5));
        // CB 6D 0322
        gbc.setState(0xd017, 0xec31, 0x7e40, 0x1143, 0x123a, 0xbb87, 0x1, 0x1);
        gbc.writeMem(0xd017, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xec31, gbc.sp());
        EXPECT(0xd019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd017));
        EXPECT(0x6d, gbc.readMem(0xd018));
        // CB 6D 0323
        gbc.setState(0xc553, 0x3540, 0x0, 0xffad, 0x497d, 0x18d5, 0x1, 0x1);
        gbc.writeMem(0xc553, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3540, gbc.sp());
        EXPECT(0xc555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc553));
        EXPECT(0x6d, gbc.readMem(0xc554));
        // CB 6D 0324
        gbc.setState(0x2e05, 0x88c0, 0xe120, 0x9957, 0x9c42, 0xae89, 0x0, 0x0);
        gbc.writeMem(0x2e05, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x88c0, gbc.sp());
        EXPECT(0x2e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0325
        gbc.setState(0xe81b, 0x4903, 0xbc70, 0xf55a, 0x319c, 0x2ef, 0x0, 0x0);
        gbc.writeMem(0xe81b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4903, gbc.sp());
        EXPECT(0xe81d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe81b));
        EXPECT(0x6d, gbc.readMem(0xe81c));
        // CB 6D 0326
        gbc.setState(0x3da8, 0x8853, 0xf6b0, 0xf35e, 0x2a5f, 0xb220, 0x0, 0x1);
        gbc.writeMem(0x3da8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8853, gbc.sp());
        EXPECT(0x3daa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0327
        gbc.setState(0x7f7a, 0x7b1, 0x7c50, 0x3895, 0xd924, 0xfa48, 0x1, 0x0);
        gbc.writeMem(0x7f7a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7b1, gbc.sp());
        EXPECT(0x7f7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0328
        gbc.setState(0xa834, 0xb368, 0x7db0, 0x83d3, 0xebe, 0x80df, 0x1, 0x0);
        gbc.writeMem(0xa834, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb368, gbc.sp());
        EXPECT(0xa836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa834));
        EXPECT(0x6d, gbc.readMem(0xa835));
        // CB 6D 0329
        gbc.setState(0x6687, 0xe7fb, 0xbca0, 0xbc3c, 0x50, 0xf284, 0x1, 0x0);
        gbc.writeMem(0x6687, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe7fb, gbc.sp());
        EXPECT(0x6689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 032A
        gbc.setState(0xa1ff, 0x12ac, 0x3910, 0x7a7c, 0xf772, 0xd5ee, 0x1, 0x0);
        gbc.writeMem(0xa1ff, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x12ac, gbc.sp());
        EXPECT(0xa201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ff));
        EXPECT(0x6d, gbc.readMem(0xa200));
        // CB 6D 032B
        gbc.setState(0x6adb, 0x159, 0xe7c0, 0x304, 0xee7e, 0xb54, 0x0, 0x0);
        gbc.writeMem(0x6adb, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x159, gbc.sp());
        EXPECT(0x6add, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 032C
        gbc.setState(0x1c71, 0x81f5, 0x2a80, 0x314d, 0x7e61, 0xd24b, 0x1, 0x1);
        gbc.writeMem(0x1c71, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x81f5, gbc.sp());
        EXPECT(0x1c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 032D
        gbc.setState(0xc019, 0x8672, 0x3af0, 0xb0e5, 0x8a8e, 0x209c, 0x1, 0x0);
        gbc.writeMem(0xc019, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8672, gbc.sp());
        EXPECT(0xc01b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc019));
        EXPECT(0x6d, gbc.readMem(0xc01a));
        // CB 6D 032E
        gbc.setState(0x1c17, 0xd6f1, 0x2e90, 0x88d0, 0x5519, 0x4e47, 0x0, 0x1);
        gbc.writeMem(0x1c17, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd6f1, gbc.sp());
        EXPECT(0x1c19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 032F
        gbc.setState(0xafff, 0x22d1, 0x4270, 0x6912, 0x6f1d, 0xa406, 0x0, 0x1);
        gbc.writeMem(0xafff, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x22d1, gbc.sp());
        EXPECT(0xb001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafff));
        EXPECT(0x6d, gbc.readMem(0xb000));
        // CB 6D 0330
        gbc.setState(0xaf6a, 0xd050, 0x4db0, 0xe329, 0xf3f9, 0xdbbd, 0x1, 0x0);
        gbc.writeMem(0xaf6a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd050, gbc.sp());
        EXPECT(0xaf6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6a));
        EXPECT(0x6d, gbc.readMem(0xaf6b));
        // CB 6D 0331
        gbc.setState(0x6cee, 0xb2a4, 0xc6f0, 0xe9a0, 0x8912, 0x82f5, 0x1, 0x1);
        gbc.writeMem(0x6cee, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb2a4, gbc.sp());
        EXPECT(0x6cf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0332
        gbc.setState(0xb925, 0xe989, 0x1db0, 0x1a04, 0xc51, 0x8971, 0x1, 0x1);
        gbc.writeMem(0xb925, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe989, gbc.sp());
        EXPECT(0xb927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb925));
        EXPECT(0x6d, gbc.readMem(0xb926));
        // CB 6D 0333
        gbc.setState(0x1cb, 0x55fe, 0xb0a0, 0x62bf, 0xfa3a, 0x93ae, 0x0, 0x0);
        gbc.writeMem(0x1cb, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x55fe, gbc.sp());
        EXPECT(0x1cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0334
        gbc.setState(0x5abc, 0xd0c6, 0xbd50, 0xe742, 0x9300, 0x674, 0x1, 0x0);
        gbc.writeMem(0x5abc, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd0c6, gbc.sp());
        EXPECT(0x5abe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0335
        gbc.setState(0x6704, 0x29ef, 0x80c0, 0x8912, 0x73a3, 0x86a8, 0x1, 0x0);
        gbc.writeMem(0x6704, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x29ef, gbc.sp());
        EXPECT(0x6706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0336
        gbc.setState(0xdbe7, 0x600a, 0xb170, 0x9159, 0xe52a, 0xeee5, 0x0, 0x0);
        gbc.writeMem(0xdbe7, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x600a, gbc.sp());
        EXPECT(0xdbe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe7));
        EXPECT(0x6d, gbc.readMem(0xdbe8));
        // CB 6D 0337
        gbc.setState(0x9d77, 0xd80a, 0x3c20, 0x97e9, 0x95c2, 0xfe36, 0x0, 0x0);
        gbc.writeMem(0x9d77, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd80a, gbc.sp());
        EXPECT(0x9d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d77));
        EXPECT(0x6d, gbc.readMem(0x9d78));
        // CB 6D 0339
        gbc.setState(0x5b29, 0x3e12, 0x54b0, 0x69bf, 0xd438, 0x7762, 0x0, 0x0);
        gbc.writeMem(0x5b29, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3e12, gbc.sp());
        EXPECT(0x5b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 033A
        gbc.setState(0x49f9, 0x653b, 0x32f0, 0xac5, 0xcf95, 0xbff5, 0x0, 0x1);
        gbc.writeMem(0x49f9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x653b, gbc.sp());
        EXPECT(0x49fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 033B
        gbc.setState(0x62bc, 0x3bd7, 0x7350, 0x8315, 0x874c, 0x7976, 0x1, 0x0);
        gbc.writeMem(0x62bc, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3bd7, gbc.sp());
        EXPECT(0x62be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 033C
        gbc.setState(0x2c9f, 0x882, 0x5160, 0x76fe, 0x9be6, 0x935f, 0x1, 0x1);
        gbc.writeMem(0x2c9f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x882, gbc.sp());
        EXPECT(0x2ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 033D
        gbc.setState(0x4472, 0x7083, 0xefa0, 0x8037, 0x2c30, 0x44ff, 0x0, 0x1);
        gbc.writeMem(0x4472, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7083, gbc.sp());
        EXPECT(0x4474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 033E
        gbc.setState(0x2974, 0xc5ec, 0xe410, 0xfec0, 0x1ae, 0x6262, 0x0, 0x1);
        gbc.writeMem(0x2974, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc5ec, gbc.sp());
        EXPECT(0x2976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 033F
        gbc.setState(0x3204, 0x47fd, 0xcec0, 0x1777, 0x4357, 0x76b5, 0x0, 0x0);
        gbc.writeMem(0x3204, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x47fd, gbc.sp());
        EXPECT(0x3206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0340
        gbc.setState(0x6ca1, 0x2f08, 0x1a90, 0x7f90, 0x9e16, 0xe9ff, 0x1, 0x0);
        gbc.writeMem(0x6ca1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2f08, gbc.sp());
        EXPECT(0x6ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0341
        gbc.setState(0x3d40, 0xf84f, 0xff20, 0x1c4e, 0xa14d, 0xd442, 0x1, 0x0);
        gbc.writeMem(0x3d40, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf84f, gbc.sp());
        EXPECT(0x3d42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0342
        gbc.setState(0xc863, 0xf9f9, 0xfb20, 0x4165, 0x90ec, 0xc0e, 0x1, 0x0);
        gbc.writeMem(0xc863, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf9f9, gbc.sp());
        EXPECT(0xc865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc863));
        EXPECT(0x6d, gbc.readMem(0xc864));
        // CB 6D 0343
        gbc.setState(0x53b9, 0xfae8, 0xa370, 0x78e2, 0x70d4, 0xa2a2, 0x1, 0x0);
        gbc.writeMem(0x53b9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfae8, gbc.sp());
        EXPECT(0x53bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0344
        gbc.setState(0x93e1, 0x7d82, 0x7f90, 0x21b0, 0xcd34, 0xa1ad, 0x1, 0x0);
        gbc.writeMem(0x93e1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7d82, gbc.sp());
        EXPECT(0x93e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e1));
        EXPECT(0x6d, gbc.readMem(0x93e2));
        // CB 6D 0345
        gbc.setState(0xdda2, 0xaf3c, 0x4d0, 0xfc6a, 0x7617, 0x995a, 0x0, 0x1);
        gbc.writeMem(0xdda2, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xaf3c, gbc.sp());
        EXPECT(0xdda4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdda2));
        EXPECT(0x6d, gbc.readMem(0xdda3));
        // CB 6D 0346
        gbc.setState(0xdec3, 0xd29f, 0xeaa0, 0x10aa, 0x2a12, 0xd01d, 0x1, 0x0);
        gbc.writeMem(0xdec3, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd29f, gbc.sp());
        EXPECT(0xdec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdec3));
        EXPECT(0x6d, gbc.readMem(0xdec4));
        // CB 6D 0347
        gbc.setState(0x71e9, 0xab3, 0x47b0, 0x8348, 0x9281, 0x66d2, 0x0, 0x0);
        gbc.writeMem(0x71e9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xab3, gbc.sp());
        EXPECT(0x71eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0348
        gbc.setState(0xeff5, 0xb43e, 0x1b50, 0xa0b0, 0xea12, 0xf405, 0x1, 0x0);
        gbc.writeMem(0xeff5, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb43e, gbc.sp());
        EXPECT(0xeff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeff5));
        EXPECT(0x6d, gbc.readMem(0xeff6));
        // CB 6D 0349
        gbc.setState(0x363b, 0xba44, 0x70c0, 0x9c26, 0xe774, 0xf174, 0x1, 0x1);
        gbc.writeMem(0x363b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xba44, gbc.sp());
        EXPECT(0x363d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 034A
        gbc.setState(0xaec9, 0xfed7, 0x8700, 0x50e4, 0x1154, 0xf084, 0x0, 0x1);
        gbc.writeMem(0xaec9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfed7, gbc.sp());
        EXPECT(0xaecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec9));
        EXPECT(0x6d, gbc.readMem(0xaeca));
        // CB 6D 034C
        gbc.setState(0xdabb, 0x721, 0xf7a0, 0xb02c, 0x4b36, 0xd205, 0x0, 0x0);
        gbc.writeMem(0xdabb, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x721, gbc.sp());
        EXPECT(0xdabd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdabb));
        EXPECT(0x6d, gbc.readMem(0xdabc));
        // CB 6D 034D
        gbc.setState(0x8b44, 0xdb44, 0x3900, 0x8c77, 0x3817, 0x5630, 0x0, 0x0);
        gbc.writeMem(0x8b44, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdb44, gbc.sp());
        EXPECT(0x8b46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b44));
        EXPECT(0x6d, gbc.readMem(0x8b45));
        // CB 6D 034E
        gbc.setState(0x1baa, 0x85e7, 0x11b0, 0x22d, 0x2fa4, 0xf348, 0x0, 0x1);
        gbc.writeMem(0x1baa, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x85e7, gbc.sp());
        EXPECT(0x1bac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 034F
        gbc.setState(0x8356, 0xf087, 0xd170, 0xbb28, 0xa234, 0x98db, 0x0, 0x1);
        gbc.writeMem(0x8356, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf087, gbc.sp());
        EXPECT(0x8358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8356));
        EXPECT(0x6d, gbc.readMem(0x8357));
        // CB 6D 0350
        gbc.setState(0x6489, 0x11a9, 0x5bd0, 0x6728, 0x92a3, 0x53d1, 0x0, 0x1);
        gbc.writeMem(0x6489, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x11a9, gbc.sp());
        EXPECT(0x648b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0351
        gbc.setState(0x74bd, 0x5e9a, 0x1b0, 0xab5b, 0x707f, 0xdec5, 0x0, 0x1);
        gbc.writeMem(0x74bd, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5e9a, gbc.sp());
        EXPECT(0x74bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0352
        gbc.setState(0x6358, 0x1ec0, 0x9e40, 0xd0d6, 0x578f, 0x8072, 0x1, 0x1);
        gbc.writeMem(0x6358, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1ec0, gbc.sp());
        EXPECT(0x635a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0353
        gbc.setState(0x5d60, 0x9737, 0xc2a0, 0xc68b, 0xd7a0, 0xb20, 0x0, 0x1);
        gbc.writeMem(0x5d60, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9737, gbc.sp());
        EXPECT(0x5d62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0354
        gbc.setState(0xc49c, 0x58d5, 0x30c0, 0xe8b1, 0xa413, 0xc45b, 0x0, 0x1);
        gbc.writeMem(0xc49c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x58d5, gbc.sp());
        EXPECT(0xc49e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc49c));
        EXPECT(0x6d, gbc.readMem(0xc49d));
        // CB 6D 0355
        gbc.setState(0x6a6c, 0xbf1a, 0x4350, 0x64c4, 0x5900, 0x1d5e, 0x1, 0x0);
        gbc.writeMem(0x6a6c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbf1a, gbc.sp());
        EXPECT(0x6a6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0356
        gbc.setState(0x3d1, 0xee10, 0x80b0, 0x6c7, 0xb36f, 0xeabe, 0x0, 0x0);
        gbc.writeMem(0x3d1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xee10, gbc.sp());
        EXPECT(0x3d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0357
        gbc.setState(0xa1ef, 0xba7, 0xb330, 0x1466, 0xb5c2, 0x5d40, 0x0, 0x1);
        gbc.writeMem(0xa1ef, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xba7, gbc.sp());
        EXPECT(0xa1f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ef));
        EXPECT(0x6d, gbc.readMem(0xa1f0));
        // CB 6D 0358
        gbc.setState(0x3f77, 0x4902, 0x73c0, 0x5754, 0xb8f0, 0xc2b4, 0x1, 0x0);
        gbc.writeMem(0x3f77, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4902, gbc.sp());
        EXPECT(0x3f79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0359
        gbc.setState(0xacc0, 0xf60c, 0x8470, 0x7aad, 0x120a, 0x1d9d, 0x1, 0x1);
        gbc.writeMem(0xacc0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf60c, gbc.sp());
        EXPECT(0xacc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc0));
        EXPECT(0x6d, gbc.readMem(0xacc1));
        // CB 6D 035A
        gbc.setState(0xe2b5, 0x8b53, 0x2d60, 0xa636, 0xac8f, 0xa683, 0x0, 0x0);
        gbc.writeMem(0xe2b5, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8b53, gbc.sp());
        EXPECT(0xe2b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b5));
        EXPECT(0x6d, gbc.readMem(0xe2b6));
        // CB 6D 035B
        gbc.setState(0x163, 0x17d1, 0xd160, 0xc2b7, 0x409e, 0xf593, 0x1, 0x1);
        gbc.writeMem(0x163, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x17d1, gbc.sp());
        EXPECT(0x165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 035C
        gbc.setState(0xc775, 0x309a, 0x8d50, 0x7418, 0x24a7, 0xd66c, 0x0, 0x0);
        gbc.writeMem(0xc775, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x309a, gbc.sp());
        EXPECT(0xc777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc775));
        EXPECT(0x6d, gbc.readMem(0xc776));
        // CB 6D 035D
        gbc.setState(0x86a4, 0x8c4e, 0x9d40, 0x9e89, 0xbf69, 0x2bde, 0x1, 0x0);
        gbc.writeMem(0x86a4, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8c4e, gbc.sp());
        EXPECT(0x86a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86a4));
        EXPECT(0x6d, gbc.readMem(0x86a5));
        // CB 6D 035E
        gbc.setState(0x8564, 0x16b0, 0xf100, 0xa4e5, 0x9f68, 0xdf2a, 0x0, 0x1);
        gbc.writeMem(0x8564, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x16b0, gbc.sp());
        EXPECT(0x8566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8564));
        EXPECT(0x6d, gbc.readMem(0x8565));
        // CB 6D 035F
        gbc.setState(0x7535, 0x3544, 0xe540, 0xdb11, 0xbb74, 0x419b, 0x0, 0x0);
        gbc.writeMem(0x7535, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3544, gbc.sp());
        EXPECT(0x7537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0360
        gbc.setState(0x5df9, 0x3c11, 0xed40, 0xb274, 0xfb1a, 0x70ea, 0x0, 0x1);
        gbc.writeMem(0x5df9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3c11, gbc.sp());
        EXPECT(0x5dfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0361
        gbc.setState(0x3bb7, 0xf70a, 0x4ee0, 0x86c7, 0xd00d, 0x6a67, 0x1, 0x1);
        gbc.writeMem(0x3bb7, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf70a, gbc.sp());
        EXPECT(0x3bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0362
        gbc.setState(0x82b8, 0xb041, 0xd210, 0x86d8, 0x886a, 0xe1c8, 0x1, 0x1);
        gbc.writeMem(0x82b8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb041, gbc.sp());
        EXPECT(0x82ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82b8));
        EXPECT(0x6d, gbc.readMem(0x82b9));
        // CB 6D 0363
        gbc.setState(0xdcb5, 0x763, 0x1bf0, 0x1e17, 0xe552, 0x637d, 0x0, 0x1);
        gbc.writeMem(0xdcb5, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x763, gbc.sp());
        EXPECT(0xdcb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb5));
        EXPECT(0x6d, gbc.readMem(0xdcb6));
        // CB 6D 0364
        gbc.setState(0x446, 0x7474, 0xcc0, 0xcf8d, 0xd6bd, 0x8ea9, 0x1, 0x0);
        gbc.writeMem(0x446, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7474, gbc.sp());
        EXPECT(0x448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0365
        gbc.setState(0xb357, 0xb193, 0xf9f0, 0x58ef, 0x5cd1, 0xa6f5, 0x1, 0x1);
        gbc.writeMem(0xb357, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb193, gbc.sp());
        EXPECT(0xb359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb357));
        EXPECT(0x6d, gbc.readMem(0xb358));
        // CB 6D 0366
        gbc.setState(0x5f0d, 0xe2e2, 0xa630, 0x7bf1, 0xfb83, 0xc94, 0x1, 0x1);
        gbc.writeMem(0x5f0d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe2e2, gbc.sp());
        EXPECT(0x5f0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0367
        gbc.setState(0x11b1, 0x8894, 0x5f20, 0xa9d4, 0xeb26, 0xccf9, 0x0, 0x0);
        gbc.writeMem(0x11b1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8894, gbc.sp());
        EXPECT(0x11b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0368
        gbc.setState(0x613f, 0xb83b, 0xfab0, 0x77f2, 0xae23, 0xb9c8, 0x1, 0x1);
        gbc.writeMem(0x613f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb83b, gbc.sp());
        EXPECT(0x6141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0369
        gbc.setState(0xce75, 0x28bd, 0xc890, 0xd865, 0xc764, 0xa908, 0x1, 0x1);
        gbc.writeMem(0xce75, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x28bd, gbc.sp());
        EXPECT(0xce77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce75));
        EXPECT(0x6d, gbc.readMem(0xce76));
        // CB 6D 036A
        gbc.setState(0x4be6, 0x91e5, 0x8c70, 0x703f, 0x60b0, 0x7a36, 0x1, 0x0);
        gbc.writeMem(0x4be6, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x91e5, gbc.sp());
        EXPECT(0x4be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 036B
        gbc.setState(0x898e, 0x9967, 0xd1d0, 0x45dd, 0xaec, 0x415b, 0x0, 0x1);
        gbc.writeMem(0x898e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9967, gbc.sp());
        EXPECT(0x8990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x898e));
        EXPECT(0x6d, gbc.readMem(0x898f));
        // CB 6D 036C
        gbc.setState(0x2a5c, 0x5308, 0x67a0, 0xd62f, 0xd379, 0x792a, 0x1, 0x1);
        gbc.writeMem(0x2a5c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5308, gbc.sp());
        EXPECT(0x2a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 036D
        gbc.setState(0xa7f0, 0x1ae, 0x5e60, 0x8e29, 0x4ee4, 0x86da, 0x1, 0x0);
        gbc.writeMem(0xa7f0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1ae, gbc.sp());
        EXPECT(0xa7f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f0));
        EXPECT(0x6d, gbc.readMem(0xa7f1));
        // CB 6D 036E
        gbc.setState(0xbc59, 0x95b0, 0x7220, 0xf45d, 0xb3f8, 0x7da4, 0x0, 0x0);
        gbc.writeMem(0xbc59, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x95b0, gbc.sp());
        EXPECT(0xbc5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc59));
        EXPECT(0x6d, gbc.readMem(0xbc5a));
        // CB 6D 0370
        gbc.setState(0xb422, 0x7fd4, 0x4c90, 0x3a68, 0xd4a, 0x5939, 0x1, 0x0);
        gbc.writeMem(0xb422, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7fd4, gbc.sp());
        EXPECT(0xb424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb422));
        EXPECT(0x6d, gbc.readMem(0xb423));
        // CB 6D 0371
        gbc.setState(0x721b, 0x6e2c, 0xf960, 0x3161, 0x379c, 0x8cd4, 0x0, 0x0);
        gbc.writeMem(0x721b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6e2c, gbc.sp());
        EXPECT(0x721d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0372
        gbc.setState(0x9eee, 0x6230, 0x54e0, 0x38d1, 0xf64a, 0x79d4, 0x1, 0x0);
        gbc.writeMem(0x9eee, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6230, gbc.sp());
        EXPECT(0x9ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eee));
        EXPECT(0x6d, gbc.readMem(0x9eef));
        // CB 6D 0373
        gbc.setState(0xb3bb, 0x1189, 0xf900, 0xf2e6, 0x3225, 0x2f3, 0x1, 0x0);
        gbc.writeMem(0xb3bb, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1189, gbc.sp());
        EXPECT(0xb3bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3bb));
        EXPECT(0x6d, gbc.readMem(0xb3bc));
        // CB 6D 0374
        gbc.setState(0x5e7a, 0x8f3, 0xd1d0, 0x3c1c, 0xd66f, 0x2f77, 0x1, 0x0);
        gbc.writeMem(0x5e7a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8f3, gbc.sp());
        EXPECT(0x5e7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0375
        gbc.setState(0xf1f, 0xb555, 0x2fe0, 0xe75, 0x5b64, 0x2485, 0x1, 0x1);
        gbc.writeMem(0xf1f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb555, gbc.sp());
        EXPECT(0xf21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0376
        gbc.setState(0xdea5, 0x9d21, 0x46a0, 0xe995, 0xa020, 0x5c9d, 0x0, 0x0);
        gbc.writeMem(0xdea5, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9d21, gbc.sp());
        EXPECT(0xdea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea5));
        EXPECT(0x6d, gbc.readMem(0xdea6));
        // CB 6D 0377
        gbc.setState(0xb42a, 0xc2d6, 0x1b20, 0x31cb, 0xa97f, 0x90a6, 0x1, 0x1);
        gbc.writeMem(0xb42a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc2d6, gbc.sp());
        EXPECT(0xb42c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb42a));
        EXPECT(0x6d, gbc.readMem(0xb42b));
        // CB 6D 0378
        gbc.setState(0x2c7e, 0xbb17, 0xecf0, 0xc27e, 0x6bcd, 0x36f8, 0x1, 0x0);
        gbc.writeMem(0x2c7e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbb17, gbc.sp());
        EXPECT(0x2c80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0379
        gbc.setState(0x6750, 0x66dc, 0x6710, 0xcd8e, 0xf454, 0x6484, 0x1, 0x0);
        gbc.writeMem(0x6750, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x66dc, gbc.sp());
        EXPECT(0x6752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 037A
        gbc.setState(0xa89c, 0x6814, 0x4bf0, 0x9d1b, 0x1dd1, 0xfbbf, 0x1, 0x0);
        gbc.writeMem(0xa89c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6814, gbc.sp());
        EXPECT(0xa89e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa89c));
        EXPECT(0x6d, gbc.readMem(0xa89d));
        // CB 6D 037C
        gbc.setState(0x4cd3, 0x3b58, 0x9330, 0xa28e, 0x407a, 0xc32e, 0x0, 0x1);
        gbc.writeMem(0x4cd3, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3b58, gbc.sp());
        EXPECT(0x4cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 037D
        gbc.setState(0x6ec7, 0xd9e5, 0x5fe0, 0x783a, 0xf99d, 0x22a8, 0x1, 0x1);
        gbc.writeMem(0x6ec7, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd9e5, gbc.sp());
        EXPECT(0x6ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 037E
        gbc.setState(0xab34, 0xd5eb, 0x2210, 0xf625, 0x9b9a, 0x3cbd, 0x0, 0x0);
        gbc.writeMem(0xab34, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd5eb, gbc.sp());
        EXPECT(0xab36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab34));
        EXPECT(0x6d, gbc.readMem(0xab35));
        // CB 6D 037F
        gbc.setState(0x9f45, 0x7a3b, 0x8200, 0x8cbb, 0xe79a, 0xc24f, 0x0, 0x0);
        gbc.writeMem(0x9f45, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7a3b, gbc.sp());
        EXPECT(0x9f47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f45));
        EXPECT(0x6d, gbc.readMem(0x9f46));
        // CB 6D 0380
        gbc.setState(0xa7dd, 0xc1a8, 0x51c0, 0x727b, 0x3d71, 0xb69e, 0x1, 0x1);
        gbc.writeMem(0xa7dd, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc1a8, gbc.sp());
        EXPECT(0xa7df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7dd));
        EXPECT(0x6d, gbc.readMem(0xa7de));
        // CB 6D 0381
        gbc.setState(0x5752, 0xb3b0, 0x3870, 0x7bc2, 0x5bce, 0xacaa, 0x0, 0x0);
        gbc.writeMem(0x5752, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb3b0, gbc.sp());
        EXPECT(0x5754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0382
        gbc.setState(0x8313, 0xafe3, 0x6410, 0xc45a, 0xd647, 0x1f97, 0x0, 0x0);
        gbc.writeMem(0x8313, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xafe3, gbc.sp());
        EXPECT(0x8315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8313));
        EXPECT(0x6d, gbc.readMem(0x8314));
        // CB 6D 0383
        gbc.setState(0xa763, 0x38ff, 0xbbe0, 0xc837, 0x99a0, 0x58eb, 0x0, 0x1);
        gbc.writeMem(0xa763, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x38ff, gbc.sp());
        EXPECT(0xa765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa763));
        EXPECT(0x6d, gbc.readMem(0xa764));
        // CB 6D 0384
        gbc.setState(0xea69, 0xe04f, 0x2ab0, 0x1f14, 0x3e82, 0xac56, 0x1, 0x0);
        gbc.writeMem(0xea69, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe04f, gbc.sp());
        EXPECT(0xea6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea69));
        EXPECT(0x6d, gbc.readMem(0xea6a));
        // CB 6D 0385
        gbc.setState(0x1df7, 0x44b5, 0xa170, 0x8d2, 0x6329, 0x16dd, 0x0, 0x0);
        gbc.writeMem(0x1df7, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x44b5, gbc.sp());
        EXPECT(0x1df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0386
        gbc.setState(0x9ea3, 0xc7b4, 0xfb0, 0x321c, 0x6e0c, 0xa077, 0x0, 0x1);
        gbc.writeMem(0x9ea3, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc7b4, gbc.sp());
        EXPECT(0x9ea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea3));
        EXPECT(0x6d, gbc.readMem(0x9ea4));
        // CB 6D 0387
        gbc.setState(0x379e, 0x9bf8, 0xb890, 0xaf66, 0x59c, 0xfd85, 0x1, 0x1);
        gbc.writeMem(0x379e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9bf8, gbc.sp());
        EXPECT(0x37a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0388
        gbc.setState(0xd114, 0xf439, 0x3ed0, 0x41c3, 0xbad, 0x982, 0x0, 0x0);
        gbc.writeMem(0xd114, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf439, gbc.sp());
        EXPECT(0xd116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd114));
        EXPECT(0x6d, gbc.readMem(0xd115));
        // CB 6D 038B
        gbc.setState(0x5f46, 0xcf94, 0x1560, 0xa17f, 0x4716, 0x6764, 0x0, 0x0);
        gbc.writeMem(0x5f46, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcf94, gbc.sp());
        EXPECT(0x5f48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 038C
        gbc.setState(0x1fba, 0x7adc, 0xbee0, 0xd71c, 0x2e40, 0x47de, 0x1, 0x0);
        gbc.writeMem(0x1fba, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7adc, gbc.sp());
        EXPECT(0x1fbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 038D
        gbc.setState(0xb5ab, 0xff0e, 0xc130, 0x6d02, 0x64cc, 0x6c27, 0x1, 0x1);
        gbc.writeMem(0xb5ab, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xff0e, gbc.sp());
        EXPECT(0xb5ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ab));
        EXPECT(0x6d, gbc.readMem(0xb5ac));
        // CB 6D 038E
        gbc.setState(0x7432, 0x4688, 0x5e20, 0x8340, 0x69a8, 0x2dee, 0x0, 0x1);
        gbc.writeMem(0x7432, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4688, gbc.sp());
        EXPECT(0x7434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 038F
        gbc.setState(0xa6e6, 0x7e52, 0xde20, 0x2b30, 0xd787, 0xf953, 0x0, 0x1);
        gbc.writeMem(0xa6e6, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7e52, gbc.sp());
        EXPECT(0xa6e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e6));
        EXPECT(0x6d, gbc.readMem(0xa6e7));
        // CB 6D 0390
        gbc.setState(0x2cc, 0x7e5, 0x5ce0, 0x3b1, 0x724, 0x31ad, 0x0, 0x1);
        gbc.writeMem(0x2cc, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7e5, gbc.sp());
        EXPECT(0x2ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0391
        gbc.setState(0x8860, 0xc661, 0x6cf0, 0x11c2, 0x5a03, 0x1b55, 0x0, 0x0);
        gbc.writeMem(0x8860, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc661, gbc.sp());
        EXPECT(0x8862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8860));
        EXPECT(0x6d, gbc.readMem(0x8861));
        // CB 6D 0392
        gbc.setState(0xebfc, 0xe0c7, 0xb320, 0x6307, 0xaf3c, 0x6cbc, 0x1, 0x0);
        gbc.writeMem(0xebfc, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe0c7, gbc.sp());
        EXPECT(0xebfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebfc));
        EXPECT(0x6d, gbc.readMem(0xebfd));
        // CB 6D 0393
        gbc.setState(0xeaa6, 0x2c60, 0x6270, 0x571d, 0x2324, 0x33dd, 0x0, 0x0);
        gbc.writeMem(0xeaa6, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2c60, gbc.sp());
        EXPECT(0xeaa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaa6));
        EXPECT(0x6d, gbc.readMem(0xeaa7));
        // CB 6D 0394
        gbc.setState(0x608c, 0x2253, 0x8880, 0x297a, 0x766d, 0x7fd5, 0x0, 0x0);
        gbc.writeMem(0x608c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2253, gbc.sp());
        EXPECT(0x608e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0395
        gbc.setState(0x225d, 0x35de, 0x2250, 0xfcc8, 0x285a, 0x78b1, 0x0, 0x0);
        gbc.writeMem(0x225d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x35de, gbc.sp());
        EXPECT(0x225f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0396
        gbc.setState(0x5422, 0x382c, 0xf6c0, 0x9b55, 0xac40, 0xd16a, 0x1, 0x0);
        gbc.writeMem(0x5422, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x382c, gbc.sp());
        EXPECT(0x5424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 0397
        gbc.setState(0x11c5, 0xba0c, 0xad0, 0xc833, 0x14fa, 0x3703, 0x0, 0x1);
        gbc.writeMem(0x11c5, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xba0c, gbc.sp());
        EXPECT(0x11c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 0398
        gbc.setState(0x8d7f, 0xb209, 0x500, 0x9159, 0xdd87, 0x5425, 0x0, 0x1);
        gbc.writeMem(0x8d7f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb209, gbc.sp());
        EXPECT(0x8d81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d7f));
        EXPECT(0x6d, gbc.readMem(0x8d80));
        // CB 6D 0399
        gbc.setState(0x1f87, 0x25fe, 0xc300, 0xad29, 0x19c9, 0xe82c, 0x0, 0x1);
        gbc.writeMem(0x1f87, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x25fe, gbc.sp());
        EXPECT(0x1f89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 039A
        gbc.setState(0x7d9c, 0xc92e, 0x36f0, 0xfeaa, 0x4b0b, 0x2ebc, 0x1, 0x1);
        gbc.writeMem(0x7d9c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc92e, gbc.sp());
        EXPECT(0x7d9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 039B
        gbc.setState(0x1f5f, 0x158d, 0x1130, 0x3ff3, 0xaa06, 0x666c, 0x1, 0x1);
        gbc.writeMem(0x1f5f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x158d, gbc.sp());
        EXPECT(0x1f61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 039C
        gbc.setState(0xc7f0, 0xb74f, 0xf5c0, 0xabc6, 0x5e2e, 0x589d, 0x0, 0x1);
        gbc.writeMem(0xc7f0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb74f, gbc.sp());
        EXPECT(0xc7f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7f0));
        EXPECT(0x6d, gbc.readMem(0xc7f1));
        // CB 6D 039D
        gbc.setState(0x437f, 0xa0c3, 0xd6c0, 0xe31b, 0x8a03, 0xa8e5, 0x1, 0x1);
        gbc.writeMem(0x437f, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa0c3, gbc.sp());
        EXPECT(0x4381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 039E
        gbc.setState(0x4901, 0x9c29, 0xfb0, 0xfb34, 0xed8, 0x820c, 0x0, 0x0);
        gbc.writeMem(0x4901, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9c29, gbc.sp());
        EXPECT(0x4903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 039F
        gbc.setState(0x79ec, 0xfc9, 0x1b10, 0x1b06, 0xc996, 0xcc8c, 0x1, 0x0);
        gbc.writeMem(0x79ec, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xfc9, gbc.sp());
        EXPECT(0x79ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 03A0
        gbc.setState(0x2b73, 0x4b78, 0xae0, 0x579b, 0x1362, 0xba1e, 0x1, 0x0);
        gbc.writeMem(0x2b73, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4b78, gbc.sp());
        EXPECT(0x2b75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 03A1
        gbc.setState(0xc102, 0xbd1f, 0x1080, 0x2d93, 0x7adf, 0x67f8, 0x0, 0x0);
        gbc.writeMem(0xc102, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbd1f, gbc.sp());
        EXPECT(0xc104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc102));
        EXPECT(0x6d, gbc.readMem(0xc103));
        // CB 6D 03A3
        gbc.setState(0xd91c, 0x482a, 0xc270, 0x6368, 0x757a, 0x7ec8, 0x1, 0x1);
        gbc.writeMem(0xd91c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x482a, gbc.sp());
        EXPECT(0xd91e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd91c));
        EXPECT(0x6d, gbc.readMem(0xd91d));
        // CB 6D 03A4
        gbc.setState(0xc789, 0x7b7b, 0x48d0, 0xd7ed, 0x11da, 0x6ff2, 0x0, 0x1);
        gbc.writeMem(0xc789, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7b7b, gbc.sp());
        EXPECT(0xc78b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc789));
        EXPECT(0x6d, gbc.readMem(0xc78a));
        // CB 6D 03A5
        gbc.setState(0x7288, 0x493a, 0x1a80, 0x7d6f, 0xb492, 0xb861, 0x1, 0x1);
        gbc.writeMem(0x7288, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x493a, gbc.sp());
        EXPECT(0x728a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 03A6
        gbc.setState(0xbf28, 0x60a2, 0xe220, 0xa7ce, 0xe429, 0x5a7, 0x1, 0x0);
        gbc.writeMem(0xbf28, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x60a2, gbc.sp());
        EXPECT(0xbf2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf28));
        EXPECT(0x6d, gbc.readMem(0xbf29));
        // CB 6D 03A7
        gbc.setState(0x7083, 0xa1f2, 0xf810, 0xf713, 0x879, 0xd1a1, 0x1, 0x0);
        gbc.writeMem(0x7083, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa1f2, gbc.sp());
        EXPECT(0x7085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 03A8
        gbc.setState(0x1e4c, 0x9d50, 0xe350, 0xb2c4, 0x6c36, 0x10bc, 0x0, 0x1);
        gbc.writeMem(0x1e4c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9d50, gbc.sp());
        EXPECT(0x1e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 03A9
        gbc.setState(0xa3d9, 0x4b5d, 0x4070, 0xbf6d, 0xbb3c, 0xded2, 0x0, 0x0);
        gbc.writeMem(0xa3d9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4b5d, gbc.sp());
        EXPECT(0xa3db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3d9));
        EXPECT(0x6d, gbc.readMem(0xa3da));
        // CB 6D 03AA
        gbc.setState(0x81d0, 0xf581, 0xa320, 0xc984, 0xc838, 0xed0f, 0x1, 0x0);
        gbc.writeMem(0x81d0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf581, gbc.sp());
        EXPECT(0x81d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81d0));
        EXPECT(0x6d, gbc.readMem(0x81d1));
        // CB 6D 03AB
        gbc.setState(0xcb33, 0xcb73, 0x6830, 0x79aa, 0x53c1, 0xfb9a, 0x0, 0x0);
        gbc.writeMem(0xcb33, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xcb73, gbc.sp());
        EXPECT(0xcb35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb33));
        EXPECT(0x6d, gbc.readMem(0xcb34));
        // CB 6D 03AC
        gbc.setState(0x4fe8, 0xf29c, 0xc290, 0xe4b, 0xc879, 0x74a9, 0x0, 0x0);
        gbc.writeMem(0x4fe8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf29c, gbc.sp());
        EXPECT(0x4fea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 03AD
        gbc.setState(0xe1b9, 0x8029, 0x8800, 0x7f74, 0x21b, 0xa737, 0x0, 0x1);
        gbc.writeMem(0xe1b9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8029, gbc.sp());
        EXPECT(0xe1bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1b9));
        EXPECT(0x6d, gbc.readMem(0xe1ba));
        // CB 6D 03AE
        gbc.setState(0xd506, 0x1447, 0xf220, 0x725d, 0x283a, 0x48a2, 0x0, 0x1);
        gbc.writeMem(0xd506, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1447, gbc.sp());
        EXPECT(0xd508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd506));
        EXPECT(0x6d, gbc.readMem(0xd507));
        // CB 6D 03AF
        gbc.setState(0x304b, 0x7c4b, 0xf0, 0x17b6, 0xc641, 0x5d2e, 0x0, 0x0);
        gbc.writeMem(0x304b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7c4b, gbc.sp());
        EXPECT(0x304d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 03B0
        gbc.setState(0x46e8, 0x22d6, 0x9840, 0xbe4a, 0x9f2c, 0x6dcc, 0x1, 0x1);
        gbc.writeMem(0x46e8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x22d6, gbc.sp());
        EXPECT(0x46ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 03B1
        gbc.setState(0x7935, 0x462b, 0x4f60, 0xa3e7, 0xfde8, 0xa67b, 0x1, 0x0);
        gbc.writeMem(0x7935, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x462b, gbc.sp());
        EXPECT(0x7937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 03B2
        gbc.setState(0x7dd5, 0x1b3, 0x2a10, 0xeb37, 0x472, 0xba4a, 0x0, 0x0);
        gbc.writeMem(0x7dd5, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1b3, gbc.sp());
        EXPECT(0x7dd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 03B3
        gbc.setState(0x2ab3, 0xfc90, 0x8580, 0x56fb, 0x4f73, 0x44e6, 0x0, 0x1);
        gbc.writeMem(0x2ab3, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfc90, gbc.sp());
        EXPECT(0x2ab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 03B4
        gbc.setState(0x5b96, 0x64c8, 0xce30, 0x752f, 0xa38b, 0x8d3f, 0x1, 0x1);
        gbc.writeMem(0x5b96, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x64c8, gbc.sp());
        EXPECT(0x5b98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 03B5
        gbc.setState(0xb3d5, 0xd371, 0x3ed0, 0x1ca4, 0x9659, 0xe851, 0x0, 0x1);
        gbc.writeMem(0xb3d5, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd371, gbc.sp());
        EXPECT(0xb3d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d5));
        EXPECT(0x6d, gbc.readMem(0xb3d6));
        // CB 6D 03B6
        gbc.setState(0x2fb3, 0xda5f, 0x1920, 0xf99b, 0x7d47, 0xdc26, 0x1, 0x0);
        gbc.writeMem(0x2fb3, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xda5f, gbc.sp());
        EXPECT(0x2fb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 03B7
        gbc.setState(0x6fc5, 0x53ae, 0x6c90, 0xa3ce, 0x779e, 0xc14f, 0x0, 0x1);
        gbc.writeMem(0x6fc5, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x53ae, gbc.sp());
        EXPECT(0x6fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 03B8
        gbc.setState(0x879c, 0x6bd, 0xa7a0, 0x4f67, 0x6762, 0x3bab, 0x0, 0x0);
        gbc.writeMem(0x879c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6bd, gbc.sp());
        EXPECT(0x879e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x879c));
        EXPECT(0x6d, gbc.readMem(0x879d));
        // CB 6D 03B9
        gbc.setState(0xaf0, 0x5564, 0x5a30, 0x2afa, 0x3dd2, 0xe9dd, 0x0, 0x0);
        gbc.writeMem(0xaf0, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5564, gbc.sp());
        EXPECT(0xaf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 03BA
        gbc.setState(0x5859, 0xf18f, 0x4a90, 0x374a, 0xe9ad, 0xf090, 0x1, 0x1);
        gbc.writeMem(0x5859, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf18f, gbc.sp());
        EXPECT(0x585b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 03BB
        gbc.setState(0x7c4d, 0xf1c7, 0x61b0, 0xf0e1, 0x33, 0x10d2, 0x1, 0x1);
        gbc.writeMem(0x7c4d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf1c7, gbc.sp());
        EXPECT(0x7c4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 03BC
        gbc.setState(0x2df2, 0x113f, 0x8900, 0xfb69, 0xf4f7, 0x947c, 0x1, 0x0);
        gbc.writeMem(0x2df2, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x113f, gbc.sp());
        EXPECT(0x2df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 03BD
        gbc.setState(0xcba8, 0x2b11, 0x52e0, 0x15ef, 0x9402, 0x9eed, 0x0, 0x0);
        gbc.writeMem(0xcba8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2b11, gbc.sp());
        EXPECT(0xcbaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba8));
        EXPECT(0x6d, gbc.readMem(0xcba9));
        // CB 6D 03BE
        gbc.setState(0x71ca, 0xbd93, 0x71e0, 0xbcd1, 0xab7b, 0x1a35, 0x1, 0x0);
        gbc.writeMem(0x71ca, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbd93, gbc.sp());
        EXPECT(0x71cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 03BF
        gbc.setState(0x2aa9, 0xf9c4, 0x3510, 0x618d, 0x57c3, 0xc69b, 0x1, 0x1);
        gbc.writeMem(0x2aa9, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf9c4, gbc.sp());
        EXPECT(0x2aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 03C0
        gbc.setState(0x802c, 0x4b9d, 0xe40, 0x88d, 0xc59b, 0xc576, 0x1, 0x0);
        gbc.writeMem(0x802c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4b9d, gbc.sp());
        EXPECT(0x802e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x802c));
        EXPECT(0x6d, gbc.readMem(0x802d));
        // CB 6D 03C1
        gbc.setState(0x6b00, 0x3ca5, 0x4520, 0x3127, 0xdf49, 0x1973, 0x0, 0x1);
        gbc.writeMem(0x6b00, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3ca5, gbc.sp());
        EXPECT(0x6b02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 03C2
        gbc.setState(0xdb6b, 0x4557, 0x99e0, 0x1bb2, 0xcb2a, 0xf8c1, 0x1, 0x1);
        gbc.writeMem(0xdb6b, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4557, gbc.sp());
        EXPECT(0xdb6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb6b));
        EXPECT(0x6d, gbc.readMem(0xdb6c));
        // CB 6D 03C3
        gbc.setState(0xd296, 0xfcb4, 0x80, 0xa910, 0x8e3e, 0x263c, 0x1, 0x1);
        gbc.writeMem(0xd296, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfcb4, gbc.sp());
        EXPECT(0xd298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd296));
        EXPECT(0x6d, gbc.readMem(0xd297));
        // CB 6D 03C4
        gbc.setState(0x826e, 0xe3af, 0xb430, 0x3232, 0xb351, 0x8c94, 0x1, 0x1);
        gbc.writeMem(0x826e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe3af, gbc.sp());
        EXPECT(0x8270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x826e));
        EXPECT(0x6d, gbc.readMem(0x826f));
        // CB 6D 03C5
        gbc.setState(0x557a, 0xf1b6, 0x6420, 0xde32, 0x5093, 0xdf48, 0x0, 0x0);
        gbc.writeMem(0x557a, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf1b6, gbc.sp());
        EXPECT(0x557c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 03C6
        gbc.setState(0x892, 0x93ac, 0xcfa0, 0x92aa, 0x7a37, 0xe7, 0x0, 0x0);
        gbc.writeMem(0x892, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x93ac, gbc.sp());
        EXPECT(0x894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 03C7
        gbc.setState(0xa696, 0xcf61, 0x8470, 0xc474, 0xf7f8, 0xd344, 0x0, 0x0);
        gbc.writeMem(0xa696, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcf61, gbc.sp());
        EXPECT(0xa698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa696));
        EXPECT(0x6d, gbc.readMem(0xa697));
        // CB 6D 03C9
        gbc.setState(0x1e79, 0x6363, 0x5710, 0x7e18, 0x9d49, 0x996b, 0x1, 0x1);
        gbc.writeMem(0x1e79, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6363, gbc.sp());
        EXPECT(0x1e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 03CA
        gbc.setState(0x7ba2, 0xd58c, 0x3f70, 0x51e6, 0xd68a, 0x1450, 0x0, 0x0);
        gbc.writeMem(0x7ba2, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd58c, gbc.sp());
        EXPECT(0x7ba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 03CB
        gbc.setState(0x5dce, 0x45b7, 0x4f30, 0x7d46, 0xaf07, 0xf703, 0x0, 0x1);
        gbc.writeMem(0x5dce, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x45b7, gbc.sp());
        EXPECT(0x5dd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 03CC
        gbc.setState(0x4b63, 0x8e74, 0x7670, 0xb9df, 0x8942, 0x8163, 0x1, 0x1);
        gbc.writeMem(0x4b63, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8e74, gbc.sp());
        EXPECT(0x4b65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 03CD
        gbc.setState(0xc8e, 0xa9b7, 0x6bb0, 0xed4e, 0x519a, 0x7c8f, 0x1, 0x1);
        gbc.writeMem(0xc8e, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa9b7, gbc.sp());
        EXPECT(0xc90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 03CE
        gbc.setState(0x3df1, 0xf038, 0xf600, 0xbd93, 0xf2a5, 0x79e3, 0x0, 0x1);
        gbc.writeMem(0x3df1, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf038, gbc.sp());
        EXPECT(0x3df3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 03CF
        gbc.setState(0xa147, 0x251, 0xa3a0, 0xf07, 0x28bf, 0xca01, 0x1, 0x1);
        gbc.writeMem(0xa147, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x251, gbc.sp());
        EXPECT(0xa149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa147));
        EXPECT(0x6d, gbc.readMem(0xa148));
        // CB 6D 03D0
        gbc.setState(0xa417, 0x941d, 0xfe20, 0xc4a3, 0xb0e4, 0x1776, 0x1, 0x0);
        gbc.writeMem(0xa417, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x941d, gbc.sp());
        EXPECT(0xa419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa417));
        EXPECT(0x6d, gbc.readMem(0xa418));
        // CB 6D 03D1
        gbc.setState(0xb460, 0xfdd3, 0x6a70, 0xd942, 0xfd03, 0x4c40, 0x0, 0x0);
        gbc.writeMem(0xb460, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfdd3, gbc.sp());
        EXPECT(0xb462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb460));
        EXPECT(0x6d, gbc.readMem(0xb461));
        // CB 6D 03D2
        gbc.setState(0x3f90, 0xcc49, 0x5180, 0xcd40, 0xf42a, 0xdcb, 0x0, 0x1);
        gbc.writeMem(0x3f90, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcc49, gbc.sp());
        EXPECT(0x3f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 03D3
        gbc.setState(0x9946, 0x19fb, 0xbff0, 0x6511, 0x2f36, 0xec7d, 0x0, 0x0);
        gbc.writeMem(0x9946, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x19fb, gbc.sp());
        EXPECT(0x9948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9946));
        EXPECT(0x6d, gbc.readMem(0x9947));
        // CB 6D 03D4
        gbc.setState(0x1ad4, 0x5d02, 0x3350, 0xd7e2, 0x1115, 0x7aa, 0x1, 0x0);
        gbc.writeMem(0x1ad4, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5d02, gbc.sp());
        EXPECT(0x1ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 03D5
        gbc.setState(0x15c5, 0xa78, 0x7800, 0x527c, 0xf0e9, 0xfa7f, 0x0, 0x0);
        gbc.writeMem(0x15c5, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa78, gbc.sp());
        EXPECT(0x15c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 03D6
        gbc.setState(0x417, 0x36f7, 0x7260, 0x3412, 0xc8f0, 0xef35, 0x0, 0x1);
        gbc.writeMem(0x417, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x36f7, gbc.sp());
        EXPECT(0x419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 03D7
        gbc.setState(0x5db8, 0x39b4, 0xccc0, 0x3190, 0xd672, 0x5b55, 0x1, 0x1);
        gbc.writeMem(0x5db8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x39b4, gbc.sp());
        EXPECT(0x5dba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 03D8
        gbc.setState(0xd920, 0xcbc8, 0xf040, 0x6cff, 0xe7b4, 0xd32a, 0x0, 0x0);
        gbc.writeMem(0xd920, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xcbc8, gbc.sp());
        EXPECT(0xd922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd920));
        EXPECT(0x6d, gbc.readMem(0xd921));
        // CB 6D 03D9
        gbc.setState(0xa5d2, 0xe4fe, 0x3670, 0x75ca, 0x155c, 0x6a64, 0x1, 0x1);
        gbc.writeMem(0xa5d2, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe4fe, gbc.sp());
        EXPECT(0xa5d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d2));
        EXPECT(0x6d, gbc.readMem(0xa5d3));
        // CB 6D 03DA
        gbc.setState(0xd130, 0xb1a8, 0xb770, 0xff54, 0xf6df, 0x7276, 0x1, 0x1);
        gbc.writeMem(0xd130, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb1a8, gbc.sp());
        EXPECT(0xd132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd130));
        EXPECT(0x6d, gbc.readMem(0xd131));
        // CB 6D 03DC
        gbc.setState(0x8925, 0xd9ce, 0x6e20, 0xf02b, 0x511, 0xd4cc, 0x1, 0x0);
        gbc.writeMem(0x8925, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd9ce, gbc.sp());
        EXPECT(0x8927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8925));
        EXPECT(0x6d, gbc.readMem(0x8926));
        // CB 6D 03DD
        gbc.setState(0xc550, 0x5d73, 0xc570, 0xd1e6, 0xe153, 0xe430, 0x1, 0x1);
        gbc.writeMem(0xc550, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5d73, gbc.sp());
        EXPECT(0xc552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc550));
        EXPECT(0x6d, gbc.readMem(0xc551));
        // CB 6D 03DE
        gbc.setState(0x35c8, 0x9cf5, 0x9280, 0x314e, 0x349b, 0x77ad, 0x1, 0x1);
        gbc.writeMem(0x35c8, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9cf5, gbc.sp());
        EXPECT(0x35ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 03DF
        gbc.setState(0x5fc3, 0x91, 0x9f10, 0xf673, 0x77ef, 0x2fc5, 0x0, 0x1);
        gbc.writeMem(0x5fc3, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x91, gbc.sp());
        EXPECT(0x5fc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 03E1
        gbc.setState(0x7f31, 0xa3b1, 0xde30, 0x7392, 0x34a2, 0x7674, 0x1, 0x1);
        gbc.writeMem(0x7f31, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa3b1, gbc.sp());
        EXPECT(0x7f33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 03E2
        gbc.setState(0x80ac, 0x1f37, 0x2d10, 0xf0ad, 0x6ddf, 0xbb71, 0x1, 0x0);
        gbc.writeMem(0x80ac, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1f37, gbc.sp());
        EXPECT(0x80ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ac));
        EXPECT(0x6d, gbc.readMem(0x80ad));
        // CB 6D 03E3
        gbc.setState(0x7978, 0x1b4f, 0xeb90, 0x6580, 0x8994, 0x4a92, 0x0, 0x1);
        gbc.writeMem(0x7978, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1b4f, gbc.sp());
        EXPECT(0x797a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6D 03E4
        gbc.setState(0x635c, 0x5232, 0xdac0, 0x4940, 0x56dc, 0x9e81, 0x0, 0x1);
        gbc.writeMem(0x635c, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5232, gbc.sp());
        EXPECT(0x635e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6D 03E5
        gbc.setState(0xdcab, 0xa290, 0x55a0, 0xbb98, 0x476a, 0x84b5, 0x1, 0x0);
        gbc.writeMem(0xdcab, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa290, gbc.sp());
        EXPECT(0xdcad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcab));
        EXPECT(0x6d, gbc.readMem(0xdcac));
        // CB 6D 03E6
        gbc.setState(0xd382, 0xf7c9, 0x2930, 0x20a3, 0x27d5, 0x373b, 0x0, 0x1);
        gbc.writeMem(0xd382, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf7c9, gbc.sp());
        EXPECT(0xd384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd382));
        EXPECT(0x6d, gbc.readMem(0xd383));
        // CB 6D 03E7
        gbc.setState(0x546d, 0x6548, 0xa7f0, 0x8aa8, 0x5046, 0x16f7, 0x1, 0x0);
        gbc.writeMem(0x546d, { 0xcb, 0x6d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6548, gbc.sp());
        EXPECT(0x546f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
