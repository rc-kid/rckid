    TEST(gbcemu, opcode_cb_49) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 49 0000
        gbc.setState(0x2b54, 0x821c, 0x3bc0, 0x601c, 0x2b1e, 0xfdfd, 0x1, 0x0);
        gbc.writeMem(0x2b54, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x821c, gbc.sp());
        EXPECT(0x2b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0001
        gbc.setState(0x75b7, 0x4bcf, 0x6670, 0xe780, 0x77ba, 0xac6e, 0x0, 0x0);
        gbc.writeMem(0x75b7, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4bcf, gbc.sp());
        EXPECT(0x75b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0002
        gbc.setState(0xd10c, 0x6e1d, 0xa640, 0x2175, 0x4522, 0x649d, 0x0, 0x1);
        gbc.writeMem(0xd10c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6e1d, gbc.sp());
        EXPECT(0xd10e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd10c));
        EXPECT(0x49, gbc.readMem(0xd10d));
        // CB 49 0003
        gbc.setState(0xcb03, 0xafb3, 0x6e0, 0x53a5, 0x77e, 0x92dc, 0x1, 0x0);
        gbc.writeMem(0xcb03, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xafb3, gbc.sp());
        EXPECT(0xcb05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb03));
        EXPECT(0x49, gbc.readMem(0xcb04));
        // CB 49 0005
        gbc.setState(0x369e, 0x4cd9, 0x30e0, 0xc912, 0x7612, 0x2816, 0x1, 0x0);
        gbc.writeMem(0x369e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4cd9, gbc.sp());
        EXPECT(0x36a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0006
        gbc.setState(0x1902, 0xab44, 0x3f60, 0xe58e, 0xb32f, 0xdf29, 0x0, 0x0);
        gbc.writeMem(0x1902, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xab44, gbc.sp());
        EXPECT(0x1904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0007
        gbc.setState(0x7d4, 0x9623, 0xcf60, 0xf633, 0x8868, 0xc8ae, 0x0, 0x1);
        gbc.writeMem(0x7d4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9623, gbc.sp());
        EXPECT(0x7d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0008
        gbc.setState(0x396f, 0xf5ff, 0x4d30, 0x6578, 0x21dc, 0x7e63, 0x0, 0x0);
        gbc.writeMem(0x396f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf5ff, gbc.sp());
        EXPECT(0x3971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0009
        gbc.setState(0xc566, 0x5d03, 0xded0, 0x90ab, 0xadd, 0xda1b, 0x0, 0x1);
        gbc.writeMem(0xc566, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5d03, gbc.sp());
        EXPECT(0xc568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc566));
        EXPECT(0x49, gbc.readMem(0xc567));
        // CB 49 000A
        gbc.setState(0x5cf5, 0xc923, 0xcf10, 0x309a, 0xcffc, 0x818d, 0x1, 0x1);
        gbc.writeMem(0x5cf5, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc923, gbc.sp());
        EXPECT(0x5cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 000B
        gbc.setState(0x7442, 0x8f3b, 0x61f0, 0xb497, 0xb4c2, 0x37b5, 0x0, 0x1);
        gbc.writeMem(0x7442, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8f3b, gbc.sp());
        EXPECT(0x7444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 000C
        gbc.setState(0xde46, 0x97a6, 0xa180, 0x8f60, 0x3be4, 0x6ca6, 0x1, 0x1);
        gbc.writeMem(0xde46, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x97a6, gbc.sp());
        EXPECT(0xde48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde46));
        EXPECT(0x49, gbc.readMem(0xde47));
        // CB 49 000D
        gbc.setState(0xa3ad, 0xe7d1, 0x7420, 0x9420, 0x7c95, 0x7aa2, 0x1, 0x1);
        gbc.writeMem(0xa3ad, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe7d1, gbc.sp());
        EXPECT(0xa3af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ad));
        EXPECT(0x49, gbc.readMem(0xa3ae));
        // CB 49 000E
        gbc.setState(0x85c4, 0xe488, 0xcbf0, 0x1ae8, 0x6710, 0x657e, 0x1, 0x1);
        gbc.writeMem(0x85c4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe488, gbc.sp());
        EXPECT(0x85c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c4));
        EXPECT(0x49, gbc.readMem(0x85c5));
        // CB 49 000F
        gbc.setState(0x65c2, 0x69c1, 0xc940, 0x2bb6, 0x9404, 0xa0be, 0x0, 0x1);
        gbc.writeMem(0x65c2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x69c1, gbc.sp());
        EXPECT(0x65c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0010
        gbc.setState(0xe040, 0xfb27, 0x4100, 0x512f, 0x8ffe, 0x20a5, 0x1, 0x0);
        gbc.writeMem(0xe040, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfb27, gbc.sp());
        EXPECT(0xe042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe040));
        EXPECT(0x49, gbc.readMem(0xe041));
        // CB 49 0011
        gbc.setState(0x4230, 0x71f8, 0x1c30, 0x6263, 0x9520, 0x6bf6, 0x0, 0x0);
        gbc.writeMem(0x4230, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x71f8, gbc.sp());
        EXPECT(0x4232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0012
        gbc.setState(0x6e8c, 0xcdc2, 0x5f30, 0xd6b8, 0xb5ca, 0xa306, 0x1, 0x0);
        gbc.writeMem(0x6e8c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xcdc2, gbc.sp());
        EXPECT(0x6e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0013
        gbc.setState(0x4940, 0x426f, 0x90c0, 0x3075, 0xcde8, 0x3373, 0x1, 0x1);
        gbc.writeMem(0x4940, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x426f, gbc.sp());
        EXPECT(0x4942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0014
        gbc.setState(0x9f49, 0xdb70, 0xb4e0, 0x97ff, 0x11e7, 0x636b, 0x0, 0x0);
        gbc.writeMem(0x9f49, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xdb70, gbc.sp());
        EXPECT(0x9f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f49));
        EXPECT(0x49, gbc.readMem(0x9f4a));
        // CB 49 0015
        gbc.setState(0xc7bf, 0xef88, 0x77a0, 0x9f64, 0x84b6, 0x2236, 0x0, 0x1);
        gbc.writeMem(0xc7bf, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xef88, gbc.sp());
        EXPECT(0xc7c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7bf));
        EXPECT(0x49, gbc.readMem(0xc7c0));
        // CB 49 0016
        gbc.setState(0x76e8, 0x4a94, 0xb200, 0xfa8b, 0xe586, 0x8e5d, 0x1, 0x1);
        gbc.writeMem(0x76e8, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4a94, gbc.sp());
        EXPECT(0x76ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0017
        gbc.setState(0x4551, 0xcac1, 0x4b70, 0x4c4, 0x3bbc, 0x7d85, 0x1, 0x0);
        gbc.writeMem(0x4551, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xcac1, gbc.sp());
        EXPECT(0x4553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0018
        gbc.setState(0x8738, 0xb0f2, 0x1380, 0xeca4, 0x1d68, 0xb13a, 0x1, 0x0);
        gbc.writeMem(0x8738, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb0f2, gbc.sp());
        EXPECT(0x873a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8738));
        EXPECT(0x49, gbc.readMem(0x8739));
        // CB 49 0019
        gbc.setState(0xd8d7, 0xd501, 0x8ef0, 0xc010, 0x9b9f, 0x37e0, 0x1, 0x1);
        gbc.writeMem(0xd8d7, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd501, gbc.sp());
        EXPECT(0xd8d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8d7));
        EXPECT(0x49, gbc.readMem(0xd8d8));
        // CB 49 001A
        gbc.setState(0xeec0, 0xfc6, 0x3e0, 0xb014, 0xb2d6, 0xc437, 0x1, 0x1);
        gbc.writeMem(0xeec0, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfc6, gbc.sp());
        EXPECT(0xeec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeec0));
        EXPECT(0x49, gbc.readMem(0xeec1));
        // CB 49 001B
        gbc.setState(0x7374, 0x78e1, 0xf150, 0x8317, 0xc5ed, 0x919b, 0x1, 0x0);
        gbc.writeMem(0x7374, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x78e1, gbc.sp());
        EXPECT(0x7376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 001C
        gbc.setState(0xc30b, 0x782e, 0xe8b0, 0xb5b9, 0xa69f, 0xc2c7, 0x0, 0x1);
        gbc.writeMem(0xc30b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x782e, gbc.sp());
        EXPECT(0xc30d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc30b));
        EXPECT(0x49, gbc.readMem(0xc30c));
        // CB 49 001D
        gbc.setState(0x33c, 0x83d6, 0xef30, 0x8fe7, 0xf38b, 0x80a2, 0x0, 0x0);
        gbc.writeMem(0x33c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x83d6, gbc.sp());
        EXPECT(0x33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 001E
        gbc.setState(0x4d42, 0xdfa4, 0xafe0, 0x1fe3, 0xffa3, 0xed6f, 0x0, 0x0);
        gbc.writeMem(0x4d42, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xdfa4, gbc.sp());
        EXPECT(0x4d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 001F
        gbc.setState(0x717b, 0x8705, 0x1a90, 0x31a2, 0xfd02, 0xb5a9, 0x0, 0x0);
        gbc.writeMem(0x717b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8705, gbc.sp());
        EXPECT(0x717d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0020
        gbc.setState(0x49ea, 0x5b4a, 0x61e0, 0xa3d7, 0x5f04, 0xc0f4, 0x0, 0x1);
        gbc.writeMem(0x49ea, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5b4a, gbc.sp());
        EXPECT(0x49ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0021
        gbc.setState(0x8231, 0x2ee, 0xb7c0, 0x3819, 0xadbf, 0x88eb, 0x0, 0x0);
        gbc.writeMem(0x8231, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2ee, gbc.sp());
        EXPECT(0x8233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8231));
        EXPECT(0x49, gbc.readMem(0x8232));
        // CB 49 0023
        gbc.setState(0xdac8, 0x5bf8, 0x5e60, 0xec5d, 0x7578, 0x9ae3, 0x1, 0x1);
        gbc.writeMem(0xdac8, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5bf8, gbc.sp());
        EXPECT(0xdaca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac8));
        EXPECT(0x49, gbc.readMem(0xdac9));
        // CB 49 0024
        gbc.setState(0xab0e, 0xd60c, 0x80c0, 0x5cb, 0x8a79, 0x3147, 0x0, 0x0);
        gbc.writeMem(0xab0e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd60c, gbc.sp());
        EXPECT(0xab10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab0e));
        EXPECT(0x49, gbc.readMem(0xab0f));
        // CB 49 0025
        gbc.setState(0x4abe, 0x2360, 0x9510, 0xdc8f, 0xbee2, 0xca61, 0x1, 0x0);
        gbc.writeMem(0x4abe, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2360, gbc.sp());
        EXPECT(0x4ac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0026
        gbc.setState(0xc291, 0xf6c2, 0x1a00, 0xa00d, 0x5419, 0x44e7, 0x0, 0x1);
        gbc.writeMem(0xc291, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf6c2, gbc.sp());
        EXPECT(0xc293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc291));
        EXPECT(0x49, gbc.readMem(0xc292));
        // CB 49 0027
        gbc.setState(0xcfaa, 0xd3fa, 0x5990, 0x93ca, 0x907c, 0xa0d2, 0x0, 0x0);
        gbc.writeMem(0xcfaa, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd3fa, gbc.sp());
        EXPECT(0xcfac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfaa));
        EXPECT(0x49, gbc.readMem(0xcfab));
        // CB 49 0028
        gbc.setState(0xc63c, 0x57cd, 0x6230, 0xcdac, 0xb7b1, 0x4d04, 0x1, 0x1);
        gbc.writeMem(0xc63c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x57cd, gbc.sp());
        EXPECT(0xc63e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc63c));
        EXPECT(0x49, gbc.readMem(0xc63d));
        // CB 49 0029
        gbc.setState(0x5a5c, 0x4ac7, 0x8780, 0x5250, 0xa196, 0xe1a0, 0x1, 0x0);
        gbc.writeMem(0x5a5c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4ac7, gbc.sp());
        EXPECT(0x5a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 002A
        gbc.setState(0x3cfa, 0x7a68, 0xc090, 0x99fb, 0xbf3a, 0x20b9, 0x1, 0x1);
        gbc.writeMem(0x3cfa, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7a68, gbc.sp());
        EXPECT(0x3cfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 002B
        gbc.setState(0xe72c, 0xcbb1, 0x2ae0, 0x348b, 0xf785, 0x4717, 0x0, 0x1);
        gbc.writeMem(0xe72c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xcbb1, gbc.sp());
        EXPECT(0xe72e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe72c));
        EXPECT(0x49, gbc.readMem(0xe72d));
        // CB 49 002C
        gbc.setState(0xd20d, 0x4a07, 0xfa70, 0x5367, 0x57c1, 0xc13c, 0x0, 0x0);
        gbc.writeMem(0xd20d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4a07, gbc.sp());
        EXPECT(0xd20f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd20d));
        EXPECT(0x49, gbc.readMem(0xd20e));
        // CB 49 002D
        gbc.setState(0xb752, 0xb3f0, 0x3530, 0x2a0a, 0x9d84, 0xc7c1, 0x1, 0x0);
        gbc.writeMem(0xb752, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb3f0, gbc.sp());
        EXPECT(0xb754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb752));
        EXPECT(0x49, gbc.readMem(0xb753));
        // CB 49 002E
        gbc.setState(0x7f45, 0xa7ab, 0x1de0, 0xf1c4, 0xcd9f, 0x21a8, 0x0, 0x1);
        gbc.writeMem(0x7f45, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa7ab, gbc.sp());
        EXPECT(0x7f47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 002F
        gbc.setState(0xc44, 0xf3a6, 0x7610, 0xe60, 0x20e, 0x1840, 0x1, 0x0);
        gbc.writeMem(0xc44, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf3a6, gbc.sp());
        EXPECT(0xc46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0030
        gbc.setState(0xb1d3, 0xc1a3, 0x3460, 0x1b7d, 0x5559, 0x9d3, 0x0, 0x1);
        gbc.writeMem(0xb1d3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc1a3, gbc.sp());
        EXPECT(0xb1d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1d3));
        EXPECT(0x49, gbc.readMem(0xb1d4));
        // CB 49 0031
        gbc.setState(0x24fa, 0x584f, 0xf2e0, 0x27d7, 0x217f, 0x8c84, 0x0, 0x1);
        gbc.writeMem(0x24fa, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x584f, gbc.sp());
        EXPECT(0x24fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0032
        gbc.setState(0x6adb, 0x3050, 0xf8e0, 0x782c, 0x2323, 0xc385, 0x0, 0x1);
        gbc.writeMem(0x6adb, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3050, gbc.sp());
        EXPECT(0x6add, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0033
        gbc.setState(0x64, 0x97a, 0x9110, 0x8600, 0x4949, 0x28c2, 0x1, 0x1);
        gbc.writeMem(0x64, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x97a, gbc.sp());
        EXPECT(0x66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0034
        gbc.setState(0x90b4, 0xbb33, 0x7550, 0x6a9d, 0x5a26, 0x2b2c, 0x1, 0x0);
        gbc.writeMem(0x90b4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbb33, gbc.sp());
        EXPECT(0x90b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90b4));
        EXPECT(0x49, gbc.readMem(0x90b5));
        // CB 49 0035
        gbc.setState(0x6102, 0x7d04, 0x65e0, 0x234f, 0x91d1, 0x82f7, 0x1, 0x1);
        gbc.writeMem(0x6102, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7d04, gbc.sp());
        EXPECT(0x6104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0036
        gbc.setState(0x2ebd, 0x8db4, 0xfa00, 0x641, 0x255, 0x2c7e, 0x1, 0x0);
        gbc.writeMem(0x2ebd, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8db4, gbc.sp());
        EXPECT(0x2ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0037
        gbc.setState(0xc6bc, 0xd73b, 0x8bc0, 0xa72b, 0x5839, 0x77ad, 0x0, 0x0);
        gbc.writeMem(0xc6bc, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd73b, gbc.sp());
        EXPECT(0xc6be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6bc));
        EXPECT(0x49, gbc.readMem(0xc6bd));
        // CB 49 0038
        gbc.setState(0x7784, 0x997, 0xeb60, 0x9ab1, 0xd305, 0x19c2, 0x0, 0x0);
        gbc.writeMem(0x7784, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x997, gbc.sp());
        EXPECT(0x7786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0039
        gbc.setState(0x92f5, 0x466e, 0x9e10, 0xc775, 0x9e4e, 0x59b1, 0x0, 0x1);
        gbc.writeMem(0x92f5, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x466e, gbc.sp());
        EXPECT(0x92f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92f5));
        EXPECT(0x49, gbc.readMem(0x92f6));
        // CB 49 003B
        gbc.setState(0x5c4b, 0x28c0, 0xab0, 0x11b1, 0x80a, 0xd8a1, 0x0, 0x1);
        gbc.writeMem(0x5c4b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x28c0, gbc.sp());
        EXPECT(0x5c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 003C
        gbc.setState(0xc75a, 0x3238, 0x2650, 0x8b5d, 0x4914, 0x2b8, 0x1, 0x0);
        gbc.writeMem(0xc75a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3238, gbc.sp());
        EXPECT(0xc75c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc75a));
        EXPECT(0x49, gbc.readMem(0xc75b));
        // CB 49 003D
        gbc.setState(0x33d2, 0x381b, 0x6e90, 0x3666, 0xf929, 0x5b36, 0x0, 0x1);
        gbc.writeMem(0x33d2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x381b, gbc.sp());
        EXPECT(0x33d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 003E
        gbc.setState(0x3e99, 0x7a60, 0xf420, 0xde85, 0x8a24, 0x3e10, 0x1, 0x0);
        gbc.writeMem(0x3e99, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7a60, gbc.sp());
        EXPECT(0x3e9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 003F
        gbc.setState(0x7d7a, 0x1669, 0x7b70, 0x7a2d, 0x8230, 0xffe9, 0x1, 0x0);
        gbc.writeMem(0x7d7a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1669, gbc.sp());
        EXPECT(0x7d7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0040
        gbc.setState(0xef95, 0x153a, 0xd310, 0x91cc, 0x5baa, 0xb108, 0x0, 0x0);
        gbc.writeMem(0xef95, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x153a, gbc.sp());
        EXPECT(0xef97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef95));
        EXPECT(0x49, gbc.readMem(0xef96));
        // CB 49 0041
        gbc.setState(0x9a6f, 0xdd7c, 0xb60, 0xd38b, 0x7448, 0x6481, 0x0, 0x0);
        gbc.writeMem(0x9a6f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xdd7c, gbc.sp());
        EXPECT(0x9a71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a6f));
        EXPECT(0x49, gbc.readMem(0x9a70));
        // CB 49 0042
        gbc.setState(0xd0b0, 0x5f58, 0x62f0, 0x9325, 0xd5a5, 0xea8b, 0x1, 0x0);
        gbc.writeMem(0xd0b0, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5f58, gbc.sp());
        EXPECT(0xd0b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0b0));
        EXPECT(0x49, gbc.readMem(0xd0b1));
        // CB 49 0043
        gbc.setState(0xb9d, 0x3963, 0xa320, 0x935c, 0x5314, 0x6933, 0x1, 0x0);
        gbc.writeMem(0xb9d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3963, gbc.sp());
        EXPECT(0xb9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0044
        gbc.setState(0xecea, 0x1c70, 0x5180, 0xf4b0, 0xbafd, 0x815f, 0x1, 0x1);
        gbc.writeMem(0xecea, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1c70, gbc.sp());
        EXPECT(0xecec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecea));
        EXPECT(0x49, gbc.readMem(0xeceb));
        // CB 49 0045
        gbc.setState(0x492a, 0xa1cd, 0xb0d0, 0x703a, 0x9e5e, 0x6708, 0x0, 0x1);
        gbc.writeMem(0x492a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa1cd, gbc.sp());
        EXPECT(0x492c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0046
        gbc.setState(0x341d, 0xfa63, 0xe530, 0xd687, 0x65e5, 0x93ea, 0x1, 0x1);
        gbc.writeMem(0x341d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfa63, gbc.sp());
        EXPECT(0x341f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0047
        gbc.setState(0x79bc, 0xb1af, 0x5c30, 0xbc01, 0xf9c9, 0x5414, 0x1, 0x0);
        gbc.writeMem(0x79bc, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb1af, gbc.sp());
        EXPECT(0x79be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0048
        gbc.setState(0xcdb6, 0x7cc2, 0x57d0, 0x66bb, 0x37c4, 0xc49a, 0x0, 0x1);
        gbc.writeMem(0xcdb6, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7cc2, gbc.sp());
        EXPECT(0xcdb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb6));
        EXPECT(0x49, gbc.readMem(0xcdb7));
        // CB 49 0049
        gbc.setState(0xb4b, 0x5989, 0xd470, 0x6c39, 0x326e, 0x61b5, 0x0, 0x1);
        gbc.writeMem(0xb4b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5989, gbc.sp());
        EXPECT(0xb4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 004A
        gbc.setState(0xa80f, 0x802b, 0x2960, 0x3c16, 0xb40, 0xf477, 0x1, 0x0);
        gbc.writeMem(0xa80f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x802b, gbc.sp());
        EXPECT(0xa811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa80f));
        EXPECT(0x49, gbc.readMem(0xa810));
        // CB 49 004B
        gbc.setState(0x70b9, 0xf231, 0xd450, 0x114a, 0xa95a, 0x68a1, 0x0, 0x1);
        gbc.writeMem(0x70b9, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf231, gbc.sp());
        EXPECT(0x70bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 004C
        gbc.setState(0x5494, 0xa083, 0x3800, 0x98dd, 0x323e, 0x68d7, 0x1, 0x0);
        gbc.writeMem(0x5494, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa083, gbc.sp());
        EXPECT(0x5496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 004D
        gbc.setState(0x314b, 0x442a, 0x7b60, 0xa935, 0x641f, 0xc4be, 0x1, 0x1);
        gbc.writeMem(0x314b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x442a, gbc.sp());
        EXPECT(0x314d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 004E
        gbc.setState(0x61e9, 0xa0b9, 0xf720, 0x79a4, 0x9090, 0x4620, 0x0, 0x1);
        gbc.writeMem(0x61e9, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa0b9, gbc.sp());
        EXPECT(0x61eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 004F
        gbc.setState(0xabcf, 0xdf78, 0x1630, 0x724f, 0xf4f9, 0xa263, 0x0, 0x1);
        gbc.writeMem(0xabcf, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xdf78, gbc.sp());
        EXPECT(0xabd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabcf));
        EXPECT(0x49, gbc.readMem(0xabd0));
        // CB 49 0050
        gbc.setState(0xdc6c, 0x572c, 0x83d0, 0x4b48, 0x2b7c, 0x9d8a, 0x1, 0x0);
        gbc.writeMem(0xdc6c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x572c, gbc.sp());
        EXPECT(0xdc6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc6c));
        EXPECT(0x49, gbc.readMem(0xdc6d));
        // CB 49 0051
        gbc.setState(0x453a, 0xcdf0, 0xdf10, 0x813, 0xe8e1, 0x4f25, 0x1, 0x0);
        gbc.writeMem(0x453a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xcdf0, gbc.sp());
        EXPECT(0x453c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0052
        gbc.setState(0x5da8, 0xf7c4, 0xa3a0, 0xd6eb, 0x4d7b, 0x14c0, 0x1, 0x0);
        gbc.writeMem(0x5da8, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf7c4, gbc.sp());
        EXPECT(0x5daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0053
        gbc.setState(0x76d4, 0x4139, 0x1d50, 0xdf13, 0xb846, 0xedda, 0x1, 0x1);
        gbc.writeMem(0x76d4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4139, gbc.sp());
        EXPECT(0x76d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0054
        gbc.setState(0x84aa, 0xed9a, 0x63e0, 0xc907, 0x4f81, 0x467e, 0x0, 0x0);
        gbc.writeMem(0x84aa, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xed9a, gbc.sp());
        EXPECT(0x84ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84aa));
        EXPECT(0x49, gbc.readMem(0x84ab));
        // CB 49 0055
        gbc.setState(0xcfdf, 0x100c, 0x5c10, 0x7efc, 0x6eec, 0x2978, 0x1, 0x0);
        gbc.writeMem(0xcfdf, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x100c, gbc.sp());
        EXPECT(0xcfe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfdf));
        EXPECT(0x49, gbc.readMem(0xcfe0));
        // CB 49 0056
        gbc.setState(0x18e2, 0x6863, 0x4140, 0xa85c, 0xee8c, 0x20d0, 0x0, 0x0);
        gbc.writeMem(0x18e2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6863, gbc.sp());
        EXPECT(0x18e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0057
        gbc.setState(0xd4d, 0x6964, 0x17a0, 0xe3d5, 0x3490, 0x63e5, 0x1, 0x1);
        gbc.writeMem(0xd4d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6964, gbc.sp());
        EXPECT(0xd4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0058
        gbc.setState(0x4503, 0xffb, 0xe940, 0xd246, 0x440c, 0x40e7, 0x1, 0x0);
        gbc.writeMem(0x4503, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xffb, gbc.sp());
        EXPECT(0x4505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0059
        gbc.setState(0xb7ec, 0x9dd0, 0xfed0, 0xce95, 0x3b55, 0x7372, 0x0, 0x0);
        gbc.writeMem(0xb7ec, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9dd0, gbc.sp());
        EXPECT(0xb7ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ec));
        EXPECT(0x49, gbc.readMem(0xb7ed));
        // CB 49 005A
        gbc.setState(0xbe7c, 0xf753, 0x97e0, 0x1ca9, 0x23b4, 0x8c26, 0x1, 0x1);
        gbc.writeMem(0xbe7c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf753, gbc.sp());
        EXPECT(0xbe7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe7c));
        EXPECT(0x49, gbc.readMem(0xbe7d));
        // CB 49 005B
        gbc.setState(0xe85e, 0x86a, 0x2e20, 0x5b1, 0xe719, 0xa7f5, 0x1, 0x1);
        gbc.writeMem(0xe85e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x86a, gbc.sp());
        EXPECT(0xe860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe85e));
        EXPECT(0x49, gbc.readMem(0xe85f));
        // CB 49 005C
        gbc.setState(0x8243, 0xf279, 0xc660, 0xf867, 0x62c1, 0x802d, 0x0, 0x1);
        gbc.writeMem(0x8243, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf279, gbc.sp());
        EXPECT(0x8245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8243));
        EXPECT(0x49, gbc.readMem(0x8244));
        // CB 49 005D
        gbc.setState(0x3b24, 0x17d1, 0x9cb0, 0x9418, 0xee63, 0xfa79, 0x0, 0x0);
        gbc.writeMem(0x3b24, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x17d1, gbc.sp());
        EXPECT(0x3b26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 005E
        gbc.setState(0x432f, 0x498a, 0x2bb0, 0xc1be, 0xe14, 0x405, 0x0, 0x0);
        gbc.writeMem(0x432f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x498a, gbc.sp());
        EXPECT(0x4331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 005F
        gbc.setState(0x29, 0x9f4e, 0xc430, 0x7026, 0x966e, 0x7d68, 0x1, 0x0);
        gbc.writeMem(0x29, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9f4e, gbc.sp());
        EXPECT(0x2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0060
        gbc.setState(0x9258, 0x47a0, 0x7e20, 0x9f6f, 0xfd9, 0x3571, 0x1, 0x1);
        gbc.writeMem(0x9258, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x47a0, gbc.sp());
        EXPECT(0x925a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9258));
        EXPECT(0x49, gbc.readMem(0x9259));
        // CB 49 0061
        gbc.setState(0xebe, 0x502a, 0x2cf0, 0xefae, 0x3349, 0xe482, 0x0, 0x0);
        gbc.writeMem(0xebe, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x502a, gbc.sp());
        EXPECT(0xec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0062
        gbc.setState(0xb1c0, 0x396, 0xb140, 0x29a9, 0x6040, 0x82a6, 0x0, 0x0);
        gbc.writeMem(0xb1c0, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x396, gbc.sp());
        EXPECT(0xb1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c0));
        EXPECT(0x49, gbc.readMem(0xb1c1));
        // CB 49 0063
        gbc.setState(0x1d0d, 0x1013, 0x5900, 0x26d2, 0x2800, 0x7dfe, 0x0, 0x0);
        gbc.writeMem(0x1d0d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1013, gbc.sp());
        EXPECT(0x1d0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0065
        gbc.setState(0xd808, 0x3f22, 0x8080, 0x96de, 0x9f5, 0x3d, 0x0, 0x1);
        gbc.writeMem(0xd808, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3f22, gbc.sp());
        EXPECT(0xd80a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd808));
        EXPECT(0x49, gbc.readMem(0xd809));
        // CB 49 0066
        gbc.setState(0x7df2, 0xc89a, 0x2a90, 0x9db, 0x912e, 0x33f7, 0x1, 0x0);
        gbc.writeMem(0x7df2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc89a, gbc.sp());
        EXPECT(0x7df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0067
        gbc.setState(0x5a99, 0x9a86, 0xa330, 0xd6c0, 0xe6f2, 0x7896, 0x1, 0x0);
        gbc.writeMem(0x5a99, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9a86, gbc.sp());
        EXPECT(0x5a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0068
        gbc.setState(0x7462, 0xb9c6, 0xdc20, 0xb52a, 0xb9a, 0xe9a0, 0x0, 0x1);
        gbc.writeMem(0x7462, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb9c6, gbc.sp());
        EXPECT(0x7464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0069
        gbc.setState(0x73e0, 0x9542, 0xa950, 0xb2ac, 0x17d, 0x7fa8, 0x0, 0x1);
        gbc.writeMem(0x73e0, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9542, gbc.sp());
        EXPECT(0x73e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 006A
        gbc.setState(0xa7c0, 0x51bf, 0xd680, 0x24e7, 0x8693, 0xacfb, 0x1, 0x1);
        gbc.writeMem(0xa7c0, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x51bf, gbc.sp());
        EXPECT(0xa7c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7c0));
        EXPECT(0x49, gbc.readMem(0xa7c1));
        // CB 49 006B
        gbc.setState(0x6978, 0x8eb5, 0x12b0, 0xd668, 0xe5f0, 0x40be, 0x0, 0x0);
        gbc.writeMem(0x6978, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8eb5, gbc.sp());
        EXPECT(0x697a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 006C
        gbc.setState(0x5137, 0x45d2, 0xaa70, 0x3edc, 0x8af1, 0xafcd, 0x0, 0x0);
        gbc.writeMem(0x5137, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x45d2, gbc.sp());
        EXPECT(0x5139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 006D
        gbc.setState(0xd533, 0xc4c5, 0x3450, 0xddbe, 0x745f, 0xcb52, 0x1, 0x0);
        gbc.writeMem(0xd533, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc4c5, gbc.sp());
        EXPECT(0xd535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd533));
        EXPECT(0x49, gbc.readMem(0xd534));
        // CB 49 006E
        gbc.setState(0x10b2, 0xc66a, 0xd400, 0xae46, 0x6b71, 0xaaa1, 0x0, 0x1);
        gbc.writeMem(0x10b2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc66a, gbc.sp());
        EXPECT(0x10b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 006F
        gbc.setState(0x329f, 0x8af7, 0x5ee0, 0x3cd3, 0x445f, 0x7bc0, 0x0, 0x1);
        gbc.writeMem(0x329f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8af7, gbc.sp());
        EXPECT(0x32a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0070
        gbc.setState(0x2b3b, 0x3330, 0x1000, 0x10c7, 0x99b6, 0x7457, 0x0, 0x0);
        gbc.writeMem(0x2b3b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3330, gbc.sp());
        EXPECT(0x2b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0071
        gbc.setState(0xe8ee, 0xedb5, 0x31a0, 0xfffd, 0xc974, 0x21ec, 0x1, 0x0);
        gbc.writeMem(0xe8ee, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xedb5, gbc.sp());
        EXPECT(0xe8f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ee));
        EXPECT(0x49, gbc.readMem(0xe8ef));
        // CB 49 0072
        gbc.setState(0x808, 0x865f, 0x8380, 0x9251, 0x79d6, 0x9a96, 0x0, 0x0);
        gbc.writeMem(0x808, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x865f, gbc.sp());
        EXPECT(0x80a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0073
        gbc.setState(0x5e26, 0x890d, 0xb020, 0xe839, 0xb82f, 0x604d, 0x1, 0x0);
        gbc.writeMem(0x5e26, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x890d, gbc.sp());
        EXPECT(0x5e28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0074
        gbc.setState(0xc657, 0xbd20, 0xc8a0, 0xeb1e, 0xb0b9, 0x675d, 0x0, 0x1);
        gbc.writeMem(0xc657, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbd20, gbc.sp());
        EXPECT(0xc659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc657));
        EXPECT(0x49, gbc.readMem(0xc658));
        // CB 49 0075
        gbc.setState(0x612, 0xedc4, 0x9d80, 0xae2a, 0xba7c, 0x756c, 0x1, 0x0);
        gbc.writeMem(0x612, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xedc4, gbc.sp());
        EXPECT(0x614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0076
        gbc.setState(0xb9a, 0xc6a4, 0x37a0, 0x6778, 0x1757, 0xa599, 0x1, 0x0);
        gbc.writeMem(0xb9a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc6a4, gbc.sp());
        EXPECT(0xb9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0077
        gbc.setState(0x2dd8, 0xd878, 0xa020, 0x37fd, 0x3571, 0x1c32, 0x0, 0x1);
        gbc.writeMem(0x2dd8, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd878, gbc.sp());
        EXPECT(0x2dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0079
        gbc.setState(0x8715, 0xbc91, 0x2220, 0xef24, 0x87d4, 0x1ca0, 0x0, 0x0);
        gbc.writeMem(0x8715, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbc91, gbc.sp());
        EXPECT(0x8717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8715));
        EXPECT(0x49, gbc.readMem(0x8716));
        // CB 49 007A
        gbc.setState(0x60f5, 0x6785, 0xa980, 0x19fe, 0x5cfc, 0xf86b, 0x1, 0x0);
        gbc.writeMem(0x60f5, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6785, gbc.sp());
        EXPECT(0x60f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 007B
        gbc.setState(0xe9e8, 0x15e5, 0x25f0, 0xd719, 0xdf07, 0x7e3e, 0x1, 0x0);
        gbc.writeMem(0xe9e8, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x15e5, gbc.sp());
        EXPECT(0xe9ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9e8));
        EXPECT(0x49, gbc.readMem(0xe9e9));
        // CB 49 007C
        gbc.setState(0x5196, 0x86ae, 0xc2a0, 0x48a3, 0x49ca, 0x8e93, 0x1, 0x0);
        gbc.writeMem(0x5196, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x86ae, gbc.sp());
        EXPECT(0x5198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 007D
        gbc.setState(0x9d3d, 0x6592, 0x9710, 0xfc66, 0xff95, 0xd413, 0x1, 0x1);
        gbc.writeMem(0x9d3d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6592, gbc.sp());
        EXPECT(0x9d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d3d));
        EXPECT(0x49, gbc.readMem(0x9d3e));
        // CB 49 007E
        gbc.setState(0x4bc0, 0x5639, 0xac00, 0x7b13, 0x135c, 0x845, 0x1, 0x1);
        gbc.writeMem(0x4bc0, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5639, gbc.sp());
        EXPECT(0x4bc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 007F
        gbc.setState(0x1f29, 0xa1f7, 0xcff0, 0xd887, 0x3d93, 0xf993, 0x0, 0x0);
        gbc.writeMem(0x1f29, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa1f7, gbc.sp());
        EXPECT(0x1f2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0080
        gbc.setState(0x9693, 0x305d, 0x4280, 0xd60a, 0x2ec4, 0x17d7, 0x0, 0x0);
        gbc.writeMem(0x9693, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x305d, gbc.sp());
        EXPECT(0x9695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9693));
        EXPECT(0x49, gbc.readMem(0x9694));
        // CB 49 0081
        gbc.setState(0xc8e5, 0x9960, 0x9870, 0xd69d, 0xc22, 0x8309, 0x1, 0x1);
        gbc.writeMem(0xc8e5, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9960, gbc.sp());
        EXPECT(0xc8e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e5));
        EXPECT(0x49, gbc.readMem(0xc8e6));
        // CB 49 0082
        gbc.setState(0x6f67, 0x2bde, 0x63c0, 0x8917, 0x1ad0, 0xd89a, 0x0, 0x1);
        gbc.writeMem(0x6f67, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2bde, gbc.sp());
        EXPECT(0x6f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0083
        gbc.setState(0x293f, 0x311b, 0x7d20, 0xf064, 0x1316, 0xd407, 0x0, 0x0);
        gbc.writeMem(0x293f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x311b, gbc.sp());
        EXPECT(0x2941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0084
        gbc.setState(0x6820, 0xb5ef, 0x9f50, 0xbf41, 0xdd35, 0x9d9f, 0x1, 0x0);
        gbc.writeMem(0x6820, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb5ef, gbc.sp());
        EXPECT(0x6822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0085
        gbc.setState(0x8fda, 0x3003, 0xaa50, 0xe909, 0xc11c, 0x2abc, 0x0, 0x1);
        gbc.writeMem(0x8fda, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3003, gbc.sp());
        EXPECT(0x8fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fda));
        EXPECT(0x49, gbc.readMem(0x8fdb));
        // CB 49 0086
        gbc.setState(0xd461, 0x8940, 0x7ee0, 0x696b, 0xc51, 0xf98a, 0x0, 0x0);
        gbc.writeMem(0xd461, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8940, gbc.sp());
        EXPECT(0xd463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd461));
        EXPECT(0x49, gbc.readMem(0xd462));
        // CB 49 0087
        gbc.setState(0x37ac, 0x3e2c, 0x8410, 0x157d, 0x3266, 0xfb70, 0x0, 0x0);
        gbc.writeMem(0x37ac, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3e2c, gbc.sp());
        EXPECT(0x37ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0088
        gbc.setState(0x1aa3, 0x39ac, 0xd770, 0xa2c1, 0xd061, 0xc300, 0x0, 0x1);
        gbc.writeMem(0x1aa3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x39ac, gbc.sp());
        EXPECT(0x1aa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0089
        gbc.setState(0x19de, 0x9c7b, 0xb340, 0x3ad6, 0xef61, 0x57c1, 0x0, 0x1);
        gbc.writeMem(0x19de, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9c7b, gbc.sp());
        EXPECT(0x19e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 008A
        gbc.setState(0x9bb3, 0xc7cb, 0xbb10, 0x19f3, 0xb420, 0x5622, 0x0, 0x0);
        gbc.writeMem(0x9bb3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc7cb, gbc.sp());
        EXPECT(0x9bb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb3));
        EXPECT(0x49, gbc.readMem(0x9bb4));
        // CB 49 008B
        gbc.setState(0x899f, 0x9199, 0xe880, 0x5f7e, 0x21cc, 0x7c8e, 0x0, 0x0);
        gbc.writeMem(0x899f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9199, gbc.sp());
        EXPECT(0x89a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x899f));
        EXPECT(0x49, gbc.readMem(0x89a0));
        // CB 49 008C
        gbc.setState(0xd95e, 0xe804, 0x3e40, 0xaf07, 0x90e3, 0x6ae5, 0x0, 0x1);
        gbc.writeMem(0xd95e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe804, gbc.sp());
        EXPECT(0xd960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd95e));
        EXPECT(0x49, gbc.readMem(0xd95f));
        // CB 49 008D
        gbc.setState(0x26dd, 0x85f6, 0x4190, 0x90d1, 0xa014, 0x3813, 0x1, 0x1);
        gbc.writeMem(0x26dd, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x85f6, gbc.sp());
        EXPECT(0x26df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 008E
        gbc.setState(0xb8f1, 0xcb17, 0x6d80, 0x65bf, 0x3580, 0xe214, 0x1, 0x0);
        gbc.writeMem(0xb8f1, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xcb17, gbc.sp());
        EXPECT(0xb8f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f1));
        EXPECT(0x49, gbc.readMem(0xb8f2));
        // CB 49 008F
        gbc.setState(0xbf19, 0x3163, 0x90d0, 0x3663, 0xa34, 0x80b7, 0x0, 0x1);
        gbc.writeMem(0xbf19, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3163, gbc.sp());
        EXPECT(0xbf1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf19));
        EXPECT(0x49, gbc.readMem(0xbf1a));
        // CB 49 0090
        gbc.setState(0xa4a1, 0xf4f2, 0xf990, 0xbffa, 0x939a, 0xc966, 0x0, 0x0);
        gbc.writeMem(0xa4a1, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf4f2, gbc.sp());
        EXPECT(0xa4a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4a1));
        EXPECT(0x49, gbc.readMem(0xa4a2));
        // CB 49 0091
        gbc.setState(0x6956, 0xe1b9, 0x6ea0, 0xb3e5, 0xe5d, 0x6d34, 0x1, 0x0);
        gbc.writeMem(0x6956, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe1b9, gbc.sp());
        EXPECT(0x6958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0092
        gbc.setState(0xc471, 0xce61, 0x7cb0, 0x2d33, 0xf07d, 0x197c, 0x1, 0x1);
        gbc.writeMem(0xc471, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xce61, gbc.sp());
        EXPECT(0xc473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc471));
        EXPECT(0x49, gbc.readMem(0xc472));
        // CB 49 0093
        gbc.setState(0xc25, 0xefa8, 0x61b0, 0x31f2, 0xa206, 0x9383, 0x0, 0x0);
        gbc.writeMem(0xc25, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xefa8, gbc.sp());
        EXPECT(0xc27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0094
        gbc.setState(0x57cc, 0xacbb, 0x12d0, 0x84a6, 0x5836, 0x3f8, 0x0, 0x0);
        gbc.writeMem(0x57cc, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xacbb, gbc.sp());
        EXPECT(0x57ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0095
        gbc.setState(0x343c, 0xd15c, 0x9df0, 0x1ba1, 0xdb9c, 0x5ec6, 0x1, 0x1);
        gbc.writeMem(0x343c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd15c, gbc.sp());
        EXPECT(0x343e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0096
        gbc.setState(0xbcf0, 0xb067, 0x5fc0, 0xe494, 0xef49, 0x1d3, 0x0, 0x0);
        gbc.writeMem(0xbcf0, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb067, gbc.sp());
        EXPECT(0xbcf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcf0));
        EXPECT(0x49, gbc.readMem(0xbcf1));
        // CB 49 0097
        gbc.setState(0xd5da, 0x5773, 0xfd70, 0x9f37, 0x9dae, 0x478a, 0x0, 0x1);
        gbc.writeMem(0xd5da, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5773, gbc.sp());
        EXPECT(0xd5dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5da));
        EXPECT(0x49, gbc.readMem(0xd5db));
        // CB 49 0098
        gbc.setState(0x21cb, 0x76bd, 0x1d20, 0x3020, 0xb7d0, 0x4183, 0x1, 0x1);
        gbc.writeMem(0x21cb, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x76bd, gbc.sp());
        EXPECT(0x21cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0099
        gbc.setState(0xe7e4, 0x5e4, 0xb10, 0x674a, 0x9e17, 0x702b, 0x0, 0x0);
        gbc.writeMem(0xe7e4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5e4, gbc.sp());
        EXPECT(0xe7e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7e4));
        EXPECT(0x49, gbc.readMem(0xe7e5));
        // CB 49 009A
        gbc.setState(0x7726, 0x635f, 0x2d60, 0x6a42, 0x2bb, 0x43e3, 0x0, 0x0);
        gbc.writeMem(0x7726, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x635f, gbc.sp());
        EXPECT(0x7728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 009B
        gbc.setState(0x5f29, 0xd2df, 0xa2b0, 0xf465, 0xc9c9, 0x351f, 0x0, 0x1);
        gbc.writeMem(0x5f29, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd2df, gbc.sp());
        EXPECT(0x5f2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 009C
        gbc.setState(0x7e6a, 0xddaa, 0xc7a0, 0x73ba, 0x4a3f, 0x24d7, 0x1, 0x1);
        gbc.writeMem(0x7e6a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xddaa, gbc.sp());
        EXPECT(0x7e6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 009D
        gbc.setState(0x4557, 0xe1bf, 0x3180, 0xe251, 0xa9a6, 0x837b, 0x0, 0x0);
        gbc.writeMem(0x4557, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe1bf, gbc.sp());
        EXPECT(0x4559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 009E
        gbc.setState(0xd7b, 0x5284, 0xb4e0, 0x697, 0x24d3, 0xa1a3, 0x1, 0x0);
        gbc.writeMem(0xd7b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5284, gbc.sp());
        EXPECT(0xd7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 009F
        gbc.setState(0xd96d, 0x1e43, 0xece0, 0x9d20, 0x6a05, 0xa725, 0x1, 0x0);
        gbc.writeMem(0xd96d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1e43, gbc.sp());
        EXPECT(0xd96f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd96d));
        EXPECT(0x49, gbc.readMem(0xd96e));
        // CB 49 00A0
        gbc.setState(0x1df1, 0xebf3, 0x36e0, 0x99f7, 0x56cf, 0x7135, 0x0, 0x1);
        gbc.writeMem(0x1df1, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xebf3, gbc.sp());
        EXPECT(0x1df3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00A1
        gbc.setState(0xc521, 0x4f89, 0x2a30, 0x1cd3, 0xb62d, 0x1c38, 0x0, 0x0);
        gbc.writeMem(0xc521, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4f89, gbc.sp());
        EXPECT(0xc523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc521));
        EXPECT(0x49, gbc.readMem(0xc522));
        // CB 49 00A2
        gbc.setState(0x635b, 0x7efe, 0x9380, 0xc1d2, 0x25f4, 0xe015, 0x1, 0x0);
        gbc.writeMem(0x635b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7efe, gbc.sp());
        EXPECT(0x635d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00A3
        gbc.setState(0x806d, 0xe20a, 0xce60, 0xbd81, 0xe553, 0x61e9, 0x0, 0x1);
        gbc.writeMem(0x806d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe20a, gbc.sp());
        EXPECT(0x806f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x806d));
        EXPECT(0x49, gbc.readMem(0x806e));
        // CB 49 00A4
        gbc.setState(0xd67a, 0xb8ea, 0x8210, 0xf448, 0xeefc, 0xcd94, 0x0, 0x1);
        gbc.writeMem(0xd67a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb8ea, gbc.sp());
        EXPECT(0xd67c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd67a));
        EXPECT(0x49, gbc.readMem(0xd67b));
        // CB 49 00A5
        gbc.setState(0x5413, 0x8bf5, 0x260, 0x4119, 0x87fb, 0xfc9, 0x1, 0x1);
        gbc.writeMem(0x5413, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8bf5, gbc.sp());
        EXPECT(0x5415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00A6
        gbc.setState(0x83f9, 0xc479, 0x34f0, 0xd116, 0x29ca, 0xd70d, 0x0, 0x1);
        gbc.writeMem(0x83f9, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc479, gbc.sp());
        EXPECT(0x83fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83f9));
        EXPECT(0x49, gbc.readMem(0x83fa));
        // CB 49 00A7
        gbc.setState(0xb96b, 0x309d, 0x6000, 0x4184, 0xdfe4, 0x118, 0x0, 0x0);
        gbc.writeMem(0xb96b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x309d, gbc.sp());
        EXPECT(0xb96d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb96b));
        EXPECT(0x49, gbc.readMem(0xb96c));
        // CB 49 00A8
        gbc.setState(0xc9fe, 0x5e2a, 0xbee0, 0xc32f, 0xd5de, 0xa27a, 0x1, 0x0);
        gbc.writeMem(0xc9fe, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5e2a, gbc.sp());
        EXPECT(0xca00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9fe));
        EXPECT(0x49, gbc.readMem(0xc9ff));
        // CB 49 00A9
        gbc.setState(0x7854, 0xf9dd, 0xe7b0, 0xb993, 0x487d, 0x9475, 0x0, 0x0);
        gbc.writeMem(0x7854, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf9dd, gbc.sp());
        EXPECT(0x7856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 00AA
        gbc.setState(0xc74c, 0x7be5, 0xc020, 0xf64e, 0x8c91, 0x6ff9, 0x1, 0x0);
        gbc.writeMem(0xc74c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7be5, gbc.sp());
        EXPECT(0xc74e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc74c));
        EXPECT(0x49, gbc.readMem(0xc74d));
        // CB 49 00AB
        gbc.setState(0x6b1b, 0x542d, 0xaba0, 0x460, 0xab96, 0xba1d, 0x1, 0x0);
        gbc.writeMem(0x6b1b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x542d, gbc.sp());
        EXPECT(0x6b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00AC
        gbc.setState(0xc911, 0x8bdb, 0x9070, 0xf25e, 0xd3d1, 0xadfc, 0x0, 0x1);
        gbc.writeMem(0xc911, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8bdb, gbc.sp());
        EXPECT(0xc913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc911));
        EXPECT(0x49, gbc.readMem(0xc912));
        // CB 49 00AD
        gbc.setState(0x93f4, 0x6ab, 0xf980, 0xc666, 0x4ea, 0xfeb, 0x1, 0x1);
        gbc.writeMem(0x93f4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6ab, gbc.sp());
        EXPECT(0x93f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f4));
        EXPECT(0x49, gbc.readMem(0x93f5));
        // CB 49 00AE
        gbc.setState(0x35a3, 0xa20e, 0xec10, 0x65d4, 0x3815, 0x4c5a, 0x1, 0x0);
        gbc.writeMem(0x35a3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa20e, gbc.sp());
        EXPECT(0x35a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 00AF
        gbc.setState(0x1165, 0xffe2, 0x8720, 0x20a7, 0x4f5b, 0x6f57, 0x0, 0x0);
        gbc.writeMem(0x1165, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xffe2, gbc.sp());
        EXPECT(0x1167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00B0
        gbc.setState(0x2b7, 0x1707, 0x23a0, 0xca78, 0x80ed, 0x4c42, 0x1, 0x1);
        gbc.writeMem(0x2b7, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1707, gbc.sp());
        EXPECT(0x2b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00B1
        gbc.setState(0xec07, 0xe9de, 0x3390, 0xaf78, 0x4392, 0xcc30, 0x0, 0x0);
        gbc.writeMem(0xec07, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe9de, gbc.sp());
        EXPECT(0xec09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec07));
        EXPECT(0x49, gbc.readMem(0xec08));
        // CB 49 00B2
        gbc.setState(0x1622, 0x8bb3, 0xdd20, 0x1def, 0xd816, 0x98c0, 0x1, 0x1);
        gbc.writeMem(0x1622, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8bb3, gbc.sp());
        EXPECT(0x1624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00B3
        gbc.setState(0xbdb8, 0xcdee, 0xc7b0, 0xfc61, 0xeff4, 0xe6cc, 0x0, 0x1);
        gbc.writeMem(0xbdb8, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcdee, gbc.sp());
        EXPECT(0xbdba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb8));
        EXPECT(0x49, gbc.readMem(0xbdb9));
        // CB 49 00B5
        gbc.setState(0x6604, 0x4434, 0x2d80, 0xb53, 0xc994, 0xd8ab, 0x0, 0x1);
        gbc.writeMem(0x6604, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4434, gbc.sp());
        EXPECT(0x6606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00B6
        gbc.setState(0xae1, 0x9480, 0x2770, 0x7ed6, 0xcf2c, 0x3599, 0x1, 0x0);
        gbc.writeMem(0xae1, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9480, gbc.sp());
        EXPECT(0xae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 00B7
        gbc.setState(0x6215, 0x71cd, 0xb6d0, 0xca37, 0xbba0, 0x2c28, 0x1, 0x1);
        gbc.writeMem(0x6215, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x71cd, gbc.sp());
        EXPECT(0x6217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 00B8
        gbc.setState(0xae06, 0x39f4, 0xee70, 0x2940, 0xeda7, 0xc1, 0x1, 0x0);
        gbc.writeMem(0xae06, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x39f4, gbc.sp());
        EXPECT(0xae08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae06));
        EXPECT(0x49, gbc.readMem(0xae07));
        // CB 49 00B9
        gbc.setState(0x632f, 0xd87e, 0xf990, 0x6004, 0x703c, 0xebc7, 0x0, 0x1);
        gbc.writeMem(0x632f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd87e, gbc.sp());
        EXPECT(0x6331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 00BA
        gbc.setState(0xb971, 0xa0d, 0x1e10, 0x21f0, 0xdac6, 0xeb15, 0x0, 0x1);
        gbc.writeMem(0xb971, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa0d, gbc.sp());
        EXPECT(0xb973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb971));
        EXPECT(0x49, gbc.readMem(0xb972));
        // CB 49 00BD
        gbc.setState(0x9c8, 0x9ba1, 0xb4f0, 0x9013, 0x143d, 0x69d7, 0x1, 0x1);
        gbc.writeMem(0x9c8, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9ba1, gbc.sp());
        EXPECT(0x9ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 00BE
        gbc.setState(0x48a6, 0x46c3, 0xe010, 0xacdc, 0x758a, 0xc26c, 0x0, 0x1);
        gbc.writeMem(0x48a6, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x46c3, gbc.sp());
        EXPECT(0x48a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 00BF
        gbc.setState(0x7db9, 0x3a6c, 0x7380, 0x687, 0xd1dc, 0x3532, 0x1, 0x0);
        gbc.writeMem(0x7db9, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3a6c, gbc.sp());
        EXPECT(0x7dbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00C0
        gbc.setState(0x958c, 0x44d9, 0x3d00, 0x2597, 0x5872, 0x595, 0x0, 0x1);
        gbc.writeMem(0x958c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x44d9, gbc.sp());
        EXPECT(0x958e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x958c));
        EXPECT(0x49, gbc.readMem(0x958d));
        // CB 49 00C1
        gbc.setState(0x2c47, 0x8945, 0xd80, 0x8efa, 0xc10e, 0x86d2, 0x0, 0x0);
        gbc.writeMem(0x2c47, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8945, gbc.sp());
        EXPECT(0x2c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00C2
        gbc.setState(0x9f48, 0x1615, 0x3ef0, 0x2948, 0x66b1, 0x8b54, 0x0, 0x0);
        gbc.writeMem(0x9f48, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1615, gbc.sp());
        EXPECT(0x9f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f48));
        EXPECT(0x49, gbc.readMem(0x9f49));
        // CB 49 00C3
        gbc.setState(0xe1a6, 0xb79f, 0xb740, 0xfd67, 0x75b6, 0x2f74, 0x0, 0x0);
        gbc.writeMem(0xe1a6, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb79f, gbc.sp());
        EXPECT(0xe1a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a6));
        EXPECT(0x49, gbc.readMem(0xe1a7));
        // CB 49 00C4
        gbc.setState(0x17d, 0x2493, 0x46e0, 0xb348, 0x8c05, 0xf3d0, 0x0, 0x1);
        gbc.writeMem(0x17d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2493, gbc.sp());
        EXPECT(0x17f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00C5
        gbc.setState(0x63a1, 0x78f1, 0x3c60, 0xb41e, 0x67f, 0x7daf, 0x0, 0x1);
        gbc.writeMem(0x63a1, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x78f1, gbc.sp());
        EXPECT(0x63a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00C6
        gbc.setState(0x62fa, 0x7ec5, 0x22f0, 0x6cd1, 0x2858, 0xa80e, 0x1, 0x0);
        gbc.writeMem(0x62fa, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7ec5, gbc.sp());
        EXPECT(0x62fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 00C7
        gbc.setState(0xb81, 0xe604, 0xdda0, 0x2884, 0x503, 0x1be3, 0x1, 0x1);
        gbc.writeMem(0xb81, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe604, gbc.sp());
        EXPECT(0xb83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00C8
        gbc.setState(0x7a9, 0x3189, 0xc290, 0x81, 0x7a75, 0x942, 0x0, 0x0);
        gbc.writeMem(0x7a9, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3189, gbc.sp());
        EXPECT(0x7ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 00C9
        gbc.setState(0xc651, 0xacdc, 0xd830, 0x4b47, 0x2b03, 0xb3d6, 0x1, 0x1);
        gbc.writeMem(0xc651, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xacdc, gbc.sp());
        EXPECT(0xc653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc651));
        EXPECT(0x49, gbc.readMem(0xc652));
        // CB 49 00CA
        gbc.setState(0x5c38, 0x64c3, 0x2680, 0xb182, 0x9b63, 0x74ec, 0x0, 0x1);
        gbc.writeMem(0x5c38, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x64c3, gbc.sp());
        EXPECT(0x5c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00CB
        gbc.setState(0xa682, 0xcf6e, 0xd170, 0x6c3c, 0x3da3, 0x19ac, 0x0, 0x1);
        gbc.writeMem(0xa682, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcf6e, gbc.sp());
        EXPECT(0xa684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa682));
        EXPECT(0x49, gbc.readMem(0xa683));
        // CB 49 00CC
        gbc.setState(0xa41d, 0xc3be, 0x4d30, 0xc760, 0x4214, 0x7cc0, 0x1, 0x1);
        gbc.writeMem(0xa41d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc3be, gbc.sp());
        EXPECT(0xa41f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa41d));
        EXPECT(0x49, gbc.readMem(0xa41e));
        // CB 49 00CD
        gbc.setState(0x15d5, 0xb100, 0xa990, 0x27f1, 0x6f25, 0x1598, 0x0, 0x0);
        gbc.writeMem(0x15d5, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb100, gbc.sp());
        EXPECT(0x15d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 00CE
        gbc.setState(0xce6e, 0x81ea, 0x29c0, 0x4bdb, 0xe998, 0xcd1c, 0x0, 0x0);
        gbc.writeMem(0xce6e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x81ea, gbc.sp());
        EXPECT(0xce70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce6e));
        EXPECT(0x49, gbc.readMem(0xce6f));
        // CB 49 00CF
        gbc.setState(0x593d, 0xfc48, 0x7900, 0x84bf, 0x27b3, 0x561, 0x0, 0x1);
        gbc.writeMem(0x593d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfc48, gbc.sp());
        EXPECT(0x593f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00D0
        gbc.setState(0x71f7, 0x1386, 0xcb30, 0x9ac0, 0xfea0, 0x480b, 0x1, 0x0);
        gbc.writeMem(0x71f7, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1386, gbc.sp());
        EXPECT(0x71f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 00D1
        gbc.setState(0xc8dd, 0x9e76, 0x5d90, 0xea90, 0xeeb8, 0xe2e9, 0x1, 0x1);
        gbc.writeMem(0xc8dd, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9e76, gbc.sp());
        EXPECT(0xc8df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8dd));
        EXPECT(0x49, gbc.readMem(0xc8de));
        // CB 49 00D2
        gbc.setState(0xdabe, 0xb9db, 0xb180, 0xda17, 0xf20, 0x6e51, 0x1, 0x1);
        gbc.writeMem(0xdabe, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb9db, gbc.sp());
        EXPECT(0xdac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdabe));
        EXPECT(0x49, gbc.readMem(0xdabf));
        // CB 49 00D3
        gbc.setState(0x4a22, 0x5f9e, 0xf4d0, 0xc1fb, 0xfb91, 0x753, 0x0, 0x1);
        gbc.writeMem(0x4a22, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5f9e, gbc.sp());
        EXPECT(0x4a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 00D4
        gbc.setState(0xde7f, 0x45d0, 0xdbb0, 0x8cb9, 0xb441, 0x6f27, 0x1, 0x1);
        gbc.writeMem(0xde7f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x45d0, gbc.sp());
        EXPECT(0xde81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde7f));
        EXPECT(0x49, gbc.readMem(0xde80));
        // CB 49 00D5
        gbc.setState(0x495e, 0xab63, 0xd830, 0x2cb5, 0xd713, 0xb072, 0x0, 0x1);
        gbc.writeMem(0x495e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xab63, gbc.sp());
        EXPECT(0x4960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 00D7
        gbc.setState(0x3d4, 0x8781, 0x1730, 0x2002, 0xe8f2, 0x41a3, 0x0, 0x1);
        gbc.writeMem(0x3d4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8781, gbc.sp());
        EXPECT(0x3d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 00D8
        gbc.setState(0x69c7, 0x47bd, 0xa00, 0x2500, 0xa64a, 0xe4e8, 0x1, 0x1);
        gbc.writeMem(0x69c7, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x47bd, gbc.sp());
        EXPECT(0x69c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00D9
        gbc.setState(0x2466, 0x6e07, 0x4810, 0x9ea8, 0x926f, 0x3611, 0x1, 0x0);
        gbc.writeMem(0x2466, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6e07, gbc.sp());
        EXPECT(0x2468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 00DA
        gbc.setState(0x8d8a, 0x1388, 0xf640, 0xdc56, 0xec49, 0x45b0, 0x0, 0x0);
        gbc.writeMem(0x8d8a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1388, gbc.sp());
        EXPECT(0x8d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d8a));
        EXPECT(0x49, gbc.readMem(0x8d8b));
        // CB 49 00DB
        gbc.setState(0xcf68, 0xfc54, 0x660, 0x7d8, 0xe4b3, 0x3708, 0x1, 0x0);
        gbc.writeMem(0xcf68, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xfc54, gbc.sp());
        EXPECT(0xcf6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf68));
        EXPECT(0x49, gbc.readMem(0xcf69));
        // CB 49 00DC
        gbc.setState(0x8ec9, 0xe33, 0x12e0, 0xf339, 0x9c84, 0x4073, 0x0, 0x0);
        gbc.writeMem(0x8ec9, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe33, gbc.sp());
        EXPECT(0x8ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ec9));
        EXPECT(0x49, gbc.readMem(0x8eca));
        // CB 49 00DD
        gbc.setState(0x1029, 0xa3fe, 0x7350, 0x1712, 0xc920, 0x69ae, 0x1, 0x0);
        gbc.writeMem(0x1029, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa3fe, gbc.sp());
        EXPECT(0x102b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 00DE
        gbc.setState(0x22d5, 0x7152, 0xa2c0, 0x322f, 0xb9c2, 0x6d94, 0x1, 0x1);
        gbc.writeMem(0x22d5, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7152, gbc.sp());
        EXPECT(0x22d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00DF
        gbc.setState(0x8895, 0xf617, 0x8250, 0x184, 0x12bb, 0x5c95, 0x0, 0x1);
        gbc.writeMem(0x8895, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf617, gbc.sp());
        EXPECT(0x8897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8895));
        EXPECT(0x49, gbc.readMem(0x8896));
        // CB 49 00E0
        gbc.setState(0x268c, 0x1ee6, 0x3900, 0xf46b, 0x84b3, 0x216a, 0x1, 0x0);
        gbc.writeMem(0x268c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1ee6, gbc.sp());
        EXPECT(0x268e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00E1
        gbc.setState(0x8607, 0xa682, 0x5a50, 0x14eb, 0x544c, 0x259, 0x1, 0x0);
        gbc.writeMem(0x8607, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa682, gbc.sp());
        EXPECT(0x8609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8607));
        EXPECT(0x49, gbc.readMem(0x8608));
        // CB 49 00E3
        gbc.setState(0xbc55, 0x1ef8, 0xddb0, 0xd501, 0xce4c, 0x4426, 0x0, 0x1);
        gbc.writeMem(0xbc55, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1ef8, gbc.sp());
        EXPECT(0xbc57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc55));
        EXPECT(0x49, gbc.readMem(0xbc56));
        // CB 49 00E4
        gbc.setState(0xd43f, 0xc235, 0x2810, 0xc35d, 0x5fd3, 0x44d2, 0x1, 0x1);
        gbc.writeMem(0xd43f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc235, gbc.sp());
        EXPECT(0xd441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd43f));
        EXPECT(0x49, gbc.readMem(0xd440));
        // CB 49 00E5
        gbc.setState(0x73cf, 0x454a, 0x9c80, 0xcbbf, 0x1c54, 0xeddf, 0x0, 0x0);
        gbc.writeMem(0x73cf, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x454a, gbc.sp());
        EXPECT(0x73d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00E6
        gbc.setState(0x59d4, 0xdb22, 0xfcc0, 0x8734, 0x458e, 0xebee, 0x0, 0x0);
        gbc.writeMem(0x59d4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdb22, gbc.sp());
        EXPECT(0x59d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00E7
        gbc.setState(0x7084, 0x82dd, 0x8400, 0x9167, 0xc660, 0xbec, 0x0, 0x1);
        gbc.writeMem(0x7084, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x82dd, gbc.sp());
        EXPECT(0x7086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00E8
        gbc.setState(0x3c73, 0x791a, 0x3970, 0x4707, 0x6886, 0xe40d, 0x1, 0x1);
        gbc.writeMem(0x3c73, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x791a, gbc.sp());
        EXPECT(0x3c75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 00E9
        gbc.setState(0x5c32, 0x7ae0, 0xecf0, 0x5aad, 0x32e0, 0xb701, 0x0, 0x0);
        gbc.writeMem(0x5c32, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7ae0, gbc.sp());
        EXPECT(0x5c34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 00EA
        gbc.setState(0x7e7a, 0xb044, 0x26e0, 0x8cdf, 0xb551, 0x49ba, 0x0, 0x0);
        gbc.writeMem(0x7e7a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb044, gbc.sp());
        EXPECT(0x7e7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00EB
        gbc.setState(0x92aa, 0x10b, 0x4a80, 0x831f, 0xf548, 0x223, 0x1, 0x0);
        gbc.writeMem(0x92aa, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x10b, gbc.sp());
        EXPECT(0x92ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92aa));
        EXPECT(0x49, gbc.readMem(0x92ab));
        // CB 49 00EC
        gbc.setState(0xbb17, 0xf33d, 0x8040, 0xe413, 0xa126, 0xa2a, 0x0, 0x1);
        gbc.writeMem(0xbb17, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf33d, gbc.sp());
        EXPECT(0xbb19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb17));
        EXPECT(0x49, gbc.readMem(0xbb18));
        // CB 49 00ED
        gbc.setState(0xdc74, 0xe3f7, 0x3530, 0x4573, 0xa9ec, 0xd795, 0x1, 0x1);
        gbc.writeMem(0xdc74, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe3f7, gbc.sp());
        EXPECT(0xdc76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc74));
        EXPECT(0x49, gbc.readMem(0xdc75));
        // CB 49 00EE
        gbc.setState(0x25e9, 0xdaf3, 0x22e0, 0x9943, 0x182f, 0x1678, 0x1, 0x0);
        gbc.writeMem(0x25e9, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdaf3, gbc.sp());
        EXPECT(0x25eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00EF
        gbc.setState(0xd8c4, 0x2cde, 0x58d0, 0x9453, 0x5870, 0xc89c, 0x1, 0x1);
        gbc.writeMem(0xd8c4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2cde, gbc.sp());
        EXPECT(0xd8c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8c4));
        EXPECT(0x49, gbc.readMem(0xd8c5));
        // CB 49 00F0
        gbc.setState(0xb8bc, 0xb1e8, 0x44a0, 0x7d68, 0x49d1, 0x2c0b, 0x1, 0x1);
        gbc.writeMem(0xb8bc, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb1e8, gbc.sp());
        EXPECT(0xb8be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8bc));
        EXPECT(0x49, gbc.readMem(0xb8bd));
        // CB 49 00F1
        gbc.setState(0x9eb, 0xb784, 0x5e60, 0x15f6, 0xe55e, 0x96a3, 0x1, 0x0);
        gbc.writeMem(0x9eb, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb784, gbc.sp());
        EXPECT(0x9ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00F2
        gbc.setState(0xca0c, 0x2e85, 0x3880, 0x6af8, 0xc6ab, 0x44da, 0x0, 0x1);
        gbc.writeMem(0xca0c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2e85, gbc.sp());
        EXPECT(0xca0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca0c));
        EXPECT(0x49, gbc.readMem(0xca0d));
        // CB 49 00F3
        gbc.setState(0x1676, 0x8b35, 0x6280, 0xbcbb, 0x4263, 0xe80a, 0x1, 0x1);
        gbc.writeMem(0x1676, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8b35, gbc.sp());
        EXPECT(0x1678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00F4
        gbc.setState(0x6a32, 0x1b3d, 0xd760, 0xb8f0, 0xe6bd, 0xc50a, 0x0, 0x1);
        gbc.writeMem(0x6a32, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1b3d, gbc.sp());
        EXPECT(0x6a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00F5
        gbc.setState(0x1420, 0x8240, 0x9330, 0x567b, 0x55a9, 0xed80, 0x0, 0x1);
        gbc.writeMem(0x1420, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8240, gbc.sp());
        EXPECT(0x1422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 00F6
        gbc.setState(0x3021, 0x246b, 0x5820, 0x424b, 0xb4aa, 0x73f5, 0x0, 0x1);
        gbc.writeMem(0x3021, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x246b, gbc.sp());
        EXPECT(0x3023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 00F7
        gbc.setState(0xb1ea, 0xa10b, 0x7030, 0x8c23, 0x4bb8, 0x79a3, 0x1, 0x0);
        gbc.writeMem(0xb1ea, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa10b, gbc.sp());
        EXPECT(0xb1ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ea));
        EXPECT(0x49, gbc.readMem(0xb1eb));
        // CB 49 00F8
        gbc.setState(0xbb6d, 0x8745, 0xfc60, 0x5924, 0x3f28, 0x3b79, 0x1, 0x1);
        gbc.writeMem(0xbb6d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8745, gbc.sp());
        EXPECT(0xbb6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb6d));
        EXPECT(0x49, gbc.readMem(0xbb6e));
        // CB 49 00F9
        gbc.setState(0x55b3, 0x5913, 0x3930, 0xf9ba, 0x673b, 0xe24d, 0x0, 0x0);
        gbc.writeMem(0x55b3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5913, gbc.sp());
        EXPECT(0x55b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 00FA
        gbc.setState(0x75a5, 0x527e, 0x4150, 0x6ac, 0x9b62, 0x765a, 0x0, 0x1);
        gbc.writeMem(0x75a5, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x527e, gbc.sp());
        EXPECT(0x75a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 00FB
        gbc.setState(0x8858, 0x5433, 0x820, 0x9dfa, 0x73cf, 0x6b68, 0x1, 0x1);
        gbc.writeMem(0x8858, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5433, gbc.sp());
        EXPECT(0x885a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8858));
        EXPECT(0x49, gbc.readMem(0x8859));
        // CB 49 00FC
        gbc.setState(0x8d39, 0x135f, 0x42a0, 0x845, 0x9b99, 0xa7d9, 0x1, 0x0);
        gbc.writeMem(0x8d39, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x135f, gbc.sp());
        EXPECT(0x8d3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d39));
        EXPECT(0x49, gbc.readMem(0x8d3a));
        // CB 49 00FD
        gbc.setState(0xef06, 0xb57, 0x2ba0, 0x6f50, 0x72f9, 0xe651, 0x0, 0x1);
        gbc.writeMem(0xef06, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb57, gbc.sp());
        EXPECT(0xef08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef06));
        EXPECT(0x49, gbc.readMem(0xef07));
        // CB 49 00FE
        gbc.setState(0x30c2, 0xccb, 0x2710, 0x3195, 0xe288, 0xfb56, 0x0, 0x1);
        gbc.writeMem(0x30c2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xccb, gbc.sp());
        EXPECT(0x30c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 00FF
        gbc.setState(0xb2fb, 0x8273, 0xe160, 0x76a, 0x462c, 0x1ec8, 0x0, 0x0);
        gbc.writeMem(0xb2fb, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8273, gbc.sp());
        EXPECT(0xb2fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2fb));
        EXPECT(0x49, gbc.readMem(0xb2fc));
        // CB 49 0100
        gbc.setState(0x80cf, 0xf5cd, 0xc570, 0x37df, 0xc960, 0x2706, 0x1, 0x1);
        gbc.writeMem(0x80cf, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf5cd, gbc.sp());
        EXPECT(0x80d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80cf));
        EXPECT(0x49, gbc.readMem(0x80d0));
        // CB 49 0101
        gbc.setState(0x6b5a, 0x748c, 0x7c50, 0x8974, 0x460c, 0x5e27, 0x0, 0x1);
        gbc.writeMem(0x6b5a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x748c, gbc.sp());
        EXPECT(0x6b5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0102
        gbc.setState(0x1b7c, 0xc2fe, 0x50c0, 0xe81f, 0x6fcf, 0xda08, 0x1, 0x0);
        gbc.writeMem(0x1b7c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc2fe, gbc.sp());
        EXPECT(0x1b7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0103
        gbc.setState(0xca44, 0x8906, 0x8020, 0xad37, 0xd6c7, 0xbf79, 0x0, 0x1);
        gbc.writeMem(0xca44, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8906, gbc.sp());
        EXPECT(0xca46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca44));
        EXPECT(0x49, gbc.readMem(0xca45));
        // CB 49 0104
        gbc.setState(0x6b0d, 0xa768, 0x1660, 0x5c7b, 0x3387, 0x66d4, 0x0, 0x0);
        gbc.writeMem(0x6b0d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa768, gbc.sp());
        EXPECT(0x6b0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0105
        gbc.setState(0x724, 0x2883, 0xeb40, 0x8d86, 0xc8b0, 0x15e3, 0x1, 0x1);
        gbc.writeMem(0x724, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2883, gbc.sp());
        EXPECT(0x726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0106
        gbc.setState(0x3553, 0xecd4, 0x3d20, 0x56d0, 0xea1e, 0x5782, 0x0, 0x1);
        gbc.writeMem(0x3553, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xecd4, gbc.sp());
        EXPECT(0x3555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0107
        gbc.setState(0x7f03, 0x3d9e, 0x2470, 0x5674, 0x6d2a, 0x51b6, 0x1, 0x0);
        gbc.writeMem(0x7f03, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3d9e, gbc.sp());
        EXPECT(0x7f05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0108
        gbc.setState(0x4e00, 0x4e75, 0xb5d0, 0xe5f6, 0x8a49, 0x1f2a, 0x1, 0x1);
        gbc.writeMem(0x4e00, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4e75, gbc.sp());
        EXPECT(0x4e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0109
        gbc.setState(0x9a4c, 0x4006, 0x78d0, 0xce91, 0xc058, 0x9e85, 0x0, 0x1);
        gbc.writeMem(0x9a4c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4006, gbc.sp());
        EXPECT(0x9a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a4c));
        EXPECT(0x49, gbc.readMem(0x9a4d));
        // CB 49 010A
        gbc.setState(0xbda6, 0x29d1, 0x31a0, 0x635f, 0x4903, 0xeb6a, 0x0, 0x0);
        gbc.writeMem(0xbda6, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x29d1, gbc.sp());
        EXPECT(0xbda8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbda6));
        EXPECT(0x49, gbc.readMem(0xbda7));
        // CB 49 010B
        gbc.setState(0x4cdf, 0x4596, 0xa0b0, 0x982e, 0xa75f, 0xabd, 0x0, 0x0);
        gbc.writeMem(0x4cdf, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4596, gbc.sp());
        EXPECT(0x4ce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 010C
        gbc.setState(0xd543, 0x9368, 0xa30, 0xb06c, 0x77aa, 0x5e5b, 0x1, 0x1);
        gbc.writeMem(0xd543, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9368, gbc.sp());
        EXPECT(0xd545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd543));
        EXPECT(0x49, gbc.readMem(0xd544));
        // CB 49 010D
        gbc.setState(0x861f, 0x8550, 0x640, 0x4b66, 0xdb2d, 0x8e4c, 0x0, 0x1);
        gbc.writeMem(0x861f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8550, gbc.sp());
        EXPECT(0x8621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x861f));
        EXPECT(0x49, gbc.readMem(0x8620));
        // CB 49 010E
        gbc.setState(0x3d7d, 0x1984, 0x6f0, 0xa5e0, 0x8696, 0x34f3, 0x0, 0x0);
        gbc.writeMem(0x3d7d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1984, gbc.sp());
        EXPECT(0x3d7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 010F
        gbc.setState(0x6ab0, 0x1a3e, 0xa0c0, 0x77bf, 0xb22f, 0x3f3c, 0x1, 0x1);
        gbc.writeMem(0x6ab0, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1a3e, gbc.sp());
        EXPECT(0x6ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0110
        gbc.setState(0xe66b, 0x2105, 0x3480, 0x31eb, 0x90f8, 0x1e1, 0x1, 0x0);
        gbc.writeMem(0xe66b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2105, gbc.sp());
        EXPECT(0xe66d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe66b));
        EXPECT(0x49, gbc.readMem(0xe66c));
        // CB 49 0111
        gbc.setState(0x9ee0, 0x5cfc, 0x8c80, 0x60b, 0xb0cb, 0x1477, 0x1, 0x1);
        gbc.writeMem(0x9ee0, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5cfc, gbc.sp());
        EXPECT(0x9ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee0));
        EXPECT(0x49, gbc.readMem(0x9ee1));
        // CB 49 0112
        gbc.setState(0x9f73, 0x1d4c, 0x7d60, 0x4770, 0xfe68, 0x8f0a, 0x0, 0x1);
        gbc.writeMem(0x9f73, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1d4c, gbc.sp());
        EXPECT(0x9f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f73));
        EXPECT(0x49, gbc.readMem(0x9f74));
        // CB 49 0113
        gbc.setState(0x6ec0, 0x8d32, 0xb710, 0xbee1, 0x13bd, 0x23fd, 0x1, 0x1);
        gbc.writeMem(0x6ec0, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8d32, gbc.sp());
        EXPECT(0x6ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0114
        gbc.setState(0xfa8, 0x25d0, 0xddc0, 0xabab, 0xc39, 0xee90, 0x0, 0x1);
        gbc.writeMem(0xfa8, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x25d0, gbc.sp());
        EXPECT(0xfaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0115
        gbc.setState(0x3adf, 0xbef3, 0x7fb0, 0xe8e6, 0x2af3, 0x4493, 0x0, 0x1);
        gbc.writeMem(0x3adf, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xbef3, gbc.sp());
        EXPECT(0x3ae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0116
        gbc.setState(0x3c73, 0xdd19, 0x46d0, 0x7033, 0x682e, 0x97dd, 0x1, 0x0);
        gbc.writeMem(0x3c73, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdd19, gbc.sp());
        EXPECT(0x3c75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0117
        gbc.setState(0x76b8, 0x34a1, 0x7510, 0xee56, 0x745b, 0xb172, 0x0, 0x0);
        gbc.writeMem(0x76b8, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x34a1, gbc.sp());
        EXPECT(0x76ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0118
        gbc.setState(0xc392, 0x1a1e, 0x8150, 0x1fd0, 0x8fc3, 0x8972, 0x1, 0x0);
        gbc.writeMem(0xc392, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1a1e, gbc.sp());
        EXPECT(0xc394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc392));
        EXPECT(0x49, gbc.readMem(0xc393));
        // CB 49 0119
        gbc.setState(0xbe15, 0x3833, 0x2c30, 0x23a6, 0xb0d0, 0xcded, 0x0, 0x0);
        gbc.writeMem(0xbe15, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3833, gbc.sp());
        EXPECT(0xbe17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe15));
        EXPECT(0x49, gbc.readMem(0xbe16));
        // CB 49 011A
        gbc.setState(0xd2fe, 0x49a, 0x3540, 0x56b1, 0xb812, 0x4656, 0x1, 0x1);
        gbc.writeMem(0xd2fe, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x49a, gbc.sp());
        EXPECT(0xd300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2fe));
        EXPECT(0x49, gbc.readMem(0xd2ff));
        // CB 49 011B
        gbc.setState(0x6f31, 0x3b34, 0xed70, 0x57c6, 0x80cf, 0x1aa4, 0x1, 0x1);
        gbc.writeMem(0x6f31, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3b34, gbc.sp());
        EXPECT(0x6f33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 011D
        gbc.setState(0xeb35, 0x3187, 0xbd50, 0x258c, 0x8536, 0x2826, 0x0, 0x1);
        gbc.writeMem(0xeb35, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3187, gbc.sp());
        EXPECT(0xeb37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb35));
        EXPECT(0x49, gbc.readMem(0xeb36));
        // CB 49 011E
        gbc.setState(0x8a16, 0x7dc2, 0xf5a0, 0x7bcc, 0x2770, 0xab0a, 0x0, 0x0);
        gbc.writeMem(0x8a16, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7dc2, gbc.sp());
        EXPECT(0x8a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a16));
        EXPECT(0x49, gbc.readMem(0x8a17));
        // CB 49 011F
        gbc.setState(0x40c5, 0x446c, 0x96a0, 0x433e, 0xfd76, 0xe9ad, 0x0, 0x1);
        gbc.writeMem(0x40c5, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x446c, gbc.sp());
        EXPECT(0x40c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0120
        gbc.setState(0x33d6, 0xd3b3, 0xdea0, 0x77f7, 0x13fc, 0x14cd, 0x0, 0x0);
        gbc.writeMem(0x33d6, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd3b3, gbc.sp());
        EXPECT(0x33d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0121
        gbc.setState(0x5e2e, 0x5d44, 0x9d30, 0xc95f, 0x239, 0x801d, 0x0, 0x0);
        gbc.writeMem(0x5e2e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5d44, gbc.sp());
        EXPECT(0x5e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0122
        gbc.setState(0x8e2c, 0x2b56, 0x26f0, 0x8f84, 0x886a, 0x9950, 0x1, 0x0);
        gbc.writeMem(0x8e2c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2b56, gbc.sp());
        EXPECT(0x8e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e2c));
        EXPECT(0x49, gbc.readMem(0x8e2d));
        // CB 49 0124
        gbc.setState(0xc4f7, 0x970d, 0x660, 0xa5d1, 0x840c, 0xac3, 0x1, 0x0);
        gbc.writeMem(0xc4f7, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x970d, gbc.sp());
        EXPECT(0xc4f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f7));
        EXPECT(0x49, gbc.readMem(0xc4f8));
        // CB 49 0125
        gbc.setState(0x151e, 0x1847, 0xe0b0, 0xfef5, 0x9b1c, 0x1f16, 0x0, 0x1);
        gbc.writeMem(0x151e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1847, gbc.sp());
        EXPECT(0x1520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0126
        gbc.setState(0x2b67, 0xda84, 0x96b0, 0xb16c, 0x6bb8, 0x78fd, 0x0, 0x0);
        gbc.writeMem(0x2b67, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xda84, gbc.sp());
        EXPECT(0x2b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0127
        gbc.setState(0xdd69, 0xc9be, 0xf2a0, 0xc70f, 0xbca6, 0xe6c, 0x0, 0x0);
        gbc.writeMem(0xdd69, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc9be, gbc.sp());
        EXPECT(0xdd6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd69));
        EXPECT(0x49, gbc.readMem(0xdd6a));
        // CB 49 0128
        gbc.setState(0xd670, 0x95ef, 0x1f80, 0xcda0, 0xfee, 0xa44a, 0x0, 0x1);
        gbc.writeMem(0xd670, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x95ef, gbc.sp());
        EXPECT(0xd672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd670));
        EXPECT(0x49, gbc.readMem(0xd671));
        // CB 49 0129
        gbc.setState(0xc2b1, 0x374f, 0xe9f0, 0xd075, 0x41e4, 0x1d19, 0x1, 0x1);
        gbc.writeMem(0xc2b1, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x374f, gbc.sp());
        EXPECT(0xc2b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b1));
        EXPECT(0x49, gbc.readMem(0xc2b2));
        // CB 49 012A
        gbc.setState(0x7a2a, 0xfaa2, 0x13f0, 0x288a, 0x9c52, 0x1866, 0x1, 0x1);
        gbc.writeMem(0x7a2a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xfaa2, gbc.sp());
        EXPECT(0x7a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 012B
        gbc.setState(0x747a, 0x752a, 0x5320, 0xf800, 0x21b, 0x2eb7, 0x0, 0x1);
        gbc.writeMem(0x747a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x752a, gbc.sp());
        EXPECT(0x747c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 012C
        gbc.setState(0x9a6b, 0x889b, 0xe50, 0xe40a, 0x9761, 0x53d3, 0x0, 0x1);
        gbc.writeMem(0x9a6b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x889b, gbc.sp());
        EXPECT(0x9a6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a6b));
        EXPECT(0x49, gbc.readMem(0x9a6c));
        // CB 49 012D
        gbc.setState(0xb30a, 0xe47f, 0xa070, 0xdfa0, 0x4710, 0x8aa7, 0x0, 0x0);
        gbc.writeMem(0xb30a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe47f, gbc.sp());
        EXPECT(0xb30c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb30a));
        EXPECT(0x49, gbc.readMem(0xb30b));
        // CB 49 012E
        gbc.setState(0x72d9, 0x1af3, 0xf5b0, 0x1b98, 0x4f3f, 0x683c, 0x1, 0x0);
        gbc.writeMem(0x72d9, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1af3, gbc.sp());
        EXPECT(0x72db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 012F
        gbc.setState(0xa0db, 0x713b, 0x960, 0x19cf, 0x5173, 0x58b1, 0x1, 0x1);
        gbc.writeMem(0xa0db, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x713b, gbc.sp());
        EXPECT(0xa0dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0db));
        EXPECT(0x49, gbc.readMem(0xa0dc));
        // CB 49 0130
        gbc.setState(0x63da, 0x3ea6, 0xac20, 0xa1c5, 0x29de, 0xda1f, 0x1, 0x0);
        gbc.writeMem(0x63da, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3ea6, gbc.sp());
        EXPECT(0x63dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0131
        gbc.setState(0xc77, 0x2e16, 0xcb70, 0xc38f, 0xe817, 0x2304, 0x0, 0x1);
        gbc.writeMem(0xc77, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2e16, gbc.sp());
        EXPECT(0xc79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0132
        gbc.setState(0x28f1, 0x8172, 0x2fd0, 0xc839, 0xb120, 0x2d8c, 0x0, 0x1);
        gbc.writeMem(0x28f1, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8172, gbc.sp());
        EXPECT(0x28f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0133
        gbc.setState(0xc3b6, 0x6cc1, 0x7fb0, 0xb602, 0xfdaa, 0xdb88, 0x1, 0x1);
        gbc.writeMem(0xc3b6, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6cc1, gbc.sp());
        EXPECT(0xc3b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b6));
        EXPECT(0x49, gbc.readMem(0xc3b7));
        // CB 49 0134
        gbc.setState(0x3580, 0xd080, 0x13c0, 0x377e, 0xd92c, 0xa3fc, 0x0, 0x0);
        gbc.writeMem(0x3580, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd080, gbc.sp());
        EXPECT(0x3582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0135
        gbc.setState(0x5e0d, 0xe74f, 0x5b40, 0x58b3, 0x313d, 0x737e, 0x0, 0x0);
        gbc.writeMem(0x5e0d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe74f, gbc.sp());
        EXPECT(0x5e0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0136
        gbc.setState(0xcfbd, 0x2db1, 0xcc30, 0x2600, 0x9a22, 0x9f6b, 0x1, 0x1);
        gbc.writeMem(0xcfbd, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2db1, gbc.sp());
        EXPECT(0xcfbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfbd));
        EXPECT(0x49, gbc.readMem(0xcfbe));
        // CB 49 0137
        gbc.setState(0xbea, 0x68aa, 0x9cf0, 0x7f22, 0xc348, 0x54de, 0x1, 0x0);
        gbc.writeMem(0xbea, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x68aa, gbc.sp());
        EXPECT(0xbec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0138
        gbc.setState(0xb6fb, 0x5805, 0x31d0, 0x5672, 0x1c4e, 0x18b0, 0x1, 0x0);
        gbc.writeMem(0xb6fb, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5805, gbc.sp());
        EXPECT(0xb6fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6fb));
        EXPECT(0x49, gbc.readMem(0xb6fc));
        // CB 49 0139
        gbc.setState(0x8a82, 0x4e98, 0x8940, 0x1256, 0x61db, 0xbae9, 0x0, 0x0);
        gbc.writeMem(0x8a82, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4e98, gbc.sp());
        EXPECT(0x8a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a82));
        EXPECT(0x49, gbc.readMem(0x8a83));
        // CB 49 013A
        gbc.setState(0xe99c, 0x25f6, 0x9550, 0x6b0f, 0x3e13, 0xa935, 0x0, 0x0);
        gbc.writeMem(0xe99c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x25f6, gbc.sp());
        EXPECT(0xe99e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe99c));
        EXPECT(0x49, gbc.readMem(0xe99d));
        // CB 49 013B
        gbc.setState(0x2811, 0x5de1, 0x9f60, 0x499c, 0x767d, 0x1470, 0x0, 0x1);
        gbc.writeMem(0x2811, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5de1, gbc.sp());
        EXPECT(0x2813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 013C
        gbc.setState(0xdb8c, 0x5708, 0xa0b0, 0x4cea, 0x5803, 0xe858, 0x0, 0x1);
        gbc.writeMem(0xdb8c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5708, gbc.sp());
        EXPECT(0xdb8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb8c));
        EXPECT(0x49, gbc.readMem(0xdb8d));
        // CB 49 013D
        gbc.setState(0xa1ac, 0x3b6d, 0x72c0, 0x3111, 0x2d4b, 0xdda6, 0x0, 0x0);
        gbc.writeMem(0xa1ac, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3b6d, gbc.sp());
        EXPECT(0xa1ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ac));
        EXPECT(0x49, gbc.readMem(0xa1ad));
        // CB 49 0140
        gbc.setState(0x245b, 0xdbd7, 0x6a10, 0x5b6d, 0x2dbe, 0xf27e, 0x1, 0x1);
        gbc.writeMem(0x245b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xdbd7, gbc.sp());
        EXPECT(0x245d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0141
        gbc.setState(0x3500, 0xfbe, 0xeb00, 0xc17b, 0x5e1a, 0xd10a, 0x0, 0x1);
        gbc.writeMem(0x3500, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfbe, gbc.sp());
        EXPECT(0x3502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0142
        gbc.setState(0xca, 0x5fa7, 0x3410, 0x4eba, 0xccc, 0xca21, 0x0, 0x0);
        gbc.writeMem(0xca, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5fa7, gbc.sp());
        EXPECT(0xcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0143
        gbc.setState(0x7ca, 0xd5cf, 0xe70, 0x2e11, 0xd94c, 0xab43, 0x1, 0x1);
        gbc.writeMem(0x7ca, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd5cf, gbc.sp());
        EXPECT(0x7cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0144
        gbc.setState(0xd2f, 0xd20c, 0x8560, 0x4db9, 0x3f88, 0x4bae, 0x0, 0x0);
        gbc.writeMem(0xd2f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd20c, gbc.sp());
        EXPECT(0xd31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0145
        gbc.setState(0xbccf, 0xefc5, 0x2e90, 0xd3e0, 0x64e5, 0xd86, 0x0, 0x1);
        gbc.writeMem(0xbccf, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xefc5, gbc.sp());
        EXPECT(0xbcd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbccf));
        EXPECT(0x49, gbc.readMem(0xbcd0));
        // CB 49 0146
        gbc.setState(0xe267, 0xdf2b, 0x5f30, 0xbd50, 0x7422, 0x5067, 0x1, 0x1);
        gbc.writeMem(0xe267, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdf2b, gbc.sp());
        EXPECT(0xe269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe267));
        EXPECT(0x49, gbc.readMem(0xe268));
        // CB 49 0147
        gbc.setState(0x3683, 0x7a43, 0xd8c0, 0x6d93, 0x211, 0xbfd1, 0x1, 0x0);
        gbc.writeMem(0x3683, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7a43, gbc.sp());
        EXPECT(0x3685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0148
        gbc.setState(0xec1e, 0x603c, 0x3120, 0x50f8, 0x2a19, 0xa39c, 0x1, 0x0);
        gbc.writeMem(0xec1e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x603c, gbc.sp());
        EXPECT(0xec20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec1e));
        EXPECT(0x49, gbc.readMem(0xec1f));
        // CB 49 0149
        gbc.setState(0x2406, 0x1e85, 0x1d70, 0xb4df, 0xf809, 0x137a, 0x1, 0x0);
        gbc.writeMem(0x2406, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1e85, gbc.sp());
        EXPECT(0x2408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 014A
        gbc.setState(0x5562, 0x3607, 0x1cc0, 0x875b, 0xa436, 0x6da0, 0x1, 0x1);
        gbc.writeMem(0x5562, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3607, gbc.sp());
        EXPECT(0x5564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 014B
        gbc.setState(0x515f, 0x284e, 0x6400, 0xd202, 0x2bf2, 0x876a, 0x0, 0x1);
        gbc.writeMem(0x515f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x284e, gbc.sp());
        EXPECT(0x5161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 014C
        gbc.setState(0x3652, 0xd0d, 0x32c0, 0x531d, 0xb0b9, 0x66d6, 0x1, 0x1);
        gbc.writeMem(0x3652, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd0d, gbc.sp());
        EXPECT(0x3654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 014D
        gbc.setState(0xd914, 0xfdd9, 0x3400, 0xe76f, 0x5858, 0x3d43, 0x1, 0x0);
        gbc.writeMem(0xd914, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xfdd9, gbc.sp());
        EXPECT(0xd916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd914));
        EXPECT(0x49, gbc.readMem(0xd915));
        // CB 49 014E
        gbc.setState(0x2657, 0x15eb, 0xb550, 0xa400, 0x24b4, 0x77a0, 0x0, 0x0);
        gbc.writeMem(0x2657, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x15eb, gbc.sp());
        EXPECT(0x2659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 014F
        gbc.setState(0x2628, 0x7b75, 0x3400, 0x2167, 0x2a2c, 0x72ce, 0x0, 0x0);
        gbc.writeMem(0x2628, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7b75, gbc.sp());
        EXPECT(0x262a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0150
        gbc.setState(0xa8e4, 0x6acd, 0x7490, 0x6b3a, 0xdc17, 0x4061, 0x1, 0x1);
        gbc.writeMem(0xa8e4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6acd, gbc.sp());
        EXPECT(0xa8e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e4));
        EXPECT(0x49, gbc.readMem(0xa8e5));
        // CB 49 0151
        gbc.setState(0x3276, 0x10f, 0xe400, 0x72b5, 0xccde, 0xbe11, 0x1, 0x1);
        gbc.writeMem(0x3276, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x10f, gbc.sp());
        EXPECT(0x3278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0152
        gbc.setState(0xb626, 0xda7a, 0x9b70, 0x749e, 0xc637, 0xd0c8, 0x0, 0x0);
        gbc.writeMem(0xb626, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xda7a, gbc.sp());
        EXPECT(0xb628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb626));
        EXPECT(0x49, gbc.readMem(0xb627));
        // CB 49 0153
        gbc.setState(0x4b04, 0xb850, 0x78a0, 0xc2f0, 0x6d66, 0xe83f, 0x1, 0x0);
        gbc.writeMem(0x4b04, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb850, gbc.sp());
        EXPECT(0x4b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0154
        gbc.setState(0xee69, 0xc9b7, 0xbdf0, 0x11ee, 0x7224, 0xf12, 0x0, 0x1);
        gbc.writeMem(0xee69, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc9b7, gbc.sp());
        EXPECT(0xee6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee69));
        EXPECT(0x49, gbc.readMem(0xee6a));
        // CB 49 0155
        gbc.setState(0xbe6, 0x1f97, 0x9120, 0xdc34, 0x8c2e, 0x81f4, 0x1, 0x0);
        gbc.writeMem(0xbe6, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1f97, gbc.sp());
        EXPECT(0xbe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0156
        gbc.setState(0x19a2, 0xc9ab, 0x4f50, 0x1aff, 0xb9f1, 0x359c, 0x0, 0x1);
        gbc.writeMem(0x19a2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc9ab, gbc.sp());
        EXPECT(0x19a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0157
        gbc.setState(0xe5e3, 0x7897, 0x4de0, 0x7d83, 0x196, 0xeb5b, 0x1, 0x0);
        gbc.writeMem(0xe5e3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7897, gbc.sp());
        EXPECT(0xe5e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5e3));
        EXPECT(0x49, gbc.readMem(0xe5e4));
        // CB 49 0158
        gbc.setState(0xfe4, 0xb238, 0xd020, 0x9a16, 0x865f, 0x6ccd, 0x0, 0x1);
        gbc.writeMem(0xfe4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb238, gbc.sp());
        EXPECT(0xfe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 015A
        gbc.setState(0x440e, 0xb17c, 0x5800, 0xd4cc, 0x80c6, 0xc454, 0x1, 0x0);
        gbc.writeMem(0x440e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb17c, gbc.sp());
        EXPECT(0x4410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 015B
        gbc.setState(0x300a, 0xf248, 0xfdc0, 0x3355, 0x2a64, 0xfcf2, 0x1, 0x0);
        gbc.writeMem(0x300a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf248, gbc.sp());
        EXPECT(0x300c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 015C
        gbc.setState(0x961d, 0xc08f, 0x6000, 0x3f3c, 0xc827, 0x7404, 0x1, 0x1);
        gbc.writeMem(0x961d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc08f, gbc.sp());
        EXPECT(0x961f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x961d));
        EXPECT(0x49, gbc.readMem(0x961e));
        // CB 49 015D
        gbc.setState(0xd3fd, 0xf06d, 0x2400, 0x543b, 0xc4a9, 0x9569, 0x0, 0x1);
        gbc.writeMem(0xd3fd, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf06d, gbc.sp());
        EXPECT(0xd3ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3fd));
        EXPECT(0x49, gbc.readMem(0xd3fe));
        // CB 49 015E
        gbc.setState(0x939c, 0x95e6, 0xd6a0, 0x3e3c, 0x6bee, 0x7a24, 0x1, 0x1);
        gbc.writeMem(0x939c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x95e6, gbc.sp());
        EXPECT(0x939e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x939c));
        EXPECT(0x49, gbc.readMem(0x939d));
        // CB 49 015F
        gbc.setState(0x43f6, 0xff6, 0x45c0, 0xbc0, 0x7ee1, 0x6d36, 0x0, 0x1);
        gbc.writeMem(0x43f6, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xff6, gbc.sp());
        EXPECT(0x43f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0160
        gbc.setState(0x8a0f, 0x4f21, 0x9c80, 0x6482, 0x6122, 0xb5f4, 0x0, 0x0);
        gbc.writeMem(0x8a0f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4f21, gbc.sp());
        EXPECT(0x8a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a0f));
        EXPECT(0x49, gbc.readMem(0x8a10));
        // CB 49 0161
        gbc.setState(0x43bf, 0xfe61, 0x4860, 0x31a0, 0xfb34, 0x2508, 0x1, 0x1);
        gbc.writeMem(0x43bf, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xfe61, gbc.sp());
        EXPECT(0x43c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0162
        gbc.setState(0xb2e8, 0x3411, 0xa940, 0xb783, 0x12e1, 0xd2c5, 0x1, 0x0);
        gbc.writeMem(0xb2e8, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3411, gbc.sp());
        EXPECT(0xb2ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e8));
        EXPECT(0x49, gbc.readMem(0xb2e9));
        // CB 49 0163
        gbc.setState(0x988d, 0xc74, 0xba60, 0x1d63, 0x7811, 0xf82e, 0x1, 0x0);
        gbc.writeMem(0x988d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc74, gbc.sp());
        EXPECT(0x988f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x988d));
        EXPECT(0x49, gbc.readMem(0x988e));
        // CB 49 0164
        gbc.setState(0x5a8d, 0x9f10, 0x8d60, 0xe114, 0x6ad0, 0x304a, 0x1, 0x0);
        gbc.writeMem(0x5a8d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9f10, gbc.sp());
        EXPECT(0x5a8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0165
        gbc.setState(0x4b09, 0x755c, 0xd30, 0x6368, 0x71f8, 0x4c05, 0x1, 0x1);
        gbc.writeMem(0x4b09, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x755c, gbc.sp());
        EXPECT(0x4b0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0167
        gbc.setState(0xd242, 0x9910, 0x4d70, 0xad27, 0x4689, 0xcb2a, 0x0, 0x0);
        gbc.writeMem(0xd242, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9910, gbc.sp());
        EXPECT(0xd244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd242));
        EXPECT(0x49, gbc.readMem(0xd243));
        // CB 49 0168
        gbc.setState(0xd60a, 0x7179, 0x3fe0, 0x625d, 0x6d94, 0x1ef7, 0x0, 0x0);
        gbc.writeMem(0xd60a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7179, gbc.sp());
        EXPECT(0xd60c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd60a));
        EXPECT(0x49, gbc.readMem(0xd60b));
        // CB 49 0169
        gbc.setState(0xc93b, 0xcc99, 0x67d0, 0x58c5, 0x63d7, 0xba82, 0x0, 0x0);
        gbc.writeMem(0xc93b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcc99, gbc.sp());
        EXPECT(0xc93d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc93b));
        EXPECT(0x49, gbc.readMem(0xc93c));
        // CB 49 016A
        gbc.setState(0xd245, 0x82e9, 0x2d60, 0x7150, 0x5c58, 0xce6d, 0x0, 0x1);
        gbc.writeMem(0xd245, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x82e9, gbc.sp());
        EXPECT(0xd247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd245));
        EXPECT(0x49, gbc.readMem(0xd246));
        // CB 49 016B
        gbc.setState(0xeaa9, 0xd304, 0x6750, 0x7438, 0x663f, 0x8be4, 0x0, 0x1);
        gbc.writeMem(0xeaa9, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd304, gbc.sp());
        EXPECT(0xeaab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaa9));
        EXPECT(0x49, gbc.readMem(0xeaaa));
        // CB 49 016C
        gbc.setState(0x5f97, 0x62df, 0xa080, 0x91e5, 0x4f97, 0xffd4, 0x1, 0x0);
        gbc.writeMem(0x5f97, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x62df, gbc.sp());
        EXPECT(0x5f99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 016D
        gbc.setState(0xcb13, 0xffbf, 0x94f0, 0x5292, 0x1471, 0xbc8f, 0x1, 0x1);
        gbc.writeMem(0xcb13, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xffbf, gbc.sp());
        EXPECT(0xcb15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb13));
        EXPECT(0x49, gbc.readMem(0xcb14));
        // CB 49 016E
        gbc.setState(0xd96c, 0x666f, 0xc9d0, 0xd6b4, 0xbd53, 0x6b69, 0x0, 0x0);
        gbc.writeMem(0xd96c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x666f, gbc.sp());
        EXPECT(0xd96e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd96c));
        EXPECT(0x49, gbc.readMem(0xd96d));
        // CB 49 016F
        gbc.setState(0xb6ea, 0x85b6, 0x5180, 0x645e, 0x6ad, 0x30ce, 0x0, 0x1);
        gbc.writeMem(0xb6ea, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x85b6, gbc.sp());
        EXPECT(0xb6ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ea));
        EXPECT(0x49, gbc.readMem(0xb6eb));
        // CB 49 0170
        gbc.setState(0x194, 0x40be, 0x8400, 0xa2b9, 0x6e78, 0xc23e, 0x1, 0x0);
        gbc.writeMem(0x194, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x40be, gbc.sp());
        EXPECT(0x196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0172
        gbc.setState(0x7b2f, 0x7e1b, 0x4cf0, 0x1497, 0x3dd8, 0x7601, 0x1, 0x0);
        gbc.writeMem(0x7b2f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7e1b, gbc.sp());
        EXPECT(0x7b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0173
        gbc.setState(0xdac6, 0x16d3, 0xcdd0, 0x8566, 0xe14, 0x24bd, 0x1, 0x0);
        gbc.writeMem(0xdac6, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x16d3, gbc.sp());
        EXPECT(0xdac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac6));
        EXPECT(0x49, gbc.readMem(0xdac7));
        // CB 49 0174
        gbc.setState(0xdc3f, 0x70c6, 0xd4e0, 0x86d0, 0x759a, 0x804f, 0x1, 0x1);
        gbc.writeMem(0xdc3f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x70c6, gbc.sp());
        EXPECT(0xdc41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc3f));
        EXPECT(0x49, gbc.readMem(0xdc40));
        // CB 49 0176
        gbc.setState(0x2711, 0xbc8b, 0xacf0, 0xa9aa, 0xec9, 0x50c4, 0x1, 0x0);
        gbc.writeMem(0x2711, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbc8b, gbc.sp());
        EXPECT(0x2713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0177
        gbc.setState(0x8f2, 0x3f36, 0x9920, 0x5246, 0x74cc, 0xbcdf, 0x0, 0x1);
        gbc.writeMem(0x8f2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3f36, gbc.sp());
        EXPECT(0x8f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0178
        gbc.setState(0x12e5, 0x4371, 0xf090, 0xeacb, 0xdfae, 0x8ea9, 0x0, 0x0);
        gbc.writeMem(0x12e5, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4371, gbc.sp());
        EXPECT(0x12e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0179
        gbc.setState(0x8539, 0x3637, 0xd570, 0x3f9, 0xb28b, 0x5f32, 0x0, 0x0);
        gbc.writeMem(0x8539, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3637, gbc.sp());
        EXPECT(0x853b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8539));
        EXPECT(0x49, gbc.readMem(0x853a));
        // CB 49 017A
        gbc.setState(0x7d91, 0x54d0, 0x45b0, 0xa5ce, 0x3987, 0x8614, 0x1, 0x0);
        gbc.writeMem(0x7d91, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x54d0, gbc.sp());
        EXPECT(0x7d93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 017B
        gbc.setState(0xe888, 0x6180, 0x6af0, 0x581f, 0xe150, 0xf6e4, 0x0, 0x0);
        gbc.writeMem(0xe888, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6180, gbc.sp());
        EXPECT(0xe88a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe888));
        EXPECT(0x49, gbc.readMem(0xe889));
        // CB 49 017C
        gbc.setState(0x51e9, 0x44d6, 0x3ea0, 0x5b0a, 0x138b, 0xc1d5, 0x0, 0x1);
        gbc.writeMem(0x51e9, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x44d6, gbc.sp());
        EXPECT(0x51eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 017D
        gbc.setState(0xdbb, 0x8fbe, 0xd740, 0x7464, 0x5d67, 0xf052, 0x0, 0x0);
        gbc.writeMem(0xdbb, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8fbe, gbc.sp());
        EXPECT(0xdbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 017E
        gbc.setState(0xb7d8, 0x8bf0, 0x9f10, 0x8132, 0xb14a, 0x628f, 0x0, 0x1);
        gbc.writeMem(0xb7d8, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8bf0, gbc.sp());
        EXPECT(0xb7da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d8));
        EXPECT(0x49, gbc.readMem(0xb7d9));
        // CB 49 017F
        gbc.setState(0xbc1b, 0x6ee1, 0xbce0, 0x1adf, 0x78e8, 0xf17f, 0x1, 0x0);
        gbc.writeMem(0xbc1b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6ee1, gbc.sp());
        EXPECT(0xbc1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc1b));
        EXPECT(0x49, gbc.readMem(0xbc1c));
        // CB 49 0180
        gbc.setState(0xb455, 0x7dc2, 0x1210, 0xf3b9, 0x3ab6, 0xc1fc, 0x1, 0x0);
        gbc.writeMem(0xb455, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7dc2, gbc.sp());
        EXPECT(0xb457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb455));
        EXPECT(0x49, gbc.readMem(0xb456));
        // CB 49 0181
        gbc.setState(0x4e22, 0x10a, 0xb0c0, 0x1c92, 0x6ccc, 0x478c, 0x0, 0x1);
        gbc.writeMem(0x4e22, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x10a, gbc.sp());
        EXPECT(0x4e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0183
        gbc.setState(0x5732, 0xc289, 0xb470, 0x42df, 0x6920, 0xb34d, 0x0, 0x1);
        gbc.writeMem(0x5732, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc289, gbc.sp());
        EXPECT(0x5734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0184
        gbc.setState(0xa806, 0x8a5c, 0x11d0, 0xfc44, 0xcee1, 0x8725, 0x1, 0x0);
        gbc.writeMem(0xa806, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8a5c, gbc.sp());
        EXPECT(0xa808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa806));
        EXPECT(0x49, gbc.readMem(0xa807));
        // CB 49 0185
        gbc.setState(0x4905, 0x6e40, 0xb940, 0xd621, 0x6abd, 0x6ed0, 0x0, 0x1);
        gbc.writeMem(0x4905, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6e40, gbc.sp());
        EXPECT(0x4907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0186
        gbc.setState(0xe64a, 0xfe80, 0x82a0, 0x961e, 0xc890, 0xe249, 0x0, 0x1);
        gbc.writeMem(0xe64a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfe80, gbc.sp());
        EXPECT(0xe64c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe64a));
        EXPECT(0x49, gbc.readMem(0xe64b));
        // CB 49 0187
        gbc.setState(0xdb78, 0xead, 0x9050, 0xa62e, 0x9272, 0x5ab, 0x1, 0x1);
        gbc.writeMem(0xdb78, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xead, gbc.sp());
        EXPECT(0xdb7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb78));
        EXPECT(0x49, gbc.readMem(0xdb79));
        // CB 49 0188
        gbc.setState(0x4404, 0xfaf0, 0x7ef0, 0xf119, 0x8f9e, 0x312c, 0x0, 0x0);
        gbc.writeMem(0x4404, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfaf0, gbc.sp());
        EXPECT(0x4406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0189
        gbc.setState(0x9827, 0x1113, 0x9110, 0x8730, 0x5d9d, 0x8e99, 0x0, 0x0);
        gbc.writeMem(0x9827, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1113, gbc.sp());
        EXPECT(0x9829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9827));
        EXPECT(0x49, gbc.readMem(0x9828));
        // CB 49 018A
        gbc.setState(0x8349, 0xb39c, 0xcd50, 0xf31b, 0x7e80, 0x3e19, 0x0, 0x1);
        gbc.writeMem(0x8349, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb39c, gbc.sp());
        EXPECT(0x834b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8349));
        EXPECT(0x49, gbc.readMem(0x834a));
        // CB 49 018C
        gbc.setState(0x2f15, 0xfb91, 0x9cf0, 0x8cd2, 0xdaaf, 0xeea0, 0x0, 0x1);
        gbc.writeMem(0x2f15, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfb91, gbc.sp());
        EXPECT(0x2f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 018D
        gbc.setState(0x2d15, 0x7512, 0xdf00, 0xd074, 0xaf6c, 0x28dc, 0x0, 0x1);
        gbc.writeMem(0x2d15, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7512, gbc.sp());
        EXPECT(0x2d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 018E
        gbc.setState(0x58f, 0xa2c0, 0xb80, 0xe264, 0x1ae3, 0x3b16, 0x0, 0x0);
        gbc.writeMem(0x58f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa2c0, gbc.sp());
        EXPECT(0x591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 018F
        gbc.setState(0x7ede, 0xa8e6, 0x55d0, 0x47ae, 0x9165, 0x3a37, 0x0, 0x1);
        gbc.writeMem(0x7ede, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa8e6, gbc.sp());
        EXPECT(0x7ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0190
        gbc.setState(0xb74f, 0x1cc3, 0xbfa0, 0xe60, 0x412d, 0xf800, 0x1, 0x0);
        gbc.writeMem(0xb74f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1cc3, gbc.sp());
        EXPECT(0xb751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb74f));
        EXPECT(0x49, gbc.readMem(0xb750));
        // CB 49 0192
        gbc.setState(0x15bc, 0x327b, 0xdbc0, 0xd112, 0x4ae9, 0x7ca4, 0x1, 0x0);
        gbc.writeMem(0x15bc, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x327b, gbc.sp());
        EXPECT(0x15be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0193
        gbc.setState(0x48c1, 0xd321, 0xc0d0, 0x6319, 0x6f6d, 0x31a3, 0x1, 0x0);
        gbc.writeMem(0x48c1, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd321, gbc.sp());
        EXPECT(0x48c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0194
        gbc.setState(0x46a0, 0xcdcb, 0x2070, 0xab17, 0xfd1, 0x318, 0x0, 0x1);
        gbc.writeMem(0x46a0, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xcdcb, gbc.sp());
        EXPECT(0x46a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0195
        gbc.setState(0xdcbb, 0x6d0c, 0x8d90, 0xc606, 0x48f4, 0xee8b, 0x1, 0x0);
        gbc.writeMem(0xdcbb, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6d0c, gbc.sp());
        EXPECT(0xdcbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcbb));
        EXPECT(0x49, gbc.readMem(0xdcbc));
        // CB 49 0196
        gbc.setState(0x884a, 0x2d5f, 0x1e20, 0xd776, 0xfa6e, 0x5abc, 0x0, 0x0);
        gbc.writeMem(0x884a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2d5f, gbc.sp());
        EXPECT(0x884c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x884a));
        EXPECT(0x49, gbc.readMem(0x884b));
        // CB 49 0197
        gbc.setState(0x4ccf, 0x30ba, 0x3b0, 0x980, 0xaf65, 0x5fb0, 0x1, 0x1);
        gbc.writeMem(0x4ccf, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x30ba, gbc.sp());
        EXPECT(0x4cd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0198
        gbc.setState(0xfb6, 0x5b9, 0x3b30, 0xb4a8, 0xe471, 0x5a5, 0x1, 0x1);
        gbc.writeMem(0xfb6, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5b9, gbc.sp());
        EXPECT(0xfb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0199
        gbc.setState(0xb912, 0x33d3, 0x1e20, 0x4aa7, 0xc86c, 0x10b2, 0x0, 0x1);
        gbc.writeMem(0xb912, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x33d3, gbc.sp());
        EXPECT(0xb914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb912));
        EXPECT(0x49, gbc.readMem(0xb913));
        // CB 49 019A
        gbc.setState(0xa43d, 0x9ad1, 0xb430, 0xe7f1, 0xab1f, 0x6136, 0x0, 0x1);
        gbc.writeMem(0xa43d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9ad1, gbc.sp());
        EXPECT(0xa43f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa43d));
        EXPECT(0x49, gbc.readMem(0xa43e));
        // CB 49 019B
        gbc.setState(0x8e2d, 0xb438, 0xdc90, 0xda83, 0xebf2, 0x6713, 0x1, 0x1);
        gbc.writeMem(0x8e2d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb438, gbc.sp());
        EXPECT(0x8e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e2d));
        EXPECT(0x49, gbc.readMem(0x8e2e));
        // CB 49 019C
        gbc.setState(0x919, 0x9a9c, 0x55d0, 0x7af6, 0x2e3a, 0xfa5d, 0x0, 0x1);
        gbc.writeMem(0x919, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9a9c, gbc.sp());
        EXPECT(0x91b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 019D
        gbc.setState(0x9cea, 0xa5f6, 0x64b0, 0x3ad9, 0x66ab, 0x75ef, 0x1, 0x1);
        gbc.writeMem(0x9cea, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa5f6, gbc.sp());
        EXPECT(0x9cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cea));
        EXPECT(0x49, gbc.readMem(0x9ceb));
        // CB 49 019E
        gbc.setState(0xe07f, 0x2d8b, 0x48c0, 0xdbfc, 0x1a84, 0xe4f1, 0x0, 0x1);
        gbc.writeMem(0xe07f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2d8b, gbc.sp());
        EXPECT(0xe081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe07f));
        EXPECT(0x49, gbc.readMem(0xe080));
        // CB 49 019F
        gbc.setState(0x98c0, 0x411d, 0xacc0, 0xb30d, 0xd88a, 0xe5, 0x0, 0x0);
        gbc.writeMem(0x98c0, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x411d, gbc.sp());
        EXPECT(0x98c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c0));
        EXPECT(0x49, gbc.readMem(0x98c1));
        // CB 49 01A0
        gbc.setState(0x8cda, 0xdfd8, 0x5ec0, 0x4092, 0x784c, 0x21ee, 0x1, 0x0);
        gbc.writeMem(0x8cda, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdfd8, gbc.sp());
        EXPECT(0x8cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cda));
        EXPECT(0x49, gbc.readMem(0x8cdb));
        // CB 49 01A1
        gbc.setState(0xc3e1, 0xfd82, 0xe160, 0xea84, 0x9b67, 0x6edb, 0x1, 0x1);
        gbc.writeMem(0xc3e1, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xfd82, gbc.sp());
        EXPECT(0xc3e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3e1));
        EXPECT(0x49, gbc.readMem(0xc3e2));
        // CB 49 01A2
        gbc.setState(0xede1, 0x6700, 0xa660, 0x56f2, 0x9c06, 0x4009, 0x1, 0x1);
        gbc.writeMem(0xede1, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6700, gbc.sp());
        EXPECT(0xede3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xede1));
        EXPECT(0x49, gbc.readMem(0xede2));
        // CB 49 01A3
        gbc.setState(0x8a5c, 0xf4e4, 0x1e90, 0x63ea, 0x87c5, 0x9d8b, 0x1, 0x0);
        gbc.writeMem(0x8a5c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf4e4, gbc.sp());
        EXPECT(0x8a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a5c));
        EXPECT(0x49, gbc.readMem(0x8a5d));
        // CB 49 01A4
        gbc.setState(0x3015, 0xd4f5, 0x7430, 0x9ba8, 0x5ba9, 0xc1b3, 0x0, 0x1);
        gbc.writeMem(0x3015, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd4f5, gbc.sp());
        EXPECT(0x3017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 01A5
        gbc.setState(0xa665, 0x2229, 0x6d90, 0xadeb, 0x42d7, 0x22c6, 0x0, 0x0);
        gbc.writeMem(0xa665, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2229, gbc.sp());
        EXPECT(0xa667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa665));
        EXPECT(0x49, gbc.readMem(0xa666));
        // CB 49 01A6
        gbc.setState(0xaf9e, 0xf4dc, 0x1940, 0xae66, 0x2e0c, 0xe817, 0x1, 0x1);
        gbc.writeMem(0xaf9e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf4dc, gbc.sp());
        EXPECT(0xafa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf9e));
        EXPECT(0x49, gbc.readMem(0xaf9f));
        // CB 49 01A7
        gbc.setState(0x11a2, 0x584c, 0xbec0, 0x5641, 0x4efa, 0x71ee, 0x1, 0x0);
        gbc.writeMem(0x11a2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x584c, gbc.sp());
        EXPECT(0x11a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 01A8
        gbc.setState(0x40d3, 0x13f4, 0xa30, 0xe50, 0x5dce, 0xc193, 0x1, 0x0);
        gbc.writeMem(0x40d3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x13f4, gbc.sp());
        EXPECT(0x40d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 01A9
        gbc.setState(0x4c9f, 0x7808, 0x44a0, 0xbdcf, 0x28ff, 0xe3a6, 0x1, 0x1);
        gbc.writeMem(0x4c9f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7808, gbc.sp());
        EXPECT(0x4ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 01AA
        gbc.setState(0x84bc, 0x9fb4, 0xf410, 0x977b, 0x662a, 0x2bf, 0x1, 0x1);
        gbc.writeMem(0x84bc, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9fb4, gbc.sp());
        EXPECT(0x84be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84bc));
        EXPECT(0x49, gbc.readMem(0x84bd));
        // CB 49 01AB
        gbc.setState(0x3cf3, 0xa9fa, 0xe080, 0x7a57, 0x11cd, 0x9af8, 0x0, 0x0);
        gbc.writeMem(0x3cf3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa9fa, gbc.sp());
        EXPECT(0x3cf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 01AC
        gbc.setState(0xa1da, 0x4023, 0x9090, 0x893, 0x8c41, 0xe4ad, 0x0, 0x1);
        gbc.writeMem(0xa1da, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4023, gbc.sp());
        EXPECT(0xa1dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1da));
        EXPECT(0x49, gbc.readMem(0xa1db));
        // CB 49 01AD
        gbc.setState(0x9e76, 0xb200, 0xb0, 0x16ee, 0xdc41, 0x7d57, 0x1, 0x0);
        gbc.writeMem(0x9e76, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb200, gbc.sp());
        EXPECT(0x9e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e76));
        EXPECT(0x49, gbc.readMem(0x9e77));
        // CB 49 01AE
        gbc.setState(0xc788, 0x6f7e, 0xa9d0, 0xe1b5, 0x10a2, 0x34e1, 0x0, 0x1);
        gbc.writeMem(0xc788, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6f7e, gbc.sp());
        EXPECT(0xc78a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc788));
        EXPECT(0x49, gbc.readMem(0xc789));
        // CB 49 01AF
        gbc.setState(0x88d4, 0x8824, 0xf6b0, 0xfd0b, 0x7573, 0x57c3, 0x1, 0x0);
        gbc.writeMem(0x88d4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8824, gbc.sp());
        EXPECT(0x88d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88d4));
        EXPECT(0x49, gbc.readMem(0x88d5));
        // CB 49 01B0
        gbc.setState(0x73ca, 0xf80e, 0xfa40, 0x632f, 0x16b9, 0xc648, 0x0, 0x1);
        gbc.writeMem(0x73ca, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf80e, gbc.sp());
        EXPECT(0x73cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 01B1
        gbc.setState(0x85e6, 0xf9bf, 0x1940, 0x3dff, 0x122d, 0x6272, 0x0, 0x0);
        gbc.writeMem(0x85e6, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf9bf, gbc.sp());
        EXPECT(0x85e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e6));
        EXPECT(0x49, gbc.readMem(0x85e7));
        // CB 49 01B2
        gbc.setState(0x5359, 0xea49, 0x4540, 0x608f, 0xbd92, 0x6689, 0x0, 0x1);
        gbc.writeMem(0x5359, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xea49, gbc.sp());
        EXPECT(0x535b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 01B3
        gbc.setState(0xddd7, 0xa3bd, 0x6370, 0x117b, 0xc27f, 0xd48b, 0x0, 0x1);
        gbc.writeMem(0xddd7, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa3bd, gbc.sp());
        EXPECT(0xddd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddd7));
        EXPECT(0x49, gbc.readMem(0xddd8));
        // CB 49 01B4
        gbc.setState(0xbb1e, 0x60ae, 0x7610, 0x81f6, 0x4fab, 0xb6bd, 0x1, 0x1);
        gbc.writeMem(0xbb1e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x60ae, gbc.sp());
        EXPECT(0xbb20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb1e));
        EXPECT(0x49, gbc.readMem(0xbb1f));
        // CB 49 01B5
        gbc.setState(0xaa95, 0x4fa6, 0x9360, 0xf49a, 0xdeea, 0xbf4c, 0x0, 0x1);
        gbc.writeMem(0xaa95, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4fa6, gbc.sp());
        EXPECT(0xaa97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa95));
        EXPECT(0x49, gbc.readMem(0xaa96));
        // CB 49 01B6
        gbc.setState(0x12df, 0x4268, 0x3a50, 0x2919, 0x4daa, 0x11, 0x1, 0x1);
        gbc.writeMem(0x12df, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4268, gbc.sp());
        EXPECT(0x12e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 01B7
        gbc.setState(0x7840, 0x318a, 0xeca0, 0xa48b, 0x369a, 0x9512, 0x1, 0x1);
        gbc.writeMem(0x7840, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x318a, gbc.sp());
        EXPECT(0x7842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 01B8
        gbc.setState(0xa961, 0xde36, 0xf8b0, 0x7433, 0xc722, 0x7073, 0x1, 0x0);
        gbc.writeMem(0xa961, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xde36, gbc.sp());
        EXPECT(0xa963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa961));
        EXPECT(0x49, gbc.readMem(0xa962));
        // CB 49 01B9
        gbc.setState(0xea32, 0x8244, 0x4780, 0x616, 0xfa77, 0x3399, 0x1, 0x1);
        gbc.writeMem(0xea32, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8244, gbc.sp());
        EXPECT(0xea34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea32));
        EXPECT(0x49, gbc.readMem(0xea33));
        // CB 49 01BA
        gbc.setState(0xcfd2, 0xbcf7, 0x8af0, 0x228d, 0xdc65, 0x20b7, 0x1, 0x0);
        gbc.writeMem(0xcfd2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xbcf7, gbc.sp());
        EXPECT(0xcfd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd2));
        EXPECT(0x49, gbc.readMem(0xcfd3));
        // CB 49 01BB
        gbc.setState(0x5cde, 0x13f6, 0xf970, 0xea63, 0x6ee2, 0x5b64, 0x0, 0x0);
        gbc.writeMem(0x5cde, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x13f6, gbc.sp());
        EXPECT(0x5ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 01BC
        gbc.setState(0x2b3d, 0x8d30, 0xcdd0, 0x7bf9, 0xeef2, 0x7bf5, 0x0, 0x1);
        gbc.writeMem(0x2b3d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8d30, gbc.sp());
        EXPECT(0x2b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 01BD
        gbc.setState(0xe998, 0xed8b, 0xd50, 0xc5bd, 0x9a47, 0x3ba7, 0x0, 0x1);
        gbc.writeMem(0xe998, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xed8b, gbc.sp());
        EXPECT(0xe99a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe998));
        EXPECT(0x49, gbc.readMem(0xe999));
        // CB 49 01BE
        gbc.setState(0x8706, 0xef6a, 0x2920, 0x4b19, 0x331f, 0xd20f, 0x0, 0x1);
        gbc.writeMem(0x8706, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xef6a, gbc.sp());
        EXPECT(0x8708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8706));
        EXPECT(0x49, gbc.readMem(0x8707));
        // CB 49 01BF
        gbc.setState(0x15ea, 0x5cae, 0x9e80, 0x7600, 0x947c, 0xcc88, 0x0, 0x0);
        gbc.writeMem(0x15ea, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5cae, gbc.sp());
        EXPECT(0x15ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 01C0
        gbc.setState(0xd21b, 0x455f, 0x7990, 0x4597, 0x8778, 0x85a0, 0x0, 0x0);
        gbc.writeMem(0xd21b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x455f, gbc.sp());
        EXPECT(0xd21d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd21b));
        EXPECT(0x49, gbc.readMem(0xd21c));
        // CB 49 01C1
        gbc.setState(0x4e89, 0x133f, 0x9c80, 0xf816, 0xb3ce, 0x5ba4, 0x1, 0x0);
        gbc.writeMem(0x4e89, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x133f, gbc.sp());
        EXPECT(0x4e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 01C2
        gbc.setState(0x6fa5, 0x732b, 0x3d00, 0x6960, 0xac3f, 0x6dc6, 0x1, 0x0);
        gbc.writeMem(0x6fa5, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x732b, gbc.sp());
        EXPECT(0x6fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 01C3
        gbc.setState(0x9308, 0x2d9b, 0xfe80, 0xd0cc, 0x77d6, 0x763c, 0x1, 0x1);
        gbc.writeMem(0x9308, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2d9b, gbc.sp());
        EXPECT(0x930a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9308));
        EXPECT(0x49, gbc.readMem(0x9309));
        // CB 49 01C4
        gbc.setState(0xe932, 0x2192, 0x9e90, 0x381b, 0x351d, 0x404f, 0x1, 0x0);
        gbc.writeMem(0xe932, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2192, gbc.sp());
        EXPECT(0xe934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe932));
        EXPECT(0x49, gbc.readMem(0xe933));
        // CB 49 01C5
        gbc.setState(0xa13d, 0xc95a, 0x2380, 0xfcc1, 0x97fb, 0xd2a0, 0x1, 0x0);
        gbc.writeMem(0xa13d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc95a, gbc.sp());
        EXPECT(0xa13f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa13d));
        EXPECT(0x49, gbc.readMem(0xa13e));
        // CB 49 01C6
        gbc.setState(0x6165, 0xf767, 0x6210, 0x18ea, 0xf17c, 0x2e53, 0x1, 0x0);
        gbc.writeMem(0x6165, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf767, gbc.sp());
        EXPECT(0x6167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 01C7
        gbc.setState(0x2a9d, 0x4cce, 0x64a0, 0x6ab2, 0x6ae6, 0x585a, 0x0, 0x0);
        gbc.writeMem(0x2a9d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4cce, gbc.sp());
        EXPECT(0x2a9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 01C8
        gbc.setState(0xe5e2, 0x70cb, 0xfb60, 0x5ccb, 0xcfb5, 0xcefc, 0x1, 0x1);
        gbc.writeMem(0xe5e2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x70cb, gbc.sp());
        EXPECT(0xe5e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5e2));
        EXPECT(0x49, gbc.readMem(0xe5e3));
        // CB 49 01C9
        gbc.setState(0xaf0c, 0x61fe, 0xd230, 0xf6b3, 0x5dd3, 0x119a, 0x0, 0x1);
        gbc.writeMem(0xaf0c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x61fe, gbc.sp());
        EXPECT(0xaf0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf0c));
        EXPECT(0x49, gbc.readMem(0xaf0d));
        // CB 49 01CA
        gbc.setState(0x99ad, 0xe9dc, 0x48d0, 0x3641, 0xa393, 0xb84f, 0x0, 0x1);
        gbc.writeMem(0x99ad, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe9dc, gbc.sp());
        EXPECT(0x99af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ad));
        EXPECT(0x49, gbc.readMem(0x99ae));
        // CB 49 01CB
        gbc.setState(0x7ac6, 0xc007, 0x43a0, 0xf8c8, 0xbc75, 0xacbd, 0x0, 0x1);
        gbc.writeMem(0x7ac6, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc007, gbc.sp());
        EXPECT(0x7ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 01CC
        gbc.setState(0x3f, 0x85b7, 0xe660, 0x2436, 0xa28d, 0xb5d, 0x1, 0x0);
        gbc.writeMem(0x3f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x85b7, gbc.sp());
        EXPECT(0x41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 01CD
        gbc.setState(0x134b, 0xfbca, 0xef80, 0xeb4d, 0xa35e, 0x2289, 0x0, 0x0);
        gbc.writeMem(0x134b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfbca, gbc.sp());
        EXPECT(0x134d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 01CE
        gbc.setState(0x3cfd, 0xa6d5, 0xef10, 0x4f05, 0xb5f5, 0xecc8, 0x1, 0x1);
        gbc.writeMem(0x3cfd, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa6d5, gbc.sp());
        EXPECT(0x3cff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 01CF
        gbc.setState(0xbe, 0x8b43, 0x2870, 0x2edc, 0xd3d8, 0x11f4, 0x1, 0x0);
        gbc.writeMem(0xbe, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8b43, gbc.sp());
        EXPECT(0xc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 01D0
        gbc.setState(0x996f, 0x3aad, 0x9bd0, 0xc96c, 0x94c5, 0x8c84, 0x1, 0x0);
        gbc.writeMem(0x996f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3aad, gbc.sp());
        EXPECT(0x9971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x996f));
        EXPECT(0x49, gbc.readMem(0x9970));
        // CB 49 01D1
        gbc.setState(0xe454, 0x4548, 0xb2d0, 0xb7bd, 0xd59d, 0x50f8, 0x0, 0x1);
        gbc.writeMem(0xe454, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4548, gbc.sp());
        EXPECT(0xe456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe454));
        EXPECT(0x49, gbc.readMem(0xe455));
        // CB 49 01D2
        gbc.setState(0x2de9, 0xf0d8, 0x39d0, 0x68fa, 0x1c4, 0x675, 0x1, 0x0);
        gbc.writeMem(0x2de9, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf0d8, gbc.sp());
        EXPECT(0x2deb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 01D3
        gbc.setState(0xaec3, 0x31f5, 0x3a40, 0x1e27, 0x572a, 0x8c4d, 0x0, 0x1);
        gbc.writeMem(0xaec3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x31f5, gbc.sp());
        EXPECT(0xaec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec3));
        EXPECT(0x49, gbc.readMem(0xaec4));
        // CB 49 01D4
        gbc.setState(0xa0f8, 0x6f2e, 0x5a60, 0xa49, 0xb0c7, 0x8e60, 0x1, 0x0);
        gbc.writeMem(0xa0f8, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6f2e, gbc.sp());
        EXPECT(0xa0fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f8));
        EXPECT(0x49, gbc.readMem(0xa0f9));
        // CB 49 01D5
        gbc.setState(0x95c, 0xbff, 0x2ff0, 0x35c2, 0x8fa, 0x2a01, 0x1, 0x0);
        gbc.writeMem(0x95c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbff, gbc.sp());
        EXPECT(0x95e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 01D6
        gbc.setState(0x8183, 0xc362, 0x5b20, 0xd477, 0x85cb, 0x8a93, 0x1, 0x1);
        gbc.writeMem(0x8183, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc362, gbc.sp());
        EXPECT(0x8185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8183));
        EXPECT(0x49, gbc.readMem(0x8184));
        // CB 49 01D8
        gbc.setState(0xddb6, 0x56f9, 0x1930, 0x455e, 0xc225, 0xaf57, 0x1, 0x0);
        gbc.writeMem(0xddb6, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x56f9, gbc.sp());
        EXPECT(0xddb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddb6));
        EXPECT(0x49, gbc.readMem(0xddb7));
        // CB 49 01D9
        gbc.setState(0xd23c, 0xb3b8, 0x2e80, 0x9215, 0xa42f, 0xb8e2, 0x1, 0x0);
        gbc.writeMem(0xd23c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb3b8, gbc.sp());
        EXPECT(0xd23e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd23c));
        EXPECT(0x49, gbc.readMem(0xd23d));
        // CB 49 01DA
        gbc.setState(0xc247, 0xa4cc, 0xc060, 0xa210, 0x283c, 0xc1f0, 0x1, 0x0);
        gbc.writeMem(0xc247, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa4cc, gbc.sp());
        EXPECT(0xc249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc247));
        EXPECT(0x49, gbc.readMem(0xc248));
        // CB 49 01DB
        gbc.setState(0xaca0, 0x3d3b, 0x8310, 0x15cd, 0x524a, 0x6184, 0x1, 0x0);
        gbc.writeMem(0xaca0, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3d3b, gbc.sp());
        EXPECT(0xaca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaca0));
        EXPECT(0x49, gbc.readMem(0xaca1));
        // CB 49 01DC
        gbc.setState(0x87d6, 0xd18d, 0x3c70, 0x5559, 0x94ac, 0x72c9, 0x0, 0x1);
        gbc.writeMem(0x87d6, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd18d, gbc.sp());
        EXPECT(0x87d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d6));
        EXPECT(0x49, gbc.readMem(0x87d7));
        // CB 49 01DD
        gbc.setState(0x2395, 0x667f, 0x12a0, 0xfe8e, 0x99e4, 0xa981, 0x1, 0x0);
        gbc.writeMem(0x2395, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x667f, gbc.sp());
        EXPECT(0x2397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 01DE
        gbc.setState(0x6493, 0xec7c, 0x3a20, 0x8a02, 0x8960, 0x8576, 0x0, 0x1);
        gbc.writeMem(0x6493, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xec7c, gbc.sp());
        EXPECT(0x6495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 01DF
        gbc.setState(0xa0ef, 0xd4e0, 0x2bc0, 0xbf2e, 0x9d4c, 0xac8d, 0x1, 0x1);
        gbc.writeMem(0xa0ef, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd4e0, gbc.sp());
        EXPECT(0xa0f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ef));
        EXPECT(0x49, gbc.readMem(0xa0f0));
        // CB 49 01E0
        gbc.setState(0x985, 0xc395, 0x4ed0, 0x9156, 0x6216, 0x490a, 0x0, 0x0);
        gbc.writeMem(0x985, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc395, gbc.sp());
        EXPECT(0x987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 01E1
        gbc.setState(0xd2e5, 0xa574, 0xb210, 0xc4ab, 0x44b3, 0x1a72, 0x0, 0x1);
        gbc.writeMem(0xd2e5, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa574, gbc.sp());
        EXPECT(0xd2e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e5));
        EXPECT(0x49, gbc.readMem(0xd2e6));
        // CB 49 01E2
        gbc.setState(0xd3a4, 0xca8f, 0xc230, 0xefd7, 0x402b, 0xf557, 0x1, 0x0);
        gbc.writeMem(0xd3a4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xca8f, gbc.sp());
        EXPECT(0xd3a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3a4));
        EXPECT(0x49, gbc.readMem(0xd3a5));
        // CB 49 01E3
        gbc.setState(0xba8e, 0xd062, 0xbc30, 0x7e34, 0xc755, 0xc328, 0x1, 0x0);
        gbc.writeMem(0xba8e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd062, gbc.sp());
        EXPECT(0xba90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba8e));
        EXPECT(0x49, gbc.readMem(0xba8f));
        // CB 49 01E4
        gbc.setState(0x57e7, 0x8664, 0x8ee0, 0x5c1c, 0x35dc, 0x207f, 0x1, 0x1);
        gbc.writeMem(0x57e7, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8664, gbc.sp());
        EXPECT(0x57e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 01E5
        gbc.setState(0x6f9b, 0x3643, 0xd80, 0x7ecb, 0xbfab, 0x9302, 0x1, 0x0);
        gbc.writeMem(0x6f9b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3643, gbc.sp());
        EXPECT(0x6f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 01E6
        gbc.setState(0xa9fb, 0x1558, 0xe8f0, 0x673b, 0x80e2, 0xdfeb, 0x1, 0x0);
        gbc.writeMem(0xa9fb, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1558, gbc.sp());
        EXPECT(0xa9fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9fb));
        EXPECT(0x49, gbc.readMem(0xa9fc));
        // CB 49 01E7
        gbc.setState(0xc36c, 0x9b21, 0xc9c0, 0x5d34, 0x1922, 0x82a9, 0x0, 0x0);
        gbc.writeMem(0xc36c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9b21, gbc.sp());
        EXPECT(0xc36e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc36c));
        EXPECT(0x49, gbc.readMem(0xc36d));
        // CB 49 01E8
        gbc.setState(0xc5d1, 0x2088, 0x3520, 0x2077, 0x480, 0x5563, 0x1, 0x1);
        gbc.writeMem(0xc5d1, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2088, gbc.sp());
        EXPECT(0xc5d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d1));
        EXPECT(0x49, gbc.readMem(0xc5d2));
        // CB 49 01E9
        gbc.setState(0xe5f4, 0xca82, 0x3a80, 0x28dd, 0xa1cd, 0x5b80, 0x0, 0x0);
        gbc.writeMem(0xe5f4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xca82, gbc.sp());
        EXPECT(0xe5f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5f4));
        EXPECT(0x49, gbc.readMem(0xe5f5));
        // CB 49 01EA
        gbc.setState(0x368, 0xf202, 0x5980, 0xa948, 0x2f70, 0x41b3, 0x1, 0x1);
        gbc.writeMem(0x368, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf202, gbc.sp());
        EXPECT(0x36a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 01EB
        gbc.setState(0xe222, 0xc671, 0xf330, 0x910f, 0xf4d7, 0xf1a8, 0x0, 0x1);
        gbc.writeMem(0xe222, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc671, gbc.sp());
        EXPECT(0xe224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe222));
        EXPECT(0x49, gbc.readMem(0xe223));
        // CB 49 01EC
        gbc.setState(0x6d15, 0x2d09, 0x6320, 0x1972, 0x8fb8, 0xe191, 0x0, 0x0);
        gbc.writeMem(0x6d15, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2d09, gbc.sp());
        EXPECT(0x6d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 01ED
        gbc.setState(0x4167, 0x5638, 0xae30, 0x322d, 0x21a4, 0x35e9, 0x1, 0x1);
        gbc.writeMem(0x4167, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5638, gbc.sp());
        EXPECT(0x4169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 01EE
        gbc.setState(0xa0d2, 0x68f8, 0x4040, 0xfd3, 0x844a, 0xb515, 0x0, 0x1);
        gbc.writeMem(0xa0d2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x68f8, gbc.sp());
        EXPECT(0xa0d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d2));
        EXPECT(0x49, gbc.readMem(0xa0d3));
        // CB 49 01EF
        gbc.setState(0x19f9, 0x4d73, 0x11d0, 0xe05f, 0x439c, 0x524e, 0x1, 0x1);
        gbc.writeMem(0x19f9, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4d73, gbc.sp());
        EXPECT(0x19fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 01F1
        gbc.setState(0xe5d2, 0x942f, 0xac80, 0x3966, 0xe857, 0xe948, 0x0, 0x0);
        gbc.writeMem(0xe5d2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x942f, gbc.sp());
        EXPECT(0xe5d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d2));
        EXPECT(0x49, gbc.readMem(0xe5d3));
        // CB 49 01F2
        gbc.setState(0x3bd2, 0x2f8b, 0xdaa0, 0xc809, 0x7291, 0x7bcd, 0x0, 0x1);
        gbc.writeMem(0x3bd2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2f8b, gbc.sp());
        EXPECT(0x3bd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 01F3
        gbc.setState(0xdfe8, 0xb9ed, 0xc0f0, 0x38e1, 0xf5a4, 0x68f9, 0x0, 0x0);
        gbc.writeMem(0xdfe8, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb9ed, gbc.sp());
        EXPECT(0xdfea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfe8));
        EXPECT(0x49, gbc.readMem(0xdfe9));
        // CB 49 01F4
        gbc.setState(0x558, 0x5962, 0xe6f0, 0x5d45, 0x3a5f, 0xbbd8, 0x1, 0x1);
        gbc.writeMem(0x558, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5962, gbc.sp());
        EXPECT(0x55a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 01F5
        gbc.setState(0xe56e, 0xcffc, 0x6470, 0xcdf7, 0x25ee, 0x3021, 0x0, 0x1);
        gbc.writeMem(0xe56e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xcffc, gbc.sp());
        EXPECT(0xe570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe56e));
        EXPECT(0x49, gbc.readMem(0xe56f));
        // CB 49 01F6
        gbc.setState(0x4321, 0x4155, 0x5480, 0x57a0, 0x76c, 0xdd64, 0x0, 0x1);
        gbc.writeMem(0x4321, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4155, gbc.sp());
        EXPECT(0x4323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 01F7
        gbc.setState(0x69e, 0x6bf2, 0xa830, 0x9d7c, 0xb242, 0xc9ce, 0x1, 0x1);
        gbc.writeMem(0x69e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6bf2, gbc.sp());
        EXPECT(0x6a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 01F9
        gbc.setState(0x55cb, 0x8e05, 0x11d0, 0xb37, 0x2252, 0xee2d, 0x1, 0x1);
        gbc.writeMem(0x55cb, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8e05, gbc.sp());
        EXPECT(0x55cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 01FA
        gbc.setState(0x78d2, 0xbe81, 0xb070, 0xa416, 0xc2c5, 0x6d3d, 0x1, 0x0);
        gbc.writeMem(0x78d2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbe81, gbc.sp());
        EXPECT(0x78d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 01FB
        gbc.setState(0x4dc3, 0x9f53, 0x1010, 0x1439, 0xeb63, 0x128, 0x1, 0x0);
        gbc.writeMem(0x4dc3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9f53, gbc.sp());
        EXPECT(0x4dc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 01FC
        gbc.setState(0x937b, 0xcfaa, 0x5c90, 0xcf8d, 0xa4a4, 0xc4c, 0x0, 0x1);
        gbc.writeMem(0x937b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcfaa, gbc.sp());
        EXPECT(0x937d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x937b));
        EXPECT(0x49, gbc.readMem(0x937c));
        // CB 49 01FD
        gbc.setState(0xaff3, 0x2cf6, 0xd0a0, 0xf1b6, 0x8394, 0xc35e, 0x1, 0x0);
        gbc.writeMem(0xaff3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2cf6, gbc.sp());
        EXPECT(0xaff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff3));
        EXPECT(0x49, gbc.readMem(0xaff4));
        // CB 49 01FE
        gbc.setState(0x7751, 0xc855, 0x9120, 0x2ae2, 0x736a, 0x1ada, 0x1, 0x0);
        gbc.writeMem(0x7751, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc855, gbc.sp());
        EXPECT(0x7753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 01FF
        gbc.setState(0x4d8d, 0x4b63, 0x4d90, 0xc0ee, 0x267b, 0x9432, 0x1, 0x0);
        gbc.writeMem(0x4d8d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4b63, gbc.sp());
        EXPECT(0x4d8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0200
        gbc.setState(0xbbe6, 0x5a0b, 0x12c0, 0xa4aa, 0xf458, 0x64a6, 0x0, 0x1);
        gbc.writeMem(0xbbe6, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5a0b, gbc.sp());
        EXPECT(0xbbe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe6));
        EXPECT(0x49, gbc.readMem(0xbbe7));
        // CB 49 0201
        gbc.setState(0x7b02, 0x645b, 0x2230, 0xc23a, 0x2238, 0xf7fd, 0x1, 0x1);
        gbc.writeMem(0x7b02, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x645b, gbc.sp());
        EXPECT(0x7b04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0202
        gbc.setState(0xc732, 0x701a, 0xddd0, 0x87c0, 0x82be, 0xee7e, 0x0, 0x0);
        gbc.writeMem(0xc732, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x701a, gbc.sp());
        EXPECT(0xc734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc732));
        EXPECT(0x49, gbc.readMem(0xc733));
        // CB 49 0203
        gbc.setState(0x86fd, 0x5ee5, 0x84e0, 0xf95d, 0xa4b6, 0x6af4, 0x0, 0x1);
        gbc.writeMem(0x86fd, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5ee5, gbc.sp());
        EXPECT(0x86ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fd));
        EXPECT(0x49, gbc.readMem(0x86fe));
        // CB 49 0204
        gbc.setState(0xbbae, 0x1799, 0x1b20, 0x2ac2, 0x764b, 0x387c, 0x1, 0x1);
        gbc.writeMem(0xbbae, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1799, gbc.sp());
        EXPECT(0xbbb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbae));
        EXPECT(0x49, gbc.readMem(0xbbaf));
        // CB 49 0205
        gbc.setState(0x7ad2, 0x8671, 0x14b0, 0xf0ad, 0xf446, 0x11c7, 0x1, 0x1);
        gbc.writeMem(0x7ad2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8671, gbc.sp());
        EXPECT(0x7ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0206
        gbc.setState(0x2638, 0xa510, 0x120, 0xe377, 0xb7f1, 0xcb1e, 0x0, 0x1);
        gbc.writeMem(0x2638, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa510, gbc.sp());
        EXPECT(0x263a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0207
        gbc.setState(0x438e, 0x79cf, 0x62d0, 0xc072, 0xd1f3, 0xefff, 0x0, 0x0);
        gbc.writeMem(0x438e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x79cf, gbc.sp());
        EXPECT(0x4390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0208
        gbc.setState(0x9512, 0x7816, 0x8720, 0x8648, 0x50f0, 0x3fd7, 0x1, 0x0);
        gbc.writeMem(0x9512, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7816, gbc.sp());
        EXPECT(0x9514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9512));
        EXPECT(0x49, gbc.readMem(0x9513));
        // CB 49 0209
        gbc.setState(0x1c2c, 0xea4d, 0x2720, 0xf1a6, 0x7f7a, 0xdfa2, 0x1, 0x1);
        gbc.writeMem(0x1c2c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xea4d, gbc.sp());
        EXPECT(0x1c2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 020A
        gbc.setState(0xd4c5, 0x7232, 0x8620, 0xa7e3, 0xc5ba, 0x1ceb, 0x0, 0x0);
        gbc.writeMem(0xd4c5, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7232, gbc.sp());
        EXPECT(0xd4c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c5));
        EXPECT(0x49, gbc.readMem(0xd4c6));
        // CB 49 020C
        gbc.setState(0x2a5e, 0xcb51, 0x33d0, 0xfa07, 0xa168, 0x4b89, 0x1, 0x1);
        gbc.writeMem(0x2a5e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xcb51, gbc.sp());
        EXPECT(0x2a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 020D
        gbc.setState(0x285a, 0x723d, 0xfff0, 0x6361, 0x144d, 0x2558, 0x0, 0x1);
        gbc.writeMem(0x285a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x723d, gbc.sp());
        EXPECT(0x285c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 020E
        gbc.setState(0xeac0, 0xc8b4, 0xb580, 0x64e9, 0x6e9b, 0x9771, 0x1, 0x0);
        gbc.writeMem(0xeac0, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc8b4, gbc.sp());
        EXPECT(0xeac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac0));
        EXPECT(0x49, gbc.readMem(0xeac1));
        // CB 49 020F
        gbc.setState(0xd142, 0xb7a9, 0xae90, 0x5f47, 0xd2f, 0x81ce, 0x1, 0x1);
        gbc.writeMem(0xd142, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb7a9, gbc.sp());
        EXPECT(0xd144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd142));
        EXPECT(0x49, gbc.readMem(0xd143));
        // CB 49 0211
        gbc.setState(0xacb2, 0xcfc8, 0x8370, 0xc5c7, 0xfb48, 0x8743, 0x1, 0x0);
        gbc.writeMem(0xacb2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcfc8, gbc.sp());
        EXPECT(0xacb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacb2));
        EXPECT(0x49, gbc.readMem(0xacb3));
        // CB 49 0212
        gbc.setState(0x38b7, 0x38f, 0xb4d0, 0x22b5, 0xf940, 0xf788, 0x1, 0x0);
        gbc.writeMem(0x38b7, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x38f, gbc.sp());
        EXPECT(0x38b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0213
        gbc.setState(0x52f, 0x8240, 0x5ed0, 0xf255, 0x1fe9, 0xa1bf, 0x0, 0x1);
        gbc.writeMem(0x52f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8240, gbc.sp());
        EXPECT(0x531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0214
        gbc.setState(0x1361, 0xc505, 0x40f0, 0xf125, 0xeb7a, 0xefa8, 0x0, 0x1);
        gbc.writeMem(0x1361, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc505, gbc.sp());
        EXPECT(0x1363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0215
        gbc.setState(0xc38f, 0x14a2, 0x16e0, 0xcbe, 0xdb15, 0x596a, 0x1, 0x0);
        gbc.writeMem(0xc38f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x14a2, gbc.sp());
        EXPECT(0xc391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc38f));
        EXPECT(0x49, gbc.readMem(0xc390));
        // CB 49 0216
        gbc.setState(0xd1f1, 0x94a9, 0xa0b0, 0x748f, 0x830a, 0x48bb, 0x0, 0x1);
        gbc.writeMem(0xd1f1, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x94a9, gbc.sp());
        EXPECT(0xd1f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f1));
        EXPECT(0x49, gbc.readMem(0xd1f2));
        // CB 49 0217
        gbc.setState(0xd21, 0xb2a0, 0x32c0, 0xfcb1, 0x1e44, 0x7d3, 0x1, 0x1);
        gbc.writeMem(0xd21, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb2a0, gbc.sp());
        EXPECT(0xd23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0218
        gbc.setState(0x29d9, 0xe787, 0x1f0, 0xd7dc, 0xad79, 0x2d46, 0x0, 0x1);
        gbc.writeMem(0x29d9, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe787, gbc.sp());
        EXPECT(0x29db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0219
        gbc.setState(0x388d, 0x6be9, 0xa3b0, 0xcb72, 0x780c, 0xdde8, 0x0, 0x1);
        gbc.writeMem(0x388d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6be9, gbc.sp());
        EXPECT(0x388f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 021A
        gbc.setState(0x5bab, 0x2251, 0x3520, 0x51b8, 0x341e, 0x7a26, 0x1, 0x1);
        gbc.writeMem(0x5bab, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2251, gbc.sp());
        EXPECT(0x5bad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 021B
        gbc.setState(0xbf48, 0x1214, 0xc280, 0x1fa3, 0xc09a, 0xa7af, 0x1, 0x0);
        gbc.writeMem(0xbf48, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1214, gbc.sp());
        EXPECT(0xbf4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf48));
        EXPECT(0x49, gbc.readMem(0xbf49));
        // CB 49 021C
        gbc.setState(0xc8d, 0xcb8, 0x5470, 0xcb04, 0xf0ae, 0x75b8, 0x1, 0x1);
        gbc.writeMem(0xc8d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcb8, gbc.sp());
        EXPECT(0xc8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 021D
        gbc.setState(0x41d3, 0x461c, 0xd830, 0xd81d, 0x557, 0x76e2, 0x0, 0x1);
        gbc.writeMem(0x41d3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x461c, gbc.sp());
        EXPECT(0x41d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 021E
        gbc.setState(0x54b3, 0xdbf, 0xf5c0, 0xd693, 0x61e3, 0xf843, 0x1, 0x0);
        gbc.writeMem(0x54b3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xdbf, gbc.sp());
        EXPECT(0x54b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 021F
        gbc.setState(0x2d9d, 0x56d1, 0xef80, 0x4047, 0x420e, 0xbc4b, 0x1, 0x0);
        gbc.writeMem(0x2d9d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x56d1, gbc.sp());
        EXPECT(0x2d9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0220
        gbc.setState(0x255f, 0x82a4, 0x3f20, 0x6cef, 0x9939, 0x4511, 0x1, 0x1);
        gbc.writeMem(0x255f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x82a4, gbc.sp());
        EXPECT(0x2561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0221
        gbc.setState(0x7b08, 0xbbf9, 0x7be0, 0xc19a, 0x787f, 0x9bc1, 0x1, 0x0);
        gbc.writeMem(0x7b08, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xbbf9, gbc.sp());
        EXPECT(0x7b0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0222
        gbc.setState(0xe63d, 0x6dd8, 0x9560, 0x9e82, 0x1e0b, 0xa93f, 0x1, 0x1);
        gbc.writeMem(0xe63d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6dd8, gbc.sp());
        EXPECT(0xe63f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe63d));
        EXPECT(0x49, gbc.readMem(0xe63e));
        // CB 49 0223
        gbc.setState(0x9fe, 0x5a8e, 0x80, 0xd914, 0x934b, 0x490a, 0x1, 0x1);
        gbc.writeMem(0x9fe, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5a8e, gbc.sp());
        EXPECT(0xa00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0224
        gbc.setState(0x3a7c, 0xfdf9, 0x8ba0, 0x7d96, 0x5909, 0xe7cd, 0x0, 0x0);
        gbc.writeMem(0x3a7c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfdf9, gbc.sp());
        EXPECT(0x3a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0225
        gbc.setState(0x40ec, 0x1cdb, 0x5750, 0x51b, 0x97e5, 0xe120, 0x0, 0x0);
        gbc.writeMem(0x40ec, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1cdb, gbc.sp());
        EXPECT(0x40ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0226
        gbc.setState(0x3f1e, 0x7ab9, 0xeba0, 0x9b8c, 0x4aa8, 0x8717, 0x0, 0x1);
        gbc.writeMem(0x3f1e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7ab9, gbc.sp());
        EXPECT(0x3f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0227
        gbc.setState(0xce48, 0x55ca, 0x59d0, 0xfd4c, 0x7620, 0x6d08, 0x1, 0x0);
        gbc.writeMem(0xce48, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x55ca, gbc.sp());
        EXPECT(0xce4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce48));
        EXPECT(0x49, gbc.readMem(0xce49));
        // CB 49 0228
        gbc.setState(0x9bc9, 0x42b5, 0x9a10, 0x78e6, 0x5845, 0xe314, 0x0, 0x1);
        gbc.writeMem(0x9bc9, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x42b5, gbc.sp());
        EXPECT(0x9bcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bc9));
        EXPECT(0x49, gbc.readMem(0x9bca));
        // CB 49 0229
        gbc.setState(0x9d4c, 0xe64, 0x45f0, 0xdaec, 0xda8f, 0x3a83, 0x0, 0x0);
        gbc.writeMem(0x9d4c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe64, gbc.sp());
        EXPECT(0x9d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d4c));
        EXPECT(0x49, gbc.readMem(0x9d4d));
        // CB 49 022A
        gbc.setState(0x3db8, 0x7a8d, 0x5e80, 0x4188, 0x674, 0x382d, 0x1, 0x0);
        gbc.writeMem(0x3db8, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7a8d, gbc.sp());
        EXPECT(0x3dba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 022B
        gbc.setState(0xbcb, 0x989d, 0xada0, 0x18e1, 0xa5c0, 0x7a8, 0x0, 0x1);
        gbc.writeMem(0xbcb, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x989d, gbc.sp());
        EXPECT(0xbcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 022C
        gbc.setState(0x71d0, 0x1d5e, 0x8b50, 0xf813, 0x6150, 0x3be2, 0x1, 0x1);
        gbc.writeMem(0x71d0, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1d5e, gbc.sp());
        EXPECT(0x71d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 022D
        gbc.setState(0xdd7e, 0x1ab1, 0x64c0, 0x72fc, 0x264d, 0x1564, 0x1, 0x0);
        gbc.writeMem(0xdd7e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1ab1, gbc.sp());
        EXPECT(0xdd80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd7e));
        EXPECT(0x49, gbc.readMem(0xdd7f));
        // CB 49 022E
        gbc.setState(0xe21c, 0x2bc3, 0xb240, 0x770c, 0xd726, 0x7f3a, 0x1, 0x0);
        gbc.writeMem(0xe21c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2bc3, gbc.sp());
        EXPECT(0xe21e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe21c));
        EXPECT(0x49, gbc.readMem(0xe21d));
        // CB 49 0230
        gbc.setState(0x256c, 0xb05, 0x4ee0, 0xc7d8, 0x591, 0xade0, 0x0, 0x0);
        gbc.writeMem(0x256c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb05, gbc.sp());
        EXPECT(0x256e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0231
        gbc.setState(0x75b2, 0xb41f, 0x1250, 0x449e, 0x584f, 0x2c1a, 0x0, 0x0);
        gbc.writeMem(0x75b2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb41f, gbc.sp());
        EXPECT(0x75b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0232
        gbc.setState(0x1822, 0xcb7f, 0x6e60, 0x4579, 0x53e5, 0xc626, 0x1, 0x0);
        gbc.writeMem(0x1822, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcb7f, gbc.sp());
        EXPECT(0x1824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0233
        gbc.setState(0x84c2, 0x939e, 0xbb10, 0xd6bb, 0x25a7, 0xc23c, 0x1, 0x0);
        gbc.writeMem(0x84c2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x939e, gbc.sp());
        EXPECT(0x84c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c2));
        EXPECT(0x49, gbc.readMem(0x84c3));
        // CB 49 0234
        gbc.setState(0x1081, 0x4769, 0x4f00, 0xbd12, 0x7ae9, 0x22e9, 0x0, 0x1);
        gbc.writeMem(0x1081, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4769, gbc.sp());
        EXPECT(0x1083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0235
        gbc.setState(0x2dfc, 0x6e2f, 0xa190, 0xd600, 0xe10c, 0x4248, 0x0, 0x1);
        gbc.writeMem(0x2dfc, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6e2f, gbc.sp());
        EXPECT(0x2dfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0236
        gbc.setState(0x7923, 0x8639, 0x7f60, 0x1af1, 0xbe45, 0x85b4, 0x0, 0x1);
        gbc.writeMem(0x7923, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8639, gbc.sp());
        EXPECT(0x7925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0238
        gbc.setState(0x6dd2, 0xecf1, 0xad10, 0x14ec, 0x5b5d, 0xe895, 0x1, 0x1);
        gbc.writeMem(0x6dd2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xecf1, gbc.sp());
        EXPECT(0x6dd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0239
        gbc.setState(0x1f1c, 0x2a7e, 0x3680, 0xfd6a, 0xef69, 0x8a12, 0x1, 0x1);
        gbc.writeMem(0x1f1c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2a7e, gbc.sp());
        EXPECT(0x1f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 023A
        gbc.setState(0xacc4, 0x8231, 0x6030, 0x61a8, 0xeab0, 0x4122, 0x0, 0x1);
        gbc.writeMem(0xacc4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8231, gbc.sp());
        EXPECT(0xacc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc4));
        EXPECT(0x49, gbc.readMem(0xacc5));
        // CB 49 023B
        gbc.setState(0x2ea0, 0x391f, 0x4aa0, 0xf66f, 0xce9e, 0x90d7, 0x0, 0x0);
        gbc.writeMem(0x2ea0, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x391f, gbc.sp());
        EXPECT(0x2ea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 023C
        gbc.setState(0xfb4, 0x9199, 0xea30, 0xb87, 0xaba8, 0xc4b5, 0x0, 0x1);
        gbc.writeMem(0xfb4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9199, gbc.sp());
        EXPECT(0xfb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 023D
        gbc.setState(0x9242, 0x23c9, 0x8510, 0xd92a, 0xb71c, 0xd969, 0x1, 0x1);
        gbc.writeMem(0x9242, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x23c9, gbc.sp());
        EXPECT(0x9244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9242));
        EXPECT(0x49, gbc.readMem(0x9243));
        // CB 49 023E
        gbc.setState(0x6bc5, 0xd231, 0xe300, 0x3f3d, 0x314f, 0x2783, 0x1, 0x0);
        gbc.writeMem(0x6bc5, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd231, gbc.sp());
        EXPECT(0x6bc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 023F
        gbc.setState(0x6236, 0x2cbe, 0xb390, 0x78d1, 0x3ac4, 0xadc3, 0x0, 0x0);
        gbc.writeMem(0x6236, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2cbe, gbc.sp());
        EXPECT(0x6238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0240
        gbc.setState(0xa9cf, 0x1b49, 0x7d00, 0x1237, 0x7ee3, 0xd9e1, 0x0, 0x1);
        gbc.writeMem(0xa9cf, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1b49, gbc.sp());
        EXPECT(0xa9d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9cf));
        EXPECT(0x49, gbc.readMem(0xa9d0));
        // CB 49 0241
        gbc.setState(0xaf76, 0x8b31, 0xa920, 0xceea, 0x64f1, 0x85b8, 0x0, 0x1);
        gbc.writeMem(0xaf76, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8b31, gbc.sp());
        EXPECT(0xaf78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf76));
        EXPECT(0x49, gbc.readMem(0xaf77));
        // CB 49 0242
        gbc.setState(0x6e8, 0xc345, 0x6a00, 0x3379, 0x85ce, 0x7e6d, 0x0, 0x1);
        gbc.writeMem(0x6e8, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc345, gbc.sp());
        EXPECT(0x6ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0243
        gbc.setState(0x2269, 0x5394, 0xef60, 0x1532, 0x7c61, 0x52ab, 0x0, 0x0);
        gbc.writeMem(0x2269, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5394, gbc.sp());
        EXPECT(0x226b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0244
        gbc.setState(0x2e5, 0x2e44, 0xc2b0, 0xec31, 0xd9d9, 0x17cc, 0x0, 0x0);
        gbc.writeMem(0x2e5, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2e44, gbc.sp());
        EXPECT(0x2e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0245
        gbc.setState(0x9f06, 0x80e, 0xc360, 0x31c6, 0xbd5d, 0x7e65, 0x1, 0x0);
        gbc.writeMem(0x9f06, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x80e, gbc.sp());
        EXPECT(0x9f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f06));
        EXPECT(0x49, gbc.readMem(0x9f07));
        // CB 49 0246
        gbc.setState(0x7b03, 0x8d2f, 0xe090, 0xae8c, 0xd0f0, 0xea6b, 0x0, 0x1);
        gbc.writeMem(0x7b03, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8d2f, gbc.sp());
        EXPECT(0x7b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0247
        gbc.setState(0x3978, 0xf7db, 0x1230, 0xc1fb, 0x839, 0x160, 0x0, 0x1);
        gbc.writeMem(0x3978, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf7db, gbc.sp());
        EXPECT(0x397a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0248
        gbc.setState(0x4e40, 0x38dd, 0xcef0, 0x1661, 0x43f, 0x337d, 0x1, 0x0);
        gbc.writeMem(0x4e40, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x38dd, gbc.sp());
        EXPECT(0x4e42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0249
        gbc.setState(0xc178, 0x2502, 0x7660, 0xb20b, 0x370d, 0x7a25, 0x1, 0x0);
        gbc.writeMem(0xc178, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2502, gbc.sp());
        EXPECT(0xc17a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc178));
        EXPECT(0x49, gbc.readMem(0xc179));
        // CB 49 024A
        gbc.setState(0x8def, 0xc09a, 0x1c80, 0x2462, 0xb057, 0x3b16, 0x0, 0x0);
        gbc.writeMem(0x8def, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc09a, gbc.sp());
        EXPECT(0x8df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8def));
        EXPECT(0x49, gbc.readMem(0x8df0));
        // CB 49 024B
        gbc.setState(0x3025, 0xc471, 0x800, 0x4b69, 0x645f, 0x6e07, 0x0, 0x0);
        gbc.writeMem(0x3025, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc471, gbc.sp());
        EXPECT(0x3027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 024C
        gbc.setState(0x6b92, 0x7e07, 0x60, 0x7f7, 0x99d7, 0x445a, 0x1, 0x0);
        gbc.writeMem(0x6b92, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7e07, gbc.sp());
        EXPECT(0x6b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 024D
        gbc.setState(0x3f73, 0x3b90, 0x80e0, 0x8780, 0x5dbd, 0x3725, 0x0, 0x1);
        gbc.writeMem(0x3f73, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3b90, gbc.sp());
        EXPECT(0x3f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 024E
        gbc.setState(0x7de3, 0xd14, 0xd710, 0x5b51, 0xbf03, 0xc966, 0x1, 0x1);
        gbc.writeMem(0x7de3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd14, gbc.sp());
        EXPECT(0x7de5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 024F
        gbc.setState(0xcb00, 0x6609, 0x59f0, 0x47f5, 0xb4be, 0xe85e, 0x0, 0x1);
        gbc.writeMem(0xcb00, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6609, gbc.sp());
        EXPECT(0xcb02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb00));
        EXPECT(0x49, gbc.readMem(0xcb01));
        // CB 49 0250
        gbc.setState(0xc154, 0x6acf, 0x5370, 0xff1d, 0xf0d6, 0xc8e0, 0x1, 0x0);
        gbc.writeMem(0xc154, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6acf, gbc.sp());
        EXPECT(0xc156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc154));
        EXPECT(0x49, gbc.readMem(0xc155));
        // CB 49 0252
        gbc.setState(0x486b, 0x61fb, 0x2390, 0xfbfc, 0xa33d, 0x44f5, 0x0, 0x0);
        gbc.writeMem(0x486b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x61fb, gbc.sp());
        EXPECT(0x486d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0254
        gbc.setState(0xbfc3, 0x5f9e, 0x2930, 0x2584, 0x8412, 0x5ad2, 0x0, 0x1);
        gbc.writeMem(0xbfc3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5f9e, gbc.sp());
        EXPECT(0xbfc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc3));
        EXPECT(0x49, gbc.readMem(0xbfc4));
        // CB 49 0256
        gbc.setState(0x9995, 0xf066, 0x7370, 0xe649, 0xd54e, 0x7755, 0x1, 0x0);
        gbc.writeMem(0x9995, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf066, gbc.sp());
        EXPECT(0x9997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9995));
        EXPECT(0x49, gbc.readMem(0x9996));
        // CB 49 0257
        gbc.setState(0x481e, 0x8e62, 0x7940, 0xbd83, 0x197b, 0x5a89, 0x1, 0x0);
        gbc.writeMem(0x481e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8e62, gbc.sp());
        EXPECT(0x4820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0258
        gbc.setState(0x4f00, 0x46dd, 0x8d20, 0xb669, 0x8ebb, 0xc884, 0x0, 0x1);
        gbc.writeMem(0x4f00, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x46dd, gbc.sp());
        EXPECT(0x4f02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0259
        gbc.setState(0x2bea, 0xf829, 0x6940, 0xbbfc, 0x4c95, 0x4f76, 0x0, 0x0);
        gbc.writeMem(0x2bea, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf829, gbc.sp());
        EXPECT(0x2bec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 025B
        gbc.setState(0x93a4, 0x9889, 0x5a80, 0x33ed, 0x4d41, 0xf7a, 0x1, 0x0);
        gbc.writeMem(0x93a4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9889, gbc.sp());
        EXPECT(0x93a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a4));
        EXPECT(0x49, gbc.readMem(0x93a5));
        // CB 49 025C
        gbc.setState(0x6dc2, 0xcd29, 0xd630, 0x90bf, 0xf8e8, 0x2090, 0x0, 0x0);
        gbc.writeMem(0x6dc2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcd29, gbc.sp());
        EXPECT(0x6dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 025D
        gbc.setState(0x3f7e, 0xd602, 0x9360, 0x97fb, 0x268c, 0x3263, 0x1, 0x0);
        gbc.writeMem(0x3f7e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd602, gbc.sp());
        EXPECT(0x3f80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 025E
        gbc.setState(0x3413, 0xe8cf, 0x27a0, 0x87ae, 0x13c, 0xd979, 0x0, 0x1);
        gbc.writeMem(0x3413, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe8cf, gbc.sp());
        EXPECT(0x3415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 025F
        gbc.setState(0x94ff, 0x3283, 0xcaf0, 0x6e78, 0xf545, 0x3bed, 0x1, 0x1);
        gbc.writeMem(0x94ff, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3283, gbc.sp());
        EXPECT(0x9501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ff));
        EXPECT(0x49, gbc.readMem(0x9500));
        // CB 49 0260
        gbc.setState(0x1fb6, 0xc0da, 0x8020, 0x55c7, 0x27f6, 0xb95, 0x1, 0x1);
        gbc.writeMem(0x1fb6, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc0da, gbc.sp());
        EXPECT(0x1fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0261
        gbc.setState(0xc75, 0x1c9f, 0x4f10, 0x2889, 0x3dd4, 0x65f7, 0x1, 0x0);
        gbc.writeMem(0xc75, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1c9f, gbc.sp());
        EXPECT(0xc77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0262
        gbc.setState(0xae79, 0xca55, 0x61d0, 0x5b77, 0x8279, 0x4320, 0x0, 0x1);
        gbc.writeMem(0xae79, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xca55, gbc.sp());
        EXPECT(0xae7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae79));
        EXPECT(0x49, gbc.readMem(0xae7a));
        // CB 49 0263
        gbc.setState(0x6021, 0x7283, 0xfc00, 0xddb3, 0xbdda, 0x431b, 0x1, 0x0);
        gbc.writeMem(0x6021, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7283, gbc.sp());
        EXPECT(0x6023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0264
        gbc.setState(0xeb6a, 0xd842, 0x7300, 0xac0c, 0x28e8, 0x33f0, 0x1, 0x0);
        gbc.writeMem(0xeb6a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd842, gbc.sp());
        EXPECT(0xeb6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb6a));
        EXPECT(0x49, gbc.readMem(0xeb6b));
        // CB 49 0265
        gbc.setState(0x66a6, 0x46de, 0x16a0, 0x3d3a, 0x3817, 0xa8d8, 0x1, 0x0);
        gbc.writeMem(0x66a6, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x46de, gbc.sp());
        EXPECT(0x66a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0266
        gbc.setState(0x8014, 0xad34, 0xb9a0, 0xd6e2, 0xb48a, 0x1d78, 0x0, 0x1);
        gbc.writeMem(0x8014, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xad34, gbc.sp());
        EXPECT(0x8016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8014));
        EXPECT(0x49, gbc.readMem(0x8015));
        // CB 49 0267
        gbc.setState(0xc71a, 0x21a3, 0x5d70, 0x3e38, 0x481c, 0x16cd, 0x0, 0x1);
        gbc.writeMem(0xc71a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x21a3, gbc.sp());
        EXPECT(0xc71c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc71a));
        EXPECT(0x49, gbc.readMem(0xc71b));
        // CB 49 0268
        gbc.setState(0x7542, 0x30d8, 0xf9f0, 0xcec9, 0x642, 0x2e72, 0x0, 0x1);
        gbc.writeMem(0x7542, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x30d8, gbc.sp());
        EXPECT(0x7544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0269
        gbc.setState(0x40cb, 0x42bd, 0xad80, 0x17a3, 0x1dcd, 0xc43f, 0x1, 0x0);
        gbc.writeMem(0x40cb, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x42bd, gbc.sp());
        EXPECT(0x40cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 026A
        gbc.setState(0xeeff, 0x9ea7, 0xf560, 0xacdc, 0x5113, 0xe029, 0x0, 0x0);
        gbc.writeMem(0xeeff, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9ea7, gbc.sp());
        EXPECT(0xef01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeff));
        EXPECT(0x49, gbc.readMem(0xef00));
        // CB 49 026B
        gbc.setState(0x19b2, 0xdf47, 0xc6f0, 0x7c82, 0x7b7c, 0xfb7f, 0x1, 0x0);
        gbc.writeMem(0x19b2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xdf47, gbc.sp());
        EXPECT(0x19b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 026C
        gbc.setState(0x9a15, 0x9e7f, 0x1080, 0x8e21, 0x4567, 0x543d, 0x0, 0x1);
        gbc.writeMem(0x9a15, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9e7f, gbc.sp());
        EXPECT(0x9a17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a15));
        EXPECT(0x49, gbc.readMem(0x9a16));
        // CB 49 026D
        gbc.setState(0xbcdc, 0x7ee1, 0x3b80, 0xed1b, 0xe551, 0x8746, 0x0, 0x1);
        gbc.writeMem(0xbcdc, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7ee1, gbc.sp());
        EXPECT(0xbcde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcdc));
        EXPECT(0x49, gbc.readMem(0xbcdd));
        // CB 49 026E
        gbc.setState(0x18e3, 0x89ea, 0xd7c0, 0x34cf, 0xd72e, 0x739f, 0x1, 0x0);
        gbc.writeMem(0x18e3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x89ea, gbc.sp());
        EXPECT(0x18e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 026F
        gbc.setState(0x932b, 0xab81, 0x78c0, 0xaa23, 0xb95f, 0x1fa8, 0x0, 0x0);
        gbc.writeMem(0x932b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xab81, gbc.sp());
        EXPECT(0x932d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x932b));
        EXPECT(0x49, gbc.readMem(0x932c));
        // CB 49 0270
        gbc.setState(0x1bb8, 0x6cf5, 0x52f0, 0x1729, 0x7d71, 0xa203, 0x0, 0x0);
        gbc.writeMem(0x1bb8, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6cf5, gbc.sp());
        EXPECT(0x1bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0271
        gbc.setState(0x2d0d, 0xa1f9, 0xcf20, 0x8787, 0xa36f, 0xcf4b, 0x1, 0x0);
        gbc.writeMem(0x2d0d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa1f9, gbc.sp());
        EXPECT(0x2d0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0272
        gbc.setState(0x9b57, 0xd500, 0xb830, 0xc7e3, 0xc94d, 0xe055, 0x1, 0x0);
        gbc.writeMem(0x9b57, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd500, gbc.sp());
        EXPECT(0x9b59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b57));
        EXPECT(0x49, gbc.readMem(0x9b58));
        // CB 49 0273
        gbc.setState(0x55c7, 0xa52a, 0x2210, 0x36dc, 0xf800, 0xbcff, 0x0, 0x1);
        gbc.writeMem(0x55c7, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa52a, gbc.sp());
        EXPECT(0x55c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0274
        gbc.setState(0xaf12, 0x2563, 0x9670, 0x1b2c, 0x81a, 0xf255, 0x0, 0x0);
        gbc.writeMem(0xaf12, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2563, gbc.sp());
        EXPECT(0xaf14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf12));
        EXPECT(0x49, gbc.readMem(0xaf13));
        // CB 49 0275
        gbc.setState(0x94cb, 0x84cb, 0xcd30, 0x9401, 0x2bc0, 0xc13e, 0x0, 0x1);
        gbc.writeMem(0x94cb, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x84cb, gbc.sp());
        EXPECT(0x94cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94cb));
        EXPECT(0x49, gbc.readMem(0x94cc));
        // CB 49 0276
        gbc.setState(0x1f2c, 0x7cca, 0x7cd0, 0x317, 0xf3ae, 0x4f6b, 0x0, 0x1);
        gbc.writeMem(0x1f2c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7cca, gbc.sp());
        EXPECT(0x1f2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0277
        gbc.setState(0x5bce, 0xca54, 0x8710, 0xe12e, 0x236f, 0xf373, 0x0, 0x1);
        gbc.writeMem(0x5bce, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xca54, gbc.sp());
        EXPECT(0x5bd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0278
        gbc.setState(0x373d, 0x1c0e, 0x9e80, 0xc292, 0x8141, 0xc691, 0x1, 0x0);
        gbc.writeMem(0x373d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1c0e, gbc.sp());
        EXPECT(0x373f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0279
        gbc.setState(0x4383, 0x6ca4, 0x7dd0, 0xac0c, 0x4192, 0x9312, 0x1, 0x0);
        gbc.writeMem(0x4383, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6ca4, gbc.sp());
        EXPECT(0x4385, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 027A
        gbc.setState(0x28b6, 0xe487, 0xe250, 0x5bc7, 0x8079, 0xde99, 0x1, 0x0);
        gbc.writeMem(0x28b6, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe487, gbc.sp());
        EXPECT(0x28b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 027B
        gbc.setState(0x782, 0x35d, 0xeab0, 0x716f, 0xe74e, 0x1880, 0x1, 0x1);
        gbc.writeMem(0x782, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x35d, gbc.sp());
        EXPECT(0x784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 027C
        gbc.setState(0x6f20, 0x23b6, 0x9b20, 0x8bc2, 0x1de1, 0x984b, 0x1, 0x1);
        gbc.writeMem(0x6f20, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x23b6, gbc.sp());
        EXPECT(0x6f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 027E
        gbc.setState(0x7147, 0x73b2, 0x5540, 0x7fb0, 0xb5b9, 0x5dc, 0x0, 0x1);
        gbc.writeMem(0x7147, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x73b2, gbc.sp());
        EXPECT(0x7149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 027F
        gbc.setState(0x8791, 0x8550, 0x3d00, 0x57b9, 0x949e, 0xd35f, 0x0, 0x1);
        gbc.writeMem(0x8791, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8550, gbc.sp());
        EXPECT(0x8793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8791));
        EXPECT(0x49, gbc.readMem(0x8792));
        // CB 49 0280
        gbc.setState(0x6be3, 0xef36, 0x94a0, 0xde36, 0xb368, 0x8fe7, 0x0, 0x1);
        gbc.writeMem(0x6be3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xef36, gbc.sp());
        EXPECT(0x6be5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0281
        gbc.setState(0x5c19, 0xd21d, 0xcc90, 0x2409, 0x1b82, 0xd948, 0x1, 0x0);
        gbc.writeMem(0x5c19, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd21d, gbc.sp());
        EXPECT(0x5c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0282
        gbc.setState(0x3279, 0x9eb9, 0x3600, 0x237f, 0x35e6, 0x706c, 0x0, 0x1);
        gbc.writeMem(0x3279, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9eb9, gbc.sp());
        EXPECT(0x327b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0283
        gbc.setState(0xe77c, 0x226d, 0x6710, 0x2e75, 0xe079, 0x2f47, 0x0, 0x1);
        gbc.writeMem(0xe77c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x226d, gbc.sp());
        EXPECT(0xe77e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe77c));
        EXPECT(0x49, gbc.readMem(0xe77d));
        // CB 49 0284
        gbc.setState(0x392d, 0x2bad, 0x7e40, 0xf227, 0x1dbf, 0x73e, 0x0, 0x1);
        gbc.writeMem(0x392d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2bad, gbc.sp());
        EXPECT(0x392f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0285
        gbc.setState(0x1151, 0xfd2d, 0x9f50, 0xfe90, 0xa0b1, 0xf4a6, 0x0, 0x1);
        gbc.writeMem(0x1151, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfd2d, gbc.sp());
        EXPECT(0x1153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0286
        gbc.setState(0x5260, 0xe5a5, 0x82c0, 0xcb48, 0xdb4a, 0x67cb, 0x1, 0x0);
        gbc.writeMem(0x5260, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe5a5, gbc.sp());
        EXPECT(0x5262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0287
        gbc.setState(0xc3fb, 0xb5ab, 0x82d0, 0xadf8, 0x1a27, 0x7c09, 0x0, 0x1);
        gbc.writeMem(0xc3fb, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb5ab, gbc.sp());
        EXPECT(0xc3fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3fb));
        EXPECT(0x49, gbc.readMem(0xc3fc));
        // CB 49 0289
        gbc.setState(0xa27e, 0xdbe8, 0xab70, 0x4d06, 0xf22d, 0xeb70, 0x0, 0x0);
        gbc.writeMem(0xa27e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xdbe8, gbc.sp());
        EXPECT(0xa280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa27e));
        EXPECT(0x49, gbc.readMem(0xa27f));
        // CB 49 028A
        gbc.setState(0x54c7, 0x9ba6, 0x15a0, 0x6874, 0x3069, 0x96ba, 0x0, 0x0);
        gbc.writeMem(0x54c7, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9ba6, gbc.sp());
        EXPECT(0x54c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 028B
        gbc.setState(0x9be4, 0x707b, 0x6150, 0x3231, 0x5c0f, 0x30, 0x1, 0x0);
        gbc.writeMem(0x9be4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x707b, gbc.sp());
        EXPECT(0x9be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9be4));
        EXPECT(0x49, gbc.readMem(0x9be5));
        // CB 49 028C
        gbc.setState(0x64b2, 0x253d, 0xf680, 0x9ce0, 0x6776, 0xf107, 0x0, 0x0);
        gbc.writeMem(0x64b2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x253d, gbc.sp());
        EXPECT(0x64b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 028D
        gbc.setState(0xdb16, 0x30a4, 0xa950, 0x96fa, 0xe047, 0x175c, 0x1, 0x0);
        gbc.writeMem(0xdb16, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x30a4, gbc.sp());
        EXPECT(0xdb18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb16));
        EXPECT(0x49, gbc.readMem(0xdb17));
        // CB 49 028E
        gbc.setState(0x7822, 0xe2b6, 0x4900, 0xdc35, 0x38f0, 0xcbc4, 0x1, 0x1);
        gbc.writeMem(0x7822, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe2b6, gbc.sp());
        EXPECT(0x7824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 028F
        gbc.setState(0x86f7, 0x480, 0x8670, 0x8951, 0xf532, 0x98a1, 0x0, 0x0);
        gbc.writeMem(0x86f7, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x480, gbc.sp());
        EXPECT(0x86f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f7));
        EXPECT(0x49, gbc.readMem(0x86f8));
        // CB 49 0290
        gbc.setState(0x63b7, 0xc4fc, 0x60d0, 0xdcb2, 0xa00e, 0xdec6, 0x1, 0x0);
        gbc.writeMem(0x63b7, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc4fc, gbc.sp());
        EXPECT(0x63b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0291
        gbc.setState(0xc0d3, 0xcbcf, 0x6c60, 0xb7b6, 0xdb7, 0x7ab2, 0x0, 0x1);
        gbc.writeMem(0xc0d3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xcbcf, gbc.sp());
        EXPECT(0xc0d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0d3));
        EXPECT(0x49, gbc.readMem(0xc0d4));
        // CB 49 0292
        gbc.setState(0x9b3, 0x8d20, 0x8460, 0x47a8, 0xbd5d, 0x1dfd, 0x1, 0x0);
        gbc.writeMem(0x9b3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8d20, gbc.sp());
        EXPECT(0x9b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0293
        gbc.setState(0xabd4, 0x6332, 0xe820, 0x72e6, 0xc023, 0x6d4d, 0x0, 0x1);
        gbc.writeMem(0xabd4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6332, gbc.sp());
        EXPECT(0xabd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd4));
        EXPECT(0x49, gbc.readMem(0xabd5));
        // CB 49 0294
        gbc.setState(0xc55a, 0xf9c3, 0xb6c0, 0xa76f, 0xf1e5, 0xdbec, 0x0, 0x0);
        gbc.writeMem(0xc55a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf9c3, gbc.sp());
        EXPECT(0xc55c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc55a));
        EXPECT(0x49, gbc.readMem(0xc55b));
        // CB 49 0296
        gbc.setState(0xb9fa, 0x2c91, 0x3f00, 0x7922, 0xe1d3, 0x9bb, 0x1, 0x0);
        gbc.writeMem(0xb9fa, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2c91, gbc.sp());
        EXPECT(0xb9fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9fa));
        EXPECT(0x49, gbc.readMem(0xb9fb));
        // CB 49 0297
        gbc.setState(0x8776, 0x5fc5, 0xba30, 0xc0c7, 0xd88e, 0xa7ca, 0x1, 0x1);
        gbc.writeMem(0x8776, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5fc5, gbc.sp());
        EXPECT(0x8778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8776));
        EXPECT(0x49, gbc.readMem(0x8777));
        // CB 49 0298
        gbc.setState(0x635, 0xc248, 0x7a00, 0x4fd4, 0x3d63, 0x9d1f, 0x0, 0x0);
        gbc.writeMem(0x635, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc248, gbc.sp());
        EXPECT(0x637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0299
        gbc.setState(0xc09b, 0x93e2, 0xd010, 0xc9fb, 0xd6fc, 0x8189, 0x0, 0x0);
        gbc.writeMem(0xc09b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x93e2, gbc.sp());
        EXPECT(0xc09d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc09b));
        EXPECT(0x49, gbc.readMem(0xc09c));
        // CB 49 029A
        gbc.setState(0xbac4, 0x4bf, 0xde20, 0x4f1d, 0xfda8, 0xffd9, 0x0, 0x1);
        gbc.writeMem(0xbac4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4bf, gbc.sp());
        EXPECT(0xbac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac4));
        EXPECT(0x49, gbc.readMem(0xbac5));
        // CB 49 029B
        gbc.setState(0xb38e, 0x2aa6, 0x6a30, 0xa873, 0x162c, 0xe701, 0x0, 0x0);
        gbc.writeMem(0xb38e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2aa6, gbc.sp());
        EXPECT(0xb390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb38e));
        EXPECT(0x49, gbc.readMem(0xb38f));
        // CB 49 029C
        gbc.setState(0x34f4, 0x7f7c, 0x62b0, 0x5470, 0xaab8, 0x47fc, 0x0, 0x0);
        gbc.writeMem(0x34f4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7f7c, gbc.sp());
        EXPECT(0x34f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 029D
        gbc.setState(0x29dc, 0xcd63, 0x2f40, 0xfccc, 0x9184, 0x836f, 0x1, 0x0);
        gbc.writeMem(0x29dc, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcd63, gbc.sp());
        EXPECT(0x29de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 029E
        gbc.setState(0x6816, 0xca3b, 0x5430, 0x7c67, 0x3a3d, 0x6cee, 0x0, 0x1);
        gbc.writeMem(0x6816, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xca3b, gbc.sp());
        EXPECT(0x6818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 029F
        gbc.setState(0xdef4, 0x3616, 0x1070, 0x651c, 0xcfcf, 0xaabf, 0x0, 0x1);
        gbc.writeMem(0xdef4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3616, gbc.sp());
        EXPECT(0xdef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdef4));
        EXPECT(0x49, gbc.readMem(0xdef5));
        // CB 49 02A0
        gbc.setState(0x433f, 0xa336, 0xa50, 0x2746, 0x15a2, 0x9d9, 0x1, 0x0);
        gbc.writeMem(0x433f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa336, gbc.sp());
        EXPECT(0x4341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 02A1
        gbc.setState(0xdce6, 0xace0, 0x3120, 0x1dbf, 0x6a4f, 0x905c, 0x0, 0x1);
        gbc.writeMem(0xdce6, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xace0, gbc.sp());
        EXPECT(0xdce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdce6));
        EXPECT(0x49, gbc.readMem(0xdce7));
        // CB 49 02A2
        gbc.setState(0x9ebf, 0x9880, 0x8b00, 0xe553, 0x689e, 0x4a20, 0x0, 0x0);
        gbc.writeMem(0x9ebf, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9880, gbc.sp());
        EXPECT(0x9ec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ebf));
        EXPECT(0x49, gbc.readMem(0x9ec0));
        // CB 49 02A3
        gbc.setState(0xb50b, 0x721e, 0x52b0, 0x8218, 0xb1c4, 0xecaa, 0x1, 0x0);
        gbc.writeMem(0xb50b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x721e, gbc.sp());
        EXPECT(0xb50d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb50b));
        EXPECT(0x49, gbc.readMem(0xb50c));
        // CB 49 02A4
        gbc.setState(0x122a, 0xb51d, 0xb2a0, 0x411e, 0x70b6, 0x4fef, 0x0, 0x0);
        gbc.writeMem(0x122a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb51d, gbc.sp());
        EXPECT(0x122c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 02A5
        gbc.setState(0xe036, 0x2170, 0x38a0, 0x1e6d, 0xdcbe, 0x5131, 0x1, 0x1);
        gbc.writeMem(0xe036, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2170, gbc.sp());
        EXPECT(0xe038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe036));
        EXPECT(0x49, gbc.readMem(0xe037));
        // CB 49 02A6
        gbc.setState(0xea15, 0xdcb3, 0x35b0, 0xee0c, 0x4eb3, 0xa812, 0x1, 0x1);
        gbc.writeMem(0xea15, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdcb3, gbc.sp());
        EXPECT(0xea17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea15));
        EXPECT(0x49, gbc.readMem(0xea16));
        // CB 49 02A7
        gbc.setState(0xa497, 0xdb8e, 0x23f0, 0x942, 0x27e, 0xdaec, 0x1, 0x1);
        gbc.writeMem(0xa497, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdb8e, gbc.sp());
        EXPECT(0xa499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa497));
        EXPECT(0x49, gbc.readMem(0xa498));
        // CB 49 02A8
        gbc.setState(0xb380, 0x13d0, 0x60e0, 0xcb4c, 0xe060, 0x8e59, 0x1, 0x1);
        gbc.writeMem(0xb380, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x13d0, gbc.sp());
        EXPECT(0xb382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb380));
        EXPECT(0x49, gbc.readMem(0xb381));
        // CB 49 02A9
        gbc.setState(0x9fa2, 0x1171, 0xad50, 0x2825, 0x92c2, 0xd8c7, 0x0, 0x0);
        gbc.writeMem(0x9fa2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1171, gbc.sp());
        EXPECT(0x9fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fa2));
        EXPECT(0x49, gbc.readMem(0x9fa3));
        // CB 49 02AA
        gbc.setState(0xc4ed, 0x3166, 0x7c20, 0x47fb, 0xb70e, 0xc2bf, 0x1, 0x1);
        gbc.writeMem(0xc4ed, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3166, gbc.sp());
        EXPECT(0xc4ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ed));
        EXPECT(0x49, gbc.readMem(0xc4ee));
        // CB 49 02AB
        gbc.setState(0x84e4, 0x70a8, 0xc390, 0xc3f1, 0x28a2, 0xfda9, 0x1, 0x0);
        gbc.writeMem(0x84e4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x70a8, gbc.sp());
        EXPECT(0x84e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e4));
        EXPECT(0x49, gbc.readMem(0x84e5));
        // CB 49 02AC
        gbc.setState(0x611c, 0xef91, 0xf0f0, 0x7ae3, 0x90a3, 0xca95, 0x1, 0x0);
        gbc.writeMem(0x611c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xef91, gbc.sp());
        EXPECT(0x611e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 02AD
        gbc.setState(0xa9d2, 0xf19a, 0x97c0, 0x362, 0x3b5a, 0x609a, 0x0, 0x0);
        gbc.writeMem(0xa9d2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf19a, gbc.sp());
        EXPECT(0xa9d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9d2));
        EXPECT(0x49, gbc.readMem(0xa9d3));
        // CB 49 02AE
        gbc.setState(0x799f, 0x152d, 0xe7e0, 0x57b1, 0x6893, 0x4dd4, 0x1, 0x1);
        gbc.writeMem(0x799f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x152d, gbc.sp());
        EXPECT(0x79a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 02AF
        gbc.setState(0x4017, 0x64cf, 0xe520, 0xf1a9, 0x24f4, 0x899a, 0x1, 0x0);
        gbc.writeMem(0x4017, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x64cf, gbc.sp());
        EXPECT(0x4019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 02B0
        gbc.setState(0xe091, 0x4b18, 0x9830, 0x33ee, 0xd81e, 0xb2, 0x1, 0x0);
        gbc.writeMem(0xe091, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4b18, gbc.sp());
        EXPECT(0xe093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe091));
        EXPECT(0x49, gbc.readMem(0xe092));
        // CB 49 02B1
        gbc.setState(0xb53c, 0xf817, 0xc770, 0xad96, 0xf051, 0x7f2e, 0x0, 0x0);
        gbc.writeMem(0xb53c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf817, gbc.sp());
        EXPECT(0xb53e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb53c));
        EXPECT(0x49, gbc.readMem(0xb53d));
        // CB 49 02B2
        gbc.setState(0xb68c, 0x5803, 0x8e10, 0x8596, 0x7c0c, 0x5cb8, 0x0, 0x1);
        gbc.writeMem(0xb68c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5803, gbc.sp());
        EXPECT(0xb68e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb68c));
        EXPECT(0x49, gbc.readMem(0xb68d));
        // CB 49 02B4
        gbc.setState(0x7dcb, 0x3684, 0x5a70, 0xb62e, 0xfc9b, 0x9700, 0x0, 0x0);
        gbc.writeMem(0x7dcb, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3684, gbc.sp());
        EXPECT(0x7dcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 02B5
        gbc.setState(0x7c1c, 0x8d2c, 0x6610, 0x5b3, 0x39cb, 0x1fe, 0x1, 0x0);
        gbc.writeMem(0x7c1c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8d2c, gbc.sp());
        EXPECT(0x7c1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 02B6
        gbc.setState(0x1de0, 0xdcfd, 0x2f50, 0x600e, 0x4612, 0x9058, 0x1, 0x0);
        gbc.writeMem(0x1de0, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xdcfd, gbc.sp());
        EXPECT(0x1de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 02B7
        gbc.setState(0x6801, 0x31f3, 0xd9f0, 0x3892, 0x8d4e, 0xc525, 0x0, 0x0);
        gbc.writeMem(0x6801, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x31f3, gbc.sp());
        EXPECT(0x6803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 02B8
        gbc.setState(0xadf3, 0xb1dc, 0x41f0, 0x6c59, 0xc79a, 0xaa8c, 0x0, 0x0);
        gbc.writeMem(0xadf3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb1dc, gbc.sp());
        EXPECT(0xadf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf3));
        EXPECT(0x49, gbc.readMem(0xadf4));
        // CB 49 02B9
        gbc.setState(0xa5f2, 0xf240, 0x48f0, 0xa277, 0x4c9d, 0xa226, 0x1, 0x0);
        gbc.writeMem(0xa5f2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf240, gbc.sp());
        EXPECT(0xa5f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f2));
        EXPECT(0x49, gbc.readMem(0xa5f3));
        // CB 49 02BB
        gbc.setState(0x103, 0x2aca, 0x4140, 0x2791, 0x55b, 0x501c, 0x1, 0x1);
        gbc.writeMem(0x103, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2aca, gbc.sp());
        EXPECT(0x105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 02BC
        gbc.setState(0x5504, 0xac51, 0x2ae0, 0xb08a, 0x3dff, 0x12eb, 0x1, 0x1);
        gbc.writeMem(0x5504, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xac51, gbc.sp());
        EXPECT(0x5506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 02BD
        gbc.setState(0x5618, 0xa560, 0xd9e0, 0x99a0, 0x6abe, 0x151c, 0x0, 0x0);
        gbc.writeMem(0x5618, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa560, gbc.sp());
        EXPECT(0x561a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 02BE
        gbc.setState(0x95b4, 0xc23, 0x8230, 0x28c7, 0xdf00, 0x8caf, 0x1, 0x1);
        gbc.writeMem(0x95b4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc23, gbc.sp());
        EXPECT(0x95b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b4));
        EXPECT(0x49, gbc.readMem(0x95b5));
        // CB 49 02BF
        gbc.setState(0x1f1f, 0x7e57, 0x62d0, 0xf58f, 0x4f96, 0x1fb5, 0x1, 0x1);
        gbc.writeMem(0x1f1f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7e57, gbc.sp());
        EXPECT(0x1f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 02C0
        gbc.setState(0x5716, 0x15de, 0x13b0, 0xdff7, 0x8362, 0x9266, 0x1, 0x1);
        gbc.writeMem(0x5716, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x15de, gbc.sp());
        EXPECT(0x5718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 02C1
        gbc.setState(0x2c2b, 0xd0c3, 0x65b0, 0x97ef, 0x33e, 0xb8ef, 0x0, 0x0);
        gbc.writeMem(0x2c2b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd0c3, gbc.sp());
        EXPECT(0x2c2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 02C2
        gbc.setState(0xb34a, 0xcc89, 0xc090, 0x4d7, 0xf7c5, 0xcef2, 0x0, 0x1);
        gbc.writeMem(0xb34a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcc89, gbc.sp());
        EXPECT(0xb34c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb34a));
        EXPECT(0x49, gbc.readMem(0xb34b));
        // CB 49 02C3
        gbc.setState(0xc1c4, 0x2541, 0xd8c0, 0x1b33, 0x6934, 0x6cc8, 0x1, 0x0);
        gbc.writeMem(0xc1c4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2541, gbc.sp());
        EXPECT(0xc1c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c4));
        EXPECT(0x49, gbc.readMem(0xc1c5));
        // CB 49 02C4
        gbc.setState(0xc4f9, 0x1a7c, 0x61e0, 0xdf87, 0xb891, 0x4a3d, 0x0, 0x1);
        gbc.writeMem(0xc4f9, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1a7c, gbc.sp());
        EXPECT(0xc4fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f9));
        EXPECT(0x49, gbc.readMem(0xc4fa));
        // CB 49 02C5
        gbc.setState(0xc7ba, 0x4640, 0x3900, 0xe4a, 0xc4fb, 0xb578, 0x1, 0x1);
        gbc.writeMem(0xc7ba, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4640, gbc.sp());
        EXPECT(0xc7bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ba));
        EXPECT(0x49, gbc.readMem(0xc7bb));
        // CB 49 02C6
        gbc.setState(0xcc7a, 0x9221, 0x1970, 0x59de, 0x2657, 0x779a, 0x1, 0x1);
        gbc.writeMem(0xcc7a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9221, gbc.sp());
        EXPECT(0xcc7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc7a));
        EXPECT(0x49, gbc.readMem(0xcc7b));
        // CB 49 02C8
        gbc.setState(0x51b4, 0xefb9, 0x3790, 0x3a74, 0x5f6f, 0x9bb6, 0x0, 0x1);
        gbc.writeMem(0x51b4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xefb9, gbc.sp());
        EXPECT(0x51b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 02C9
        gbc.setState(0xccfd, 0xc1b1, 0x5dd0, 0xce61, 0x305a, 0x2411, 0x1, 0x1);
        gbc.writeMem(0xccfd, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc1b1, gbc.sp());
        EXPECT(0xccff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccfd));
        EXPECT(0x49, gbc.readMem(0xccfe));
        // CB 49 02CA
        gbc.setState(0x8a1e, 0x9f06, 0xfbd0, 0xe830, 0x90f1, 0xd06c, 0x0, 0x1);
        gbc.writeMem(0x8a1e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9f06, gbc.sp());
        EXPECT(0x8a20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a1e));
        EXPECT(0x49, gbc.readMem(0x8a1f));
        // CB 49 02CB
        gbc.setState(0xe05d, 0x5df9, 0x1fb0, 0x4a10, 0xf185, 0xde1b, 0x0, 0x0);
        gbc.writeMem(0xe05d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5df9, gbc.sp());
        EXPECT(0xe05f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe05d));
        EXPECT(0x49, gbc.readMem(0xe05e));
        // CB 49 02CC
        gbc.setState(0xb46a, 0x37b, 0x49f0, 0x4c6e, 0xa6aa, 0xd021, 0x1, 0x0);
        gbc.writeMem(0xb46a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x37b, gbc.sp());
        EXPECT(0xb46c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb46a));
        EXPECT(0x49, gbc.readMem(0xb46b));
        // CB 49 02CD
        gbc.setState(0xebf8, 0x9098, 0x4820, 0x3f73, 0xed65, 0x7dc6, 0x0, 0x0);
        gbc.writeMem(0xebf8, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9098, gbc.sp());
        EXPECT(0xebfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf8));
        EXPECT(0x49, gbc.readMem(0xebf9));
        // CB 49 02CE
        gbc.setState(0x274b, 0x982, 0xef10, 0x9714, 0x6876, 0x5157, 0x1, 0x0);
        gbc.writeMem(0x274b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x982, gbc.sp());
        EXPECT(0x274d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 02CF
        gbc.setState(0x1616, 0x3d4, 0xe880, 0xa0d, 0xdd99, 0xbff, 0x0, 0x0);
        gbc.writeMem(0x1616, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3d4, gbc.sp());
        EXPECT(0x1618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 02D0
        gbc.setState(0x2d02, 0x9c41, 0xc480, 0x38f9, 0x9caa, 0xd923, 0x1, 0x0);
        gbc.writeMem(0x2d02, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9c41, gbc.sp());
        EXPECT(0x2d04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 02D1
        gbc.setState(0x520, 0x9d82, 0xa570, 0x7574, 0x5ce5, 0x16af, 0x0, 0x1);
        gbc.writeMem(0x520, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9d82, gbc.sp());
        EXPECT(0x522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 02D2
        gbc.setState(0xabc3, 0xddea, 0x7460, 0xc137, 0x3e23, 0x69bd, 0x0, 0x0);
        gbc.writeMem(0xabc3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xddea, gbc.sp());
        EXPECT(0xabc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc3));
        EXPECT(0x49, gbc.readMem(0xabc4));
        // CB 49 02D3
        gbc.setState(0xb210, 0x51f9, 0xb8d0, 0xbdd3, 0x23c, 0x640f, 0x0, 0x1);
        gbc.writeMem(0xb210, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x51f9, gbc.sp());
        EXPECT(0xb212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb210));
        EXPECT(0x49, gbc.readMem(0xb211));
        // CB 49 02D5
        gbc.setState(0xcd26, 0xdae7, 0x5b0, 0x2f5a, 0x28a9, 0x424e, 0x1, 0x1);
        gbc.writeMem(0xcd26, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xdae7, gbc.sp());
        EXPECT(0xcd28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd26));
        EXPECT(0x49, gbc.readMem(0xcd27));
        // CB 49 02D6
        gbc.setState(0x986d, 0x171f, 0x2970, 0x92ec, 0x243, 0xc1ac, 0x1, 0x0);
        gbc.writeMem(0x986d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x171f, gbc.sp());
        EXPECT(0x986f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x986d));
        EXPECT(0x49, gbc.readMem(0x986e));
        // CB 49 02D7
        gbc.setState(0x983f, 0x349c, 0x6780, 0x457c, 0xc382, 0x385c, 0x1, 0x1);
        gbc.writeMem(0x983f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x349c, gbc.sp());
        EXPECT(0x9841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x983f));
        EXPECT(0x49, gbc.readMem(0x9840));
        // CB 49 02D8
        gbc.setState(0xcafd, 0xab94, 0xe570, 0xe566, 0x7e9b, 0xe73, 0x1, 0x0);
        gbc.writeMem(0xcafd, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xab94, gbc.sp());
        EXPECT(0xcaff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcafd));
        EXPECT(0x49, gbc.readMem(0xcafe));
        // CB 49 02D9
        gbc.setState(0xe4ac, 0x64c9, 0x76c0, 0x4c99, 0x1fd9, 0x1e74, 0x0, 0x1);
        gbc.writeMem(0xe4ac, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x64c9, gbc.sp());
        EXPECT(0xe4ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ac));
        EXPECT(0x49, gbc.readMem(0xe4ad));
        // CB 49 02DA
        gbc.setState(0x6267, 0x1e, 0xa0, 0x4e2a, 0x7371, 0xc303, 0x0, 0x0);
        gbc.writeMem(0x6267, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1e, gbc.sp());
        EXPECT(0x6269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 02DB
        gbc.setState(0x1f45, 0xb8e9, 0xfda0, 0x470f, 0xd27a, 0xc18a, 0x1, 0x0);
        gbc.writeMem(0x1f45, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb8e9, gbc.sp());
        EXPECT(0x1f47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 02DC
        gbc.setState(0x6acf, 0x212, 0x1920, 0x62b9, 0x5c8c, 0xef2d, 0x1, 0x0);
        gbc.writeMem(0x6acf, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x212, gbc.sp());
        EXPECT(0x6ad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 02DD
        gbc.setState(0x4a82, 0xd459, 0x540, 0x18bb, 0xc96c, 0x3d57, 0x0, 0x1);
        gbc.writeMem(0x4a82, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd459, gbc.sp());
        EXPECT(0x4a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 02DE
        gbc.setState(0x2a34, 0x60d5, 0x5990, 0x1867, 0x85a1, 0x4e7d, 0x0, 0x0);
        gbc.writeMem(0x2a34, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x60d5, gbc.sp());
        EXPECT(0x2a36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 02DF
        gbc.setState(0x3f0e, 0x3b11, 0x8690, 0xbfd3, 0x5a03, 0xb204, 0x1, 0x0);
        gbc.writeMem(0x3f0e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3b11, gbc.sp());
        EXPECT(0x3f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 02E0
        gbc.setState(0x68f7, 0xeb7c, 0x34a0, 0x1eac, 0xea67, 0x50a2, 0x0, 0x1);
        gbc.writeMem(0x68f7, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xeb7c, gbc.sp());
        EXPECT(0x68f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 02E1
        gbc.setState(0x655c, 0x502c, 0x4e40, 0x4ee2, 0x4ab6, 0x5f06, 0x1, 0x1);
        gbc.writeMem(0x655c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x502c, gbc.sp());
        EXPECT(0x655e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 02E2
        gbc.setState(0xc9dd, 0xe15b, 0xefd0, 0xd771, 0x477c, 0xd435, 0x0, 0x1);
        gbc.writeMem(0xc9dd, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe15b, gbc.sp());
        EXPECT(0xc9df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9dd));
        EXPECT(0x49, gbc.readMem(0xc9de));
        // CB 49 02E3
        gbc.setState(0x81e3, 0x2941, 0xc870, 0x9075, 0xa5f7, 0xed7d, 0x0, 0x0);
        gbc.writeMem(0x81e3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2941, gbc.sp());
        EXPECT(0x81e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81e3));
        EXPECT(0x49, gbc.readMem(0x81e4));
        // CB 49 02E4
        gbc.setState(0xbd22, 0xdc58, 0x5470, 0xc5ad, 0x1094, 0x7d58, 0x1, 0x1);
        gbc.writeMem(0xbd22, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xdc58, gbc.sp());
        EXPECT(0xbd24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd22));
        EXPECT(0x49, gbc.readMem(0xbd23));
        // CB 49 02E5
        gbc.setState(0x3c30, 0xf267, 0x3530, 0xf06f, 0x2ae3, 0xccef, 0x1, 0x1);
        gbc.writeMem(0x3c30, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf267, gbc.sp());
        EXPECT(0x3c32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 02E6
        gbc.setState(0x1944, 0xc62a, 0x54d0, 0xeb8b, 0x164b, 0x2d14, 0x1, 0x1);
        gbc.writeMem(0x1944, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc62a, gbc.sp());
        EXPECT(0x1946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 02E7
        gbc.setState(0x7b32, 0xcf6e, 0x320, 0x83fb, 0x57f5, 0xabfa, 0x1, 0x1);
        gbc.writeMem(0x7b32, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xcf6e, gbc.sp());
        EXPECT(0x7b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 02E8
        gbc.setState(0x7564, 0x5cd8, 0xd120, 0xe654, 0xf589, 0x47ce, 0x0, 0x0);
        gbc.writeMem(0x7564, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5cd8, gbc.sp());
        EXPECT(0x7566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 02E9
        gbc.setState(0xa6c3, 0x174c, 0xdaa0, 0x7f6, 0x6122, 0x978a, 0x0, 0x0);
        gbc.writeMem(0xa6c3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x174c, gbc.sp());
        EXPECT(0xa6c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6c3));
        EXPECT(0x49, gbc.readMem(0xa6c4));
        // CB 49 02EA
        gbc.setState(0xc8fb, 0x1c6d, 0x1ad0, 0xf44c, 0x8618, 0x69f8, 0x1, 0x0);
        gbc.writeMem(0xc8fb, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1c6d, gbc.sp());
        EXPECT(0xc8fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8fb));
        EXPECT(0x49, gbc.readMem(0xc8fc));
        // CB 49 02EB
        gbc.setState(0x322d, 0x6574, 0xc3d0, 0x2d3b, 0xfaf1, 0xd9b2, 0x0, 0x0);
        gbc.writeMem(0x322d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6574, gbc.sp());
        EXPECT(0x322f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 02EC
        gbc.setState(0x7bdb, 0xa23, 0x35b0, 0xbced, 0x354a, 0x610d, 0x0, 0x0);
        gbc.writeMem(0x7bdb, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa23, gbc.sp());
        EXPECT(0x7bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 02ED
        gbc.setState(0x7432, 0xb329, 0x8800, 0xf5e4, 0x177e, 0x58ed, 0x0, 0x0);
        gbc.writeMem(0x7432, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb329, gbc.sp());
        EXPECT(0x7434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 02EE
        gbc.setState(0x6b79, 0xf865, 0x2460, 0x7e2f, 0x1120, 0xd16c, 0x0, 0x0);
        gbc.writeMem(0x6b79, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf865, gbc.sp());
        EXPECT(0x6b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 02F0
        gbc.setState(0x6253, 0xdb22, 0x5510, 0x41d2, 0xe577, 0x3c3c, 0x1, 0x1);
        gbc.writeMem(0x6253, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdb22, gbc.sp());
        EXPECT(0x6255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 02F1
        gbc.setState(0x92c0, 0x80b4, 0x72f0, 0xe14f, 0xcbd, 0x81b, 0x0, 0x1);
        gbc.writeMem(0x92c0, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x80b4, gbc.sp());
        EXPECT(0x92c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c0));
        EXPECT(0x49, gbc.readMem(0x92c1));
        // CB 49 02F2
        gbc.setState(0xe67b, 0xbea4, 0x1aa0, 0x746d, 0x7604, 0xcdd8, 0x1, 0x0);
        gbc.writeMem(0xe67b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbea4, gbc.sp());
        EXPECT(0xe67d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe67b));
        EXPECT(0x49, gbc.readMem(0xe67c));
        // CB 49 02F3
        gbc.setState(0x9e2, 0x8b65, 0xf280, 0x8168, 0x453, 0x9eb4, 0x1, 0x1);
        gbc.writeMem(0x9e2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8b65, gbc.sp());
        EXPECT(0x9e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 02F4
        gbc.setState(0x988d, 0xce48, 0x5880, 0x3078, 0xbe29, 0x4b8e, 0x0, 0x0);
        gbc.writeMem(0x988d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xce48, gbc.sp());
        EXPECT(0x988f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x988d));
        EXPECT(0x49, gbc.readMem(0x988e));
        // CB 49 02F5
        gbc.setState(0xd2f9, 0xe448, 0x5f20, 0xa99a, 0xcad6, 0x9c7, 0x0, 0x0);
        gbc.writeMem(0xd2f9, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe448, gbc.sp());
        EXPECT(0xd2fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2f9));
        EXPECT(0x49, gbc.readMem(0xd2fa));
        // CB 49 02F7
        gbc.setState(0xd319, 0x47da, 0xcf80, 0x5d0b, 0x9da6, 0xdb29, 0x0, 0x0);
        gbc.writeMem(0xd319, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x47da, gbc.sp());
        EXPECT(0xd31b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd319));
        EXPECT(0x49, gbc.readMem(0xd31a));
        // CB 49 02F8
        gbc.setState(0x9859, 0xfbef, 0xaf0, 0x809e, 0x88cb, 0x3bec, 0x0, 0x1);
        gbc.writeMem(0x9859, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfbef, gbc.sp());
        EXPECT(0x985b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9859));
        EXPECT(0x49, gbc.readMem(0x985a));
        // CB 49 02F9
        gbc.setState(0x3119, 0x2665, 0x7190, 0xc1e7, 0x83ad, 0x93b5, 0x0, 0x0);
        gbc.writeMem(0x3119, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2665, gbc.sp());
        EXPECT(0x311b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 02FA
        gbc.setState(0xa0c3, 0xc206, 0x7500, 0xe115, 0x1217, 0xf02e, 0x0, 0x0);
        gbc.writeMem(0xa0c3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc206, gbc.sp());
        EXPECT(0xa0c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0c3));
        EXPECT(0x49, gbc.readMem(0xa0c4));
        // CB 49 02FB
        gbc.setState(0x2d95, 0x619, 0xd6a0, 0x6cb1, 0x7f7e, 0x4e3d, 0x1, 0x1);
        gbc.writeMem(0x2d95, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x619, gbc.sp());
        EXPECT(0x2d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 02FC
        gbc.setState(0x32ca, 0xa02f, 0x1470, 0x4dff, 0x2380, 0xf25e, 0x0, 0x1);
        gbc.writeMem(0x32ca, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa02f, gbc.sp());
        EXPECT(0x32cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 02FD
        gbc.setState(0xa52c, 0x13c, 0x8af0, 0xc5e9, 0x667b, 0x51d7, 0x0, 0x0);
        gbc.writeMem(0xa52c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x13c, gbc.sp());
        EXPECT(0xa52e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa52c));
        EXPECT(0x49, gbc.readMem(0xa52d));
        // CB 49 02FE
        gbc.setState(0x54e6, 0xf0ce, 0x6530, 0x1270, 0xe0b6, 0x5d66, 0x1, 0x1);
        gbc.writeMem(0x54e6, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf0ce, gbc.sp());
        EXPECT(0x54e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 02FF
        gbc.setState(0x4cff, 0x7ecd, 0x1a0, 0xee42, 0x665f, 0xbc26, 0x1, 0x1);
        gbc.writeMem(0x4cff, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7ecd, gbc.sp());
        EXPECT(0x4d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0300
        gbc.setState(0x8dd7, 0x6e76, 0xd5c0, 0xcbe8, 0x1cf6, 0xbc85, 0x1, 0x1);
        gbc.writeMem(0x8dd7, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6e76, gbc.sp());
        EXPECT(0x8dd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dd7));
        EXPECT(0x49, gbc.readMem(0x8dd8));
        // CB 49 0301
        gbc.setState(0x5999, 0x7630, 0x5830, 0x6c6f, 0xb33b, 0x91a0, 0x0, 0x1);
        gbc.writeMem(0x5999, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7630, gbc.sp());
        EXPECT(0x599b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0302
        gbc.setState(0xc479, 0x1675, 0xaff0, 0xadca, 0x73c6, 0xc9fd, 0x1, 0x0);
        gbc.writeMem(0xc479, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1675, gbc.sp());
        EXPECT(0xc47b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc479));
        EXPECT(0x49, gbc.readMem(0xc47a));
        // CB 49 0303
        gbc.setState(0x71bc, 0x9612, 0x2c10, 0xdfb7, 0xb797, 0x2145, 0x0, 0x1);
        gbc.writeMem(0x71bc, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9612, gbc.sp());
        EXPECT(0x71be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0304
        gbc.setState(0x20e, 0xe423, 0x4ef0, 0x4896, 0x8c7c, 0x36ad, 0x0, 0x0);
        gbc.writeMem(0x20e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe423, gbc.sp());
        EXPECT(0x210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0305
        gbc.setState(0xd991, 0x253e, 0x58d0, 0x31c3, 0xd306, 0x9259, 0x0, 0x0);
        gbc.writeMem(0xd991, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x253e, gbc.sp());
        EXPECT(0xd993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd991));
        EXPECT(0x49, gbc.readMem(0xd992));
        // CB 49 0307
        gbc.setState(0x9c36, 0xde64, 0x89b0, 0x4af8, 0x4a00, 0xc35c, 0x0, 0x1);
        gbc.writeMem(0x9c36, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xde64, gbc.sp());
        EXPECT(0x9c38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c36));
        EXPECT(0x49, gbc.readMem(0x9c37));
        // CB 49 0308
        gbc.setState(0x6903, 0x12c3, 0x33b0, 0xb0d, 0xe55, 0x3431, 0x0, 0x1);
        gbc.writeMem(0x6903, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x12c3, gbc.sp());
        EXPECT(0x6905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0309
        gbc.setState(0xeb48, 0xa8dd, 0xa1c0, 0xda6c, 0x2b5f, 0x7c05, 0x0, 0x1);
        gbc.writeMem(0xeb48, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa8dd, gbc.sp());
        EXPECT(0xeb4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb48));
        EXPECT(0x49, gbc.readMem(0xeb49));
        // CB 49 030A
        gbc.setState(0x6f33, 0x75c, 0x1ec0, 0xaf0f, 0x176e, 0x43fa, 0x0, 0x0);
        gbc.writeMem(0x6f33, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x75c, gbc.sp());
        EXPECT(0x6f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 030B
        gbc.setState(0x804c, 0xe55e, 0x94f0, 0xc513, 0x8f5d, 0xb7c4, 0x0, 0x0);
        gbc.writeMem(0x804c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe55e, gbc.sp());
        EXPECT(0x804e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x804c));
        EXPECT(0x49, gbc.readMem(0x804d));
        // CB 49 030C
        gbc.setState(0x7a1f, 0xdd50, 0x63a0, 0x2df9, 0x28ae, 0x4154, 0x0, 0x0);
        gbc.writeMem(0x7a1f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xdd50, gbc.sp());
        EXPECT(0x7a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 030D
        gbc.setState(0x7826, 0xe293, 0x8ce0, 0x63a9, 0x7c22, 0x8c4a, 0x1, 0x1);
        gbc.writeMem(0x7826, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe293, gbc.sp());
        EXPECT(0x7828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 030E
        gbc.setState(0xe0a9, 0x2b19, 0xe6f0, 0x5e7b, 0x354a, 0x79fd, 0x0, 0x0);
        gbc.writeMem(0xe0a9, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2b19, gbc.sp());
        EXPECT(0xe0ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a9));
        EXPECT(0x49, gbc.readMem(0xe0aa));
        // CB 49 030F
        gbc.setState(0x86da, 0xfd87, 0xf290, 0x3dd8, 0xe6da, 0xc8a6, 0x0, 0x1);
        gbc.writeMem(0x86da, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfd87, gbc.sp());
        EXPECT(0x86dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86da));
        EXPECT(0x49, gbc.readMem(0x86db));
        // CB 49 0310
        gbc.setState(0xcf5e, 0xdea6, 0x2f50, 0xe2f3, 0x6647, 0xfc32, 0x0, 0x0);
        gbc.writeMem(0xcf5e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdea6, gbc.sp());
        EXPECT(0xcf60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf5e));
        EXPECT(0x49, gbc.readMem(0xcf5f));
        // CB 49 0311
        gbc.setState(0x7903, 0xe708, 0x7260, 0x584f, 0x7553, 0x6c1c, 0x0, 0x0);
        gbc.writeMem(0x7903, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe708, gbc.sp());
        EXPECT(0x7905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0312
        gbc.setState(0x3b37, 0x9817, 0xd7d0, 0xa0a0, 0xad9a, 0x8c59, 0x0, 0x1);
        gbc.writeMem(0x3b37, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9817, gbc.sp());
        EXPECT(0x3b39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0313
        gbc.setState(0x935, 0xcc65, 0xa8f0, 0x33cb, 0x768f, 0xe1c0, 0x1, 0x1);
        gbc.writeMem(0x935, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xcc65, gbc.sp());
        EXPECT(0x937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0314
        gbc.setState(0x9a1d, 0x254b, 0x8b40, 0xb158, 0x99b4, 0x64bb, 0x0, 0x0);
        gbc.writeMem(0x9a1d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x254b, gbc.sp());
        EXPECT(0x9a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a1d));
        EXPECT(0x49, gbc.readMem(0x9a1e));
        // CB 49 0315
        gbc.setState(0xcbf1, 0xad65, 0xa710, 0x23c4, 0x5722, 0xbac4, 0x0, 0x0);
        gbc.writeMem(0xcbf1, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xad65, gbc.sp());
        EXPECT(0xcbf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbf1));
        EXPECT(0x49, gbc.readMem(0xcbf2));
        // CB 49 0316
        gbc.setState(0xd4d0, 0xc212, 0xb150, 0x36f5, 0x12a, 0x56c2, 0x1, 0x0);
        gbc.writeMem(0xd4d0, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc212, gbc.sp());
        EXPECT(0xd4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4d0));
        EXPECT(0x49, gbc.readMem(0xd4d1));
        // CB 49 0317
        gbc.setState(0xd782, 0x592f, 0x44c0, 0xb1f9, 0x41e2, 0xf511, 0x0, 0x1);
        gbc.writeMem(0xd782, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x592f, gbc.sp());
        EXPECT(0xd784, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd782));
        EXPECT(0x49, gbc.readMem(0xd783));
        // CB 49 0318
        gbc.setState(0x17a4, 0x522b, 0xa0, 0x8533, 0x1922, 0xc588, 0x0, 0x0);
        gbc.writeMem(0x17a4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x522b, gbc.sp());
        EXPECT(0x17a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0319
        gbc.setState(0xcce, 0x461b, 0x360, 0xaa0e, 0x4eb2, 0x341e, 0x0, 0x1);
        gbc.writeMem(0xcce, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x461b, gbc.sp());
        EXPECT(0xcd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 031A
        gbc.setState(0x4a09, 0xc477, 0xef0, 0x4e05, 0x8a61, 0x60ac, 0x0, 0x0);
        gbc.writeMem(0x4a09, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc477, gbc.sp());
        EXPECT(0x4a0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 031B
        gbc.setState(0x94c6, 0x9ea5, 0xafb0, 0x6a5, 0x7ca5, 0x2dc9, 0x0, 0x0);
        gbc.writeMem(0x94c6, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9ea5, gbc.sp());
        EXPECT(0x94c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c6));
        EXPECT(0x49, gbc.readMem(0x94c7));
        // CB 49 031C
        gbc.setState(0x4fba, 0xb95e, 0x73b0, 0xc387, 0xaeb7, 0x855f, 0x1, 0x1);
        gbc.writeMem(0x4fba, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb95e, gbc.sp());
        EXPECT(0x4fbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 031D
        gbc.setState(0xf38, 0x3149, 0xb3c0, 0x41ec, 0x90e, 0x5f41, 0x1, 0x1);
        gbc.writeMem(0xf38, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3149, gbc.sp());
        EXPECT(0xf3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 031E
        gbc.setState(0xe7f9, 0x9312, 0x580, 0xe6be, 0xc327, 0x7c6b, 0x0, 0x1);
        gbc.writeMem(0xe7f9, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9312, gbc.sp());
        EXPECT(0xe7fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f9));
        EXPECT(0x49, gbc.readMem(0xe7fa));
        // CB 49 031F
        gbc.setState(0x99f2, 0xdf72, 0x8cf0, 0xe8c4, 0xaa75, 0x9e23, 0x1, 0x0);
        gbc.writeMem(0x99f2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xdf72, gbc.sp());
        EXPECT(0x99f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99f2));
        EXPECT(0x49, gbc.readMem(0x99f3));
        // CB 49 0320
        gbc.setState(0x2934, 0x9612, 0xfe20, 0x30b1, 0x2983, 0x55fb, 0x0, 0x0);
        gbc.writeMem(0x2934, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9612, gbc.sp());
        EXPECT(0x2936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0321
        gbc.setState(0xab30, 0x437c, 0x160, 0x79f3, 0x32a5, 0xfa1b, 0x0, 0x0);
        gbc.writeMem(0xab30, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x437c, gbc.sp());
        EXPECT(0xab32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab30));
        EXPECT(0x49, gbc.readMem(0xab31));
        // CB 49 0322
        gbc.setState(0x892c, 0xefc6, 0xb40, 0x5bc9, 0xefd0, 0x5566, 0x1, 0x1);
        gbc.writeMem(0x892c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xefc6, gbc.sp());
        EXPECT(0x892e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x892c));
        EXPECT(0x49, gbc.readMem(0x892d));
        // CB 49 0324
        gbc.setState(0xb294, 0x2980, 0x8af0, 0x8c6c, 0x8165, 0x43cf, 0x1, 0x1);
        gbc.writeMem(0xb294, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2980, gbc.sp());
        EXPECT(0xb296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb294));
        EXPECT(0x49, gbc.readMem(0xb295));
        // CB 49 0325
        gbc.setState(0x4082, 0x1f08, 0x9580, 0x8890, 0x7143, 0x51cf, 0x1, 0x0);
        gbc.writeMem(0x4082, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1f08, gbc.sp());
        EXPECT(0x4084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0326
        gbc.setState(0x7d86, 0x1bd8, 0x41b0, 0xf3f1, 0xb937, 0xd64f, 0x0, 0x0);
        gbc.writeMem(0x7d86, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1bd8, gbc.sp());
        EXPECT(0x7d88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0327
        gbc.setState(0x4a5c, 0xff2e, 0xaca0, 0x6de4, 0x1b97, 0x3862, 0x1, 0x0);
        gbc.writeMem(0x4a5c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xff2e, gbc.sp());
        EXPECT(0x4a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0328
        gbc.setState(0x8fd5, 0xeb7c, 0x4d70, 0x9a4d, 0xb0c2, 0xecde, 0x1, 0x0);
        gbc.writeMem(0x8fd5, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xeb7c, gbc.sp());
        EXPECT(0x8fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fd5));
        EXPECT(0x49, gbc.readMem(0x8fd6));
        // CB 49 0329
        gbc.setState(0xa0c2, 0xbe3d, 0x10c0, 0x19d0, 0x6fba, 0xdaf6, 0x1, 0x0);
        gbc.writeMem(0xa0c2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbe3d, gbc.sp());
        EXPECT(0xa0c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0c2));
        EXPECT(0x49, gbc.readMem(0xa0c3));
        // CB 49 032A
        gbc.setState(0x6eb7, 0x6b5, 0x5f00, 0x4627, 0x77f4, 0xaa1d, 0x0, 0x0);
        gbc.writeMem(0x6eb7, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6b5, gbc.sp());
        EXPECT(0x6eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 032B
        gbc.setState(0x80f7, 0xe56f, 0x6d10, 0xd2d4, 0x7fad, 0x17b3, 0x1, 0x1);
        gbc.writeMem(0x80f7, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe56f, gbc.sp());
        EXPECT(0x80f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80f7));
        EXPECT(0x49, gbc.readMem(0x80f8));
        // CB 49 032C
        gbc.setState(0x34d7, 0x17c3, 0x270, 0xb070, 0x9ffb, 0xe2e8, 0x0, 0x1);
        gbc.writeMem(0x34d7, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x17c3, gbc.sp());
        EXPECT(0x34d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 032D
        gbc.setState(0xb740, 0x6033, 0xa460, 0x643b, 0x5b75, 0x5d86, 0x0, 0x0);
        gbc.writeMem(0xb740, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6033, gbc.sp());
        EXPECT(0xb742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb740));
        EXPECT(0x49, gbc.readMem(0xb741));
        // CB 49 032E
        gbc.setState(0xadfb, 0xd61f, 0x3fd0, 0x55ea, 0x9869, 0xec2e, 0x1, 0x0);
        gbc.writeMem(0xadfb, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd61f, gbc.sp());
        EXPECT(0xadfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadfb));
        EXPECT(0x49, gbc.readMem(0xadfc));
        // CB 49 032F
        gbc.setState(0x91b2, 0xdbbb, 0x8440, 0xa1aa, 0x7209, 0xaf5e, 0x0, 0x1);
        gbc.writeMem(0x91b2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xdbbb, gbc.sp());
        EXPECT(0x91b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b2));
        EXPECT(0x49, gbc.readMem(0x91b3));
        // CB 49 0330
        gbc.setState(0x8a8c, 0xcdbf, 0xc4f0, 0xf853, 0xbed2, 0x212e, 0x1, 0x0);
        gbc.writeMem(0x8a8c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcdbf, gbc.sp());
        EXPECT(0x8a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a8c));
        EXPECT(0x49, gbc.readMem(0x8a8d));
        // CB 49 0331
        gbc.setState(0xe672, 0x8f28, 0x3020, 0x303f, 0xae1a, 0xafd7, 0x0, 0x1);
        gbc.writeMem(0xe672, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8f28, gbc.sp());
        EXPECT(0xe674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe672));
        EXPECT(0x49, gbc.readMem(0xe673));
        // CB 49 0332
        gbc.setState(0x74d7, 0x4f55, 0x93d0, 0xed5a, 0x95fc, 0x8ab1, 0x1, 0x1);
        gbc.writeMem(0x74d7, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4f55, gbc.sp());
        EXPECT(0x74d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0333
        gbc.setState(0xa579, 0x914a, 0xa0a0, 0x81f, 0xdba9, 0xa73e, 0x1, 0x1);
        gbc.writeMem(0xa579, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x914a, gbc.sp());
        EXPECT(0xa57b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa579));
        EXPECT(0x49, gbc.readMem(0xa57a));
        // CB 49 0334
        gbc.setState(0x4231, 0xb055, 0x6b40, 0x6f69, 0xecaa, 0xac91, 0x0, 0x1);
        gbc.writeMem(0x4231, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb055, gbc.sp());
        EXPECT(0x4233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0335
        gbc.setState(0x795d, 0x8fe3, 0x4e10, 0x2ef6, 0xb930, 0x4273, 0x1, 0x0);
        gbc.writeMem(0x795d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8fe3, gbc.sp());
        EXPECT(0x795f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0336
        gbc.setState(0x3af4, 0x6c6e, 0xa930, 0xbdc6, 0x6905, 0x79e0, 0x1, 0x1);
        gbc.writeMem(0x3af4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6c6e, gbc.sp());
        EXPECT(0x3af6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0337
        gbc.setState(0x5d27, 0xab4d, 0x3430, 0x7ed0, 0x3772, 0xa482, 0x0, 0x1);
        gbc.writeMem(0x5d27, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xab4d, gbc.sp());
        EXPECT(0x5d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0338
        gbc.setState(0xb3a4, 0x3051, 0x4f90, 0xe4d2, 0x4e91, 0x7eb0, 0x0, 0x0);
        gbc.writeMem(0xb3a4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3051, gbc.sp());
        EXPECT(0xb3a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a4));
        EXPECT(0x49, gbc.readMem(0xb3a5));
        // CB 49 0339
        gbc.setState(0x8142, 0x2c1b, 0x8f20, 0x9a83, 0x901c, 0xc737, 0x1, 0x0);
        gbc.writeMem(0x8142, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2c1b, gbc.sp());
        EXPECT(0x8144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8142));
        EXPECT(0x49, gbc.readMem(0x8143));
        // CB 49 033A
        gbc.setState(0x75aa, 0x2fb6, 0x8520, 0xade5, 0x6db2, 0x3513, 0x1, 0x1);
        gbc.writeMem(0x75aa, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2fb6, gbc.sp());
        EXPECT(0x75ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 033B
        gbc.setState(0x1fd2, 0xe378, 0x8e30, 0xd7d6, 0xc0fc, 0xaff2, 0x1, 0x0);
        gbc.writeMem(0x1fd2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe378, gbc.sp());
        EXPECT(0x1fd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 033C
        gbc.setState(0x18b, 0xd67e, 0x2a0, 0xd3b2, 0xdb3e, 0x205a, 0x1, 0x1);
        gbc.writeMem(0x18b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd67e, gbc.sp());
        EXPECT(0x18d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 033D
        gbc.setState(0x95ea, 0x56d, 0x1f0, 0xf202, 0xf1d4, 0x6cbf, 0x0, 0x1);
        gbc.writeMem(0x95ea, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x56d, gbc.sp());
        EXPECT(0x95ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ea));
        EXPECT(0x49, gbc.readMem(0x95eb));
        // CB 49 033E
        gbc.setState(0x8cfa, 0xbfa3, 0x5760, 0xa808, 0x55f3, 0x832e, 0x1, 0x1);
        gbc.writeMem(0x8cfa, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbfa3, gbc.sp());
        EXPECT(0x8cfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cfa));
        EXPECT(0x49, gbc.readMem(0x8cfb));
        // CB 49 033F
        gbc.setState(0x315a, 0xdd1, 0xcd10, 0x97f1, 0x1586, 0x653f, 0x0, 0x0);
        gbc.writeMem(0x315a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdd1, gbc.sp());
        EXPECT(0x315c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0342
        gbc.setState(0xaf6d, 0xea, 0x4d10, 0x75dd, 0x33d3, 0xb149, 0x0, 0x0);
        gbc.writeMem(0xaf6d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xea, gbc.sp());
        EXPECT(0xaf6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6d));
        EXPECT(0x49, gbc.readMem(0xaf6e));
        // CB 49 0343
        gbc.setState(0x75db, 0x5311, 0x50c0, 0xd117, 0x27bd, 0xdf62, 0x0, 0x1);
        gbc.writeMem(0x75db, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5311, gbc.sp());
        EXPECT(0x75dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0345
        gbc.setState(0x7188, 0xa2f1, 0x8460, 0xd958, 0x3fa7, 0x3eed, 0x0, 0x1);
        gbc.writeMem(0x7188, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa2f1, gbc.sp());
        EXPECT(0x718a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0346
        gbc.setState(0xee8a, 0x201e, 0xb770, 0x6657, 0x922a, 0xd44c, 0x1, 0x1);
        gbc.writeMem(0xee8a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x201e, gbc.sp());
        EXPECT(0xee8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee8a));
        EXPECT(0x49, gbc.readMem(0xee8b));
        // CB 49 0347
        gbc.setState(0x67ce, 0xdc89, 0x5be0, 0x497c, 0x2873, 0xf653, 0x1, 0x0);
        gbc.writeMem(0x67ce, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdc89, gbc.sp());
        EXPECT(0x67d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0348
        gbc.setState(0x2b10, 0xbfbe, 0x5360, 0xa20a, 0x8609, 0xccac, 0x0, 0x1);
        gbc.writeMem(0x2b10, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbfbe, gbc.sp());
        EXPECT(0x2b12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0349
        gbc.setState(0x899, 0xaedf, 0x2a60, 0x4e75, 0x8590, 0x4121, 0x1, 0x0);
        gbc.writeMem(0x899, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xaedf, gbc.sp());
        EXPECT(0x89b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 034A
        gbc.setState(0xbefd, 0x2672, 0x7500, 0x90be, 0x86f1, 0xd73b, 0x0, 0x1);
        gbc.writeMem(0xbefd, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2672, gbc.sp());
        EXPECT(0xbeff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbefd));
        EXPECT(0x49, gbc.readMem(0xbefe));
        // CB 49 034B
        gbc.setState(0xda89, 0x2e36, 0xe5b0, 0x7d10, 0xcf30, 0x65e0, 0x0, 0x1);
        gbc.writeMem(0xda89, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2e36, gbc.sp());
        EXPECT(0xda8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda89));
        EXPECT(0x49, gbc.readMem(0xda8a));
        // CB 49 034C
        gbc.setState(0x6c64, 0xd322, 0x250, 0x4f64, 0xced7, 0x2ed5, 0x0, 0x1);
        gbc.writeMem(0x6c64, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd322, gbc.sp());
        EXPECT(0x6c66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 034D
        gbc.setState(0xacb, 0xa3c2, 0xa9b0, 0xea6e, 0x911d, 0x77e2, 0x0, 0x1);
        gbc.writeMem(0xacb, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa3c2, gbc.sp());
        EXPECT(0xacd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 034E
        gbc.setState(0x4a96, 0x8b1f, 0xd160, 0xa2fd, 0x79b3, 0x5e3, 0x1, 0x0);
        gbc.writeMem(0x4a96, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8b1f, gbc.sp());
        EXPECT(0x4a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 034F
        gbc.setState(0x632f, 0x2b2b, 0x580, 0x1bb7, 0xc110, 0x4ea8, 0x1, 0x1);
        gbc.writeMem(0x632f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2b2b, gbc.sp());
        EXPECT(0x6331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0350
        gbc.setState(0xefd1, 0x4844, 0x5e10, 0x562a, 0x45dc, 0x1708, 0x0, 0x0);
        gbc.writeMem(0xefd1, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4844, gbc.sp());
        EXPECT(0xefd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd1));
        EXPECT(0x49, gbc.readMem(0xefd2));
        // CB 49 0351
        gbc.setState(0x6f31, 0x5cfe, 0x47d0, 0x531a, 0x180, 0x57b5, 0x0, 0x0);
        gbc.writeMem(0x6f31, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5cfe, gbc.sp());
        EXPECT(0x6f33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0352
        gbc.setState(0x37f1, 0x8c67, 0xe070, 0x80b5, 0xb5e5, 0x75e0, 0x1, 0x0);
        gbc.writeMem(0x37f1, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8c67, gbc.sp());
        EXPECT(0x37f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0354
        gbc.setState(0x7c97, 0x7327, 0xe000, 0x440d, 0xaf67, 0x764b, 0x0, 0x0);
        gbc.writeMem(0x7c97, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7327, gbc.sp());
        EXPECT(0x7c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0355
        gbc.setState(0xef92, 0x5ae7, 0xfcf0, 0x2e36, 0xc02b, 0x12e1, 0x0, 0x1);
        gbc.writeMem(0xef92, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5ae7, gbc.sp());
        EXPECT(0xef94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef92));
        EXPECT(0x49, gbc.readMem(0xef93));
        // CB 49 0357
        gbc.setState(0x88f1, 0x7bef, 0x11c0, 0xfbf1, 0xa48f, 0x6064, 0x1, 0x1);
        gbc.writeMem(0x88f1, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7bef, gbc.sp());
        EXPECT(0x88f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88f1));
        EXPECT(0x49, gbc.readMem(0x88f2));
        // CB 49 0358
        gbc.setState(0x782, 0x50e9, 0xae40, 0x6cb0, 0xff48, 0x5066, 0x1, 0x0);
        gbc.writeMem(0x782, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x50e9, gbc.sp());
        EXPECT(0x784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0359
        gbc.setState(0x741d, 0x732, 0x28f0, 0x7b00, 0xb06a, 0xde47, 0x0, 0x1);
        gbc.writeMem(0x741d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x732, gbc.sp());
        EXPECT(0x741f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 035A
        gbc.setState(0xde97, 0x1fab, 0x6400, 0x88c, 0x81d9, 0x6185, 0x0, 0x0);
        gbc.writeMem(0xde97, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1fab, gbc.sp());
        EXPECT(0xde99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde97));
        EXPECT(0x49, gbc.readMem(0xde98));
        // CB 49 035B
        gbc.setState(0xc035, 0xf1b, 0xbdf0, 0xa447, 0x3066, 0xa4, 0x1, 0x0);
        gbc.writeMem(0xc035, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf1b, gbc.sp());
        EXPECT(0xc037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc035));
        EXPECT(0x49, gbc.readMem(0xc036));
        // CB 49 035C
        gbc.setState(0xcb1, 0xb531, 0x19a0, 0xb6b9, 0x7fb7, 0xf6ca, 0x0, 0x1);
        gbc.writeMem(0xcb1, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb531, gbc.sp());
        EXPECT(0xcb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 035D
        gbc.setState(0xe889, 0xd454, 0xf340, 0xb9, 0x21ab, 0xd067, 0x0, 0x1);
        gbc.writeMem(0xe889, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd454, gbc.sp());
        EXPECT(0xe88b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe889));
        EXPECT(0x49, gbc.readMem(0xe88a));
        // CB 49 035E
        gbc.setState(0xcf0e, 0xcc5d, 0x8ce0, 0x529b, 0x23c4, 0xac9, 0x1, 0x0);
        gbc.writeMem(0xcf0e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xcc5d, gbc.sp());
        EXPECT(0xcf10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf0e));
        EXPECT(0x49, gbc.readMem(0xcf0f));
        // CB 49 035F
        gbc.setState(0x301a, 0x7726, 0x1fa0, 0x2d84, 0xf8fa, 0xdbdf, 0x0, 0x1);
        gbc.writeMem(0x301a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7726, gbc.sp());
        EXPECT(0x301c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0360
        gbc.setState(0x1d7, 0x8235, 0x77b0, 0xca5d, 0x5b93, 0x5e65, 0x0, 0x1);
        gbc.writeMem(0x1d7, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8235, gbc.sp());
        EXPECT(0x1d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0361
        gbc.setState(0x5ab6, 0x65be, 0xd860, 0x44cf, 0x98e1, 0xce3b, 0x0, 0x0);
        gbc.writeMem(0x5ab6, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x65be, gbc.sp());
        EXPECT(0x5ab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0362
        gbc.setState(0x8cd4, 0x7fc4, 0xaf10, 0x1549, 0xe8d, 0xa27b, 0x1, 0x0);
        gbc.writeMem(0x8cd4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7fc4, gbc.sp());
        EXPECT(0x8cd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd4));
        EXPECT(0x49, gbc.readMem(0x8cd5));
        // CB 49 0363
        gbc.setState(0x7ae0, 0x36fa, 0xa4b0, 0xab01, 0xc0e6, 0x53fd, 0x1, 0x1);
        gbc.writeMem(0x7ae0, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x36fa, gbc.sp());
        EXPECT(0x7ae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0364
        gbc.setState(0x142f, 0x34e, 0x6a00, 0xa497, 0x4370, 0x6447, 0x1, 0x1);
        gbc.writeMem(0x142f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x34e, gbc.sp());
        EXPECT(0x1431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0365
        gbc.setState(0x1890, 0x6a0a, 0xb890, 0x7a75, 0x3655, 0x3323, 0x1, 0x0);
        gbc.writeMem(0x1890, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6a0a, gbc.sp());
        EXPECT(0x1892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0367
        gbc.setState(0x2286, 0x1e75, 0x4ca0, 0x804a, 0x2b6d, 0x2f46, 0x1, 0x1);
        gbc.writeMem(0x2286, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1e75, gbc.sp());
        EXPECT(0x2288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0369
        gbc.setState(0x7186, 0xa7af, 0xf4c0, 0x9a86, 0xf4b6, 0xf151, 0x0, 0x0);
        gbc.writeMem(0x7186, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa7af, gbc.sp());
        EXPECT(0x7188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 036A
        gbc.setState(0xed28, 0xb66b, 0x6f0, 0xc44, 0xc7ce, 0x88fa, 0x0, 0x0);
        gbc.writeMem(0xed28, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb66b, gbc.sp());
        EXPECT(0xed2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed28));
        EXPECT(0x49, gbc.readMem(0xed29));
        // CB 49 036B
        gbc.setState(0xd67e, 0x3a82, 0xe760, 0x15f3, 0x122a, 0xbae, 0x1, 0x0);
        gbc.writeMem(0xd67e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3a82, gbc.sp());
        EXPECT(0xd680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd67e));
        EXPECT(0x49, gbc.readMem(0xd67f));
        // CB 49 036C
        gbc.setState(0x8e53, 0xa7a8, 0x3340, 0xf442, 0x4cb7, 0x8576, 0x0, 0x0);
        gbc.writeMem(0x8e53, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa7a8, gbc.sp());
        EXPECT(0x8e55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e53));
        EXPECT(0x49, gbc.readMem(0x8e54));
        // CB 49 036D
        gbc.setState(0xd3d3, 0x9f9e, 0x700, 0xcd2, 0xfdab, 0xa013, 0x0, 0x1);
        gbc.writeMem(0xd3d3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9f9e, gbc.sp());
        EXPECT(0xd3d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3d3));
        EXPECT(0x49, gbc.readMem(0xd3d4));
        // CB 49 036E
        gbc.setState(0x42b5, 0xfaa3, 0xc4d0, 0xee30, 0xb60, 0x6844, 0x1, 0x1);
        gbc.writeMem(0x42b5, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfaa3, gbc.sp());
        EXPECT(0x42b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 036F
        gbc.setState(0x7a05, 0x427e, 0x4210, 0xff01, 0xef2b, 0xd1d, 0x0, 0x1);
        gbc.writeMem(0x7a05, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x427e, gbc.sp());
        EXPECT(0x7a07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0370
        gbc.setState(0x3a78, 0xb3ad, 0x9200, 0x73a1, 0x2ef2, 0x43d9, 0x1, 0x1);
        gbc.writeMem(0x3a78, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb3ad, gbc.sp());
        EXPECT(0x3a7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0371
        gbc.setState(0x347b, 0x86bd, 0xc790, 0x5566, 0x1b33, 0xa954, 0x0, 0x1);
        gbc.writeMem(0x347b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x86bd, gbc.sp());
        EXPECT(0x347d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0372
        gbc.setState(0xee23, 0x51d8, 0x31b0, 0x97ee, 0x8d50, 0x9b29, 0x1, 0x1);
        gbc.writeMem(0xee23, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x51d8, gbc.sp());
        EXPECT(0xee25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee23));
        EXPECT(0x49, gbc.readMem(0xee24));
        // CB 49 0373
        gbc.setState(0x37f7, 0x87ba, 0xa170, 0x68a1, 0x122d, 0x159b, 0x0, 0x1);
        gbc.writeMem(0x37f7, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x87ba, gbc.sp());
        EXPECT(0x37f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0374
        gbc.setState(0xe56a, 0x26ff, 0x6870, 0x8c1d, 0x1792, 0xd40d, 0x1, 0x1);
        gbc.writeMem(0xe56a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x26ff, gbc.sp());
        EXPECT(0xe56c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe56a));
        EXPECT(0x49, gbc.readMem(0xe56b));
        // CB 49 0375
        gbc.setState(0x9d5f, 0x2699, 0xe8e0, 0xb399, 0x375, 0x737f, 0x0, 0x0);
        gbc.writeMem(0x9d5f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2699, gbc.sp());
        EXPECT(0x9d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d5f));
        EXPECT(0x49, gbc.readMem(0x9d60));
        // CB 49 0376
        gbc.setState(0x7db7, 0x9536, 0xe810, 0xad84, 0x59e7, 0xd70e, 0x1, 0x1);
        gbc.writeMem(0x7db7, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9536, gbc.sp());
        EXPECT(0x7db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0377
        gbc.setState(0xbdf4, 0x13d5, 0xa7f0, 0xeeca, 0x228d, 0x1667, 0x1, 0x1);
        gbc.writeMem(0xbdf4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x13d5, gbc.sp());
        EXPECT(0xbdf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf4));
        EXPECT(0x49, gbc.readMem(0xbdf5));
        // CB 49 0378
        gbc.setState(0x9a6b, 0x5c7f, 0xe010, 0x5228, 0x7399, 0xf954, 0x0, 0x1);
        gbc.writeMem(0x9a6b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5c7f, gbc.sp());
        EXPECT(0x9a6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a6b));
        EXPECT(0x49, gbc.readMem(0x9a6c));
        // CB 49 0379
        gbc.setState(0xb12b, 0x2851, 0xa6a0, 0x1589, 0x90d9, 0xae45, 0x0, 0x0);
        gbc.writeMem(0xb12b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2851, gbc.sp());
        EXPECT(0xb12d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb12b));
        EXPECT(0x49, gbc.readMem(0xb12c));
        // CB 49 037A
        gbc.setState(0xe141, 0xe46b, 0x7750, 0x3f88, 0xd5a2, 0x9aa4, 0x1, 0x1);
        gbc.writeMem(0xe141, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe46b, gbc.sp());
        EXPECT(0xe143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe141));
        EXPECT(0x49, gbc.readMem(0xe142));
        // CB 49 037B
        gbc.setState(0x9602, 0xdbca, 0xdb10, 0xdb5f, 0xddd7, 0x81d7, 0x0, 0x0);
        gbc.writeMem(0x9602, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xdbca, gbc.sp());
        EXPECT(0x9604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9602));
        EXPECT(0x49, gbc.readMem(0x9603));
        // CB 49 037C
        gbc.setState(0x39dc, 0x7ec0, 0xc530, 0xc000, 0x2d4b, 0x448, 0x1, 0x1);
        gbc.writeMem(0x39dc, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7ec0, gbc.sp());
        EXPECT(0x39de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 037D
        gbc.setState(0x9916, 0x2b10, 0xc1c0, 0x9297, 0xcea6, 0xf414, 0x1, 0x0);
        gbc.writeMem(0x9916, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2b10, gbc.sp());
        EXPECT(0x9918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9916));
        EXPECT(0x49, gbc.readMem(0x9917));
        // CB 49 037E
        gbc.setState(0x60e9, 0x9c8a, 0xf2a0, 0xa87f, 0x568d, 0x6d2c, 0x0, 0x0);
        gbc.writeMem(0x60e9, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9c8a, gbc.sp());
        EXPECT(0x60eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 037F
        gbc.setState(0x623f, 0xd119, 0xc770, 0x67ff, 0x5178, 0xb89e, 0x1, 0x0);
        gbc.writeMem(0x623f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd119, gbc.sp());
        EXPECT(0x6241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0380
        gbc.setState(0xafee, 0x9dd4, 0x3fd0, 0xfdd1, 0xee6c, 0xe60c, 0x1, 0x1);
        gbc.writeMem(0xafee, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9dd4, gbc.sp());
        EXPECT(0xaff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafee));
        EXPECT(0x49, gbc.readMem(0xafef));
        // CB 49 0381
        gbc.setState(0xa7f0, 0x77ef, 0x8930, 0x8287, 0x690a, 0xfe2e, 0x0, 0x0);
        gbc.writeMem(0xa7f0, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x77ef, gbc.sp());
        EXPECT(0xa7f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f0));
        EXPECT(0x49, gbc.readMem(0xa7f1));
        // CB 49 0382
        gbc.setState(0xdcfe, 0xe11, 0xa230, 0x6bde, 0xbd78, 0x2ccd, 0x1, 0x1);
        gbc.writeMem(0xdcfe, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe11, gbc.sp());
        EXPECT(0xdd00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcfe));
        EXPECT(0x49, gbc.readMem(0xdcff));
        // CB 49 0383
        gbc.setState(0x59b, 0x1122, 0x1f20, 0x8e61, 0xbe7, 0x8e8c, 0x1, 0x0);
        gbc.writeMem(0x59b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1122, gbc.sp());
        EXPECT(0x59d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 0384
        gbc.setState(0xa578, 0xc364, 0x74a0, 0xbfff, 0x6418, 0x2512, 0x1, 0x1);
        gbc.writeMem(0xa578, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc364, gbc.sp());
        EXPECT(0xa57a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa578));
        EXPECT(0x49, gbc.readMem(0xa579));
        // CB 49 0385
        gbc.setState(0xefd2, 0xb567, 0x15e0, 0x8260, 0x2919, 0x3a65, 0x1, 0x1);
        gbc.writeMem(0xefd2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb567, gbc.sp());
        EXPECT(0xefd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd2));
        EXPECT(0x49, gbc.readMem(0xefd3));
        // CB 49 0386
        gbc.setState(0x2e17, 0x98be, 0xa3d0, 0x6610, 0xfde5, 0xfa4a, 0x0, 0x0);
        gbc.writeMem(0x2e17, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x98be, gbc.sp());
        EXPECT(0x2e19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0387
        gbc.setState(0xc02e, 0xdc33, 0x5360, 0x9965, 0x5167, 0xaa42, 0x1, 0x0);
        gbc.writeMem(0xc02e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdc33, gbc.sp());
        EXPECT(0xc030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc02e));
        EXPECT(0x49, gbc.readMem(0xc02f));
        // CB 49 0388
        gbc.setState(0xe322, 0x96cd, 0x240, 0x4e16, 0xd379, 0xf8c7, 0x1, 0x1);
        gbc.writeMem(0xe322, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x96cd, gbc.sp());
        EXPECT(0xe324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe322));
        EXPECT(0x49, gbc.readMem(0xe323));
        // CB 49 0389
        gbc.setState(0xbc9c, 0xc25a, 0x34d0, 0x70e4, 0xb8af, 0x2010, 0x0, 0x1);
        gbc.writeMem(0xbc9c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc25a, gbc.sp());
        EXPECT(0xbc9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc9c));
        EXPECT(0x49, gbc.readMem(0xbc9d));
        // CB 49 038A
        gbc.setState(0x2526, 0xed12, 0xded0, 0x8ae9, 0x83, 0xc2c9, 0x0, 0x0);
        gbc.writeMem(0x2526, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xed12, gbc.sp());
        EXPECT(0x2528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 038B
        gbc.setState(0xa07b, 0x8c6a, 0xc8d0, 0x3c16, 0x271a, 0x907, 0x0, 0x1);
        gbc.writeMem(0xa07b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8c6a, gbc.sp());
        EXPECT(0xa07d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa07b));
        EXPECT(0x49, gbc.readMem(0xa07c));
        // CB 49 038C
        gbc.setState(0x17be, 0x19a8, 0x1730, 0x387d, 0xc8e, 0x7567, 0x0, 0x0);
        gbc.writeMem(0x17be, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x19a8, gbc.sp());
        EXPECT(0x17c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 038D
        gbc.setState(0x7441, 0x202e, 0xa560, 0xa8b4, 0x1dcc, 0xa809, 0x1, 0x0);
        gbc.writeMem(0x7441, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x202e, gbc.sp());
        EXPECT(0x7443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 038E
        gbc.setState(0x803c, 0x340, 0x92b0, 0x77d9, 0xcbb8, 0x525a, 0x1, 0x0);
        gbc.writeMem(0x803c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x340, gbc.sp());
        EXPECT(0x803e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x803c));
        EXPECT(0x49, gbc.readMem(0x803d));
        // CB 49 038F
        gbc.setState(0xb966, 0x1bc8, 0x4f30, 0xa56, 0x6cdd, 0xb75, 0x1, 0x1);
        gbc.writeMem(0xb966, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1bc8, gbc.sp());
        EXPECT(0xb968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb966));
        EXPECT(0x49, gbc.readMem(0xb967));
        // CB 49 0390
        gbc.setState(0x8ed2, 0x3315, 0xe820, 0xd432, 0x4479, 0xc84f, 0x0, 0x0);
        gbc.writeMem(0x8ed2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3315, gbc.sp());
        EXPECT(0x8ed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed2));
        EXPECT(0x49, gbc.readMem(0x8ed3));
        // CB 49 0391
        gbc.setState(0x2c3b, 0x7e25, 0x5d90, 0x9c70, 0x5e62, 0xac06, 0x1, 0x1);
        gbc.writeMem(0x2c3b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7e25, gbc.sp());
        EXPECT(0x2c3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0392
        gbc.setState(0xb7b3, 0x766f, 0xed10, 0x703d, 0xbeaa, 0x4e16, 0x0, 0x0);
        gbc.writeMem(0xb7b3, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x766f, gbc.sp());
        EXPECT(0xb7b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b3));
        EXPECT(0x49, gbc.readMem(0xb7b4));
        // CB 49 0394
        gbc.setState(0x4b02, 0xf82f, 0xd570, 0xc0b1, 0x4f28, 0x769a, 0x1, 0x0);
        gbc.writeMem(0x4b02, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf82f, gbc.sp());
        EXPECT(0x4b04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0395
        gbc.setState(0xe68f, 0xab54, 0x90d0, 0xe3c4, 0x5645, 0x482f, 0x1, 0x0);
        gbc.writeMem(0xe68f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xab54, gbc.sp());
        EXPECT(0xe691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe68f));
        EXPECT(0x49, gbc.readMem(0xe690));
        // CB 49 0396
        gbc.setState(0xc6fa, 0xc06e, 0x1bf0, 0xfecd, 0xea84, 0xbce, 0x0, 0x0);
        gbc.writeMem(0xc6fa, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc06e, gbc.sp());
        EXPECT(0xc6fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6fa));
        EXPECT(0x49, gbc.readMem(0xc6fb));
        // CB 49 0397
        gbc.setState(0x89c2, 0x3e11, 0x7dd0, 0xf5e6, 0xa499, 0x3fb0, 0x0, 0x1);
        gbc.writeMem(0x89c2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3e11, gbc.sp());
        EXPECT(0x89c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89c2));
        EXPECT(0x49, gbc.readMem(0x89c3));
        // CB 49 0398
        gbc.setState(0x1056, 0xf924, 0x9550, 0x3ca3, 0xb277, 0xa940, 0x0, 0x0);
        gbc.writeMem(0x1056, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf924, gbc.sp());
        EXPECT(0x1058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 0399
        gbc.setState(0xda7b, 0x1f21, 0xabc0, 0xefe, 0x8127, 0x2949, 0x1, 0x1);
        gbc.writeMem(0xda7b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1f21, gbc.sp());
        EXPECT(0xda7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda7b));
        EXPECT(0x49, gbc.readMem(0xda7c));
        // CB 49 039A
        gbc.setState(0x2f28, 0x97e7, 0x9b00, 0x66bd, 0xaab8, 0xd2c8, 0x1, 0x1);
        gbc.writeMem(0x2f28, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x97e7, gbc.sp());
        EXPECT(0x2f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 039B
        gbc.setState(0xd775, 0x41e3, 0xd5e0, 0x1032, 0xce54, 0xb10e, 0x0, 0x0);
        gbc.writeMem(0xd775, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x41e3, gbc.sp());
        EXPECT(0xd777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd775));
        EXPECT(0x49, gbc.readMem(0xd776));
        // CB 49 039C
        gbc.setState(0x1bcf, 0x3b02, 0xbaa0, 0x6385, 0xddad, 0xfe12, 0x0, 0x1);
        gbc.writeMem(0x1bcf, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3b02, gbc.sp());
        EXPECT(0x1bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 039D
        gbc.setState(0x7e9f, 0x1954, 0x72c0, 0x85b6, 0x6232, 0x51b3, 0x1, 0x1);
        gbc.writeMem(0x7e9f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1954, gbc.sp());
        EXPECT(0x7ea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 039E
        gbc.setState(0xe8d8, 0x7f33, 0x9fa0, 0xe782, 0x3fee, 0xa9fe, 0x0, 0x0);
        gbc.writeMem(0xe8d8, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7f33, gbc.sp());
        EXPECT(0xe8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d8));
        EXPECT(0x49, gbc.readMem(0xe8d9));
        // CB 49 039F
        gbc.setState(0xe6ff, 0x51e1, 0xab70, 0xb7ad, 0xf61c, 0x3d62, 0x1, 0x1);
        gbc.writeMem(0xe6ff, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x51e1, gbc.sp());
        EXPECT(0xe701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ff));
        EXPECT(0x49, gbc.readMem(0xe700));
        // CB 49 03A0
        gbc.setState(0x1cde, 0xab2b, 0x3e0, 0x483b, 0x89a, 0x7d1d, 0x1, 0x1);
        gbc.writeMem(0x1cde, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xab2b, gbc.sp());
        EXPECT(0x1ce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 03A1
        gbc.setState(0xa4cf, 0x4258, 0xfc00, 0x1b19, 0xabbe, 0xec70, 0x1, 0x1);
        gbc.writeMem(0xa4cf, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4258, gbc.sp());
        EXPECT(0xa4d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4cf));
        EXPECT(0x49, gbc.readMem(0xa4d0));
        // CB 49 03A2
        gbc.setState(0xd116, 0x7352, 0x5da0, 0x2ee7, 0x4a8, 0xa677, 0x0, 0x0);
        gbc.writeMem(0xd116, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7352, gbc.sp());
        EXPECT(0xd118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd116));
        EXPECT(0x49, gbc.readMem(0xd117));
        // CB 49 03A3
        gbc.setState(0x59c9, 0x803a, 0x5bc0, 0x92b8, 0xf408, 0x1b6b, 0x0, 0x1);
        gbc.writeMem(0x59c9, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x803a, gbc.sp());
        EXPECT(0x59cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 03A4
        gbc.setState(0xdafd, 0x3e7c, 0xd270, 0xa0a1, 0x37e8, 0x7c31, 0x1, 0x1);
        gbc.writeMem(0xdafd, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3e7c, gbc.sp());
        EXPECT(0xdaff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdafd));
        EXPECT(0x49, gbc.readMem(0xdafe));
        // CB 49 03A5
        gbc.setState(0x8db1, 0xafca, 0x68d0, 0x3e1b, 0x4650, 0xffbe, 0x1, 0x0);
        gbc.writeMem(0x8db1, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xafca, gbc.sp());
        EXPECT(0x8db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db1));
        EXPECT(0x49, gbc.readMem(0x8db2));
        // CB 49 03A6
        gbc.setState(0x4b4d, 0x80a, 0xede0, 0xb6f1, 0x225, 0x7fb7, 0x0, 0x1);
        gbc.writeMem(0x4b4d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x80a, gbc.sp());
        EXPECT(0x4b4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 03A7
        gbc.setState(0x4955, 0x5b2, 0xfc70, 0xefa6, 0x125b, 0xe062, 0x0, 0x1);
        gbc.writeMem(0x4955, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5b2, gbc.sp());
        EXPECT(0x4957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 03A8
        gbc.setState(0xe011, 0x669, 0x5c40, 0x2bb, 0x3a66, 0xec55, 0x1, 0x1);
        gbc.writeMem(0xe011, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x669, gbc.sp());
        EXPECT(0xe013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe011));
        EXPECT(0x49, gbc.readMem(0xe012));
        // CB 49 03AA
        gbc.setState(0x1ded, 0x8298, 0xd680, 0xea8b, 0x2426, 0x3b2, 0x0, 0x0);
        gbc.writeMem(0x1ded, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8298, gbc.sp());
        EXPECT(0x1def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 03AB
        gbc.setState(0x3f04, 0xe037, 0x7a70, 0xe9d, 0xcf98, 0x45d2, 0x1, 0x1);
        gbc.writeMem(0x3f04, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe037, gbc.sp());
        EXPECT(0x3f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 03AC
        gbc.setState(0x694c, 0x7793, 0x4a00, 0xec5, 0x4ac5, 0xf093, 0x1, 0x0);
        gbc.writeMem(0x694c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7793, gbc.sp());
        EXPECT(0x694e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 03AD
        gbc.setState(0x71ef, 0x8341, 0x2870, 0x735d, 0x8418, 0x2799, 0x0, 0x0);
        gbc.writeMem(0x71ef, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8341, gbc.sp());
        EXPECT(0x71f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 03AE
        gbc.setState(0xd7cd, 0x723e, 0x7170, 0xb802, 0xcce8, 0xb8ea, 0x1, 0x0);
        gbc.writeMem(0xd7cd, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x723e, gbc.sp());
        EXPECT(0xd7cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7cd));
        EXPECT(0x49, gbc.readMem(0xd7ce));
        // CB 49 03AF
        gbc.setState(0x3e9c, 0x8cf5, 0x4350, 0x9ffe, 0xb5b4, 0xdb88, 0x1, 0x1);
        gbc.writeMem(0x3e9c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8cf5, gbc.sp());
        EXPECT(0x3e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 03B0
        gbc.setState(0x40c8, 0xd999, 0xb060, 0xef00, 0xe394, 0x8eb6, 0x1, 0x0);
        gbc.writeMem(0x40c8, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd999, gbc.sp());
        EXPECT(0x40ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 03B1
        gbc.setState(0xcf6f, 0xadfb, 0x60b0, 0x63c5, 0x99cc, 0x7689, 0x1, 0x0);
        gbc.writeMem(0xcf6f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xadfb, gbc.sp());
        EXPECT(0xcf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf6f));
        EXPECT(0x49, gbc.readMem(0xcf70));
        // CB 49 03B2
        gbc.setState(0x2240, 0xfd1e, 0xcc30, 0x7adc, 0xf50, 0x13f4, 0x1, 0x0);
        gbc.writeMem(0x2240, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfd1e, gbc.sp());
        EXPECT(0x2242, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 03B3
        gbc.setState(0xa47c, 0xefc9, 0x4720, 0x747f, 0x38be, 0x9dc7, 0x0, 0x1);
        gbc.writeMem(0xa47c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xefc9, gbc.sp());
        EXPECT(0xa47e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa47c));
        EXPECT(0x49, gbc.readMem(0xa47d));
        // CB 49 03B5
        gbc.setState(0xd0a2, 0xce41, 0x6660, 0xf29a, 0xb828, 0x98c7, 0x0, 0x0);
        gbc.writeMem(0xd0a2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xce41, gbc.sp());
        EXPECT(0xd0a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a2));
        EXPECT(0x49, gbc.readMem(0xd0a3));
        // CB 49 03B6
        gbc.setState(0xaa75, 0x42c4, 0xe180, 0x5456, 0xac3, 0xe938, 0x0, 0x1);
        gbc.writeMem(0xaa75, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x42c4, gbc.sp());
        EXPECT(0xaa77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa75));
        EXPECT(0x49, gbc.readMem(0xaa76));
        // CB 49 03B7
        gbc.setState(0xbc49, 0xe11a, 0xa5a0, 0xf1e8, 0x8806, 0x3372, 0x0, 0x0);
        gbc.writeMem(0xbc49, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe11a, gbc.sp());
        EXPECT(0xbc4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc49));
        EXPECT(0x49, gbc.readMem(0xbc4a));
        // CB 49 03B8
        gbc.setState(0xc5fa, 0xdd47, 0xa570, 0xeeb, 0x41a3, 0x979c, 0x0, 0x0);
        gbc.writeMem(0xc5fa, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdd47, gbc.sp());
        EXPECT(0xc5fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5fa));
        EXPECT(0x49, gbc.readMem(0xc5fb));
        // CB 49 03B9
        gbc.setState(0x588, 0x7d4f, 0x4fe0, 0xb882, 0x2526, 0x3e2d, 0x0, 0x1);
        gbc.writeMem(0x588, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7d4f, gbc.sp());
        EXPECT(0x58a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 03BA
        gbc.setState(0x87fb, 0xf417, 0x4ec0, 0xb92, 0xe1fa, 0x17ee, 0x1, 0x1);
        gbc.writeMem(0x87fb, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf417, gbc.sp());
        EXPECT(0x87fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87fb));
        EXPECT(0x49, gbc.readMem(0x87fc));
        // CB 49 03BB
        gbc.setState(0x2d93, 0x1881, 0xde70, 0x6698, 0x1667, 0x8564, 0x1, 0x0);
        gbc.writeMem(0x2d93, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1881, gbc.sp());
        EXPECT(0x2d95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 03BD
        gbc.setState(0xd66d, 0x3ac8, 0x98b0, 0x90c8, 0xd993, 0x11ad, 0x1, 0x0);
        gbc.writeMem(0xd66d, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3ac8, gbc.sp());
        EXPECT(0xd66f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd66d));
        EXPECT(0x49, gbc.readMem(0xd66e));
        // CB 49 03BE
        gbc.setState(0x5da2, 0x56eb, 0xe340, 0xd50f, 0xcfb4, 0x2c16, 0x0, 0x0);
        gbc.writeMem(0x5da2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x56eb, gbc.sp());
        EXPECT(0x5da4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 03C0
        gbc.setState(0x5bc8, 0x68bf, 0x8880, 0xba4d, 0xf774, 0xd5d5, 0x0, 0x1);
        gbc.writeMem(0x5bc8, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x68bf, gbc.sp());
        EXPECT(0x5bca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 03C1
        gbc.setState(0xee66, 0x1581, 0x7550, 0x3340, 0x39b5, 0x387e, 0x1, 0x1);
        gbc.writeMem(0xee66, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1581, gbc.sp());
        EXPECT(0xee68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee66));
        EXPECT(0x49, gbc.readMem(0xee67));
        // CB 49 03C2
        gbc.setState(0x5188, 0xfbd1, 0x3410, 0x521c, 0xc796, 0x694e, 0x0, 0x0);
        gbc.writeMem(0x5188, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfbd1, gbc.sp());
        EXPECT(0x518a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 03C3
        gbc.setState(0xd95c, 0x51bf, 0xc170, 0x53cc, 0xc918, 0x48ed, 0x1, 0x1);
        gbc.writeMem(0xd95c, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x51bf, gbc.sp());
        EXPECT(0xd95e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd95c));
        EXPECT(0x49, gbc.readMem(0xd95d));
        // CB 49 03C4
        gbc.setState(0xab3b, 0x2380, 0xb030, 0xbf2e, 0x322d, 0x89d, 0x1, 0x0);
        gbc.writeMem(0xab3b, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2380, gbc.sp());
        EXPECT(0xab3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab3b));
        EXPECT(0x49, gbc.readMem(0xab3c));
        // CB 49 03C5
        gbc.setState(0xb256, 0xb71f, 0x7ac0, 0x4a7f, 0xdc41, 0x6769, 0x0, 0x0);
        gbc.writeMem(0xb256, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb71f, gbc.sp());
        EXPECT(0xb258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb256));
        EXPECT(0x49, gbc.readMem(0xb257));
        // CB 49 03C6
        gbc.setState(0x6761, 0xc825, 0x4bc0, 0x2286, 0x333c, 0x64a0, 0x0, 0x0);
        gbc.writeMem(0x6761, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc825, gbc.sp());
        EXPECT(0x6763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 03C7
        gbc.setState(0x1279, 0xc01, 0xd3f0, 0xb498, 0xc42a, 0x4e25, 0x0, 0x0);
        gbc.writeMem(0x1279, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc01, gbc.sp());
        EXPECT(0x127b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 03C8
        gbc.setState(0xb479, 0x82e6, 0x9690, 0xfe, 0x3be0, 0x2593, 0x0, 0x1);
        gbc.writeMem(0xb479, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x82e6, gbc.sp());
        EXPECT(0xb47b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb479));
        EXPECT(0x49, gbc.readMem(0xb47a));
        // CB 49 03C9
        gbc.setState(0xa86, 0xbda6, 0xc260, 0xd77a, 0x97de, 0x5241, 0x1, 0x0);
        gbc.writeMem(0xa86, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbda6, gbc.sp());
        EXPECT(0xa88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 03CA
        gbc.setState(0x72a, 0x556a, 0x2f70, 0x128a, 0xe921, 0x7f14, 0x0, 0x1);
        gbc.writeMem(0x72a, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x556a, gbc.sp());
        EXPECT(0x72c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 03CB
        gbc.setState(0x229f, 0x8a7c, 0x27f0, 0x5fa8, 0x6137, 0xee58, 0x0, 0x0);
        gbc.writeMem(0x229f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8a7c, gbc.sp());
        EXPECT(0x22a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 03CC
        gbc.setState(0x851f, 0x4da0, 0xe5f0, 0x6ea7, 0x100e, 0x23ec, 0x0, 0x1);
        gbc.writeMem(0x851f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4da0, gbc.sp());
        EXPECT(0x8521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x851f));
        EXPECT(0x49, gbc.readMem(0x8520));
        // CB 49 03CD
        gbc.setState(0xdda2, 0x92dc, 0xfbb0, 0x4a0, 0x6a97, 0xdb16, 0x0, 0x1);
        gbc.writeMem(0xdda2, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x92dc, gbc.sp());
        EXPECT(0xdda4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdda2));
        EXPECT(0x49, gbc.readMem(0xdda3));
        // CB 49 03CE
        gbc.setState(0x70fb, 0x6b41, 0xbd10, 0x7fac, 0x4eb2, 0xc4f2, 0x1, 0x0);
        gbc.writeMem(0x70fb, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6b41, gbc.sp());
        EXPECT(0x70fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 03CF
        gbc.setState(0x4159, 0x7244, 0xf090, 0x6921, 0x4ee2, 0x9f29, 0x0, 0x1);
        gbc.writeMem(0x4159, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7244, gbc.sp());
        EXPECT(0x415b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 03D0
        gbc.setState(0x3ab9, 0x591d, 0xf090, 0xff97, 0xd298, 0x2437, 0x0, 0x1);
        gbc.writeMem(0x3ab9, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x591d, gbc.sp());
        EXPECT(0x3abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 03D1
        gbc.setState(0x1e2e, 0x9fab, 0xa870, 0x9487, 0xc0d, 0x1775, 0x1, 0x0);
        gbc.writeMem(0x1e2e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9fab, gbc.sp());
        EXPECT(0x1e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 03D2
        gbc.setState(0xcd35, 0x53fc, 0xfc90, 0x18d5, 0xe1d7, 0x1a84, 0x1, 0x0);
        gbc.writeMem(0xcd35, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x53fc, gbc.sp());
        EXPECT(0xcd37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd35));
        EXPECT(0x49, gbc.readMem(0xcd36));
        // CB 49 03D3
        gbc.setState(0xcca1, 0x81e4, 0x59b0, 0x91b8, 0x69e2, 0xf037, 0x1, 0x1);
        gbc.writeMem(0xcca1, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x81e4, gbc.sp());
        EXPECT(0xcca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcca1));
        EXPECT(0x49, gbc.readMem(0xcca2));
        // CB 49 03D4
        gbc.setState(0x223f, 0x8210, 0xdc60, 0xb1b0, 0x9a74, 0x557f, 0x1, 0x0);
        gbc.writeMem(0x223f, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8210, gbc.sp());
        EXPECT(0x2241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 03D5
        gbc.setState(0xd1c1, 0x12eb, 0x13f0, 0x551f, 0x2583, 0xc34b, 0x1, 0x1);
        gbc.writeMem(0xd1c1, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x12eb, gbc.sp());
        EXPECT(0xd1c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1c1));
        EXPECT(0x49, gbc.readMem(0xd1c2));
        // CB 49 03D6
        gbc.setState(0x7e47, 0x7ecf, 0xfd90, 0xdbbd, 0xc36b, 0x6a5a, 0x1, 0x0);
        gbc.writeMem(0x7e47, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7ecf, gbc.sp());
        EXPECT(0x7e49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 03D7
        gbc.setState(0xbebe, 0xf708, 0xd910, 0x8458, 0xa524, 0xe643, 0x0, 0x0);
        gbc.writeMem(0xbebe, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf708, gbc.sp());
        EXPECT(0xbec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbebe));
        EXPECT(0x49, gbc.readMem(0xbebf));
        // CB 49 03D8
        gbc.setState(0x3a96, 0xd54a, 0x2bc0, 0x4316, 0xa9d2, 0xc276, 0x1, 0x0);
        gbc.writeMem(0x3a96, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd54a, gbc.sp());
        EXPECT(0x3a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 03D9
        gbc.setState(0xd0ad, 0xa419, 0xaa10, 0x735f, 0x143b, 0xfb0c, 0x0, 0x0);
        gbc.writeMem(0xd0ad, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa419, gbc.sp());
        EXPECT(0xd0af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ad));
        EXPECT(0x49, gbc.readMem(0xd0ae));
        // CB 49 03DA
        gbc.setState(0x6836, 0xb47e, 0x5bb0, 0xde17, 0x1538, 0xec9, 0x0, 0x0);
        gbc.writeMem(0x6836, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb47e, gbc.sp());
        EXPECT(0x6838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 03DB
        gbc.setState(0x10c9, 0xa1c0, 0xc7f0, 0x1c56, 0x114a, 0xe895, 0x1, 0x0);
        gbc.writeMem(0x10c9, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa1c0, gbc.sp());
        EXPECT(0x10cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 03DC
        gbc.setState(0xecbc, 0x4e9e, 0xc060, 0x8c8c, 0x5302, 0xcc5b, 0x0, 0x0);
        gbc.writeMem(0xecbc, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4e9e, gbc.sp());
        EXPECT(0xecbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecbc));
        EXPECT(0x49, gbc.readMem(0xecbd));
        // CB 49 03DD
        gbc.setState(0x6abe, 0x58de, 0x88c0, 0x56b2, 0x22a3, 0x319f, 0x1, 0x0);
        gbc.writeMem(0x6abe, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x58de, gbc.sp());
        EXPECT(0x6ac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 03DE
        gbc.setState(0xdcf0, 0x15e6, 0x5ff0, 0x74f7, 0x3257, 0xacd2, 0x1, 0x0);
        gbc.writeMem(0xdcf0, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x15e6, gbc.sp());
        EXPECT(0xdcf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf0));
        EXPECT(0x49, gbc.readMem(0xdcf1));
        // CB 49 03DF
        gbc.setState(0x4135, 0x3c56, 0x9c00, 0xff36, 0x6ff2, 0x5e3e, 0x0, 0x1);
        gbc.writeMem(0x4135, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3c56, gbc.sp());
        EXPECT(0x4137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 03E0
        gbc.setState(0xaaa1, 0x1cb4, 0xc50, 0x453, 0x9041, 0x757a, 0x0, 0x1);
        gbc.writeMem(0xaaa1, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1cb4, gbc.sp());
        EXPECT(0xaaa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa1));
        EXPECT(0x49, gbc.readMem(0xaaa2));
        // CB 49 03E1
        gbc.setState(0xee99, 0x41c5, 0xf110, 0x3f1d, 0x73cf, 0x68bf, 0x0, 0x1);
        gbc.writeMem(0xee99, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x41c5, gbc.sp());
        EXPECT(0xee9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee99));
        EXPECT(0x49, gbc.readMem(0xee9a));
        // CB 49 03E2
        gbc.setState(0x7415, 0x6dd7, 0xa640, 0x3398, 0x1d95, 0x7c59, 0x0, 0x0);
        gbc.writeMem(0x7415, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6dd7, gbc.sp());
        EXPECT(0x7417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 03E3
        gbc.setState(0x6c31, 0xd50d, 0x810, 0xc894, 0x365c, 0x2fd, 0x1, 0x1);
        gbc.writeMem(0x6c31, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd50d, gbc.sp());
        EXPECT(0x6c33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 03E4
        gbc.setState(0x6353, 0x918a, 0xca20, 0xd48, 0x5086, 0x5660, 0x0, 0x0);
        gbc.writeMem(0x6353, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x918a, gbc.sp());
        EXPECT(0x6355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 49 03E5
        gbc.setState(0xd70e, 0xcdf5, 0xe220, 0x19f8, 0x1b2a, 0xde28, 0x1, 0x1);
        gbc.writeMem(0xd70e, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xcdf5, gbc.sp());
        EXPECT(0xd710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd70e));
        EXPECT(0x49, gbc.readMem(0xd70f));
        // CB 49 03E6
        gbc.setState(0x54b4, 0x1e7c, 0xc470, 0x4ba1, 0x5d75, 0x7d40, 0x1, 0x0);
        gbc.writeMem(0x54b4, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1e7c, gbc.sp());
        EXPECT(0x54b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 49 03E7
        gbc.setState(0xd762, 0x5651, 0x7de0, 0xa2d1, 0x5415, 0x2bff, 0x1, 0x0);
        gbc.writeMem(0xd762, { 0xcb, 0x49 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5651, gbc.sp());
        EXPECT(0xd764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd762));
        EXPECT(0x49, gbc.readMem(0xd763));
    }
