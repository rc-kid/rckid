#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_2a)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_2a) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 2A 0000
        gbc.setState(0x8493, 0x26f2, 0xda60, 0xdb3d, 0xe28a, 0x11ef, 0x1, 0x1);
        gbc.writeMem(0x11ef, { 0xe3 });
        gbc.writeMem(0x8493, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x26f2);
        EXPECT(gbc.pc(), 0x8494);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8493), 0x2a);
        // 2A 0002
        gbc.setState(0xd5ee, 0xa73d, 0xbc00, 0x9d53, 0x4552, 0x447e, 0x1, 0x1);
        gbc.writeMem(0x447e, { 0x8 });
        gbc.writeMem(0xd5ee, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa73d);
        EXPECT(gbc.pc(), 0xd5ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5ee), 0x2a);
        // 2A 0003
        gbc.setState(0x564b, 0xfe37, 0xcb0, 0xff31, 0x9641, 0x8d59, 0x1, 0x1);
        gbc.writeMem(0x564b, { 0x2a });
        gbc.writeMem(0x8d59, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xfe37);
        EXPECT(gbc.pc(), 0x564c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d59), 0xe1);
        // 2A 0004
        gbc.setState(0x3a16, 0x28f6, 0xba70, 0x3afd, 0xc077, 0x964d, 0x0, 0x1);
        gbc.writeMem(0x3a16, { 0x2a });
        gbc.writeMem(0x964d, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x28f6);
        EXPECT(gbc.pc(), 0x3a17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x964d), 0xc6);
        // 2A 0005
        gbc.setState(0x9872, 0x753c, 0x8200, 0xddc2, 0xdedd, 0x339, 0x0, 0x0);
        gbc.writeMem(0x339, { 0x1e });
        gbc.writeMem(0x9872, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x753c);
        EXPECT(gbc.pc(), 0x9873);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9872), 0x2a);
        // 2A 0006
        gbc.setState(0x7dae, 0x2409, 0xbe10, 0x5b7f, 0x45c4, 0x581f, 0x0, 0x0);
        gbc.writeMem(0x581f, { 0x88 });
        gbc.writeMem(0x7dae, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2409);
        EXPECT(gbc.pc(), 0x7daf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0007
        gbc.setState(0xc883, 0x5603, 0xa7e0, 0xf297, 0x97eb, 0xa6ee, 0x1, 0x0);
        gbc.writeMem(0xa6ee, { 0xfb });
        gbc.writeMem(0xc883, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x5603);
        EXPECT(gbc.pc(), 0xc884);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ee), 0xfb);
        EXPECT(gbc.readMem(0xc883), 0x2a);
        // 2A 000A
        gbc.setState(0x5441, 0x40c6, 0x8f70, 0xa342, 0xc10a, 0xba2d, 0x0, 0x0);
        gbc.writeMem(0x5441, { 0x2a });
        gbc.writeMem(0xba2d, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x40c6);
        EXPECT(gbc.pc(), 0x5442);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba2d), 0x52);
        // 2A 000B
        gbc.setState(0xaeef, 0x18fa, 0x67d0, 0x41ae, 0x6e56, 0x3444, 0x0, 0x1);
        gbc.writeMem(0x3444, { 0x46 });
        gbc.writeMem(0xaeef, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x18fa);
        EXPECT(gbc.pc(), 0xaef0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeef), 0x2a);
        // 2A 000C
        gbc.setState(0xb2cf, 0xafb6, 0xf250, 0x32b4, 0x121e, 0x98cc, 0x0, 0x1);
        gbc.writeMem(0x98cc, { 0xb });
        gbc.writeMem(0xb2cf, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xafb6);
        EXPECT(gbc.pc(), 0xb2d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98cc), 0xb);
        EXPECT(gbc.readMem(0xb2cf), 0x2a);
        // 2A 000D
        gbc.setState(0xb896, 0x3ca4, 0x95b0, 0x800, 0xa4bf, 0x6432, 0x1, 0x1);
        gbc.writeMem(0x6432, { 0x5a });
        gbc.writeMem(0xb896, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3ca4);
        EXPECT(gbc.pc(), 0xb897);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb896), 0x2a);
        // 2A 000E
        gbc.setState(0x2568, 0x1cec, 0x250, 0xcb4f, 0xcef8, 0x1b09, 0x1, 0x0);
        gbc.writeMem(0x1b09, { 0x63 });
        gbc.writeMem(0x2568, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x1cec);
        EXPECT(gbc.pc(), 0x2569);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 000F
        gbc.setState(0xc921, 0x729f, 0x21b0, 0xdd5d, 0xeede, 0xba, 0x1, 0x0);
        gbc.writeMem(0xba, { 0xbc });
        gbc.writeMem(0xc921, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x729f);
        EXPECT(gbc.pc(), 0xc922);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc921), 0x2a);
        // 2A 0010
        gbc.setState(0xdef1, 0x1a36, 0xde0, 0xd220, 0x4f83, 0x4acf, 0x0, 0x0);
        gbc.writeMem(0x4acf, { 0x1 });
        gbc.writeMem(0xdef1, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1a36);
        EXPECT(gbc.pc(), 0xdef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdef1), 0x2a);
        // 2A 0011
        gbc.setState(0xc745, 0x1ddd, 0x7350, 0x4f80, 0xb07b, 0x5e89, 0x0, 0x1);
        gbc.writeMem(0x5e89, { 0xf7 });
        gbc.writeMem(0xc745, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1ddd);
        EXPECT(gbc.pc(), 0xc746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc745), 0x2a);
        // 2A 0012
        gbc.setState(0x7377, 0x472a, 0x2d40, 0x2a12, 0x3d9, 0x90eb, 0x1, 0x1);
        gbc.writeMem(0x7377, { 0x2a });
        gbc.writeMem(0x90eb, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x472a);
        EXPECT(gbc.pc(), 0x7378);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90eb), 0xec);
        // 2A 0013
        gbc.setState(0x30eb, 0xbb43, 0x6630, 0xbe52, 0x98b0, 0xfc47, 0x0, 0x1);
        gbc.writeMem(0x30eb, { 0x2a });
        gbc.writeMem(0xfc47, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xbb43);
        EXPECT(gbc.pc(), 0x30ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc47), 0x37);
        // 2A 0014
        gbc.setState(0x3f88, 0x9c37, 0x40f0, 0x7e6d, 0xd9b8, 0x4bad, 0x1, 0x1);
        gbc.writeMem(0x3f88, { 0x2a });
        gbc.writeMem(0x4bad, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9c37);
        EXPECT(gbc.pc(), 0x3f89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0015
        gbc.setState(0x7a86, 0xc20c, 0xfc80, 0xfa8b, 0x986a, 0xc8fc, 0x0, 0x0);
        gbc.writeMem(0x7a86, { 0x2a });
        gbc.writeMem(0xc8fc, { 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xc20c);
        EXPECT(gbc.pc(), 0x7a87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8fc), 0xe);
        // 2A 0016
        gbc.setState(0x9392, 0xd9ed, 0x21b0, 0x517d, 0x7c25, 0x7c70, 0x1, 0x1);
        gbc.writeMem(0x7c70, { 0x52 });
        gbc.writeMem(0x9392, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd9ed);
        EXPECT(gbc.pc(), 0x9393);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9392), 0x2a);
        // 2A 0017
        gbc.setState(0x23d4, 0x4eb5, 0x4780, 0xb20a, 0xe12e, 0x37c8, 0x1, 0x0);
        gbc.writeMem(0x23d4, { 0x2a });
        gbc.writeMem(0x37c8, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4eb5);
        EXPECT(gbc.pc(), 0x23d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0018
        gbc.setState(0xeb4b, 0xa762, 0x29b0, 0x259f, 0xe359, 0x635f, 0x0, 0x0);
        gbc.writeMem(0x635f, { 0x45 });
        gbc.writeMem(0xeb4b, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa762);
        EXPECT(gbc.pc(), 0xeb4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb4b), 0x2a);
        // 2A 0019
        gbc.setState(0xa0e6, 0xe660, 0x1f60, 0x7af1, 0x5eb1, 0x60e8, 0x0, 0x1);
        gbc.writeMem(0x60e8, { 0xf4 });
        gbc.writeMem(0xa0e6, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe660);
        EXPECT(gbc.pc(), 0xa0e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e6), 0x2a);
        // 2A 001A
        gbc.setState(0xa556, 0x3281, 0x1f50, 0xd8d0, 0xf930, 0xffb5, 0x0, 0x1);
        gbc.writeMem(0xa556, { 0x2a });
        gbc.writeMem(0xffb5, { 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x3281);
        EXPECT(gbc.pc(), 0xa557);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa556), 0x2a);
        EXPECT(gbc.readMem(0xffb5), 0x1b);
        // 2A 001B
        gbc.setState(0x8c16, 0xf752, 0x5ac0, 0x5b52, 0xec01, 0x8a49, 0x1, 0x0);
        gbc.writeMem(0x8a49, { 0xb1 });
        gbc.writeMem(0x8c16, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf752);
        EXPECT(gbc.pc(), 0x8c17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a49), 0xb1);
        EXPECT(gbc.readMem(0x8c16), 0x2a);
        // 2A 001C
        gbc.setState(0x7be7, 0xf6fc, 0x1aa0, 0x46a, 0xf0aa, 0x1800, 0x1, 0x0);
        gbc.writeMem(0x1800, { 0x22 });
        gbc.writeMem(0x7be7, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf6fc);
        EXPECT(gbc.pc(), 0x7be8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 001D
        gbc.setState(0x898b, 0x384f, 0xb5f0, 0xe8ef, 0xcd73, 0xe3b6, 0x0, 0x0);
        gbc.writeMem(0x898b, { 0x2a });
        gbc.writeMem(0xe3b6, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x384f);
        EXPECT(gbc.pc(), 0x898c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x898b), 0x2a);
        EXPECT(gbc.readMem(0xe3b6), 0x24);
        // 2A 001E
        gbc.setState(0xb1aa, 0x5a36, 0xf2d0, 0xe81a, 0xa4a7, 0xef73, 0x1, 0x1);
        gbc.writeMem(0xb1aa, { 0x2a });
        gbc.writeMem(0xef73, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5a36);
        EXPECT(gbc.pc(), 0xb1ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1aa), 0x2a);
        EXPECT(gbc.readMem(0xef73), 0xee);
        // 2A 001F
        gbc.setState(0x6f5a, 0x4a4, 0x6fd0, 0xba70, 0x3233, 0xbe3c, 0x0, 0x0);
        gbc.writeMem(0x6f5a, { 0x2a });
        gbc.writeMem(0xbe3c, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4a4);
        EXPECT(gbc.pc(), 0x6f5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe3c), 0xfe);
        // 2A 0020
        gbc.setState(0x65ae, 0x7c73, 0x1cc0, 0x4da7, 0x2192, 0x5640, 0x0, 0x0);
        gbc.writeMem(0x5640, { 0xde });
        gbc.writeMem(0x65ae, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7c73);
        EXPECT(gbc.pc(), 0x65af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0021
        gbc.setState(0x1ab0, 0x2a36, 0x3710, 0x4392, 0x572, 0x4580, 0x1, 0x0);
        gbc.writeMem(0x1ab0, { 0x2a });
        gbc.writeMem(0x4580, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2a36);
        EXPECT(gbc.pc(), 0x1ab1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0022
        gbc.setState(0x8faa, 0xdf3d, 0xc8d0, 0x36f8, 0xd99c, 0xe671, 0x1, 0x1);
        gbc.writeMem(0x8faa, { 0x2a });
        gbc.writeMem(0xe671, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xdf3d);
        EXPECT(gbc.pc(), 0x8fab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8faa), 0x2a);
        EXPECT(gbc.readMem(0xe671), 0x4d);
        // 2A 0023
        gbc.setState(0x8e4f, 0x56ed, 0x3350, 0xc07d, 0xdda3, 0x1edd, 0x0, 0x1);
        gbc.writeMem(0x1edd, { 0xf5 });
        gbc.writeMem(0x8e4f, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x56ed);
        EXPECT(gbc.pc(), 0x8e50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e4f), 0x2a);
        // 2A 0024
        gbc.setState(0x3e2f, 0x6b9d, 0x6540, 0xe5d7, 0x4927, 0x4347, 0x1, 0x1);
        gbc.writeMem(0x3e2f, { 0x2a });
        gbc.writeMem(0x4347, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6b9d);
        EXPECT(gbc.pc(), 0x3e30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0025
        gbc.setState(0x4e83, 0x2be1, 0xc4b0, 0x11ef, 0xc497, 0x93fe, 0x0, 0x1);
        gbc.writeMem(0x4e83, { 0x2a });
        gbc.writeMem(0x93fe, { 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2be1);
        EXPECT(gbc.pc(), 0x4e84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93fe), 0xb2);
        // 2A 0026
        gbc.setState(0xeb9b, 0xb038, 0x4210, 0xdd06, 0xfae4, 0x68af, 0x0, 0x1);
        gbc.writeMem(0x68af, { 0x14 });
        gbc.writeMem(0xeb9b, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb038);
        EXPECT(gbc.pc(), 0xeb9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb9b), 0x2a);
        // 2A 0027
        gbc.setState(0x5a12, 0xf36, 0xe5c0, 0x5f7b, 0x532c, 0xf16d, 0x1, 0x0);
        gbc.writeMem(0x5a12, { 0x2a });
        gbc.writeMem(0xf16d, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xf36);
        EXPECT(gbc.pc(), 0x5a13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf16d), 0x8e);
        // 2A 0028
        gbc.setState(0x657c, 0xb230, 0x7f70, 0xcd1c, 0x3b71, 0x256, 0x1, 0x1);
        gbc.writeMem(0x256, { 0x2c });
        gbc.writeMem(0x657c, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb230);
        EXPECT(gbc.pc(), 0x657d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0029
        gbc.setState(0xad2d, 0xb875, 0xab20, 0x6c68, 0x37c4, 0x982a, 0x1, 0x1);
        gbc.writeMem(0x982a, { 0x20 });
        gbc.writeMem(0xad2d, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb875);
        EXPECT(gbc.pc(), 0xad2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x982a), 0x20);
        EXPECT(gbc.readMem(0xad2d), 0x2a);
        // 2A 002A
        gbc.setState(0x9862, 0x3b91, 0x1050, 0x3a0f, 0x903c, 0x9ea6, 0x0, 0x1);
        gbc.writeMem(0x9862, { 0x2a });
        gbc.writeMem(0x9ea6, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x3b91);
        EXPECT(gbc.pc(), 0x9863);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9862), 0x2a);
        EXPECT(gbc.readMem(0x9ea6), 0xef);
        // 2A 002B
        gbc.setState(0xa2a6, 0xdede, 0x56c0, 0xa2a4, 0xc342, 0x9be0, 0x0, 0x1);
        gbc.writeMem(0x9be0, { 0xb });
        gbc.writeMem(0xa2a6, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xdede);
        EXPECT(gbc.pc(), 0xa2a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9be0), 0xb);
        EXPECT(gbc.readMem(0xa2a6), 0x2a);
        // 2A 002C
        gbc.setState(0x889a, 0x35a2, 0x36e0, 0x7a69, 0x3635, 0x1518, 0x1, 0x1);
        gbc.writeMem(0x1518, { 0x92 });
        gbc.writeMem(0x889a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x35a2);
        EXPECT(gbc.pc(), 0x889b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x889a), 0x2a);
        // 2A 002D
        gbc.setState(0xbcae, 0xb51, 0x49e0, 0x78f0, 0x5dcb, 0x6315, 0x0, 0x1);
        gbc.writeMem(0x6315, { 0x7 });
        gbc.writeMem(0xbcae, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb51);
        EXPECT(gbc.pc(), 0xbcaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcae), 0x2a);
        // 2A 002E
        gbc.setState(0x8015, 0xc32c, 0x8840, 0x9af0, 0xcb2b, 0x1d32, 0x0, 0x0);
        gbc.writeMem(0x1d32, { 0x33 });
        gbc.writeMem(0x8015, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc32c);
        EXPECT(gbc.pc(), 0x8016);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8015), 0x2a);
        // 2A 002F
        gbc.setState(0x7deb, 0x730c, 0x9ea0, 0xcd2d, 0x50e1, 0x9bcd, 0x1, 0x1);
        gbc.writeMem(0x7deb, { 0x2a });
        gbc.writeMem(0x9bcd, { 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x730c);
        EXPECT(gbc.pc(), 0x7dec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bcd), 0xa8);
        // 2A 0030
        gbc.setState(0x2240, 0xd263, 0x24a0, 0xed4b, 0xfc62, 0x5005, 0x0, 0x1);
        gbc.writeMem(0x2240, { 0x2a });
        gbc.writeMem(0x5005, { 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd263);
        EXPECT(gbc.pc(), 0x2241);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 0031
        gbc.setState(0xad99, 0xf949, 0x9c30, 0xb6e, 0xa9c7, 0xb0a0, 0x1, 0x0);
        gbc.writeMem(0xad99, { 0x2a });
        gbc.writeMem(0xb0a0, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf949);
        EXPECT(gbc.pc(), 0xad9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad99), 0x2a);
        EXPECT(gbc.readMem(0xb0a0), 0x63);
        // 2A 0032
        gbc.setState(0x3ddc, 0x1b83, 0x1550, 0x63fc, 0xe1d2, 0x346e, 0x1, 0x0);
        gbc.writeMem(0x346e, { 0xc6 });
        gbc.writeMem(0x3ddc, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1b83);
        EXPECT(gbc.pc(), 0x3ddd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0033
        gbc.setState(0x9983, 0x338b, 0xe850, 0xed3f, 0x3361, 0xcce, 0x0, 0x0);
        gbc.writeMem(0xcce, { 0x19 });
        gbc.writeMem(0x9983, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x338b);
        EXPECT(gbc.pc(), 0x9984);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9983), 0x2a);
        // 2A 0034
        gbc.setState(0x6106, 0xf2e, 0x9c0, 0x7842, 0xc27f, 0xb041, 0x0, 0x0);
        gbc.writeMem(0x6106, { 0x2a });
        gbc.writeMem(0xb041, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf2e);
        EXPECT(gbc.pc(), 0x6107);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb041), 0xac);
        // 2A 0035
        gbc.setState(0x8565, 0x8add, 0x5630, 0x2904, 0x3d4c, 0x66c0, 0x1, 0x1);
        gbc.writeMem(0x66c0, { 0xa1 });
        gbc.writeMem(0x8565, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8add);
        EXPECT(gbc.pc(), 0x8566);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8565), 0x2a);
        // 2A 0036
        gbc.setState(0x5b54, 0xbd0, 0x9e60, 0x902, 0xb8fa, 0xa858, 0x1, 0x1);
        gbc.writeMem(0x5b54, { 0x2a });
        gbc.writeMem(0xa858, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xbd0);
        EXPECT(gbc.pc(), 0x5b55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa858), 0xc8);
        // 2A 0037
        gbc.setState(0xccc8, 0x841, 0xc910, 0x1b1a, 0x4d7b, 0x377a, 0x0, 0x0);
        gbc.writeMem(0x377a, { 0x8a });
        gbc.writeMem(0xccc8, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x841);
        EXPECT(gbc.pc(), 0xccc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccc8), 0x2a);
        // 2A 0038
        gbc.setState(0x3fc2, 0x9c5, 0xfd80, 0xe77d, 0xff1f, 0x311, 0x0, 0x0);
        gbc.writeMem(0x311, { 0x94 });
        gbc.writeMem(0x3fc2, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9c5);
        EXPECT(gbc.pc(), 0x3fc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0039
        gbc.setState(0x81a, 0xd6e, 0x9530, 0x497e, 0xde74, 0x3776, 0x1, 0x1);
        gbc.writeMem(0x81a, { 0x2a });
        gbc.writeMem(0x3776, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd6e);
        EXPECT(gbc.pc(), 0x81b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 003B
        gbc.setState(0xd1f2, 0xacda, 0x4500, 0xa71, 0xdf5a, 0x5542, 0x1, 0x1);
        gbc.writeMem(0x5542, { 0xc0 });
        gbc.writeMem(0xd1f2, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xacda);
        EXPECT(gbc.pc(), 0xd1f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1f2), 0x2a);
        // 2A 003C
        gbc.setState(0x9f7d, 0x2612, 0x3fa0, 0x6d84, 0x583c, 0x5bc8, 0x0, 0x1);
        gbc.writeMem(0x5bc8, { 0xfe });
        gbc.writeMem(0x9f7d, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x2612);
        EXPECT(gbc.pc(), 0x9f7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f7d), 0x2a);
        // 2A 003D
        gbc.setState(0x85b, 0xae89, 0xc510, 0xeba0, 0x707e, 0xbe09, 0x0, 0x1);
        gbc.writeMem(0x85b, { 0x2a });
        gbc.writeMem(0xbe09, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xae89);
        EXPECT(gbc.pc(), 0x85c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe09), 0xf6);
        // 2A 003E
        gbc.setState(0xa930, 0xdcb1, 0xce30, 0xce4f, 0x2f89, 0x9015, 0x1, 0x1);
        gbc.writeMem(0x9015, { 0x45 });
        gbc.writeMem(0xa930, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xdcb1);
        EXPECT(gbc.pc(), 0xa931);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9015), 0x45);
        EXPECT(gbc.readMem(0xa930), 0x2a);
        // 2A 003F
        gbc.setState(0xb41f, 0xa03d, 0xd6c0, 0x5e61, 0xdeb6, 0x857, 0x1, 0x1);
        gbc.writeMem(0x857, { 0xe7 });
        gbc.writeMem(0xb41f, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa03d);
        EXPECT(gbc.pc(), 0xb420);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb41f), 0x2a);
        // 2A 0040
        gbc.setState(0xbf64, 0x844f, 0x2f20, 0xd48, 0x8506, 0xc8f5, 0x1, 0x1);
        gbc.writeMem(0xbf64, { 0x2a });
        gbc.writeMem(0xc8f5, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x844f);
        EXPECT(gbc.pc(), 0xbf65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf64), 0x2a);
        EXPECT(gbc.readMem(0xc8f5), 0x14);
        // 2A 0041
        gbc.setState(0x67fd, 0xc705, 0x6a70, 0xedb5, 0x8adf, 0xa7ee, 0x1, 0x1);
        gbc.writeMem(0x67fd, { 0x2a });
        gbc.writeMem(0xa7ee, { 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc705);
        EXPECT(gbc.pc(), 0x67fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7ee), 0xd2);
        // 2A 0042
        gbc.setState(0x2f90, 0xba17, 0xc320, 0x4c91, 0x1b7, 0x6ad7, 0x1, 0x0);
        gbc.writeMem(0x2f90, { 0x2a });
        gbc.writeMem(0x6ad7, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xba17);
        EXPECT(gbc.pc(), 0x2f91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 0043
        gbc.setState(0x5835, 0x9b74, 0x5e30, 0x2ac2, 0x63cf, 0xc578, 0x0, 0x0);
        gbc.writeMem(0x5835, { 0x2a });
        gbc.writeMem(0xc578, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x9b74);
        EXPECT(gbc.pc(), 0x5836);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc578), 0x62);
        // 2A 0044
        gbc.setState(0x1745, 0x6580, 0xe780, 0x3e27, 0xf377, 0x7b33, 0x0, 0x0);
        gbc.writeMem(0x1745, { 0x2a });
        gbc.writeMem(0x7b33, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6580);
        EXPECT(gbc.pc(), 0x1746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0045
        gbc.setState(0x5175, 0x7882, 0x6720, 0x4150, 0x54f2, 0x9708, 0x0, 0x1);
        gbc.writeMem(0x5175, { 0x2a });
        gbc.writeMem(0x9708, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7882);
        EXPECT(gbc.pc(), 0x5176);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9708), 0x92);
        // 2A 0046
        gbc.setState(0x3108, 0x6ff9, 0x4030, 0x3c2c, 0xd5af, 0x572b, 0x1, 0x0);
        gbc.writeMem(0x3108, { 0x2a });
        gbc.writeMem(0x572b, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x6ff9);
        EXPECT(gbc.pc(), 0x3109);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0047
        gbc.setState(0x63b2, 0xa222, 0xa050, 0xbb28, 0x683d, 0x7044, 0x0, 0x0);
        gbc.writeMem(0x63b2, { 0x2a });
        gbc.writeMem(0x7044, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa222);
        EXPECT(gbc.pc(), 0x63b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0048
        gbc.setState(0x3d0b, 0x2464, 0x1670, 0xbed8, 0xe91d, 0x57ee, 0x1, 0x0);
        gbc.writeMem(0x3d0b, { 0x2a });
        gbc.writeMem(0x57ee, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2464);
        EXPECT(gbc.pc(), 0x3d0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0049
        gbc.setState(0xa8c9, 0x7d0f, 0xe6c0, 0x495d, 0xbd08, 0xf3ae, 0x1, 0x0);
        gbc.writeMem(0xa8c9, { 0x2a });
        gbc.writeMem(0xf3ae, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7d0f);
        EXPECT(gbc.pc(), 0xa8ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8c9), 0x2a);
        EXPECT(gbc.readMem(0xf3ae), 0xea);
        // 2A 004A
        gbc.setState(0x4d29, 0xc9ce, 0x80a0, 0x4b8f, 0xc928, 0x9f8d, 0x0, 0x0);
        gbc.writeMem(0x4d29, { 0x2a });
        gbc.writeMem(0x9f8d, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc9ce);
        EXPECT(gbc.pc(), 0x4d2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f8d), 0x62);
        // 2A 004B
        gbc.setState(0xdd3c, 0x87df, 0x3a90, 0x454e, 0xe2f6, 0x2e90, 0x0, 0x1);
        gbc.writeMem(0x2e90, { 0xd5 });
        gbc.writeMem(0xdd3c, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x87df);
        EXPECT(gbc.pc(), 0xdd3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd3c), 0x2a);
        // 2A 004C
        gbc.setState(0x4c3c, 0xa787, 0xebd0, 0x23a1, 0x8c28, 0x9efc, 0x1, 0x1);
        gbc.writeMem(0x4c3c, { 0x2a });
        gbc.writeMem(0x9efc, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa787);
        EXPECT(gbc.pc(), 0x4c3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9efc), 0xf8);
        // 2A 004D
        gbc.setState(0x5e5, 0xd166, 0x610, 0x972, 0xf75d, 0x2b30, 0x1, 0x1);
        gbc.writeMem(0x5e5, { 0x2a });
        gbc.writeMem(0x2b30, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd166);
        EXPECT(gbc.pc(), 0x5e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 004E
        gbc.setState(0xc1d5, 0x49b8, 0xcaa0, 0x60f3, 0x2b30, 0x888c, 0x1, 0x0);
        gbc.writeMem(0x888c, { 0x1c });
        gbc.writeMem(0xc1d5, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x49b8);
        EXPECT(gbc.pc(), 0xc1d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x888c), 0x1c);
        EXPECT(gbc.readMem(0xc1d5), 0x2a);
        // 2A 0050
        gbc.setState(0xa0bf, 0xda8d, 0x79c0, 0x24f, 0xf556, 0xddc6, 0x1, 0x0);
        gbc.writeMem(0xa0bf, { 0x2a });
        gbc.writeMem(0xddc6, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xda8d);
        EXPECT(gbc.pc(), 0xa0c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0bf), 0x2a);
        EXPECT(gbc.readMem(0xddc6), 0x5d);
        // 2A 0051
        gbc.setState(0xa7fd, 0x86f6, 0xe5d0, 0x8bef, 0xd391, 0x3752, 0x0, 0x0);
        gbc.writeMem(0x3752, { 0x39 });
        gbc.writeMem(0xa7fd, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x86f6);
        EXPECT(gbc.pc(), 0xa7fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7fd), 0x2a);
        // 2A 0052
        gbc.setState(0x83ed, 0x3140, 0xeb90, 0xbea8, 0x3b75, 0x1c48, 0x1, 0x1);
        gbc.writeMem(0x1c48, { 0x87 });
        gbc.writeMem(0x83ed, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3140);
        EXPECT(gbc.pc(), 0x83ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ed), 0x2a);
        // 2A 0053
        gbc.setState(0x7fdb, 0x630c, 0x2480, 0xc790, 0x97b8, 0xed4e, 0x0, 0x0);
        gbc.writeMem(0x7fdb, { 0x2a });
        gbc.writeMem(0xed4e, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x630c);
        EXPECT(gbc.pc(), 0x7fdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed4e), 0x44);
        // 2A 0054
        gbc.setState(0x6b4d, 0x26ef, 0x31f0, 0x21d6, 0x5bd0, 0xcd16, 0x0, 0x0);
        gbc.writeMem(0x6b4d, { 0x2a });
        gbc.writeMem(0xcd16, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x26ef);
        EXPECT(gbc.pc(), 0x6b4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd16), 0xbb);
        // 2A 0055
        gbc.setState(0x762f, 0x1d25, 0x9e40, 0xca43, 0xa89, 0x3d8c, 0x0, 0x1);
        gbc.writeMem(0x3d8c, { 0x6a });
        gbc.writeMem(0x762f, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1d25);
        EXPECT(gbc.pc(), 0x7630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0056
        gbc.setState(0xb4b, 0x2438, 0x73d0, 0xd210, 0x3307, 0xb690, 0x0, 0x0);
        gbc.writeMem(0xb4b, { 0x2a });
        gbc.writeMem(0xb690, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2438);
        EXPECT(gbc.pc(), 0xb4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb690), 0x66);
        // 2A 0057
        gbc.setState(0xe22d, 0x9a2f, 0x54d0, 0xc383, 0x62d8, 0x56d4, 0x0, 0x1);
        gbc.writeMem(0x56d4, { 0xae });
        gbc.writeMem(0xe22d, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9a2f);
        EXPECT(gbc.pc(), 0xe22e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe22d), 0x2a);
        // 2A 0058
        gbc.setState(0x21ae, 0xad10, 0x1760, 0xb68b, 0x9b65, 0x7a16, 0x0, 0x1);
        gbc.writeMem(0x21ae, { 0x2a });
        gbc.writeMem(0x7a16, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xad10);
        EXPECT(gbc.pc(), 0x21af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 005A
        gbc.setState(0xcb84, 0x63a0, 0x4430, 0xee11, 0xa6a4, 0xaba1, 0x1, 0x0);
        gbc.writeMem(0xaba1, { 0x53 });
        gbc.writeMem(0xcb84, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x63a0);
        EXPECT(gbc.pc(), 0xcb85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaba1), 0x53);
        EXPECT(gbc.readMem(0xcb84), 0x2a);
        // 2A 005B
        gbc.setState(0x6cfb, 0x73ca, 0xcf90, 0x22b5, 0x937d, 0xfae5, 0x0, 0x1);
        gbc.writeMem(0x6cfb, { 0x2a });
        gbc.writeMem(0xfae5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x73ca);
        EXPECT(gbc.pc(), 0x6cfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfae5), 0xba);
        // 2A 005C
        gbc.setState(0xdfd2, 0x47a6, 0xd9f0, 0x2782, 0xc588, 0xc3a8, 0x0, 0x0);
        gbc.writeMem(0xc3a8, { 0x11 });
        gbc.writeMem(0xdfd2, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x47a6);
        EXPECT(gbc.pc(), 0xdfd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3a8), 0x11);
        EXPECT(gbc.readMem(0xdfd2), 0x2a);
        // 2A 005D
        gbc.setState(0x50e5, 0x19d7, 0x4a00, 0x8d02, 0xa95f, 0xf74e, 0x1, 0x0);
        gbc.writeMem(0x50e5, { 0x2a });
        gbc.writeMem(0xf74e, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x19d7);
        EXPECT(gbc.pc(), 0x50e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf74e), 0x18);
        // 2A 005E
        gbc.setState(0x6569, 0xf76, 0x100, 0xeba, 0xdcb6, 0x92f2, 0x0, 0x1);
        gbc.writeMem(0x6569, { 0x2a });
        gbc.writeMem(0x92f2, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf76);
        EXPECT(gbc.pc(), 0x656a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92f2), 0xee);
        // 2A 005F
        gbc.setState(0x8840, 0x3c2, 0x8e80, 0x3fa, 0x2d0, 0x11fc, 0x0, 0x0);
        gbc.writeMem(0x11fc, { 0xca });
        gbc.writeMem(0x8840, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x3c2);
        EXPECT(gbc.pc(), 0x8841);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8840), 0x2a);
        // 2A 0060
        gbc.setState(0x63fa, 0x935b, 0x10b0, 0xd5c6, 0x7b69, 0xaf37, 0x1, 0x0);
        gbc.writeMem(0x63fa, { 0x2a });
        gbc.writeMem(0xaf37, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x935b);
        EXPECT(gbc.pc(), 0x63fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf37), 0x3b);
        // 2A 0061
        gbc.setState(0x606b, 0x1ab4, 0x1d00, 0x82c, 0x61e3, 0x4bb7, 0x0, 0x0);
        gbc.writeMem(0x4bb7, { 0xf0 });
        gbc.writeMem(0x606b, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x1ab4);
        EXPECT(gbc.pc(), 0x606c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0062
        gbc.setState(0x9090, 0xbb80, 0x4bc0, 0x569a, 0xfdd9, 0xddfa, 0x0, 0x1);
        gbc.writeMem(0x9090, { 0x2a });
        gbc.writeMem(0xddfa, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbb80);
        EXPECT(gbc.pc(), 0x9091);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9090), 0x2a);
        EXPECT(gbc.readMem(0xddfa), 0x3b);
        // 2A 0063
        gbc.setState(0x8738, 0x2054, 0xb610, 0x4dd4, 0x34c2, 0xa3c4, 0x0, 0x0);
        gbc.writeMem(0x8738, { 0x2a });
        gbc.writeMem(0xa3c4, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2054);
        EXPECT(gbc.pc(), 0x8739);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8738), 0x2a);
        EXPECT(gbc.readMem(0xa3c4), 0x61);
        // 2A 0064
        gbc.setState(0xe85e, 0x3cbf, 0xf210, 0x7039, 0xeedb, 0x1a38, 0x0, 0x0);
        gbc.writeMem(0x1a38, { 0x45 });
        gbc.writeMem(0xe85e, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3cbf);
        EXPECT(gbc.pc(), 0xe85f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe85e), 0x2a);
        // 2A 0065
        gbc.setState(0x3a80, 0x6ef3, 0x6c90, 0xf39b, 0xfae4, 0xfba1, 0x0, 0x0);
        gbc.writeMem(0x3a80, { 0x2a });
        gbc.writeMem(0xfba1, { 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x6ef3);
        EXPECT(gbc.pc(), 0x3a81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfba1), 0x81);
        // 2A 0066
        gbc.setState(0xf4a, 0x8a14, 0xa7e0, 0x1c69, 0xcfb6, 0x990c, 0x1, 0x1);
        gbc.writeMem(0xf4a, { 0x2a });
        gbc.writeMem(0x990c, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8a14);
        EXPECT(gbc.pc(), 0xf4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x990c), 0x57);
        // 2A 0067
        gbc.setState(0xddd7, 0x76d2, 0xfdb0, 0xf9d9, 0xf06b, 0x48d8, 0x1, 0x1);
        gbc.writeMem(0x48d8, { 0x9c });
        gbc.writeMem(0xddd7, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x76d2);
        EXPECT(gbc.pc(), 0xddd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddd7), 0x2a);
        // 2A 0068
        gbc.setState(0x5f8c, 0xf34d, 0xb660, 0xcdc, 0x3683, 0xbfd4, 0x1, 0x1);
        gbc.writeMem(0x5f8c, { 0x2a });
        gbc.writeMem(0xbfd4, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf34d);
        EXPECT(gbc.pc(), 0x5f8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfd4), 0x18);
        // 2A 0069
        gbc.setState(0xc50a, 0x74c2, 0xdcf0, 0x9b44, 0x528f, 0x31b1, 0x1, 0x0);
        gbc.writeMem(0x31b1, { 0x7 });
        gbc.writeMem(0xc50a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x74c2);
        EXPECT(gbc.pc(), 0xc50b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc50a), 0x2a);
        // 2A 006A
        gbc.setState(0x2292, 0x2235, 0xedb0, 0xe523, 0x9978, 0x9d53, 0x1, 0x0);
        gbc.writeMem(0x2292, { 0x2a });
        gbc.writeMem(0x9d53, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2235);
        EXPECT(gbc.pc(), 0x2293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d53), 0xee);
        // 2A 006B
        gbc.setState(0xe244, 0x693f, 0x44b0, 0xc7f0, 0xfd6b, 0x26b3, 0x1, 0x1);
        gbc.writeMem(0x26b3, { 0x94 });
        gbc.writeMem(0xe244, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x693f);
        EXPECT(gbc.pc(), 0xe245);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe244), 0x2a);
        // 2A 006C
        gbc.setState(0xe3fe, 0x675f, 0x1290, 0x3fc4, 0x119, 0x447a, 0x0, 0x1);
        gbc.writeMem(0x447a, { 0x2 });
        gbc.writeMem(0xe3fe, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x675f);
        EXPECT(gbc.pc(), 0xe3ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3fe), 0x2a);
        // 2A 006D
        gbc.setState(0xbed2, 0xd6cb, 0x7de0, 0xbbd9, 0xaecc, 0x81e8, 0x1, 0x1);
        gbc.writeMem(0x81e8, { 0x22 });
        gbc.writeMem(0xbed2, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd6cb);
        EXPECT(gbc.pc(), 0xbed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81e8), 0x22);
        EXPECT(gbc.readMem(0xbed2), 0x2a);
        // 2A 006E
        gbc.setState(0x4db1, 0x743c, 0x4710, 0x3668, 0x4a97, 0xc487, 0x0, 0x1);
        gbc.writeMem(0x4db1, { 0x2a });
        gbc.writeMem(0xc487, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x743c);
        EXPECT(gbc.pc(), 0x4db2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc487), 0xa0);
        // 2A 0070
        gbc.setState(0xaa74, 0x9100, 0x2a50, 0x8e9, 0x2885, 0x69fd, 0x0, 0x1);
        gbc.writeMem(0x69fd, { 0xd2 });
        gbc.writeMem(0xaa74, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9100);
        EXPECT(gbc.pc(), 0xaa75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa74), 0x2a);
        // 2A 0071
        gbc.setState(0x4393, 0x7429, 0x5c50, 0xbbcc, 0x95e1, 0xd936, 0x0, 0x1);
        gbc.writeMem(0x4393, { 0x2a });
        gbc.writeMem(0xd936, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7429);
        EXPECT(gbc.pc(), 0x4394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd936), 0x9c);
        // 2A 0072
        gbc.setState(0xc954, 0x24b4, 0x67e0, 0xa4dc, 0x1017, 0x3ec0, 0x1, 0x1);
        gbc.writeMem(0x3ec0, { 0xc6 });
        gbc.writeMem(0xc954, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x24b4);
        EXPECT(gbc.pc(), 0xc955);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc954), 0x2a);
        // 2A 0074
        gbc.setState(0x7288, 0x8119, 0xb530, 0x8493, 0x4fef, 0x6e79, 0x1, 0x0);
        gbc.writeMem(0x6e79, { 0x7 });
        gbc.writeMem(0x7288, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8119);
        EXPECT(gbc.pc(), 0x7289);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0075
        gbc.setState(0xa13a, 0x32d3, 0xf030, 0xd30e, 0xd0b, 0x534b, 0x0, 0x0);
        gbc.writeMem(0x534b, { 0x20 });
        gbc.writeMem(0xa13a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x32d3);
        EXPECT(gbc.pc(), 0xa13b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa13a), 0x2a);
        // 2A 0076
        gbc.setState(0x7159, 0xf61e, 0x2d0, 0xf63d, 0x51d9, 0xd21d, 0x0, 0x1);
        gbc.writeMem(0x7159, { 0x2a });
        gbc.writeMem(0xd21d, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf61e);
        EXPECT(gbc.pc(), 0x715a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd21d), 0x30);
        // 2A 0077
        gbc.setState(0x3733, 0xc54e, 0xced0, 0xf330, 0xfdf4, 0x54ee, 0x1, 0x0);
        gbc.writeMem(0x3733, { 0x2a });
        gbc.writeMem(0x54ee, { 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc54e);
        EXPECT(gbc.pc(), 0x3734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0078
        gbc.setState(0x5d46, 0xe78d, 0xa360, 0xe43c, 0xb3f0, 0xbfc, 0x0, 0x0);
        gbc.writeMem(0xbfc, { 0x48 });
        gbc.writeMem(0x5d46, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe78d);
        EXPECT(gbc.pc(), 0x5d47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 0079
        gbc.setState(0xa9b4, 0x947, 0xaa0, 0x9c01, 0x74c8, 0xbaed, 0x0, 0x0);
        gbc.writeMem(0xa9b4, { 0x2a });
        gbc.writeMem(0xbaed, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x947);
        EXPECT(gbc.pc(), 0xa9b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9b4), 0x2a);
        EXPECT(gbc.readMem(0xbaed), 0xcb);
        // 2A 007A
        gbc.setState(0xccb, 0xe0af, 0x98a0, 0x6da5, 0x791a, 0x8ce2, 0x0, 0x1);
        gbc.writeMem(0xccb, { 0x2a });
        gbc.writeMem(0x8ce2, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe0af);
        EXPECT(gbc.pc(), 0xccc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ce2), 0x7);
        // 2A 007B
        gbc.setState(0x745a, 0x24ac, 0x5c00, 0x8d4b, 0x3514, 0xb5c7, 0x0, 0x1);
        gbc.writeMem(0x745a, { 0x2a });
        gbc.writeMem(0xb5c7, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x24ac);
        EXPECT(gbc.pc(), 0x745b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5c7), 0xd1);
        // 2A 007C
        gbc.setState(0x4950, 0x9061, 0xad80, 0xa665, 0x5bd7, 0xd7f1, 0x1, 0x0);
        gbc.writeMem(0x4950, { 0x2a });
        gbc.writeMem(0xd7f1, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9061);
        EXPECT(gbc.pc(), 0x4951);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7f1), 0x19);
        // 2A 007D
        gbc.setState(0x5545, 0xdc85, 0x43d0, 0x1330, 0x6ece, 0x4545, 0x0, 0x1);
        gbc.writeMem(0x4545, { 0x59 });
        gbc.writeMem(0x5545, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xdc85);
        EXPECT(gbc.pc(), 0x5546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 007E
        gbc.setState(0x6981, 0xdc12, 0xd8e0, 0x3a54, 0x678a, 0x99b8, 0x0, 0x1);
        gbc.writeMem(0x6981, { 0x2a });
        gbc.writeMem(0x99b8, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xdc12);
        EXPECT(gbc.pc(), 0x6982);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99b8), 0xd7);
        // 2A 007F
        gbc.setState(0x73fd, 0xf80c, 0x80, 0x684f, 0x9b9b, 0x1a32, 0x1, 0x1);
        gbc.writeMem(0x1a32, { 0xfd });
        gbc.writeMem(0x73fd, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf80c);
        EXPECT(gbc.pc(), 0x73fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0080
        gbc.setState(0x441c, 0xccc2, 0x44e0, 0xcb18, 0x4e50, 0x64fa, 0x1, 0x0);
        gbc.writeMem(0x441c, { 0x2a });
        gbc.writeMem(0x64fa, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xccc2);
        EXPECT(gbc.pc(), 0x441d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 0081
        gbc.setState(0xc459, 0x578c, 0xe960, 0xb9c6, 0xefc3, 0x2ec9, 0x1, 0x0);
        gbc.writeMem(0x2ec9, { 0x1d });
        gbc.writeMem(0xc459, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x578c);
        EXPECT(gbc.pc(), 0xc45a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc459), 0x2a);
        // 2A 0082
        gbc.setState(0xa8ce, 0xfa1d, 0x1a90, 0x7712, 0xd2ee, 0xfcfd, 0x1, 0x1);
        gbc.writeMem(0xa8ce, { 0x2a });
        gbc.writeMem(0xfcfd, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xfa1d);
        EXPECT(gbc.pc(), 0xa8cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8ce), 0x2a);
        EXPECT(gbc.readMem(0xfcfd), 0xf6);
        // 2A 0083
        gbc.setState(0x1773, 0x42d3, 0xadb0, 0x8819, 0x646c, 0xecc, 0x1, 0x0);
        gbc.writeMem(0xecc, { 0x6e });
        gbc.writeMem(0x1773, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x42d3);
        EXPECT(gbc.pc(), 0x1774);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0084
        gbc.setState(0x71bd, 0x6a44, 0xeab0, 0x4d6e, 0xb28a, 0x8c37, 0x0, 0x0);
        gbc.writeMem(0x71bd, { 0x2a });
        gbc.writeMem(0x8c37, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x6a44);
        EXPECT(gbc.pc(), 0x71be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c37), 0x99);
        // 2A 0085
        gbc.setState(0x681c, 0x50b4, 0x70b0, 0x7fa6, 0x96f3, 0x554d, 0x1, 0x1);
        gbc.writeMem(0x554d, { 0xc0 });
        gbc.writeMem(0x681c, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x50b4);
        EXPECT(gbc.pc(), 0x681d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0087
        gbc.setState(0x3e7a, 0x4e3f, 0xcad0, 0xb9ae, 0xaf43, 0x69a0, 0x1, 0x1);
        gbc.writeMem(0x3e7a, { 0x2a });
        gbc.writeMem(0x69a0, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4e3f);
        EXPECT(gbc.pc(), 0x3e7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0088
        gbc.setState(0xe45f, 0x729e, 0xa760, 0x329, 0xaa24, 0x54b1, 0x0, 0x1);
        gbc.writeMem(0x54b1, { 0x78 });
        gbc.writeMem(0xe45f, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x729e);
        EXPECT(gbc.pc(), 0xe460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe45f), 0x2a);
        // 2A 0089
        gbc.setState(0xcaef, 0x45a8, 0xc760, 0xff7f, 0x8422, 0xbac8, 0x0, 0x0);
        gbc.writeMem(0xbac8, { 0x92 });
        gbc.writeMem(0xcaef, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x45a8);
        EXPECT(gbc.pc(), 0xcaf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbac8), 0x92);
        EXPECT(gbc.readMem(0xcaef), 0x2a);
        // 2A 008A
        gbc.setState(0x56fa, 0xa7ba, 0x4170, 0xc3e0, 0x35f6, 0x4bd7, 0x0, 0x1);
        gbc.writeMem(0x4bd7, { 0x4f });
        gbc.writeMem(0x56fa, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa7ba);
        EXPECT(gbc.pc(), 0x56fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 008C
        gbc.setState(0x6a27, 0xa33a, 0x4fc0, 0x2c5b, 0x4d40, 0x8b8f, 0x0, 0x1);
        gbc.writeMem(0x6a27, { 0x2a });
        gbc.writeMem(0x8b8f, { 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa33a);
        EXPECT(gbc.pc(), 0x6a28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b8f), 0x9a);
        // 2A 008D
        gbc.setState(0x331e, 0xdeed, 0x5c0, 0xc, 0x69c6, 0xa51e, 0x1, 0x1);
        gbc.writeMem(0x331e, { 0x2a });
        gbc.writeMem(0xa51e, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xdeed);
        EXPECT(gbc.pc(), 0x331f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa51e), 0x18);
        // 2A 008E
        gbc.setState(0xb966, 0xe53c, 0x4980, 0xd1da, 0xc35, 0xd501, 0x1, 0x1);
        gbc.writeMem(0xb966, { 0x2a });
        gbc.writeMem(0xd501, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe53c);
        EXPECT(gbc.pc(), 0xb967);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb966), 0x2a);
        EXPECT(gbc.readMem(0xd501), 0x8a);
        // 2A 008F
        gbc.setState(0xb85b, 0x6e3f, 0x1ff0, 0x74c5, 0xe6d, 0x2cdf, 0x1, 0x1);
        gbc.writeMem(0x2cdf, { 0x95 });
        gbc.writeMem(0xb85b, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6e3f);
        EXPECT(gbc.pc(), 0xb85c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb85b), 0x2a);
        // 2A 0090
        gbc.setState(0x8510, 0xf7a9, 0xd690, 0x8713, 0xef6b, 0x7b5d, 0x0, 0x1);
        gbc.writeMem(0x7b5d, { 0xbf });
        gbc.writeMem(0x8510, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf7a9);
        EXPECT(gbc.pc(), 0x8511);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8510), 0x2a);
        // 2A 0091
        gbc.setState(0xb9c6, 0x61ff, 0x58a0, 0xac8b, 0xa9b4, 0x299d, 0x0, 0x1);
        gbc.writeMem(0x299d, { 0xfe });
        gbc.writeMem(0xb9c6, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x61ff);
        EXPECT(gbc.pc(), 0xb9c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9c6), 0x2a);
        // 2A 0092
        gbc.setState(0xc9b3, 0xe535, 0xa550, 0x8c1d, 0x4013, 0xde89, 0x1, 0x1);
        gbc.writeMem(0xc9b3, { 0x2a });
        gbc.writeMem(0xde89, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe535);
        EXPECT(gbc.pc(), 0xc9b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9b3), 0x2a);
        EXPECT(gbc.readMem(0xde89), 0x44);
        // 2A 0093
        gbc.setState(0x34ae, 0x50b6, 0xb740, 0x1c7b, 0xe49d, 0x4465, 0x1, 0x0);
        gbc.writeMem(0x34ae, { 0x2a });
        gbc.writeMem(0x4465, { 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x50b6);
        EXPECT(gbc.pc(), 0x34af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0094
        gbc.setState(0x2451, 0x21ca, 0x83a0, 0x3843, 0xef60, 0x6010, 0x1, 0x0);
        gbc.writeMem(0x2451, { 0x2a });
        gbc.writeMem(0x6010, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x21ca);
        EXPECT(gbc.pc(), 0x2452);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 0095
        gbc.setState(0x8be5, 0xa558, 0x22f0, 0xad64, 0x48d4, 0xaf25, 0x0, 0x0);
        gbc.writeMem(0x8be5, { 0x2a });
        gbc.writeMem(0xaf25, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xa558);
        EXPECT(gbc.pc(), 0x8be6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8be5), 0x2a);
        EXPECT(gbc.readMem(0xaf25), 0x28);
        // 2A 0096
        gbc.setState(0xa1c, 0x421a, 0x580, 0x583e, 0x716c, 0x78bb, 0x1, 0x1);
        gbc.writeMem(0xa1c, { 0x2a });
        gbc.writeMem(0x78bb, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x421a);
        EXPECT(gbc.pc(), 0xa1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0097
        gbc.setState(0xecf5, 0xefe3, 0xc600, 0xa9aa, 0xa57b, 0x8e3e, 0x0, 0x0);
        gbc.writeMem(0x8e3e, { 0xa0 });
        gbc.writeMem(0xecf5, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xefe3);
        EXPECT(gbc.pc(), 0xecf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e3e), 0xa0);
        EXPECT(gbc.readMem(0xecf5), 0x2a);
        // 2A 0098
        gbc.setState(0x4d35, 0xb9a5, 0x5f60, 0x2e3, 0xe540, 0x6485, 0x1, 0x0);
        gbc.writeMem(0x4d35, { 0x2a });
        gbc.writeMem(0x6485, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xb9a5);
        EXPECT(gbc.pc(), 0x4d36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 0099
        gbc.setState(0x7afd, 0x2f74, 0xe250, 0x9f28, 0x37d3, 0xf84, 0x0, 0x1);
        gbc.writeMem(0xf84, { 0xb3 });
        gbc.writeMem(0x7afd, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2f74);
        EXPECT(gbc.pc(), 0x7afe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 009B
        gbc.setState(0x8d7d, 0x3d97, 0xba10, 0x60b2, 0xbd00, 0xa9ca, 0x0, 0x0);
        gbc.writeMem(0x8d7d, { 0x2a });
        gbc.writeMem(0xa9ca, { 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3d97);
        EXPECT(gbc.pc(), 0x8d7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d7d), 0x2a);
        EXPECT(gbc.readMem(0xa9ca), 0x4);
        // 2A 009C
        gbc.setState(0x3ffc, 0xcb03, 0xf480, 0x30e4, 0x5f29, 0x6114, 0x0, 0x0);
        gbc.writeMem(0x3ffc, { 0x2a });
        gbc.writeMem(0x6114, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xcb03);
        EXPECT(gbc.pc(), 0x3ffd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 009D
        gbc.setState(0xc178, 0x24e8, 0x59b0, 0x7e74, 0x59a9, 0xc129, 0x1, 0x1);
        gbc.writeMem(0xc129, { 0x5 });
        gbc.writeMem(0xc178, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x24e8);
        EXPECT(gbc.pc(), 0xc179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc129), 0x5);
        EXPECT(gbc.readMem(0xc178), 0x2a);
        // 2A 009E
        gbc.setState(0xdcaf, 0xf3fa, 0xc840, 0xe40, 0x327b, 0xe2af, 0x1, 0x0);
        gbc.writeMem(0xdcaf, { 0x2a });
        gbc.writeMem(0xe2af, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf3fa);
        EXPECT(gbc.pc(), 0xdcb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcaf), 0x2a);
        EXPECT(gbc.readMem(0xe2af), 0x85);
        // 2A 009F
        gbc.setState(0xa59d, 0x119, 0x5350, 0xc473, 0x2f70, 0x33c8, 0x0, 0x1);
        gbc.writeMem(0x33c8, { 0xb3 });
        gbc.writeMem(0xa59d, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x119);
        EXPECT(gbc.pc(), 0xa59e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa59d), 0x2a);
        // 2A 00A0
        gbc.setState(0x9714, 0x88, 0x9160, 0xe2cc, 0x15a8, 0xd0e1, 0x0, 0x0);
        gbc.writeMem(0x9714, { 0x2a });
        gbc.writeMem(0xd0e1, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x88);
        EXPECT(gbc.pc(), 0x9715);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9714), 0x2a);
        EXPECT(gbc.readMem(0xd0e1), 0xbb);
        // 2A 00A1
        gbc.setState(0x18ab, 0xdffb, 0xc660, 0x6a7f, 0x41a7, 0xb20e, 0x1, 0x0);
        gbc.writeMem(0x18ab, { 0x2a });
        gbc.writeMem(0xb20e, { 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xdffb);
        EXPECT(gbc.pc(), 0x18ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb20e), 0xb9);
        // 2A 00A2
        gbc.setState(0xb0d6, 0x3c7c, 0x68f0, 0x485d, 0x30b6, 0xfae7, 0x0, 0x0);
        gbc.writeMem(0xb0d6, { 0x2a });
        gbc.writeMem(0xfae7, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3c7c);
        EXPECT(gbc.pc(), 0xb0d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0d6), 0x2a);
        EXPECT(gbc.readMem(0xfae7), 0x66);
        // 2A 00A3
        gbc.setState(0x3f27, 0x3a4d, 0x88e0, 0x60ef, 0xf686, 0x80e, 0x1, 0x0);
        gbc.writeMem(0x80e, { 0x7a });
        gbc.writeMem(0x3f27, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3a4d);
        EXPECT(gbc.pc(), 0x3f28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 00A4
        gbc.setState(0x3fd7, 0xbe87, 0x14d0, 0x74a3, 0x51, 0x850c, 0x1, 0x1);
        gbc.writeMem(0x3fd7, { 0x2a });
        gbc.writeMem(0x850c, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xbe87);
        EXPECT(gbc.pc(), 0x3fd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x850c), 0x3a);
        // 2A 00A5
        gbc.setState(0x1fc7, 0x7f30, 0xeea0, 0x71ce, 0x4fa6, 0x3af5, 0x0, 0x0);
        gbc.writeMem(0x1fc7, { 0x2a });
        gbc.writeMem(0x3af5, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7f30);
        EXPECT(gbc.pc(), 0x1fc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 00A6
        gbc.setState(0xde40, 0x98bd, 0x1fc0, 0xda2, 0xf5b6, 0x38ba, 0x0, 0x1);
        gbc.writeMem(0x38ba, { 0xac });
        gbc.writeMem(0xde40, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x98bd);
        EXPECT(gbc.pc(), 0xde41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde40), 0x2a);
        // 2A 00A7
        gbc.setState(0x69fc, 0x81ba, 0x6bd0, 0x9164, 0x20aa, 0x3e62, 0x1, 0x1);
        gbc.writeMem(0x3e62, { 0x10 });
        gbc.writeMem(0x69fc, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x81ba);
        EXPECT(gbc.pc(), 0x69fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 00A8
        gbc.setState(0xec76, 0x5897, 0x2e50, 0x4cc0, 0x4f4, 0x6513, 0x0, 0x0);
        gbc.writeMem(0x6513, { 0xe4 });
        gbc.writeMem(0xec76, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5897);
        EXPECT(gbc.pc(), 0xec77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec76), 0x2a);
        // 2A 00A9
        gbc.setState(0x56db, 0xe4a0, 0xcc80, 0xb350, 0x1c9e, 0xf9e5, 0x1, 0x0);
        gbc.writeMem(0x56db, { 0x2a });
        gbc.writeMem(0xf9e5, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe4a0);
        EXPECT(gbc.pc(), 0x56dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf9e5), 0x33);
        // 2A 00AA
        gbc.setState(0xd59c, 0xad55, 0xa8f0, 0xe663, 0xb2af, 0xc5a8, 0x0, 0x0);
        gbc.writeMem(0xc5a8, { 0x8d });
        gbc.writeMem(0xd59c, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xad55);
        EXPECT(gbc.pc(), 0xd59d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5a8), 0x8d);
        EXPECT(gbc.readMem(0xd59c), 0x2a);
        // 2A 00AC
        gbc.setState(0x6037, 0x6afa, 0x7190, 0x3925, 0x48c1, 0xe6c8, 0x0, 0x1);
        gbc.writeMem(0x6037, { 0x2a });
        gbc.writeMem(0xe6c8, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6afa);
        EXPECT(gbc.pc(), 0x6038);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6c8), 0xd9);
        // 2A 00AD
        gbc.setState(0x40fd, 0x5b35, 0x3cf0, 0x5bc9, 0x14df, 0x533d, 0x1, 0x1);
        gbc.writeMem(0x40fd, { 0x2a });
        gbc.writeMem(0x533d, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5b35);
        EXPECT(gbc.pc(), 0x40fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 00AE
        gbc.setState(0xd0ca, 0x44f6, 0xc6c0, 0x99ac, 0x5363, 0xea5f, 0x0, 0x1);
        gbc.writeMem(0xd0ca, { 0x2a });
        gbc.writeMem(0xea5f, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x44f6);
        EXPECT(gbc.pc(), 0xd0cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0ca), 0x2a);
        EXPECT(gbc.readMem(0xea5f), 0xd9);
        // 2A 00AF
        gbc.setState(0x1444, 0x7948, 0x8880, 0xee60, 0x187a, 0xa162, 0x1, 0x1);
        gbc.writeMem(0x1444, { 0x2a });
        gbc.writeMem(0xa162, { 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7948);
        EXPECT(gbc.pc(), 0x1445);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa162), 0xf3);
        // 2A 00B0
        gbc.setState(0xe6cc, 0xf772, 0xc450, 0xc3ed, 0x776b, 0x79f2, 0x0, 0x1);
        gbc.writeMem(0x79f2, { 0xca });
        gbc.writeMem(0xe6cc, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf772);
        EXPECT(gbc.pc(), 0xe6cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6cc), 0x2a);
        // 2A 00B1
        gbc.setState(0xd4e5, 0x263d, 0x3e30, 0x77bf, 0xa9d7, 0x3077, 0x0, 0x1);
        gbc.writeMem(0x3077, { 0x66 });
        gbc.writeMem(0xd4e5, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x263d);
        EXPECT(gbc.pc(), 0xd4e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4e5), 0x2a);
        // 2A 00B2
        gbc.setState(0xcbf, 0x6a74, 0xffb0, 0xa28a, 0xeff8, 0x9a40, 0x0, 0x0);
        gbc.writeMem(0xcbf, { 0x2a });
        gbc.writeMem(0x9a40, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6a74);
        EXPECT(gbc.pc(), 0xcc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a40), 0x21);
        // 2A 00B3
        gbc.setState(0xc935, 0x833c, 0x2fd0, 0x3363, 0xa0cc, 0x5b26, 0x1, 0x0);
        gbc.writeMem(0x5b26, { 0x47 });
        gbc.writeMem(0xc935, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x833c);
        EXPECT(gbc.pc(), 0xc936);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc935), 0x2a);
        // 2A 00B4
        gbc.setState(0xcf3a, 0x17d8, 0x4050, 0x2c5a, 0x2ef7, 0xcf04, 0x1, 0x0);
        gbc.writeMem(0xcf04, { 0x51 });
        gbc.writeMem(0xcf3a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x17d8);
        EXPECT(gbc.pc(), 0xcf3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf04), 0x51);
        EXPECT(gbc.readMem(0xcf3a), 0x2a);
        // 2A 00B5
        gbc.setState(0x29fc, 0xbaf2, 0xd10, 0x13ed, 0xfe74, 0x3bcf, 0x0, 0x1);
        gbc.writeMem(0x29fc, { 0x2a });
        gbc.writeMem(0x3bcf, { 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xbaf2);
        EXPECT(gbc.pc(), 0x29fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 00B7
        gbc.setState(0x5aa9, 0x8e7, 0x1200, 0x6447, 0x3df2, 0x6566, 0x1, 0x1);
        gbc.writeMem(0x5aa9, { 0x2a });
        gbc.writeMem(0x6566, { 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x8e7);
        EXPECT(gbc.pc(), 0x5aaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 00B8
        gbc.setState(0x937f, 0xd524, 0x1e30, 0x78d1, 0x1365, 0x7b55, 0x0, 0x0);
        gbc.writeMem(0x7b55, { 0x2d });
        gbc.writeMem(0x937f, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd524);
        EXPECT(gbc.pc(), 0x9380);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x937f), 0x2a);
        // 2A 00B9
        gbc.setState(0xc4a2, 0xf2e7, 0x5f30, 0xd09a, 0x1868, 0xa102, 0x1, 0x1);
        gbc.writeMem(0xa102, { 0x8d });
        gbc.writeMem(0xc4a2, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf2e7);
        EXPECT(gbc.pc(), 0xc4a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa102), 0x8d);
        EXPECT(gbc.readMem(0xc4a2), 0x2a);
        // 2A 00BA
        gbc.setState(0x9b75, 0x5248, 0x1640, 0x8716, 0x8c30, 0x99f, 0x1, 0x0);
        gbc.writeMem(0x99f, { 0xd7 });
        gbc.writeMem(0x9b75, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5248);
        EXPECT(gbc.pc(), 0x9b76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b75), 0x2a);
        // 2A 00BB
        gbc.setState(0x2374, 0x5aaf, 0xf2b0, 0xa630, 0x498d, 0x97c7, 0x0, 0x1);
        gbc.writeMem(0x2374, { 0x2a });
        gbc.writeMem(0x97c7, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5aaf);
        EXPECT(gbc.pc(), 0x2375);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97c7), 0x32);
        // 2A 00BC
        gbc.setState(0xb478, 0x6bd7, 0xa1a0, 0x37a, 0xd32c, 0xff0c, 0x0, 0x0);
        gbc.writeMem(0xb478, { 0x2a });
        gbc.writeMem(0xff0c, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6bd7);
        EXPECT(gbc.pc(), 0xb479);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb478), 0x2a);
        EXPECT(gbc.readMem(0xff0c), 0x94);
        // 2A 00BD
        gbc.setState(0xcca2, 0xb6cf, 0x8cb0, 0x4a3c, 0xa1f9, 0x6213, 0x1, 0x0);
        gbc.writeMem(0x6213, { 0xc5 });
        gbc.writeMem(0xcca2, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb6cf);
        EXPECT(gbc.pc(), 0xcca3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcca2), 0x2a);
        // 2A 00BE
        gbc.setState(0x9f96, 0x605a, 0x7d20, 0x1639, 0x3b93, 0xb359, 0x0, 0x0);
        gbc.writeMem(0x9f96, { 0x2a });
        gbc.writeMem(0xb359, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x605a);
        EXPECT(gbc.pc(), 0x9f97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f96), 0x2a);
        EXPECT(gbc.readMem(0xb359), 0x6e);
        // 2A 00BF
        gbc.setState(0xb56, 0xabc2, 0x3290, 0x6555, 0x30c8, 0xd243, 0x0, 0x1);
        gbc.writeMem(0xb56, { 0x2a });
        gbc.writeMem(0xd243, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xabc2);
        EXPECT(gbc.pc(), 0xb57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd243), 0xdd);
        // 2A 00C1
        gbc.setState(0xb504, 0x4d6, 0x6bd0, 0xff71, 0xa86d, 0xce72, 0x0, 0x1);
        gbc.writeMem(0xb504, { 0x2a });
        gbc.writeMem(0xce72, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4d6);
        EXPECT(gbc.pc(), 0xb505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb504), 0x2a);
        EXPECT(gbc.readMem(0xce72), 0x70);
        // 2A 00C2
        gbc.setState(0xb4a4, 0xf5ad, 0x4a50, 0x2556, 0x3d07, 0x8f7d, 0x0, 0x1);
        gbc.writeMem(0x8f7d, { 0x1b });
        gbc.writeMem(0xb4a4, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xf5ad);
        EXPECT(gbc.pc(), 0xb4a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f7d), 0x1b);
        EXPECT(gbc.readMem(0xb4a4), 0x2a);
        // 2A 00C3
        gbc.setState(0xd027, 0xb7d3, 0x3e80, 0x644b, 0xa634, 0xdcbc, 0x0, 0x0);
        gbc.writeMem(0xd027, { 0x2a });
        gbc.writeMem(0xdcbc, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb7d3);
        EXPECT(gbc.pc(), 0xd028);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd027), 0x2a);
        EXPECT(gbc.readMem(0xdcbc), 0xf7);
        // 2A 00C4
        gbc.setState(0x40ac, 0xcdd, 0x8ba0, 0xf1f1, 0x7e8, 0xa6b8, 0x0, 0x1);
        gbc.writeMem(0x40ac, { 0x2a });
        gbc.writeMem(0xa6b8, { 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xcdd);
        EXPECT(gbc.pc(), 0x40ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6b8), 0x1b);
        // 2A 00C5
        gbc.setState(0x9db3, 0x7ad0, 0xa2c0, 0xf0e1, 0xd0dd, 0x5614, 0x0, 0x0);
        gbc.writeMem(0x5614, { 0xa3 });
        gbc.writeMem(0x9db3, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7ad0);
        EXPECT(gbc.pc(), 0x9db4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9db3), 0x2a);
        // 2A 00C6
        gbc.setState(0xd06e, 0xf04d, 0xc190, 0x423, 0x7b9d, 0x479f, 0x1, 0x1);
        gbc.writeMem(0x479f, { 0xcc });
        gbc.writeMem(0xd06e, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xf04d);
        EXPECT(gbc.pc(), 0xd06f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd06e), 0x2a);
        // 2A 00C7
        gbc.setState(0xc150, 0x2209, 0xe300, 0x60f7, 0x248, 0x68c3, 0x1, 0x0);
        gbc.writeMem(0x68c3, { 0x63 });
        gbc.writeMem(0xc150, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2209);
        EXPECT(gbc.pc(), 0xc151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc150), 0x2a);
        // 2A 00C8
        gbc.setState(0x143, 0x6090, 0x6640, 0x60b9, 0xb1dc, 0x84d9, 0x1, 0x1);
        gbc.writeMem(0x143, { 0x2a });
        gbc.writeMem(0x84d9, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6090);
        EXPECT(gbc.pc(), 0x144);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84d9), 0xc8);
        // 2A 00CA
        gbc.setState(0xa044, 0x70f8, 0xf480, 0x6a73, 0x96a7, 0x2226, 0x1, 0x0);
        gbc.writeMem(0x2226, { 0x48 });
        gbc.writeMem(0xa044, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x70f8);
        EXPECT(gbc.pc(), 0xa045);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa044), 0x2a);
        // 2A 00CB
        gbc.setState(0x8342, 0x5b56, 0x4d80, 0x2790, 0x6f66, 0xb111, 0x0, 0x1);
        gbc.writeMem(0x8342, { 0x2a });
        gbc.writeMem(0xb111, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5b56);
        EXPECT(gbc.pc(), 0x8343);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8342), 0x2a);
        EXPECT(gbc.readMem(0xb111), 0x67);
        // 2A 00CC
        gbc.setState(0xb4ad, 0xafac, 0x8760, 0xb1e2, 0x3792, 0xd05d, 0x1, 0x0);
        gbc.writeMem(0xb4ad, { 0x2a });
        gbc.writeMem(0xd05d, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xafac);
        EXPECT(gbc.pc(), 0xb4ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ad), 0x2a);
        EXPECT(gbc.readMem(0xd05d), 0xa2);
        // 2A 00CD
        gbc.setState(0x4bd1, 0x538, 0x19f0, 0xb0e9, 0xfd3f, 0x53c5, 0x1, 0x0);
        gbc.writeMem(0x4bd1, { 0x2a });
        gbc.writeMem(0x53c5, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x538);
        EXPECT(gbc.pc(), 0x4bd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 00CE
        gbc.setState(0x446c, 0xd687, 0x7c90, 0x4304, 0x8df7, 0x1804, 0x1, 0x0);
        gbc.writeMem(0x1804, { 0xb0 });
        gbc.writeMem(0x446c, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd687);
        EXPECT(gbc.pc(), 0x446d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 00CF
        gbc.setState(0xdd0a, 0xc669, 0x6430, 0x923e, 0xa8f8, 0x81b6, 0x1, 0x1);
        gbc.writeMem(0x81b6, { 0x15 });
        gbc.writeMem(0xdd0a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc669);
        EXPECT(gbc.pc(), 0xdd0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81b6), 0x15);
        EXPECT(gbc.readMem(0xdd0a), 0x2a);
        // 2A 00D0
        gbc.setState(0xc418, 0x760, 0x39c0, 0xd168, 0xa696, 0x926a, 0x0, 0x0);
        gbc.writeMem(0x926a, { 0x95 });
        gbc.writeMem(0xc418, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x760);
        EXPECT(gbc.pc(), 0xc419);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x926a), 0x95);
        EXPECT(gbc.readMem(0xc418), 0x2a);
        // 2A 00D1
        gbc.setState(0xad37, 0xcb51, 0x80b0, 0x7a68, 0x40fe, 0x7549, 0x0, 0x0);
        gbc.writeMem(0x7549, { 0x44 });
        gbc.writeMem(0xad37, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xcb51);
        EXPECT(gbc.pc(), 0xad38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad37), 0x2a);
        // 2A 00D2
        gbc.setState(0x1e90, 0xfa02, 0xd4a0, 0x759e, 0xa175, 0xe276, 0x1, 0x1);
        gbc.writeMem(0x1e90, { 0x2a });
        gbc.writeMem(0xe276, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xfa02);
        EXPECT(gbc.pc(), 0x1e91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe276), 0x1a);
        // 2A 00D3
        gbc.setState(0xa81f, 0x7387, 0xa0e0, 0x8f84, 0x2825, 0xbbe3, 0x0, 0x1);
        gbc.writeMem(0xa81f, { 0x2a });
        gbc.writeMem(0xbbe3, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7387);
        EXPECT(gbc.pc(), 0xa820);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa81f), 0x2a);
        EXPECT(gbc.readMem(0xbbe3), 0x67);
        // 2A 00D4
        gbc.setState(0x11c5, 0xd0d6, 0x4380, 0xa75f, 0xb261, 0x54e8, 0x0, 0x1);
        gbc.writeMem(0x11c5, { 0x2a });
        gbc.writeMem(0x54e8, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd0d6);
        EXPECT(gbc.pc(), 0x11c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 00D5
        gbc.setState(0xfeb, 0xed33, 0x7560, 0xd825, 0x20e8, 0xd23c, 0x0, 0x1);
        gbc.writeMem(0xfeb, { 0x2a });
        gbc.writeMem(0xd23c, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xed33);
        EXPECT(gbc.pc(), 0xfec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd23c), 0x98);
        // 2A 00D6
        gbc.setState(0x52a3, 0x140a, 0xc370, 0x8298, 0x562a, 0x7b5a, 0x0, 0x1);
        gbc.writeMem(0x52a3, { 0x2a });
        gbc.writeMem(0x7b5a, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x140a);
        EXPECT(gbc.pc(), 0x52a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 00D7
        gbc.setState(0xba29, 0xaadb, 0xa200, 0x3149, 0xcdab, 0x405f, 0x1, 0x0);
        gbc.writeMem(0x405f, { 0x9b });
        gbc.writeMem(0xba29, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xaadb);
        EXPECT(gbc.pc(), 0xba2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba29), 0x2a);
        // 2A 00D8
        gbc.setState(0x924, 0x32a7, 0x8110, 0x43b3, 0x23da, 0x2ef8, 0x0, 0x1);
        gbc.writeMem(0x924, { 0x2a });
        gbc.writeMem(0x2ef8, { 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x32a7);
        EXPECT(gbc.pc(), 0x925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 00D9
        gbc.setState(0x5d5, 0xe429, 0xe8b0, 0x34a3, 0x7e12, 0xdd55, 0x0, 0x1);
        gbc.writeMem(0x5d5, { 0x2a });
        gbc.writeMem(0xdd55, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe429);
        EXPECT(gbc.pc(), 0x5d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd55), 0xd9);
        // 2A 00DA
        gbc.setState(0x3517, 0xaaf7, 0x21a0, 0x52d7, 0x5539, 0xcbf7, 0x1, 0x1);
        gbc.writeMem(0x3517, { 0x2a });
        gbc.writeMem(0xcbf7, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xaaf7);
        EXPECT(gbc.pc(), 0x3518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbf7), 0xa5);
        // 2A 00DB
        gbc.setState(0xa347, 0xdfa0, 0x7f0, 0xb620, 0xe4a3, 0xd36f, 0x0, 0x1);
        gbc.writeMem(0xa347, { 0x2a });
        gbc.writeMem(0xd36f, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xdfa0);
        EXPECT(gbc.pc(), 0xa348);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa347), 0x2a);
        EXPECT(gbc.readMem(0xd36f), 0x6);
        // 2A 00DC
        gbc.setState(0xef24, 0xa24e, 0x2ad0, 0xb94, 0xb6b1, 0x5a2, 0x0, 0x1);
        gbc.writeMem(0x5a2, { 0x0 });
        gbc.writeMem(0xef24, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa24e);
        EXPECT(gbc.pc(), 0xef25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef24), 0x2a);
        // 2A 00DD
        gbc.setState(0xa04f, 0xc376, 0x32e0, 0x2187, 0xcf71, 0xef84, 0x1, 0x0);
        gbc.writeMem(0xa04f, { 0x2a });
        gbc.writeMem(0xef84, { 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc376);
        EXPECT(gbc.pc(), 0xa050);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa04f), 0x2a);
        EXPECT(gbc.readMem(0xef84), 0xd4);
        // 2A 00DE
        gbc.setState(0x18dd, 0xc028, 0x4b80, 0x5075, 0x6ca6, 0x1f80, 0x0, 0x0);
        gbc.writeMem(0x18dd, { 0x2a });
        gbc.writeMem(0x1f80, { 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xc028);
        EXPECT(gbc.pc(), 0x18de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 00DF
        gbc.setState(0xd67f, 0xb1a2, 0xb190, 0x8440, 0x403a, 0x3558, 0x0, 0x0);
        gbc.writeMem(0x3558, { 0xf7 });
        gbc.writeMem(0xd67f, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb1a2);
        EXPECT(gbc.pc(), 0xd680);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd67f), 0x2a);
        // 2A 00E0
        gbc.setState(0x63a0, 0xfd, 0x860, 0x4f20, 0xd9d3, 0x184d, 0x0, 0x1);
        gbc.writeMem(0x184d, { 0x8c });
        gbc.writeMem(0x63a0, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xfd);
        EXPECT(gbc.pc(), 0x63a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 00E1
        gbc.setState(0x1a57, 0x3de3, 0xe170, 0xc9a9, 0xdb1d, 0xadc2, 0x1, 0x1);
        gbc.writeMem(0x1a57, { 0x2a });
        gbc.writeMem(0xadc2, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3de3);
        EXPECT(gbc.pc(), 0x1a58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadc2), 0xd9);
        // 2A 00E2
        gbc.setState(0x862e, 0x6ef8, 0xf170, 0x14f8, 0xcb2b, 0x5722, 0x0, 0x0);
        gbc.writeMem(0x5722, { 0xd9 });
        gbc.writeMem(0x862e, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6ef8);
        EXPECT(gbc.pc(), 0x862f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x862e), 0x2a);
        // 2A 00E3
        gbc.setState(0xbc83, 0x2034, 0x6a0, 0x15e8, 0x62d9, 0xb45d, 0x0, 0x0);
        gbc.writeMem(0xb45d, { 0x3b });
        gbc.writeMem(0xbc83, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2034);
        EXPECT(gbc.pc(), 0xbc84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb45d), 0x3b);
        EXPECT(gbc.readMem(0xbc83), 0x2a);
        // 2A 00E4
        gbc.setState(0xdf66, 0x3f9b, 0x2100, 0x41a9, 0xf6fa, 0x4654, 0x1, 0x0);
        gbc.writeMem(0x4654, { 0x43 });
        gbc.writeMem(0xdf66, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x3f9b);
        EXPECT(gbc.pc(), 0xdf67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf66), 0x2a);
        // 2A 00E5
        gbc.setState(0x814e, 0x1fdc, 0xab0, 0x68d2, 0x7ff8, 0x8036, 0x1, 0x1);
        gbc.writeMem(0x8036, { 0x40 });
        gbc.writeMem(0x814e, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1fdc);
        EXPECT(gbc.pc(), 0x814f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8036), 0x40);
        EXPECT(gbc.readMem(0x814e), 0x2a);
        // 2A 00E6
        gbc.setState(0xbdb6, 0xe207, 0x570, 0x62cd, 0xa7c7, 0xa9f4, 0x0, 0x1);
        gbc.writeMem(0xa9f4, { 0x58 });
        gbc.writeMem(0xbdb6, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe207);
        EXPECT(gbc.pc(), 0xbdb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9f4), 0x58);
        EXPECT(gbc.readMem(0xbdb6), 0x2a);
        // 2A 00E7
        gbc.setState(0xaf7, 0x8d3c, 0x6f70, 0xe4c1, 0xaddb, 0x3e10, 0x1, 0x0);
        gbc.writeMem(0xaf7, { 0x2a });
        gbc.writeMem(0x3e10, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x8d3c);
        EXPECT(gbc.pc(), 0xaf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 00E8
        gbc.setState(0x898a, 0x657d, 0x4b60, 0x47ca, 0xd7f5, 0x425b, 0x1, 0x0);
        gbc.writeMem(0x425b, { 0x81 });
        gbc.writeMem(0x898a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x657d);
        EXPECT(gbc.pc(), 0x898b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x898a), 0x2a);
        // 2A 00E9
        gbc.setState(0xdf9, 0xd26b, 0x6d60, 0xb419, 0x419a, 0x623e, 0x1, 0x1);
        gbc.writeMem(0xdf9, { 0x2a });
        gbc.writeMem(0x623e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd26b);
        EXPECT(gbc.pc(), 0xdfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 00EA
        gbc.setState(0xee4a, 0x74c3, 0xe40, 0x5411, 0xf65d, 0x1656, 0x1, 0x0);
        gbc.writeMem(0x1656, { 0x17 });
        gbc.writeMem(0xee4a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x74c3);
        EXPECT(gbc.pc(), 0xee4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee4a), 0x2a);
        // 2A 00EB
        gbc.setState(0x8744, 0x96b, 0x2440, 0x13d1, 0x484d, 0xa5a1, 0x1, 0x1);
        gbc.writeMem(0x8744, { 0x2a });
        gbc.writeMem(0xa5a1, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x96b);
        EXPECT(gbc.pc(), 0x8745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8744), 0x2a);
        EXPECT(gbc.readMem(0xa5a1), 0x6e);
        // 2A 00EC
        gbc.setState(0x4502, 0x5457, 0xb2a0, 0x1893, 0x894, 0x655c, 0x1, 0x0);
        gbc.writeMem(0x4502, { 0x2a });
        gbc.writeMem(0x655c, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5457);
        EXPECT(gbc.pc(), 0x4503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 00ED
        gbc.setState(0x6471, 0xf1fc, 0x50e0, 0xe8ac, 0x4ae7, 0xa9c9, 0x0, 0x1);
        gbc.writeMem(0x6471, { 0x2a });
        gbc.writeMem(0xa9c9, { 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xf1fc);
        EXPECT(gbc.pc(), 0x6472);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9c9), 0x9b);
        // 2A 00EE
        gbc.setState(0xd53f, 0x45a8, 0x2a60, 0xdcd3, 0x8f86, 0xb82a, 0x0, 0x1);
        gbc.writeMem(0xb82a, { 0x82 });
        gbc.writeMem(0xd53f, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x45a8);
        EXPECT(gbc.pc(), 0xd540);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb82a), 0x82);
        EXPECT(gbc.readMem(0xd53f), 0x2a);
        // 2A 00EF
        gbc.setState(0xa41a, 0x6d2f, 0x89c0, 0xeb3, 0x365c, 0xdeae, 0x1, 0x1);
        gbc.writeMem(0xa41a, { 0x2a });
        gbc.writeMem(0xdeae, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6d2f);
        EXPECT(gbc.pc(), 0xa41b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa41a), 0x2a);
        EXPECT(gbc.readMem(0xdeae), 0xe8);
        // 2A 00F0
        gbc.setState(0xbadf, 0xdc8f, 0x4f40, 0xb63d, 0xc539, 0xc4f6, 0x1, 0x0);
        gbc.writeMem(0xbadf, { 0x2a });
        gbc.writeMem(0xc4f6, { 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xdc8f);
        EXPECT(gbc.pc(), 0xbae0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbadf), 0x2a);
        EXPECT(gbc.readMem(0xc4f6), 0xe);
        // 2A 00F1
        gbc.setState(0x6548, 0xbae0, 0xc810, 0xfd57, 0xc468, 0x80e1, 0x0, 0x0);
        gbc.writeMem(0x6548, { 0x2a });
        gbc.writeMem(0x80e1, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xbae0);
        EXPECT(gbc.pc(), 0x6549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80e1), 0x30);
        // 2A 00F2
        gbc.setState(0xcc98, 0xffde, 0xa470, 0xacf8, 0xcdb2, 0x44b8, 0x0, 0x0);
        gbc.writeMem(0x44b8, { 0x6e });
        gbc.writeMem(0xcc98, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xffde);
        EXPECT(gbc.pc(), 0xcc99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc98), 0x2a);
        // 2A 00F3
        gbc.setState(0x759c, 0xbb36, 0xff10, 0x8f91, 0x8caf, 0x4dee, 0x0, 0x1);
        gbc.writeMem(0x4dee, { 0xda });
        gbc.writeMem(0x759c, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xbb36);
        EXPECT(gbc.pc(), 0x759d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 00F4
        gbc.setState(0x5a42, 0xef1a, 0x6a30, 0xbfda, 0x1e4b, 0x4ed8, 0x1, 0x0);
        gbc.writeMem(0x4ed8, { 0x30 });
        gbc.writeMem(0x5a42, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xef1a);
        EXPECT(gbc.pc(), 0x5a43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 00F5
        gbc.setState(0x5cfb, 0xb7dd, 0x2500, 0x38e0, 0xfebe, 0xc0f0, 0x1, 0x1);
        gbc.writeMem(0x5cfb, { 0x2a });
        gbc.writeMem(0xc0f0, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb7dd);
        EXPECT(gbc.pc(), 0x5cfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0f0), 0x91);
        // 2A 00F6
        gbc.setState(0x4d7e, 0xa0b6, 0x20c0, 0xdb07, 0xecbe, 0x9675, 0x0, 0x0);
        gbc.writeMem(0x4d7e, { 0x2a });
        gbc.writeMem(0x9675, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa0b6);
        EXPECT(gbc.pc(), 0x4d7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9675), 0xc0);
        // 2A 00F8
        gbc.setState(0x501b, 0x5f6, 0xc590, 0x9747, 0xf3a5, 0xce2f, 0x0, 0x1);
        gbc.writeMem(0x501b, { 0x2a });
        gbc.writeMem(0xce2f, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x5f6);
        EXPECT(gbc.pc(), 0x501c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce2f), 0x44);
        // 2A 00F9
        gbc.setState(0x9a4e, 0xaca1, 0xee30, 0x208e, 0xa05, 0xdcf, 0x0, 0x0);
        gbc.writeMem(0xdcf, { 0x3 });
        gbc.writeMem(0x9a4e, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xaca1);
        EXPECT(gbc.pc(), 0x9a4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a4e), 0x2a);
        // 2A 00FA
        gbc.setState(0x77e4, 0xf0d0, 0x23e0, 0x758f, 0x232b, 0x6a49, 0x0, 0x1);
        gbc.writeMem(0x6a49, { 0x8b });
        gbc.writeMem(0x77e4, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf0d0);
        EXPECT(gbc.pc(), 0x77e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 00FB
        gbc.setState(0xb7e3, 0x7ae7, 0x9c0, 0x176e, 0x252d, 0xf785, 0x0, 0x0);
        gbc.writeMem(0xb7e3, { 0x2a });
        gbc.writeMem(0xf785, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7ae7);
        EXPECT(gbc.pc(), 0xb7e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7e3), 0x2a);
        EXPECT(gbc.readMem(0xf785), 0x95);
        // 2A 00FC
        gbc.setState(0x95d0, 0xb372, 0x86f0, 0xc863, 0xcfe7, 0x4a30, 0x0, 0x0);
        gbc.writeMem(0x4a30, { 0x3b });
        gbc.writeMem(0x95d0, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb372);
        EXPECT(gbc.pc(), 0x95d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95d0), 0x2a);
        // 2A 00FD
        gbc.setState(0xda3c, 0x1714, 0x8060, 0xfd99, 0xdd1e, 0xf434, 0x0, 0x1);
        gbc.writeMem(0xda3c, { 0x2a });
        gbc.writeMem(0xf434, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1714);
        EXPECT(gbc.pc(), 0xda3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda3c), 0x2a);
        EXPECT(gbc.readMem(0xf434), 0x74);
        // 2A 00FE
        gbc.setState(0x5a4c, 0x337, 0xb6b0, 0x1077, 0xbb01, 0xf082, 0x1, 0x0);
        gbc.writeMem(0x5a4c, { 0x2a });
        gbc.writeMem(0xf082, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x337);
        EXPECT(gbc.pc(), 0x5a4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf082), 0x77);
        // 2A 00FF
        gbc.setState(0x7187, 0x71c7, 0x4ac0, 0x733d, 0x6b47, 0x1d41, 0x0, 0x1);
        gbc.writeMem(0x1d41, { 0x84 });
        gbc.writeMem(0x7187, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x71c7);
        EXPECT(gbc.pc(), 0x7188);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0100
        gbc.setState(0x45e0, 0xf63, 0x9aa0, 0x5b5c, 0x4ee0, 0x3cce, 0x0, 0x1);
        gbc.writeMem(0x3cce, { 0xf7 });
        gbc.writeMem(0x45e0, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf63);
        EXPECT(gbc.pc(), 0x45e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 0101
        gbc.setState(0x7d3e, 0xffba, 0xbde0, 0x4a36, 0xae33, 0x147c, 0x0, 0x0);
        gbc.writeMem(0x147c, { 0x1c });
        gbc.writeMem(0x7d3e, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xffba);
        EXPECT(gbc.pc(), 0x7d3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 0102
        gbc.setState(0x9ac8, 0xc22, 0xa0, 0xaa51, 0x2d96, 0x942d, 0x0, 0x1);
        gbc.writeMem(0x942d, { 0x37 });
        gbc.writeMem(0x9ac8, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc22);
        EXPECT(gbc.pc(), 0x9ac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x942d), 0x37);
        EXPECT(gbc.readMem(0x9ac8), 0x2a);
        // 2A 0103
        gbc.setState(0x15e5, 0x710b, 0xdc30, 0xeee2, 0xf2c7, 0xe611, 0x1, 0x1);
        gbc.writeMem(0x15e5, { 0x2a });
        gbc.writeMem(0xe611, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x710b);
        EXPECT(gbc.pc(), 0x15e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe611), 0x18);
        // 2A 0104
        gbc.setState(0x6927, 0x73bb, 0x2ca0, 0xc02b, 0x9be9, 0xf596, 0x1, 0x0);
        gbc.writeMem(0x6927, { 0x2a });
        gbc.writeMem(0xf596, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x73bb);
        EXPECT(gbc.pc(), 0x6928);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf596), 0x14);
        // 2A 0105
        gbc.setState(0xa310, 0x71d2, 0xbd10, 0x241c, 0x6cfe, 0xacc8, 0x0, 0x1);
        gbc.writeMem(0xa310, { 0x2a });
        gbc.writeMem(0xacc8, { 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x71d2);
        EXPECT(gbc.pc(), 0xa311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa310), 0x2a);
        EXPECT(gbc.readMem(0xacc8), 0x6a);
        // 2A 0106
        gbc.setState(0x669b, 0xacd0, 0xeba0, 0xfbe0, 0x2867, 0x764a, 0x0, 0x1);
        gbc.writeMem(0x669b, { 0x2a });
        gbc.writeMem(0x764a, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xacd0);
        EXPECT(gbc.pc(), 0x669c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 0107
        gbc.setState(0x6475, 0x82b3, 0x2ad0, 0xf756, 0x486a, 0x9867, 0x0, 0x0);
        gbc.writeMem(0x6475, { 0x2a });
        gbc.writeMem(0x9867, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x82b3);
        EXPECT(gbc.pc(), 0x6476);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9867), 0x69);
        // 2A 0108
        gbc.setState(0x74ad, 0xdb24, 0x3a10, 0xc790, 0xace0, 0xbcab, 0x0, 0x0);
        gbc.writeMem(0x74ad, { 0x2a });
        gbc.writeMem(0xbcab, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xdb24);
        EXPECT(gbc.pc(), 0x74ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcab), 0xa);
        // 2A 010A
        gbc.setState(0x83b0, 0x8834, 0xe870, 0x93df, 0xb2c0, 0xf891, 0x0, 0x1);
        gbc.writeMem(0x83b0, { 0x2a });
        gbc.writeMem(0xf891, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x8834);
        EXPECT(gbc.pc(), 0x83b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83b0), 0x2a);
        EXPECT(gbc.readMem(0xf891), 0xf4);
        // 2A 010B
        gbc.setState(0x3a6d, 0xd1a3, 0x51c0, 0xc337, 0x92bf, 0xc69c, 0x0, 0x1);
        gbc.writeMem(0x3a6d, { 0x2a });
        gbc.writeMem(0xc69c, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd1a3);
        EXPECT(gbc.pc(), 0x3a6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc69c), 0x41);
        // 2A 010C
        gbc.setState(0x9ea2, 0x8adb, 0xc230, 0xfc56, 0x997f, 0x2509, 0x1, 0x0);
        gbc.writeMem(0x2509, { 0x39 });
        gbc.writeMem(0x9ea2, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8adb);
        EXPECT(gbc.pc(), 0x9ea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ea2), 0x2a);
        // 2A 010D
        gbc.setState(0xec, 0x4259, 0x4ee0, 0x1b74, 0x5b28, 0x8161, 0x0, 0x0);
        gbc.writeMem(0xec, { 0x2a });
        gbc.writeMem(0x8161, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4259);
        EXPECT(gbc.pc(), 0xed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8161), 0x74);
        // 2A 010E
        gbc.setState(0x96ba, 0xed73, 0x5830, 0x1ab5, 0x73fc, 0xa72a, 0x0, 0x1);
        gbc.writeMem(0x96ba, { 0x2a });
        gbc.writeMem(0xa72a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xed73);
        EXPECT(gbc.pc(), 0x96bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96ba), 0x2a);
        EXPECT(gbc.readMem(0xa72a), 0x93);
        // 2A 010F
        gbc.setState(0xd22, 0x7afa, 0xbf50, 0xb545, 0x6781, 0xb7d, 0x1, 0x1);
        gbc.writeMem(0xb7d, { 0x47 });
        gbc.writeMem(0xd22, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7afa);
        EXPECT(gbc.pc(), 0xd23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0111
        gbc.setState(0xb3c3, 0x2536, 0x4c20, 0xe6ae, 0x662, 0x9624, 0x1, 0x1);
        gbc.writeMem(0x9624, { 0x9e });
        gbc.writeMem(0xb3c3, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2536);
        EXPECT(gbc.pc(), 0xb3c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9624), 0x9e);
        EXPECT(gbc.readMem(0xb3c3), 0x2a);
        // 2A 0112
        gbc.setState(0x1922, 0x1a70, 0xa6d0, 0x2db, 0xd29, 0x8825, 0x1, 0x1);
        gbc.writeMem(0x1922, { 0x2a });
        gbc.writeMem(0x8825, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1a70);
        EXPECT(gbc.pc(), 0x1923);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8825), 0x1e);
        // 2A 0113
        gbc.setState(0x8710, 0x2ec2, 0xab40, 0x3ab8, 0x428d, 0xd22f, 0x0, 0x1);
        gbc.writeMem(0x8710, { 0x2a });
        gbc.writeMem(0xd22f, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2ec2);
        EXPECT(gbc.pc(), 0x8711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8710), 0x2a);
        EXPECT(gbc.readMem(0xd22f), 0xd6);
        // 2A 0114
        gbc.setState(0x79b0, 0x5e8b, 0x8210, 0xde9, 0x274b, 0xd69a, 0x0, 0x0);
        gbc.writeMem(0x79b0, { 0x2a });
        gbc.writeMem(0xd69a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5e8b);
        EXPECT(gbc.pc(), 0x79b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd69a), 0x10);
        // 2A 0116
        gbc.setState(0xd9e2, 0x43c, 0xa750, 0x6183, 0x4000, 0x99d5, 0x1, 0x1);
        gbc.writeMem(0x99d5, { 0x54 });
        gbc.writeMem(0xd9e2, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x43c);
        EXPECT(gbc.pc(), 0xd9e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99d5), 0x54);
        EXPECT(gbc.readMem(0xd9e2), 0x2a);
        // 2A 0117
        gbc.setState(0x6574, 0x5e44, 0x3430, 0x8266, 0x706e, 0x915, 0x1, 0x0);
        gbc.writeMem(0x915, { 0xa8 });
        gbc.writeMem(0x6574, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5e44);
        EXPECT(gbc.pc(), 0x6575);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0118
        gbc.setState(0x1d9d, 0xfff7, 0x3840, 0x22cd, 0xdfa5, 0x4615, 0x1, 0x1);
        gbc.writeMem(0x1d9d, { 0x2a });
        gbc.writeMem(0x4615, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfff7);
        EXPECT(gbc.pc(), 0x1d9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 011A
        gbc.setState(0x4c68, 0xf386, 0x58c0, 0xaca4, 0xe73a, 0x832b, 0x1, 0x1);
        gbc.writeMem(0x4c68, { 0x2a });
        gbc.writeMem(0x832b, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf386);
        EXPECT(gbc.pc(), 0x4c69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x832b), 0x5f);
        // 2A 011B
        gbc.setState(0x286c, 0xbf75, 0x2d10, 0x1e4c, 0x3380, 0xf0cb, 0x1, 0x1);
        gbc.writeMem(0x286c, { 0x2a });
        gbc.writeMem(0xf0cb, { 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xbf75);
        EXPECT(gbc.pc(), 0x286d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf0cb), 0xdc);
        // 2A 011C
        gbc.setState(0x749a, 0x90, 0x52e0, 0x331, 0x52c, 0x24d1, 0x1, 0x1);
        gbc.writeMem(0x24d1, { 0x67 });
        gbc.writeMem(0x749a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x90);
        EXPECT(gbc.pc(), 0x749b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 011D
        gbc.setState(0x7b70, 0x78e6, 0x78f0, 0x4e49, 0xb747, 0xf069, 0x0, 0x0);
        gbc.writeMem(0x7b70, { 0x2a });
        gbc.writeMem(0xf069, { 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x78e6);
        EXPECT(gbc.pc(), 0x7b71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf069), 0x3c);
        // 2A 011E
        gbc.setState(0xea52, 0xbe88, 0xb580, 0x218e, 0xf24c, 0x3689, 0x0, 0x1);
        gbc.writeMem(0x3689, { 0x80 });
        gbc.writeMem(0xea52, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xbe88);
        EXPECT(gbc.pc(), 0xea53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea52), 0x2a);
        // 2A 011F
        gbc.setState(0x677b, 0x3432, 0xb2b0, 0x9f87, 0xabff, 0x11f0, 0x0, 0x1);
        gbc.writeMem(0x11f0, { 0x6e });
        gbc.writeMem(0x677b, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3432);
        EXPECT(gbc.pc(), 0x677c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0121
        gbc.setState(0x39cc, 0xfc82, 0xcc40, 0x6805, 0x8073, 0x9691, 0x0, 0x0);
        gbc.writeMem(0x39cc, { 0x2a });
        gbc.writeMem(0x9691, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xfc82);
        EXPECT(gbc.pc(), 0x39cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9691), 0x8d);
        // 2A 0122
        gbc.setState(0x7a7f, 0x4518, 0x4400, 0xf958, 0x33b5, 0x45e2, 0x1, 0x1);
        gbc.writeMem(0x45e2, { 0x45 });
        gbc.writeMem(0x7a7f, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4518);
        EXPECT(gbc.pc(), 0x7a80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0123
        gbc.setState(0x79ea, 0x3fea, 0x9e00, 0x1ca0, 0x478a, 0xef08, 0x0, 0x1);
        gbc.writeMem(0x79ea, { 0x2a });
        gbc.writeMem(0xef08, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x3fea);
        EXPECT(gbc.pc(), 0x79eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef08), 0x3f);
        // 2A 0124
        gbc.setState(0xc76e, 0x5953, 0xd80, 0x714d, 0x39d1, 0x923, 0x1, 0x0);
        gbc.writeMem(0x923, { 0x70 });
        gbc.writeMem(0xc76e, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5953);
        EXPECT(gbc.pc(), 0xc76f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc76e), 0x2a);
        // 2A 0125
        gbc.setState(0x2db0, 0x909, 0x2a70, 0x8f41, 0x829b, 0x31ca, 0x1, 0x0);
        gbc.writeMem(0x2db0, { 0x2a });
        gbc.writeMem(0x31ca, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x909);
        EXPECT(gbc.pc(), 0x2db1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0126
        gbc.setState(0x9b5e, 0xdd3, 0xe210, 0x4adc, 0x59aa, 0x207e, 0x1, 0x0);
        gbc.writeMem(0x207e, { 0xbc });
        gbc.writeMem(0x9b5e, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xdd3);
        EXPECT(gbc.pc(), 0x9b5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b5e), 0x2a);
        // 2A 0127
        gbc.setState(0xbfb, 0xc824, 0x93d0, 0xb493, 0x858, 0x37e, 0x0, 0x1);
        gbc.writeMem(0x37e, { 0xf4 });
        gbc.writeMem(0xbfb, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc824);
        EXPECT(gbc.pc(), 0xbfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0128
        gbc.setState(0xb43d, 0x30, 0xc870, 0x2c85, 0xa1ca, 0xeb01, 0x0, 0x1);
        gbc.writeMem(0xb43d, { 0x2a });
        gbc.writeMem(0xeb01, { 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x30);
        EXPECT(gbc.pc(), 0xb43e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb43d), 0x2a);
        EXPECT(gbc.readMem(0xeb01), 0x4f);
        // 2A 0129
        gbc.setState(0x65d6, 0xd9c7, 0xb590, 0xc0c2, 0x671f, 0xebcd, 0x1, 0x1);
        gbc.writeMem(0x65d6, { 0x2a });
        gbc.writeMem(0xebcd, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xd9c7);
        EXPECT(gbc.pc(), 0x65d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebcd), 0x6f);
        // 2A 012A
        gbc.setState(0x2d21, 0x8b88, 0x2480, 0xb5fd, 0x351b, 0x166f, 0x0, 0x0);
        gbc.writeMem(0x166f, { 0x1e });
        gbc.writeMem(0x2d21, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8b88);
        EXPECT(gbc.pc(), 0x2d22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 012B
        gbc.setState(0x35bf, 0x2083, 0x3760, 0xcbe7, 0x729e, 0xdbf7, 0x0, 0x0);
        gbc.writeMem(0x35bf, { 0x2a });
        gbc.writeMem(0xdbf7, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2083);
        EXPECT(gbc.pc(), 0x35c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbf7), 0xce);
        // 2A 012C
        gbc.setState(0xafac, 0xbb72, 0x5fe0, 0x4b95, 0x2d16, 0x2781, 0x1, 0x0);
        gbc.writeMem(0x2781, { 0xec });
        gbc.writeMem(0xafac, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xbb72);
        EXPECT(gbc.pc(), 0xafad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafac), 0x2a);
        // 2A 012D
        gbc.setState(0xaeb7, 0xadf7, 0x8ed0, 0x607a, 0x681, 0x4542, 0x1, 0x0);
        gbc.writeMem(0x4542, { 0x43 });
        gbc.writeMem(0xaeb7, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xadf7);
        EXPECT(gbc.pc(), 0xaeb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeb7), 0x2a);
        // 2A 012E
        gbc.setState(0x91ae, 0x6bfb, 0x6f80, 0x79f7, 0x5595, 0x26e7, 0x0, 0x1);
        gbc.writeMem(0x26e7, { 0xb1 });
        gbc.writeMem(0x91ae, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x6bfb);
        EXPECT(gbc.pc(), 0x91af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ae), 0x2a);
        // 2A 012F
        gbc.setState(0x3adb, 0xa456, 0xfed0, 0x5f51, 0x46de, 0xf4e8, 0x0, 0x1);
        gbc.writeMem(0x3adb, { 0x2a });
        gbc.writeMem(0xf4e8, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa456);
        EXPECT(gbc.pc(), 0x3adc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf4e8), 0x42);
        // 2A 0130
        gbc.setState(0xdb78, 0x5a00, 0x7880, 0xf41b, 0x8732, 0x4fee, 0x0, 0x0);
        gbc.writeMem(0x4fee, { 0xc6 });
        gbc.writeMem(0xdb78, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x5a00);
        EXPECT(gbc.pc(), 0xdb79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb78), 0x2a);
        // 2A 0131
        gbc.setState(0x2206, 0xd67d, 0x710, 0x677d, 0xdb5d, 0x51c7, 0x0, 0x1);
        gbc.writeMem(0x2206, { 0x2a });
        gbc.writeMem(0x51c7, { 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd67d);
        EXPECT(gbc.pc(), 0x2207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0132
        gbc.setState(0x1f99, 0xd254, 0x3ef0, 0xb9e4, 0x406a, 0xd99, 0x1, 0x0);
        gbc.writeMem(0xd99, { 0xc7 });
        gbc.writeMem(0x1f99, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd254);
        EXPECT(gbc.pc(), 0x1f9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0133
        gbc.setState(0x425e, 0x42e5, 0x9400, 0x531c, 0x779e, 0xb370, 0x1, 0x0);
        gbc.writeMem(0x425e, { 0x2a });
        gbc.writeMem(0xb370, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x42e5);
        EXPECT(gbc.pc(), 0x425f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb370), 0x66);
        // 2A 0134
        gbc.setState(0x88b0, 0x859f, 0xc3d0, 0x651a, 0x4d5e, 0xd04f, 0x0, 0x0);
        gbc.writeMem(0x88b0, { 0x2a });
        gbc.writeMem(0xd04f, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x859f);
        EXPECT(gbc.pc(), 0x88b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b0), 0x2a);
        EXPECT(gbc.readMem(0xd04f), 0x5f);
        // 2A 0135
        gbc.setState(0x52ad, 0x60e4, 0xae80, 0x2e6e, 0x84f4, 0x9bb9, 0x0, 0x0);
        gbc.writeMem(0x52ad, { 0x2a });
        gbc.writeMem(0x9bb9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x60e4);
        EXPECT(gbc.pc(), 0x52ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bb9), 0xba);
        // 2A 0137
        gbc.setState(0xba5c, 0xbe4a, 0x97b0, 0x859b, 0xb45c, 0xb3b7, 0x0, 0x0);
        gbc.writeMem(0xb3b7, { 0x1 });
        gbc.writeMem(0xba5c, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xbe4a);
        EXPECT(gbc.pc(), 0xba5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3b7), 0x1);
        EXPECT(gbc.readMem(0xba5c), 0x2a);
        // 2A 0138
        gbc.setState(0xaeff, 0xdb14, 0x8f90, 0xc62a, 0x9b82, 0xb5c2, 0x1, 0x1);
        gbc.writeMem(0xaeff, { 0x2a });
        gbc.writeMem(0xb5c2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xdb14);
        EXPECT(gbc.pc(), 0xaf00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeff), 0x2a);
        EXPECT(gbc.readMem(0xb5c2), 0x0);
        // 2A 0139
        gbc.setState(0x8ec0, 0x2e4, 0xaf70, 0xaccc, 0x7d66, 0xded3, 0x1, 0x1);
        gbc.writeMem(0x8ec0, { 0x2a });
        gbc.writeMem(0xded3, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2e4);
        EXPECT(gbc.pc(), 0x8ec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ec0), 0x2a);
        EXPECT(gbc.readMem(0xded3), 0x69);
        // 2A 013A
        gbc.setState(0xbe62, 0x770c, 0xe7f0, 0x27b4, 0x5a1e, 0x1fb5, 0x1, 0x0);
        gbc.writeMem(0x1fb5, { 0x57 });
        gbc.writeMem(0xbe62, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x770c);
        EXPECT(gbc.pc(), 0xbe63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe62), 0x2a);
        // 2A 013B
        gbc.setState(0x394, 0xbb4d, 0x9890, 0x8667, 0xf3ee, 0x9ce3, 0x1, 0x0);
        gbc.writeMem(0x394, { 0x2a });
        gbc.writeMem(0x9ce3, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xbb4d);
        EXPECT(gbc.pc(), 0x395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ce3), 0xe1);
        // 2A 013C
        gbc.setState(0x9e4a, 0x8287, 0xd060, 0x6325, 0x50f2, 0xa691, 0x0, 0x1);
        gbc.writeMem(0x9e4a, { 0x2a });
        gbc.writeMem(0xa691, { 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x8287);
        EXPECT(gbc.pc(), 0x9e4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e4a), 0x2a);
        EXPECT(gbc.readMem(0xa691), 0x47);
        // 2A 013D
        gbc.setState(0x32c, 0x372a, 0x5d70, 0x13fe, 0xf082, 0xca18, 0x0, 0x0);
        gbc.writeMem(0x32c, { 0x2a });
        gbc.writeMem(0xca18, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x372a);
        EXPECT(gbc.pc(), 0x32d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca18), 0xc0);
        // 2A 013E
        gbc.setState(0x627a, 0x5553, 0xd250, 0x8e9a, 0x775d, 0x8bf4, 0x0, 0x0);
        gbc.writeMem(0x627a, { 0x2a });
        gbc.writeMem(0x8bf4, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5553);
        EXPECT(gbc.pc(), 0x627b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bf4), 0xa2);
        // 2A 013F
        gbc.setState(0x1c69, 0x6b77, 0xe9e0, 0xe6c3, 0x761c, 0x2120, 0x0, 0x0);
        gbc.writeMem(0x1c69, { 0x2a });
        gbc.writeMem(0x2120, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6b77);
        EXPECT(gbc.pc(), 0x1c6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 0141
        gbc.setState(0xd9b1, 0x4351, 0xa8d0, 0x11a, 0x4fa2, 0x739d, 0x1, 0x1);
        gbc.writeMem(0x739d, { 0x9f });
        gbc.writeMem(0xd9b1, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4351);
        EXPECT(gbc.pc(), 0xd9b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9b1), 0x2a);
        // 2A 0142
        gbc.setState(0x66c0, 0x28d9, 0x45c0, 0x985f, 0x1e99, 0x17f0, 0x1, 0x1);
        gbc.writeMem(0x17f0, { 0x4e });
        gbc.writeMem(0x66c0, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x28d9);
        EXPECT(gbc.pc(), 0x66c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0143
        gbc.setState(0xc9ae, 0x6d8b, 0x8cf0, 0x2ade, 0x1f16, 0x327c, 0x1, 0x0);
        gbc.writeMem(0x327c, { 0xfb });
        gbc.writeMem(0xc9ae, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x6d8b);
        EXPECT(gbc.pc(), 0xc9af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ae), 0x2a);
        // 2A 0144
        gbc.setState(0xa942, 0xaa34, 0xaf60, 0xfd20, 0x9292, 0x4989, 0x1, 0x0);
        gbc.writeMem(0x4989, { 0xc0 });
        gbc.writeMem(0xa942, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xaa34);
        EXPECT(gbc.pc(), 0xa943);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa942), 0x2a);
        // 2A 0145
        gbc.setState(0x1c67, 0xacb6, 0xca60, 0xcd33, 0xec39, 0x2072, 0x1, 0x1);
        gbc.writeMem(0x1c67, { 0x2a });
        gbc.writeMem(0x2072, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xacb6);
        EXPECT(gbc.pc(), 0x1c68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 0146
        gbc.setState(0x603a, 0x4186, 0x2090, 0x6bef, 0x1159, 0x267, 0x1, 0x0);
        gbc.writeMem(0x267, { 0xa6 });
        gbc.writeMem(0x603a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4186);
        EXPECT(gbc.pc(), 0x603b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0147
        gbc.setState(0x2fe3, 0x2810, 0xac90, 0x7086, 0x35cb, 0xced9, 0x0, 0x1);
        gbc.writeMem(0x2fe3, { 0x2a });
        gbc.writeMem(0xced9, { 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2810);
        EXPECT(gbc.pc(), 0x2fe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xced9), 0x9f);
        // 2A 0148
        gbc.setState(0x5d45, 0x8f4b, 0xbb50, 0x4253, 0xff84, 0x90f5, 0x1, 0x0);
        gbc.writeMem(0x5d45, { 0x2a });
        gbc.writeMem(0x90f5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8f4b);
        EXPECT(gbc.pc(), 0x5d46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90f5), 0x90);
        // 2A 0149
        gbc.setState(0x6826, 0xfc3d, 0x4630, 0x2a1a, 0x379a, 0xe73c, 0x1, 0x1);
        gbc.writeMem(0x6826, { 0x2a });
        gbc.writeMem(0xe73c, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xfc3d);
        EXPECT(gbc.pc(), 0x6827);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe73c), 0x84);
        // 2A 014A
        gbc.setState(0x1cd0, 0x1995, 0xffd0, 0x4f9a, 0xa003, 0xccf2, 0x0, 0x1);
        gbc.writeMem(0x1cd0, { 0x2a });
        gbc.writeMem(0xccf2, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1995);
        EXPECT(gbc.pc(), 0x1cd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccf2), 0xec);
        // 2A 014B
        gbc.setState(0x511b, 0x54e2, 0x4ce0, 0xc3cb, 0xabb0, 0xe121, 0x1, 0x0);
        gbc.writeMem(0x511b, { 0x2a });
        gbc.writeMem(0xe121, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x54e2);
        EXPECT(gbc.pc(), 0x511c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe121), 0xf0);
        // 2A 014C
        gbc.setState(0xe6ef, 0xb369, 0xec30, 0x349a, 0x843b, 0x6bdb, 0x1, 0x0);
        gbc.writeMem(0x6bdb, { 0xa8 });
        gbc.writeMem(0xe6ef, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xb369);
        EXPECT(gbc.pc(), 0xe6f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6ef), 0x2a);
        // 2A 014D
        gbc.setState(0xc309, 0xaea9, 0x3690, 0x534b, 0xe259, 0xcd5f, 0x0, 0x0);
        gbc.writeMem(0xc309, { 0x2a });
        gbc.writeMem(0xcd5f, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xaea9);
        EXPECT(gbc.pc(), 0xc30a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc309), 0x2a);
        EXPECT(gbc.readMem(0xcd5f), 0x12);
        // 2A 014E
        gbc.setState(0xbe3b, 0x33, 0x6dc0, 0xabf9, 0xb50c, 0xc389, 0x1, 0x1);
        gbc.writeMem(0xbe3b, { 0x2a });
        gbc.writeMem(0xc389, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x33);
        EXPECT(gbc.pc(), 0xbe3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe3b), 0x2a);
        EXPECT(gbc.readMem(0xc389), 0xc3);
        // 2A 014F
        gbc.setState(0x8c62, 0x2f05, 0x9e70, 0x1a1b, 0x7650, 0x1b25, 0x1, 0x0);
        gbc.writeMem(0x1b25, { 0x87 });
        gbc.writeMem(0x8c62, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2f05);
        EXPECT(gbc.pc(), 0x8c63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c62), 0x2a);
        // 2A 0151
        gbc.setState(0xbec2, 0xd24e, 0x5890, 0xa0db, 0x17d9, 0x12c1, 0x1, 0x1);
        gbc.writeMem(0x12c1, { 0x9a });
        gbc.writeMem(0xbec2, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd24e);
        EXPECT(gbc.pc(), 0xbec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbec2), 0x2a);
        // 2A 0152
        gbc.setState(0xe9af, 0xc860, 0xf720, 0x14f8, 0x709, 0xa55c, 0x0, 0x0);
        gbc.writeMem(0xa55c, { 0xb1 });
        gbc.writeMem(0xe9af, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc860);
        EXPECT(gbc.pc(), 0xe9b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa55c), 0xb1);
        EXPECT(gbc.readMem(0xe9af), 0x2a);
        // 2A 0153
        gbc.setState(0x3225, 0xac70, 0xc210, 0x2709, 0x809f, 0xef5c, 0x1, 0x1);
        gbc.writeMem(0x3225, { 0x2a });
        gbc.writeMem(0xef5c, { 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xac70);
        EXPECT(gbc.pc(), 0x3226);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef5c), 0x6a);
        // 2A 0154
        gbc.setState(0x5488, 0x89ab, 0xd5d0, 0xa54, 0x7b4, 0x50ee, 0x1, 0x1);
        gbc.writeMem(0x50ee, { 0x72 });
        gbc.writeMem(0x5488, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x89ab);
        EXPECT(gbc.pc(), 0x5489);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0155
        gbc.setState(0x1d10, 0x2192, 0xe6b0, 0xe433, 0x67bc, 0xb9b5, 0x1, 0x0);
        gbc.writeMem(0x1d10, { 0x2a });
        gbc.writeMem(0xb9b5, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2192);
        EXPECT(gbc.pc(), 0x1d11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9b5), 0x9e);
        // 2A 0156
        gbc.setState(0x8fb8, 0xe8e6, 0xa790, 0x7f11, 0xfa31, 0x8e81, 0x0, 0x1);
        gbc.writeMem(0x8e81, { 0x6 });
        gbc.writeMem(0x8fb8, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe8e6);
        EXPECT(gbc.pc(), 0x8fb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e81), 0x6);
        EXPECT(gbc.readMem(0x8fb8), 0x2a);
        // 2A 0157
        gbc.setState(0xcc9a, 0x902, 0xe350, 0x2c7f, 0x955f, 0x4683, 0x0, 0x1);
        gbc.writeMem(0x4683, { 0x2 });
        gbc.writeMem(0xcc9a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x902);
        EXPECT(gbc.pc(), 0xcc9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc9a), 0x2a);
        // 2A 0158
        gbc.setState(0x45ca, 0xab6b, 0xdb00, 0x3ce6, 0xcea, 0xb888, 0x1, 0x0);
        gbc.writeMem(0x45ca, { 0x2a });
        gbc.writeMem(0xb888, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xab6b);
        EXPECT(gbc.pc(), 0x45cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb888), 0x60);
        // 2A 0159
        gbc.setState(0xefc2, 0x3737, 0x340, 0x8d0a, 0xcf20, 0x6ffe, 0x0, 0x0);
        gbc.writeMem(0x6ffe, { 0xf1 });
        gbc.writeMem(0xefc2, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x3737);
        EXPECT(gbc.pc(), 0xefc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefc2), 0x2a);
        // 2A 015A
        gbc.setState(0xac8e, 0xb5be, 0x8ac0, 0x9d8f, 0x7261, 0x6c3, 0x1, 0x0);
        gbc.writeMem(0x6c3, { 0x4d });
        gbc.writeMem(0xac8e, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb5be);
        EXPECT(gbc.pc(), 0xac8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac8e), 0x2a);
        // 2A 015B
        gbc.setState(0x8c66, 0xb30b, 0x23b0, 0xa0c9, 0xfb22, 0xeab, 0x1, 0x1);
        gbc.writeMem(0xeab, { 0xbf });
        gbc.writeMem(0x8c66, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb30b);
        EXPECT(gbc.pc(), 0x8c67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c66), 0x2a);
        // 2A 015C
        gbc.setState(0x5f5f, 0x490c, 0x36a0, 0x19dc, 0x48c, 0x582d, 0x0, 0x1);
        gbc.writeMem(0x582d, { 0xc0 });
        gbc.writeMem(0x5f5f, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x490c);
        EXPECT(gbc.pc(), 0x5f60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 015D
        gbc.setState(0x72c0, 0xace2, 0xe080, 0xc40, 0xfff2, 0xdd77, 0x1, 0x0);
        gbc.writeMem(0x72c0, { 0x2a });
        gbc.writeMem(0xdd77, { 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xace2);
        EXPECT(gbc.pc(), 0x72c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd77), 0xe);
        // 2A 015E
        gbc.setState(0xe36c, 0x76d5, 0xb650, 0xeef5, 0xbdf8, 0x614e, 0x1, 0x1);
        gbc.writeMem(0x614e, { 0xa0 });
        gbc.writeMem(0xe36c, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x76d5);
        EXPECT(gbc.pc(), 0xe36d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe36c), 0x2a);
        // 2A 015F
        gbc.setState(0x72a7, 0x25fb, 0x53c0, 0x76b0, 0xc46d, 0x4fb9, 0x0, 0x1);
        gbc.writeMem(0x4fb9, { 0x50 });
        gbc.writeMem(0x72a7, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x25fb);
        EXPECT(gbc.pc(), 0x72a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0160
        gbc.setState(0x9a1b, 0xf6b7, 0x1660, 0xd004, 0xe085, 0xcd4b, 0x0, 0x1);
        gbc.writeMem(0x9a1b, { 0x2a });
        gbc.writeMem(0xcd4b, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf6b7);
        EXPECT(gbc.pc(), 0x9a1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a1b), 0x2a);
        EXPECT(gbc.readMem(0xcd4b), 0x38);
        // 2A 0161
        gbc.setState(0xcc55, 0x39ae, 0x5b30, 0xf8f8, 0x854b, 0xd006, 0x1, 0x0);
        gbc.writeMem(0xcc55, { 0x2a });
        gbc.writeMem(0xd006, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x39ae);
        EXPECT(gbc.pc(), 0xcc56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc55), 0x2a);
        EXPECT(gbc.readMem(0xd006), 0x79);
        // 2A 0162
        gbc.setState(0xc897, 0xf29b, 0x7d0, 0x2f04, 0xd823, 0x44e6, 0x1, 0x1);
        gbc.writeMem(0x44e6, { 0xf4 });
        gbc.writeMem(0xc897, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf29b);
        EXPECT(gbc.pc(), 0xc898);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc897), 0x2a);
        // 2A 0163
        gbc.setState(0xc650, 0xe21f, 0x97a0, 0xea3f, 0x533, 0x4fbd, 0x0, 0x1);
        gbc.writeMem(0x4fbd, { 0x38 });
        gbc.writeMem(0xc650, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe21f);
        EXPECT(gbc.pc(), 0xc651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc650), 0x2a);
        // 2A 0164
        gbc.setState(0xe4f5, 0x3660, 0x89f0, 0xdb65, 0xe0ed, 0xd3c7, 0x1, 0x0);
        gbc.writeMem(0xd3c7, { 0x6e });
        gbc.writeMem(0xe4f5, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3660);
        EXPECT(gbc.pc(), 0xe4f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3c7), 0x6e);
        EXPECT(gbc.readMem(0xe4f5), 0x2a);
        // 2A 0165
        gbc.setState(0x14, 0xd832, 0x1020, 0x6ed8, 0x4bdb, 0xf72c, 0x0, 0x0);
        gbc.writeMem(0x14, { 0x2a });
        gbc.writeMem(0xf72c, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd832);
        EXPECT(gbc.pc(), 0x15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf72c), 0x36);
        // 2A 0166
        gbc.setState(0x4a57, 0xa415, 0xb7b0, 0x1891, 0xce03, 0xaab9, 0x1, 0x0);
        gbc.writeMem(0x4a57, { 0x2a });
        gbc.writeMem(0xaab9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa415);
        EXPECT(gbc.pc(), 0x4a58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaab9), 0x83);
        // 2A 0168
        gbc.setState(0x9269, 0xd6ba, 0x62e0, 0x195f, 0x9e86, 0xf7b7, 0x0, 0x1);
        gbc.writeMem(0x9269, { 0x2a });
        gbc.writeMem(0xf7b7, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd6ba);
        EXPECT(gbc.pc(), 0x926a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9269), 0x2a);
        EXPECT(gbc.readMem(0xf7b7), 0x5c);
        // 2A 0169
        gbc.setState(0x2d60, 0x93e3, 0x38b0, 0x7f68, 0xe1f2, 0xa6ff, 0x1, 0x1);
        gbc.writeMem(0x2d60, { 0x2a });
        gbc.writeMem(0xa6ff, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x93e3);
        EXPECT(gbc.pc(), 0x2d61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6ff), 0x84);
        // 2A 016A
        gbc.setState(0xe947, 0xbb4e, 0xff0, 0x5acb, 0x832b, 0x3fa7, 0x0, 0x0);
        gbc.writeMem(0x3fa7, { 0x0 });
        gbc.writeMem(0xe947, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xbb4e);
        EXPECT(gbc.pc(), 0xe948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe947), 0x2a);
        // 2A 016B
        gbc.setState(0x9cb3, 0xf0a2, 0xe760, 0x6af8, 0x6510, 0x130, 0x0, 0x1);
        gbc.writeMem(0x130, { 0x7d });
        gbc.writeMem(0x9cb3, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf0a2);
        EXPECT(gbc.pc(), 0x9cb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb3), 0x2a);
        // 2A 016C
        gbc.setState(0x4b8, 0xff55, 0xba50, 0x8187, 0x38c5, 0x9fb8, 0x0, 0x1);
        gbc.writeMem(0x4b8, { 0x2a });
        gbc.writeMem(0x9fb8, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xff55);
        EXPECT(gbc.pc(), 0x4b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fb8), 0x74);
        // 2A 016E
        gbc.setState(0xd7b6, 0xe9ab, 0x9cd0, 0xaad5, 0xfaec, 0x1272, 0x0, 0x1);
        gbc.writeMem(0x1272, { 0x80 });
        gbc.writeMem(0xd7b6, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe9ab);
        EXPECT(gbc.pc(), 0xd7b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7b6), 0x2a);
        // 2A 016F
        gbc.setState(0x7b45, 0x8e6a, 0x5690, 0xce2, 0x5b7c, 0x873b, 0x0, 0x1);
        gbc.writeMem(0x7b45, { 0x2a });
        gbc.writeMem(0x873b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8e6a);
        EXPECT(gbc.pc(), 0x7b46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x873b), 0x95);
        // 2A 0170
        gbc.setState(0xfbb, 0xe7eb, 0xc9e0, 0xe26b, 0x7d47, 0xe439, 0x1, 0x1);
        gbc.writeMem(0xfbb, { 0x2a });
        gbc.writeMem(0xe439, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe7eb);
        EXPECT(gbc.pc(), 0xfbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe439), 0x64);
        // 2A 0171
        gbc.setState(0xc877, 0x307a, 0x7510, 0xd781, 0xd726, 0x33e4, 0x0, 0x0);
        gbc.writeMem(0x33e4, { 0xc9 });
        gbc.writeMem(0xc877, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x307a);
        EXPECT(gbc.pc(), 0xc878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc877), 0x2a);
        // 2A 0172
        gbc.setState(0x968a, 0xc7a2, 0x7c0, 0x669b, 0x8f85, 0x7fca, 0x0, 0x0);
        gbc.writeMem(0x7fca, { 0x14 });
        gbc.writeMem(0x968a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xc7a2);
        EXPECT(gbc.pc(), 0x968b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x968a), 0x2a);
        // 2A 0173
        gbc.setState(0x334, 0x533, 0xc880, 0x1f15, 0xcd5a, 0x84b7, 0x1, 0x0);
        gbc.writeMem(0x334, { 0x2a });
        gbc.writeMem(0x84b7, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x533);
        EXPECT(gbc.pc(), 0x335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84b7), 0x8d);
        // 2A 0174
        gbc.setState(0x77d4, 0xd97, 0x1810, 0x518a, 0xf6e1, 0xb55b, 0x0, 0x1);
        gbc.writeMem(0x77d4, { 0x2a });
        gbc.writeMem(0xb55b, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd97);
        EXPECT(gbc.pc(), 0x77d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb55b), 0x46);
        // 2A 0175
        gbc.setState(0x4831, 0x8b3d, 0x9da0, 0x6834, 0x489c, 0xd82f, 0x1, 0x1);
        gbc.writeMem(0x4831, { 0x2a });
        gbc.writeMem(0xd82f, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8b3d);
        EXPECT(gbc.pc(), 0x4832);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd82f), 0xe8);
        // 2A 0176
        gbc.setState(0xd42c, 0x4fbd, 0x4e10, 0x1b8d, 0xe5c6, 0x94af, 0x1, 0x0);
        gbc.writeMem(0x94af, { 0x3a });
        gbc.writeMem(0xd42c, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x4fbd);
        EXPECT(gbc.pc(), 0xd42d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94af), 0x3a);
        EXPECT(gbc.readMem(0xd42c), 0x2a);
        // 2A 0177
        gbc.setState(0x9fc, 0x6995, 0xfa10, 0xcbcb, 0x2f79, 0x4a7d, 0x0, 0x0);
        gbc.writeMem(0x9fc, { 0x2a });
        gbc.writeMem(0x4a7d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6995);
        EXPECT(gbc.pc(), 0x9fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0178
        gbc.setState(0xe470, 0x9589, 0xc4d0, 0x185d, 0x6bf3, 0x4f76, 0x1, 0x1);
        gbc.writeMem(0x4f76, { 0xba });
        gbc.writeMem(0xe470, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x9589);
        EXPECT(gbc.pc(), 0xe471);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe470), 0x2a);
        // 2A 0179
        gbc.setState(0xc3c, 0x7a78, 0x8d70, 0x7c63, 0x4c31, 0xe040, 0x1, 0x1);
        gbc.writeMem(0xc3c, { 0x2a });
        gbc.writeMem(0xe040, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7a78);
        EXPECT(gbc.pc(), 0xc3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe040), 0x46);
        // 2A 017A
        gbc.setState(0xbb41, 0x575, 0x80, 0x7e93, 0x6363, 0x99f8, 0x0, 0x0);
        gbc.writeMem(0x99f8, { 0x4d });
        gbc.writeMem(0xbb41, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x575);
        EXPECT(gbc.pc(), 0xbb42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99f8), 0x4d);
        EXPECT(gbc.readMem(0xbb41), 0x2a);
        // 2A 017B
        gbc.setState(0x81a8, 0xcf86, 0xeff0, 0x825, 0x7c6, 0x6f0c, 0x0, 0x1);
        gbc.writeMem(0x6f0c, { 0x62 });
        gbc.writeMem(0x81a8, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xcf86);
        EXPECT(gbc.pc(), 0x81a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81a8), 0x2a);
        // 2A 017C
        gbc.setState(0x466a, 0x2d21, 0xa110, 0x705b, 0xf08f, 0xed82, 0x1, 0x0);
        gbc.writeMem(0x466a, { 0x2a });
        gbc.writeMem(0xed82, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2d21);
        EXPECT(gbc.pc(), 0x466b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed82), 0x5f);
        // 2A 017D
        gbc.setState(0x3f5d, 0xdb6b, 0x9690, 0x3267, 0xa798, 0x7005, 0x0, 0x1);
        gbc.writeMem(0x3f5d, { 0x2a });
        gbc.writeMem(0x7005, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xdb6b);
        EXPECT(gbc.pc(), 0x3f5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 017E
        gbc.setState(0x65d7, 0x307f, 0xa300, 0xd03, 0xe470, 0xd33a, 0x1, 0x0);
        gbc.writeMem(0x65d7, { 0x2a });
        gbc.writeMem(0xd33a, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x307f);
        EXPECT(gbc.pc(), 0x65d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd33a), 0xa);
        // 2A 017F
        gbc.setState(0x85e4, 0x930e, 0x8aa0, 0xc862, 0x9fe7, 0x819d, 0x1, 0x1);
        gbc.writeMem(0x819d, { 0xc8 });
        gbc.writeMem(0x85e4, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x930e);
        EXPECT(gbc.pc(), 0x85e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x819d), 0xc8);
        EXPECT(gbc.readMem(0x85e4), 0x2a);
        // 2A 0181
        gbc.setState(0xbc7e, 0x3bb5, 0x86d0, 0x895, 0x5f61, 0x1943, 0x1, 0x0);
        gbc.writeMem(0x1943, { 0xc4 });
        gbc.writeMem(0xbc7e, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3bb5);
        EXPECT(gbc.pc(), 0xbc7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc7e), 0x2a);
        // 2A 0182
        gbc.setState(0x3af9, 0xf6d4, 0x92a0, 0x63c0, 0x50f3, 0xcccd, 0x0, 0x0);
        gbc.writeMem(0x3af9, { 0x2a });
        gbc.writeMem(0xcccd, { 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf6d4);
        EXPECT(gbc.pc(), 0x3afa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcccd), 0x27);
        // 2A 0183
        gbc.setState(0xd4f, 0x557c, 0xd180, 0xe273, 0x772e, 0x8bbf, 0x1, 0x1);
        gbc.writeMem(0xd4f, { 0x2a });
        gbc.writeMem(0x8bbf, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x557c);
        EXPECT(gbc.pc(), 0xd50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bbf), 0x71);
        // 2A 0184
        gbc.setState(0x7c52, 0x3fe6, 0x9500, 0x4cdd, 0x7770, 0xd988, 0x1, 0x0);
        gbc.writeMem(0x7c52, { 0x2a });
        gbc.writeMem(0xd988, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3fe6);
        EXPECT(gbc.pc(), 0x7c53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd988), 0xb6);
        // 2A 0185
        gbc.setState(0x5ad1, 0xb79b, 0x4500, 0x80dd, 0x97e9, 0x314f, 0x0, 0x0);
        gbc.writeMem(0x314f, { 0x54 });
        gbc.writeMem(0x5ad1, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb79b);
        EXPECT(gbc.pc(), 0x5ad2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0186
        gbc.setState(0xcc64, 0x63d, 0xca60, 0x277e, 0xc48b, 0x228d, 0x0, 0x0);
        gbc.writeMem(0x228d, { 0x37 });
        gbc.writeMem(0xcc64, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x63d);
        EXPECT(gbc.pc(), 0xcc65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc64), 0x2a);
        // 2A 0187
        gbc.setState(0x6293, 0xba09, 0x81e0, 0xd2a0, 0x4c02, 0xa91d, 0x0, 0x1);
        gbc.writeMem(0x6293, { 0x2a });
        gbc.writeMem(0xa91d, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xba09);
        EXPECT(gbc.pc(), 0x6294);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa91d), 0x1a);
        // 2A 0188
        gbc.setState(0xdde, 0xdf15, 0x6030, 0x338f, 0x8c5d, 0xf7, 0x0, 0x1);
        gbc.writeMem(0xf7, { 0x74 });
        gbc.writeMem(0xdde, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xdf15);
        EXPECT(gbc.pc(), 0xddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0189
        gbc.setState(0x523e, 0xf1ba, 0x9d70, 0xe6f7, 0x8a19, 0x4eab, 0x1, 0x0);
        gbc.writeMem(0x4eab, { 0xc0 });
        gbc.writeMem(0x523e, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf1ba);
        EXPECT(gbc.pc(), 0x523f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 018A
        gbc.setState(0x7a44, 0x7828, 0xb040, 0xf6aa, 0x30f1, 0xec36, 0x0, 0x1);
        gbc.writeMem(0x7a44, { 0x2a });
        gbc.writeMem(0xec36, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7828);
        EXPECT(gbc.pc(), 0x7a45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec36), 0x68);
        // 2A 018C
        gbc.setState(0x80c, 0x3981, 0x2270, 0xf879, 0xbe4d, 0xddb1, 0x1, 0x0);
        gbc.writeMem(0x80c, { 0x2a });
        gbc.writeMem(0xddb1, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3981);
        EXPECT(gbc.pc(), 0x80d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddb1), 0x5f);
        // 2A 018D
        gbc.setState(0x8c21, 0x882d, 0x2ff0, 0x6605, 0xdee0, 0x8a26, 0x0, 0x0);
        gbc.writeMem(0x8a26, { 0xa2 });
        gbc.writeMem(0x8c21, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x882d);
        EXPECT(gbc.pc(), 0x8c22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a26), 0xa2);
        EXPECT(gbc.readMem(0x8c21), 0x2a);
        // 2A 018E
        gbc.setState(0xcdb2, 0x279a, 0x91d0, 0x2cf5, 0x3e4c, 0xc3b4, 0x0, 0x1);
        gbc.writeMem(0xc3b4, { 0xe3 });
        gbc.writeMem(0xcdb2, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x279a);
        EXPECT(gbc.pc(), 0xcdb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3b4), 0xe3);
        EXPECT(gbc.readMem(0xcdb2), 0x2a);
        // 2A 0190
        gbc.setState(0xbb0e, 0x9209, 0xc3d0, 0x57b7, 0xea67, 0x1dbe, 0x1, 0x0);
        gbc.writeMem(0x1dbe, { 0xb9 });
        gbc.writeMem(0xbb0e, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9209);
        EXPECT(gbc.pc(), 0xbb0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb0e), 0x2a);
        // 2A 0191
        gbc.setState(0x9dc2, 0xf8f1, 0xc830, 0x88f0, 0x9aaf, 0xebd7, 0x0, 0x0);
        gbc.writeMem(0x9dc2, { 0x2a });
        gbc.writeMem(0xebd7, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf8f1);
        EXPECT(gbc.pc(), 0x9dc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dc2), 0x2a);
        EXPECT(gbc.readMem(0xebd7), 0xb5);
        // 2A 0192
        gbc.setState(0x2700, 0x3f45, 0x5790, 0x7953, 0x7d32, 0x47e1, 0x0, 0x1);
        gbc.writeMem(0x2700, { 0x2a });
        gbc.writeMem(0x47e1, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3f45);
        EXPECT(gbc.pc(), 0x2701);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0194
        gbc.setState(0xcb14, 0x5f18, 0xf220, 0xd9e5, 0x804, 0xc434, 0x1, 0x0);
        gbc.writeMem(0xc434, { 0x5b });
        gbc.writeMem(0xcb14, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5f18);
        EXPECT(gbc.pc(), 0xcb15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc434), 0x5b);
        EXPECT(gbc.readMem(0xcb14), 0x2a);
        // 2A 0195
        gbc.setState(0x29e, 0xa814, 0x3fd0, 0xef73, 0x27d9, 0xf342, 0x1, 0x1);
        gbc.writeMem(0x29e, { 0x2a });
        gbc.writeMem(0xf342, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa814);
        EXPECT(gbc.pc(), 0x29f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf342), 0x21);
        // 2A 0196
        gbc.setState(0x9180, 0xccdd, 0xe910, 0xdd7c, 0xc695, 0xd733, 0x0, 0x0);
        gbc.writeMem(0x9180, { 0x2a });
        gbc.writeMem(0xd733, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xccdd);
        EXPECT(gbc.pc(), 0x9181);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9180), 0x2a);
        EXPECT(gbc.readMem(0xd733), 0xf9);
        // 2A 0197
        gbc.setState(0x793a, 0x4b10, 0x8ba0, 0x9b54, 0xd1fc, 0x1f1d, 0x1, 0x1);
        gbc.writeMem(0x1f1d, { 0xc4 });
        gbc.writeMem(0x793a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x4b10);
        EXPECT(gbc.pc(), 0x793b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 0198
        gbc.setState(0x2a27, 0xc680, 0xddc0, 0x772f, 0xede4, 0x1a81, 0x0, 0x1);
        gbc.writeMem(0x1a81, { 0x36 });
        gbc.writeMem(0x2a27, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc680);
        EXPECT(gbc.pc(), 0x2a28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0199
        gbc.setState(0xe93b, 0x80c2, 0x780, 0x4c23, 0xc4a1, 0xaf7f, 0x0, 0x1);
        gbc.writeMem(0xaf7f, { 0xf1 });
        gbc.writeMem(0xe93b, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x80c2);
        EXPECT(gbc.pc(), 0xe93c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf7f), 0xf1);
        EXPECT(gbc.readMem(0xe93b), 0x2a);
        // 2A 019A
        gbc.setState(0xeaf1, 0xcafa, 0xff20, 0x488b, 0x8e19, 0xc765, 0x0, 0x0);
        gbc.writeMem(0xc765, { 0xf5 });
        gbc.writeMem(0xeaf1, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xcafa);
        EXPECT(gbc.pc(), 0xeaf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc765), 0xf5);
        EXPECT(gbc.readMem(0xeaf1), 0x2a);
        // 2A 019B
        gbc.setState(0x27ed, 0x33d8, 0x41e0, 0x886e, 0xf625, 0x5353, 0x0, 0x1);
        gbc.writeMem(0x27ed, { 0x2a });
        gbc.writeMem(0x5353, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x33d8);
        EXPECT(gbc.pc(), 0x27ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 019C
        gbc.setState(0x21c5, 0x38fb, 0xc690, 0x1ab8, 0x9ba8, 0x474d, 0x0, 0x1);
        gbc.writeMem(0x21c5, { 0x2a });
        gbc.writeMem(0x474d, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x38fb);
        EXPECT(gbc.pc(), 0x21c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 019D
        gbc.setState(0x651, 0xaaf1, 0xf1b0, 0xd6f1, 0xa0e5, 0xa8a9, 0x0, 0x1);
        gbc.writeMem(0x651, { 0x2a });
        gbc.writeMem(0xa8a9, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xaaf1);
        EXPECT(gbc.pc(), 0x652);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8a9), 0x2f);
        // 2A 019E
        gbc.setState(0x59b3, 0x9b5f, 0xff70, 0x2c54, 0x7088, 0xd981, 0x1, 0x0);
        gbc.writeMem(0x59b3, { 0x2a });
        gbc.writeMem(0xd981, { 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9b5f);
        EXPECT(gbc.pc(), 0x59b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd981), 0xe);
        // 2A 019F
        gbc.setState(0xa484, 0x9c07, 0x4370, 0xf95a, 0x9ac2, 0x9b07, 0x1, 0x1);
        gbc.writeMem(0x9b07, { 0xe3 });
        gbc.writeMem(0xa484, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x9c07);
        EXPECT(gbc.pc(), 0xa485);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b07), 0xe3);
        EXPECT(gbc.readMem(0xa484), 0x2a);
        // 2A 01A0
        gbc.setState(0xe30d, 0x7346, 0xf530, 0x53bb, 0xa9aa, 0xa050, 0x0, 0x0);
        gbc.writeMem(0xa050, { 0x64 });
        gbc.writeMem(0xe30d, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7346);
        EXPECT(gbc.pc(), 0xe30e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa050), 0x64);
        EXPECT(gbc.readMem(0xe30d), 0x2a);
        // 2A 01A1
        gbc.setState(0x24df, 0xc2a7, 0xd200, 0xbeba, 0x6401, 0xfd13, 0x0, 0x0);
        gbc.writeMem(0x24df, { 0x2a });
        gbc.writeMem(0xfd13, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc2a7);
        EXPECT(gbc.pc(), 0x24e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfd13), 0x44);
        // 2A 01A2
        gbc.setState(0xb5ed, 0x303e, 0x2b60, 0xe3f6, 0x5f99, 0x3757, 0x1, 0x1);
        gbc.writeMem(0x3757, { 0xfb });
        gbc.writeMem(0xb5ed, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x303e);
        EXPECT(gbc.pc(), 0xb5ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5ed), 0x2a);
        // 2A 01A3
        gbc.setState(0x75d8, 0x3490, 0x10a0, 0x575e, 0xa45b, 0xfeee, 0x0, 0x1);
        gbc.writeMem(0x75d8, { 0x2a });
        gbc.writeMem(0xfeee, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x3490);
        EXPECT(gbc.pc(), 0x75d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfeee), 0x65);
        // 2A 01A4
        gbc.setState(0xca79, 0x3550, 0x89e0, 0x4472, 0x9cd1, 0x8e13, 0x1, 0x1);
        gbc.writeMem(0x8e13, { 0x38 });
        gbc.writeMem(0xca79, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x3550);
        EXPECT(gbc.pc(), 0xca7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e13), 0x38);
        EXPECT(gbc.readMem(0xca79), 0x2a);
        // 2A 01A6
        gbc.setState(0x49c1, 0x293d, 0x7db0, 0x441, 0xcda0, 0x45c7, 0x0, 0x1);
        gbc.writeMem(0x45c7, { 0xd });
        gbc.writeMem(0x49c1, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x293d);
        EXPECT(gbc.pc(), 0x49c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 01A7
        gbc.setState(0x94ed, 0xd21, 0x53e0, 0x50fe, 0x2c48, 0xa1d3, 0x0, 0x1);
        gbc.writeMem(0x94ed, { 0x2a });
        gbc.writeMem(0xa1d3, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd21);
        EXPECT(gbc.pc(), 0x94ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94ed), 0x2a);
        EXPECT(gbc.readMem(0xa1d3), 0xaa);
        // 2A 01A8
        gbc.setState(0xd85e, 0x347d, 0x9870, 0xb5e5, 0x1b19, 0xad2c, 0x0, 0x0);
        gbc.writeMem(0xad2c, { 0x9f });
        gbc.writeMem(0xd85e, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x347d);
        EXPECT(gbc.pc(), 0xd85f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad2c), 0x9f);
        EXPECT(gbc.readMem(0xd85e), 0x2a);
        // 2A 01A9
        gbc.setState(0x51ff, 0xb552, 0x3b70, 0xb95e, 0x267f, 0x7bc4, 0x0, 0x1);
        gbc.writeMem(0x51ff, { 0x2a });
        gbc.writeMem(0x7bc4, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb552);
        EXPECT(gbc.pc(), 0x5200);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 01AA
        gbc.setState(0x88eb, 0xa20f, 0xcf70, 0xc412, 0x1962, 0xe3c7, 0x1, 0x1);
        gbc.writeMem(0x88eb, { 0x2a });
        gbc.writeMem(0xe3c7, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa20f);
        EXPECT(gbc.pc(), 0x88ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88eb), 0x2a);
        EXPECT(gbc.readMem(0xe3c7), 0x91);
        // 2A 01AB
        gbc.setState(0xc314, 0xe18f, 0x4b80, 0x1260, 0x297b, 0xe8f8, 0x0, 0x0);
        gbc.writeMem(0xc314, { 0x2a });
        gbc.writeMem(0xe8f8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe18f);
        EXPECT(gbc.pc(), 0xc315);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc314), 0x2a);
        EXPECT(gbc.readMem(0xe8f8), 0x0);
        // 2A 01AC
        gbc.setState(0x6e68, 0x239, 0xd820, 0x8ec6, 0x1a0b, 0x4c4a, 0x1, 0x1);
        gbc.writeMem(0x4c4a, { 0x8f });
        gbc.writeMem(0x6e68, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x239);
        EXPECT(gbc.pc(), 0x6e69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 01AD
        gbc.setState(0xb7a5, 0xab69, 0xecb0, 0xf6f5, 0xa62c, 0x320c, 0x0, 0x0);
        gbc.writeMem(0x320c, { 0x54 });
        gbc.writeMem(0xb7a5, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xab69);
        EXPECT(gbc.pc(), 0xb7a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7a5), 0x2a);
        // 2A 01AE
        gbc.setState(0xe4c0, 0x1128, 0xcc30, 0xc372, 0xeec4, 0x6ace, 0x1, 0x1);
        gbc.writeMem(0x6ace, { 0x62 });
        gbc.writeMem(0xe4c0, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1128);
        EXPECT(gbc.pc(), 0xe4c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4c0), 0x2a);
        // 2A 01AF
        gbc.setState(0x58f1, 0x627f, 0xcf70, 0xc5ee, 0x5a8d, 0xd9bb, 0x0, 0x0);
        gbc.writeMem(0x58f1, { 0x2a });
        gbc.writeMem(0xd9bb, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x627f);
        EXPECT(gbc.pc(), 0x58f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9bb), 0x5f);
        // 2A 01B0
        gbc.setState(0x7be0, 0xf48b, 0x4c30, 0x43b, 0xdd84, 0xf36a, 0x1, 0x1);
        gbc.writeMem(0x7be0, { 0x2a });
        gbc.writeMem(0xf36a, { 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf48b);
        EXPECT(gbc.pc(), 0x7be1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf36a), 0x6a);
        // 2A 01B1
        gbc.setState(0x2a5a, 0x42c8, 0xd1d0, 0xeb4c, 0x7234, 0x2250, 0x0, 0x0);
        gbc.writeMem(0x2250, { 0x3c });
        gbc.writeMem(0x2a5a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x42c8);
        EXPECT(gbc.pc(), 0x2a5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 01B2
        gbc.setState(0x991b, 0x2f75, 0x7fd0, 0x2ea1, 0x7603, 0x7b4d, 0x1, 0x0);
        gbc.writeMem(0x7b4d, { 0x58 });
        gbc.writeMem(0x991b, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2f75);
        EXPECT(gbc.pc(), 0x991c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x991b), 0x2a);
        // 2A 01B3
        gbc.setState(0xc9c1, 0xbd3b, 0x8a20, 0x4781, 0x9012, 0x8e92, 0x0, 0x1);
        gbc.writeMem(0x8e92, { 0x1d });
        gbc.writeMem(0xc9c1, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xbd3b);
        EXPECT(gbc.pc(), 0xc9c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e92), 0x1d);
        EXPECT(gbc.readMem(0xc9c1), 0x2a);
        // 2A 01B4
        gbc.setState(0x2834, 0x306, 0xbe0, 0xded8, 0x3e09, 0x6857, 0x1, 0x1);
        gbc.writeMem(0x2834, { 0x2a });
        gbc.writeMem(0x6857, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x306);
        EXPECT(gbc.pc(), 0x2835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 01B5
        gbc.setState(0xb2b, 0x94fd, 0x6210, 0x1f61, 0x414d, 0x68d8, 0x0, 0x1);
        gbc.writeMem(0xb2b, { 0x2a });
        gbc.writeMem(0x68d8, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x94fd);
        EXPECT(gbc.pc(), 0xb2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 01B6
        gbc.setState(0x269, 0x9f66, 0xfd90, 0x5897, 0x555b, 0x77f7, 0x0, 0x0);
        gbc.writeMem(0x269, { 0x2a });
        gbc.writeMem(0x77f7, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x9f66);
        EXPECT(gbc.pc(), 0x26a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 01B7
        gbc.setState(0x8cdf, 0x4bc1, 0x76a0, 0xce49, 0x9c37, 0x18bc, 0x0, 0x0);
        gbc.writeMem(0x18bc, { 0xf5 });
        gbc.writeMem(0x8cdf, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x4bc1);
        EXPECT(gbc.pc(), 0x8ce0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cdf), 0x2a);
        // 2A 01B8
        gbc.setState(0xcaf, 0x3403, 0x9940, 0xa780, 0x7677, 0xb9e1, 0x0, 0x1);
        gbc.writeMem(0xcaf, { 0x2a });
        gbc.writeMem(0xb9e1, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3403);
        EXPECT(gbc.pc(), 0xcb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9e1), 0x17);
        // 2A 01B9
        gbc.setState(0xe43a, 0xafe6, 0x3f30, 0x9d41, 0x66e9, 0xd13c, 0x0, 0x1);
        gbc.writeMem(0xd13c, { 0xcd });
        gbc.writeMem(0xe43a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xafe6);
        EXPECT(gbc.pc(), 0xe43b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd13c), 0xcd);
        EXPECT(gbc.readMem(0xe43a), 0x2a);
        // 2A 01BA
        gbc.setState(0xd2fb, 0x6e9f, 0xfcb0, 0x277c, 0x555d, 0x799f, 0x1, 0x1);
        gbc.writeMem(0x799f, { 0xab });
        gbc.writeMem(0xd2fb, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x6e9f);
        EXPECT(gbc.pc(), 0xd2fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2fb), 0x2a);
        // 2A 01BB
        gbc.setState(0xcdd5, 0xe580, 0x1ea0, 0x481f, 0xdd40, 0xe6a1, 0x1, 0x0);
        gbc.writeMem(0xcdd5, { 0x2a });
        gbc.writeMem(0xe6a1, { 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe580);
        EXPECT(gbc.pc(), 0xcdd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdd5), 0x2a);
        EXPECT(gbc.readMem(0xe6a1), 0xdb);
        // 2A 01BC
        gbc.setState(0x573e, 0x5da2, 0xc410, 0x53d0, 0x906a, 0x9da7, 0x1, 0x1);
        gbc.writeMem(0x573e, { 0x2a });
        gbc.writeMem(0x9da7, { 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5da2);
        EXPECT(gbc.pc(), 0x573f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9da7), 0x43);
        // 2A 01BD
        gbc.setState(0xec2d, 0x4a5c, 0x9420, 0x86cc, 0x17ff, 0x2a8, 0x0, 0x1);
        gbc.writeMem(0x2a8, { 0x9c });
        gbc.writeMem(0xec2d, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4a5c);
        EXPECT(gbc.pc(), 0xec2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec2d), 0x2a);
        // 2A 01BE
        gbc.setState(0x3a39, 0xf302, 0x1210, 0xc2b2, 0xf744, 0x637c, 0x1, 0x1);
        gbc.writeMem(0x3a39, { 0x2a });
        gbc.writeMem(0x637c, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf302);
        EXPECT(gbc.pc(), 0x3a3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 01BF
        gbc.setState(0xbf2d, 0x1e2e, 0x69c0, 0x809f, 0xd060, 0xb2f6, 0x1, 0x0);
        gbc.writeMem(0xb2f6, { 0x3a });
        gbc.writeMem(0xbf2d, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1e2e);
        EXPECT(gbc.pc(), 0xbf2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2f6), 0x3a);
        EXPECT(gbc.readMem(0xbf2d), 0x2a);
        // 2A 01C0
        gbc.setState(0x36b7, 0xb606, 0x6160, 0x4b81, 0xc777, 0x9f, 0x0, 0x1);
        gbc.writeMem(0x9f, { 0xcb });
        gbc.writeMem(0x36b7, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb606);
        EXPECT(gbc.pc(), 0x36b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 01C1
        gbc.setState(0xd2d, 0x9d68, 0x9c40, 0xf2a3, 0x6635, 0x9f69, 0x0, 0x0);
        gbc.writeMem(0xd2d, { 0x2a });
        gbc.writeMem(0x9f69, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x9d68);
        EXPECT(gbc.pc(), 0xd2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f69), 0xea);
        // 2A 01C2
        gbc.setState(0xa27c, 0x64d7, 0x140, 0x3234, 0x4020, 0xdf6d, 0x0, 0x1);
        gbc.writeMem(0xa27c, { 0x2a });
        gbc.writeMem(0xdf6d, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x64d7);
        EXPECT(gbc.pc(), 0xa27d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa27c), 0x2a);
        EXPECT(gbc.readMem(0xdf6d), 0x88);
        // 2A 01C3
        gbc.setState(0xb4b3, 0xf835, 0xe8d0, 0x4333, 0x6749, 0x4cec, 0x0, 0x1);
        gbc.writeMem(0x4cec, { 0xa0 });
        gbc.writeMem(0xb4b3, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf835);
        EXPECT(gbc.pc(), 0xb4b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4b3), 0x2a);
        // 2A 01C4
        gbc.setState(0x9030, 0x2a69, 0xfbd0, 0x3171, 0xa491, 0xcc15, 0x1, 0x0);
        gbc.writeMem(0x9030, { 0x2a });
        gbc.writeMem(0xcc15, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2a69);
        EXPECT(gbc.pc(), 0x9031);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9030), 0x2a);
        EXPECT(gbc.readMem(0xcc15), 0x67);
        // 2A 01C6
        gbc.setState(0xc14d, 0xab07, 0x53f0, 0x6d39, 0xea39, 0xe417, 0x0, 0x1);
        gbc.writeMem(0xc14d, { 0x2a });
        gbc.writeMem(0xe417, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xab07);
        EXPECT(gbc.pc(), 0xc14e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc14d), 0x2a);
        EXPECT(gbc.readMem(0xe417), 0x24);
        // 2A 01C7
        gbc.setState(0xa762, 0xbb72, 0xf3c0, 0x9146, 0x6c9f, 0x97a1, 0x0, 0x0);
        gbc.writeMem(0x97a1, { 0x0 });
        gbc.writeMem(0xa762, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xbb72);
        EXPECT(gbc.pc(), 0xa763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97a1), 0x0);
        EXPECT(gbc.readMem(0xa762), 0x2a);
        // 2A 01C8
        gbc.setState(0x285a, 0x5022, 0xdda0, 0x2a90, 0x1591, 0x4f1, 0x0, 0x0);
        gbc.writeMem(0x4f1, { 0x1a });
        gbc.writeMem(0x285a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5022);
        EXPECT(gbc.pc(), 0x285b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 01C9
        gbc.setState(0xa52c, 0xb68, 0x50a0, 0xb1b, 0xf5d2, 0x6e9f, 0x1, 0x1);
        gbc.writeMem(0x6e9f, { 0x87 });
        gbc.writeMem(0xa52c, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb68);
        EXPECT(gbc.pc(), 0xa52d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa52c), 0x2a);
        // 2A 01CA
        gbc.setState(0x44cb, 0xc73b, 0xbad0, 0x8ff4, 0xf894, 0xa303, 0x0, 0x1);
        gbc.writeMem(0x44cb, { 0x2a });
        gbc.writeMem(0xa303, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xc73b);
        EXPECT(gbc.pc(), 0x44cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa303), 0x2b);
        // 2A 01CB
        gbc.setState(0x3e02, 0x548b, 0x6ec0, 0xf5b1, 0xeeb0, 0x2182, 0x1, 0x0);
        gbc.writeMem(0x2182, { 0x8 });
        gbc.writeMem(0x3e02, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x548b);
        EXPECT(gbc.pc(), 0x3e03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 01CC
        gbc.setState(0x153f, 0x9725, 0x9a20, 0xd806, 0x9bdd, 0xf387, 0x1, 0x1);
        gbc.writeMem(0x153f, { 0x2a });
        gbc.writeMem(0xf387, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9725);
        EXPECT(gbc.pc(), 0x1540);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf387), 0x83);
        // 2A 01CD
        gbc.setState(0xc7b1, 0x3b20, 0xc950, 0x26be, 0xc2a, 0xee9b, 0x1, 0x1);
        gbc.writeMem(0xc7b1, { 0x2a });
        gbc.writeMem(0xee9b, { 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3b20);
        EXPECT(gbc.pc(), 0xc7b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7b1), 0x2a);
        EXPECT(gbc.readMem(0xee9b), 0xc7);
        // 2A 01CF
        gbc.setState(0xab05, 0xc601, 0x7c20, 0xddc4, 0x9b09, 0x6281, 0x0, 0x1);
        gbc.writeMem(0x6281, { 0x24 });
        gbc.writeMem(0xab05, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc601);
        EXPECT(gbc.pc(), 0xab06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab05), 0x2a);
        // 2A 01D0
        gbc.setState(0x534, 0xce70, 0x62b0, 0x109a, 0xd2a5, 0x4e04, 0x0, 0x0);
        gbc.writeMem(0x534, { 0x2a });
        gbc.writeMem(0x4e04, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xce70);
        EXPECT(gbc.pc(), 0x535);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 01D1
        gbc.setState(0x66ca, 0xea77, 0xb600, 0xd5e0, 0xd706, 0xb950, 0x0, 0x0);
        gbc.writeMem(0x66ca, { 0x2a });
        gbc.writeMem(0xb950, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xea77);
        EXPECT(gbc.pc(), 0x66cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb950), 0xbe);
        // 2A 01D2
        gbc.setState(0x64b4, 0x85a0, 0xfef0, 0x35a6, 0xc03e, 0x1d83, 0x1, 0x0);
        gbc.writeMem(0x1d83, { 0xdb });
        gbc.writeMem(0x64b4, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x85a0);
        EXPECT(gbc.pc(), 0x64b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 01D3
        gbc.setState(0xb47f, 0xd11, 0x8120, 0x9606, 0xa2bb, 0x9037, 0x1, 0x1);
        gbc.writeMem(0x9037, { 0xe });
        gbc.writeMem(0xb47f, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xd11);
        EXPECT(gbc.pc(), 0xb480);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9037), 0xe);
        EXPECT(gbc.readMem(0xb47f), 0x2a);
        // 2A 01D4
        gbc.setState(0xac07, 0xc620, 0xc8c0, 0xc29e, 0x2043, 0x619d, 0x1, 0x0);
        gbc.writeMem(0x619d, { 0x1 });
        gbc.writeMem(0xac07, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc620);
        EXPECT(gbc.pc(), 0xac08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac07), 0x2a);
        // 2A 01D5
        gbc.setState(0x6399, 0x13a, 0xbfa0, 0x464, 0x34ae, 0xde9d, 0x1, 0x1);
        gbc.writeMem(0x6399, { 0x2a });
        gbc.writeMem(0xde9d, { 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x13a);
        EXPECT(gbc.pc(), 0x639a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde9d), 0xc4);
        // 2A 01D6
        gbc.setState(0x596e, 0xbff2, 0xcb30, 0x9572, 0xb353, 0xb0cb, 0x0, 0x0);
        gbc.writeMem(0x596e, { 0x2a });
        gbc.writeMem(0xb0cb, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xbff2);
        EXPECT(gbc.pc(), 0x596f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0cb), 0x38);
        // 2A 01D7
        gbc.setState(0xacc0, 0xcc21, 0x64e0, 0xfdb, 0xe4b1, 0x4ecd, 0x0, 0x0);
        gbc.writeMem(0x4ecd, { 0x26 });
        gbc.writeMem(0xacc0, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xcc21);
        EXPECT(gbc.pc(), 0xacc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacc0), 0x2a);
        // 2A 01D9
        gbc.setState(0x517, 0xdfd3, 0x6390, 0x7d67, 0xe72c, 0xb2db, 0x0, 0x1);
        gbc.writeMem(0x517, { 0x2a });
        gbc.writeMem(0xb2db, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xdfd3);
        EXPECT(gbc.pc(), 0x518);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2db), 0xbb);
        // 2A 01DA
        gbc.setState(0x3994, 0xf77f, 0x66c0, 0x2375, 0xc638, 0x3fb7, 0x0, 0x1);
        gbc.writeMem(0x3994, { 0x2a });
        gbc.writeMem(0x3fb7, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf77f);
        EXPECT(gbc.pc(), 0x3995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 01DB
        gbc.setState(0x9ddf, 0x484c, 0x8370, 0x9f01, 0x2fa8, 0xef50, 0x1, 0x1);
        gbc.writeMem(0x9ddf, { 0x2a });
        gbc.writeMem(0xef50, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x484c);
        EXPECT(gbc.pc(), 0x9de0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ddf), 0x2a);
        EXPECT(gbc.readMem(0xef50), 0x8f);
        // 2A 01DC
        gbc.setState(0xe22a, 0x3466, 0xd740, 0x52ca, 0x65bf, 0xfbb4, 0x1, 0x1);
        gbc.writeMem(0xe22a, { 0x2a });
        gbc.writeMem(0xfbb4, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x3466);
        EXPECT(gbc.pc(), 0xe22b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe22a), 0x2a);
        EXPECT(gbc.readMem(0xfbb4), 0xe1);
        // 2A 01DD
        gbc.setState(0x89ad, 0x9f1c, 0x7900, 0x6b3, 0x3b40, 0x88d9, 0x0, 0x0);
        gbc.writeMem(0x88d9, { 0x7d });
        gbc.writeMem(0x89ad, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9f1c);
        EXPECT(gbc.pc(), 0x89ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88d9), 0x7d);
        EXPECT(gbc.readMem(0x89ad), 0x2a);
        // 2A 01DE
        gbc.setState(0xdaae, 0xec78, 0x9ff0, 0x1ab5, 0xa2a2, 0x8a45, 0x0, 0x0);
        gbc.writeMem(0x8a45, { 0x23 });
        gbc.writeMem(0xdaae, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xec78);
        EXPECT(gbc.pc(), 0xdaaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a45), 0x23);
        EXPECT(gbc.readMem(0xdaae), 0x2a);
        // 2A 01DF
        gbc.setState(0x227d, 0x2efa, 0x3860, 0x922a, 0xb186, 0x4f04, 0x1, 0x1);
        gbc.writeMem(0x227d, { 0x2a });
        gbc.writeMem(0x4f04, { 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2efa);
        EXPECT(gbc.pc(), 0x227e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 01E1
        gbc.setState(0x2247, 0x919, 0x5d60, 0x8b23, 0xb6df, 0xa353, 0x0, 0x1);
        gbc.writeMem(0x2247, { 0x2a });
        gbc.writeMem(0xa353, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x919);
        EXPECT(gbc.pc(), 0x2248);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa353), 0xe8);
        // 2A 01E2
        gbc.setState(0x77d2, 0x9099, 0x8b20, 0x51fe, 0x93c3, 0x4fe7, 0x0, 0x0);
        gbc.writeMem(0x4fe7, { 0x45 });
        gbc.writeMem(0x77d2, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x9099);
        EXPECT(gbc.pc(), 0x77d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 01E3
        gbc.setState(0xb704, 0x5908, 0xf6a0, 0x55a3, 0xbd9e, 0xb3e6, 0x0, 0x1);
        gbc.writeMem(0xb3e6, { 0x58 });
        gbc.writeMem(0xb704, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5908);
        EXPECT(gbc.pc(), 0xb705);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3e6), 0x58);
        EXPECT(gbc.readMem(0xb704), 0x2a);
        // 2A 01E4
        gbc.setState(0xd752, 0x646b, 0x38e0, 0x4f88, 0x1280, 0xd517, 0x0, 0x0);
        gbc.writeMem(0xd517, { 0xc3 });
        gbc.writeMem(0xd752, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x646b);
        EXPECT(gbc.pc(), 0xd753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd517), 0xc3);
        EXPECT(gbc.readMem(0xd752), 0x2a);
        // 2A 01E5
        gbc.setState(0x21ac, 0x64bd, 0x71e0, 0x2bed, 0x3e80, 0x5448, 0x0, 0x0);
        gbc.writeMem(0x21ac, { 0x2a });
        gbc.writeMem(0x5448, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x64bd);
        EXPECT(gbc.pc(), 0x21ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 01E6
        gbc.setState(0xae45, 0x5e66, 0x4de0, 0xa449, 0xe222, 0x39a, 0x1, 0x1);
        gbc.writeMem(0x39a, { 0x5f });
        gbc.writeMem(0xae45, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5e66);
        EXPECT(gbc.pc(), 0xae46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae45), 0x2a);
        // 2A 01E7
        gbc.setState(0x9aaa, 0x3da3, 0x4790, 0x7d2a, 0x5435, 0xc1ec, 0x1, 0x1);
        gbc.writeMem(0x9aaa, { 0x2a });
        gbc.writeMem(0xc1ec, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3da3);
        EXPECT(gbc.pc(), 0x9aab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aaa), 0x2a);
        EXPECT(gbc.readMem(0xc1ec), 0xb);
        // 2A 01E8
        gbc.setState(0xb447, 0x236a, 0xca10, 0x8d81, 0x424a, 0x8ed0, 0x0, 0x1);
        gbc.writeMem(0x8ed0, { 0x8 });
        gbc.writeMem(0xb447, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x236a);
        EXPECT(gbc.pc(), 0xb448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ed0), 0x8);
        EXPECT(gbc.readMem(0xb447), 0x2a);
        // 2A 01E9
        gbc.setState(0x2039, 0xeae3, 0x6d50, 0x9439, 0x3617, 0x7da9, 0x1, 0x0);
        gbc.writeMem(0x2039, { 0x2a });
        gbc.writeMem(0x7da9, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xeae3);
        EXPECT(gbc.pc(), 0x203a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 01EA
        gbc.setState(0x74a, 0x871, 0xfdd0, 0xaaec, 0xec2a, 0x8c49, 0x1, 0x0);
        gbc.writeMem(0x74a, { 0x2a });
        gbc.writeMem(0x8c49, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x871);
        EXPECT(gbc.pc(), 0x74b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c49), 0x86);
        // 2A 01EC
        gbc.setState(0x6a76, 0x9e5f, 0x9ed0, 0xb1bc, 0x9241, 0xb9bb, 0x0, 0x1);
        gbc.writeMem(0x6a76, { 0x2a });
        gbc.writeMem(0xb9bb, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9e5f);
        EXPECT(gbc.pc(), 0x6a77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9bb), 0x46);
        // 2A 01ED
        gbc.setState(0x6a7, 0x3bda, 0x710, 0x4190, 0x45ac, 0xbb20, 0x0, 0x1);
        gbc.writeMem(0x6a7, { 0x2a });
        gbc.writeMem(0xbb20, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3bda);
        EXPECT(gbc.pc(), 0x6a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb20), 0x48);
        // 2A 01EE
        gbc.setState(0x56e7, 0x1113, 0xead0, 0x4683, 0x346, 0x24f4, 0x0, 0x0);
        gbc.writeMem(0x24f4, { 0xb7 });
        gbc.writeMem(0x56e7, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1113);
        EXPECT(gbc.pc(), 0x56e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 01EF
        gbc.setState(0x3192, 0x1db5, 0xe760, 0xe284, 0x7a3e, 0x2335, 0x1, 0x0);
        gbc.writeMem(0x2335, { 0xf4 });
        gbc.writeMem(0x3192, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x1db5);
        EXPECT(gbc.pc(), 0x3193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 01F0
        gbc.setState(0x72d2, 0x4c8, 0x7750, 0xc57a, 0xe395, 0x420e, 0x0, 0x1);
        gbc.writeMem(0x420e, { 0x1a });
        gbc.writeMem(0x72d2, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x4c8);
        EXPECT(gbc.pc(), 0x72d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 01F1
        gbc.setState(0x18a6, 0x6ef8, 0x17c0, 0x803f, 0xc309, 0x5bba, 0x1, 0x0);
        gbc.writeMem(0x18a6, { 0x2a });
        gbc.writeMem(0x5bba, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6ef8);
        EXPECT(gbc.pc(), 0x18a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 01F2
        gbc.setState(0x324c, 0x5b95, 0xea40, 0x1ae9, 0xf983, 0xed5e, 0x0, 0x0);
        gbc.writeMem(0x324c, { 0x2a });
        gbc.writeMem(0xed5e, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x5b95);
        EXPECT(gbc.pc(), 0x324d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed5e), 0x7a);
        // 2A 01F3
        gbc.setState(0x54ca, 0xddb9, 0x48e0, 0xded4, 0x2378, 0xb0a5, 0x0, 0x0);
        gbc.writeMem(0x54ca, { 0x2a });
        gbc.writeMem(0xb0a5, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xddb9);
        EXPECT(gbc.pc(), 0x54cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0a5), 0xc0);
        // 2A 01F5
        gbc.setState(0x88e9, 0x6605, 0x15d0, 0xe884, 0x29c1, 0xb54a, 0x0, 0x0);
        gbc.writeMem(0x88e9, { 0x2a });
        gbc.writeMem(0xb54a, { 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6605);
        EXPECT(gbc.pc(), 0x88ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88e9), 0x2a);
        EXPECT(gbc.readMem(0xb54a), 0xcc);
        // 2A 01F6
        gbc.setState(0x4a51, 0xd9ac, 0x5460, 0xe23c, 0x5245, 0x2bc5, 0x0, 0x1);
        gbc.writeMem(0x2bc5, { 0x11 });
        gbc.writeMem(0x4a51, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd9ac);
        EXPECT(gbc.pc(), 0x4a52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 01F7
        gbc.setState(0xc76c, 0x8c29, 0xfe40, 0xa1d3, 0x2050, 0xb148, 0x1, 0x0);
        gbc.writeMem(0xb148, { 0x83 });
        gbc.writeMem(0xc76c, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8c29);
        EXPECT(gbc.pc(), 0xc76d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb148), 0x83);
        EXPECT(gbc.readMem(0xc76c), 0x2a);
        // 2A 01F8
        gbc.setState(0xc7cc, 0x4e16, 0xca70, 0x99b, 0x479f, 0x43a2, 0x1, 0x1);
        gbc.writeMem(0x43a2, { 0x19 });
        gbc.writeMem(0xc7cc, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4e16);
        EXPECT(gbc.pc(), 0xc7cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7cc), 0x2a);
        // 2A 01F9
        gbc.setState(0xd51, 0xe64, 0x1090, 0x3da9, 0xe0f8, 0x8a30, 0x1, 0x0);
        gbc.writeMem(0xd51, { 0x2a });
        gbc.writeMem(0x8a30, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe64);
        EXPECT(gbc.pc(), 0xd52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a30), 0xba);
        // 2A 01FA
        gbc.setState(0x7be, 0xd205, 0xc370, 0xbecf, 0x6e9c, 0xb929, 0x1, 0x1);
        gbc.writeMem(0x7be, { 0x2a });
        gbc.writeMem(0xb929, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd205);
        EXPECT(gbc.pc(), 0x7bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb929), 0x8e);
        // 2A 01FB
        gbc.setState(0x4deb, 0x307c, 0xf300, 0xb1da, 0xf5d1, 0x9874, 0x1, 0x0);
        gbc.writeMem(0x4deb, { 0x2a });
        gbc.writeMem(0x9874, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x307c);
        EXPECT(gbc.pc(), 0x4dec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9874), 0x92);
        // 2A 01FC
        gbc.setState(0x1b12, 0xdb72, 0x2100, 0xc245, 0x4834, 0xb1da, 0x1, 0x0);
        gbc.writeMem(0x1b12, { 0x2a });
        gbc.writeMem(0xb1da, { 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xdb72);
        EXPECT(gbc.pc(), 0x1b13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1da), 0xd4);
        // 2A 01FD
        gbc.setState(0x14b7, 0x8abb, 0xcb00, 0xc3e4, 0x8e13, 0x22b3, 0x1, 0x1);
        gbc.writeMem(0x14b7, { 0x2a });
        gbc.writeMem(0x22b3, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8abb);
        EXPECT(gbc.pc(), 0x14b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 01FE
        gbc.setState(0xc27c, 0x4b6, 0x12a0, 0xe19e, 0x36f, 0x4848, 0x1, 0x1);
        gbc.writeMem(0x4848, { 0x81 });
        gbc.writeMem(0xc27c, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4b6);
        EXPECT(gbc.pc(), 0xc27d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc27c), 0x2a);
        // 2A 01FF
        gbc.setState(0xd95e, 0xbb40, 0x2fa0, 0x76c3, 0x6f53, 0x1016, 0x0, 0x0);
        gbc.writeMem(0x1016, { 0x2d });
        gbc.writeMem(0xd95e, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xbb40);
        EXPECT(gbc.pc(), 0xd95f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd95e), 0x2a);
        // 2A 0200
        gbc.setState(0x31ae, 0x5459, 0x9250, 0x4009, 0x9468, 0xc1ba, 0x0, 0x0);
        gbc.writeMem(0x31ae, { 0x2a });
        gbc.writeMem(0xc1ba, { 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5459);
        EXPECT(gbc.pc(), 0x31af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1ba), 0x76);
        // 2A 0201
        gbc.setState(0x2506, 0x204, 0xf1a0, 0x12d3, 0x3cbd, 0x6725, 0x1, 0x1);
        gbc.writeMem(0x2506, { 0x2a });
        gbc.writeMem(0x6725, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x204);
        EXPECT(gbc.pc(), 0x2507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 0202
        gbc.setState(0x8b90, 0x898e, 0xd4d0, 0x456c, 0x12c1, 0xba97, 0x1, 0x1);
        gbc.writeMem(0x8b90, { 0x2a });
        gbc.writeMem(0xba97, { 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x898e);
        EXPECT(gbc.pc(), 0x8b91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b90), 0x2a);
        EXPECT(gbc.readMem(0xba97), 0xe5);
        // 2A 0203
        gbc.setState(0x5496, 0xeff8, 0x6a0, 0xaf31, 0x606f, 0x629a, 0x0, 0x0);
        gbc.writeMem(0x5496, { 0x2a });
        gbc.writeMem(0x629a, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xeff8);
        EXPECT(gbc.pc(), 0x5497);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 0204
        gbc.setState(0x73c3, 0xb7a3, 0x4690, 0xda82, 0xa5a9, 0xd949, 0x1, 0x1);
        gbc.writeMem(0x73c3, { 0x2a });
        gbc.writeMem(0xd949, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb7a3);
        EXPECT(gbc.pc(), 0x73c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd949), 0x45);
        // 2A 0205
        gbc.setState(0x3f1, 0x5863, 0xc110, 0x2068, 0xa8a7, 0x5065, 0x0, 0x0);
        gbc.writeMem(0x3f1, { 0x2a });
        gbc.writeMem(0x5065, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5863);
        EXPECT(gbc.pc(), 0x3f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0206
        gbc.setState(0x8554, 0xde34, 0xd4e0, 0xb929, 0xc68, 0x453d, 0x1, 0x1);
        gbc.writeMem(0x453d, { 0xb3 });
        gbc.writeMem(0x8554, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xde34);
        EXPECT(gbc.pc(), 0x8555);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8554), 0x2a);
        // 2A 0207
        gbc.setState(0x5358, 0x172f, 0xaaf0, 0xe87, 0x7eb8, 0x712e, 0x0, 0x1);
        gbc.writeMem(0x5358, { 0x2a });
        gbc.writeMem(0x712e, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x172f);
        EXPECT(gbc.pc(), 0x5359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0208
        gbc.setState(0x3678, 0x51cc, 0xde80, 0xf7d, 0x9fd4, 0x2057, 0x1, 0x0);
        gbc.writeMem(0x2057, { 0x9 });
        gbc.writeMem(0x3678, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x51cc);
        EXPECT(gbc.pc(), 0x3679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0209
        gbc.setState(0x9441, 0x36a8, 0xe680, 0xd89e, 0xab0e, 0xf6bb, 0x1, 0x1);
        gbc.writeMem(0x9441, { 0x2a });
        gbc.writeMem(0xf6bb, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x36a8);
        EXPECT(gbc.pc(), 0x9442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9441), 0x2a);
        EXPECT(gbc.readMem(0xf6bb), 0xcb);
        // 2A 020A
        gbc.setState(0x2807, 0xe2fb, 0x39d0, 0xa512, 0x3640, 0xdbad, 0x1, 0x0);
        gbc.writeMem(0x2807, { 0x2a });
        gbc.writeMem(0xdbad, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe2fb);
        EXPECT(gbc.pc(), 0x2808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbad), 0x22);
        // 2A 020B
        gbc.setState(0x54ca, 0x545a, 0x8010, 0x9c13, 0xe50f, 0x901d, 0x0, 0x1);
        gbc.writeMem(0x54ca, { 0x2a });
        gbc.writeMem(0x901d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x545a);
        EXPECT(gbc.pc(), 0x54cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x901d), 0x90);
        // 2A 020C
        gbc.setState(0x7edc, 0x5f47, 0x2590, 0xe800, 0xb111, 0xe30, 0x0, 0x1);
        gbc.writeMem(0xe30, { 0xbc });
        gbc.writeMem(0x7edc, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x5f47);
        EXPECT(gbc.pc(), 0x7edd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 020D
        gbc.setState(0xa2de, 0x69c3, 0x8260, 0xc96b, 0x2b97, 0x8623, 0x1, 0x1);
        gbc.writeMem(0x8623, { 0xa6 });
        gbc.writeMem(0xa2de, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x69c3);
        EXPECT(gbc.pc(), 0xa2df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8623), 0xa6);
        EXPECT(gbc.readMem(0xa2de), 0x2a);
        // 2A 020E
        gbc.setState(0x6636, 0x6727, 0x2470, 0xc590, 0x6ea6, 0xdb49, 0x1, 0x0);
        gbc.writeMem(0x6636, { 0x2a });
        gbc.writeMem(0xdb49, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6727);
        EXPECT(gbc.pc(), 0x6637);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb49), 0x32);
        // 2A 0210
        gbc.setState(0xe4e9, 0xacdb, 0xc720, 0x552b, 0xcc94, 0x9b41, 0x1, 0x1);
        gbc.writeMem(0x9b41, { 0xe0 });
        gbc.writeMem(0xe4e9, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xacdb);
        EXPECT(gbc.pc(), 0xe4ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b41), 0xe0);
        EXPECT(gbc.readMem(0xe4e9), 0x2a);
        // 2A 0211
        gbc.setState(0xd122, 0x141, 0x85d0, 0x8106, 0xe303, 0x40a5, 0x1, 0x1);
        gbc.writeMem(0x40a5, { 0x6d });
        gbc.writeMem(0xd122, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x141);
        EXPECT(gbc.pc(), 0xd123);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd122), 0x2a);
        // 2A 0213
        gbc.setState(0x7d9f, 0x585, 0x2a00, 0xde10, 0x62be, 0x8fe0, 0x0, 0x1);
        gbc.writeMem(0x7d9f, { 0x2a });
        gbc.writeMem(0x8fe0, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x585);
        EXPECT(gbc.pc(), 0x7da0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe0), 0x6f);
        // 2A 0214
        gbc.setState(0x856a, 0x6023, 0xebf0, 0x437f, 0x45b4, 0x2179, 0x1, 0x1);
        gbc.writeMem(0x2179, { 0xb3 });
        gbc.writeMem(0x856a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6023);
        EXPECT(gbc.pc(), 0x856b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x856a), 0x2a);
        // 2A 0215
        gbc.setState(0x8ecc, 0x6660, 0xf360, 0x5f8d, 0x91af, 0x13a7, 0x0, 0x0);
        gbc.writeMem(0x13a7, { 0x36 });
        gbc.writeMem(0x8ecc, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6660);
        EXPECT(gbc.pc(), 0x8ecd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ecc), 0x2a);
        // 2A 0216
        gbc.setState(0xd8e7, 0xd71a, 0x78c0, 0xdb10, 0x4ce3, 0x83e7, 0x0, 0x0);
        gbc.writeMem(0x83e7, { 0xbe });
        gbc.writeMem(0xd8e7, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd71a);
        EXPECT(gbc.pc(), 0xd8e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e7), 0xbe);
        EXPECT(gbc.readMem(0xd8e7), 0x2a);
        // 2A 0217
        gbc.setState(0xbde, 0x244b, 0xff40, 0xd916, 0x30a0, 0x28be, 0x1, 0x1);
        gbc.writeMem(0xbde, { 0x2a });
        gbc.writeMem(0x28be, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x244b);
        EXPECT(gbc.pc(), 0xbdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0218
        gbc.setState(0x3a1f, 0x280c, 0x7340, 0xe398, 0xd6ad, 0x5cab, 0x0, 0x0);
        gbc.writeMem(0x3a1f, { 0x2a });
        gbc.writeMem(0x5cab, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x280c);
        EXPECT(gbc.pc(), 0x3a20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0219
        gbc.setState(0x7e26, 0xc082, 0xbcd0, 0xa11, 0xf88c, 0x1648, 0x1, 0x1);
        gbc.writeMem(0x1648, { 0x72 });
        gbc.writeMem(0x7e26, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc082);
        EXPECT(gbc.pc(), 0x7e27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 021A
        gbc.setState(0x4277, 0x3a27, 0x9390, 0xfd49, 0x1611, 0xef77, 0x0, 0x1);
        gbc.writeMem(0x4277, { 0x2a });
        gbc.writeMem(0xef77, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x3a27);
        EXPECT(gbc.pc(), 0x4278);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef77), 0xaa);
        // 2A 021B
        gbc.setState(0x6a87, 0xda90, 0xf700, 0xdb93, 0x2765, 0x1910, 0x0, 0x1);
        gbc.writeMem(0x1910, { 0x61 });
        gbc.writeMem(0x6a87, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xda90);
        EXPECT(gbc.pc(), 0x6a88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 021C
        gbc.setState(0x51b9, 0xb738, 0x6760, 0xd75b, 0x5571, 0xec7d, 0x1, 0x1);
        gbc.writeMem(0x51b9, { 0x2a });
        gbc.writeMem(0xec7d, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb738);
        EXPECT(gbc.pc(), 0x51ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec7d), 0x7);
        // 2A 021D
        gbc.setState(0xcffe, 0x75fb, 0x6a20, 0x3f32, 0xdcab, 0xbfde, 0x1, 0x0);
        gbc.writeMem(0xbfde, { 0xaa });
        gbc.writeMem(0xcffe, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x75fb);
        EXPECT(gbc.pc(), 0xcfff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfde), 0xaa);
        EXPECT(gbc.readMem(0xcffe), 0x2a);
        // 2A 0220
        gbc.setState(0xc534, 0x85f4, 0xff10, 0x8b00, 0x7ed3, 0x2cb0, 0x0, 0x1);
        gbc.writeMem(0x2cb0, { 0x79 });
        gbc.writeMem(0xc534, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x85f4);
        EXPECT(gbc.pc(), 0xc535);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc534), 0x2a);
        // 2A 0221
        gbc.setState(0xbd5c, 0x5d9a, 0x9580, 0x9a02, 0xf343, 0x5f5d, 0x1, 0x0);
        gbc.writeMem(0x5f5d, { 0x62 });
        gbc.writeMem(0xbd5c, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5d9a);
        EXPECT(gbc.pc(), 0xbd5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd5c), 0x2a);
        // 2A 0222
        gbc.setState(0xbe83, 0x6531, 0x58c0, 0x3451, 0x4806, 0xc621, 0x0, 0x0);
        gbc.writeMem(0xbe83, { 0x2a });
        gbc.writeMem(0xc621, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6531);
        EXPECT(gbc.pc(), 0xbe84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe83), 0x2a);
        EXPECT(gbc.readMem(0xc621), 0x65);
        // 2A 0223
        gbc.setState(0xcf8e, 0x21e8, 0x8500, 0xdbb5, 0xacee, 0xb177, 0x1, 0x1);
        gbc.writeMem(0xb177, { 0x98 });
        gbc.writeMem(0xcf8e, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x21e8);
        EXPECT(gbc.pc(), 0xcf8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb177), 0x98);
        EXPECT(gbc.readMem(0xcf8e), 0x2a);
        // 2A 0224
        gbc.setState(0xe115, 0x7f42, 0x9d0, 0xbe22, 0xba0d, 0x6cd0, 0x0, 0x0);
        gbc.writeMem(0x6cd0, { 0xc7 });
        gbc.writeMem(0xe115, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7f42);
        EXPECT(gbc.pc(), 0xe116);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe115), 0x2a);
        // 2A 0225
        gbc.setState(0x419d, 0xc1c8, 0x2310, 0xada4, 0x8c53, 0x6d28, 0x0, 0x1);
        gbc.writeMem(0x419d, { 0x2a });
        gbc.writeMem(0x6d28, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc1c8);
        EXPECT(gbc.pc(), 0x419e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0226
        gbc.setState(0xa692, 0x202e, 0x14c0, 0x3944, 0x475b, 0x524a, 0x1, 0x1);
        gbc.writeMem(0x524a, { 0xdb });
        gbc.writeMem(0xa692, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x202e);
        EXPECT(gbc.pc(), 0xa693);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa692), 0x2a);
        // 2A 0227
        gbc.setState(0xc97e, 0x5293, 0x5640, 0xadb, 0x1d50, 0xf8af, 0x0, 0x1);
        gbc.writeMem(0xc97e, { 0x2a });
        gbc.writeMem(0xf8af, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x5293);
        EXPECT(gbc.pc(), 0xc97f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc97e), 0x2a);
        EXPECT(gbc.readMem(0xf8af), 0x0);
        // 2A 0228
        gbc.setState(0xa4a7, 0x84da, 0x1b40, 0x2fa, 0xde81, 0x31e9, 0x0, 0x1);
        gbc.writeMem(0x31e9, { 0x3a });
        gbc.writeMem(0xa4a7, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x84da);
        EXPECT(gbc.pc(), 0xa4a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4a7), 0x2a);
        // 2A 0229
        gbc.setState(0xa17, 0xd236, 0x6420, 0x6340, 0xdf0e, 0x6b47, 0x0, 0x0);
        gbc.writeMem(0xa17, { 0x2a });
        gbc.writeMem(0x6b47, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd236);
        EXPECT(gbc.pc(), 0xa18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 022A
        gbc.setState(0x4714, 0x4026, 0xa3b0, 0x3bf, 0x9674, 0x71ab, 0x0, 0x1);
        gbc.writeMem(0x4714, { 0x2a });
        gbc.writeMem(0x71ab, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4026);
        EXPECT(gbc.pc(), 0x4715);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 022B
        gbc.setState(0x37b6, 0xa36b, 0x9ed0, 0xa526, 0x910e, 0x4c0b, 0x1, 0x0);
        gbc.writeMem(0x37b6, { 0x2a });
        gbc.writeMem(0x4c0b, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa36b);
        EXPECT(gbc.pc(), 0x37b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 022C
        gbc.setState(0xd8dd, 0x1bc8, 0xec40, 0x611c, 0xbe77, 0x2eb3, 0x0, 0x0);
        gbc.writeMem(0x2eb3, { 0xff });
        gbc.writeMem(0xd8dd, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1bc8);
        EXPECT(gbc.pc(), 0xd8de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8dd), 0x2a);
        // 2A 022D
        gbc.setState(0x98bc, 0x4a1, 0xc810, 0x2b01, 0xae25, 0xc5f8, 0x1, 0x1);
        gbc.writeMem(0x98bc, { 0x2a });
        gbc.writeMem(0xc5f8, { 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4a1);
        EXPECT(gbc.pc(), 0x98bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98bc), 0x2a);
        EXPECT(gbc.readMem(0xc5f8), 0x3c);
        // 2A 022E
        gbc.setState(0xd946, 0x6bf0, 0xe5b0, 0x5f99, 0x63ba, 0x381b, 0x0, 0x1);
        gbc.writeMem(0x381b, { 0x4a });
        gbc.writeMem(0xd946, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6bf0);
        EXPECT(gbc.pc(), 0xd947);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd946), 0x2a);
        // 2A 022F
        gbc.setState(0xe54d, 0x377f, 0x4890, 0xe518, 0x9d89, 0xde19, 0x1, 0x0);
        gbc.writeMem(0xde19, { 0x2c });
        gbc.writeMem(0xe54d, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x377f);
        EXPECT(gbc.pc(), 0xe54e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde19), 0x2c);
        EXPECT(gbc.readMem(0xe54d), 0x2a);
        // 2A 0230
        gbc.setState(0xc27a, 0x181e, 0x1740, 0xa5f6, 0xa1ff, 0x338e, 0x0, 0x1);
        gbc.writeMem(0x338e, { 0x6c });
        gbc.writeMem(0xc27a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x181e);
        EXPECT(gbc.pc(), 0xc27b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc27a), 0x2a);
        // 2A 0231
        gbc.setState(0x8727, 0x53d0, 0x80a0, 0x8af2, 0x9bbf, 0x8d5d, 0x0, 0x1);
        gbc.writeMem(0x8727, { 0x2a });
        gbc.writeMem(0x8d5d, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x53d0);
        EXPECT(gbc.pc(), 0x8728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8727), 0x2a);
        EXPECT(gbc.readMem(0x8d5d), 0x24);
        // 2A 0232
        gbc.setState(0xb52f, 0x8bcc, 0x6a70, 0xc625, 0xb575, 0xe77c, 0x0, 0x1);
        gbc.writeMem(0xb52f, { 0x2a });
        gbc.writeMem(0xe77c, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8bcc);
        EXPECT(gbc.pc(), 0xb530);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb52f), 0x2a);
        EXPECT(gbc.readMem(0xe77c), 0x2c);
        // 2A 0233
        gbc.setState(0xcf83, 0x569, 0x8ed0, 0xf227, 0x4ded, 0x277d, 0x1, 0x0);
        gbc.writeMem(0x277d, { 0xd });
        gbc.writeMem(0xcf83, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x569);
        EXPECT(gbc.pc(), 0xcf84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf83), 0x2a);
        // 2A 0234
        gbc.setState(0x7bf, 0x39ae, 0xbd30, 0x7ac1, 0xea78, 0xc241, 0x0, 0x0);
        gbc.writeMem(0x7bf, { 0x2a });
        gbc.writeMem(0xc241, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x39ae);
        EXPECT(gbc.pc(), 0x7c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc241), 0x4d);
        // 2A 0235
        gbc.setState(0x604e, 0xdd18, 0xe6f0, 0x10b9, 0xf23b, 0x614, 0x1, 0x1);
        gbc.writeMem(0x614, { 0x33 });
        gbc.writeMem(0x604e, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xdd18);
        EXPECT(gbc.pc(), 0x604f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0236
        gbc.setState(0x3813, 0xd0e7, 0x56e0, 0xf876, 0x20c9, 0x129b, 0x0, 0x0);
        gbc.writeMem(0x129b, { 0xec });
        gbc.writeMem(0x3813, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd0e7);
        EXPECT(gbc.pc(), 0x3814);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 0237
        gbc.setState(0x644, 0x71a8, 0x48d0, 0x7133, 0x3d88, 0xfb9b, 0x0, 0x0);
        gbc.writeMem(0x644, { 0x2a });
        gbc.writeMem(0xfb9b, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x71a8);
        EXPECT(gbc.pc(), 0x645);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfb9b), 0x25);
        // 2A 0238
        gbc.setState(0x5190, 0x181f, 0xf4d0, 0x4b72, 0xe381, 0xc8de, 0x1, 0x1);
        gbc.writeMem(0x5190, { 0x2a });
        gbc.writeMem(0xc8de, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x181f);
        EXPECT(gbc.pc(), 0x5191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8de), 0x30);
        // 2A 0239
        gbc.setState(0x2372, 0x282, 0xb640, 0x91a5, 0x91ff, 0x9c4c, 0x0, 0x1);
        gbc.writeMem(0x2372, { 0x2a });
        gbc.writeMem(0x9c4c, { 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x282);
        EXPECT(gbc.pc(), 0x2373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c4c), 0x4f);
        // 2A 023A
        gbc.setState(0x2454, 0xefd8, 0xcaa0, 0x8a87, 0x8fee, 0x70ca, 0x1, 0x0);
        gbc.writeMem(0x2454, { 0x2a });
        gbc.writeMem(0x70ca, { 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xefd8);
        EXPECT(gbc.pc(), 0x2455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 023B
        gbc.setState(0x1dcf, 0x2f4e, 0x75b0, 0xfe5, 0x75a9, 0x3113, 0x1, 0x0);
        gbc.writeMem(0x1dcf, { 0x2a });
        gbc.writeMem(0x3113, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2f4e);
        EXPECT(gbc.pc(), 0x1dd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 023C
        gbc.setState(0x69e3, 0x74eb, 0xdd40, 0xf53c, 0x6615, 0xad05, 0x1, 0x1);
        gbc.writeMem(0x69e3, { 0x2a });
        gbc.writeMem(0xad05, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x74eb);
        EXPECT(gbc.pc(), 0x69e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad05), 0x8f);
        // 2A 023D
        gbc.setState(0x1795, 0x6abd, 0xf110, 0x5fdd, 0xf1e0, 0xbf8c, 0x1, 0x1);
        gbc.writeMem(0x1795, { 0x2a });
        gbc.writeMem(0xbf8c, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6abd);
        EXPECT(gbc.pc(), 0x1796);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf8c), 0x4c);
        // 2A 023E
        gbc.setState(0xde96, 0x7786, 0xebc0, 0x20b2, 0x2606, 0x7a1a, 0x1, 0x0);
        gbc.writeMem(0x7a1a, { 0xbd });
        gbc.writeMem(0xde96, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7786);
        EXPECT(gbc.pc(), 0xde97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde96), 0x2a);
        // 2A 023F
        gbc.setState(0x1ee1, 0x5100, 0x9770, 0x90f5, 0x58d7, 0x89af, 0x1, 0x0);
        gbc.writeMem(0x1ee1, { 0x2a });
        gbc.writeMem(0x89af, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x5100);
        EXPECT(gbc.pc(), 0x1ee2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89af), 0x71);
        // 2A 0241
        gbc.setState(0x7670, 0x6328, 0x9b70, 0x445f, 0x6659, 0x5370, 0x0, 0x1);
        gbc.writeMem(0x5370, { 0x2 });
        gbc.writeMem(0x7670, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6328);
        EXPECT(gbc.pc(), 0x7671);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0242
        gbc.setState(0x81c6, 0x4653, 0xd330, 0xeb5e, 0x2371, 0x9376, 0x0, 0x0);
        gbc.writeMem(0x81c6, { 0x2a });
        gbc.writeMem(0x9376, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4653);
        EXPECT(gbc.pc(), 0x81c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81c6), 0x2a);
        EXPECT(gbc.readMem(0x9376), 0xd5);
        // 2A 0243
        gbc.setState(0xc0e7, 0xcdce, 0x9b0, 0xfb71, 0xf3ea, 0x430b, 0x0, 0x0);
        gbc.writeMem(0x430b, { 0xa7 });
        gbc.writeMem(0xc0e7, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xcdce);
        EXPECT(gbc.pc(), 0xc0e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0e7), 0x2a);
        // 2A 0244
        gbc.setState(0x66c8, 0xe75b, 0xfb30, 0xf4e3, 0x3eb3, 0xb67a, 0x0, 0x0);
        gbc.writeMem(0x66c8, { 0x2a });
        gbc.writeMem(0xb67a, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe75b);
        EXPECT(gbc.pc(), 0x66c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb67a), 0xc);
        // 2A 0245
        gbc.setState(0x8714, 0xe658, 0x8b00, 0x78b3, 0x112e, 0x7c16, 0x1, 0x1);
        gbc.writeMem(0x7c16, { 0xab });
        gbc.writeMem(0x8714, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe658);
        EXPECT(gbc.pc(), 0x8715);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8714), 0x2a);
        // 2A 0246
        gbc.setState(0xa5df, 0xb623, 0x1e00, 0x5c03, 0xcbfb, 0x7af8, 0x1, 0x0);
        gbc.writeMem(0x7af8, { 0x8d });
        gbc.writeMem(0xa5df, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb623);
        EXPECT(gbc.pc(), 0xa5e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5df), 0x2a);
        // 2A 0247
        gbc.setState(0x2fa4, 0xd485, 0xf060, 0x1b1c, 0x9a5c, 0xbbf3, 0x0, 0x1);
        gbc.writeMem(0x2fa4, { 0x2a });
        gbc.writeMem(0xbbf3, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd485);
        EXPECT(gbc.pc(), 0x2fa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbf3), 0xc9);
        // 2A 0248
        gbc.setState(0xcfa6, 0x42b7, 0xf460, 0x499c, 0xa709, 0x9b4e, 0x0, 0x0);
        gbc.writeMem(0x9b4e, { 0xd7 });
        gbc.writeMem(0xcfa6, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x42b7);
        EXPECT(gbc.pc(), 0xcfa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b4e), 0xd7);
        EXPECT(gbc.readMem(0xcfa6), 0x2a);
        // 2A 0249
        gbc.setState(0x7449, 0x920a, 0xa020, 0x7ee9, 0x7221, 0x9cf5, 0x1, 0x0);
        gbc.writeMem(0x7449, { 0x2a });
        gbc.writeMem(0x9cf5, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x920a);
        EXPECT(gbc.pc(), 0x744a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cf5), 0x17);
        // 2A 024A
        gbc.setState(0x6803, 0xa2a9, 0x4d70, 0x1a90, 0x3931, 0x94b3, 0x0, 0x0);
        gbc.writeMem(0x6803, { 0x2a });
        gbc.writeMem(0x94b3, { 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa2a9);
        EXPECT(gbc.pc(), 0x6804);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94b3), 0xf3);
        // 2A 024B
        gbc.setState(0x2342, 0x8c58, 0xf770, 0xe656, 0xe451, 0xfb98, 0x1, 0x1);
        gbc.writeMem(0x2342, { 0x2a });
        gbc.writeMem(0xfb98, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8c58);
        EXPECT(gbc.pc(), 0x2343);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfb98), 0x24);
        // 2A 024C
        gbc.setState(0x887b, 0xe029, 0xd830, 0x7621, 0x75b3, 0x9175, 0x0, 0x1);
        gbc.writeMem(0x887b, { 0x2a });
        gbc.writeMem(0x9175, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe029);
        EXPECT(gbc.pc(), 0x887c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x887b), 0x2a);
        EXPECT(gbc.readMem(0x9175), 0x5f);
        // 2A 024D
        gbc.setState(0x25b3, 0x2a4, 0x80a0, 0xa3a7, 0x31d3, 0x11b0, 0x1, 0x1);
        gbc.writeMem(0x11b0, { 0x3f });
        gbc.writeMem(0x25b3, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2a4);
        EXPECT(gbc.pc(), 0x25b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 024E
        gbc.setState(0xb55c, 0x12b8, 0x230, 0xd0b1, 0x28cd, 0xc2c8, 0x1, 0x1);
        gbc.writeMem(0xb55c, { 0x2a });
        gbc.writeMem(0xc2c8, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x12b8);
        EXPECT(gbc.pc(), 0xb55d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb55c), 0x2a);
        EXPECT(gbc.readMem(0xc2c8), 0x3a);
        // 2A 024F
        gbc.setState(0xb2a4, 0x4ed4, 0x81a0, 0x8504, 0x3b8b, 0x895b, 0x0, 0x1);
        gbc.writeMem(0x895b, { 0x2 });
        gbc.writeMem(0xb2a4, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x4ed4);
        EXPECT(gbc.pc(), 0xb2a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x895b), 0x2);
        EXPECT(gbc.readMem(0xb2a4), 0x2a);
        // 2A 0250
        gbc.setState(0x7710, 0x99b4, 0x5600, 0xadce, 0x1fea, 0xddd5, 0x0, 0x0);
        gbc.writeMem(0x7710, { 0x2a });
        gbc.writeMem(0xddd5, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x99b4);
        EXPECT(gbc.pc(), 0x7711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddd5), 0x7c);
        // 2A 0251
        gbc.setState(0xbc3f, 0xd34b, 0x6400, 0xb47b, 0xbf, 0x56ba, 0x0, 0x1);
        gbc.writeMem(0x56ba, { 0x73 });
        gbc.writeMem(0xbc3f, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd34b);
        EXPECT(gbc.pc(), 0xbc40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc3f), 0x2a);
        // 2A 0252
        gbc.setState(0x9f50, 0x1fb5, 0x7210, 0xb6e, 0x31af, 0xa602, 0x0, 0x0);
        gbc.writeMem(0x9f50, { 0x2a });
        gbc.writeMem(0xa602, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1fb5);
        EXPECT(gbc.pc(), 0x9f51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f50), 0x2a);
        EXPECT(gbc.readMem(0xa602), 0x42);
        // 2A 0253
        gbc.setState(0xbe5, 0x6949, 0xa5e0, 0x571, 0xfd86, 0x3285, 0x0, 0x1);
        gbc.writeMem(0xbe5, { 0x2a });
        gbc.writeMem(0x3285, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6949);
        EXPECT(gbc.pc(), 0xbe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 0254
        gbc.setState(0x75de, 0x5bd7, 0x6b40, 0x98f8, 0xcd56, 0x4b33, 0x0, 0x0);
        gbc.writeMem(0x4b33, { 0xc });
        gbc.writeMem(0x75de, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5bd7);
        EXPECT(gbc.pc(), 0x75df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0255
        gbc.setState(0xa8bf, 0xdbc4, 0x2070, 0xef8e, 0x80f1, 0x9e5e, 0x1, 0x1);
        gbc.writeMem(0x9e5e, { 0x9 });
        gbc.writeMem(0xa8bf, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xdbc4);
        EXPECT(gbc.pc(), 0xa8c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e5e), 0x9);
        EXPECT(gbc.readMem(0xa8bf), 0x2a);
        // 2A 0256
        gbc.setState(0x1e00, 0x171d, 0x1ce0, 0x7003, 0x1581, 0x491c, 0x0, 0x1);
        gbc.writeMem(0x1e00, { 0x2a });
        gbc.writeMem(0x491c, { 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x171d);
        EXPECT(gbc.pc(), 0x1e01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 0257
        gbc.setState(0x1dc8, 0xb297, 0x7770, 0x5f0, 0xb804, 0x2029, 0x1, 0x1);
        gbc.writeMem(0x1dc8, { 0x2a });
        gbc.writeMem(0x2029, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb297);
        EXPECT(gbc.pc(), 0x1dc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0258
        gbc.setState(0x88c1, 0xd3af, 0x2be0, 0xa217, 0xe892, 0x52b8, 0x0, 0x0);
        gbc.writeMem(0x52b8, { 0x5b });
        gbc.writeMem(0x88c1, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xd3af);
        EXPECT(gbc.pc(), 0x88c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88c1), 0x2a);
        // 2A 0259
        gbc.setState(0x73b7, 0xf3f8, 0xa9e0, 0xe3b7, 0x55c4, 0x98c1, 0x1, 0x0);
        gbc.writeMem(0x73b7, { 0x2a });
        gbc.writeMem(0x98c1, { 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf3f8);
        EXPECT(gbc.pc(), 0x73b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98c1), 0xbc);
        // 2A 025A
        gbc.setState(0x1682, 0x261b, 0x1090, 0x40f5, 0x9333, 0xc9f2, 0x1, 0x1);
        gbc.writeMem(0x1682, { 0x2a });
        gbc.writeMem(0xc9f2, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x261b);
        EXPECT(gbc.pc(), 0x1683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9f2), 0x66);
        // 2A 025B
        gbc.setState(0xee16, 0x1b54, 0xa40, 0x70cb, 0x1bbd, 0x987, 0x0, 0x1);
        gbc.writeMem(0x987, { 0x20 });
        gbc.writeMem(0xee16, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x1b54);
        EXPECT(gbc.pc(), 0xee17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee16), 0x2a);
        // 2A 025C
        gbc.setState(0x6bdb, 0xff31, 0xbf80, 0x7c88, 0xe009, 0xf219, 0x0, 0x1);
        gbc.writeMem(0x6bdb, { 0x2a });
        gbc.writeMem(0xf219, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xff31);
        EXPECT(gbc.pc(), 0x6bdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf219), 0x98);
        // 2A 025D
        gbc.setState(0x8e4e, 0x22ca, 0xd340, 0xc3a5, 0x2f8a, 0x5893, 0x1, 0x0);
        gbc.writeMem(0x5893, { 0x34 });
        gbc.writeMem(0x8e4e, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x22ca);
        EXPECT(gbc.pc(), 0x8e4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e4e), 0x2a);
        // 2A 025E
        gbc.setState(0x861a, 0xe347, 0x2eb0, 0x6d7b, 0x8d05, 0xcee5, 0x1, 0x1);
        gbc.writeMem(0x861a, { 0x2a });
        gbc.writeMem(0xcee5, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe347);
        EXPECT(gbc.pc(), 0x861b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x861a), 0x2a);
        EXPECT(gbc.readMem(0xcee5), 0xb1);
        // 2A 025F
        gbc.setState(0xbbe2, 0xe49f, 0xbef0, 0x4f8f, 0x69d9, 0xb94, 0x1, 0x0);
        gbc.writeMem(0xb94, { 0x25 });
        gbc.writeMem(0xbbe2, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xe49f);
        EXPECT(gbc.pc(), 0xbbe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe2), 0x2a);
        // 2A 0260
        gbc.setState(0x5d4b, 0x880e, 0xc5a0, 0x6ab1, 0x7134, 0xb85f, 0x1, 0x1);
        gbc.writeMem(0x5d4b, { 0x2a });
        gbc.writeMem(0xb85f, { 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x880e);
        EXPECT(gbc.pc(), 0x5d4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb85f), 0x1d);
        // 2A 0261
        gbc.setState(0x3571, 0x8761, 0xb8a0, 0x95e8, 0xc861, 0xd555, 0x1, 0x1);
        gbc.writeMem(0x3571, { 0x2a });
        gbc.writeMem(0xd555, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8761);
        EXPECT(gbc.pc(), 0x3572);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd555), 0xb8);
        // 2A 0262
        gbc.setState(0xd86a, 0x501c, 0xad0, 0x6d1f, 0xccc9, 0x638c, 0x0, 0x1);
        gbc.writeMem(0x638c, { 0x88 });
        gbc.writeMem(0xd86a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x501c);
        EXPECT(gbc.pc(), 0xd86b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd86a), 0x2a);
        // 2A 0263
        gbc.setState(0xaa5, 0xbf69, 0x3e30, 0xc281, 0x3ca9, 0x9071, 0x1, 0x1);
        gbc.writeMem(0xaa5, { 0x2a });
        gbc.writeMem(0x9071, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xbf69);
        EXPECT(gbc.pc(), 0xaa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9071), 0x6);
        // 2A 0264
        gbc.setState(0x6a02, 0xbd01, 0x93c0, 0xa3fc, 0xee00, 0x3a43, 0x0, 0x0);
        gbc.writeMem(0x3a43, { 0xcd });
        gbc.writeMem(0x6a02, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xbd01);
        EXPECT(gbc.pc(), 0x6a03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0265
        gbc.setState(0x7c3e, 0x5e45, 0xf20, 0x3660, 0x2a52, 0xf790, 0x0, 0x1);
        gbc.writeMem(0x7c3e, { 0x2a });
        gbc.writeMem(0xf790, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x5e45);
        EXPECT(gbc.pc(), 0x7c3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf790), 0xe2);
        // 2A 0266
        gbc.setState(0x800d, 0x82, 0xa7b0, 0x9b32, 0xecc0, 0x6bc1, 0x0, 0x1);
        gbc.writeMem(0x6bc1, { 0x85 });
        gbc.writeMem(0x800d, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x82);
        EXPECT(gbc.pc(), 0x800e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x800d), 0x2a);
        // 2A 0267
        gbc.setState(0x97bc, 0x1893, 0xae50, 0x9015, 0xd04, 0x9f8e, 0x0, 0x1);
        gbc.writeMem(0x97bc, { 0x2a });
        gbc.writeMem(0x9f8e, { 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x1893);
        EXPECT(gbc.pc(), 0x97bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97bc), 0x2a);
        EXPECT(gbc.readMem(0x9f8e), 0x9f);
        // 2A 0268
        gbc.setState(0xc24c, 0x7d83, 0xbc70, 0x92c9, 0xe5bd, 0xc40, 0x1, 0x0);
        gbc.writeMem(0xc40, { 0xfe });
        gbc.writeMem(0xc24c, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7d83);
        EXPECT(gbc.pc(), 0xc24d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc24c), 0x2a);
        // 2A 0269
        gbc.setState(0x8ccf, 0x3e90, 0xff00, 0xc69b, 0x308, 0xa916, 0x0, 0x1);
        gbc.writeMem(0x8ccf, { 0x2a });
        gbc.writeMem(0xa916, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3e90);
        EXPECT(gbc.pc(), 0x8cd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ccf), 0x2a);
        EXPECT(gbc.readMem(0xa916), 0x82);
        // 2A 026A
        gbc.setState(0x9cd4, 0x3023, 0x61e0, 0x542b, 0x3496, 0x8c58, 0x1, 0x1);
        gbc.writeMem(0x8c58, { 0xa7 });
        gbc.writeMem(0x9cd4, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x3023);
        EXPECT(gbc.pc(), 0x9cd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c58), 0xa7);
        EXPECT(gbc.readMem(0x9cd4), 0x2a);
        // 2A 026B
        gbc.setState(0x60d3, 0x9dd4, 0xf460, 0x878e, 0x6a03, 0xaeee, 0x1, 0x1);
        gbc.writeMem(0x60d3, { 0x2a });
        gbc.writeMem(0xaeee, { 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9dd4);
        EXPECT(gbc.pc(), 0x60d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeee), 0x1b);
        // 2A 026C
        gbc.setState(0xd594, 0xbdbc, 0xeb60, 0xb384, 0x90a6, 0xf516, 0x1, 0x0);
        gbc.writeMem(0xd594, { 0x2a });
        gbc.writeMem(0xf516, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xbdbc);
        EXPECT(gbc.pc(), 0xd595);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd594), 0x2a);
        EXPECT(gbc.readMem(0xf516), 0x48);
        // 2A 026D
        gbc.setState(0xb630, 0x5f5e, 0xad50, 0x15f4, 0xc6ea, 0x448f, 0x0, 0x0);
        gbc.writeMem(0x448f, { 0x4d });
        gbc.writeMem(0xb630, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5f5e);
        EXPECT(gbc.pc(), 0xb631);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb630), 0x2a);
        // 2A 026E
        gbc.setState(0x4f3, 0xcd32, 0xc5b0, 0xe496, 0xcc5d, 0x3b2a, 0x0, 0x0);
        gbc.writeMem(0x4f3, { 0x2a });
        gbc.writeMem(0x3b2a, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xcd32);
        EXPECT(gbc.pc(), 0x4f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 026F
        gbc.setState(0x5579, 0xb91b, 0xf1b0, 0xf047, 0x5425, 0x1d68, 0x1, 0x1);
        gbc.writeMem(0x1d68, { 0x48 });
        gbc.writeMem(0x5579, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb91b);
        EXPECT(gbc.pc(), 0x557a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0270
        gbc.setState(0x11c4, 0xa598, 0xfe60, 0x8980, 0x978, 0x2f9b, 0x1, 0x1);
        gbc.writeMem(0x11c4, { 0x2a });
        gbc.writeMem(0x2f9b, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa598);
        EXPECT(gbc.pc(), 0x11c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 0271
        gbc.setState(0x9460, 0xcf79, 0x470, 0x67e, 0xd95a, 0x9067, 0x1, 0x1);
        gbc.writeMem(0x9067, { 0xe8 });
        gbc.writeMem(0x9460, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xcf79);
        EXPECT(gbc.pc(), 0x9461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9067), 0xe8);
        EXPECT(gbc.readMem(0x9460), 0x2a);
        // 2A 0272
        gbc.setState(0xcf42, 0x7bd7, 0x8270, 0xb167, 0x4f1a, 0xee26, 0x0, 0x1);
        gbc.writeMem(0xcf42, { 0x2a });
        gbc.writeMem(0xee26, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7bd7);
        EXPECT(gbc.pc(), 0xcf43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf42), 0x2a);
        EXPECT(gbc.readMem(0xee26), 0x5e);
        // 2A 0273
        gbc.setState(0xe756, 0xbe1d, 0x8460, 0x192, 0xebde, 0x5704, 0x1, 0x0);
        gbc.writeMem(0x5704, { 0xad });
        gbc.writeMem(0xe756, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbe1d);
        EXPECT(gbc.pc(), 0xe757);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe756), 0x2a);
        // 2A 0274
        gbc.setState(0xdd1b, 0xda81, 0xeb70, 0xf930, 0xc102, 0xb74a, 0x1, 0x1);
        gbc.writeMem(0xb74a, { 0xc0 });
        gbc.writeMem(0xdd1b, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xda81);
        EXPECT(gbc.pc(), 0xdd1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb74a), 0xc0);
        EXPECT(gbc.readMem(0xdd1b), 0x2a);
        // 2A 0275
        gbc.setState(0x99ad, 0x3328, 0xf3e0, 0x1bd8, 0x6c45, 0xa0b9, 0x1, 0x0);
        gbc.writeMem(0x99ad, { 0x2a });
        gbc.writeMem(0xa0b9, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x3328);
        EXPECT(gbc.pc(), 0x99ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ad), 0x2a);
        EXPECT(gbc.readMem(0xa0b9), 0x9);
        // 2A 0276
        gbc.setState(0x25a4, 0x55b4, 0xc3c0, 0x289a, 0x54d6, 0x882e, 0x0, 0x1);
        gbc.writeMem(0x25a4, { 0x2a });
        gbc.writeMem(0x882e, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x55b4);
        EXPECT(gbc.pc(), 0x25a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x882e), 0x41);
        // 2A 0277
        gbc.setState(0x5b31, 0x5a9, 0xb310, 0xc7df, 0x3366, 0x8f92, 0x1, 0x0);
        gbc.writeMem(0x5b31, { 0x2a });
        gbc.writeMem(0x8f92, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5a9);
        EXPECT(gbc.pc(), 0x5b32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f92), 0x5f);
        // 2A 0279
        gbc.setState(0x30a7, 0x9633, 0xe300, 0xc090, 0x2cc8, 0xad8f, 0x0, 0x1);
        gbc.writeMem(0x30a7, { 0x2a });
        gbc.writeMem(0xad8f, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9633);
        EXPECT(gbc.pc(), 0x30a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad8f), 0x2);
        // 2A 027A
        gbc.setState(0xe641, 0x5e8b, 0x1700, 0xe06, 0x5a7a, 0x59a1, 0x1, 0x1);
        gbc.writeMem(0x59a1, { 0x9 });
        gbc.writeMem(0xe641, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5e8b);
        EXPECT(gbc.pc(), 0xe642);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe641), 0x2a);
        // 2A 027B
        gbc.setState(0x258a, 0x5e0, 0xf400, 0x581b, 0xab76, 0xfaf4, 0x1, 0x1);
        gbc.writeMem(0x258a, { 0x2a });
        gbc.writeMem(0xfaf4, { 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5e0);
        EXPECT(gbc.pc(), 0x258b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfaf4), 0x1c);
        // 2A 027C
        gbc.setState(0xd8fd, 0x2848, 0x9e40, 0x5e94, 0xf93b, 0xd327, 0x0, 0x1);
        gbc.writeMem(0xd327, { 0xd6 });
        gbc.writeMem(0xd8fd, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2848);
        EXPECT(gbc.pc(), 0xd8fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd327), 0xd6);
        EXPECT(gbc.readMem(0xd8fd), 0x2a);
        // 2A 027D
        gbc.setState(0x5429, 0x3c0a, 0xac50, 0xad8e, 0xc5d7, 0xe5de, 0x1, 0x1);
        gbc.writeMem(0x5429, { 0x2a });
        gbc.writeMem(0xe5de, { 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3c0a);
        EXPECT(gbc.pc(), 0x542a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5de), 0xb0);
        // 2A 027E
        gbc.setState(0xd57b, 0x3074, 0x3b90, 0x8541, 0xd228, 0xbdcc, 0x0, 0x1);
        gbc.writeMem(0xbdcc, { 0xe7 });
        gbc.writeMem(0xd57b, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x3074);
        EXPECT(gbc.pc(), 0xd57c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdcc), 0xe7);
        EXPECT(gbc.readMem(0xd57b), 0x2a);
        // 2A 027F
        gbc.setState(0x978c, 0x8409, 0x3e40, 0x8901, 0xb36f, 0xd05b, 0x1, 0x0);
        gbc.writeMem(0x978c, { 0x2a });
        gbc.writeMem(0xd05b, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x8409);
        EXPECT(gbc.pc(), 0x978d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x978c), 0x2a);
        EXPECT(gbc.readMem(0xd05b), 0x30);
        // 2A 0280
        gbc.setState(0x18e, 0x27df, 0xe220, 0x9b33, 0x29d4, 0x9672, 0x1, 0x1);
        gbc.writeMem(0x18e, { 0x2a });
        gbc.writeMem(0x9672, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x27df);
        EXPECT(gbc.pc(), 0x18f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9672), 0x75);
        // 2A 0281
        gbc.setState(0xc7ee, 0xd8f6, 0xb90, 0x94a0, 0xda9b, 0xbb60, 0x0, 0x1);
        gbc.writeMem(0xbb60, { 0x5 });
        gbc.writeMem(0xc7ee, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd8f6);
        EXPECT(gbc.pc(), 0xc7ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb60), 0x5);
        EXPECT(gbc.readMem(0xc7ee), 0x2a);
        // 2A 0282
        gbc.setState(0x5122, 0xcd30, 0xfa60, 0x5a48, 0x5cef, 0xcaa5, 0x0, 0x0);
        gbc.writeMem(0x5122, { 0x2a });
        gbc.writeMem(0xcaa5, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xcd30);
        EXPECT(gbc.pc(), 0x5123);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaa5), 0x34);
        // 2A 0283
        gbc.setState(0x3a71, 0x54f6, 0x3330, 0xa5bd, 0x5e46, 0xf16c, 0x0, 0x1);
        gbc.writeMem(0x3a71, { 0x2a });
        gbc.writeMem(0xf16c, { 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x54f6);
        EXPECT(gbc.pc(), 0x3a72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf16c), 0xc4);
        // 2A 0284
        gbc.setState(0x8a25, 0x9ebf, 0x57a0, 0xa95c, 0x3471, 0xde63, 0x1, 0x0);
        gbc.writeMem(0x8a25, { 0x2a });
        gbc.writeMem(0xde63, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9ebf);
        EXPECT(gbc.pc(), 0x8a26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a25), 0x2a);
        EXPECT(gbc.readMem(0xde63), 0xd9);
        // 2A 0285
        gbc.setState(0x658, 0xef25, 0x9b90, 0x6402, 0x7795, 0x8ffc, 0x1, 0x1);
        gbc.writeMem(0x658, { 0x2a });
        gbc.writeMem(0x8ffc, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xef25);
        EXPECT(gbc.pc(), 0x659);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ffc), 0x6e);
        // 2A 0286
        gbc.setState(0x6e86, 0x6c3c, 0x4da0, 0xd0b, 0x5713, 0x5eda, 0x0, 0x0);
        gbc.writeMem(0x5eda, { 0x31 });
        gbc.writeMem(0x6e86, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x6c3c);
        EXPECT(gbc.pc(), 0x6e87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 0287
        gbc.setState(0x3ae6, 0xe41e, 0x9e90, 0x6be4, 0xa301, 0xf983, 0x0, 0x1);
        gbc.writeMem(0x3ae6, { 0x2a });
        gbc.writeMem(0xf983, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe41e);
        EXPECT(gbc.pc(), 0x3ae7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf983), 0xde);
        // 2A 0288
        gbc.setState(0xc9c2, 0xebe3, 0xb500, 0x2755, 0x78b, 0x7f0d, 0x1, 0x1);
        gbc.writeMem(0x7f0d, { 0x13 });
        gbc.writeMem(0xc9c2, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xebe3);
        EXPECT(gbc.pc(), 0xc9c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9c2), 0x2a);
        // 2A 0289
        gbc.setState(0x4407, 0x4ff3, 0x5b30, 0x9eda, 0xa047, 0x1410, 0x0, 0x0);
        gbc.writeMem(0x1410, { 0xb4 });
        gbc.writeMem(0x4407, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4ff3);
        EXPECT(gbc.pc(), 0x4408);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 028A
        gbc.setState(0xa053, 0x726e, 0x8db0, 0x977b, 0xf1c1, 0x184d, 0x0, 0x1);
        gbc.writeMem(0x184d, { 0x8c });
        gbc.writeMem(0xa053, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x726e);
        EXPECT(gbc.pc(), 0xa054);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa053), 0x2a);
        // 2A 028B
        gbc.setState(0x74d8, 0x8421, 0xa190, 0x45b6, 0xd4b6, 0x401, 0x1, 0x1);
        gbc.writeMem(0x401, { 0x27 });
        gbc.writeMem(0x74d8, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8421);
        EXPECT(gbc.pc(), 0x74d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 028C
        gbc.setState(0xccad, 0xae7a, 0x64c0, 0xc9a4, 0x83, 0x5ac0, 0x1, 0x1);
        gbc.writeMem(0x5ac0, { 0x5b });
        gbc.writeMem(0xccad, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xae7a);
        EXPECT(gbc.pc(), 0xccae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccad), 0x2a);
        // 2A 028D
        gbc.setState(0xb029, 0x13f9, 0xe2f0, 0x7295, 0x6f64, 0x370d, 0x1, 0x1);
        gbc.writeMem(0x370d, { 0xf5 });
        gbc.writeMem(0xb029, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x13f9);
        EXPECT(gbc.pc(), 0xb02a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb029), 0x2a);
        // 2A 028E
        gbc.setState(0xa45, 0x3f0a, 0x600, 0x4d65, 0x4c00, 0x12a5, 0x0, 0x1);
        gbc.writeMem(0xa45, { 0x2a });
        gbc.writeMem(0x12a5, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3f0a);
        EXPECT(gbc.pc(), 0xa46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 028F
        gbc.setState(0xe9ff, 0x6dc6, 0xc810, 0x3677, 0xb71c, 0xfa06, 0x0, 0x0);
        gbc.writeMem(0xe9ff, { 0x2a });
        gbc.writeMem(0xfa06, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6dc6);
        EXPECT(gbc.pc(), 0xea00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9ff), 0x2a);
        EXPECT(gbc.readMem(0xfa06), 0xe0);
        // 2A 0290
        gbc.setState(0x8cfb, 0xe4c3, 0xe530, 0x8897, 0xb66b, 0xe433, 0x0, 0x0);
        gbc.writeMem(0x8cfb, { 0x2a });
        gbc.writeMem(0xe433, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe4c3);
        EXPECT(gbc.pc(), 0x8cfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cfb), 0x2a);
        EXPECT(gbc.readMem(0xe433), 0x2d);
        // 2A 0291
        gbc.setState(0xb2dc, 0x8405, 0x130, 0x24ef, 0x1ce2, 0x21e9, 0x0, 0x0);
        gbc.writeMem(0x21e9, { 0xbd });
        gbc.writeMem(0xb2dc, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8405);
        EXPECT(gbc.pc(), 0xb2dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2dc), 0x2a);
        // 2A 0292
        gbc.setState(0x1d5b, 0x58a8, 0x4050, 0x2a27, 0x1111, 0x529e, 0x1, 0x1);
        gbc.writeMem(0x1d5b, { 0x2a });
        gbc.writeMem(0x529e, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x58a8);
        EXPECT(gbc.pc(), 0x1d5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0293
        gbc.setState(0xcdb9, 0x3304, 0x2970, 0x4eba, 0x5d81, 0x4ed2, 0x1, 0x0);
        gbc.writeMem(0x4ed2, { 0x64 });
        gbc.writeMem(0xcdb9, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x3304);
        EXPECT(gbc.pc(), 0xcdba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdb9), 0x2a);
        // 2A 0294
        gbc.setState(0x563, 0xdd62, 0x68c0, 0xb9d3, 0x75f4, 0xfdf7, 0x1, 0x1);
        gbc.writeMem(0x563, { 0x2a });
        gbc.writeMem(0xfdf7, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xdd62);
        EXPECT(gbc.pc(), 0x564);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfdf7), 0xf2);
        // 2A 0295
        gbc.setState(0x8519, 0x8711, 0x3630, 0xca9, 0xea3c, 0x200a, 0x1, 0x1);
        gbc.writeMem(0x200a, { 0x52 });
        gbc.writeMem(0x8519, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8711);
        EXPECT(gbc.pc(), 0x851a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8519), 0x2a);
        // 2A 0296
        gbc.setState(0x4b63, 0xfa4f, 0xb3b0, 0xe014, 0xe5fd, 0xb33b, 0x0, 0x0);
        gbc.writeMem(0x4b63, { 0x2a });
        gbc.writeMem(0xb33b, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xfa4f);
        EXPECT(gbc.pc(), 0x4b64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb33b), 0x2c);
        // 2A 0297
        gbc.setState(0x18d7, 0xf12c, 0x64e0, 0x4744, 0xb1a6, 0xe568, 0x1, 0x0);
        gbc.writeMem(0x18d7, { 0x2a });
        gbc.writeMem(0xe568, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf12c);
        EXPECT(gbc.pc(), 0x18d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe568), 0xcb);
        // 2A 0298
        gbc.setState(0xea62, 0x8bed, 0x5410, 0x9620, 0xdfb8, 0x3de2, 0x0, 0x0);
        gbc.writeMem(0x3de2, { 0x38 });
        gbc.writeMem(0xea62, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8bed);
        EXPECT(gbc.pc(), 0xea63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea62), 0x2a);
        // 2A 0299
        gbc.setState(0x26e5, 0xf4d0, 0x12a0, 0xcd7c, 0xe0f2, 0xc9f0, 0x1, 0x1);
        gbc.writeMem(0x26e5, { 0x2a });
        gbc.writeMem(0xc9f0, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf4d0);
        EXPECT(gbc.pc(), 0x26e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9f0), 0x7b);
        // 2A 029A
        gbc.setState(0xa0fe, 0x41e, 0x4330, 0x7e3d, 0xa3b0, 0xb730, 0x1, 0x0);
        gbc.writeMem(0xa0fe, { 0x2a });
        gbc.writeMem(0xb730, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x41e);
        EXPECT(gbc.pc(), 0xa0ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0fe), 0x2a);
        EXPECT(gbc.readMem(0xb730), 0xf8);
        // 2A 029B
        gbc.setState(0xfb1, 0xe577, 0xa810, 0xf934, 0x3795, 0xa564, 0x1, 0x0);
        gbc.writeMem(0xfb1, { 0x2a });
        gbc.writeMem(0xa564, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xe577);
        EXPECT(gbc.pc(), 0xfb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa564), 0x79);
        // 2A 029C
        gbc.setState(0x1a4c, 0x3a47, 0xf5e0, 0xb439, 0x7fc0, 0xb19, 0x1, 0x1);
        gbc.writeMem(0xb19, { 0xaa });
        gbc.writeMem(0x1a4c, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3a47);
        EXPECT(gbc.pc(), 0x1a4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 029D
        gbc.setState(0x8018, 0x55e, 0x63b0, 0x4ba8, 0xf327, 0x37a2, 0x1, 0x0);
        gbc.writeMem(0x37a2, { 0x1e });
        gbc.writeMem(0x8018, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x55e);
        EXPECT(gbc.pc(), 0x8019);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8018), 0x2a);
        // 2A 029E
        gbc.setState(0x1039, 0x8f25, 0x9880, 0x9bd6, 0x9b20, 0xa2f0, 0x0, 0x1);
        gbc.writeMem(0x1039, { 0x2a });
        gbc.writeMem(0xa2f0, { 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x8f25);
        EXPECT(gbc.pc(), 0x103a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2f0), 0x7e);
        // 2A 029F
        gbc.setState(0x79ea, 0xd4a0, 0x7830, 0x66ee, 0x7387, 0xee04, 0x1, 0x0);
        gbc.writeMem(0x79ea, { 0x2a });
        gbc.writeMem(0xee04, { 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd4a0);
        EXPECT(gbc.pc(), 0x79eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee04), 0xd2);
        // 2A 02A0
        gbc.setState(0x6afd, 0x47a4, 0x66a0, 0x4410, 0xa02d, 0x1a17, 0x1, 0x1);
        gbc.writeMem(0x1a17, { 0x32 });
        gbc.writeMem(0x6afd, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x47a4);
        EXPECT(gbc.pc(), 0x6afe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 02A1
        gbc.setState(0xe56b, 0xa3b5, 0xd380, 0x9df2, 0x40e0, 0xda9d, 0x0, 0x1);
        gbc.writeMem(0xda9d, { 0x58 });
        gbc.writeMem(0xe56b, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa3b5);
        EXPECT(gbc.pc(), 0xe56c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda9d), 0x58);
        EXPECT(gbc.readMem(0xe56b), 0x2a);
        // 2A 02A2
        gbc.setState(0xbb76, 0xaa73, 0x62a0, 0x8698, 0x21be, 0xf36b, 0x0, 0x0);
        gbc.writeMem(0xbb76, { 0x2a });
        gbc.writeMem(0xf36b, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xaa73);
        EXPECT(gbc.pc(), 0xbb77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb76), 0x2a);
        EXPECT(gbc.readMem(0xf36b), 0x1f);
        // 2A 02A3
        gbc.setState(0x3a20, 0xa4ff, 0x5830, 0xf621, 0xca8d, 0x71fb, 0x1, 0x1);
        gbc.writeMem(0x3a20, { 0x2a });
        gbc.writeMem(0x71fb, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xa4ff);
        EXPECT(gbc.pc(), 0x3a21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 02A4
        gbc.setState(0x1354, 0xa4c2, 0x7dc0, 0x5904, 0x879a, 0x461, 0x1, 0x1);
        gbc.writeMem(0x461, { 0x17 });
        gbc.writeMem(0x1354, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa4c2);
        EXPECT(gbc.pc(), 0x1355);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 02A5
        gbc.setState(0xa0d5, 0x6945, 0x2c40, 0xc78d, 0xba4b, 0x41ca, 0x1, 0x0);
        gbc.writeMem(0x41ca, { 0xcc });
        gbc.writeMem(0xa0d5, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6945);
        EXPECT(gbc.pc(), 0xa0d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0d5), 0x2a);
        // 2A 02A6
        gbc.setState(0x1d62, 0x10ba, 0xdac0, 0x45ca, 0xa4d2, 0xd813, 0x0, 0x1);
        gbc.writeMem(0x1d62, { 0x2a });
        gbc.writeMem(0xd813, { 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x10ba);
        EXPECT(gbc.pc(), 0x1d63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd813), 0xe);
        // 2A 02A7
        gbc.setState(0x23c8, 0x538f, 0xe450, 0xb24f, 0x2b34, 0xf1e7, 0x1, 0x0);
        gbc.writeMem(0x23c8, { 0x2a });
        gbc.writeMem(0xf1e7, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x538f);
        EXPECT(gbc.pc(), 0x23c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf1e7), 0x5b);
        // 2A 02A8
        gbc.setState(0x65d3, 0xa2e6, 0xaa0, 0x194f, 0x1cf4, 0x6a35, 0x0, 0x1);
        gbc.writeMem(0x65d3, { 0x2a });
        gbc.writeMem(0x6a35, { 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa2e6);
        EXPECT(gbc.pc(), 0x65d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 02A9
        gbc.setState(0x22e3, 0x53dd, 0xcdb0, 0xdf20, 0xd204, 0xe028, 0x0, 0x1);
        gbc.writeMem(0x22e3, { 0x2a });
        gbc.writeMem(0xe028, { 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x53dd);
        EXPECT(gbc.pc(), 0x22e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe028), 0x3);
        // 2A 02AA
        gbc.setState(0x1f4d, 0x32ed, 0xb690, 0x6505, 0x3899, 0xd9a6, 0x0, 0x1);
        gbc.writeMem(0x1f4d, { 0x2a });
        gbc.writeMem(0xd9a6, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x32ed);
        EXPECT(gbc.pc(), 0x1f4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9a6), 0x67);
        // 2A 02AB
        gbc.setState(0xc1e6, 0x830b, 0xd5e0, 0x30ac, 0x511f, 0x2329, 0x0, 0x0);
        gbc.writeMem(0x2329, { 0x96 });
        gbc.writeMem(0xc1e6, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x830b);
        EXPECT(gbc.pc(), 0xc1e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1e6), 0x2a);
        // 2A 02AC
        gbc.setState(0x300e, 0x5e9d, 0xfc20, 0xf5a2, 0x5023, 0xdeb2, 0x0, 0x1);
        gbc.writeMem(0x300e, { 0x2a });
        gbc.writeMem(0xdeb2, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5e9d);
        EXPECT(gbc.pc(), 0x300f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeb2), 0xef);
        // 2A 02AD
        gbc.setState(0xb260, 0x9516, 0xaf80, 0xa62a, 0xa300, 0x3fd3, 0x1, 0x1);
        gbc.writeMem(0x3fd3, { 0x9a });
        gbc.writeMem(0xb260, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9516);
        EXPECT(gbc.pc(), 0xb261);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb260), 0x2a);
        // 2A 02AE
        gbc.setState(0x12d5, 0x9e63, 0x27f0, 0xf0b3, 0x4ddd, 0xc421, 0x1, 0x0);
        gbc.writeMem(0x12d5, { 0x2a });
        gbc.writeMem(0xc421, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x9e63);
        EXPECT(gbc.pc(), 0x12d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc421), 0xad);
        // 2A 02B0
        gbc.setState(0xbcfe, 0xfe79, 0x6320, 0x18db, 0x4f17, 0x2c6a, 0x0, 0x1);
        gbc.writeMem(0x2c6a, { 0x40 });
        gbc.writeMem(0xbcfe, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xfe79);
        EXPECT(gbc.pc(), 0xbcff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcfe), 0x2a);
        // 2A 02B1
        gbc.setState(0x800f, 0xa1f2, 0x7020, 0xe985, 0xa66, 0x9122, 0x1, 0x0);
        gbc.writeMem(0x800f, { 0x2a });
        gbc.writeMem(0x9122, { 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa1f2);
        EXPECT(gbc.pc(), 0x8010);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x800f), 0x2a);
        EXPECT(gbc.readMem(0x9122), 0xf5);
        // 2A 02B2
        gbc.setState(0xaaa8, 0x39ef, 0x3340, 0xc631, 0xf40d, 0x46b9, 0x0, 0x0);
        gbc.writeMem(0x46b9, { 0x97 });
        gbc.writeMem(0xaaa8, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x39ef);
        EXPECT(gbc.pc(), 0xaaa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaa8), 0x2a);
        // 2A 02B3
        gbc.setState(0x9dd1, 0x5413, 0xb570, 0x1768, 0x3f3c, 0x8d5f, 0x1, 0x1);
        gbc.writeMem(0x8d5f, { 0x61 });
        gbc.writeMem(0x9dd1, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5413);
        EXPECT(gbc.pc(), 0x9dd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d5f), 0x61);
        EXPECT(gbc.readMem(0x9dd1), 0x2a);
        // 2A 02B4
        gbc.setState(0x47ec, 0xf99e, 0xf630, 0xdb1, 0x6ec8, 0x1332, 0x1, 0x1);
        gbc.writeMem(0x1332, { 0xe4 });
        gbc.writeMem(0x47ec, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf99e);
        EXPECT(gbc.pc(), 0x47ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 02B5
        gbc.setState(0x3bab, 0xb098, 0x81d0, 0xc28, 0xdbe2, 0x42b7, 0x1, 0x1);
        gbc.writeMem(0x3bab, { 0x2a });
        gbc.writeMem(0x42b7, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb098);
        EXPECT(gbc.pc(), 0x3bac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 02B6
        gbc.setState(0x74e7, 0xc5af, 0x820, 0xb4dc, 0xe14d, 0xc044, 0x0, 0x1);
        gbc.writeMem(0x74e7, { 0x2a });
        gbc.writeMem(0xc044, { 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xc5af);
        EXPECT(gbc.pc(), 0x74e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc044), 0x1c);
        // 2A 02B7
        gbc.setState(0xcb2c, 0x951d, 0x5180, 0x6a9b, 0xd7e5, 0xd81c, 0x1, 0x1);
        gbc.writeMem(0xcb2c, { 0x2a });
        gbc.writeMem(0xd81c, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x951d);
        EXPECT(gbc.pc(), 0xcb2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb2c), 0x2a);
        EXPECT(gbc.readMem(0xd81c), 0x6e);
        // 2A 02B8
        gbc.setState(0x92, 0x5dd6, 0x1110, 0x7af2, 0x8bf6, 0x7d7f, 0x0, 0x1);
        gbc.writeMem(0x92, { 0x2a });
        gbc.writeMem(0x7d7f, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5dd6);
        EXPECT(gbc.pc(), 0x93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 02B9
        gbc.setState(0x451c, 0x902f, 0x34d0, 0x8f98, 0x4d0, 0x3be6, 0x1, 0x0);
        gbc.writeMem(0x3be6, { 0x5a });
        gbc.writeMem(0x451c, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x902f);
        EXPECT(gbc.pc(), 0x451d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 02BA
        gbc.setState(0x1988, 0x8341, 0x1800, 0x12fc, 0x8713, 0x78bc, 0x1, 0x0);
        gbc.writeMem(0x1988, { 0x2a });
        gbc.writeMem(0x78bc, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8341);
        EXPECT(gbc.pc(), 0x1989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 02BB
        gbc.setState(0x5e9f, 0xd829, 0xe1d0, 0x7d2d, 0xa7a8, 0x34d, 0x0, 0x0);
        gbc.writeMem(0x34d, { 0xbe });
        gbc.writeMem(0x5e9f, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd829);
        EXPECT(gbc.pc(), 0x5ea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 02BC
        gbc.setState(0xb83b, 0x32b2, 0x36a0, 0x72b2, 0xfb3a, 0x6d15, 0x0, 0x0);
        gbc.writeMem(0x6d15, { 0x28 });
        gbc.writeMem(0xb83b, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x32b2);
        EXPECT(gbc.pc(), 0xb83c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb83b), 0x2a);
        // 2A 02BD
        gbc.setState(0x18df, 0x355e, 0x7cd0, 0x22a2, 0x126, 0x378e, 0x1, 0x1);
        gbc.writeMem(0x18df, { 0x2a });
        gbc.writeMem(0x378e, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x355e);
        EXPECT(gbc.pc(), 0x18e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 02BE
        gbc.setState(0x72b, 0xef05, 0x49e0, 0x2617, 0x6447, 0xbc30, 0x0, 0x0);
        gbc.writeMem(0x72b, { 0x2a });
        gbc.writeMem(0xbc30, { 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xef05);
        EXPECT(gbc.pc(), 0x72c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc30), 0x13);
        // 2A 02BF
        gbc.setState(0xa3d1, 0xfd6f, 0x9030, 0xf9e0, 0x5bec, 0x1e0, 0x1, 0x1);
        gbc.writeMem(0x1e0, { 0x3d });
        gbc.writeMem(0xa3d1, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xfd6f);
        EXPECT(gbc.pc(), 0xa3d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3d1), 0x2a);
        // 2A 02C0
        gbc.setState(0xd53a, 0x9653, 0xa010, 0x94df, 0xb41a, 0x3515, 0x0, 0x0);
        gbc.writeMem(0x3515, { 0xee });
        gbc.writeMem(0xd53a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9653);
        EXPECT(gbc.pc(), 0xd53b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd53a), 0x2a);
        // 2A 02C1
        gbc.setState(0xc8a2, 0xe0de, 0x5010, 0x44f, 0x4f9f, 0xe9af, 0x0, 0x1);
        gbc.writeMem(0xc8a2, { 0x2a });
        gbc.writeMem(0xe9af, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe0de);
        EXPECT(gbc.pc(), 0xc8a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8a2), 0x2a);
        EXPECT(gbc.readMem(0xe9af), 0x8e);
        // 2A 02C2
        gbc.setState(0xb97, 0x30e1, 0x99a0, 0xbce0, 0xb65f, 0xfb41, 0x1, 0x0);
        gbc.writeMem(0xb97, { 0x2a });
        gbc.writeMem(0xfb41, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x30e1);
        EXPECT(gbc.pc(), 0xb98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb41), 0x14);
        // 2A 02C3
        gbc.setState(0x9ab3, 0x7b1f, 0xa840, 0x8aa1, 0x3b55, 0x9b92, 0x1, 0x0);
        gbc.writeMem(0x9ab3, { 0x2a });
        gbc.writeMem(0x9b92, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7b1f);
        EXPECT(gbc.pc(), 0x9ab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ab3), 0x2a);
        EXPECT(gbc.readMem(0x9b92), 0xf7);
        // 2A 02C4
        gbc.setState(0xd66f, 0xf785, 0xb420, 0x2b1e, 0x9794, 0x82f4, 0x1, 0x1);
        gbc.writeMem(0x82f4, { 0xcb });
        gbc.writeMem(0xd66f, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf785);
        EXPECT(gbc.pc(), 0xd670);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82f4), 0xcb);
        EXPECT(gbc.readMem(0xd66f), 0x2a);
        // 2A 02C5
        gbc.setState(0x375, 0x320d, 0x1d50, 0x68fb, 0x5232, 0x4cfa, 0x0, 0x0);
        gbc.writeMem(0x375, { 0x2a });
        gbc.writeMem(0x4cfa, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x320d);
        EXPECT(gbc.pc(), 0x376);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 02C6
        gbc.setState(0x94b0, 0x6eac, 0x9980, 0x4dd5, 0xe4d3, 0x3fcd, 0x1, 0x1);
        gbc.writeMem(0x3fcd, { 0x39 });
        gbc.writeMem(0x94b0, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6eac);
        EXPECT(gbc.pc(), 0x94b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94b0), 0x2a);
        // 2A 02C7
        gbc.setState(0xbce8, 0x2aff, 0x940, 0xf26f, 0xd72c, 0x92cf, 0x1, 0x0);
        gbc.writeMem(0x92cf, { 0x8b });
        gbc.writeMem(0xbce8, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2aff);
        EXPECT(gbc.pc(), 0xbce9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92cf), 0x8b);
        EXPECT(gbc.readMem(0xbce8), 0x2a);
        // 2A 02C8
        gbc.setState(0xa900, 0x224b, 0xf220, 0xfe79, 0x5e6f, 0xe6b5, 0x0, 0x0);
        gbc.writeMem(0xa900, { 0x2a });
        gbc.writeMem(0xe6b5, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x224b);
        EXPECT(gbc.pc(), 0xa901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa900), 0x2a);
        EXPECT(gbc.readMem(0xe6b5), 0xe1);
        // 2A 02C9
        gbc.setState(0xa8a6, 0x7166, 0x2960, 0x980, 0x6726, 0xdf26, 0x0, 0x0);
        gbc.writeMem(0xa8a6, { 0x2a });
        gbc.writeMem(0xdf26, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7166);
        EXPECT(gbc.pc(), 0xa8a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8a6), 0x2a);
        EXPECT(gbc.readMem(0xdf26), 0x61);
        // 2A 02CA
        gbc.setState(0x6199, 0xc064, 0x1010, 0x91b5, 0x950b, 0x79dc, 0x1, 0x1);
        gbc.writeMem(0x6199, { 0x2a });
        gbc.writeMem(0x79dc, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc064);
        EXPECT(gbc.pc(), 0x619a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 02CB
        gbc.setState(0x3ec, 0x18ce, 0x5100, 0x478, 0xee0d, 0x29e0, 0x0, 0x1);
        gbc.writeMem(0x3ec, { 0x2a });
        gbc.writeMem(0x29e0, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x18ce);
        EXPECT(gbc.pc(), 0x3ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 02CC
        gbc.setState(0xbb79, 0xc91a, 0x6660, 0x6ccb, 0x9f61, 0x6afc, 0x1, 0x0);
        gbc.writeMem(0x6afc, { 0x27 });
        gbc.writeMem(0xbb79, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xc91a);
        EXPECT(gbc.pc(), 0xbb7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb79), 0x2a);
        // 2A 02CD
        gbc.setState(0x256a, 0x4f42, 0xb40, 0x4e84, 0xbeec, 0x294, 0x0, 0x0);
        gbc.writeMem(0x294, { 0x39 });
        gbc.writeMem(0x256a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4f42);
        EXPECT(gbc.pc(), 0x256b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 02CE
        gbc.setState(0x8791, 0xa1b, 0x17b0, 0x49ee, 0x64bf, 0xf51a, 0x1, 0x1);
        gbc.writeMem(0x8791, { 0x2a });
        gbc.writeMem(0xf51a, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa1b);
        EXPECT(gbc.pc(), 0x8792);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8791), 0x2a);
        EXPECT(gbc.readMem(0xf51a), 0x28);
        // 2A 02CF
        gbc.setState(0x47aa, 0x4ee5, 0x1780, 0x2adb, 0x6488, 0x2e35, 0x1, 0x0);
        gbc.writeMem(0x2e35, { 0xb });
        gbc.writeMem(0x47aa, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4ee5);
        EXPECT(gbc.pc(), 0x47ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 02D0
        gbc.setState(0xa09d, 0xe8f4, 0x8580, 0xac, 0x7825, 0x1720, 0x0, 0x0);
        gbc.writeMem(0x1720, { 0x68 });
        gbc.writeMem(0xa09d, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe8f4);
        EXPECT(gbc.pc(), 0xa09e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa09d), 0x2a);
        // 2A 02D1
        gbc.setState(0xcdeb, 0x1543, 0x5090, 0xd723, 0x77d8, 0x2dfa, 0x0, 0x1);
        gbc.writeMem(0x2dfa, { 0xb8 });
        gbc.writeMem(0xcdeb, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1543);
        EXPECT(gbc.pc(), 0xcdec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdeb), 0x2a);
        // 2A 02D2
        gbc.setState(0xd94f, 0xcd2c, 0x7110, 0x532e, 0x2b7c, 0x161a, 0x1, 0x1);
        gbc.writeMem(0x161a, { 0x7d });
        gbc.writeMem(0xd94f, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xcd2c);
        EXPECT(gbc.pc(), 0xd950);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd94f), 0x2a);
        // 2A 02D3
        gbc.setState(0xd810, 0x496b, 0xaa00, 0x636d, 0x276, 0x72dc, 0x1, 0x1);
        gbc.writeMem(0x72dc, { 0xce });
        gbc.writeMem(0xd810, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x496b);
        EXPECT(gbc.pc(), 0xd811);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd810), 0x2a);
        // 2A 02D4
        gbc.setState(0xcc20, 0x1929, 0xabb0, 0xe4d9, 0x6e96, 0xf0d1, 0x1, 0x0);
        gbc.writeMem(0xcc20, { 0x2a });
        gbc.writeMem(0xf0d1, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x1929);
        EXPECT(gbc.pc(), 0xcc21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc20), 0x2a);
        EXPECT(gbc.readMem(0xf0d1), 0x50);
        // 2A 02D5
        gbc.setState(0x87f9, 0x1f62, 0x600, 0xd989, 0x7e1f, 0xca22, 0x1, 0x0);
        gbc.writeMem(0x87f9, { 0x2a });
        gbc.writeMem(0xca22, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1f62);
        EXPECT(gbc.pc(), 0x87fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87f9), 0x2a);
        EXPECT(gbc.readMem(0xca22), 0x32);
        // 2A 02D6
        gbc.setState(0x90eb, 0x30ae, 0xe660, 0xc80b, 0x10ba, 0x2275, 0x0, 0x1);
        gbc.writeMem(0x2275, { 0xe });
        gbc.writeMem(0x90eb, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x30ae);
        EXPECT(gbc.pc(), 0x90ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90eb), 0x2a);
        // 2A 02D7
        gbc.setState(0x11dc, 0x54a8, 0x1e20, 0x562e, 0xfc78, 0xd7bb, 0x0, 0x1);
        gbc.writeMem(0x11dc, { 0x2a });
        gbc.writeMem(0xd7bb, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x54a8);
        EXPECT(gbc.pc(), 0x11dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7bb), 0xd);
        // 2A 02D8
        gbc.setState(0x5f64, 0xf221, 0x53d0, 0x97ec, 0x15ea, 0xfda6, 0x1, 0x0);
        gbc.writeMem(0x5f64, { 0x2a });
        gbc.writeMem(0xfda6, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf221);
        EXPECT(gbc.pc(), 0x5f65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfda6), 0x2c);
        // 2A 02D9
        gbc.setState(0x9da9, 0x4c25, 0x1540, 0x6b7b, 0x1f1e, 0xd805, 0x0, 0x0);
        gbc.writeMem(0x9da9, { 0x2a });
        gbc.writeMem(0xd805, { 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4c25);
        EXPECT(gbc.pc(), 0x9daa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9da9), 0x2a);
        EXPECT(gbc.readMem(0xd805), 0xb7);
        // 2A 02DA
        gbc.setState(0x366c, 0x1383, 0xd2f0, 0xb1bb, 0xdb6f, 0xf648, 0x1, 0x0);
        gbc.writeMem(0x366c, { 0x2a });
        gbc.writeMem(0xf648, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x1383);
        EXPECT(gbc.pc(), 0x366d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf648), 0xb);
        // 2A 02DC
        gbc.setState(0xc311, 0x9ede, 0x2ef0, 0x6a54, 0x9551, 0x7aee, 0x0, 0x1);
        gbc.writeMem(0x7aee, { 0x7b });
        gbc.writeMem(0xc311, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9ede);
        EXPECT(gbc.pc(), 0xc312);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc311), 0x2a);
        // 2A 02DD
        gbc.setState(0x992a, 0xe7ed, 0x4450, 0xc60a, 0x6bad, 0xe060, 0x1, 0x1);
        gbc.writeMem(0x992a, { 0x2a });
        gbc.writeMem(0xe060, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe7ed);
        EXPECT(gbc.pc(), 0x992b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x992a), 0x2a);
        EXPECT(gbc.readMem(0xe060), 0xd8);
        // 2A 02DE
        gbc.setState(0x90c4, 0xeb69, 0xbc90, 0xa18c, 0x88b5, 0xf3cb, 0x0, 0x1);
        gbc.writeMem(0x90c4, { 0x2a });
        gbc.writeMem(0xf3cb, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xeb69);
        EXPECT(gbc.pc(), 0x90c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c4), 0x2a);
        EXPECT(gbc.readMem(0xf3cb), 0x70);
        // 2A 02DF
        gbc.setState(0x72c6, 0x1f9, 0x8ae0, 0x6dfb, 0x4113, 0xaec9, 0x0, 0x1);
        gbc.writeMem(0x72c6, { 0x2a });
        gbc.writeMem(0xaec9, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1f9);
        EXPECT(gbc.pc(), 0x72c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaec9), 0x6e);
        // 2A 02E0
        gbc.setState(0x1919, 0xa7b6, 0x2cb0, 0x4c7f, 0xa712, 0x628c, 0x1, 0x0);
        gbc.writeMem(0x1919, { 0x2a });
        gbc.writeMem(0x628c, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa7b6);
        EXPECT(gbc.pc(), 0x191a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 02E1
        gbc.setState(0xa5b, 0x8f65, 0x11a0, 0xc3de, 0xb2a1, 0x3c44, 0x1, 0x1);
        gbc.writeMem(0xa5b, { 0x2a });
        gbc.writeMem(0x3c44, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8f65);
        EXPECT(gbc.pc(), 0xa5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 02E2
        gbc.setState(0xaa41, 0x3e01, 0x5130, 0x289f, 0x8386, 0x2786, 0x1, 0x0);
        gbc.writeMem(0x2786, { 0x89 });
        gbc.writeMem(0xaa41, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3e01);
        EXPECT(gbc.pc(), 0xaa42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa41), 0x2a);
        // 2A 02E3
        gbc.setState(0x25fe, 0x526d, 0xa260, 0x947f, 0x832f, 0x67c7, 0x0, 0x0);
        gbc.writeMem(0x25fe, { 0x2a });
        gbc.writeMem(0x67c7, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x526d);
        EXPECT(gbc.pc(), 0x25ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 02E4
        gbc.setState(0x17d5, 0x32ba, 0x7350, 0xa8d5, 0x3d2a, 0xa5d9, 0x1, 0x1);
        gbc.writeMem(0x17d5, { 0x2a });
        gbc.writeMem(0xa5d9, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x32ba);
        EXPECT(gbc.pc(), 0x17d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5d9), 0x16);
        // 2A 02E5
        gbc.setState(0xd4ab, 0x8f85, 0xe890, 0x5fb0, 0x9f07, 0xe533, 0x1, 0x1);
        gbc.writeMem(0xd4ab, { 0x2a });
        gbc.writeMem(0xe533, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8f85);
        EXPECT(gbc.pc(), 0xd4ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4ab), 0x2a);
        EXPECT(gbc.readMem(0xe533), 0x50);
        // 2A 02E6
        gbc.setState(0x396b, 0x3430, 0xfde0, 0x43ef, 0xa5b7, 0x1e54, 0x1, 0x0);
        gbc.writeMem(0x1e54, { 0x35 });
        gbc.writeMem(0x396b, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x3430);
        EXPECT(gbc.pc(), 0x396c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 02E7
        gbc.setState(0x3d64, 0x993d, 0x65f0, 0x8d4b, 0x5988, 0xa5c7, 0x0, 0x1);
        gbc.writeMem(0x3d64, { 0x2a });
        gbc.writeMem(0xa5c7, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x993d);
        EXPECT(gbc.pc(), 0x3d65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5c7), 0xda);
        // 2A 02E8
        gbc.setState(0x450c, 0x8d5e, 0x5260, 0x3d0d, 0x2f56, 0xf34a, 0x1, 0x1);
        gbc.writeMem(0x450c, { 0x2a });
        gbc.writeMem(0xf34a, { 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8d5e);
        EXPECT(gbc.pc(), 0x450d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf34a), 0x1d);
        // 2A 02E9
        gbc.setState(0x1d48, 0x411, 0x56d0, 0xb5fd, 0x8ba9, 0xe810, 0x1, 0x1);
        gbc.writeMem(0x1d48, { 0x2a });
        gbc.writeMem(0xe810, { 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x411);
        EXPECT(gbc.pc(), 0x1d49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe810), 0x4);
        // 2A 02EA
        gbc.setState(0x38fe, 0xe9ef, 0x6620, 0x1434, 0xd0d0, 0xa6ab, 0x0, 0x1);
        gbc.writeMem(0x38fe, { 0x2a });
        gbc.writeMem(0xa6ab, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe9ef);
        EXPECT(gbc.pc(), 0x38ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ab), 0x10);
        // 2A 02EB
        gbc.setState(0x9867, 0x67c, 0x6690, 0x1584, 0x4b80, 0xbffd, 0x0, 0x1);
        gbc.writeMem(0x9867, { 0x2a });
        gbc.writeMem(0xbffd, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x67c);
        EXPECT(gbc.pc(), 0x9868);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9867), 0x2a);
        EXPECT(gbc.readMem(0xbffd), 0x1f);
        // 2A 02EC
        gbc.setState(0xd857, 0x3da5, 0xe3c0, 0x828b, 0xad57, 0x7745, 0x1, 0x1);
        gbc.writeMem(0x7745, { 0xd5 });
        gbc.writeMem(0xd857, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3da5);
        EXPECT(gbc.pc(), 0xd858);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd857), 0x2a);
        // 2A 02ED
        gbc.setState(0x5840, 0xc715, 0xa740, 0xa848, 0x7971, 0x1492, 0x1, 0x1);
        gbc.writeMem(0x1492, { 0xac });
        gbc.writeMem(0x5840, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xc715);
        EXPECT(gbc.pc(), 0x5841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 02EE
        gbc.setState(0x9504, 0xcedb, 0x2c60, 0x20c3, 0x17b3, 0x49f5, 0x0, 0x0);
        gbc.writeMem(0x49f5, { 0xf1 });
        gbc.writeMem(0x9504, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xcedb);
        EXPECT(gbc.pc(), 0x9505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9504), 0x2a);
        // 2A 02EF
        gbc.setState(0xe98c, 0x3fe5, 0xe0b0, 0x5516, 0x4b32, 0xc714, 0x1, 0x0);
        gbc.writeMem(0xc714, { 0x5e });
        gbc.writeMem(0xe98c, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3fe5);
        EXPECT(gbc.pc(), 0xe98d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc714), 0x5e);
        EXPECT(gbc.readMem(0xe98c), 0x2a);
        // 2A 02F0
        gbc.setState(0x5853, 0x8986, 0x4d50, 0xd0e6, 0x530c, 0xb833, 0x1, 0x1);
        gbc.writeMem(0x5853, { 0x2a });
        gbc.writeMem(0xb833, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8986);
        EXPECT(gbc.pc(), 0x5854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb833), 0xf8);
        // 2A 02F1
        gbc.setState(0x4fcb, 0x6606, 0x47b0, 0x7e3a, 0xb71d, 0xa116, 0x0, 0x0);
        gbc.writeMem(0x4fcb, { 0x2a });
        gbc.writeMem(0xa116, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6606);
        EXPECT(gbc.pc(), 0x4fcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa116), 0xfd);
        // 2A 02F2
        gbc.setState(0x7bf0, 0xb71, 0x4410, 0x7018, 0xc14b, 0x88bc, 0x0, 0x1);
        gbc.writeMem(0x7bf0, { 0x2a });
        gbc.writeMem(0x88bc, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb71);
        EXPECT(gbc.pc(), 0x7bf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88bc), 0xd7);
        // 2A 02F3
        gbc.setState(0x88f1, 0xabf4, 0x52e0, 0x1339, 0x9f3a, 0x74d7, 0x1, 0x0);
        gbc.writeMem(0x74d7, { 0x94 });
        gbc.writeMem(0x88f1, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xabf4);
        EXPECT(gbc.pc(), 0x88f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88f1), 0x2a);
        // 2A 02F4
        gbc.setState(0x12df, 0xd796, 0x7b60, 0x6c63, 0xda9c, 0x7d0d, 0x1, 0x0);
        gbc.writeMem(0x12df, { 0x2a });
        gbc.writeMem(0x7d0d, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd796);
        EXPECT(gbc.pc(), 0x12e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 02F5
        gbc.setState(0xcc0b, 0x8d36, 0x5fb0, 0x1e0c, 0x1526, 0x81f3, 0x0, 0x1);
        gbc.writeMem(0x81f3, { 0x1e });
        gbc.writeMem(0xcc0b, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8d36);
        EXPECT(gbc.pc(), 0xcc0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81f3), 0x1e);
        EXPECT(gbc.readMem(0xcc0b), 0x2a);
        // 2A 02F6
        gbc.setState(0xa3f9, 0xc8ab, 0xb4e0, 0x81c0, 0x5e85, 0xfb97, 0x1, 0x1);
        gbc.writeMem(0xa3f9, { 0x2a });
        gbc.writeMem(0xfb97, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc8ab);
        EXPECT(gbc.pc(), 0xa3fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3f9), 0x2a);
        EXPECT(gbc.readMem(0xfb97), 0xe8);
        // 2A 02F7
        gbc.setState(0x92a2, 0x4207, 0x2f80, 0xd7db, 0xfec2, 0xccc8, 0x0, 0x0);
        gbc.writeMem(0x92a2, { 0x2a });
        gbc.writeMem(0xccc8, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4207);
        EXPECT(gbc.pc(), 0x92a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92a2), 0x2a);
        EXPECT(gbc.readMem(0xccc8), 0x75);
        // 2A 02F8
        gbc.setState(0xa4b2, 0x1237, 0xf0, 0xdbed, 0x305b, 0x7d2c, 0x1, 0x0);
        gbc.writeMem(0x7d2c, { 0x44 });
        gbc.writeMem(0xa4b2, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1237);
        EXPECT(gbc.pc(), 0xa4b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4b2), 0x2a);
        // 2A 02F9
        gbc.setState(0xdd65, 0xe948, 0x3b80, 0x4542, 0x7f7, 0x7ecc, 0x1, 0x1);
        gbc.writeMem(0x7ecc, { 0x6 });
        gbc.writeMem(0xdd65, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe948);
        EXPECT(gbc.pc(), 0xdd66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd65), 0x2a);
        // 2A 02FA
        gbc.setState(0x3f50, 0x269e, 0x770, 0xef72, 0x4ff3, 0x4bba, 0x1, 0x1);
        gbc.writeMem(0x3f50, { 0x2a });
        gbc.writeMem(0x4bba, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x269e);
        EXPECT(gbc.pc(), 0x3f51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 02FB
        gbc.setState(0x2fe2, 0x318c, 0xfb90, 0x894f, 0x6e2f, 0xda09, 0x0, 0x1);
        gbc.writeMem(0x2fe2, { 0x2a });
        gbc.writeMem(0xda09, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x318c);
        EXPECT(gbc.pc(), 0x2fe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda09), 0x9d);
        // 2A 02FC
        gbc.setState(0x5418, 0x531b, 0x92b0, 0x2bc6, 0x20d6, 0x8ff2, 0x1, 0x0);
        gbc.writeMem(0x5418, { 0x2a });
        gbc.writeMem(0x8ff2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x531b);
        EXPECT(gbc.pc(), 0x5419);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ff2), 0x0);
        // 2A 02FD
        gbc.setState(0x1d90, 0x78f1, 0xdaa0, 0x9b69, 0x5010, 0x837e, 0x1, 0x1);
        gbc.writeMem(0x1d90, { 0x2a });
        gbc.writeMem(0x837e, { 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x78f1);
        EXPECT(gbc.pc(), 0x1d91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x837e), 0xa1);
        // 2A 02FE
        gbc.setState(0x69fa, 0xdbaa, 0x8370, 0xefa5, 0x7d1e, 0xdef4, 0x0, 0x0);
        gbc.writeMem(0x69fa, { 0x2a });
        gbc.writeMem(0xdef4, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xdbaa);
        EXPECT(gbc.pc(), 0x69fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdef4), 0xee);
        // 2A 02FF
        gbc.setState(0xa010, 0xd411, 0x2d0, 0x96b8, 0xdbff, 0x3ce0, 0x0, 0x1);
        gbc.writeMem(0x3ce0, { 0x70 });
        gbc.writeMem(0xa010, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd411);
        EXPECT(gbc.pc(), 0xa011);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa010), 0x2a);
        // 2A 0300
        gbc.setState(0x2feb, 0x3591, 0x6180, 0x3f4f, 0x92cd, 0xf4b7, 0x1, 0x1);
        gbc.writeMem(0x2feb, { 0x2a });
        gbc.writeMem(0xf4b7, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x3591);
        EXPECT(gbc.pc(), 0x2fec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf4b7), 0xa0);
        // 2A 0301
        gbc.setState(0x6d76, 0xd113, 0x8e10, 0xf052, 0x5aa, 0xec60, 0x1, 0x0);
        gbc.writeMem(0x6d76, { 0x2a });
        gbc.writeMem(0xec60, { 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd113);
        EXPECT(gbc.pc(), 0x6d77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec60), 0xa7);
        // 2A 0302
        gbc.setState(0x2718, 0x3d4c, 0x4c30, 0xfe2c, 0x50ec, 0xa2b8, 0x1, 0x0);
        gbc.writeMem(0x2718, { 0x2a });
        gbc.writeMem(0xa2b8, { 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x3d4c);
        EXPECT(gbc.pc(), 0x2719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2b8), 0xc4);
        // 2A 0303
        gbc.setState(0x8657, 0x8c9f, 0x1850, 0x7d8d, 0x90e9, 0xaacf, 0x1, 0x0);
        gbc.writeMem(0x8657, { 0x2a });
        gbc.writeMem(0xaacf, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x8c9f);
        EXPECT(gbc.pc(), 0x8658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8657), 0x2a);
        EXPECT(gbc.readMem(0xaacf), 0x2e);
        // 2A 0304
        gbc.setState(0x211d, 0x176c, 0x4300, 0x291, 0x3af6, 0x9c51, 0x0, 0x1);
        gbc.writeMem(0x211d, { 0x2a });
        gbc.writeMem(0x9c51, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x176c);
        EXPECT(gbc.pc(), 0x211e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c51), 0x51);
        // 2A 0305
        gbc.setState(0x3ad6, 0x308b, 0xa3f0, 0x4ae9, 0xa7fe, 0x12d1, 0x0, 0x1);
        gbc.writeMem(0x12d1, { 0xd7 });
        gbc.writeMem(0x3ad6, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x308b);
        EXPECT(gbc.pc(), 0x3ad7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0306
        gbc.setState(0xd4b1, 0x1bf2, 0x8f40, 0x9367, 0x3dbb, 0xf11b, 0x1, 0x0);
        gbc.writeMem(0xd4b1, { 0x2a });
        gbc.writeMem(0xf11b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1bf2);
        EXPECT(gbc.pc(), 0xd4b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4b1), 0x2a);
        EXPECT(gbc.readMem(0xf11b), 0x29);
        // 2A 0307
        gbc.setState(0xb511, 0x7a4, 0x3990, 0x438b, 0x5854, 0xb6d7, 0x1, 0x1);
        gbc.writeMem(0xb511, { 0x2a });
        gbc.writeMem(0xb6d7, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7a4);
        EXPECT(gbc.pc(), 0xb512);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb511), 0x2a);
        EXPECT(gbc.readMem(0xb6d7), 0x2e);
        // 2A 0308
        gbc.setState(0x9801, 0xb83, 0x6390, 0xd5a3, 0xe40, 0x44a2, 0x1, 0x0);
        gbc.writeMem(0x44a2, { 0x7 });
        gbc.writeMem(0x9801, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb83);
        EXPECT(gbc.pc(), 0x9802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9801), 0x2a);
        // 2A 0309
        gbc.setState(0x2c9, 0xe978, 0x3370, 0xe1d9, 0x8335, 0xe266, 0x0, 0x0);
        gbc.writeMem(0x2c9, { 0x2a });
        gbc.writeMem(0xe266, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe978);
        EXPECT(gbc.pc(), 0x2ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe266), 0xcd);
        // 2A 030A
        gbc.setState(0x9ec6, 0x773, 0x82c0, 0x312c, 0x2f6b, 0x95a5, 0x1, 0x0);
        gbc.writeMem(0x95a5, { 0x41 });
        gbc.writeMem(0x9ec6, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x773);
        EXPECT(gbc.pc(), 0x9ec7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95a5), 0x41);
        EXPECT(gbc.readMem(0x9ec6), 0x2a);
        // 2A 030B
        gbc.setState(0x1911, 0xf616, 0x2620, 0x5013, 0x6ccc, 0xd58c, 0x0, 0x0);
        gbc.writeMem(0x1911, { 0x2a });
        gbc.writeMem(0xd58c, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf616);
        EXPECT(gbc.pc(), 0x1912);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd58c), 0x7a);
        // 2A 030C
        gbc.setState(0xc1ef, 0x3bcf, 0x4c90, 0x422a, 0xd49e, 0x46f, 0x1, 0x0);
        gbc.writeMem(0x46f, { 0x8c });
        gbc.writeMem(0xc1ef, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3bcf);
        EXPECT(gbc.pc(), 0xc1f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1ef), 0x2a);
        // 2A 030D
        gbc.setState(0x2bc8, 0x4b38, 0x47d0, 0x31f0, 0xb80d, 0x7810, 0x1, 0x0);
        gbc.writeMem(0x2bc8, { 0x2a });
        gbc.writeMem(0x7810, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4b38);
        EXPECT(gbc.pc(), 0x2bc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 030E
        gbc.setState(0x159b, 0x7624, 0xe90, 0x73fa, 0x920e, 0x9e5e, 0x1, 0x1);
        gbc.writeMem(0x159b, { 0x2a });
        gbc.writeMem(0x9e5e, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x7624);
        EXPECT(gbc.pc(), 0x159c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e5e), 0x9);
        // 2A 030F
        gbc.setState(0x618a, 0x9581, 0x9bf0, 0x544e, 0xc01d, 0x2c5c, 0x1, 0x0);
        gbc.writeMem(0x2c5c, { 0x6e });
        gbc.writeMem(0x618a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x9581);
        EXPECT(gbc.pc(), 0x618b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0310
        gbc.setState(0xe499, 0x4ae8, 0x8f50, 0x7ec6, 0x5b2c, 0xf2e3, 0x0, 0x1);
        gbc.writeMem(0xe499, { 0x2a });
        gbc.writeMem(0xf2e3, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4ae8);
        EXPECT(gbc.pc(), 0xe49a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe499), 0x2a);
        EXPECT(gbc.readMem(0xf2e3), 0xb4);
        // 2A 0311
        gbc.setState(0x9923, 0x3964, 0xf3a0, 0x4826, 0xbc19, 0xa9cd, 0x0, 0x0);
        gbc.writeMem(0x9923, { 0x2a });
        gbc.writeMem(0xa9cd, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3964);
        EXPECT(gbc.pc(), 0x9924);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9923), 0x2a);
        EXPECT(gbc.readMem(0xa9cd), 0x15);
        // 2A 0312
        gbc.setState(0x68d2, 0xc7e6, 0xc830, 0xa58b, 0xe5a7, 0x441a, 0x0, 0x1);
        gbc.writeMem(0x441a, { 0x18 });
        gbc.writeMem(0x68d2, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc7e6);
        EXPECT(gbc.pc(), 0x68d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0313
        gbc.setState(0xe24f, 0xed77, 0x2450, 0x8e9d, 0x61a2, 0x6168, 0x0, 0x1);
        gbc.writeMem(0x6168, { 0x1d });
        gbc.writeMem(0xe24f, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xed77);
        EXPECT(gbc.pc(), 0xe250);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe24f), 0x2a);
        // 2A 0315
        gbc.setState(0x28fd, 0x1b70, 0x3c10, 0x35b8, 0x4320, 0xe795, 0x0, 0x0);
        gbc.writeMem(0x28fd, { 0x2a });
        gbc.writeMem(0xe795, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1b70);
        EXPECT(gbc.pc(), 0x28fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe795), 0x80);
        // 2A 0317
        gbc.setState(0xeea1, 0xc945, 0xda10, 0x4edc, 0x90b7, 0xf457, 0x1, 0x0);
        gbc.writeMem(0xeea1, { 0x2a });
        gbc.writeMem(0xf457, { 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc945);
        EXPECT(gbc.pc(), 0xeea2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeea1), 0x2a);
        EXPECT(gbc.readMem(0xf457), 0xff);
        // 2A 0318
        gbc.setState(0x2509, 0x56b8, 0x86d0, 0x4d69, 0xf545, 0x9f86, 0x0, 0x0);
        gbc.writeMem(0x2509, { 0x2a });
        gbc.writeMem(0x9f86, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x56b8);
        EXPECT(gbc.pc(), 0x250a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f86), 0x10);
        // 2A 0319
        gbc.setState(0x81cb, 0x83f2, 0x130, 0x1131, 0xac0c, 0x6229, 0x0, 0x1);
        gbc.writeMem(0x6229, { 0xc4 });
        gbc.writeMem(0x81cb, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x83f2);
        EXPECT(gbc.pc(), 0x81cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81cb), 0x2a);
        // 2A 031A
        gbc.setState(0xb9e1, 0x57c8, 0xe5a0, 0xb1a7, 0x14b8, 0x739d, 0x0, 0x1);
        gbc.writeMem(0x739d, { 0x9f });
        gbc.writeMem(0xb9e1, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x57c8);
        EXPECT(gbc.pc(), 0xb9e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9e1), 0x2a);
        // 2A 031B
        gbc.setState(0x1c55, 0x15b, 0xde70, 0x316, 0xa434, 0x2efe, 0x0, 0x1);
        gbc.writeMem(0x1c55, { 0x2a });
        gbc.writeMem(0x2efe, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x15b);
        EXPECT(gbc.pc(), 0x1c56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 031C
        gbc.setState(0x2477, 0xa259, 0xcb00, 0xf535, 0x29e, 0xa8d3, 0x1, 0x1);
        gbc.writeMem(0x2477, { 0x2a });
        gbc.writeMem(0xa8d3, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa259);
        EXPECT(gbc.pc(), 0x2478);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8d3), 0x9e);
        // 2A 031D
        gbc.setState(0x33f, 0x573, 0xe1f0, 0x8842, 0xe31b, 0x43c7, 0x1, 0x0);
        gbc.writeMem(0x33f, { 0x2a });
        gbc.writeMem(0x43c7, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x573);
        EXPECT(gbc.pc(), 0x340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 031E
        gbc.setState(0x4ba0, 0x3115, 0x3560, 0x844e, 0x8501, 0xf355, 0x0, 0x1);
        gbc.writeMem(0x4ba0, { 0x2a });
        gbc.writeMem(0xf355, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x3115);
        EXPECT(gbc.pc(), 0x4ba1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf355), 0xab);
        // 2A 031F
        gbc.setState(0x19d6, 0xc730, 0xdf20, 0x2ce5, 0xd13b, 0x3be8, 0x0, 0x0);
        gbc.writeMem(0x19d6, { 0x2a });
        gbc.writeMem(0x3be8, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc730);
        EXPECT(gbc.pc(), 0x19d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 0320
        gbc.setState(0x324b, 0x1455, 0x40b0, 0xf34, 0x6776, 0xc706, 0x1, 0x0);
        gbc.writeMem(0x324b, { 0x2a });
        gbc.writeMem(0xc706, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1455);
        EXPECT(gbc.pc(), 0x324c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc706), 0x7);
        // 2A 0321
        gbc.setState(0xa692, 0x1955, 0x6130, 0x20f1, 0x81a0, 0xf416, 0x1, 0x0);
        gbc.writeMem(0xa692, { 0x2a });
        gbc.writeMem(0xf416, { 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x1955);
        EXPECT(gbc.pc(), 0xa693);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa692), 0x2a);
        EXPECT(gbc.readMem(0xf416), 0x76);
        // 2A 0322
        gbc.setState(0xa387, 0xa12, 0x5f70, 0x785c, 0xe4e0, 0xc9a4, 0x1, 0x1);
        gbc.writeMem(0xa387, { 0x2a });
        gbc.writeMem(0xc9a4, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xa12);
        EXPECT(gbc.pc(), 0xa388);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa387), 0x2a);
        EXPECT(gbc.readMem(0xc9a4), 0x7b);
        // 2A 0323
        gbc.setState(0xcffd, 0x6d11, 0xa740, 0x3831, 0xca18, 0x11d1, 0x0, 0x0);
        gbc.writeMem(0x11d1, { 0x35 });
        gbc.writeMem(0xcffd, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6d11);
        EXPECT(gbc.pc(), 0xcffe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcffd), 0x2a);
        // 2A 0325
        gbc.setState(0x7047, 0xea17, 0xf7c0, 0xb27b, 0x70e4, 0xad8, 0x1, 0x0);
        gbc.writeMem(0xad8, { 0xd7 });
        gbc.writeMem(0x7047, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xea17);
        EXPECT(gbc.pc(), 0x7048);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0326
        gbc.setState(0xc792, 0x58cb, 0x1a60, 0xa135, 0x5477, 0x12a6, 0x0, 0x0);
        gbc.writeMem(0x12a6, { 0x88 });
        gbc.writeMem(0xc792, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x58cb);
        EXPECT(gbc.pc(), 0xc793);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc792), 0x2a);
        // 2A 0327
        gbc.setState(0x7f43, 0xc35e, 0xa530, 0x8f5a, 0x26b9, 0x6ebf, 0x0, 0x0);
        gbc.writeMem(0x6ebf, { 0x9a });
        gbc.writeMem(0x7f43, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc35e);
        EXPECT(gbc.pc(), 0x7f44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0328
        gbc.setState(0x694f, 0xa88, 0xed70, 0xe162, 0xde84, 0x62d3, 0x1, 0x1);
        gbc.writeMem(0x62d3, { 0x83 });
        gbc.writeMem(0x694f, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa88);
        EXPECT(gbc.pc(), 0x6950);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0329
        gbc.setState(0xa79c, 0xc225, 0xae30, 0xd683, 0xe1df, 0xa492, 0x1, 0x1);
        gbc.writeMem(0xa492, { 0xa1 });
        gbc.writeMem(0xa79c, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xc225);
        EXPECT(gbc.pc(), 0xa79d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa492), 0xa1);
        EXPECT(gbc.readMem(0xa79c), 0x2a);
        // 2A 032A
        gbc.setState(0x8a79, 0xd646, 0x2860, 0x14c1, 0x5566, 0xc18f, 0x1, 0x1);
        gbc.writeMem(0x8a79, { 0x2a });
        gbc.writeMem(0xc18f, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xd646);
        EXPECT(gbc.pc(), 0x8a7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a79), 0x2a);
        EXPECT(gbc.readMem(0xc18f), 0x80);
        // 2A 032B
        gbc.setState(0x4c7f, 0x306f, 0x1a0, 0x4aaa, 0x9a76, 0xadb8, 0x0, 0x1);
        gbc.writeMem(0x4c7f, { 0x2a });
        gbc.writeMem(0xadb8, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x306f);
        EXPECT(gbc.pc(), 0x4c80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadb8), 0xc6);
        // 2A 032C
        gbc.setState(0xd7bb, 0xffcf, 0x9fc0, 0x2fe1, 0x4c06, 0x99ea, 0x0, 0x0);
        gbc.writeMem(0x99ea, { 0x4 });
        gbc.writeMem(0xd7bb, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xffcf);
        EXPECT(gbc.pc(), 0xd7bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ea), 0x4);
        EXPECT(gbc.readMem(0xd7bb), 0x2a);
        // 2A 032D
        gbc.setState(0x6537, 0x89f1, 0xc560, 0x59dd, 0xb836, 0x3391, 0x1, 0x0);
        gbc.writeMem(0x3391, { 0xd });
        gbc.writeMem(0x6537, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x89f1);
        EXPECT(gbc.pc(), 0x6538);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 032E
        gbc.setState(0xd152, 0x3c66, 0x9da0, 0x64f1, 0xa17f, 0x8676, 0x0, 0x0);
        gbc.writeMem(0x8676, { 0xf2 });
        gbc.writeMem(0xd152, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3c66);
        EXPECT(gbc.pc(), 0xd153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8676), 0xf2);
        EXPECT(gbc.readMem(0xd152), 0x2a);
        // 2A 032F
        gbc.setState(0xe5ec, 0x5f03, 0x6b50, 0x4b1c, 0x1b9f, 0xe631, 0x1, 0x1);
        gbc.writeMem(0xe5ec, { 0x2a });
        gbc.writeMem(0xe631, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5f03);
        EXPECT(gbc.pc(), 0xe5ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5ec), 0x2a);
        EXPECT(gbc.readMem(0xe631), 0xaf);
        // 2A 0330
        gbc.setState(0x732c, 0x2c6f, 0x6ce0, 0x7ffa, 0x3616, 0xf95a, 0x0, 0x0);
        gbc.writeMem(0x732c, { 0x2a });
        gbc.writeMem(0xf95a, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x2c6f);
        EXPECT(gbc.pc(), 0x732d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf95a), 0x83);
        // 2A 0331
        gbc.setState(0x6130, 0xbf9f, 0x1010, 0x72c1, 0xa106, 0x7c1b, 0x1, 0x1);
        gbc.writeMem(0x6130, { 0x2a });
        gbc.writeMem(0x7c1b, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xbf9f);
        EXPECT(gbc.pc(), 0x6131);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0333
        gbc.setState(0x36a2, 0x4e0f, 0x6a90, 0x9f4b, 0xeb74, 0xa66d, 0x0, 0x1);
        gbc.writeMem(0x36a2, { 0x2a });
        gbc.writeMem(0xa66d, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4e0f);
        EXPECT(gbc.pc(), 0x36a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa66d), 0xfc);
        // 2A 0334
        gbc.setState(0x9908, 0x813, 0x4e40, 0x180e, 0xc248, 0xf4a9, 0x1, 0x0);
        gbc.writeMem(0x9908, { 0x2a });
        gbc.writeMem(0xf4a9, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x813);
        EXPECT(gbc.pc(), 0x9909);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9908), 0x2a);
        EXPECT(gbc.readMem(0xf4a9), 0x94);
        // 2A 0335
        gbc.setState(0x573, 0xc4fe, 0x60e0, 0xb8d4, 0x5a83, 0xd66e, 0x0, 0x1);
        gbc.writeMem(0x573, { 0x2a });
        gbc.writeMem(0xd66e, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc4fe);
        EXPECT(gbc.pc(), 0x574);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd66e), 0x34);
        // 2A 0336
        gbc.setState(0x1458, 0x842b, 0x110, 0xca4d, 0x2335, 0x40b7, 0x0, 0x1);
        gbc.writeMem(0x1458, { 0x2a });
        gbc.writeMem(0x40b7, { 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x842b);
        EXPECT(gbc.pc(), 0x1459);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0337
        gbc.setState(0x36b9, 0xc6c2, 0xb5b0, 0xed5, 0xd139, 0xbb82, 0x1, 0x0);
        gbc.writeMem(0x36b9, { 0x2a });
        gbc.writeMem(0xbb82, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc6c2);
        EXPECT(gbc.pc(), 0x36ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb82), 0x73);
        // 2A 0338
        gbc.setState(0x4112, 0xb717, 0xbac0, 0x6749, 0x6ee2, 0x54a8, 0x1, 0x0);
        gbc.writeMem(0x4112, { 0x2a });
        gbc.writeMem(0x54a8, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xb717);
        EXPECT(gbc.pc(), 0x4113);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 033A
        gbc.setState(0x4c7f, 0x718d, 0xca60, 0xbcc2, 0x34ec, 0x407a, 0x1, 0x1);
        gbc.writeMem(0x407a, { 0xf5 });
        gbc.writeMem(0x4c7f, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x718d);
        EXPECT(gbc.pc(), 0x4c80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 033B
        gbc.setState(0x3c95, 0xafe, 0x92b0, 0x2e9, 0xf9af, 0xba9, 0x1, 0x1);
        gbc.writeMem(0xba9, { 0xeb });
        gbc.writeMem(0x3c95, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xafe);
        EXPECT(gbc.pc(), 0x3c96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 033C
        gbc.setState(0x4bbc, 0xc2fe, 0x3fa0, 0x659b, 0x54de, 0x10d, 0x1, 0x0);
        gbc.writeMem(0x10d, { 0x6c });
        gbc.writeMem(0x4bbc, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc2fe);
        EXPECT(gbc.pc(), 0x4bbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 033D
        gbc.setState(0xa007, 0xfb1b, 0x3b50, 0x2635, 0xe8ec, 0xfd0e, 0x1, 0x0);
        gbc.writeMem(0xa007, { 0x2a });
        gbc.writeMem(0xfd0e, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xfb1b);
        EXPECT(gbc.pc(), 0xa008);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa007), 0x2a);
        EXPECT(gbc.readMem(0xfd0e), 0x9c);
        // 2A 033E
        gbc.setState(0xe5d1, 0xa69, 0xcfa0, 0xe8ad, 0x60a3, 0x9e2, 0x0, 0x1);
        gbc.writeMem(0x9e2, { 0xe4 });
        gbc.writeMem(0xe5d1, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa69);
        EXPECT(gbc.pc(), 0xe5d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5d1), 0x2a);
        // 2A 033F
        gbc.setState(0x91f, 0xa93f, 0x5350, 0x6be8, 0x5158, 0x6548, 0x1, 0x1);
        gbc.writeMem(0x91f, { 0x2a });
        gbc.writeMem(0x6548, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa93f);
        EXPECT(gbc.pc(), 0x920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0340
        gbc.setState(0x2134, 0xdad1, 0xe1b0, 0x1fbb, 0xd2b6, 0x67fe, 0x1, 0x0);
        gbc.writeMem(0x2134, { 0x2a });
        gbc.writeMem(0x67fe, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xdad1);
        EXPECT(gbc.pc(), 0x2135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0341
        gbc.setState(0x1314, 0xe248, 0x95a0, 0xeca7, 0xfcc, 0x5345, 0x0, 0x1);
        gbc.writeMem(0x1314, { 0x2a });
        gbc.writeMem(0x5345, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe248);
        EXPECT(gbc.pc(), 0x1315);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 0342
        gbc.setState(0x3f43, 0xd6d5, 0x610, 0x98e0, 0xd238, 0x2f91, 0x0, 0x0);
        gbc.writeMem(0x2f91, { 0xf6 });
        gbc.writeMem(0x3f43, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd6d5);
        EXPECT(gbc.pc(), 0x3f44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0343
        gbc.setState(0xd721, 0x2de4, 0x41c0, 0xcb47, 0x4077, 0xaac9, 0x1, 0x1);
        gbc.writeMem(0xaac9, { 0xff });
        gbc.writeMem(0xd721, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2de4);
        EXPECT(gbc.pc(), 0xd722);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaac9), 0xff);
        EXPECT(gbc.readMem(0xd721), 0x2a);
        // 2A 0344
        gbc.setState(0x1475, 0xd65e, 0xe010, 0x65fc, 0x3f8f, 0x72f1, 0x1, 0x1);
        gbc.writeMem(0x1475, { 0x2a });
        gbc.writeMem(0x72f1, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd65e);
        EXPECT(gbc.pc(), 0x1476);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0345
        gbc.setState(0xab12, 0xbd8c, 0x52f0, 0x70ed, 0x3684, 0xb16a, 0x1, 0x1);
        gbc.writeMem(0xab12, { 0x2a });
        gbc.writeMem(0xb16a, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xbd8c);
        EXPECT(gbc.pc(), 0xab13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab12), 0x2a);
        EXPECT(gbc.readMem(0xb16a), 0x7c);
        // 2A 0346
        gbc.setState(0x469a, 0x48f9, 0x32d0, 0xb108, 0xd092, 0x8ca, 0x0, 0x1);
        gbc.writeMem(0x8ca, { 0x3d });
        gbc.writeMem(0x469a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x48f9);
        EXPECT(gbc.pc(), 0x469b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0347
        gbc.setState(0x8c1f, 0x959c, 0x66d0, 0x69c4, 0x24e6, 0x884e, 0x0, 0x0);
        gbc.writeMem(0x884e, { 0xe7 });
        gbc.writeMem(0x8c1f, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x959c);
        EXPECT(gbc.pc(), 0x8c20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x884e), 0xe7);
        EXPECT(gbc.readMem(0x8c1f), 0x2a);
        // 2A 0348
        gbc.setState(0x93f0, 0xd65a, 0x61f0, 0x744c, 0xc69f, 0x3865, 0x1, 0x0);
        gbc.writeMem(0x3865, { 0x61 });
        gbc.writeMem(0x93f0, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd65a);
        EXPECT(gbc.pc(), 0x93f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93f0), 0x2a);
        // 2A 0349
        gbc.setState(0x7f95, 0x8271, 0x90e0, 0xe78d, 0xee68, 0x1d1c, 0x1, 0x1);
        gbc.writeMem(0x1d1c, { 0x44 });
        gbc.writeMem(0x7f95, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8271);
        EXPECT(gbc.pc(), 0x7f96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 034A
        gbc.setState(0x5a88, 0xf7a1, 0x1780, 0x5bb2, 0xc04d, 0x8952, 0x0, 0x1);
        gbc.writeMem(0x5a88, { 0x2a });
        gbc.writeMem(0x8952, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf7a1);
        EXPECT(gbc.pc(), 0x5a89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8952), 0x3f);
        // 2A 034B
        gbc.setState(0x72ab, 0x4bb2, 0xa080, 0xdb3e, 0x77c9, 0xa34b, 0x0, 0x1);
        gbc.writeMem(0x72ab, { 0x2a });
        gbc.writeMem(0xa34b, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4bb2);
        EXPECT(gbc.pc(), 0x72ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa34b), 0x42);
        // 2A 034C
        gbc.setState(0x6852, 0x4307, 0x6c00, 0x581e, 0x1703, 0x3108, 0x1, 0x0);
        gbc.writeMem(0x3108, { 0x73 });
        gbc.writeMem(0x6852, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4307);
        EXPECT(gbc.pc(), 0x6853);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 034D
        gbc.setState(0xcadc, 0x9707, 0x17f0, 0x44eb, 0xcf17, 0x83ea, 0x1, 0x1);
        gbc.writeMem(0x83ea, { 0x44 });
        gbc.writeMem(0xcadc, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x9707);
        EXPECT(gbc.pc(), 0xcadd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ea), 0x44);
        EXPECT(gbc.readMem(0xcadc), 0x2a);
        // 2A 034E
        gbc.setState(0x4800, 0xcb2e, 0xf0, 0x7e3d, 0xfcb2, 0xbe10, 0x1, 0x0);
        gbc.writeMem(0x4800, { 0x2a });
        gbc.writeMem(0xbe10, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xcb2e);
        EXPECT(gbc.pc(), 0x4801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe10), 0x9e);
        // 2A 0351
        gbc.setState(0xd324, 0xde07, 0xf500, 0x9f6b, 0xd6cf, 0xc317, 0x0, 0x0);
        gbc.writeMem(0xc317, { 0x58 });
        gbc.writeMem(0xd324, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xde07);
        EXPECT(gbc.pc(), 0xd325);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc317), 0x58);
        EXPECT(gbc.readMem(0xd324), 0x2a);
        // 2A 0352
        gbc.setState(0x7ab7, 0xee02, 0x1a60, 0x675c, 0x6878, 0xbc6e, 0x1, 0x0);
        gbc.writeMem(0x7ab7, { 0x2a });
        gbc.writeMem(0xbc6e, { 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xee02);
        EXPECT(gbc.pc(), 0x7ab8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc6e), 0xe5);
        // 2A 0353
        gbc.setState(0x32f1, 0xca05, 0x3e30, 0x3eac, 0x780, 0xdbbc, 0x0, 0x1);
        gbc.writeMem(0x32f1, { 0x2a });
        gbc.writeMem(0xdbbc, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xca05);
        EXPECT(gbc.pc(), 0x32f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbbc), 0x48);
        // 2A 0354
        gbc.setState(0x1c24, 0xb7de, 0x7b80, 0x45a2, 0x8c52, 0x720c, 0x0, 0x0);
        gbc.writeMem(0x1c24, { 0x2a });
        gbc.writeMem(0x720c, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb7de);
        EXPECT(gbc.pc(), 0x1c25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0355
        gbc.setState(0xd046, 0x9f7f, 0x32c0, 0xb8b4, 0x5bf0, 0x2979, 0x0, 0x1);
        gbc.writeMem(0x2979, { 0xf9 });
        gbc.writeMem(0xd046, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9f7f);
        EXPECT(gbc.pc(), 0xd047);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd046), 0x2a);
        // 2A 0356
        gbc.setState(0xacf2, 0xdcb4, 0x1220, 0x6148, 0x6a0a, 0x75c6, 0x0, 0x0);
        gbc.writeMem(0x75c6, { 0x60 });
        gbc.writeMem(0xacf2, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xdcb4);
        EXPECT(gbc.pc(), 0xacf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacf2), 0x2a);
        // 2A 0357
        gbc.setState(0xb327, 0x2f82, 0x6eb0, 0x4b96, 0xe70, 0x4d9b, 0x0, 0x0);
        gbc.writeMem(0x4d9b, { 0x3e });
        gbc.writeMem(0xb327, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2f82);
        EXPECT(gbc.pc(), 0xb328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb327), 0x2a);
        // 2A 0358
        gbc.setState(0x3b7b, 0xdd3e, 0x98c0, 0x67a, 0xd851, 0xe02d, 0x0, 0x0);
        gbc.writeMem(0x3b7b, { 0x2a });
        gbc.writeMem(0xe02d, { 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xdd3e);
        EXPECT(gbc.pc(), 0x3b7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe02d), 0xc4);
        // 2A 0359
        gbc.setState(0xc592, 0x90ae, 0x3f10, 0x2b7e, 0xadb2, 0x3248, 0x1, 0x1);
        gbc.writeMem(0x3248, { 0xeb });
        gbc.writeMem(0xc592, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x90ae);
        EXPECT(gbc.pc(), 0xc593);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc592), 0x2a);
        // 2A 035A
        gbc.setState(0x1ea6, 0x4034, 0x38d0, 0x280f, 0x7dc8, 0xadab, 0x1, 0x0);
        gbc.writeMem(0x1ea6, { 0x2a });
        gbc.writeMem(0xadab, { 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4034);
        EXPECT(gbc.pc(), 0x1ea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadab), 0x4);
        // 2A 035B
        gbc.setState(0x550d, 0x9c85, 0x71c0, 0xa8e7, 0xc3a1, 0x6a13, 0x0, 0x0);
        gbc.writeMem(0x550d, { 0x2a });
        gbc.writeMem(0x6a13, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9c85);
        EXPECT(gbc.pc(), 0x550e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 035C
        gbc.setState(0x730e, 0x65f2, 0xd0f0, 0x6fdc, 0x87c0, 0x5483, 0x0, 0x1);
        gbc.writeMem(0x5483, { 0xa0 });
        gbc.writeMem(0x730e, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x65f2);
        EXPECT(gbc.pc(), 0x730f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 035D
        gbc.setState(0x3453, 0xb78c, 0x9740, 0x4fbc, 0x8b9c, 0x141a, 0x0, 0x1);
        gbc.writeMem(0x141a, { 0x1d });
        gbc.writeMem(0x3453, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb78c);
        EXPECT(gbc.pc(), 0x3454);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 035E
        gbc.setState(0x1469, 0xbd53, 0x3d30, 0xfe4f, 0xd9ba, 0xcfc3, 0x1, 0x0);
        gbc.writeMem(0x1469, { 0x2a });
        gbc.writeMem(0xcfc3, { 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xbd53);
        EXPECT(gbc.pc(), 0x146a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfc3), 0x1d);
        // 2A 035F
        gbc.setState(0x5f85, 0x3b8f, 0x58a0, 0xf304, 0xe4a1, 0xceba, 0x0, 0x0);
        gbc.writeMem(0x5f85, { 0x2a });
        gbc.writeMem(0xceba, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3b8f);
        EXPECT(gbc.pc(), 0x5f86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceba), 0x8a);
        // 2A 0360
        gbc.setState(0x4272, 0x9cb6, 0x1660, 0x917f, 0xd9a5, 0xff90, 0x1, 0x0);
        gbc.writeMem(0x4272, { 0x2a });
        gbc.writeMem(0xff90, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9cb6);
        EXPECT(gbc.pc(), 0x4273);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff90), 0x2a);
        // 2A 0361
        gbc.setState(0x7e6, 0x53f4, 0xdda0, 0xdfd5, 0x3692, 0xd784, 0x0, 0x0);
        gbc.writeMem(0x7e6, { 0x2a });
        gbc.writeMem(0xd784, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x53f4);
        EXPECT(gbc.pc(), 0x7e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd784), 0x9c);
        // 2A 0362
        gbc.setState(0x29fa, 0x6eb6, 0xb690, 0x665c, 0x1f4a, 0x6a0d, 0x1, 0x1);
        gbc.writeMem(0x29fa, { 0x2a });
        gbc.writeMem(0x6a0d, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6eb6);
        EXPECT(gbc.pc(), 0x29fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0363
        gbc.setState(0xaaa1, 0xf43b, 0xf0c0, 0x8568, 0xe636, 0xa7cd, 0x1, 0x0);
        gbc.writeMem(0xa7cd, { 0xec });
        gbc.writeMem(0xaaa1, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf43b);
        EXPECT(gbc.pc(), 0xaaa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7cd), 0xec);
        EXPECT(gbc.readMem(0xaaa1), 0x2a);
        // 2A 0364
        gbc.setState(0xe1c8, 0x5ca0, 0x6720, 0x1be5, 0xaeba, 0xd384, 0x0, 0x1);
        gbc.writeMem(0xd384, { 0x29 });
        gbc.writeMem(0xe1c8, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5ca0);
        EXPECT(gbc.pc(), 0xe1c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd384), 0x29);
        EXPECT(gbc.readMem(0xe1c8), 0x2a);
        // 2A 0365
        gbc.setState(0x56b7, 0x735d, 0xaf40, 0xa69, 0x70b1, 0x83ea, 0x1, 0x0);
        gbc.writeMem(0x56b7, { 0x2a });
        gbc.writeMem(0x83ea, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x735d);
        EXPECT(gbc.pc(), 0x56b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ea), 0x44);
        // 2A 0366
        gbc.setState(0xe818, 0x39c1, 0x22d0, 0x89d4, 0xab8f, 0x4b2e, 0x1, 0x1);
        gbc.writeMem(0x4b2e, { 0xe7 });
        gbc.writeMem(0xe818, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x39c1);
        EXPECT(gbc.pc(), 0xe819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe818), 0x2a);
        // 2A 0367
        gbc.setState(0x97be, 0x2de3, 0x3700, 0xa888, 0x1225, 0xf886, 0x1, 0x0);
        gbc.writeMem(0x97be, { 0x2a });
        gbc.writeMem(0xf886, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2de3);
        EXPECT(gbc.pc(), 0x97bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97be), 0x2a);
        EXPECT(gbc.readMem(0xf886), 0x84);
        // 2A 0368
        gbc.setState(0x2e0d, 0xa045, 0x84d0, 0x31d9, 0xbdf9, 0xa66b, 0x0, 0x1);
        gbc.writeMem(0x2e0d, { 0x2a });
        gbc.writeMem(0xa66b, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa045);
        EXPECT(gbc.pc(), 0x2e0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa66b), 0x1a);
        // 2A 0369
        gbc.setState(0xd105, 0xa01, 0x3290, 0xd042, 0x64c3, 0xcd04, 0x1, 0x0);
        gbc.writeMem(0xcd04, { 0x3a });
        gbc.writeMem(0xd105, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa01);
        EXPECT(gbc.pc(), 0xd106);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd04), 0x3a);
        EXPECT(gbc.readMem(0xd105), 0x2a);
        // 2A 036A
        gbc.setState(0xc519, 0xf731, 0xd190, 0xa871, 0x835b, 0xc9c3, 0x0, 0x0);
        gbc.writeMem(0xc519, { 0x2a });
        gbc.writeMem(0xc9c3, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf731);
        EXPECT(gbc.pc(), 0xc51a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc519), 0x2a);
        EXPECT(gbc.readMem(0xc9c3), 0xce);
        // 2A 036B
        gbc.setState(0x20f0, 0x840, 0x6a0, 0x94bf, 0x5291, 0xbaf9, 0x0, 0x0);
        gbc.writeMem(0x20f0, { 0x2a });
        gbc.writeMem(0xbaf9, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x840);
        EXPECT(gbc.pc(), 0x20f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaf9), 0x52);
        // 2A 036C
        gbc.setState(0x9e79, 0x369a, 0x79f0, 0xd445, 0xb0f1, 0x4c08, 0x0, 0x0);
        gbc.writeMem(0x4c08, { 0x6f });
        gbc.writeMem(0x9e79, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x369a);
        EXPECT(gbc.pc(), 0x9e7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e79), 0x2a);
        // 2A 036D
        gbc.setState(0x417b, 0xd11d, 0x2b60, 0x19d8, 0xa564, 0x5302, 0x0, 0x1);
        gbc.writeMem(0x417b, { 0x2a });
        gbc.writeMem(0x5302, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd11d);
        EXPECT(gbc.pc(), 0x417c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 036E
        gbc.setState(0xb792, 0xbaf8, 0xa890, 0x4d1d, 0x51c7, 0xc399, 0x0, 0x1);
        gbc.writeMem(0xb792, { 0x2a });
        gbc.writeMem(0xc399, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xbaf8);
        EXPECT(gbc.pc(), 0xb793);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb792), 0x2a);
        EXPECT(gbc.readMem(0xc399), 0x71);
        // 2A 036F
        gbc.setState(0x81ec, 0x513e, 0xef50, 0xdca9, 0x6afc, 0x30bb, 0x0, 0x1);
        gbc.writeMem(0x30bb, { 0x52 });
        gbc.writeMem(0x81ec, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x513e);
        EXPECT(gbc.pc(), 0x81ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81ec), 0x2a);
        // 2A 0370
        gbc.setState(0xc650, 0x50b1, 0xe760, 0xb59e, 0x6d39, 0x4ebb, 0x1, 0x1);
        gbc.writeMem(0x4ebb, { 0x3f });
        gbc.writeMem(0xc650, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x50b1);
        EXPECT(gbc.pc(), 0xc651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc650), 0x2a);
        // 2A 0371
        gbc.setState(0xcc2e, 0x2c0e, 0x10, 0xed36, 0xe10e, 0xf458, 0x1, 0x1);
        gbc.writeMem(0xcc2e, { 0x2a });
        gbc.writeMem(0xf458, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x2c0e);
        EXPECT(gbc.pc(), 0xcc2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc2e), 0x2a);
        EXPECT(gbc.readMem(0xf458), 0x52);
        // 2A 0373
        gbc.setState(0xc806, 0xc145, 0x6a10, 0x7a41, 0xd112, 0xb3ea, 0x0, 0x0);
        gbc.writeMem(0xb3ea, { 0xd });
        gbc.writeMem(0xc806, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc145);
        EXPECT(gbc.pc(), 0xc807);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3ea), 0xd);
        EXPECT(gbc.readMem(0xc806), 0x2a);
        // 2A 0374
        gbc.setState(0x4b80, 0xa96d, 0xbb0, 0x62af, 0x430a, 0xd27d, 0x0, 0x1);
        gbc.writeMem(0x4b80, { 0x2a });
        gbc.writeMem(0xd27d, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa96d);
        EXPECT(gbc.pc(), 0x4b81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd27d), 0xc9);
        // 2A 0375
        gbc.setState(0x856, 0x350b, 0xd520, 0xb532, 0x723c, 0x5457, 0x1, 0x1);
        gbc.writeMem(0x856, { 0x2a });
        gbc.writeMem(0x5457, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x350b);
        EXPECT(gbc.pc(), 0x857);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 0376
        gbc.setState(0xec21, 0xbddb, 0xc870, 0x9088, 0x5ea8, 0xbfd0, 0x1, 0x0);
        gbc.writeMem(0xbfd0, { 0xb2 });
        gbc.writeMem(0xec21, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbddb);
        EXPECT(gbc.pc(), 0xec22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfd0), 0xb2);
        EXPECT(gbc.readMem(0xec21), 0x2a);
        // 2A 0377
        gbc.setState(0x4fa6, 0x4b7d, 0x4e10, 0x26ae, 0xf7c3, 0x86b0, 0x0, 0x1);
        gbc.writeMem(0x4fa6, { 0x2a });
        gbc.writeMem(0x86b0, { 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4b7d);
        EXPECT(gbc.pc(), 0x4fa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86b0), 0x7d);
        // 2A 0378
        gbc.setState(0x4b31, 0x13ea, 0x39c0, 0xdae2, 0x93d1, 0x98, 0x1, 0x1);
        gbc.writeMem(0x98, { 0xba });
        gbc.writeMem(0x4b31, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x13ea);
        EXPECT(gbc.pc(), 0x4b32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 0379
        gbc.setState(0x9fd3, 0x2eee, 0xe130, 0x3e00, 0xddd7, 0xec1c, 0x1, 0x1);
        gbc.writeMem(0x9fd3, { 0x2a });
        gbc.writeMem(0xec1c, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2eee);
        EXPECT(gbc.pc(), 0x9fd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fd3), 0x2a);
        EXPECT(gbc.readMem(0xec1c), 0xef);
        // 2A 037A
        gbc.setState(0x43e4, 0x281c, 0x1cd0, 0x2b24, 0x633b, 0xee2, 0x1, 0x0);
        gbc.writeMem(0xee2, { 0x8e });
        gbc.writeMem(0x43e4, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x281c);
        EXPECT(gbc.pc(), 0x43e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 037B
        gbc.setState(0xd34c, 0xc211, 0x5980, 0xfd9a, 0x6937, 0xc91f, 0x1, 0x0);
        gbc.writeMem(0xc91f, { 0x4b });
        gbc.writeMem(0xd34c, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc211);
        EXPECT(gbc.pc(), 0xd34d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc91f), 0x4b);
        EXPECT(gbc.readMem(0xd34c), 0x2a);
        // 2A 037D
        gbc.setState(0xead1, 0x84e, 0xba20, 0x8b1f, 0x4719, 0x1706, 0x0, 0x1);
        gbc.writeMem(0x1706, { 0xdf });
        gbc.writeMem(0xead1, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x84e);
        EXPECT(gbc.pc(), 0xead2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xead1), 0x2a);
        // 2A 037E
        gbc.setState(0x168e, 0xc559, 0xf140, 0xa26c, 0xb095, 0xf019, 0x1, 0x0);
        gbc.writeMem(0x168e, { 0x2a });
        gbc.writeMem(0xf019, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc559);
        EXPECT(gbc.pc(), 0x168f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf019), 0xc2);
        // 2A 037F
        gbc.setState(0x3a1d, 0xf578, 0x5750, 0x5db8, 0x3407, 0x68da, 0x1, 0x0);
        gbc.writeMem(0x3a1d, { 0x2a });
        gbc.writeMem(0x68da, { 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf578);
        EXPECT(gbc.pc(), 0x3a1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0380
        gbc.setState(0x6f1c, 0xedb5, 0xa840, 0x9974, 0x8243, 0x9e5c, 0x0, 0x1);
        gbc.writeMem(0x6f1c, { 0x2a });
        gbc.writeMem(0x9e5c, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xedb5);
        EXPECT(gbc.pc(), 0x6f1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e5c), 0xcd);
        // 2A 0381
        gbc.setState(0xea77, 0x86a3, 0x6340, 0x8bcd, 0xf9d9, 0xdb87, 0x0, 0x0);
        gbc.writeMem(0xdb87, { 0x3e });
        gbc.writeMem(0xea77, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x86a3);
        EXPECT(gbc.pc(), 0xea78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb87), 0x3e);
        EXPECT(gbc.readMem(0xea77), 0x2a);
        // 2A 0382
        gbc.setState(0x14c2, 0xf7f, 0xfd70, 0x3d8c, 0xa103, 0xf13b, 0x0, 0x0);
        gbc.writeMem(0x14c2, { 0x2a });
        gbc.writeMem(0xf13b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf7f);
        EXPECT(gbc.pc(), 0x14c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf13b), 0x23);
        // 2A 0383
        gbc.setState(0xca66, 0x86ad, 0x5bc0, 0xe836, 0x7e6e, 0x918a, 0x1, 0x0);
        gbc.writeMem(0x918a, { 0x58 });
        gbc.writeMem(0xca66, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x86ad);
        EXPECT(gbc.pc(), 0xca67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x918a), 0x58);
        EXPECT(gbc.readMem(0xca66), 0x2a);
        // 2A 0384
        gbc.setState(0xef7d, 0x9adc, 0x42f0, 0x37b6, 0x9bb8, 0xf408, 0x0, 0x1);
        gbc.writeMem(0xef7d, { 0x2a });
        gbc.writeMem(0xf408, { 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x9adc);
        EXPECT(gbc.pc(), 0xef7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef7d), 0x2a);
        EXPECT(gbc.readMem(0xf408), 0xd4);
        // 2A 0385
        gbc.setState(0xb228, 0x20a3, 0x75b0, 0x357f, 0xc6d9, 0xbe84, 0x1, 0x1);
        gbc.writeMem(0xb228, { 0x2a });
        gbc.writeMem(0xbe84, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x20a3);
        EXPECT(gbc.pc(), 0xb229);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb228), 0x2a);
        EXPECT(gbc.readMem(0xbe84), 0x66);
        // 2A 0386
        gbc.setState(0x1534, 0xf845, 0x96e0, 0xa54f, 0x35e6, 0x91b2, 0x1, 0x1);
        gbc.writeMem(0x1534, { 0x2a });
        gbc.writeMem(0x91b2, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf845);
        EXPECT(gbc.pc(), 0x1535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91b2), 0xed);
        // 2A 0387
        gbc.setState(0x3a52, 0x7a48, 0xe410, 0x4f9e, 0x233a, 0x7948, 0x0, 0x0);
        gbc.writeMem(0x3a52, { 0x2a });
        gbc.writeMem(0x7948, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x7a48);
        EXPECT(gbc.pc(), 0x3a53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0388
        gbc.setState(0x6db1, 0xa29c, 0x9250, 0x33a4, 0x1f09, 0xce74, 0x1, 0x1);
        gbc.writeMem(0x6db1, { 0x2a });
        gbc.writeMem(0xce74, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xa29c);
        EXPECT(gbc.pc(), 0x6db2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce74), 0xee);
        // 2A 0389
        gbc.setState(0xc0f7, 0x58fb, 0xd6f0, 0x5826, 0xb056, 0x656f, 0x1, 0x0);
        gbc.writeMem(0x656f, { 0x8f });
        gbc.writeMem(0xc0f7, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x58fb);
        EXPECT(gbc.pc(), 0xc0f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0f7), 0x2a);
        // 2A 038A
        gbc.setState(0x4c52, 0xa5b5, 0x6500, 0x6856, 0x31fa, 0xa9f7, 0x0, 0x1);
        gbc.writeMem(0x4c52, { 0x2a });
        gbc.writeMem(0xa9f7, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xa5b5);
        EXPECT(gbc.pc(), 0x4c53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9f7), 0x52);
        // 2A 038B
        gbc.setState(0xd114, 0xaf51, 0xd5c0, 0xd72a, 0x7769, 0x101d, 0x0, 0x1);
        gbc.writeMem(0x101d, { 0x9e });
        gbc.writeMem(0xd114, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xaf51);
        EXPECT(gbc.pc(), 0xd115);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd114), 0x2a);
        // 2A 038C
        gbc.setState(0x93ae, 0x4e4a, 0xdea0, 0xc07f, 0xccee, 0xe9c9, 0x1, 0x0);
        gbc.writeMem(0x93ae, { 0x2a });
        gbc.writeMem(0xe9c9, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4e4a);
        EXPECT(gbc.pc(), 0x93af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93ae), 0x2a);
        EXPECT(gbc.readMem(0xe9c9), 0x37);
        // 2A 038D
        gbc.setState(0xd025, 0x3d08, 0xa3a0, 0x2508, 0xd369, 0x3fcb, 0x0, 0x0);
        gbc.writeMem(0x3fcb, { 0x21 });
        gbc.writeMem(0xd025, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x3d08);
        EXPECT(gbc.pc(), 0xd026);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd025), 0x2a);
        // 2A 038E
        gbc.setState(0xdf04, 0xb494, 0x99a0, 0xde8b, 0x1ff5, 0x6f57, 0x1, 0x1);
        gbc.writeMem(0x6f57, { 0x8b });
        gbc.writeMem(0xdf04, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb494);
        EXPECT(gbc.pc(), 0xdf05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf04), 0x2a);
        // 2A 038F
        gbc.setState(0x64b3, 0xd9e2, 0x1b50, 0x4bf0, 0xeb26, 0x47f9, 0x1, 0x0);
        gbc.writeMem(0x47f9, { 0x7e });
        gbc.writeMem(0x64b3, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd9e2);
        EXPECT(gbc.pc(), 0x64b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 0390
        gbc.setState(0x9a2c, 0xc1b6, 0x6930, 0xa77f, 0x6681, 0xcbd9, 0x1, 0x1);
        gbc.writeMem(0x9a2c, { 0x2a });
        gbc.writeMem(0xcbd9, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc1b6);
        EXPECT(gbc.pc(), 0x9a2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a2c), 0x2a);
        EXPECT(gbc.readMem(0xcbd9), 0x58);
        // 2A 0391
        gbc.setState(0xa621, 0xc0a8, 0x7bf0, 0x58c8, 0xd977, 0x3759, 0x1, 0x1);
        gbc.writeMem(0x3759, { 0x87 });
        gbc.writeMem(0xa621, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc0a8);
        EXPECT(gbc.pc(), 0xa622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa621), 0x2a);
        // 2A 0393
        gbc.setState(0xca6e, 0x1f6a, 0xb670, 0x50c, 0x901a, 0x9a38, 0x1, 0x0);
        gbc.writeMem(0x9a38, { 0x1f });
        gbc.writeMem(0xca6e, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x1f6a);
        EXPECT(gbc.pc(), 0xca6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a38), 0x1f);
        EXPECT(gbc.readMem(0xca6e), 0x2a);
        // 2A 0395
        gbc.setState(0xabd1, 0x8542, 0x9c40, 0x5cb3, 0x7007, 0x43f1, 0x1, 0x1);
        gbc.writeMem(0x43f1, { 0x46 });
        gbc.writeMem(0xabd1, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8542);
        EXPECT(gbc.pc(), 0xabd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabd1), 0x2a);
        // 2A 0396
        gbc.setState(0x23d0, 0x1393, 0x1830, 0xca25, 0x3a2, 0x7ac7, 0x1, 0x0);
        gbc.writeMem(0x23d0, { 0x2a });
        gbc.writeMem(0x7ac7, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1393);
        EXPECT(gbc.pc(), 0x23d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0398
        gbc.setState(0x4b4d, 0x2f07, 0x9d30, 0x652a, 0x2ca, 0x3842, 0x1, 0x1);
        gbc.writeMem(0x3842, { 0xed });
        gbc.writeMem(0x4b4d, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2f07);
        EXPECT(gbc.pc(), 0x4b4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 0399
        gbc.setState(0x90c8, 0xf70a, 0x1470, 0x1c26, 0xed42, 0x3777, 0x0, 0x1);
        gbc.writeMem(0x3777, { 0x3 });
        gbc.writeMem(0x90c8, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf70a);
        EXPECT(gbc.pc(), 0x90c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c8), 0x2a);
        // 2A 039A
        gbc.setState(0x8c07, 0x667b, 0x1090, 0xf193, 0x60cb, 0xf736, 0x1, 0x0);
        gbc.writeMem(0x8c07, { 0x2a });
        gbc.writeMem(0xf736, { 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x667b);
        EXPECT(gbc.pc(), 0x8c08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c07), 0x2a);
        EXPECT(gbc.readMem(0xf736), 0x3);
        // 2A 039B
        gbc.setState(0x3b8d, 0xd9c7, 0xfd10, 0xfcd3, 0x33df, 0xec6, 0x1, 0x1);
        gbc.writeMem(0xec6, { 0x69 });
        gbc.writeMem(0x3b8d, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd9c7);
        EXPECT(gbc.pc(), 0x3b8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 039C
        gbc.setState(0x7c66, 0x5468, 0x4210, 0xfdef, 0x9bd6, 0x751d, 0x0, 0x0);
        gbc.writeMem(0x751d, { 0xb7 });
        gbc.writeMem(0x7c66, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5468);
        EXPECT(gbc.pc(), 0x7c67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 039D
        gbc.setState(0x4d94, 0xab4b, 0xfd30, 0x453e, 0x6687, 0xe099, 0x0, 0x0);
        gbc.writeMem(0x4d94, { 0x2a });
        gbc.writeMem(0xe099, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xab4b);
        EXPECT(gbc.pc(), 0x4d95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe099), 0x80);
        // 2A 039E
        gbc.setState(0x1747, 0xc11b, 0x5d30, 0xc38d, 0x3f3f, 0x47a2, 0x0, 0x0);
        gbc.writeMem(0x1747, { 0x2a });
        gbc.writeMem(0x47a2, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc11b);
        EXPECT(gbc.pc(), 0x1748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 039F
        gbc.setState(0x1ab, 0xe800, 0x9d60, 0x9239, 0x100d, 0x4daa, 0x0, 0x1);
        gbc.writeMem(0x1ab, { 0x2a });
        gbc.writeMem(0x4daa, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe800);
        EXPECT(gbc.pc(), 0x1ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 03A0
        gbc.setState(0xca16, 0x2568, 0xa610, 0x8a56, 0x9dec, 0xfa88, 0x0, 0x0);
        gbc.writeMem(0xca16, { 0x2a });
        gbc.writeMem(0xfa88, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2568);
        EXPECT(gbc.pc(), 0xca17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca16), 0x2a);
        EXPECT(gbc.readMem(0xfa88), 0xf6);
        // 2A 03A1
        gbc.setState(0x3c1a, 0xacda, 0xd180, 0x990b, 0xb0bb, 0x9425, 0x0, 0x0);
        gbc.writeMem(0x3c1a, { 0x2a });
        gbc.writeMem(0x9425, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xacda);
        EXPECT(gbc.pc(), 0x3c1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9425), 0x84);
        // 2A 03A2
        gbc.setState(0x3d5d, 0x9f37, 0x4ac0, 0x5188, 0xbf6b, 0xe94f, 0x0, 0x1);
        gbc.writeMem(0x3d5d, { 0x2a });
        gbc.writeMem(0xe94f, { 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9f37);
        EXPECT(gbc.pc(), 0x3d5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe94f), 0x54);
        // 2A 03A3
        gbc.setState(0x3c66, 0xfafe, 0xe360, 0x77a0, 0x2144, 0x7878, 0x0, 0x0);
        gbc.writeMem(0x3c66, { 0x2a });
        gbc.writeMem(0x7878, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xfafe);
        EXPECT(gbc.pc(), 0x3c67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 03A6
        gbc.setState(0x903c, 0x8310, 0x5040, 0x2b19, 0x230, 0xc00c, 0x0, 0x0);
        gbc.writeMem(0x903c, { 0x2a });
        gbc.writeMem(0xc00c, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8310);
        EXPECT(gbc.pc(), 0x903d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x903c), 0x2a);
        EXPECT(gbc.readMem(0xc00c), 0x38);
        // 2A 03A7
        gbc.setState(0xab69, 0xbf21, 0x8e00, 0x6592, 0x96af, 0xeb73, 0x1, 0x1);
        gbc.writeMem(0xab69, { 0x2a });
        gbc.writeMem(0xeb73, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xbf21);
        EXPECT(gbc.pc(), 0xab6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab69), 0x2a);
        EXPECT(gbc.readMem(0xeb73), 0x80);
        // 2A 03A8
        gbc.setState(0x1933, 0xe469, 0xec70, 0x10af, 0xa714, 0x338a, 0x1, 0x1);
        gbc.writeMem(0x1933, { 0x2a });
        gbc.writeMem(0x338a, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe469);
        EXPECT(gbc.pc(), 0x1934);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 03A9
        gbc.setState(0xb96d, 0xa23d, 0x2b0, 0xad9a, 0x3342, 0x5cf1, 0x0, 0x1);
        gbc.writeMem(0x5cf1, { 0xf6 });
        gbc.writeMem(0xb96d, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa23d);
        EXPECT(gbc.pc(), 0xb96e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb96d), 0x2a);
        // 2A 03AB
        gbc.setState(0xd87b, 0x475a, 0xd0b0, 0xf9fb, 0xfb23, 0x81e1, 0x0, 0x0);
        gbc.writeMem(0x81e1, { 0x7c });
        gbc.writeMem(0xd87b, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x475a);
        EXPECT(gbc.pc(), 0xd87c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81e1), 0x7c);
        EXPECT(gbc.readMem(0xd87b), 0x2a);
        // 2A 03AC
        gbc.setState(0xcbc0, 0x7282, 0x2c60, 0xc0b6, 0xb1e4, 0xe39d, 0x0, 0x1);
        gbc.writeMem(0xcbc0, { 0x2a });
        gbc.writeMem(0xe39d, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7282);
        EXPECT(gbc.pc(), 0xcbc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbc0), 0x2a);
        EXPECT(gbc.readMem(0xe39d), 0xbd);
        // 2A 03AD
        gbc.setState(0xc6b9, 0x56c3, 0xd420, 0x917, 0xa7f8, 0xc23c, 0x1, 0x1);
        gbc.writeMem(0xc23c, { 0x59 });
        gbc.writeMem(0xc6b9, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x56c3);
        EXPECT(gbc.pc(), 0xc6ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc23c), 0x59);
        EXPECT(gbc.readMem(0xc6b9), 0x2a);
        // 2A 03AE
        gbc.setState(0xdd08, 0x3783, 0x7b40, 0xa68c, 0xf27a, 0x8d9c, 0x1, 0x0);
        gbc.writeMem(0x8d9c, { 0xab });
        gbc.writeMem(0xdd08, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3783);
        EXPECT(gbc.pc(), 0xdd09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d9c), 0xab);
        EXPECT(gbc.readMem(0xdd08), 0x2a);
        // 2A 03AF
        gbc.setState(0xe0be, 0x5ece, 0xcbf0, 0x62c2, 0x938b, 0xc540, 0x0, 0x1);
        gbc.writeMem(0xc540, { 0x98 });
        gbc.writeMem(0xe0be, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x5ece);
        EXPECT(gbc.pc(), 0xe0bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc540), 0x98);
        EXPECT(gbc.readMem(0xe0be), 0x2a);
        // 2A 03B0
        gbc.setState(0x3f22, 0x9e4c, 0x990, 0x6898, 0x496d, 0x2813, 0x0, 0x0);
        gbc.writeMem(0x2813, { 0x40 });
        gbc.writeMem(0x3f22, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9e4c);
        EXPECT(gbc.pc(), 0x3f23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 03B1
        gbc.setState(0x5d96, 0xb342, 0x6690, 0x53b6, 0xb9ec, 0xf378, 0x0, 0x0);
        gbc.writeMem(0x5d96, { 0x2a });
        gbc.writeMem(0xf378, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xb342);
        EXPECT(gbc.pc(), 0x5d97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf378), 0xaa);
        // 2A 03B2
        gbc.setState(0x6f33, 0x1255, 0xf50, 0x84bc, 0x9cf9, 0xef59, 0x1, 0x0);
        gbc.writeMem(0x6f33, { 0x2a });
        gbc.writeMem(0xef59, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1255);
        EXPECT(gbc.pc(), 0x6f34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef59), 0xf6);
        // 2A 03B3
        gbc.setState(0x5a0d, 0x6bd0, 0x1a90, 0x5106, 0xe278, 0x33c2, 0x0, 0x0);
        gbc.writeMem(0x33c2, { 0x4b });
        gbc.writeMem(0x5a0d, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x6bd0);
        EXPECT(gbc.pc(), 0x5a0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 03B4
        gbc.setState(0x44b6, 0xf303, 0xfc80, 0x227a, 0x8be4, 0x4d9, 0x1, 0x0);
        gbc.writeMem(0x4d9, { 0x10 });
        gbc.writeMem(0x44b6, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf303);
        EXPECT(gbc.pc(), 0x44b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 03B6
        gbc.setState(0xa690, 0x862, 0xc5f0, 0xfa47, 0xf0, 0x9812, 0x1, 0x0);
        gbc.writeMem(0x9812, { 0xf5 });
        gbc.writeMem(0xa690, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x862);
        EXPECT(gbc.pc(), 0xa691);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9812), 0xf5);
        EXPECT(gbc.readMem(0xa690), 0x2a);
        // 2A 03B7
        gbc.setState(0xa37, 0x3146, 0xbc70, 0xfed6, 0xec8e, 0xa4dc, 0x1, 0x0);
        gbc.writeMem(0xa37, { 0x2a });
        gbc.writeMem(0xa4dc, { 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3146);
        EXPECT(gbc.pc(), 0xa38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4dc), 0xcc);
        // 2A 03B8
        gbc.setState(0xbd50, 0x1498, 0x4cc0, 0xcc04, 0xff7c, 0x6e73, 0x0, 0x1);
        gbc.writeMem(0x6e73, { 0x9f });
        gbc.writeMem(0xbd50, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1498);
        EXPECT(gbc.pc(), 0xbd51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd50), 0x2a);
        // 2A 03B9
        gbc.setState(0xa178, 0x6796, 0xeb40, 0x64ec, 0xf0d6, 0x175b, 0x1, 0x0);
        gbc.writeMem(0x175b, { 0xd5 });
        gbc.writeMem(0xa178, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6796);
        EXPECT(gbc.pc(), 0xa179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa178), 0x2a);
        // 2A 03BA
        gbc.setState(0xa468, 0xd231, 0xa620, 0x79cb, 0x73ff, 0xd7f2, 0x1, 0x0);
        gbc.writeMem(0xa468, { 0x2a });
        gbc.writeMem(0xd7f2, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd231);
        EXPECT(gbc.pc(), 0xa469);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa468), 0x2a);
        EXPECT(gbc.readMem(0xd7f2), 0x44);
        // 2A 03BB
        gbc.setState(0x610, 0x6659, 0x43b0, 0x6bb2, 0xc525, 0x32ac, 0x1, 0x1);
        gbc.writeMem(0x610, { 0x2a });
        gbc.writeMem(0x32ac, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6659);
        EXPECT(gbc.pc(), 0x611);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 03BC
        gbc.setState(0x4f0f, 0x93ff, 0x45c0, 0xc579, 0xf808, 0x5e92, 0x0, 0x0);
        gbc.writeMem(0x4f0f, { 0x2a });
        gbc.writeMem(0x5e92, { 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x93ff);
        EXPECT(gbc.pc(), 0x4f10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 03BD
        gbc.setState(0xaaf4, 0xe3d6, 0x9720, 0x519, 0x8ce1, 0x7111, 0x1, 0x1);
        gbc.writeMem(0x7111, { 0xb1 });
        gbc.writeMem(0xaaf4, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe3d6);
        EXPECT(gbc.pc(), 0xaaf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf4), 0x2a);
        // 2A 03BE
        gbc.setState(0x35bf, 0x9ca8, 0xff90, 0xf4a, 0xd3e0, 0xf670, 0x0, 0x1);
        gbc.writeMem(0x35bf, { 0x2a });
        gbc.writeMem(0xf670, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9ca8);
        EXPECT(gbc.pc(), 0x35c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf670), 0xe6);
        // 2A 03BF
        gbc.setState(0x5aeb, 0xa312, 0xa90, 0x7ad7, 0xaff0, 0x5848, 0x0, 0x1);
        gbc.writeMem(0x5848, { 0x46 });
        gbc.writeMem(0x5aeb, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa312);
        EXPECT(gbc.pc(), 0x5aec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 03C0
        gbc.setState(0x9645, 0xbfdf, 0x3e70, 0xfe2e, 0x8aa, 0xd2c6, 0x0, 0x0);
        gbc.writeMem(0x9645, { 0x2a });
        gbc.writeMem(0xd2c6, { 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xbfdf);
        EXPECT(gbc.pc(), 0x9646);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9645), 0x2a);
        EXPECT(gbc.readMem(0xd2c6), 0x31);
        // 2A 03C2
        gbc.setState(0x735b, 0xa317, 0x70a0, 0x6747, 0x2832, 0x117d, 0x1, 0x1);
        gbc.writeMem(0x117d, { 0x32 });
        gbc.writeMem(0x735b, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa317);
        EXPECT(gbc.pc(), 0x735c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 03C3
        gbc.setState(0x2455, 0xa960, 0x8940, 0x1df9, 0xd0b7, 0x285b, 0x1, 0x1);
        gbc.writeMem(0x2455, { 0x2a });
        gbc.writeMem(0x285b, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa960);
        EXPECT(gbc.pc(), 0x2456);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 03C4
        gbc.setState(0x2f91, 0x2431, 0xd780, 0xa1ee, 0xfa8a, 0xe3d, 0x0, 0x0);
        gbc.writeMem(0xe3d, { 0x28 });
        gbc.writeMem(0x2f91, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2431);
        EXPECT(gbc.pc(), 0x2f92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 03C5
        gbc.setState(0xaaa9, 0x80ec, 0x7090, 0xcf5d, 0x6b20, 0x9f61, 0x0, 0x0);
        gbc.writeMem(0x9f61, { 0x51 });
        gbc.writeMem(0xaaa9, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x80ec);
        EXPECT(gbc.pc(), 0xaaaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f61), 0x51);
        EXPECT(gbc.readMem(0xaaa9), 0x2a);
        // 2A 03C6
        gbc.setState(0x7fd4, 0x2790, 0xbb90, 0x2416, 0x85b, 0x1730, 0x1, 0x1);
        gbc.writeMem(0x1730, { 0x88 });
        gbc.writeMem(0x7fd4, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2790);
        EXPECT(gbc.pc(), 0x7fd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 03C7
        gbc.setState(0x4157, 0xaaa3, 0x11f0, 0xf1ce, 0x81f1, 0xba8b, 0x0, 0x0);
        gbc.writeMem(0x4157, { 0x2a });
        gbc.writeMem(0xba8b, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xaaa3);
        EXPECT(gbc.pc(), 0x4158);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba8b), 0x92);
        // 2A 03C9
        gbc.setState(0xea24, 0x2003, 0xdc20, 0x6cec, 0x438b, 0xa28, 0x1, 0x1);
        gbc.writeMem(0xa28, { 0x8b });
        gbc.writeMem(0xea24, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2003);
        EXPECT(gbc.pc(), 0xea25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea24), 0x2a);
        // 2A 03CA
        gbc.setState(0xb040, 0x7ea3, 0x5530, 0xf97e, 0x2a59, 0x8964, 0x1, 0x0);
        gbc.writeMem(0x8964, { 0x9a });
        gbc.writeMem(0xb040, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x7ea3);
        EXPECT(gbc.pc(), 0xb041);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8964), 0x9a);
        EXPECT(gbc.readMem(0xb040), 0x2a);
        // 2A 03CB
        gbc.setState(0x2cb5, 0xba2f, 0xa700, 0x684b, 0xdd91, 0x3989, 0x0, 0x0);
        gbc.writeMem(0x2cb5, { 0x2a });
        gbc.writeMem(0x3989, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xba2f);
        EXPECT(gbc.pc(), 0x2cb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 03CC
        gbc.setState(0xc436, 0x93c3, 0x17d0, 0x83b5, 0xef85, 0x5453, 0x0, 0x0);
        gbc.writeMem(0x5453, { 0xda });
        gbc.writeMem(0xc436, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x93c3);
        EXPECT(gbc.pc(), 0xc437);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc436), 0x2a);
        // 2A 03CD
        gbc.setState(0x3d32, 0x2b3c, 0xaf90, 0x2f47, 0x68af, 0x37fd, 0x1, 0x1);
        gbc.writeMem(0x37fd, { 0x20 });
        gbc.writeMem(0x3d32, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2b3c);
        EXPECT(gbc.pc(), 0x3d33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 03CE
        gbc.setState(0x73d0, 0x85dd, 0x9d70, 0x55fd, 0x8abe, 0x4e03, 0x0, 0x0);
        gbc.writeMem(0x4e03, { 0x8f });
        gbc.writeMem(0x73d0, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x85dd);
        EXPECT(gbc.pc(), 0x73d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 03CF
        gbc.setState(0x642d, 0x4a9a, 0x8870, 0x88a, 0x49a5, 0x9598, 0x0, 0x1);
        gbc.writeMem(0x642d, { 0x2a });
        gbc.writeMem(0x9598, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4a9a);
        EXPECT(gbc.pc(), 0x642e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9598), 0xe3);
        // 2A 03D0
        gbc.setState(0x5b72, 0xe8f5, 0x5860, 0x88a3, 0xad47, 0x3bb0, 0x1, 0x1);
        gbc.writeMem(0x3bb0, { 0x6b });
        gbc.writeMem(0x5b72, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xe8f5);
        EXPECT(gbc.pc(), 0x5b73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 03D1
        gbc.setState(0x6e1, 0x5950, 0xf6a0, 0x68a5, 0xeca, 0xc970, 0x1, 0x0);
        gbc.writeMem(0x6e1, { 0x2a });
        gbc.writeMem(0xc970, { 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5950);
        EXPECT(gbc.pc(), 0x6e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc970), 0x7d);
        // 2A 03D2
        gbc.setState(0xb9fb, 0xcac5, 0x3740, 0x93d4, 0xf22a, 0x2327, 0x1, 0x0);
        gbc.writeMem(0x2327, { 0x82 });
        gbc.writeMem(0xb9fb, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xcac5);
        EXPECT(gbc.pc(), 0xb9fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9fb), 0x2a);
        // 2A 03D4
        gbc.setState(0x67a0, 0x2889, 0xbb20, 0x8538, 0x2d2b, 0xab4, 0x0, 0x0);
        gbc.writeMem(0xab4, { 0x5c });
        gbc.writeMem(0x67a0, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2889);
        EXPECT(gbc.pc(), 0x67a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 03D5
        gbc.setState(0x42ba, 0xb162, 0x4d30, 0x42b1, 0x952c, 0x32e0, 0x0, 0x1);
        gbc.writeMem(0x32e0, { 0x2c });
        gbc.writeMem(0x42ba, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb162);
        EXPECT(gbc.pc(), 0x42bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 03D6
        gbc.setState(0xd3d5, 0xb4b2, 0x3ed0, 0xbce6, 0x4f3d, 0xb49a, 0x0, 0x1);
        gbc.writeMem(0xb49a, { 0xef });
        gbc.writeMem(0xd3d5, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb4b2);
        EXPECT(gbc.pc(), 0xd3d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb49a), 0xef);
        EXPECT(gbc.readMem(0xd3d5), 0x2a);
        // 2A 03D8
        gbc.setState(0x3068, 0x8182, 0x49d0, 0xa529, 0xb298, 0xb212, 0x1, 0x1);
        gbc.writeMem(0x3068, { 0x2a });
        gbc.writeMem(0xb212, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x8182);
        EXPECT(gbc.pc(), 0x3069);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb212), 0xe6);
        // 2A 03D9
        gbc.setState(0x5078, 0x27e9, 0x3f00, 0x588a, 0x81d1, 0x7543, 0x0, 0x0);
        gbc.writeMem(0x5078, { 0x2a });
        gbc.writeMem(0x7543, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x27e9);
        EXPECT(gbc.pc(), 0x5079);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 03DA
        gbc.setState(0x7586, 0x29c8, 0x4dc0, 0x93fc, 0x8f1c, 0xff64, 0x0, 0x1);
        gbc.writeMem(0x7586, { 0x2a });
        gbc.writeMem(0xff64, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x29c8);
        EXPECT(gbc.pc(), 0x7587);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff64), 0x87);
        // 2A 03DB
        gbc.setState(0x6293, 0x22bc, 0x7d10, 0xdd4a, 0x652f, 0x6c96, 0x0, 0x0);
        gbc.writeMem(0x6293, { 0x2a });
        gbc.writeMem(0x6c96, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x22bc);
        EXPECT(gbc.pc(), 0x6294);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 03DC
        gbc.setState(0x6949, 0x81f9, 0x8820, 0xcb82, 0x8178, 0xea84, 0x0, 0x1);
        gbc.writeMem(0x6949, { 0x2a });
        gbc.writeMem(0xea84, { 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x81f9);
        EXPECT(gbc.pc(), 0x694a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea84), 0xb2);
        // 2A 03DD
        gbc.setState(0x66a3, 0x3ce7, 0x81d0, 0xaa6a, 0xe16c, 0x723f, 0x0, 0x0);
        gbc.writeMem(0x66a3, { 0x2a });
        gbc.writeMem(0x723f, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x3ce7);
        EXPECT(gbc.pc(), 0x66a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2A 03DE
        gbc.setState(0x660c, 0x65b6, 0x1800, 0xce0b, 0x7adc, 0xce95, 0x1, 0x0);
        gbc.writeMem(0x660c, { 0x2a });
        gbc.writeMem(0xce95, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x65b6);
        EXPECT(gbc.pc(), 0x660d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce95), 0x11);
        // 2A 03DF
        gbc.setState(0x4f48, 0xc386, 0x6dc0, 0x8cc2, 0x41a0, 0x6698, 0x1, 0x0);
        gbc.writeMem(0x4f48, { 0x2a });
        gbc.writeMem(0x6698, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xc386);
        EXPECT(gbc.pc(), 0x4f49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2A 03E1
        gbc.setState(0x5344, 0x2354, 0xef60, 0xa6a6, 0xe3c, 0x7de9, 0x0, 0x1);
        gbc.writeMem(0x5344, { 0x2a });
        gbc.writeMem(0x7de9, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x2354);
        EXPECT(gbc.pc(), 0x5345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2A 03E2
        gbc.setState(0x6fa2, 0x60b6, 0x7870, 0x9f8b, 0xaa93, 0x82c, 0x1, 0x1);
        gbc.writeMem(0x82c, { 0x1e });
        gbc.writeMem(0x6fa2, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x60b6);
        EXPECT(gbc.pc(), 0x6fa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2A 03E3
        gbc.setState(0xc296, 0x6e55, 0x5d50, 0xc656, 0x3de8, 0x36e3, 0x0, 0x0);
        gbc.writeMem(0x36e3, { 0x41 });
        gbc.writeMem(0xc296, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6e55);
        EXPECT(gbc.pc(), 0xc297);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc296), 0x2a);
        // 2A 03E4
        gbc.setState(0xe6e, 0xbd0a, 0x100, 0xb315, 0xeeeb, 0xc974, 0x0, 0x0);
        gbc.writeMem(0xe6e, { 0x2a });
        gbc.writeMem(0xc974, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xbd0a);
        EXPECT(gbc.pc(), 0xe6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc974), 0xee);
        // 2A 03E5
        gbc.setState(0xaff0, 0xf720, 0x27e0, 0xbad2, 0xfedb, 0x4c17, 0x1, 0x0);
        gbc.writeMem(0x4c17, { 0x14 });
        gbc.writeMem(0xaff0, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf720);
        EXPECT(gbc.pc(), 0xaff1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaff0), 0x2a);
        // 2A 03E6
        gbc.setState(0xa12a, 0x52a0, 0x4220, 0xec48, 0x9c93, 0x35f8, 0x1, 0x0);
        gbc.writeMem(0x35f8, { 0x57 });
        gbc.writeMem(0xa12a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x52a0);
        EXPECT(gbc.pc(), 0xa12b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa12a), 0x2a);
        // 2A 03E7
        gbc.setState(0xa82a, 0x2ea4, 0x7990, 0x3505, 0x257b, 0x3151, 0x1, 0x0);
        gbc.writeMem(0x3151, { 0x8b });
        gbc.writeMem(0xa82a, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2ea4);
        EXPECT(gbc.pc(), 0xa82b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa82a), 0x2a);
    }
}
#endif
