    TEST(gbcemu, opcode_14) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 14 0000
        gbc.setState(0xe0b9, 0x6cf0, 0xa190, 0xbd67, 0x42aa, 0xbfe0, 0x1, 0x0);
        gbc.writeMem(0xe0b9, { 0x14 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6cf0, gbc.sp());
        EXPECT(0xe0ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe0b9));
        // 14 0001
        gbc.setState(0x2319, 0x64b5, 0x850, 0x58b1, 0xa9d, 0x40bb, 0x1, 0x1);
        gbc.writeMem(0x2319, { 0x14 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x64b5, gbc.sp());
        EXPECT(0x231a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0002
        gbc.setState(0x3cab, 0x62e4, 0x3cc0, 0x545f, 0xc1d4, 0xec32, 0x1, 0x0);
        gbc.writeMem(0x3cab, { 0x14 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x62e4, gbc.sp());
        EXPECT(0x3cac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0003
        gbc.setState(0x4638, 0xac0, 0x4a10, 0x983a, 0x26f6, 0xf812, 0x1, 0x0);
        gbc.writeMem(0x4638, { 0x14 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xac0, gbc.sp());
        EXPECT(0x4639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0004
        gbc.setState(0x63c5, 0xa3a0, 0xb8c0, 0x4fc0, 0xbf4, 0xd7c2, 0x0, 0x1);
        gbc.writeMem(0x63c5, { 0x14 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa3a0, gbc.sp());
        EXPECT(0x63c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0005
        gbc.setState(0xb694, 0xd647, 0x3f80, 0x1fbd, 0xf1df, 0x8e72, 0x1, 0x1);
        gbc.writeMem(0xb694, { 0x14 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd647, gbc.sp());
        EXPECT(0xb695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb694));
        // 14 0007
        gbc.setState(0xd277, 0x882b, 0x440, 0x2bbc, 0xc219, 0x506c, 0x1, 0x0);
        gbc.writeMem(0xd277, { 0x14 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x882b, gbc.sp());
        EXPECT(0xd278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd277));
        // 14 0009
        gbc.setState(0xc006, 0xf8f, 0xb6b0, 0x9f2e, 0xb9e1, 0xa39f, 0x0, 0x0);
        gbc.writeMem(0xc006, { 0x14 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf8f, gbc.sp());
        EXPECT(0xc007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc006));
        // 14 000A
        gbc.setState(0xe9c1, 0x8258, 0xfac0, 0x39ad, 0x7f78, 0xbfde, 0x0, 0x0);
        gbc.writeMem(0xe9c1, { 0x14 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8258, gbc.sp());
        EXPECT(0xe9c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe9c1));
        // 14 000B
        gbc.setState(0xd99c, 0x61c7, 0x1fd0, 0xb76c, 0xae77, 0x1f67, 0x0, 0x1);
        gbc.writeMem(0xd99c, { 0x14 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x61c7, gbc.sp());
        EXPECT(0xd99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd99c));
        // 14 000C
        gbc.setState(0xe453, 0x89b0, 0x4f90, 0xe839, 0x2340, 0xa990, 0x0, 0x1);
        gbc.writeMem(0xe453, { 0x14 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x89b0, gbc.sp());
        EXPECT(0xe454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe453));
        // 14 000D
        gbc.setState(0x8cf8, 0x8cb8, 0xade0, 0x5cab, 0x385a, 0x7303, 0x1, 0x0);
        gbc.writeMem(0x8cf8, { 0x14 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8cb8, gbc.sp());
        EXPECT(0x8cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8cf8));
        // 14 000E
        gbc.setState(0x1f0c, 0xf7f2, 0xcfc0, 0xfe21, 0x19b5, 0x50b0, 0x1, 0x1);
        gbc.writeMem(0x1f0c, { 0x14 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf7f2, gbc.sp());
        EXPECT(0x1f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 000F
        gbc.setState(0x1848, 0xb873, 0x3340, 0x4135, 0x7f30, 0x5beb, 0x0, 0x0);
        gbc.writeMem(0x1848, { 0x14 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb873, gbc.sp());
        EXPECT(0x1849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0010
        gbc.setState(0x5599, 0x163a, 0x81f0, 0x9463, 0x7d98, 0x2c5d, 0x1, 0x1);
        gbc.writeMem(0x5599, { 0x14 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x163a, gbc.sp());
        EXPECT(0x559a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0011
        gbc.setState(0x7cf2, 0x2fb, 0x10c0, 0xc725, 0xdb62, 0xf6c, 0x1, 0x1);
        gbc.writeMem(0x7cf2, { 0x14 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2fb, gbc.sp());
        EXPECT(0x7cf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0012
        gbc.setState(0xc4b4, 0xb4fe, 0xb4f0, 0x79d, 0xb43d, 0xb075, 0x1, 0x0);
        gbc.writeMem(0xc4b4, { 0x14 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb4fe, gbc.sp());
        EXPECT(0xc4b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc4b4));
        // 14 0013
        gbc.setState(0xecb, 0x3589, 0xa240, 0x994f, 0x4388, 0xf54a, 0x0, 0x1);
        gbc.writeMem(0xecb, { 0x14 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3589, gbc.sp());
        EXPECT(0xecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0014
        gbc.setState(0x3fba, 0x3b0c, 0x5130, 0xfd36, 0x78ae, 0x20e2, 0x0, 0x0);
        gbc.writeMem(0x3fba, { 0x14 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3b0c, gbc.sp());
        EXPECT(0x3fbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0015
        gbc.setState(0x5959, 0x5884, 0x6e60, 0xa35f, 0x711, 0xeef6, 0x0, 0x1);
        gbc.writeMem(0x5959, { 0x14 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5884, gbc.sp());
        EXPECT(0x595a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0017
        gbc.setState(0xd697, 0xfb6, 0xf100, 0x81c8, 0x70f4, 0x7e51, 0x0, 0x1);
        gbc.writeMem(0xd697, { 0x14 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfb6, gbc.sp());
        EXPECT(0xd698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd697));
        // 14 0018
        gbc.setState(0x49cd, 0x1ac5, 0x6910, 0xdd65, 0x4e6d, 0xe424, 0x0, 0x0);
        gbc.writeMem(0x49cd, { 0x14 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1ac5, gbc.sp());
        EXPECT(0x49ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0019
        gbc.setState(0x2df3, 0x1e46, 0x6080, 0xc47e, 0x2fb2, 0x72f3, 0x1, 0x0);
        gbc.writeMem(0x2df3, { 0x14 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1e46, gbc.sp());
        EXPECT(0x2df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 001A
        gbc.setState(0xd6fb, 0xe392, 0x9570, 0x7bcf, 0x9313, 0xb318, 0x1, 0x1);
        gbc.writeMem(0xd6fb, { 0x14 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe392, gbc.sp());
        EXPECT(0xd6fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd6fb));
        // 14 001B
        gbc.setState(0xbb19, 0x8817, 0x33d0, 0x6397, 0xc37c, 0x16f1, 0x0, 0x0);
        gbc.writeMem(0xbb19, { 0x14 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8817, gbc.sp());
        EXPECT(0xbb1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbb19));
        // 14 001C
        gbc.setState(0x3af, 0xc4bd, 0x6aa0, 0x5da, 0x6943, 0x1800, 0x0, 0x0);
        gbc.writeMem(0x3af, { 0x14 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc4bd, gbc.sp());
        EXPECT(0x3b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 001D
        gbc.setState(0xe7bd, 0xd7b, 0x25c0, 0xd19a, 0x4d62, 0xd917, 0x1, 0x0);
        gbc.writeMem(0xe7bd, { 0x14 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd7b, gbc.sp());
        EXPECT(0xe7be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe7bd));
        // 14 001E
        gbc.setState(0x163c, 0x53a6, 0xe800, 0xe093, 0x4981, 0x4763, 0x1, 0x1);
        gbc.writeMem(0x163c, { 0x14 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x53a6, gbc.sp());
        EXPECT(0x163d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 001F
        gbc.setState(0x900, 0xfc57, 0xc840, 0x54d9, 0xec90, 0xfc8a, 0x0, 0x0);
        gbc.writeMem(0x900, { 0x14 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfc57, gbc.sp());
        EXPECT(0x901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0020
        gbc.setState(0x3209, 0x7f87, 0xcf60, 0xf80c, 0x43e9, 0x508a, 0x0, 0x0);
        gbc.writeMem(0x3209, { 0x14 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7f87, gbc.sp());
        EXPECT(0x320a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0021
        gbc.setState(0x8ac6, 0xe0f, 0xc240, 0xf9d3, 0x55d6, 0xb9b7, 0x1, 0x1);
        gbc.writeMem(0x8ac6, { 0x14 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe0f, gbc.sp());
        EXPECT(0x8ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8ac6));
        // 14 0022
        gbc.setState(0x98a2, 0xbd6e, 0xc070, 0x3369, 0x5279, 0xad68, 0x0, 0x0);
        gbc.writeMem(0x98a2, { 0x14 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbd6e, gbc.sp());
        EXPECT(0x98a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x98a2));
        // 14 0023
        gbc.setState(0x55be, 0xd70e, 0x1720, 0xada2, 0xda43, 0x799c, 0x1, 0x0);
        gbc.writeMem(0x55be, { 0x14 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd70e, gbc.sp());
        EXPECT(0x55bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0025
        gbc.setState(0x643b, 0xf33, 0x2480, 0xaa9e, 0xd4b, 0x23, 0x1, 0x0);
        gbc.writeMem(0x643b, { 0x14 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf33, gbc.sp());
        EXPECT(0x643c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0026
        gbc.setState(0xd3b, 0x30e8, 0x84b0, 0x7c86, 0x6bdf, 0x3af5, 0x0, 0x0);
        gbc.writeMem(0xd3b, { 0x14 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x30e8, gbc.sp());
        EXPECT(0xd3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0027
        gbc.setState(0xefec, 0xec96, 0x5630, 0x3c0f, 0xb9c2, 0x1028, 0x0, 0x0);
        gbc.writeMem(0xefec, { 0x14 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xec96, gbc.sp());
        EXPECT(0xefed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xefec));
        // 14 0028
        gbc.setState(0xc9f2, 0xd8e4, 0x1180, 0xe1bc, 0x9669, 0x4349, 0x0, 0x0);
        gbc.writeMem(0xc9f2, { 0x14 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd8e4, gbc.sp());
        EXPECT(0xc9f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc9f2));
        // 14 0029
        gbc.setState(0x5dde, 0x6a5c, 0x3c10, 0xbaa6, 0xb310, 0xa0d3, 0x1, 0x1);
        gbc.writeMem(0x5dde, { 0x14 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6a5c, gbc.sp());
        EXPECT(0x5ddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 002A
        gbc.setState(0x8a7d, 0xee51, 0x84c0, 0xbf4c, 0xa349, 0x9eb1, 0x0, 0x1);
        gbc.writeMem(0x8a7d, { 0x14 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xee51, gbc.sp());
        EXPECT(0x8a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8a7d));
        // 14 002B
        gbc.setState(0x9f7f, 0xbee4, 0x5840, 0xc43f, 0xc00, 0x9387, 0x1, 0x1);
        gbc.writeMem(0x9f7f, { 0x14 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xbee4, gbc.sp());
        EXPECT(0x9f80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9f7f));
        // 14 002C
        gbc.setState(0x25fe, 0xa694, 0xaef0, 0xe, 0x9f9d, 0x9336, 0x1, 0x0);
        gbc.writeMem(0x25fe, { 0x14 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa694, gbc.sp());
        EXPECT(0x25ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 002D
        gbc.setState(0xdb4, 0xcbb0, 0x76b0, 0x7401, 0xae02, 0x500d, 0x1, 0x1);
        gbc.writeMem(0xdb4, { 0x14 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcbb0, gbc.sp());
        EXPECT(0xdb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 002E
        gbc.setState(0x4273, 0x900e, 0x2ab0, 0xd16b, 0x50e9, 0x33dd, 0x0, 0x0);
        gbc.writeMem(0x4273, { 0x14 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x900e, gbc.sp());
        EXPECT(0x4274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0030
        gbc.setState(0x3e48, 0x5837, 0x8870, 0xcfce, 0x9852, 0xb171, 0x0, 0x1);
        gbc.writeMem(0x3e48, { 0x14 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5837, gbc.sp());
        EXPECT(0x3e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0031
        gbc.setState(0x4720, 0x681e, 0xced0, 0x539d, 0x940e, 0x8d97, 0x1, 0x1);
        gbc.writeMem(0x4720, { 0x14 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x681e, gbc.sp());
        EXPECT(0x4721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0032
        gbc.setState(0xac8d, 0x5c67, 0x78b0, 0xb383, 0xfc69, 0xb0a6, 0x1, 0x0);
        gbc.writeMem(0xac8d, { 0x14 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5c67, gbc.sp());
        EXPECT(0xac8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xac8d));
        // 14 0033
        gbc.setState(0x3fab, 0xe56f, 0xcd00, 0x22c5, 0x2b5d, 0x3cb0, 0x0, 0x0);
        gbc.writeMem(0x3fab, { 0x14 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe56f, gbc.sp());
        EXPECT(0x3fac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0034
        gbc.setState(0xabf, 0xf22, 0xbc60, 0x7a2e, 0xd93e, 0xa810, 0x1, 0x0);
        gbc.writeMem(0xabf, { 0x14 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf22, gbc.sp());
        EXPECT(0xac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0035
        gbc.setState(0x990b, 0xae73, 0xb80, 0x5830, 0x884a, 0x3288, 0x0, 0x1);
        gbc.writeMem(0x990b, { 0x14 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xae73, gbc.sp());
        EXPECT(0x990c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x990b));
        // 14 0036
        gbc.setState(0x42a7, 0x6463, 0x2da0, 0x3155, 0x8009, 0x2f13, 0x1, 0x1);
        gbc.writeMem(0x42a7, { 0x14 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6463, gbc.sp());
        EXPECT(0x42a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0037
        gbc.setState(0x9fc5, 0x8c4c, 0xbd10, 0x3374, 0x63da, 0xeb34, 0x1, 0x1);
        gbc.writeMem(0x9fc5, { 0x14 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8c4c, gbc.sp());
        EXPECT(0x9fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9fc5));
        // 14 0038
        gbc.setState(0xbb41, 0xe3f1, 0xde00, 0x743b, 0xdf2f, 0xcff3, 0x0, 0x1);
        gbc.writeMem(0xbb41, { 0x14 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe3f1, gbc.sp());
        EXPECT(0xbb42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbb41));
        // 14 0039
        gbc.setState(0x78d8, 0x1c1b, 0xd530, 0xa03d, 0x2102, 0xa3bf, 0x0, 0x0);
        gbc.writeMem(0x78d8, { 0x14 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1c1b, gbc.sp());
        EXPECT(0x78d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 003A
        gbc.setState(0x552a, 0x9cc3, 0x5980, 0xc45b, 0xf4d5, 0xe6b6, 0x0, 0x0);
        gbc.writeMem(0x552a, { 0x14 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9cc3, gbc.sp());
        EXPECT(0x552b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 003C
        gbc.setState(0xbd34, 0x9b4e, 0x8ed0, 0x73db, 0x9b93, 0xa708, 0x0, 0x1);
        gbc.writeMem(0xbd34, { 0x14 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9b4e, gbc.sp());
        EXPECT(0xbd35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbd34));
        // 14 003D
        gbc.setState(0x127d, 0xcfd6, 0x34e0, 0x6461, 0x7ebf, 0x9a41, 0x0, 0x0);
        gbc.writeMem(0x127d, { 0x14 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcfd6, gbc.sp());
        EXPECT(0x127e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 003E
        gbc.setState(0x6aeb, 0xb061, 0xb530, 0x354d, 0xbacf, 0xb85f, 0x1, 0x0);
        gbc.writeMem(0x6aeb, { 0x14 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb061, gbc.sp());
        EXPECT(0x6aec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 003F
        gbc.setState(0x2501, 0x44ea, 0xcb40, 0x90f0, 0xc647, 0xcb3, 0x1, 0x0);
        gbc.writeMem(0x2501, { 0x14 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x44ea, gbc.sp());
        EXPECT(0x2502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0040
        gbc.setState(0xe32b, 0x52a8, 0x2a80, 0x61a7, 0xe671, 0x215e, 0x1, 0x1);
        gbc.writeMem(0xe32b, { 0x14 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x52a8, gbc.sp());
        EXPECT(0xe32c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe32b));
        // 14 0041
        gbc.setState(0x4f3e, 0x4596, 0x5150, 0x667b, 0x8737, 0xfc7, 0x0, 0x0);
        gbc.writeMem(0x4f3e, { 0x14 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4596, gbc.sp());
        EXPECT(0x4f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0042
        gbc.setState(0xc3c8, 0xf1f1, 0xc740, 0x4d73, 0x93ac, 0xe956, 0x0, 0x0);
        gbc.writeMem(0xc3c8, { 0x14 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf1f1, gbc.sp());
        EXPECT(0xc3c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc3c8));
        // 14 0043
        gbc.setState(0x795d, 0xf520, 0xa560, 0x77e0, 0x8894, 0x61b9, 0x0, 0x1);
        gbc.writeMem(0x795d, { 0x14 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf520, gbc.sp());
        EXPECT(0x795e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0044
        gbc.setState(0xa748, 0xccc6, 0xaef0, 0xaa38, 0x4a07, 0x202f, 0x0, 0x0);
        gbc.writeMem(0xa748, { 0x14 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xccc6, gbc.sp());
        EXPECT(0xa749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa748));
        // 14 0045
        gbc.setState(0x7347, 0x9b11, 0xc490, 0xbcce, 0x92dd, 0x73, 0x0, 0x0);
        gbc.writeMem(0x7347, { 0x14 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9b11, gbc.sp());
        EXPECT(0x7348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0046
        gbc.setState(0xbd6f, 0x2816, 0xe7a0, 0xddfb, 0x957c, 0x4671, 0x0, 0x0);
        gbc.writeMem(0xbd6f, { 0x14 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2816, gbc.sp());
        EXPECT(0xbd70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbd6f));
        // 14 0047
        gbc.setState(0x9aed, 0xec24, 0x7d0, 0x1347, 0xc482, 0x92a, 0x0, 0x0);
        gbc.writeMem(0x9aed, { 0x14 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xec24, gbc.sp());
        EXPECT(0x9aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9aed));
        // 14 0048
        gbc.setState(0x374c, 0x7a73, 0xffa0, 0x1bf, 0xe089, 0x307a, 0x0, 0x0);
        gbc.writeMem(0x374c, { 0x14 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7a73, gbc.sp());
        EXPECT(0x374d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0049
        gbc.setState(0xc6e4, 0x7862, 0xe640, 0x2e9f, 0xf3af, 0xdfd3, 0x0, 0x0);
        gbc.writeMem(0xc6e4, { 0x14 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7862, gbc.sp());
        EXPECT(0xc6e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc6e4));
        // 14 004A
        gbc.setState(0x3089, 0x8556, 0x1ec0, 0x78b, 0x18a6, 0x483a, 0x0, 0x0);
        gbc.writeMem(0x3089, { 0x14 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8556, gbc.sp());
        EXPECT(0x308a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 004B
        gbc.setState(0x8ac, 0x8acb, 0xcef0, 0x8bdd, 0xfb30, 0xa797, 0x1, 0x0);
        gbc.writeMem(0x8ac, { 0x14 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8acb, gbc.sp());
        EXPECT(0x8ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 004C
        gbc.setState(0x153f, 0x96e6, 0xdf60, 0xc8a2, 0xc48d, 0x9581, 0x1, 0x1);
        gbc.writeMem(0x153f, { 0x14 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x96e6, gbc.sp());
        EXPECT(0x1540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 004E
        gbc.setState(0xad01, 0x6599, 0x60, 0xcad4, 0xcead, 0x85ba, 0x1, 0x1);
        gbc.writeMem(0xad01, { 0x14 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6599, gbc.sp());
        EXPECT(0xad02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xad01));
        // 14 004F
        gbc.setState(0xee71, 0x7d8a, 0x4040, 0xb000, 0x2973, 0x4e59, 0x0, 0x0);
        gbc.writeMem(0xee71, { 0x14 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7d8a, gbc.sp());
        EXPECT(0xee72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xee71));
        // 14 0050
        gbc.setState(0xb1af, 0x24e1, 0xb550, 0x83f3, 0xde44, 0x8e9e, 0x1, 0x0);
        gbc.writeMem(0xb1af, { 0x14 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x24e1, gbc.sp());
        EXPECT(0xb1b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb1af));
        // 14 0051
        gbc.setState(0xcfa3, 0x7da3, 0xb2c0, 0x1666, 0xf91f, 0xcb5a, 0x0, 0x1);
        gbc.writeMem(0xcfa3, { 0x14 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7da3, gbc.sp());
        EXPECT(0xcfa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xcfa3));
        // 14 0052
        gbc.setState(0x7791, 0x6726, 0x8a30, 0xda4c, 0x86ae, 0xeeb4, 0x0, 0x0);
        gbc.writeMem(0x7791, { 0x14 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6726, gbc.sp());
        EXPECT(0x7792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0053
        gbc.setState(0xc889, 0x2a69, 0xc3e0, 0x5617, 0xa0e3, 0xfde1, 0x1, 0x1);
        gbc.writeMem(0xc889, { 0x14 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2a69, gbc.sp());
        EXPECT(0xc88a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc889));
        // 14 0054
        gbc.setState(0xb3d, 0xb1bf, 0xea70, 0x70cc, 0x8540, 0xaab9, 0x0, 0x1);
        gbc.writeMem(0xb3d, { 0x14 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb1bf, gbc.sp());
        EXPECT(0xb3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0055
        gbc.setState(0xdbcd, 0xba7f, 0x51b0, 0xba6c, 0x8eec, 0x9e6d, 0x1, 0x0);
        gbc.writeMem(0xdbcd, { 0x14 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xba7f, gbc.sp());
        EXPECT(0xdbce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdbcd));
        // 14 0056
        gbc.setState(0x1c1c, 0xb4ca, 0x4450, 0x9a95, 0xa36f, 0x1e47, 0x1, 0x1);
        gbc.writeMem(0x1c1c, { 0x14 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb4ca, gbc.sp());
        EXPECT(0x1c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0057
        gbc.setState(0x9fca, 0x1e01, 0x4120, 0xd7d5, 0x948b, 0xb092, 0x0, 0x0);
        gbc.writeMem(0x9fca, { 0x14 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1e01, gbc.sp());
        EXPECT(0x9fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9fca));
        // 14 0058
        gbc.setState(0xd8cb, 0xd4da, 0xbea0, 0xe78e, 0xaef1, 0x4b9c, 0x1, 0x1);
        gbc.writeMem(0xd8cb, { 0x14 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd4da, gbc.sp());
        EXPECT(0xd8cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd8cb));
        // 14 0059
        gbc.setState(0x690a, 0x6740, 0xa980, 0x2d6c, 0x9ca2, 0x83d8, 0x0, 0x1);
        gbc.writeMem(0x690a, { 0x14 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6740, gbc.sp());
        EXPECT(0x690b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 005A
        gbc.setState(0x48a7, 0xf879, 0x10, 0xc0b5, 0x56d0, 0x233c, 0x0, 0x1);
        gbc.writeMem(0x48a7, { 0x14 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf879, gbc.sp());
        EXPECT(0x48a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 005B
        gbc.setState(0x966e, 0x90c4, 0x7720, 0xc6a6, 0xa95, 0x4463, 0x1, 0x0);
        gbc.writeMem(0x966e, { 0x14 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x90c4, gbc.sp());
        EXPECT(0x966f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x966e));
        // 14 005C
        gbc.setState(0x1388, 0xf165, 0x3540, 0x9c41, 0x60b2, 0x3729, 0x0, 0x1);
        gbc.writeMem(0x1388, { 0x14 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf165, gbc.sp());
        EXPECT(0x1389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 005D
        gbc.setState(0x90e, 0x3a9e, 0x8ad0, 0x49f7, 0x63f5, 0xe0a, 0x1, 0x1);
        gbc.writeMem(0x90e, { 0x14 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3a9e, gbc.sp());
        EXPECT(0x90f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 005E
        gbc.setState(0xd332, 0xa307, 0x1000, 0x7d74, 0xf284, 0xe3a7, 0x0, 0x1);
        gbc.writeMem(0xd332, { 0x14 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa307, gbc.sp());
        EXPECT(0xd333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd332));
        // 14 005F
        gbc.setState(0x798b, 0xd99e, 0x3720, 0x5d44, 0x9b96, 0x2f20, 0x0, 0x1);
        gbc.writeMem(0x798b, { 0x14 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd99e, gbc.sp());
        EXPECT(0x798c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0060
        gbc.setState(0x3ca, 0xb09, 0x7ac0, 0xc1a5, 0x34bb, 0x9492, 0x0, 0x1);
        gbc.writeMem(0x3ca, { 0x14 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb09, gbc.sp());
        EXPECT(0x3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0061
        gbc.setState(0x61eb, 0x8b49, 0x8750, 0x8b13, 0x9b1b, 0x70c1, 0x0, 0x0);
        gbc.writeMem(0x61eb, { 0x14 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8b49, gbc.sp());
        EXPECT(0x61ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0062
        gbc.setState(0x54de, 0x81ad, 0xfd60, 0x8f3b, 0xd4f5, 0x587c, 0x1, 0x0);
        gbc.writeMem(0x54de, { 0x14 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x81ad, gbc.sp());
        EXPECT(0x54df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0063
        gbc.setState(0x5e9d, 0x58d7, 0x8d70, 0xa296, 0x7320, 0x26f0, 0x1, 0x1);
        gbc.writeMem(0x5e9d, { 0x14 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x58d7, gbc.sp());
        EXPECT(0x5e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0064
        gbc.setState(0xe6ab, 0x9d2f, 0x890, 0xd4fa, 0x2262, 0xe000, 0x1, 0x1);
        gbc.writeMem(0xe6ab, { 0x14 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9d2f, gbc.sp());
        EXPECT(0xe6ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe6ab));
        // 14 0065
        gbc.setState(0xa3fd, 0xbd5b, 0xcdb0, 0x5942, 0x82cf, 0xe557, 0x0, 0x1);
        gbc.writeMem(0xa3fd, { 0x14 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbd5b, gbc.sp());
        EXPECT(0xa3fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa3fd));
        // 14 0066
        gbc.setState(0xe551, 0xa05, 0xb760, 0x9142, 0xb261, 0x2026, 0x1, 0x1);
        gbc.writeMem(0xe551, { 0x14 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa05, gbc.sp());
        EXPECT(0xe552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe551));
        // 14 0067
        gbc.setState(0x480b, 0x7a02, 0x5c80, 0x56fe, 0x9c7b, 0x2522, 0x1, 0x0);
        gbc.writeMem(0x480b, { 0x14 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7a02, gbc.sp());
        EXPECT(0x480c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0068
        gbc.setState(0x386b, 0x138b, 0x70a0, 0x5e00, 0x5b0a, 0x6204, 0x0, 0x0);
        gbc.writeMem(0x386b, { 0x14 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x138b, gbc.sp());
        EXPECT(0x386c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0069
        gbc.setState(0xe6df, 0x9af8, 0xef30, 0xd8b3, 0xd610, 0x11b5, 0x0, 0x1);
        gbc.writeMem(0xe6df, { 0x14 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9af8, gbc.sp());
        EXPECT(0xe6e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe6df));
        // 14 006A
        gbc.setState(0x791, 0xce37, 0xd3d0, 0xa671, 0xb75d, 0x258d, 0x0, 0x1);
        gbc.writeMem(0x791, { 0x14 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xce37, gbc.sp());
        EXPECT(0x792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 006B
        gbc.setState(0x91dd, 0x9ad4, 0x1f0, 0xf63f, 0xfccc, 0x5efd, 0x0, 0x0);
        gbc.writeMem(0x91dd, { 0x14 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9ad4, gbc.sp());
        EXPECT(0x91de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x91dd));
        // 14 006C
        gbc.setState(0x5689, 0xee44, 0x2b30, 0xd75d, 0x60bb, 0x3146, 0x0, 0x1);
        gbc.writeMem(0x5689, { 0x14 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xee44, gbc.sp());
        EXPECT(0x568a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 006D
        gbc.setState(0xd59, 0xccbe, 0x480, 0xf9c6, 0x6e9d, 0x4e26, 0x1, 0x1);
        gbc.writeMem(0xd59, { 0x14 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xccbe, gbc.sp());
        EXPECT(0xd5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 006E
        gbc.setState(0xc87e, 0xf238, 0x8980, 0x21d9, 0xc61f, 0xa9c0, 0x1, 0x1);
        gbc.writeMem(0xc87e, { 0x14 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf238, gbc.sp());
        EXPECT(0xc87f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc87e));
        // 14 006F
        gbc.setState(0x105d, 0xe955, 0xef20, 0xc9fb, 0x2db9, 0x1491, 0x1, 0x1);
        gbc.writeMem(0x105d, { 0x14 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe955, gbc.sp());
        EXPECT(0x105e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0070
        gbc.setState(0x72bb, 0xa1da, 0x4b80, 0xee13, 0xf04c, 0x14c5, 0x0, 0x1);
        gbc.writeMem(0x72bb, { 0x14 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa1da, gbc.sp());
        EXPECT(0x72bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0072
        gbc.setState(0x49ba, 0xc1d, 0xc990, 0x666a, 0x8058, 0xc706, 0x1, 0x1);
        gbc.writeMem(0x49ba, { 0x14 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc1d, gbc.sp());
        EXPECT(0x49bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0073
        gbc.setState(0x9369, 0xc277, 0xa4b0, 0x6784, 0xae60, 0x252f, 0x1, 0x0);
        gbc.writeMem(0x9369, { 0x14 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc277, gbc.sp());
        EXPECT(0x936a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9369));
        // 14 0074
        gbc.setState(0x9acd, 0xcd8b, 0xb930, 0x159b, 0x613e, 0x64ca, 0x0, 0x0);
        gbc.writeMem(0x9acd, { 0x14 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xcd8b, gbc.sp());
        EXPECT(0x9ace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9acd));
        // 14 0075
        gbc.setState(0x2d61, 0x9170, 0x6b0, 0xc0b1, 0xdb6f, 0x69cf, 0x1, 0x1);
        gbc.writeMem(0x2d61, { 0x14 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9170, gbc.sp());
        EXPECT(0x2d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0076
        gbc.setState(0x78b9, 0xd561, 0x5120, 0x4475, 0xfbbd, 0xd527, 0x1, 0x0);
        gbc.writeMem(0x78b9, { 0x14 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd561, gbc.sp());
        EXPECT(0x78ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0077
        gbc.setState(0x418d, 0xf935, 0xb670, 0xd8b5, 0xfa63, 0xa481, 0x0, 0x1);
        gbc.writeMem(0x418d, { 0x14 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf935, gbc.sp());
        EXPECT(0x418e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0079
        gbc.setState(0xd0ae, 0x446c, 0x3d70, 0xf75d, 0x5692, 0xe02b, 0x0, 0x0);
        gbc.writeMem(0xd0ae, { 0x14 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x446c, gbc.sp());
        EXPECT(0xd0af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd0ae));
        // 14 007A
        gbc.setState(0x93e2, 0xd9d0, 0x77e0, 0x6a7, 0x7439, 0x7a36, 0x0, 0x0);
        gbc.writeMem(0x93e2, { 0x14 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd9d0, gbc.sp());
        EXPECT(0x93e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x93e2));
        // 14 007B
        gbc.setState(0x356, 0xb7e8, 0x7820, 0xcee3, 0xa6b5, 0x2cea, 0x1, 0x0);
        gbc.writeMem(0x356, { 0x14 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb7e8, gbc.sp());
        EXPECT(0x357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 007C
        gbc.setState(0x8f72, 0xefde, 0xc200, 0xe3bd, 0xf479, 0xb58e, 0x0, 0x0);
        gbc.writeMem(0x8f72, { 0x14 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xefde, gbc.sp());
        EXPECT(0x8f73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8f72));
        // 14 007D
        gbc.setState(0x20c2, 0x5399, 0xbb50, 0x5e95, 0xb2d7, 0x9f9a, 0x1, 0x0);
        gbc.writeMem(0x20c2, { 0x14 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5399, gbc.sp());
        EXPECT(0x20c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 007E
        gbc.setState(0xb8b2, 0x5f0d, 0x3ab0, 0xf476, 0xa84b, 0xb2eb, 0x0, 0x1);
        gbc.writeMem(0xb8b2, { 0x14 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5f0d, gbc.sp());
        EXPECT(0xb8b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb8b2));
        // 14 007F
        gbc.setState(0x3100, 0x17ae, 0x860, 0xb134, 0xb035, 0x7510, 0x1, 0x0);
        gbc.writeMem(0x3100, { 0x14 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x17ae, gbc.sp());
        EXPECT(0x3101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0080
        gbc.setState(0xbf30, 0x8a7e, 0x5e70, 0x2fcd, 0x1b03, 0x2134, 0x1, 0x0);
        gbc.writeMem(0xbf30, { 0x14 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8a7e, gbc.sp());
        EXPECT(0xbf31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbf30));
        // 14 0081
        gbc.setState(0x90d7, 0xe946, 0x8970, 0xdb45, 0x8539, 0x1014, 0x0, 0x0);
        gbc.writeMem(0x90d7, { 0x14 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe946, gbc.sp());
        EXPECT(0x90d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x90d7));
        // 14 0082
        gbc.setState(0x4e8d, 0xbd2, 0x9f40, 0x7022, 0x34bc, 0xf7a2, 0x1, 0x0);
        gbc.writeMem(0x4e8d, { 0x14 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbd2, gbc.sp());
        EXPECT(0x4e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0083
        gbc.setState(0x556f, 0x1381, 0x3750, 0x8c68, 0x5f4d, 0x58ad, 0x1, 0x1);
        gbc.writeMem(0x556f, { 0x14 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1381, gbc.sp());
        EXPECT(0x5570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0084
        gbc.setState(0x2acb, 0x33c5, 0xc290, 0xb343, 0x21ab, 0xbba8, 0x1, 0x1);
        gbc.writeMem(0x2acb, { 0x14 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x33c5, gbc.sp());
        EXPECT(0x2acc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0085
        gbc.setState(0xd126, 0xeec6, 0xbeb0, 0xea87, 0x9564, 0xfe33, 0x0, 0x1);
        gbc.writeMem(0xd126, { 0x14 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xeec6, gbc.sp());
        EXPECT(0xd127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd126));
        // 14 0086
        gbc.setState(0xdf7e, 0x462f, 0x9330, 0xed8d, 0x157c, 0xc502, 0x0, 0x1);
        gbc.writeMem(0xdf7e, { 0x14 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x462f, gbc.sp());
        EXPECT(0xdf7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdf7e));
        // 14 0087
        gbc.setState(0x82cd, 0xcc66, 0xb200, 0xeeb2, 0xf969, 0xb586, 0x0, 0x0);
        gbc.writeMem(0x82cd, { 0x14 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcc66, gbc.sp());
        EXPECT(0x82ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x82cd));
        // 14 0088
        gbc.setState(0x55ea, 0xb2c4, 0xcc60, 0x3826, 0xe4cd, 0xc65a, 0x1, 0x1);
        gbc.writeMem(0x55ea, { 0x14 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb2c4, gbc.sp());
        EXPECT(0x55eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0089
        gbc.setState(0xea70, 0x8333, 0xd2e0, 0xcb02, 0x4f5e, 0x7c76, 0x1, 0x1);
        gbc.writeMem(0xea70, { 0x14 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8333, gbc.sp());
        EXPECT(0xea71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xea70));
        // 14 008A
        gbc.setState(0x454d, 0x221d, 0x1c60, 0xa2eb, 0x624, 0xdbda, 0x0, 0x1);
        gbc.writeMem(0x454d, { 0x14 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x221d, gbc.sp());
        EXPECT(0x454e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 008B
        gbc.setState(0x7ca1, 0xd3f0, 0xc5a0, 0x69fe, 0xebf0, 0x1c8, 0x0, 0x1);
        gbc.writeMem(0x7ca1, { 0x14 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd3f0, gbc.sp());
        EXPECT(0x7ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 008C
        gbc.setState(0x1b65, 0x41f9, 0x8e70, 0xfc82, 0x52fe, 0x249, 0x1, 0x1);
        gbc.writeMem(0x1b65, { 0x14 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x41f9, gbc.sp());
        EXPECT(0x1b66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 008D
        gbc.setState(0x29c3, 0xfcbd, 0xc310, 0x14ab, 0x8f88, 0x45e1, 0x1, 0x0);
        gbc.writeMem(0x29c3, { 0x14 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfcbd, gbc.sp());
        EXPECT(0x29c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 008E
        gbc.setState(0x35fc, 0x5eff, 0x4ac0, 0xeec0, 0xb40, 0x4008, 0x0, 0x0);
        gbc.writeMem(0x35fc, { 0x14 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5eff, gbc.sp());
        EXPECT(0x35fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 008F
        gbc.setState(0xd50f, 0xd3b2, 0x57e0, 0xd581, 0x68ce, 0xb589, 0x0, 0x0);
        gbc.writeMem(0xd50f, { 0x14 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd3b2, gbc.sp());
        EXPECT(0xd510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd50f));
        // 14 0090
        gbc.setState(0x51bd, 0xa8a2, 0x1890, 0x15c6, 0x5c8b, 0x14c8, 0x0, 0x0);
        gbc.writeMem(0x51bd, { 0x14 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa8a2, gbc.sp());
        EXPECT(0x51be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0091
        gbc.setState(0x8908, 0x8007, 0x9c00, 0xbe14, 0x4efd, 0x881f, 0x1, 0x0);
        gbc.writeMem(0x8908, { 0x14 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8007, gbc.sp());
        EXPECT(0x8909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8908));
        // 14 0092
        gbc.setState(0x5508, 0x32bf, 0xeae0, 0x9b59, 0xc9c0, 0x5e09, 0x0, 0x1);
        gbc.writeMem(0x5508, { 0x14 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x32bf, gbc.sp());
        EXPECT(0x5509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0093
        gbc.setState(0x631e, 0x50c2, 0x6a70, 0x609d, 0x5f00, 0xb713, 0x0, 0x1);
        gbc.writeMem(0x631e, { 0x14 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x50c2, gbc.sp());
        EXPECT(0x631f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0094
        gbc.setState(0xe71a, 0xc9eb, 0x27f0, 0x5e9c, 0x57fc, 0x4851, 0x1, 0x0);
        gbc.writeMem(0xe71a, { 0x14 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc9eb, gbc.sp());
        EXPECT(0xe71b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe71a));
        // 14 0095
        gbc.setState(0x6e77, 0x3ef6, 0x1b60, 0x8e6a, 0x419, 0xa4f2, 0x0, 0x1);
        gbc.writeMem(0x6e77, { 0x14 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3ef6, gbc.sp());
        EXPECT(0x6e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0096
        gbc.setState(0xb9f7, 0x3695, 0x4ac0, 0x2b79, 0x5bb2, 0x81a7, 0x1, 0x1);
        gbc.writeMem(0xb9f7, { 0x14 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3695, gbc.sp());
        EXPECT(0xb9f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb9f7));
        // 14 0097
        gbc.setState(0xae67, 0x657d, 0x41e0, 0x7ba0, 0x5547, 0x8682, 0x0, 0x1);
        gbc.writeMem(0xae67, { 0x14 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x657d, gbc.sp());
        EXPECT(0xae68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xae67));
        // 14 0098
        gbc.setState(0x3607, 0x1121, 0x3aa0, 0x2ad2, 0xc07c, 0xe80c, 0x0, 0x0);
        gbc.writeMem(0x3607, { 0x14 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1121, gbc.sp());
        EXPECT(0x3608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0099
        gbc.setState(0x9711, 0xe565, 0xef30, 0x35df, 0xb149, 0xfe85, 0x1, 0x1);
        gbc.writeMem(0x9711, { 0x14 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe565, gbc.sp());
        EXPECT(0x9712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9711));
        // 14 009A
        gbc.setState(0xf4c, 0xda4b, 0x9d70, 0xdc2d, 0xcdc2, 0x805a, 0x1, 0x0);
        gbc.writeMem(0xf4c, { 0x14 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xda4b, gbc.sp());
        EXPECT(0xf4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 009B
        gbc.setState(0xab1d, 0x8931, 0xb0f0, 0x8999, 0xfb8a, 0xe6aa, 0x1, 0x1);
        gbc.writeMem(0xab1d, { 0x14 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8931, gbc.sp());
        EXPECT(0xab1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xab1d));
        // 14 009C
        gbc.setState(0x1c56, 0x3194, 0x2c20, 0x1d8d, 0xc29b, 0x13b6, 0x1, 0x0);
        gbc.writeMem(0x1c56, { 0x14 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3194, gbc.sp());
        EXPECT(0x1c57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 009D
        gbc.setState(0x47d1, 0x720a, 0x6380, 0xcf67, 0x1216, 0xf8ba, 0x1, 0x0);
        gbc.writeMem(0x47d1, { 0x14 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x720a, gbc.sp());
        EXPECT(0x47d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 009E
        gbc.setState(0xedad, 0xded2, 0x70d0, 0xb8b0, 0xef83, 0xa1a0, 0x1, 0x0);
        gbc.writeMem(0xedad, { 0x14 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xded2, gbc.sp());
        EXPECT(0xedae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xedad));
        // 14 009F
        gbc.setState(0x4a01, 0x3873, 0xfa80, 0x6562, 0x72bc, 0xad6a, 0x0, 0x1);
        gbc.writeMem(0x4a01, { 0x14 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3873, gbc.sp());
        EXPECT(0x4a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 00A0
        gbc.setState(0x8755, 0x97dc, 0xf370, 0x8b07, 0xc335, 0x625, 0x1, 0x1);
        gbc.writeMem(0x8755, { 0x14 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x97dc, gbc.sp());
        EXPECT(0x8756, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8755));
        // 14 00A1
        gbc.setState(0x29a2, 0x63da, 0x2bb0, 0x907a, 0xf271, 0x2c51, 0x1, 0x0);
        gbc.writeMem(0x29a2, { 0x14 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x63da, gbc.sp());
        EXPECT(0x29a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00A2
        gbc.setState(0x9b0e, 0xd2f2, 0xb770, 0x6053, 0xd3da, 0x66a1, 0x1, 0x1);
        gbc.writeMem(0x9b0e, { 0x14 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd2f2, gbc.sp());
        EXPECT(0x9b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9b0e));
        // 14 00A3
        gbc.setState(0xc4e3, 0x8ea8, 0xcf80, 0x5ab6, 0xf700, 0xd2b7, 0x1, 0x0);
        gbc.writeMem(0xc4e3, { 0x14 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8ea8, gbc.sp());
        EXPECT(0xc4e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc4e3));
        // 14 00A4
        gbc.setState(0x9c5c, 0x2951, 0xcd90, 0xdccf, 0x72a8, 0x2cb8, 0x1, 0x1);
        gbc.writeMem(0x9c5c, { 0x14 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2951, gbc.sp());
        EXPECT(0x9c5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9c5c));
        // 14 00A5
        gbc.setState(0x8b48, 0xad04, 0x4970, 0xcd62, 0x71d8, 0x4c0c, 0x1, 0x0);
        gbc.writeMem(0x8b48, { 0x14 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xad04, gbc.sp());
        EXPECT(0x8b49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8b48));
        // 14 00A6
        gbc.setState(0x355f, 0x5c3, 0xfca0, 0xc496, 0xd492, 0x72c3, 0x1, 0x1);
        gbc.writeMem(0x355f, { 0x14 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5c3, gbc.sp());
        EXPECT(0x3560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 00A7
        gbc.setState(0x7446, 0xf9bf, 0xcfe0, 0x8158, 0xdd91, 0x1cc4, 0x1, 0x0);
        gbc.writeMem(0x7446, { 0x14 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf9bf, gbc.sp());
        EXPECT(0x7447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 00A8
        gbc.setState(0xa046, 0x3d7f, 0xa330, 0x7b00, 0x630d, 0xccbe, 0x0, 0x1);
        gbc.writeMem(0xa046, { 0x14 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3d7f, gbc.sp());
        EXPECT(0xa047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa046));
        // 14 00AA
        gbc.setState(0x6705, 0x45eb, 0xe9b0, 0xb0ae, 0x5d0a, 0xefad, 0x1, 0x0);
        gbc.writeMem(0x6705, { 0x14 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x45eb, gbc.sp());
        EXPECT(0x6706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00AB
        gbc.setState(0x7593, 0x2bc8, 0x81d0, 0x5373, 0x2261, 0x9d60, 0x0, 0x1);
        gbc.writeMem(0x7593, { 0x14 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2bc8, gbc.sp());
        EXPECT(0x7594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00AC
        gbc.setState(0x8d64, 0x479, 0xa930, 0xfdd9, 0xaa6e, 0xdfba, 0x0, 0x0);
        gbc.writeMem(0x8d64, { 0x14 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x479, gbc.sp());
        EXPECT(0x8d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8d64));
        // 14 00AD
        gbc.setState(0xd61b, 0x1bb6, 0x78b0, 0xd3c8, 0x9c25, 0xb8c3, 0x0, 0x0);
        gbc.writeMem(0xd61b, { 0x14 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1bb6, gbc.sp());
        EXPECT(0xd61c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd61b));
        // 14 00AE
        gbc.setState(0xd147, 0x7141, 0x73d0, 0xd5d9, 0xa1e8, 0x481f, 0x0, 0x1);
        gbc.writeMem(0xd147, { 0x14 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7141, gbc.sp());
        EXPECT(0xd148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd147));
        // 14 00AF
        gbc.setState(0x81c, 0x11c9, 0x3c80, 0x4962, 0x212, 0x6a72, 0x1, 0x1);
        gbc.writeMem(0x81c, { 0x14 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x11c9, gbc.sp());
        EXPECT(0x81d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 00B0
        gbc.setState(0x9ee6, 0xa7cf, 0xeaf0, 0x7693, 0x7a4d, 0x64d1, 0x0, 0x0);
        gbc.writeMem(0x9ee6, { 0x14 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa7cf, gbc.sp());
        EXPECT(0x9ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9ee6));
        // 14 00B1
        gbc.setState(0x8b19, 0xe194, 0xfb00, 0x2e67, 0xed94, 0xc423, 0x1, 0x0);
        gbc.writeMem(0x8b19, { 0x14 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe194, gbc.sp());
        EXPECT(0x8b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8b19));
        // 14 00B2
        gbc.setState(0x1b7, 0x538e, 0xc440, 0xea8e, 0xc2fb, 0xcef6, 0x0, 0x0);
        gbc.writeMem(0x1b7, { 0x14 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x538e, gbc.sp());
        EXPECT(0x1b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 00B3
        gbc.setState(0x49b3, 0xc65e, 0x5550, 0x17b1, 0x76c, 0x1251, 0x0, 0x0);
        gbc.writeMem(0x49b3, { 0x14 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc65e, gbc.sp());
        EXPECT(0x49b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00B4
        gbc.setState(0x6dec, 0xeb4e, 0x68c0, 0x8745, 0xa181, 0x8dbe, 0x0, 0x1);
        gbc.writeMem(0x6dec, { 0x14 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xeb4e, gbc.sp());
        EXPECT(0x6ded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 00B5
        gbc.setState(0xdfe3, 0x2ab4, 0x9af0, 0x64e3, 0xed8b, 0x7116, 0x0, 0x0);
        gbc.writeMem(0xdfe3, { 0x14 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2ab4, gbc.sp());
        EXPECT(0xdfe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdfe3));
        // 14 00B6
        gbc.setState(0x1558, 0x53c4, 0x9290, 0xfb6, 0x3a18, 0x566d, 0x1, 0x0);
        gbc.writeMem(0x1558, { 0x14 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x53c4, gbc.sp());
        EXPECT(0x1559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00B7
        gbc.setState(0xe266, 0x9327, 0xefd0, 0x8d35, 0x6167, 0x9fbc, 0x0, 0x1);
        gbc.writeMem(0xe266, { 0x14 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9327, gbc.sp());
        EXPECT(0xe267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe266));
        // 14 00B8
        gbc.setState(0xaac0, 0x494c, 0x9d0, 0xba0b, 0x319, 0x94e0, 0x0, 0x1);
        gbc.writeMem(0xaac0, { 0x14 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x494c, gbc.sp());
        EXPECT(0xaac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xaac0));
        // 14 00B9
        gbc.setState(0xa470, 0x368, 0x6b60, 0x972d, 0x173b, 0xf442, 0x0, 0x0);
        gbc.writeMem(0xa470, { 0x14 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x368, gbc.sp());
        EXPECT(0xa471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa470));
        // 14 00BA
        gbc.setState(0x69f4, 0x3bb0, 0x8f70, 0x659b, 0xd947, 0xeca8, 0x1, 0x1);
        gbc.writeMem(0x69f4, { 0x14 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3bb0, gbc.sp());
        EXPECT(0x69f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00BB
        gbc.setState(0x4aa3, 0x164e, 0x6b40, 0x6afa, 0x9eab, 0xa167, 0x1, 0x1);
        gbc.writeMem(0x4aa3, { 0x14 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x164e, gbc.sp());
        EXPECT(0x4aa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 00BC
        gbc.setState(0xc84e, 0x9081, 0x5b50, 0x8663, 0x3798, 0x443d, 0x0, 0x0);
        gbc.writeMem(0xc84e, { 0x14 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9081, gbc.sp());
        EXPECT(0xc84f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc84e));
        // 14 00BD
        gbc.setState(0x1e8a, 0x8cab, 0x4370, 0x228c, 0x64ee, 0x505b, 0x1, 0x1);
        gbc.writeMem(0x1e8a, { 0x14 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8cab, gbc.sp());
        EXPECT(0x1e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00BE
        gbc.setState(0x195b, 0xafea, 0x6d50, 0x98cf, 0xde8e, 0x1468, 0x0, 0x0);
        gbc.writeMem(0x195b, { 0x14 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xafea, gbc.sp());
        EXPECT(0x195c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00BF
        gbc.setState(0x80ac, 0x9059, 0x1e00, 0xa756, 0xfd09, 0x2241, 0x0, 0x0);
        gbc.writeMem(0x80ac, { 0x14 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9059, gbc.sp());
        EXPECT(0x80ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x80ac));
        // 14 00C0
        gbc.setState(0x8446, 0x6dcf, 0xef70, 0xcf2c, 0x574, 0x6441, 0x1, 0x0);
        gbc.writeMem(0x8446, { 0x14 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6dcf, gbc.sp());
        EXPECT(0x8447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8446));
        // 14 00C1
        gbc.setState(0xb175, 0x468b, 0x5df0, 0xdbd8, 0x1703, 0xb3fa, 0x0, 0x1);
        gbc.writeMem(0xb175, { 0x14 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x468b, gbc.sp());
        EXPECT(0xb176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb175));
        // 14 00C2
        gbc.setState(0x54ac, 0xd8c5, 0x9da0, 0xa0dc, 0x3a5f, 0x3b80, 0x1, 0x0);
        gbc.writeMem(0x54ac, { 0x14 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd8c5, gbc.sp());
        EXPECT(0x54ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 00C3
        gbc.setState(0x65fb, 0x82d5, 0x7e90, 0xa0ed, 0x2353, 0xdb20, 0x1, 0x0);
        gbc.writeMem(0x65fb, { 0x14 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x82d5, gbc.sp());
        EXPECT(0x65fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00C5
        gbc.setState(0xabe, 0x1580, 0x6d30, 0x18a9, 0x8565, 0x7c21, 0x1, 0x0);
        gbc.writeMem(0xabe, { 0x14 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1580, gbc.sp());
        EXPECT(0xabf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00C6
        gbc.setState(0x9090, 0xcce4, 0xa270, 0xf0c2, 0x7b2c, 0xf9e0, 0x1, 0x1);
        gbc.writeMem(0x9090, { 0x14 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xcce4, gbc.sp());
        EXPECT(0x9091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9090));
        // 14 00C7
        gbc.setState(0x9637, 0xf158, 0x3310, 0xab75, 0x200b, 0x3737, 0x1, 0x0);
        gbc.writeMem(0x9637, { 0x14 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf158, gbc.sp());
        EXPECT(0x9638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9637));
        // 14 00C8
        gbc.setState(0x4e82, 0xff36, 0x7ac0, 0x7cc, 0x5571, 0x52c0, 0x1, 0x0);
        gbc.writeMem(0x4e82, { 0x14 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xff36, gbc.sp());
        EXPECT(0x4e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 00C9
        gbc.setState(0xae41, 0x8252, 0xfcc0, 0x2f0e, 0xd99b, 0x3cb2, 0x1, 0x1);
        gbc.writeMem(0xae41, { 0x14 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8252, gbc.sp());
        EXPECT(0xae42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xae41));
        // 14 00CA
        gbc.setState(0x21a8, 0xd751, 0x6d90, 0xf830, 0xbbd6, 0xd123, 0x0, 0x1);
        gbc.writeMem(0x21a8, { 0x14 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd751, gbc.sp());
        EXPECT(0x21a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00CB
        gbc.setState(0x10c6, 0xfb99, 0xbcd0, 0x5606, 0x2e21, 0xc83a, 0x0, 0x0);
        gbc.writeMem(0x10c6, { 0x14 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfb99, gbc.sp());
        EXPECT(0x10c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00CC
        gbc.setState(0x4aaf, 0x16e4, 0x5af0, 0xdbeb, 0xc1bb, 0xaa32, 0x0, 0x0);
        gbc.writeMem(0x4aaf, { 0x14 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x16e4, gbc.sp());
        EXPECT(0x4ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00CD
        gbc.setState(0x9dae, 0xcd1d, 0x2b10, 0xa369, 0xae12, 0x370, 0x0, 0x1);
        gbc.writeMem(0x9dae, { 0x14 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xcd1d, gbc.sp());
        EXPECT(0x9daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9dae));
        // 14 00CE
        gbc.setState(0x25d6, 0x4725, 0x9050, 0xf6c4, 0x324f, 0x5fda, 0x0, 0x1);
        gbc.writeMem(0x25d6, { 0x14 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4725, gbc.sp());
        EXPECT(0x25d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00CF
        gbc.setState(0x56fe, 0x1d68, 0x5ea0, 0xeb0d, 0x7320, 0x8712, 0x1, 0x1);
        gbc.writeMem(0x56fe, { 0x14 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1d68, gbc.sp());
        EXPECT(0x56ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 00D0
        gbc.setState(0x7fe0, 0xa449, 0xb4f0, 0xb819, 0xec2c, 0xf456, 0x0, 0x0);
        gbc.writeMem(0x7fe0, { 0x14 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa449, gbc.sp());
        EXPECT(0x7fe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00D1
        gbc.setState(0xe635, 0x9b03, 0xfdc0, 0x3503, 0x7758, 0x7ed7, 0x1, 0x1);
        gbc.writeMem(0xe635, { 0x14 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9b03, gbc.sp());
        EXPECT(0xe636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe635));
        // 14 00D2
        gbc.setState(0xa892, 0x1115, 0x11d0, 0x3784, 0x98d3, 0xf0a8, 0x1, 0x0);
        gbc.writeMem(0xa892, { 0x14 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1115, gbc.sp());
        EXPECT(0xa893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa892));
        // 14 00D4
        gbc.setState(0x3152, 0x9a27, 0x8fd0, 0xd0bb, 0x25d0, 0x3413, 0x1, 0x1);
        gbc.writeMem(0x3152, { 0x14 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9a27, gbc.sp());
        EXPECT(0x3153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00D5
        gbc.setState(0x7fb, 0x144f, 0xb9a0, 0x6e7c, 0xe2, 0x732, 0x1, 0x1);
        gbc.writeMem(0x7fb, { 0x14 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x144f, gbc.sp());
        EXPECT(0x7fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 00D7
        gbc.setState(0x6b4d, 0x2669, 0xa090, 0x398, 0x4cef, 0x9d04, 0x1, 0x0);
        gbc.writeMem(0x6b4d, { 0x14 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2669, gbc.sp());
        EXPECT(0x6b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00D8
        gbc.setState(0x3061, 0x2fa4, 0xa0a0, 0x3c32, 0xb5cb, 0x50d8, 0x0, 0x0);
        gbc.writeMem(0x3061, { 0x14 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2fa4, gbc.sp());
        EXPECT(0x3062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 00D9
        gbc.setState(0x85d7, 0x8b58, 0x820, 0x3377, 0x44dc, 0x8bae, 0x1, 0x1);
        gbc.writeMem(0x85d7, { 0x14 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8b58, gbc.sp());
        EXPECT(0x85d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x85d7));
        // 14 00DA
        gbc.setState(0xd985, 0x53e9, 0xba0, 0xea51, 0xc4a4, 0x16bb, 0x1, 0x0);
        gbc.writeMem(0xd985, { 0x14 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x53e9, gbc.sp());
        EXPECT(0xd986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd985));
        // 14 00DB
        gbc.setState(0xed29, 0xf082, 0x5f40, 0xf9fb, 0xbaba, 0x7761, 0x1, 0x0);
        gbc.writeMem(0xed29, { 0x14 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf082, gbc.sp());
        EXPECT(0xed2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xed29));
        // 14 00DC
        gbc.setState(0x3c9c, 0xa5e2, 0x18f0, 0xbf2e, 0xd142, 0x869b, 0x0, 0x0);
        gbc.writeMem(0x3c9c, { 0x14 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa5e2, gbc.sp());
        EXPECT(0x3c9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00DD
        gbc.setState(0x2a11, 0x5028, 0x70, 0xc4ee, 0x69b3, 0x328, 0x1, 0x1);
        gbc.writeMem(0x2a11, { 0x14 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5028, gbc.sp());
        EXPECT(0x2a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00DE
        gbc.setState(0x480b, 0x4d9a, 0xf250, 0x534b, 0xd3eb, 0x2338, 0x0, 0x1);
        gbc.writeMem(0x480b, { 0x14 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4d9a, gbc.sp());
        EXPECT(0x480c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00DF
        gbc.setState(0xc9df, 0xa07e, 0xfa0, 0xc903, 0x79bd, 0x2f4e, 0x1, 0x0);
        gbc.writeMem(0xc9df, { 0x14 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa07e, gbc.sp());
        EXPECT(0xc9e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc9df));
        // 14 00E0
        gbc.setState(0x2557, 0xa14b, 0xbf50, 0xa13e, 0x8aac, 0x1d0d, 0x1, 0x0);
        gbc.writeMem(0x2557, { 0x14 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa14b, gbc.sp());
        EXPECT(0x2558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00E1
        gbc.setState(0x34c3, 0xf3f2, 0xee50, 0x4585, 0x7f39, 0x3743, 0x1, 0x1);
        gbc.writeMem(0x34c3, { 0x14 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf3f2, gbc.sp());
        EXPECT(0x34c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00E2
        gbc.setState(0x109a, 0xff88, 0xcb90, 0x15eb, 0x73b5, 0x3d2b, 0x1, 0x0);
        gbc.writeMem(0x109a, { 0x14 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xff88, gbc.sp());
        EXPECT(0x109b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00E3
        gbc.setState(0xcb9, 0x22f0, 0xc470, 0x35d6, 0x3941, 0xc5fb, 0x0, 0x0);
        gbc.writeMem(0xcb9, { 0x14 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x22f0, gbc.sp());
        EXPECT(0xcba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00E4
        gbc.setState(0x366a, 0x3857, 0x76b0, 0x1004, 0xbda, 0x3d77, 0x0, 0x0);
        gbc.writeMem(0x366a, { 0x14 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3857, gbc.sp());
        EXPECT(0x366b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00E5
        gbc.setState(0xde93, 0xde3a, 0xe10, 0x7bc8, 0xbc4c, 0x9523, 0x0, 0x0);
        gbc.writeMem(0xde93, { 0x14 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xde3a, gbc.sp());
        EXPECT(0xde94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xde93));
        // 14 00E6
        gbc.setState(0x3b62, 0xabb5, 0xed70, 0x516, 0xeaad, 0xe649, 0x1, 0x0);
        gbc.writeMem(0x3b62, { 0x14 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xabb5, gbc.sp());
        EXPECT(0x3b63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00E7
        gbc.setState(0x2925, 0x611d, 0x5070, 0x8a12, 0x870, 0xaa48, 0x0, 0x0);
        gbc.writeMem(0x2925, { 0x14 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x611d, gbc.sp());
        EXPECT(0x2926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00E9
        gbc.setState(0x4f8, 0xeca4, 0x5f70, 0x738c, 0xd219, 0x1359, 0x1, 0x0);
        gbc.writeMem(0x4f8, { 0x14 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xeca4, gbc.sp());
        EXPECT(0x4f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00EA
        gbc.setState(0x3b7e, 0x6c7, 0xa530, 0x6d7f, 0x6f00, 0xce85, 0x0, 0x0);
        gbc.writeMem(0x3b7e, { 0x14 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6c7, gbc.sp());
        EXPECT(0x3b7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00EB
        gbc.setState(0xd3f1, 0x13ea, 0xf6d0, 0xb1da, 0xfcc2, 0x3669, 0x1, 0x1);
        gbc.writeMem(0xd3f1, { 0x14 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x13ea, gbc.sp());
        EXPECT(0xd3f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd3f1));
        // 14 00EC
        gbc.setState(0x6e2a, 0x6dc2, 0xf780, 0x49b7, 0x59db, 0xe292, 0x0, 0x0);
        gbc.writeMem(0x6e2a, { 0x14 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6dc2, gbc.sp());
        EXPECT(0x6e2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 00ED
        gbc.setState(0xcee6, 0x871a, 0x24f0, 0x17da, 0xb0c2, 0xc730, 0x1, 0x1);
        gbc.writeMem(0xcee6, { 0x14 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x871a, gbc.sp());
        EXPECT(0xcee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xcee6));
        // 14 00EE
        gbc.setState(0xa794, 0xe644, 0x5810, 0x99a6, 0xa2a5, 0xb76a, 0x1, 0x1);
        gbc.writeMem(0xa794, { 0x14 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe644, gbc.sp());
        EXPECT(0xa795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa794));
        // 14 00EF
        gbc.setState(0x50db, 0xa8eb, 0x15a0, 0xb05a, 0x4948, 0xb8f2, 0x0, 0x0);
        gbc.writeMem(0x50db, { 0x14 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa8eb, gbc.sp());
        EXPECT(0x50dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 00F0
        gbc.setState(0x92d1, 0x161c, 0x45c0, 0xc558, 0x7e4c, 0xbb9f, 0x1, 0x0);
        gbc.writeMem(0x92d1, { 0x14 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x161c, gbc.sp());
        EXPECT(0x92d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x92d1));
        // 14 00F1
        gbc.setState(0x86bd, 0xd5e6, 0x5160, 0x9812, 0x551d, 0x6a8d, 0x1, 0x1);
        gbc.writeMem(0x86bd, { 0x14 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd5e6, gbc.sp());
        EXPECT(0x86be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x86bd));
        // 14 00F2
        gbc.setState(0x1dfe, 0x261f, 0xa8b0, 0x4438, 0xa14c, 0xd214, 0x0, 0x1);
        gbc.writeMem(0x1dfe, { 0x14 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x261f, gbc.sp());
        EXPECT(0x1dff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00F3
        gbc.setState(0xcf70, 0xf818, 0xf5b0, 0x3dd7, 0x2480, 0x14d1, 0x1, 0x0);
        gbc.writeMem(0xcf70, { 0x14 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf818, gbc.sp());
        EXPECT(0xcf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xcf70));
        // 14 00F4
        gbc.setState(0x3b9d, 0x9ce1, 0xdd50, 0x5574, 0xe766, 0x9a99, 0x0, 0x1);
        gbc.writeMem(0x3b9d, { 0x14 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9ce1, gbc.sp());
        EXPECT(0x3b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00F5
        gbc.setState(0x4b85, 0xc4b2, 0xec0, 0x64ff, 0x9fa1, 0x4318, 0x1, 0x0);
        gbc.writeMem(0x4b85, { 0x14 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc4b2, gbc.sp());
        EXPECT(0x4b86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 00F6
        gbc.setState(0x5fc9, 0xe12e, 0xd4d0, 0xa087, 0x708a, 0x368f, 0x0, 0x1);
        gbc.writeMem(0x5fc9, { 0x14 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe12e, gbc.sp());
        EXPECT(0x5fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 00F7
        gbc.setState(0xaacc, 0x5223, 0x7560, 0xa01e, 0x7859, 0x85da, 0x1, 0x0);
        gbc.writeMem(0xaacc, { 0x14 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5223, gbc.sp());
        EXPECT(0xaacd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xaacc));
        // 14 00F8
        gbc.setState(0xb181, 0x50fd, 0x56f0, 0x24bb, 0x49f0, 0x69f7, 0x0, 0x1);
        gbc.writeMem(0xb181, { 0x14 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x50fd, gbc.sp());
        EXPECT(0xb182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb181));
        // 14 00F9
        gbc.setState(0xc40a, 0x1ccd, 0xebe0, 0x5a00, 0xeb07, 0x8270, 0x0, 0x0);
        gbc.writeMem(0xc40a, { 0x14 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1ccd, gbc.sp());
        EXPECT(0xc40b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc40a));
        // 14 00FA
        gbc.setState(0x6545, 0xcf9d, 0x4ec0, 0x726c, 0xab16, 0x399f, 0x0, 0x0);
        gbc.writeMem(0x6545, { 0x14 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xcf9d, gbc.sp());
        EXPECT(0x6546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 00FC
        gbc.setState(0x6db8, 0xe8fa, 0xe5c0, 0x4f66, 0x842f, 0x3f68, 0x1, 0x1);
        gbc.writeMem(0x6db8, { 0x14 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe8fa, gbc.sp());
        EXPECT(0x6db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 00FD
        gbc.setState(0x4e7a, 0x2db0, 0x2ea0, 0xa59c, 0x2785, 0x4649, 0x0, 0x1);
        gbc.writeMem(0x4e7a, { 0x14 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2db0, gbc.sp());
        EXPECT(0x4e7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 00FE
        gbc.setState(0x7a6, 0xa89, 0x2f20, 0xd1ef, 0xf5c6, 0x30d6, 0x1, 0x0);
        gbc.writeMem(0x7a6, { 0x14 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa89, gbc.sp());
        EXPECT(0x7a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0100
        gbc.setState(0x1f55, 0x8029, 0x6ef0, 0xed47, 0xf67d, 0x6a02, 0x0, 0x1);
        gbc.writeMem(0x1f55, { 0x14 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8029, gbc.sp());
        EXPECT(0x1f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0102
        gbc.setState(0xd44e, 0x7c79, 0x320, 0x8f94, 0x87cc, 0xc1c2, 0x1, 0x0);
        gbc.writeMem(0xd44e, { 0x14 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7c79, gbc.sp());
        EXPECT(0xd44f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd44e));
        // 14 0103
        gbc.setState(0x10b0, 0xf2dc, 0xa400, 0x8e9d, 0x9fc5, 0xbfe1, 0x1, 0x1);
        gbc.writeMem(0x10b0, { 0x14 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf2dc, gbc.sp());
        EXPECT(0x10b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0104
        gbc.setState(0x6eb0, 0x7465, 0x3950, 0xbc27, 0x6654, 0xb843, 0x0, 0x1);
        gbc.writeMem(0x6eb0, { 0x14 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7465, gbc.sp());
        EXPECT(0x6eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0105
        gbc.setState(0x39ac, 0xd9e9, 0x6b40, 0x6c3f, 0xd576, 0x1866, 0x1, 0x0);
        gbc.writeMem(0x39ac, { 0x14 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd9e9, gbc.sp());
        EXPECT(0x39ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0106
        gbc.setState(0x370, 0x600c, 0x3e60, 0x4840, 0xf369, 0x5d8f, 0x0, 0x0);
        gbc.writeMem(0x370, { 0x14 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x600c, gbc.sp());
        EXPECT(0x371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0107
        gbc.setState(0xe06, 0x3f52, 0xbd20, 0xe92b, 0x6d3d, 0xaa6f, 0x1, 0x0);
        gbc.writeMem(0xe06, { 0x14 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3f52, gbc.sp());
        EXPECT(0xe07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0108
        gbc.setState(0x151, 0xaacb, 0x2bf0, 0xe584, 0xd6de, 0xbf12, 0x0, 0x1);
        gbc.writeMem(0x151, { 0x14 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xaacb, gbc.sp());
        EXPECT(0x152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 010A
        gbc.setState(0x45b3, 0xdf2d, 0xae00, 0x98df, 0x50b6, 0xac9, 0x0, 0x1);
        gbc.writeMem(0x45b3, { 0x14 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdf2d, gbc.sp());
        EXPECT(0x45b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 010B
        gbc.setState(0xb088, 0x98d2, 0x8420, 0x1446, 0xac78, 0x6b1, 0x1, 0x0);
        gbc.writeMem(0xb088, { 0x14 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x98d2, gbc.sp());
        EXPECT(0xb089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb088));
        // 14 010C
        gbc.setState(0x471b, 0xd523, 0x44b0, 0xb4ec, 0x643e, 0xc524, 0x0, 0x1);
        gbc.writeMem(0x471b, { 0x14 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd523, gbc.sp());
        EXPECT(0x471c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 010D
        gbc.setState(0x3739, 0x2daf, 0x3aa0, 0xf1bd, 0x9aa8, 0x4950, 0x0, 0x0);
        gbc.writeMem(0x3739, { 0x14 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2daf, gbc.sp());
        EXPECT(0x373a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 010E
        gbc.setState(0x1dee, 0x1c45, 0xfc40, 0xe211, 0x332e, 0x386e, 0x1, 0x0);
        gbc.writeMem(0x1dee, { 0x14 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1c45, gbc.sp());
        EXPECT(0x1def, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 010F
        gbc.setState(0x69cd, 0x690c, 0x8f70, 0x74b, 0xec95, 0x7181, 0x1, 0x0);
        gbc.writeMem(0x69cd, { 0x14 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x690c, gbc.sp());
        EXPECT(0x69ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0110
        gbc.setState(0x8103, 0x3631, 0x31e0, 0x69cb, 0x13c1, 0x1ac9, 0x1, 0x0);
        gbc.writeMem(0x8103, { 0x14 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3631, gbc.sp());
        EXPECT(0x8104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8103));
        // 14 0111
        gbc.setState(0xd36b, 0xff8d, 0x87d0, 0xc675, 0xac92, 0x1ae0, 0x1, 0x0);
        gbc.writeMem(0xd36b, { 0x14 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xff8d, gbc.sp());
        EXPECT(0xd36c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd36b));
        // 14 0112
        gbc.setState(0x3319, 0xe953, 0x5060, 0xa5e6, 0x13a, 0xc2bd, 0x0, 0x0);
        gbc.writeMem(0x3319, { 0x14 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe953, gbc.sp());
        EXPECT(0x331a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0113
        gbc.setState(0x2a7a, 0xb9d6, 0x1c50, 0xbb38, 0xc0c, 0x728, 0x1, 0x0);
        gbc.writeMem(0x2a7a, { 0x14 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb9d6, gbc.sp());
        EXPECT(0x2a7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0115
        gbc.setState(0x6906, 0x82af, 0x3fa0, 0xc2f0, 0x42ec, 0x67e3, 0x0, 0x0);
        gbc.writeMem(0x6906, { 0x14 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x82af, gbc.sp());
        EXPECT(0x6907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0116
        gbc.setState(0x5f79, 0x9062, 0x74e0, 0x4728, 0x2d51, 0x8652, 0x0, 0x0);
        gbc.writeMem(0x5f79, { 0x14 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9062, gbc.sp());
        EXPECT(0x5f7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0117
        gbc.setState(0xa165, 0x399e, 0xe0e0, 0x97b7, 0xb8d3, 0x8162, 0x1, 0x0);
        gbc.writeMem(0xa165, { 0x14 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x399e, gbc.sp());
        EXPECT(0xa166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa165));
        // 14 0118
        gbc.setState(0xb129, 0xdcac, 0x48c0, 0xcb5, 0xd24d, 0x25dd, 0x0, 0x1);
        gbc.writeMem(0xb129, { 0x14 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdcac, gbc.sp());
        EXPECT(0xb12a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb129));
        // 14 0119
        gbc.setState(0xaa05, 0xcd8b, 0xdff0, 0x238f, 0x51d1, 0xc285, 0x0, 0x1);
        gbc.writeMem(0xaa05, { 0x14 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xcd8b, gbc.sp());
        EXPECT(0xaa06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xaa05));
        // 14 011A
        gbc.setState(0x873d, 0x3e25, 0x4aa0, 0x1002, 0xd573, 0x78c3, 0x0, 0x0);
        gbc.writeMem(0x873d, { 0x14 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3e25, gbc.sp());
        EXPECT(0x873e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x873d));
        // 14 011B
        gbc.setState(0x3ffb, 0x525b, 0x6af0, 0x4fd1, 0x31f3, 0x7fd7, 0x0, 0x0);
        gbc.writeMem(0x3ffb, { 0x14 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x525b, gbc.sp());
        EXPECT(0x3ffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 011D
        gbc.setState(0xdfe1, 0x5d48, 0x720, 0x3326, 0x5fd2, 0xa932, 0x1, 0x1);
        gbc.writeMem(0xdfe1, { 0x14 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5d48, gbc.sp());
        EXPECT(0xdfe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdfe1));
        // 14 011E
        gbc.setState(0x4b19, 0x8650, 0x51d0, 0x5153, 0x12, 0xf7cc, 0x1, 0x1);
        gbc.writeMem(0x4b19, { 0x14 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8650, gbc.sp());
        EXPECT(0x4b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 011F
        gbc.setState(0xe258, 0xedaf, 0x1030, 0x5eca, 0x32b2, 0x19a6, 0x1, 0x0);
        gbc.writeMem(0xe258, { 0x14 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xedaf, gbc.sp());
        EXPECT(0xe259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe258));
        // 14 0120
        gbc.setState(0xaf0f, 0xc275, 0x97c0, 0x2fd7, 0xc19c, 0xdcf0, 0x1, 0x0);
        gbc.writeMem(0xaf0f, { 0x14 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc275, gbc.sp());
        EXPECT(0xaf10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xaf0f));
        // 14 0121
        gbc.setState(0x312f, 0x3c28, 0x5ff0, 0xe26a, 0xef81, 0xeb6e, 0x1, 0x0);
        gbc.writeMem(0x312f, { 0x14 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3c28, gbc.sp());
        EXPECT(0x3130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0122
        gbc.setState(0xcb13, 0x4d62, 0x2370, 0x176c, 0xae2a, 0x31b9, 0x1, 0x0);
        gbc.writeMem(0xcb13, { 0x14 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4d62, gbc.sp());
        EXPECT(0xcb14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xcb13));
        // 14 0123
        gbc.setState(0x3e7f, 0xd8b6, 0xacf0, 0x3f18, 0xf9b5, 0x2f08, 0x1, 0x0);
        gbc.writeMem(0x3e7f, { 0x14 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd8b6, gbc.sp());
        EXPECT(0x3e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0124
        gbc.setState(0x690a, 0x7276, 0xf180, 0x51c8, 0x6b7d, 0xf22b, 0x1, 0x1);
        gbc.writeMem(0x690a, { 0x14 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7276, gbc.sp());
        EXPECT(0x690b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0125
        gbc.setState(0x1894, 0x2ca0, 0x2f00, 0x793b, 0x77b1, 0x6697, 0x0, 0x1);
        gbc.writeMem(0x1894, { 0x14 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2ca0, gbc.sp());
        EXPECT(0x1895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0126
        gbc.setState(0x3439, 0xd965, 0x93a0, 0x2092, 0x5047, 0xae1c, 0x1, 0x1);
        gbc.writeMem(0x3439, { 0x14 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd965, gbc.sp());
        EXPECT(0x343a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0128
        gbc.setState(0x1d8a, 0xf308, 0xb970, 0x1a65, 0xfd0e, 0x8fe2, 0x0, 0x1);
        gbc.writeMem(0x1d8a, { 0x14 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf308, gbc.sp());
        EXPECT(0x1d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0129
        gbc.setState(0xa1a4, 0x2014, 0xac30, 0x4363, 0x33e6, 0x1e58, 0x0, 0x0);
        gbc.writeMem(0xa1a4, { 0x14 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2014, gbc.sp());
        EXPECT(0xa1a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa1a4));
        // 14 012B
        gbc.setState(0x6e57, 0x9e91, 0x890, 0x6814, 0xbbbf, 0xabe4, 0x1, 0x0);
        gbc.writeMem(0x6e57, { 0x14 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9e91, gbc.sp());
        EXPECT(0x6e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 012C
        gbc.setState(0x74c7, 0x520b, 0x30d0, 0x236f, 0xb32e, 0x5ec9, 0x1, 0x1);
        gbc.writeMem(0x74c7, { 0x14 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x520b, gbc.sp());
        EXPECT(0x74c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 012D
        gbc.setState(0x2f8e, 0x4d24, 0x5290, 0xd546, 0xfa6a, 0x9cc4, 0x1, 0x1);
        gbc.writeMem(0x2f8e, { 0x14 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4d24, gbc.sp());
        EXPECT(0x2f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 012E
        gbc.setState(0x5a04, 0xb507, 0x44f0, 0xb880, 0x11ab, 0x65a, 0x0, 0x0);
        gbc.writeMem(0x5a04, { 0x14 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb507, gbc.sp());
        EXPECT(0x5a05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 012F
        gbc.setState(0x93f5, 0xe525, 0xe30, 0xc599, 0xd70d, 0x65a0, 0x0, 0x1);
        gbc.writeMem(0x93f5, { 0x14 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe525, gbc.sp());
        EXPECT(0x93f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x93f5));
        // 14 0130
        gbc.setState(0xcc95, 0x9789, 0xb80, 0x38db, 0x2ed6, 0x7d6a, 0x1, 0x0);
        gbc.writeMem(0xcc95, { 0x14 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9789, gbc.sp());
        EXPECT(0xcc96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xcc95));
        // 14 0131
        gbc.setState(0x5f95, 0xdb24, 0x2aa0, 0x808f, 0xb92d, 0xfd98, 0x0, 0x0);
        gbc.writeMem(0x5f95, { 0x14 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xdb24, gbc.sp());
        EXPECT(0x5f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0132
        gbc.setState(0xe4c7, 0x80f2, 0xed40, 0x60c5, 0x4d4d, 0x47f4, 0x1, 0x1);
        gbc.writeMem(0xe4c7, { 0x14 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x80f2, gbc.sp());
        EXPECT(0xe4c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe4c7));
        // 14 0133
        gbc.setState(0x40c4, 0x25c4, 0xc160, 0x5fc8, 0xeeed, 0x6a86, 0x0, 0x0);
        gbc.writeMem(0x40c4, { 0x14 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x25c4, gbc.sp());
        EXPECT(0x40c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0134
        gbc.setState(0xbb54, 0xd505, 0x2c40, 0x74fa, 0x2511, 0xe235, 0x0, 0x0);
        gbc.writeMem(0xbb54, { 0x14 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd505, gbc.sp());
        EXPECT(0xbb55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbb54));
        // 14 0135
        gbc.setState(0xfe1, 0xb1b2, 0xa160, 0x542, 0x4941, 0x6186, 0x0, 0x1);
        gbc.writeMem(0xfe1, { 0x14 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb1b2, gbc.sp());
        EXPECT(0xfe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0136
        gbc.setState(0xcb9b, 0x5b93, 0x1e70, 0xfa22, 0x96b1, 0xc2f6, 0x0, 0x0);
        gbc.writeMem(0xcb9b, { 0x14 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5b93, gbc.sp());
        EXPECT(0xcb9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xcb9b));
        // 14 0137
        gbc.setState(0xeacb, 0xcbdb, 0x510, 0x445e, 0x3635, 0xafd8, 0x1, 0x0);
        gbc.writeMem(0xeacb, { 0x14 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcbdb, gbc.sp());
        EXPECT(0xeacc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xeacb));
        // 14 0138
        gbc.setState(0x4ccb, 0x681a, 0xc0, 0xc3b2, 0xc04d, 0x6cad, 0x1, 0x0);
        gbc.writeMem(0x4ccb, { 0x14 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x681a, gbc.sp());
        EXPECT(0x4ccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0139
        gbc.setState(0x5fa7, 0xcf6d, 0xdb70, 0x9f0, 0xa186, 0x85d9, 0x0, 0x1);
        gbc.writeMem(0x5fa7, { 0x14 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xcf6d, gbc.sp());
        EXPECT(0x5fa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 013B
        gbc.setState(0xb76a, 0xcef, 0x1d60, 0xee5, 0x72c3, 0x73cd, 0x1, 0x1);
        gbc.writeMem(0xb76a, { 0x14 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcef, gbc.sp());
        EXPECT(0xb76b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb76a));
        // 14 013C
        gbc.setState(0xed2a, 0x889e, 0x5d70, 0x616c, 0x9b05, 0x997b, 0x1, 0x1);
        gbc.writeMem(0xed2a, { 0x14 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x889e, gbc.sp());
        EXPECT(0xed2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xed2a));
        // 14 013D
        gbc.setState(0x6ca9, 0x7102, 0x700, 0xd906, 0xcbda, 0xa58b, 0x0, 0x1);
        gbc.writeMem(0x6ca9, { 0x14 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7102, gbc.sp());
        EXPECT(0x6caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 013E
        gbc.setState(0xd9f3, 0xf48f, 0x5c30, 0xaefa, 0xbfd5, 0xfd6d, 0x1, 0x0);
        gbc.writeMem(0xd9f3, { 0x14 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf48f, gbc.sp());
        EXPECT(0xd9f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd9f3));
        // 14 013F
        gbc.setState(0x6dc2, 0x469, 0xcf30, 0x79f, 0x3a15, 0xab23, 0x1, 0x1);
        gbc.writeMem(0x6dc2, { 0x14 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x469, gbc.sp());
        EXPECT(0x6dc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0140
        gbc.setState(0x2649, 0x28c7, 0xf690, 0x6979, 0x544d, 0x56d7, 0x1, 0x0);
        gbc.writeMem(0x2649, { 0x14 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x28c7, gbc.sp());
        EXPECT(0x264a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0141
        gbc.setState(0x630c, 0xa1e0, 0xa860, 0x262a, 0x5174, 0x2193, 0x0, 0x0);
        gbc.writeMem(0x630c, { 0x14 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa1e0, gbc.sp());
        EXPECT(0x630d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0142
        gbc.setState(0x5e92, 0x645f, 0x5f80, 0xb52f, 0xd1a8, 0x1acd, 0x0, 0x0);
        gbc.writeMem(0x5e92, { 0x14 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x645f, gbc.sp());
        EXPECT(0x5e93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0143
        gbc.setState(0xb71b, 0xf4f0, 0x7b40, 0x2487, 0x5120, 0xeeca, 0x1, 0x0);
        gbc.writeMem(0xb71b, { 0x14 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf4f0, gbc.sp());
        EXPECT(0xb71c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb71b));
        // 14 0144
        gbc.setState(0x8010, 0x2617, 0x3120, 0x1403, 0xedaf, 0xf986, 0x0, 0x1);
        gbc.writeMem(0x8010, { 0x14 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2617, gbc.sp());
        EXPECT(0x8011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8010));
        // 14 0145
        gbc.setState(0xf24, 0xed80, 0x30b0, 0x9179, 0xfbe, 0x845b, 0x1, 0x0);
        gbc.writeMem(0xf24, { 0x14 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xed80, gbc.sp());
        EXPECT(0xf25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0146
        gbc.setState(0x2233, 0x7db7, 0x9620, 0x403c, 0xc092, 0xdaef, 0x1, 0x0);
        gbc.writeMem(0x2233, { 0x14 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7db7, gbc.sp());
        EXPECT(0x2234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0147
        gbc.setState(0x3b55, 0x9436, 0xd1c0, 0x1da7, 0xe167, 0x5e65, 0x0, 0x1);
        gbc.writeMem(0x3b55, { 0x14 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9436, gbc.sp());
        EXPECT(0x3b56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0148
        gbc.setState(0x4550, 0x317d, 0x5740, 0x2a29, 0xca56, 0x4198, 0x1, 0x0);
        gbc.writeMem(0x4550, { 0x14 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x317d, gbc.sp());
        EXPECT(0x4551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0149
        gbc.setState(0x25b2, 0xffe5, 0x85c0, 0x7050, 0x7df1, 0x2849, 0x1, 0x1);
        gbc.writeMem(0x25b2, { 0x14 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xffe5, gbc.sp());
        EXPECT(0x25b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 014A
        gbc.setState(0xd7fa, 0x15cd, 0x73e0, 0x7bf, 0x6f43, 0xaa09, 0x1, 0x1);
        gbc.writeMem(0xd7fa, { 0x14 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x15cd, gbc.sp());
        EXPECT(0xd7fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd7fa));
        // 14 014B
        gbc.setState(0xcfca, 0x349b, 0x7a40, 0xedf5, 0x551d, 0x5938, 0x1, 0x1);
        gbc.writeMem(0xcfca, { 0x14 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x349b, gbc.sp());
        EXPECT(0xcfcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xcfca));
        // 14 014C
        gbc.setState(0x4dc2, 0x5945, 0x4aa0, 0x39db, 0xbad3, 0xe920, 0x0, 0x1);
        gbc.writeMem(0x4dc2, { 0x14 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5945, gbc.sp());
        EXPECT(0x4dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 014D
        gbc.setState(0x32c3, 0xd0cc, 0x1340, 0xffcc, 0xe3ea, 0x4190, 0x1, 0x0);
        gbc.writeMem(0x32c3, { 0x14 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd0cc, gbc.sp());
        EXPECT(0x32c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 014F
        gbc.setState(0x37e3, 0x45f8, 0xff50, 0x468d, 0xc8c8, 0xed45, 0x0, 0x1);
        gbc.writeMem(0x37e3, { 0x14 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x45f8, gbc.sp());
        EXPECT(0x37e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0150
        gbc.setState(0x6376, 0xa140, 0x88f0, 0xa261, 0xd9b8, 0x96b3, 0x0, 0x0);
        gbc.writeMem(0x6376, { 0x14 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa140, gbc.sp());
        EXPECT(0x6377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0152
        gbc.setState(0x4863, 0xfdba, 0x44a0, 0x9efe, 0x23ae, 0x2572, 0x1, 0x0);
        gbc.writeMem(0x4863, { 0x14 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xfdba, gbc.sp());
        EXPECT(0x4864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0153
        gbc.setState(0xd132, 0x3aef, 0x2860, 0xe754, 0x37c3, 0xcc7a, 0x1, 0x0);
        gbc.writeMem(0xd132, { 0x14 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3aef, gbc.sp());
        EXPECT(0xd133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd132));
        // 14 0154
        gbc.setState(0x5c, 0xec0a, 0x14f0, 0xf2db, 0x41f7, 0x4a27, 0x1, 0x1);
        gbc.writeMem(0x5c, { 0x14 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xec0a, gbc.sp());
        EXPECT(0x5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0155
        gbc.setState(0xbe9a, 0x2c5b, 0x84d0, 0x33da, 0x4dcc, 0x7938, 0x1, 0x0);
        gbc.writeMem(0xbe9a, { 0x14 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2c5b, gbc.sp());
        EXPECT(0xbe9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbe9a));
        // 14 0157
        gbc.setState(0xbe8a, 0x13dc, 0xc940, 0x532c, 0x5915, 0x4958, 0x1, 0x0);
        gbc.writeMem(0xbe8a, { 0x14 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x13dc, gbc.sp());
        EXPECT(0xbe8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbe8a));
        // 14 0158
        gbc.setState(0x838d, 0x16b8, 0x6200, 0x6137, 0x533, 0x8c17, 0x1, 0x0);
        gbc.writeMem(0x838d, { 0x14 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x16b8, gbc.sp());
        EXPECT(0x838e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x838d));
        // 14 015A
        gbc.setState(0xdc0a, 0xba51, 0x5560, 0xf538, 0x5616, 0xfae5, 0x1, 0x1);
        gbc.writeMem(0xdc0a, { 0x14 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xba51, gbc.sp());
        EXPECT(0xdc0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdc0a));
        // 14 015B
        gbc.setState(0xc371, 0x3758, 0x6140, 0xf986, 0x93e, 0x20a4, 0x0, 0x0);
        gbc.writeMem(0xc371, { 0x14 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3758, gbc.sp());
        EXPECT(0xc372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc371));
        // 14 015C
        gbc.setState(0xc5bb, 0x615, 0x3de0, 0x18fd, 0x5943, 0xbe06, 0x0, 0x1);
        gbc.writeMem(0xc5bb, { 0x14 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x615, gbc.sp());
        EXPECT(0xc5bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc5bb));
        // 14 015D
        gbc.setState(0xc27c, 0xe22e, 0x1560, 0x7206, 0x4ea6, 0x31a2, 0x1, 0x0);
        gbc.writeMem(0xc27c, { 0x14 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe22e, gbc.sp());
        EXPECT(0xc27d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc27c));
        // 14 015E
        gbc.setState(0xd754, 0x6ffd, 0x730, 0x432, 0x8412, 0x38b9, 0x0, 0x1);
        gbc.writeMem(0xd754, { 0x14 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6ffd, gbc.sp());
        EXPECT(0xd755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd754));
        // 14 0160
        gbc.setState(0x2e55, 0x1b45, 0xfe90, 0x8aca, 0x24b5, 0x759a, 0x0, 0x1);
        gbc.writeMem(0x2e55, { 0x14 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1b45, gbc.sp());
        EXPECT(0x2e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0161
        gbc.setState(0x8032, 0x5a17, 0xc270, 0x1579, 0xb582, 0xb714, 0x1, 0x1);
        gbc.writeMem(0x8032, { 0x14 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5a17, gbc.sp());
        EXPECT(0x8033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8032));
        // 14 0162
        gbc.setState(0x8596, 0x9e47, 0x8320, 0x947d, 0x9e40, 0x1b0a, 0x0, 0x0);
        gbc.writeMem(0x8596, { 0x14 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9e47, gbc.sp());
        EXPECT(0x8597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8596));
        // 14 0163
        gbc.setState(0xbac6, 0xc8fb, 0x3c20, 0x4f8d, 0x8a8a, 0x7132, 0x0, 0x1);
        gbc.writeMem(0xbac6, { 0x14 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc8fb, gbc.sp());
        EXPECT(0xbac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbac6));
        // 14 0164
        gbc.setState(0xa237, 0x6cea, 0x70c0, 0xe470, 0x4fa, 0xcc74, 0x0, 0x0);
        gbc.writeMem(0xa237, { 0x14 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6cea, gbc.sp());
        EXPECT(0xa238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa237));
        // 14 0165
        gbc.setState(0x4060, 0xbf8c, 0xa0a0, 0xf78a, 0x9664, 0x76f3, 0x0, 0x0);
        gbc.writeMem(0x4060, { 0x14 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xbf8c, gbc.sp());
        EXPECT(0x4061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0166
        gbc.setState(0x4d3a, 0xabcd, 0x5380, 0xae74, 0x4246, 0xe235, 0x0, 0x1);
        gbc.writeMem(0x4d3a, { 0x14 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xabcd, gbc.sp());
        EXPECT(0x4d3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0167
        gbc.setState(0x2c3c, 0xa792, 0xfa0, 0xb720, 0xe974, 0x39a2, 0x0, 0x0);
        gbc.writeMem(0x2c3c, { 0x14 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa792, gbc.sp());
        EXPECT(0x2c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0168
        gbc.setState(0xc9f5, 0xe869, 0x780, 0x15ee, 0x9543, 0xae63, 0x1, 0x0);
        gbc.writeMem(0xc9f5, { 0x14 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe869, gbc.sp());
        EXPECT(0xc9f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc9f5));
        // 14 0169
        gbc.setState(0x336a, 0x5a64, 0x1bd0, 0xb6b2, 0x56f, 0x5609, 0x0, 0x0);
        gbc.writeMem(0x336a, { 0x14 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5a64, gbc.sp());
        EXPECT(0x336b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 016B
        gbc.setState(0x1c0e, 0xe00e, 0x5ca0, 0xeef6, 0x1831, 0x1fc1, 0x0, 0x1);
        gbc.writeMem(0x1c0e, { 0x14 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe00e, gbc.sp());
        EXPECT(0x1c0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 016C
        gbc.setState(0xeb02, 0x4958, 0x3fc0, 0xbc23, 0x7ae1, 0x4bc8, 0x0, 0x1);
        gbc.writeMem(0xeb02, { 0x14 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4958, gbc.sp());
        EXPECT(0xeb03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xeb02));
        // 14 016D
        gbc.setState(0xba9c, 0xa03a, 0x27e0, 0xa998, 0xe796, 0x8496, 0x0, 0x0);
        gbc.writeMem(0xba9c, { 0x14 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa03a, gbc.sp());
        EXPECT(0xba9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xba9c));
        // 14 016E
        gbc.setState(0x37fb, 0x789, 0x2190, 0x94b0, 0xf8df, 0xd48d, 0x1, 0x1);
        gbc.writeMem(0x37fb, { 0x14 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x789, gbc.sp());
        EXPECT(0x37fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 016F
        gbc.setState(0x8a9d, 0xff99, 0x5f10, 0x52e8, 0x763c, 0x24fe, 0x1, 0x0);
        gbc.writeMem(0x8a9d, { 0x14 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xff99, gbc.sp());
        EXPECT(0x8a9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8a9d));
        // 14 0170
        gbc.setState(0xe5b8, 0xaa51, 0xdba0, 0x9af2, 0xd961, 0x5a05, 0x0, 0x0);
        gbc.writeMem(0xe5b8, { 0x14 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xaa51, gbc.sp());
        EXPECT(0xe5b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe5b8));
        // 14 0171
        gbc.setState(0x997a, 0xa88f, 0xd6a0, 0x90ca, 0x4fa2, 0x762c, 0x0, 0x0);
        gbc.writeMem(0x997a, { 0x14 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa88f, gbc.sp());
        EXPECT(0x997b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x997a));
        // 14 0172
        gbc.setState(0x8f3f, 0xd09c, 0xfc0, 0xc0a5, 0x304b, 0xe1bf, 0x0, 0x1);
        gbc.writeMem(0x8f3f, { 0x14 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd09c, gbc.sp());
        EXPECT(0x8f40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8f3f));
        // 14 0173
        gbc.setState(0x4905, 0xbb0c, 0x4360, 0x4717, 0x9ee3, 0xcb10, 0x1, 0x1);
        gbc.writeMem(0x4905, { 0x14 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xbb0c, gbc.sp());
        EXPECT(0x4906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0174
        gbc.setState(0x15a7, 0x994a, 0xd510, 0x2a5b, 0xc26e, 0x3975, 0x1, 0x1);
        gbc.writeMem(0x15a7, { 0x14 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x994a, gbc.sp());
        EXPECT(0x15a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0175
        gbc.setState(0xc2c2, 0x341c, 0x1290, 0x9d0e, 0x45d8, 0x813c, 0x1, 0x1);
        gbc.writeMem(0xc2c2, { 0x14 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x341c, gbc.sp());
        EXPECT(0xc2c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc2c2));
        // 14 0176
        gbc.setState(0x451, 0x4114, 0xc730, 0xbb09, 0x683e, 0x2ad6, 0x1, 0x0);
        gbc.writeMem(0x451, { 0x14 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4114, gbc.sp());
        EXPECT(0x452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0177
        gbc.setState(0xdfb3, 0x4d6a, 0x9550, 0x3da2, 0x6403, 0x7c85, 0x0, 0x1);
        gbc.writeMem(0xdfb3, { 0x14 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4d6a, gbc.sp());
        EXPECT(0xdfb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdfb3));
        // 14 0178
        gbc.setState(0x4a17, 0xf9bf, 0x710, 0x3188, 0x7cd, 0x694e, 0x0, 0x0);
        gbc.writeMem(0x4a17, { 0x14 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf9bf, gbc.sp());
        EXPECT(0x4a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0179
        gbc.setState(0x996a, 0xdee0, 0xdce0, 0x62b7, 0xafa7, 0x3182, 0x0, 0x1);
        gbc.writeMem(0x996a, { 0x14 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xdee0, gbc.sp());
        EXPECT(0x996b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x996a));
        // 14 017A
        gbc.setState(0xdde2, 0x9926, 0x4940, 0xc9f, 0xc340, 0x408b, 0x0, 0x0);
        gbc.writeMem(0xdde2, { 0x14 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9926, gbc.sp());
        EXPECT(0xdde3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdde2));
        // 14 017B
        gbc.setState(0xc5ec, 0x128c, 0x3600, 0xc22, 0x8a62, 0xb0a4, 0x0, 0x0);
        gbc.writeMem(0xc5ec, { 0x14 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x128c, gbc.sp());
        EXPECT(0xc5ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc5ec));
        // 14 017D
        gbc.setState(0xbc17, 0xd671, 0x98d0, 0x5fc3, 0x7c8f, 0x2f53, 0x0, 0x0);
        gbc.writeMem(0xbc17, { 0x14 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd671, gbc.sp());
        EXPECT(0xbc18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbc17));
        // 14 017E
        gbc.setState(0xbdba, 0x5e85, 0xc0e0, 0xf3f0, 0x341b, 0xdb72, 0x0, 0x1);
        gbc.writeMem(0xbdba, { 0x14 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5e85, gbc.sp());
        EXPECT(0xbdbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbdba));
        // 14 0180
        gbc.setState(0xbd9e, 0xf532, 0x750, 0x6226, 0x5b02, 0x2702, 0x0, 0x1);
        gbc.writeMem(0xbd9e, { 0x14 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf532, gbc.sp());
        EXPECT(0xbd9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbd9e));
        // 14 0181
        gbc.setState(0x51c3, 0xfee, 0xc920, 0x2a7d, 0xb326, 0x9646, 0x0, 0x1);
        gbc.writeMem(0x51c3, { 0x14 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xfee, gbc.sp());
        EXPECT(0x51c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0182
        gbc.setState(0xaae7, 0x75c1, 0x8d80, 0x8866, 0xf863, 0x50e9, 0x1, 0x1);
        gbc.writeMem(0xaae7, { 0x14 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x75c1, gbc.sp());
        EXPECT(0xaae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xaae7));
        // 14 0183
        gbc.setState(0x28d4, 0x87a3, 0x1b0, 0x6eae, 0xc776, 0xcb66, 0x1, 0x0);
        gbc.writeMem(0x28d4, { 0x14 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x87a3, gbc.sp());
        EXPECT(0x28d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0184
        gbc.setState(0x55da, 0xd3dc, 0xab20, 0xdd4e, 0x1ee6, 0x24ca, 0x1, 0x1);
        gbc.writeMem(0x55da, { 0x14 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd3dc, gbc.sp());
        EXPECT(0x55db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0185
        gbc.setState(0x122c, 0xfc15, 0xd0d0, 0x6350, 0x9a34, 0x2d70, 0x1, 0x1);
        gbc.writeMem(0x122c, { 0x14 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xfc15, gbc.sp());
        EXPECT(0x122d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0186
        gbc.setState(0x7618, 0xfdec, 0x4c00, 0xd436, 0x8dc4, 0x31b9, 0x1, 0x1);
        gbc.writeMem(0x7618, { 0x14 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfdec, gbc.sp());
        EXPECT(0x7619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0187
        gbc.setState(0x2dad, 0x918a, 0x5e10, 0x82e1, 0xb573, 0xe4f6, 0x1, 0x1);
        gbc.writeMem(0x2dad, { 0x14 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x918a, gbc.sp());
        EXPECT(0x2dae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0188
        gbc.setState(0x6e43, 0x3020, 0x86c0, 0xba2c, 0xf19e, 0x8b42, 0x0, 0x0);
        gbc.writeMem(0x6e43, { 0x14 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3020, gbc.sp());
        EXPECT(0x6e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0189
        gbc.setState(0x37ed, 0xf43b, 0x6f30, 0xc210, 0xd34b, 0xa7d5, 0x1, 0x1);
        gbc.writeMem(0x37ed, { 0x14 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf43b, gbc.sp());
        EXPECT(0x37ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 018A
        gbc.setState(0xcfe3, 0x613f, 0x47b0, 0xba7f, 0x70ca, 0xf1b4, 0x0, 0x1);
        gbc.writeMem(0xcfe3, { 0x14 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x613f, gbc.sp());
        EXPECT(0xcfe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xcfe3));
        // 14 018B
        gbc.setState(0xc9c, 0x36c8, 0x7fb0, 0x5bb3, 0xbae0, 0xaf87, 0x0, 0x1);
        gbc.writeMem(0xc9c, { 0x14 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x36c8, gbc.sp());
        EXPECT(0xc9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 018C
        gbc.setState(0x71b8, 0x5f15, 0x3fa0, 0x668c, 0x50d9, 0x1e55, 0x1, 0x0);
        gbc.writeMem(0x71b8, { 0x14 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5f15, gbc.sp());
        EXPECT(0x71b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 018D
        gbc.setState(0xefbc, 0x9fb0, 0x92b0, 0xa7a6, 0xe24, 0xb278, 0x1, 0x1);
        gbc.writeMem(0xefbc, { 0x14 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9fb0, gbc.sp());
        EXPECT(0xefbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xefbc));
        // 14 018E
        gbc.setState(0x3293, 0xb33e, 0x90c0, 0xc5d9, 0x1d0b, 0xc70b, 0x1, 0x0);
        gbc.writeMem(0x3293, { 0x14 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb33e, gbc.sp());
        EXPECT(0x3294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 018F
        gbc.setState(0x6f62, 0x3e65, 0xa640, 0x4001, 0x4a0, 0x1cf8, 0x1, 0x1);
        gbc.writeMem(0x6f62, { 0x14 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3e65, gbc.sp());
        EXPECT(0x6f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0190
        gbc.setState(0x8e0f, 0xf1f, 0x99e0, 0xc6cb, 0xec53, 0xac7d, 0x1, 0x0);
        gbc.writeMem(0x8e0f, { 0x14 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf1f, gbc.sp());
        EXPECT(0x8e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8e0f));
        // 14 0191
        gbc.setState(0x4544, 0xbf54, 0xe7c0, 0x6d51, 0xb559, 0xd407, 0x0, 0x0);
        gbc.writeMem(0x4544, { 0x14 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbf54, gbc.sp());
        EXPECT(0x4545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0192
        gbc.setState(0xa03c, 0x97af, 0x1380, 0x490d, 0x5ced, 0x4b81, 0x1, 0x0);
        gbc.writeMem(0xa03c, { 0x14 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x97af, gbc.sp());
        EXPECT(0xa03d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa03c));
        // 14 0193
        gbc.setState(0xbb9, 0x8624, 0x5040, 0x392b, 0xdec5, 0xd97c, 0x0, 0x0);
        gbc.writeMem(0xbb9, { 0x14 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8624, gbc.sp());
        EXPECT(0xbba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0194
        gbc.setState(0x6f14, 0x137a, 0x460, 0x2e3d, 0x6065, 0x4c76, 0x0, 0x0);
        gbc.writeMem(0x6f14, { 0x14 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x137a, gbc.sp());
        EXPECT(0x6f15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0195
        gbc.setState(0x1f52, 0x3388, 0xf610, 0xe6e1, 0xc53f, 0x2802, 0x1, 0x0);
        gbc.writeMem(0x1f52, { 0x14 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3388, gbc.sp());
        EXPECT(0x1f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0196
        gbc.setState(0x75ce, 0x4281, 0xa70, 0x97cd, 0xa5ad, 0x99f7, 0x0, 0x0);
        gbc.writeMem(0x75ce, { 0x14 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4281, gbc.sp());
        EXPECT(0x75cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0197
        gbc.setState(0xec66, 0x788d, 0xa930, 0x998a, 0x479f, 0x56f3, 0x1, 0x0);
        gbc.writeMem(0xec66, { 0x14 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x788d, gbc.sp());
        EXPECT(0xec67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xec66));
        // 14 0198
        gbc.setState(0x5d7, 0xa03e, 0xf090, 0xba04, 0xaac8, 0xa135, 0x0, 0x1);
        gbc.writeMem(0x5d7, { 0x14 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa03e, gbc.sp());
        EXPECT(0x5d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0199
        gbc.setState(0x5328, 0x8d9f, 0x1fe0, 0x203d, 0x327a, 0x9fe2, 0x1, 0x1);
        gbc.writeMem(0x5328, { 0x14 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8d9f, gbc.sp());
        EXPECT(0x5329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 019A
        gbc.setState(0x678e, 0x3677, 0x5370, 0x923c, 0x426a, 0x1865, 0x1, 0x0);
        gbc.writeMem(0x678e, { 0x14 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3677, gbc.sp());
        EXPECT(0x678f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 019B
        gbc.setState(0x158d, 0xa87b, 0x68d0, 0x976f, 0xce96, 0x6c54, 0x1, 0x0);
        gbc.writeMem(0x158d, { 0x14 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa87b, gbc.sp());
        EXPECT(0x158e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 019C
        gbc.setState(0x915f, 0xe409, 0x9e20, 0x5606, 0x24d7, 0x3b34, 0x1, 0x1);
        gbc.writeMem(0x915f, { 0x14 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe409, gbc.sp());
        EXPECT(0x9160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x915f));
        // 14 019D
        gbc.setState(0x2533, 0x3bac, 0xf160, 0xc112, 0xa1f0, 0x7d66, 0x0, 0x1);
        gbc.writeMem(0x2533, { 0x14 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3bac, gbc.sp());
        EXPECT(0x2534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 019E
        gbc.setState(0x8b0, 0x9eea, 0x6350, 0x219a, 0x3d8b, 0x3f8a, 0x1, 0x1);
        gbc.writeMem(0x8b0, { 0x14 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9eea, gbc.sp());
        EXPECT(0x8b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 019F
        gbc.setState(0xb604, 0x992c, 0x13b0, 0x7b64, 0xe052, 0xd2d, 0x1, 0x0);
        gbc.writeMem(0xb604, { 0x14 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x992c, gbc.sp());
        EXPECT(0xb605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb604));
        // 14 01A0
        gbc.setState(0x1dd9, 0x9c70, 0x3ac0, 0xc39d, 0x5c94, 0x3664, 0x1, 0x1);
        gbc.writeMem(0x1dd9, { 0x14 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9c70, gbc.sp());
        EXPECT(0x1dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 01A1
        gbc.setState(0x359c, 0x32c3, 0xecf0, 0x59d7, 0x6b6, 0x35df, 0x1, 0x1);
        gbc.writeMem(0x359c, { 0x14 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x32c3, gbc.sp());
        EXPECT(0x359d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01A2
        gbc.setState(0xcc8e, 0x3a11, 0x9930, 0x9236, 0x5bd9, 0x120f, 0x1, 0x1);
        gbc.writeMem(0xcc8e, { 0x14 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3a11, gbc.sp());
        EXPECT(0xcc8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xcc8e));
        // 14 01A3
        gbc.setState(0xcfde, 0x6137, 0x44f0, 0x8892, 0x9b59, 0x978d, 0x1, 0x1);
        gbc.writeMem(0xcfde, { 0x14 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6137, gbc.sp());
        EXPECT(0xcfdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xcfde));
        // 14 01A4
        gbc.setState(0xb9b5, 0x3816, 0xc990, 0x8db9, 0xf404, 0x9f79, 0x1, 0x0);
        gbc.writeMem(0xb9b5, { 0x14 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3816, gbc.sp());
        EXPECT(0xb9b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb9b5));
        // 14 01A5
        gbc.setState(0xaae, 0xc1d3, 0x4ab0, 0x6d3a, 0xa663, 0x23f6, 0x1, 0x0);
        gbc.writeMem(0xaae, { 0x14 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc1d3, gbc.sp());
        EXPECT(0xaaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01A6
        gbc.setState(0x1ef0, 0x89f4, 0xbd20, 0xe80b, 0x1166, 0x85f6, 0x0, 0x0);
        gbc.writeMem(0x1ef0, { 0x14 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x89f4, gbc.sp());
        EXPECT(0x1ef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 01A7
        gbc.setState(0xc706, 0x3d28, 0xd1b0, 0x6d2d, 0xbee2, 0x1eb8, 0x0, 0x0);
        gbc.writeMem(0xc706, { 0x14 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3d28, gbc.sp());
        EXPECT(0xc707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc706));
        // 14 01A8
        gbc.setState(0x2d4e, 0xdf2, 0x2bb0, 0x8dc7, 0x1688, 0x92f1, 0x1, 0x1);
        gbc.writeMem(0x2d4e, { 0x14 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdf2, gbc.sp());
        EXPECT(0x2d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01A9
        gbc.setState(0xab9d, 0x337e, 0xbfb0, 0x5d57, 0x5b10, 0x475, 0x0, 0x0);
        gbc.writeMem(0xab9d, { 0x14 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x337e, gbc.sp());
        EXPECT(0xab9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xab9d));
        // 14 01AA
        gbc.setState(0xa685, 0x5f51, 0x9060, 0x86c2, 0x7fcf, 0x6eeb, 0x1, 0x1);
        gbc.writeMem(0xa685, { 0x14 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5f51, gbc.sp());
        EXPECT(0xa686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa685));
        // 14 01AB
        gbc.setState(0x8e47, 0x60d4, 0x10e0, 0xfbd9, 0x11c7, 0xc2b6, 0x0, 0x1);
        gbc.writeMem(0x8e47, { 0x14 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x60d4, gbc.sp());
        EXPECT(0x8e48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8e47));
        // 14 01AC
        gbc.setState(0x6977, 0x3612, 0x69b0, 0x864d, 0xf3e8, 0x303, 0x0, 0x1);
        gbc.writeMem(0x6977, { 0x14 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3612, gbc.sp());
        EXPECT(0x6978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01AD
        gbc.setState(0x797c, 0x6ed, 0x3420, 0x673f, 0x6ed4, 0x3124, 0x1, 0x1);
        gbc.writeMem(0x797c, { 0x14 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6ed, gbc.sp());
        EXPECT(0x797d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 01AE
        gbc.setState(0x8291, 0x2c91, 0xea90, 0xd615, 0xc612, 0x2b77, 0x1, 0x1);
        gbc.writeMem(0x8291, { 0x14 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2c91, gbc.sp());
        EXPECT(0x8292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8291));
        // 14 01AF
        gbc.setState(0xdde2, 0x2aab, 0x82d0, 0x7664, 0xdd95, 0xbb09, 0x0, 0x0);
        gbc.writeMem(0xdde2, { 0x14 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2aab, gbc.sp());
        EXPECT(0xdde3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdde2));
        // 14 01B0
        gbc.setState(0x9e9c, 0xbd77, 0xe2d0, 0x87a9, 0x6347, 0x1e6a, 0x1, 0x0);
        gbc.writeMem(0x9e9c, { 0x14 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xbd77, gbc.sp());
        EXPECT(0x9e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9e9c));
        // 14 01B2
        gbc.setState(0x3fcb, 0xcc5e, 0x1fc0, 0xdd32, 0x642e, 0x450b, 0x0, 0x1);
        gbc.writeMem(0x3fcb, { 0x14 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xcc5e, gbc.sp());
        EXPECT(0x3fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 01B3
        gbc.setState(0x4107, 0x3d44, 0xd790, 0x9503, 0x97d8, 0xce0e, 0x0, 0x1);
        gbc.writeMem(0x4107, { 0x14 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3d44, gbc.sp());
        EXPECT(0x4108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01B4
        gbc.setState(0x2020, 0xda7f, 0xf760, 0x759b, 0x3c4, 0x6fd0, 0x0, 0x1);
        gbc.writeMem(0x2020, { 0x14 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xda7f, gbc.sp());
        EXPECT(0x2021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 01B5
        gbc.setState(0xd864, 0x7c31, 0xa0, 0x55c, 0xbc78, 0x25a4, 0x0, 0x0);
        gbc.writeMem(0xd864, { 0x14 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7c31, gbc.sp());
        EXPECT(0xd865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd864));
        // 14 01B6
        gbc.setState(0x179e, 0xc247, 0xf2b0, 0xa505, 0x7a4c, 0x94fa, 0x0, 0x1);
        gbc.writeMem(0x179e, { 0x14 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc247, gbc.sp());
        EXPECT(0x179f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01B7
        gbc.setState(0x10ad, 0x2f83, 0x9a80, 0x5c63, 0xbbec, 0x9cde, 0x1, 0x0);
        gbc.writeMem(0x10ad, { 0x14 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2f83, gbc.sp());
        EXPECT(0x10ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 01B8
        gbc.setState(0x1529, 0xf37f, 0x370, 0x64d2, 0x14fe, 0xcbb1, 0x1, 0x1);
        gbc.writeMem(0x1529, { 0x14 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf37f, gbc.sp());
        EXPECT(0x152a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01B9
        gbc.setState(0xb8b0, 0x8708, 0x4a60, 0x24ca, 0xee41, 0x7050, 0x0, 0x0);
        gbc.writeMem(0xb8b0, { 0x14 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8708, gbc.sp());
        EXPECT(0xb8b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb8b0));
        // 14 01BA
        gbc.setState(0xbb65, 0x6591, 0x1210, 0xf442, 0x7b9f, 0x237, 0x0, 0x0);
        gbc.writeMem(0xbb65, { 0x14 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6591, gbc.sp());
        EXPECT(0xbb66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbb65));
        // 14 01BB
        gbc.setState(0x2fb9, 0x42c5, 0x7f10, 0x9ef7, 0x3379, 0x7b82, 0x1, 0x1);
        gbc.writeMem(0x2fb9, { 0x14 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x42c5, gbc.sp());
        EXPECT(0x2fba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01BC
        gbc.setState(0xe777, 0xf56b, 0xe3f0, 0xd5c3, 0x2ea2, 0xdfb7, 0x1, 0x1);
        gbc.writeMem(0xe777, { 0x14 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf56b, gbc.sp());
        EXPECT(0xe778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe777));
        // 14 01BD
        gbc.setState(0x44b, 0xc48c, 0x1480, 0x358c, 0x1fbc, 0x6e03, 0x0, 0x1);
        gbc.writeMem(0x44b, { 0x14 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc48c, gbc.sp());
        EXPECT(0x44c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 01BE
        gbc.setState(0x7b37, 0x1e58, 0x8740, 0x91af, 0x93bd, 0xeabc, 0x1, 0x0);
        gbc.writeMem(0x7b37, { 0x14 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1e58, gbc.sp());
        EXPECT(0x7b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 01BF
        gbc.setState(0xc30, 0x36e3, 0x3850, 0x87fc, 0xefe9, 0x8318, 0x1, 0x1);
        gbc.writeMem(0xc30, { 0x14 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x36e3, gbc.sp());
        EXPECT(0xc31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01C0
        gbc.setState(0x5c6e, 0x6697, 0xd110, 0x46b0, 0x1f37, 0x4e75, 0x0, 0x0);
        gbc.writeMem(0x5c6e, { 0x14 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6697, gbc.sp());
        EXPECT(0x5c6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01C1
        gbc.setState(0x2a1b, 0x1211, 0xf8d0, 0x9e12, 0x10c, 0x9aac, 0x1, 0x0);
        gbc.writeMem(0x2a1b, { 0x14 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1211, gbc.sp());
        EXPECT(0x2a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01C2
        gbc.setState(0x45d6, 0xb28f, 0x3d90, 0xdd2a, 0x3ac8, 0x1dd5, 0x0, 0x1);
        gbc.writeMem(0x45d6, { 0x14 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb28f, gbc.sp());
        EXPECT(0x45d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01C3
        gbc.setState(0xac8f, 0xdec, 0x9b60, 0xf07f, 0x9be3, 0x2b11, 0x0, 0x1);
        gbc.writeMem(0xac8f, { 0x14 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xdec, gbc.sp());
        EXPECT(0xac90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xac8f));
        // 14 01C4
        gbc.setState(0xe0f7, 0x85eb, 0xa10, 0xd41b, 0x1ab, 0x9fd3, 0x1, 0x0);
        gbc.writeMem(0xe0f7, { 0x14 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x85eb, gbc.sp());
        EXPECT(0xe0f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe0f7));
        // 14 01C5
        gbc.setState(0x75fc, 0x5c8c, 0xac70, 0x3b44, 0x4951, 0x958c, 0x0, 0x1);
        gbc.writeMem(0x75fc, { 0x14 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5c8c, gbc.sp());
        EXPECT(0x75fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01C7
        gbc.setState(0x1daf, 0xe4fc, 0x4380, 0xf801, 0x9cf8, 0xac04, 0x0, 0x0);
        gbc.writeMem(0x1daf, { 0x14 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe4fc, gbc.sp());
        EXPECT(0x1db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 01C8
        gbc.setState(0x954a, 0x8436, 0x1b0, 0x417a, 0xabdb, 0x6f45, 0x1, 0x0);
        gbc.writeMem(0x954a, { 0x14 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8436, gbc.sp());
        EXPECT(0x954b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x954a));
        // 14 01C9
        gbc.setState(0x5182, 0x8f40, 0xb490, 0xf7c4, 0xa2e8, 0x8359, 0x1, 0x1);
        gbc.writeMem(0x5182, { 0x14 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8f40, gbc.sp());
        EXPECT(0x5183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01CA
        gbc.setState(0x5a08, 0x59df, 0x7ca0, 0x6ee6, 0x1076, 0xf5d, 0x0, 0x1);
        gbc.writeMem(0x5a08, { 0x14 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x59df, gbc.sp());
        EXPECT(0x5a09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 01CB
        gbc.setState(0xdbeb, 0xbd4e, 0x54a0, 0x9487, 0xfab3, 0x82e6, 0x1, 0x0);
        gbc.writeMem(0xdbeb, { 0x14 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbd4e, gbc.sp());
        EXPECT(0xdbec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdbeb));
        // 14 01CE
        gbc.setState(0x385, 0x3d8f, 0x9850, 0x5dd0, 0x1fcc, 0xa0fc, 0x0, 0x1);
        gbc.writeMem(0x385, { 0x14 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3d8f, gbc.sp());
        EXPECT(0x386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01D0
        gbc.setState(0x909f, 0xb520, 0xc4b0, 0x73d5, 0xaf26, 0x91aa, 0x1, 0x0);
        gbc.writeMem(0x909f, { 0x14 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb520, gbc.sp());
        EXPECT(0x90a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x909f));
        // 14 01D1
        gbc.setState(0x68d8, 0xab0c, 0xdbd0, 0x14e4, 0x44c, 0x9a43, 0x1, 0x0);
        gbc.writeMem(0x68d8, { 0x14 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xab0c, gbc.sp());
        EXPECT(0x68d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01D2
        gbc.setState(0xb4f4, 0xbde6, 0xb250, 0x4be5, 0xba2a, 0x65bb, 0x0, 0x1);
        gbc.writeMem(0xb4f4, { 0x14 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbde6, gbc.sp());
        EXPECT(0xb4f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb4f4));
        // 14 01D3
        gbc.setState(0x2043, 0x9dd6, 0x3880, 0xcb2a, 0xd9ad, 0x8bc3, 0x0, 0x1);
        gbc.writeMem(0x2043, { 0x14 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9dd6, gbc.sp());
        EXPECT(0x2044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 01D4
        gbc.setState(0xb1e1, 0x4a19, 0x5e00, 0xd5e8, 0x4e1d, 0x3d60, 0x0, 0x1);
        gbc.writeMem(0xb1e1, { 0x14 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4a19, gbc.sp());
        EXPECT(0xb1e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb1e1));
        // 14 01D5
        gbc.setState(0x8f6b, 0xeff1, 0xd630, 0xff58, 0xc750, 0xb8d6, 0x1, 0x1);
        gbc.writeMem(0x8f6b, { 0x14 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xeff1, gbc.sp());
        EXPECT(0x8f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8f6b));
        // 14 01D7
        gbc.setState(0x5af5, 0xfb9b, 0x7de0, 0x4549, 0x1c00, 0xae6c, 0x1, 0x1);
        gbc.writeMem(0x5af5, { 0x14 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfb9b, gbc.sp());
        EXPECT(0x5af6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 01D8
        gbc.setState(0x3aa3, 0x6e8d, 0x91c0, 0x3e13, 0xd7cc, 0xbab9, 0x1, 0x1);
        gbc.writeMem(0x3aa3, { 0x14 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6e8d, gbc.sp());
        EXPECT(0x3aa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 01D9
        gbc.setState(0xa85d, 0x97b0, 0xfb0, 0xedf0, 0x528b, 0x758d, 0x0, 0x0);
        gbc.writeMem(0xa85d, { 0x14 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x97b0, gbc.sp());
        EXPECT(0xa85e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa85d));
        // 14 01DA
        gbc.setState(0xb31a, 0x631f, 0x7610, 0x3b39, 0x8c04, 0x6206, 0x1, 0x1);
        gbc.writeMem(0xb31a, { 0x14 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x631f, gbc.sp());
        EXPECT(0xb31b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb31a));
        // 14 01DB
        gbc.setState(0x8311, 0x1eda, 0x1b90, 0xbb2c, 0x5958, 0x4b85, 0x0, 0x0);
        gbc.writeMem(0x8311, { 0x14 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1eda, gbc.sp());
        EXPECT(0x8312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8311));
        // 14 01DC
        gbc.setState(0xc54a, 0xc5e4, 0xff0, 0x9a6c, 0x67d0, 0x6f6f, 0x1, 0x0);
        gbc.writeMem(0xc54a, { 0x14 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc5e4, gbc.sp());
        EXPECT(0xc54b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc54a));
        // 14 01DD
        gbc.setState(0xda12, 0x476d, 0xa7f0, 0xa26f, 0x5a19, 0x367b, 0x0, 0x1);
        gbc.writeMem(0xda12, { 0x14 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x476d, gbc.sp());
        EXPECT(0xda13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xda12));
        // 14 01DE
        gbc.setState(0x5463, 0xae7c, 0x69e0, 0x1a26, 0xf854, 0xcbf1, 0x0, 0x1);
        gbc.writeMem(0x5463, { 0x14 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xae7c, gbc.sp());
        EXPECT(0x5464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 01DF
        gbc.setState(0x9b81, 0xaf56, 0x7070, 0x7a87, 0x2119, 0x9525, 0x0, 0x1);
        gbc.writeMem(0x9b81, { 0x14 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xaf56, gbc.sp());
        EXPECT(0x9b82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9b81));
        // 14 01E0
        gbc.setState(0x7449, 0x8a24, 0xfa70, 0x2453, 0x656c, 0x2b2f, 0x1, 0x1);
        gbc.writeMem(0x7449, { 0x14 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8a24, gbc.sp());
        EXPECT(0x744a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01E1
        gbc.setState(0xe695, 0xebcd, 0xcb80, 0xaffb, 0x3348, 0x60c7, 0x1, 0x0);
        gbc.writeMem(0xe695, { 0x14 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xebcd, gbc.sp());
        EXPECT(0xe696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe695));
        // 14 01E2
        gbc.setState(0xee6, 0x4ad8, 0x45f0, 0x52b, 0xbe8, 0x5187, 0x1, 0x0);
        gbc.writeMem(0xee6, { 0x14 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4ad8, gbc.sp());
        EXPECT(0xee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01E3
        gbc.setState(0x2c9e, 0xe87f, 0xa400, 0x7a46, 0xb248, 0x89ef, 0x1, 0x1);
        gbc.writeMem(0x2c9e, { 0x14 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe87f, gbc.sp());
        EXPECT(0x2c9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 01E4
        gbc.setState(0xdd1d, 0x618f, 0x4a00, 0x8031, 0x938e, 0xea46, 0x0, 0x0);
        gbc.writeMem(0xdd1d, { 0x14 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x618f, gbc.sp());
        EXPECT(0xdd1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdd1d));
        // 14 01E5
        gbc.setState(0xc2ad, 0x1106, 0x8340, 0xa4d9, 0x98cf, 0xa539, 0x1, 0x0);
        gbc.writeMem(0xc2ad, { 0x14 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1106, gbc.sp());
        EXPECT(0xc2ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc2ad));
        // 14 01E6
        gbc.setState(0xdb28, 0x6ab4, 0x6b90, 0x4788, 0x11c0, 0x2e88, 0x0, 0x0);
        gbc.writeMem(0xdb28, { 0x14 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6ab4, gbc.sp());
        EXPECT(0xdb29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdb28));
        // 14 01E7
        gbc.setState(0xe669, 0x670a, 0x8cf0, 0x3e2f, 0x703e, 0x60bb, 0x1, 0x0);
        gbc.writeMem(0xe669, { 0x14 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x670a, gbc.sp());
        EXPECT(0xe66a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe669));
        // 14 01E8
        gbc.setState(0xe3ab, 0xcb0b, 0xb380, 0xa6ca, 0xf86f, 0xabf7, 0x0, 0x0);
        gbc.writeMem(0xe3ab, { 0x14 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xcb0b, gbc.sp());
        EXPECT(0xe3ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe3ab));
        // 14 01E9
        gbc.setState(0x6cc1, 0xb49b, 0x1b50, 0x52cb, 0x60f1, 0x5694, 0x1, 0x1);
        gbc.writeMem(0x6cc1, { 0x14 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb49b, gbc.sp());
        EXPECT(0x6cc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01EA
        gbc.setState(0xa044, 0x4aa, 0xa190, 0xb955, 0xb00d, 0x29ce, 0x0, 0x0);
        gbc.writeMem(0xa044, { 0x14 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4aa, gbc.sp());
        EXPECT(0xa045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa044));
        // 14 01EB
        gbc.setState(0xd378, 0x5130, 0x93e0, 0x97d, 0x843a, 0x5108, 0x0, 0x1);
        gbc.writeMem(0xd378, { 0x14 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5130, gbc.sp());
        EXPECT(0xd379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd378));
        // 14 01EC
        gbc.setState(0x1aa2, 0xdce1, 0x2eb0, 0x585a, 0xa71f, 0xf2bd, 0x1, 0x0);
        gbc.writeMem(0x1aa2, { 0x14 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xdce1, gbc.sp());
        EXPECT(0x1aa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01ED
        gbc.setState(0x68b1, 0xc7d8, 0x5a30, 0xa02c, 0x34c, 0x8e8, 0x1, 0x0);
        gbc.writeMem(0x68b1, { 0x14 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc7d8, gbc.sp());
        EXPECT(0x68b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01EE
        gbc.setState(0xb41, 0x4f2b, 0xfa90, 0x987e, 0xea61, 0x3e2f, 0x1, 0x1);
        gbc.writeMem(0xb41, { 0x14 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4f2b, gbc.sp());
        EXPECT(0xb42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01EF
        gbc.setState(0x2623, 0x14a0, 0x8070, 0xa9b5, 0xc6ff, 0x1d37, 0x1, 0x1);
        gbc.writeMem(0x2623, { 0x14 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x14a0, gbc.sp());
        EXPECT(0x2624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01F0
        gbc.setState(0x38f3, 0x2393, 0x5220, 0x9b65, 0x3947, 0x7876, 0x1, 0x0);
        gbc.writeMem(0x38f3, { 0x14 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2393, gbc.sp());
        EXPECT(0x38f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 01F1
        gbc.setState(0xae4a, 0x20ac, 0x6880, 0xb9e1, 0x186c, 0xbddb, 0x0, 0x0);
        gbc.writeMem(0xae4a, { 0x14 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x20ac, gbc.sp());
        EXPECT(0xae4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xae4a));
        // 14 01F2
        gbc.setState(0xb297, 0x512f, 0xd140, 0x915f, 0x8ec6, 0xd89b, 0x1, 0x1);
        gbc.writeMem(0xb297, { 0x14 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x512f, gbc.sp());
        EXPECT(0xb298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb297));
        // 14 01F3
        gbc.setState(0x1e4e, 0xecf, 0xf320, 0x7431, 0x1383, 0x3647, 0x0, 0x0);
        gbc.writeMem(0x1e4e, { 0x14 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xecf, gbc.sp());
        EXPECT(0x1e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 01F4
        gbc.setState(0xc823, 0x6626, 0x9040, 0xa7c5, 0x7f93, 0x3ad8, 0x1, 0x0);
        gbc.writeMem(0xc823, { 0x14 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6626, gbc.sp());
        EXPECT(0xc824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc823));
        // 14 01F5
        gbc.setState(0xa986, 0x60af, 0x5cb0, 0x29d6, 0x9f81, 0xa5d6, 0x1, 0x0);
        gbc.writeMem(0xa986, { 0x14 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x60af, gbc.sp());
        EXPECT(0xa987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa986));
        // 14 01F6
        gbc.setState(0xdd2c, 0x20f1, 0xaec0, 0x4ba1, 0xe8bc, 0x697, 0x0, 0x1);
        gbc.writeMem(0xdd2c, { 0x14 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x20f1, gbc.sp());
        EXPECT(0xdd2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdd2c));
        // 14 01F7
        gbc.setState(0x9ba2, 0xcc08, 0xb20, 0x3dc8, 0xeca3, 0x796b, 0x0, 0x1);
        gbc.writeMem(0x9ba2, { 0x14 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcc08, gbc.sp());
        EXPECT(0x9ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9ba2));
        // 14 01F8
        gbc.setState(0xcf4a, 0x6385, 0xf030, 0x66d3, 0x5a02, 0x6b97, 0x1, 0x1);
        gbc.writeMem(0xcf4a, { 0x14 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6385, gbc.sp());
        EXPECT(0xcf4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xcf4a));
        // 14 01F9
        gbc.setState(0x5889, 0x39d6, 0x64a0, 0x3873, 0x7e59, 0x1cd5, 0x1, 0x0);
        gbc.writeMem(0x5889, { 0x14 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x39d6, gbc.sp());
        EXPECT(0x588a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 01FA
        gbc.setState(0x90f3, 0x94cc, 0xa7e0, 0x817d, 0xd4f, 0x12fb, 0x0, 0x0);
        gbc.writeMem(0x90f3, { 0x14 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x94cc, gbc.sp());
        EXPECT(0x90f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x90f3));
        // 14 01FB
        gbc.setState(0xdf26, 0xda7b, 0x350, 0x307c, 0x7891, 0x5dd5, 0x0, 0x0);
        gbc.writeMem(0xdf26, { 0x14 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xda7b, gbc.sp());
        EXPECT(0xdf27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdf26));
        // 14 01FC
        gbc.setState(0xa1bd, 0x6f05, 0xdbc0, 0x39dc, 0xa2c8, 0x5ea0, 0x0, 0x0);
        gbc.writeMem(0xa1bd, { 0x14 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6f05, gbc.sp());
        EXPECT(0xa1be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa1bd));
        // 14 01FD
        gbc.setState(0x37e9, 0xca28, 0x9690, 0x672d, 0x59b, 0x14ca, 0x0, 0x0);
        gbc.writeMem(0x37e9, { 0x14 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xca28, gbc.sp());
        EXPECT(0x37ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 01FE
        gbc.setState(0xa8e2, 0x31ee, 0xa590, 0xda9a, 0x77f, 0x6162, 0x1, 0x0);
        gbc.writeMem(0xa8e2, { 0x14 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x31ee, gbc.sp());
        EXPECT(0xa8e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa8e2));
        // 14 01FF
        gbc.setState(0xe9, 0xc802, 0x1a0, 0x7da1, 0xaed4, 0x5b35, 0x1, 0x1);
        gbc.writeMem(0xe9, { 0x14 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc802, gbc.sp());
        EXPECT(0xea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0200
        gbc.setState(0x400c, 0xf2b8, 0xdad0, 0x2ee5, 0xac70, 0xc2e5, 0x1, 0x0);
        gbc.writeMem(0x400c, { 0x14 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf2b8, gbc.sp());
        EXPECT(0x400d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0201
        gbc.setState(0x6925, 0xcf4a, 0xd910, 0x9b30, 0x4717, 0x3056, 0x0, 0x1);
        gbc.writeMem(0x6925, { 0x14 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcf4a, gbc.sp());
        EXPECT(0x6926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0202
        gbc.setState(0x68a8, 0xb85a, 0x6900, 0x57e6, 0xc575, 0x9dcf, 0x1, 0x0);
        gbc.writeMem(0x68a8, { 0x14 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb85a, gbc.sp());
        EXPECT(0x68a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0203
        gbc.setState(0x41a2, 0x3694, 0x2ba0, 0x2b35, 0x4107, 0xa55a, 0x1, 0x0);
        gbc.writeMem(0x41a2, { 0x14 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3694, gbc.sp());
        EXPECT(0x41a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0204
        gbc.setState(0xe669, 0x8a0c, 0x4170, 0x4eda, 0xd638, 0x9f6e, 0x0, 0x1);
        gbc.writeMem(0xe669, { 0x14 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8a0c, gbc.sp());
        EXPECT(0xe66a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe669));
        // 14 0205
        gbc.setState(0x87bb, 0x7134, 0x33b0, 0x8dd2, 0x960b, 0x9b96, 0x0, 0x1);
        gbc.writeMem(0x87bb, { 0x14 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7134, gbc.sp());
        EXPECT(0x87bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x87bb));
        // 14 0206
        gbc.setState(0x73f5, 0xc700, 0x23e0, 0x4692, 0x1d1f, 0x6b8c, 0x1, 0x0);
        gbc.writeMem(0x73f5, { 0x14 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc700, gbc.sp());
        EXPECT(0x73f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0207
        gbc.setState(0x1296, 0xf3ad, 0x8580, 0xbec2, 0xac95, 0x4318, 0x1, 0x1);
        gbc.writeMem(0x1296, { 0x14 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf3ad, gbc.sp());
        EXPECT(0x1297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0208
        gbc.setState(0x4198, 0xcdfe, 0xee20, 0x357d, 0xe3a3, 0x10de, 0x0, 0x1);
        gbc.writeMem(0x4198, { 0x14 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcdfe, gbc.sp());
        EXPECT(0x4199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0209
        gbc.setState(0xb6a6, 0xc95d, 0x25d0, 0x3f0f, 0x7c93, 0xd424, 0x0, 0x1);
        gbc.writeMem(0xb6a6, { 0x14 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc95d, gbc.sp());
        EXPECT(0xb6a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb6a6));
        // 14 020A
        gbc.setState(0x31ad, 0xc08f, 0xd80, 0x6bc2, 0x5c5d, 0x1f69, 0x1, 0x0);
        gbc.writeMem(0x31ad, { 0x14 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc08f, gbc.sp());
        EXPECT(0x31ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 020B
        gbc.setState(0xd914, 0x9eec, 0xbed0, 0x42e5, 0x66fc, 0xb9c4, 0x1, 0x0);
        gbc.writeMem(0xd914, { 0x14 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9eec, gbc.sp());
        EXPECT(0xd915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd914));
        // 14 020C
        gbc.setState(0xb134, 0x3637, 0x44c0, 0xccfe, 0xdf21, 0x2a80, 0x0, 0x0);
        gbc.writeMem(0xb134, { 0x14 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3637, gbc.sp());
        EXPECT(0xb135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb134));
        // 14 020D
        gbc.setState(0xf12, 0x58bb, 0x8e80, 0x1451, 0xc03c, 0x9554, 0x0, 0x1);
        gbc.writeMem(0xf12, { 0x14 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x58bb, gbc.sp());
        EXPECT(0xf13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 020E
        gbc.setState(0x8ad7, 0xce6b, 0xa740, 0x59ae, 0x43eb, 0x3282, 0x1, 0x1);
        gbc.writeMem(0x8ad7, { 0x14 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xce6b, gbc.sp());
        EXPECT(0x8ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8ad7));
        // 14 020F
        gbc.setState(0x4aa8, 0x1680, 0x8940, 0x593e, 0xf16, 0xe979, 0x0, 0x1);
        gbc.writeMem(0x4aa8, { 0x14 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1680, gbc.sp());
        EXPECT(0x4aa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0210
        gbc.setState(0x783f, 0x18e9, 0x4d60, 0xc0ad, 0x28c2, 0x667b, 0x0, 0x0);
        gbc.writeMem(0x783f, { 0x14 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x18e9, gbc.sp());
        EXPECT(0x7840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0211
        gbc.setState(0x54ab, 0xe5f1, 0xedc0, 0xaa4a, 0x707f, 0x328d, 0x1, 0x0);
        gbc.writeMem(0x54ab, { 0x14 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe5f1, gbc.sp());
        EXPECT(0x54ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0212
        gbc.setState(0x75ad, 0xb74e, 0xfab0, 0x3008, 0x3a3c, 0x9a88, 0x0, 0x0);
        gbc.writeMem(0x75ad, { 0x14 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb74e, gbc.sp());
        EXPECT(0x75ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0213
        gbc.setState(0x854, 0x5bb1, 0x5510, 0x327b, 0x4581, 0x5ed, 0x0, 0x1);
        gbc.writeMem(0x854, { 0x14 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5bb1, gbc.sp());
        EXPECT(0x855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0214
        gbc.setState(0xb769, 0x1cb6, 0xb40, 0x945d, 0xfb3f, 0x1ccb, 0x0, 0x1);
        gbc.writeMem(0xb769, { 0x14 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1cb6, gbc.sp());
        EXPECT(0xb76a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb769));
        // 14 0215
        gbc.setState(0x20a2, 0xbaff, 0xf400, 0xb773, 0x7f97, 0x2fd9, 0x0, 0x1);
        gbc.writeMem(0x20a2, { 0x14 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbaff, gbc.sp());
        EXPECT(0x20a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0216
        gbc.setState(0x601d, 0xf2fc, 0xfea0, 0x55bd, 0x93d, 0x1397, 0x0, 0x1);
        gbc.writeMem(0x601d, { 0x14 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf2fc, gbc.sp());
        EXPECT(0x601e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0217
        gbc.setState(0x902b, 0x877b, 0x3210, 0x5f4f, 0x402f, 0x8563, 0x1, 0x1);
        gbc.writeMem(0x902b, { 0x14 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x877b, gbc.sp());
        EXPECT(0x902c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x902b));
        // 14 0219
        gbc.setState(0xc5c5, 0x34c0, 0xe510, 0xc272, 0xc795, 0x1756, 0x1, 0x0);
        gbc.writeMem(0xc5c5, { 0x14 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x34c0, gbc.sp());
        EXPECT(0xc5c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc5c5));
        // 14 021A
        gbc.setState(0x617, 0x6c92, 0xc800, 0xc1a4, 0x6bf5, 0x8db1, 0x0, 0x1);
        gbc.writeMem(0x617, { 0x14 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6c92, gbc.sp());
        EXPECT(0x618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 021B
        gbc.setState(0x4eab, 0x2fe5, 0xcc0, 0x299d, 0xcaf5, 0x9f0d, 0x1, 0x1);
        gbc.writeMem(0x4eab, { 0x14 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2fe5, gbc.sp());
        EXPECT(0x4eac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 021C
        gbc.setState(0x935c, 0x4535, 0x7b90, 0xa2d0, 0x256f, 0x8837, 0x0, 0x1);
        gbc.writeMem(0x935c, { 0x14 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4535, gbc.sp());
        EXPECT(0x935d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x935c));
        // 14 021D
        gbc.setState(0x9cb8, 0x3693, 0xdd90, 0xa00d, 0x6bd2, 0x41dd, 0x1, 0x1);
        gbc.writeMem(0x9cb8, { 0x14 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3693, gbc.sp());
        EXPECT(0x9cb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9cb8));
        // 14 021E
        gbc.setState(0x3f4, 0xf220, 0xb020, 0x8cb4, 0x6e5a, 0x24ca, 0x0, 0x0);
        gbc.writeMem(0x3f4, { 0x14 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf220, gbc.sp());
        EXPECT(0x3f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 021F
        gbc.setState(0xec76, 0xb439, 0x4bf0, 0x8db6, 0x810f, 0xb9ae, 0x1, 0x0);
        gbc.writeMem(0xec76, { 0x14 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb439, gbc.sp());
        EXPECT(0xec77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xec76));
        // 14 0220
        gbc.setState(0x9a9, 0x338e, 0x9c60, 0xae0e, 0x74b4, 0x750e, 0x0, 0x0);
        gbc.writeMem(0x9a9, { 0x14 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x338e, gbc.sp());
        EXPECT(0x9aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0221
        gbc.setState(0x8f74, 0x2f8a, 0xccb0, 0x1a8d, 0x6ffe, 0x1546, 0x1, 0x0);
        gbc.writeMem(0x8f74, { 0x14 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2f8a, gbc.sp());
        EXPECT(0x8f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8f74));
        // 14 0222
        gbc.setState(0x74a8, 0x8071, 0xb9a0, 0x27ae, 0xc616, 0x5cc4, 0x0, 0x0);
        gbc.writeMem(0x74a8, { 0x14 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8071, gbc.sp());
        EXPECT(0x74a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0223
        gbc.setState(0xd4fa, 0x78d3, 0xc270, 0x7344, 0x5ad6, 0x528d, 0x1, 0x0);
        gbc.writeMem(0xd4fa, { 0x14 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x78d3, gbc.sp());
        EXPECT(0xd4fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd4fa));
        // 14 0224
        gbc.setState(0x9657, 0xb448, 0xe4b0, 0x78e8, 0xffcf, 0xeb6c, 0x0, 0x0);
        gbc.writeMem(0x9657, { 0x14 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb448, gbc.sp());
        EXPECT(0x9658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9657));
        // 14 0225
        gbc.setState(0x8b6a, 0x9891, 0x6fd0, 0x2562, 0xba3a, 0xa169, 0x1, 0x0);
        gbc.writeMem(0x8b6a, { 0x14 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9891, gbc.sp());
        EXPECT(0x8b6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8b6a));
        // 14 0226
        gbc.setState(0x547d, 0x89e6, 0xed40, 0x2404, 0xc718, 0x2b9a, 0x0, 0x0);
        gbc.writeMem(0x547d, { 0x14 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x89e6, gbc.sp());
        EXPECT(0x547e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0228
        gbc.setState(0xb1aa, 0x43ba, 0x2230, 0xb466, 0xa8c0, 0xa782, 0x1, 0x1);
        gbc.writeMem(0xb1aa, { 0x14 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x43ba, gbc.sp());
        EXPECT(0xb1ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb1aa));
        // 14 0229
        gbc.setState(0x5f37, 0xdbc4, 0x68d0, 0x9aeb, 0x460, 0x11c7, 0x1, 0x0);
        gbc.writeMem(0x5f37, { 0x14 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdbc4, gbc.sp());
        EXPECT(0x5f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 022A
        gbc.setState(0x870f, 0x5a91, 0xce20, 0x19f9, 0xd1fe, 0x9d0c, 0x0, 0x0);
        gbc.writeMem(0x870f, { 0x14 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5a91, gbc.sp());
        EXPECT(0x8710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x870f));
        // 14 022B
        gbc.setState(0x4dd, 0x3e3a, 0x6f0, 0x6965, 0x4648, 0x76e8, 0x0, 0x1);
        gbc.writeMem(0x4dd, { 0x14 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3e3a, gbc.sp());
        EXPECT(0x4de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 022C
        gbc.setState(0xe6df, 0xaf4f, 0x6f50, 0x1ed6, 0x741b, 0xe1de, 0x1, 0x0);
        gbc.writeMem(0xe6df, { 0x14 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xaf4f, gbc.sp());
        EXPECT(0xe6e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe6df));
        // 14 022D
        gbc.setState(0xb2f6, 0xa222, 0x37b0, 0x7713, 0x8977, 0x881e, 0x1, 0x0);
        gbc.writeMem(0xb2f6, { 0x14 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa222, gbc.sp());
        EXPECT(0xb2f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb2f6));
        // 14 022E
        gbc.setState(0xf60, 0x5ca3, 0x71c0, 0x79cf, 0xc709, 0x2ae4, 0x0, 0x0);
        gbc.writeMem(0xf60, { 0x14 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5ca3, gbc.sp());
        EXPECT(0xf61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 022F
        gbc.setState(0x71b5, 0xc0fb, 0xbb80, 0xa190, 0xdfb5, 0x531f, 0x1, 0x0);
        gbc.writeMem(0x71b5, { 0x14 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc0fb, gbc.sp());
        EXPECT(0x71b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0230
        gbc.setState(0xa55d, 0xe701, 0x87c0, 0x92b, 0xc3e8, 0x8b56, 0x1, 0x1);
        gbc.writeMem(0xa55d, { 0x14 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe701, gbc.sp());
        EXPECT(0xa55e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa55d));
        // 14 0231
        gbc.setState(0xaf52, 0x3227, 0x3420, 0xec90, 0x93c2, 0xfbb4, 0x1, 0x0);
        gbc.writeMem(0xaf52, { 0x14 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3227, gbc.sp());
        EXPECT(0xaf53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xaf52));
        // 14 0232
        gbc.setState(0x8916, 0x4ff7, 0x8b30, 0x69bc, 0x1c94, 0xf506, 0x1, 0x0);
        gbc.writeMem(0x8916, { 0x14 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4ff7, gbc.sp());
        EXPECT(0x8917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8916));
        // 14 0233
        gbc.setState(0x4d75, 0xcdbb, 0xb4a0, 0xed12, 0xf725, 0xe999, 0x1, 0x1);
        gbc.writeMem(0x4d75, { 0x14 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcdbb, gbc.sp());
        EXPECT(0x4d76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0234
        gbc.setState(0x8646, 0x9439, 0xba80, 0x7ff3, 0x604, 0xcede, 0x1, 0x1);
        gbc.writeMem(0x8646, { 0x14 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9439, gbc.sp());
        EXPECT(0x8647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8646));
        // 14 0235
        gbc.setState(0x9556, 0xa0f4, 0xb810, 0x62be, 0x2ec7, 0xeabb, 0x0, 0x1);
        gbc.writeMem(0x9556, { 0x14 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa0f4, gbc.sp());
        EXPECT(0x9557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9556));
        // 14 0236
        gbc.setState(0x60c5, 0xb534, 0xe6f0, 0xca80, 0x70bc, 0x6c79, 0x1, 0x1);
        gbc.writeMem(0x60c5, { 0x14 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb534, gbc.sp());
        EXPECT(0x60c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0237
        gbc.setState(0x6859, 0x2052, 0x7e00, 0xa0d5, 0x862d, 0xf4b1, 0x1, 0x0);
        gbc.writeMem(0x6859, { 0x14 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2052, gbc.sp());
        EXPECT(0x685a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0239
        gbc.setState(0xbb22, 0x86b, 0x4850, 0xdedd, 0xe325, 0x4e84, 0x0, 0x0);
        gbc.writeMem(0xbb22, { 0x14 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x86b, gbc.sp());
        EXPECT(0xbb23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbb22));
        // 14 023A
        gbc.setState(0xb913, 0x9ff, 0xdc70, 0xfaac, 0x6919, 0x8aa2, 0x0, 0x1);
        gbc.writeMem(0xb913, { 0x14 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9ff, gbc.sp());
        EXPECT(0xb914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb913));
        // 14 023B
        gbc.setState(0x8d1d, 0xe175, 0x2a50, 0x622e, 0x4c26, 0x3e91, 0x0, 0x1);
        gbc.writeMem(0x8d1d, { 0x14 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe175, gbc.sp());
        EXPECT(0x8d1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8d1d));
        // 14 023D
        gbc.setState(0x84ea, 0x9484, 0x8d0, 0x9406, 0x3f39, 0xf543, 0x0, 0x1);
        gbc.writeMem(0x84ea, { 0x14 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9484, gbc.sp());
        EXPECT(0x84eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x84ea));
        // 14 023E
        gbc.setState(0xa67e, 0xcb78, 0xad50, 0x1eb1, 0x4a83, 0xcc6c, 0x0, 0x1);
        gbc.writeMem(0xa67e, { 0x14 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcb78, gbc.sp());
        EXPECT(0xa67f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa67e));
        // 14 023F
        gbc.setState(0x5066, 0x2f68, 0x68a0, 0x7022, 0xd318, 0x1a58, 0x1, 0x0);
        gbc.writeMem(0x5066, { 0x14 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2f68, gbc.sp());
        EXPECT(0x5067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0240
        gbc.setState(0xc31f, 0xc10e, 0xed00, 0xbd17, 0x6a64, 0x5d12, 0x1, 0x1);
        gbc.writeMem(0xc31f, { 0x14 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc10e, gbc.sp());
        EXPECT(0xc320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc31f));
        // 14 0241
        gbc.setState(0xbc50, 0x3ccc, 0xb6e0, 0x2559, 0x7392, 0xb0d6, 0x0, 0x0);
        gbc.writeMem(0xbc50, { 0x14 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3ccc, gbc.sp());
        EXPECT(0xbc51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbc50));
        // 14 0242
        gbc.setState(0x61cd, 0xf467, 0xcdf0, 0xa6bc, 0x7ba1, 0xbd4, 0x1, 0x0);
        gbc.writeMem(0x61cd, { 0x14 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf467, gbc.sp());
        EXPECT(0x61ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0243
        gbc.setState(0x1375, 0xcf7f, 0x3740, 0x63ac, 0x2891, 0xac65, 0x0, 0x0);
        gbc.writeMem(0x1375, { 0x14 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xcf7f, gbc.sp());
        EXPECT(0x1376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0244
        gbc.setState(0x663a, 0x7968, 0xa220, 0x70c2, 0x9948, 0x8287, 0x0, 0x0);
        gbc.writeMem(0x663a, { 0x14 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7968, gbc.sp());
        EXPECT(0x663b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0245
        gbc.setState(0xb3bf, 0xe810, 0x7150, 0x545c, 0x366f, 0x2ede, 0x0, 0x0);
        gbc.writeMem(0xb3bf, { 0x14 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe810, gbc.sp());
        EXPECT(0xb3c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb3bf));
        // 14 0246
        gbc.setState(0xdadc, 0xdaa, 0xa480, 0x1976, 0x7707, 0x692b, 0x1, 0x1);
        gbc.writeMem(0xdadc, { 0x14 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xdaa, gbc.sp());
        EXPECT(0xdadd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdadc));
        // 14 0247
        gbc.setState(0x6f0d, 0xb96c, 0xb00, 0x2fd4, 0x614e, 0x6c1f, 0x1, 0x0);
        gbc.writeMem(0x6f0d, { 0x14 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb96c, gbc.sp());
        EXPECT(0x6f0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0248
        gbc.setState(0x6709, 0xe6b7, 0x5a80, 0x3147, 0xbee0, 0x2243, 0x1, 0x0);
        gbc.writeMem(0x6709, { 0x14 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe6b7, gbc.sp());
        EXPECT(0x670a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0249
        gbc.setState(0xce16, 0x5495, 0x62a0, 0x5ab4, 0x8a32, 0x5755, 0x1, 0x0);
        gbc.writeMem(0xce16, { 0x14 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5495, gbc.sp());
        EXPECT(0xce17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xce16));
        // 14 024A
        gbc.setState(0xa73e, 0xb2c, 0x7d00, 0xbf0d, 0x484, 0xa630, 0x1, 0x0);
        gbc.writeMem(0xa73e, { 0x14 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb2c, gbc.sp());
        EXPECT(0xa73f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa73e));
        // 14 024B
        gbc.setState(0xd54b, 0x5313, 0x33a0, 0x5ae4, 0xc7c8, 0x4509, 0x1, 0x1);
        gbc.writeMem(0xd54b, { 0x14 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5313, gbc.sp());
        EXPECT(0xd54c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd54b));
        // 14 024C
        gbc.setState(0xbaaf, 0xe521, 0xb30, 0x625, 0x1540, 0x87a3, 0x0, 0x1);
        gbc.writeMem(0xbaaf, { 0x14 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe521, gbc.sp());
        EXPECT(0xbab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbaaf));
        // 14 024D
        gbc.setState(0xcd42, 0x34cd, 0x6c00, 0xe30f, 0x6b3e, 0xfca5, 0x1, 0x0);
        gbc.writeMem(0xcd42, { 0x14 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x34cd, gbc.sp());
        EXPECT(0xcd43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xcd42));
        // 14 024E
        gbc.setState(0x4024, 0x29eb, 0xde0, 0x576b, 0xdbc6, 0x5a62, 0x0, 0x0);
        gbc.writeMem(0x4024, { 0x14 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x29eb, gbc.sp());
        EXPECT(0x4025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 024F
        gbc.setState(0x2d08, 0xd79f, 0x8d60, 0x3b61, 0x28be, 0xb286, 0x0, 0x1);
        gbc.writeMem(0x2d08, { 0x14 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd79f, gbc.sp());
        EXPECT(0x2d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0250
        gbc.setState(0x3d82, 0x80e4, 0xfea0, 0xf638, 0x974f, 0xde3b, 0x0, 0x0);
        gbc.writeMem(0x3d82, { 0x14 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x80e4, gbc.sp());
        EXPECT(0x3d83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0251
        gbc.setState(0x9e25, 0x89f2, 0x2320, 0x1d86, 0x40bb, 0xfebe, 0x0, 0x0);
        gbc.writeMem(0x9e25, { 0x14 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x89f2, gbc.sp());
        EXPECT(0x9e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9e25));
        // 14 0252
        gbc.setState(0x341d, 0x7718, 0x67e0, 0xca77, 0xab47, 0x8a76, 0x0, 0x0);
        gbc.writeMem(0x341d, { 0x14 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7718, gbc.sp());
        EXPECT(0x341e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0253
        gbc.setState(0x6d1b, 0xdaf6, 0xb260, 0x2114, 0xb361, 0x3967, 0x1, 0x1);
        gbc.writeMem(0x6d1b, { 0x14 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdaf6, gbc.sp());
        EXPECT(0x6d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0254
        gbc.setState(0xde39, 0xc38, 0x6c40, 0xa112, 0xa258, 0x64d0, 0x1, 0x1);
        gbc.writeMem(0xde39, { 0x14 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc38, gbc.sp());
        EXPECT(0xde3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xde39));
        // 14 0255
        gbc.setState(0x5e0e, 0x27fc, 0xb0, 0x52a, 0x6c0b, 0x8a88, 0x1, 0x1);
        gbc.writeMem(0x5e0e, { 0x14 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x27fc, gbc.sp());
        EXPECT(0x5e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0256
        gbc.setState(0xcdb2, 0xb16d, 0x9730, 0x695e, 0x40b8, 0x2277, 0x1, 0x1);
        gbc.writeMem(0xcdb2, { 0x14 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb16d, gbc.sp());
        EXPECT(0xcdb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xcdb2));
        // 14 0257
        gbc.setState(0x8585, 0x7848, 0x2500, 0x8deb, 0x93a7, 0x5d7d, 0x0, 0x1);
        gbc.writeMem(0x8585, { 0x14 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7848, gbc.sp());
        EXPECT(0x8586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8585));
        // 14 0259
        gbc.setState(0x4a33, 0xfd8e, 0xc520, 0x7dc1, 0xa727, 0xe51f, 0x0, 0x1);
        gbc.writeMem(0x4a33, { 0x14 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfd8e, gbc.sp());
        EXPECT(0x4a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 025A
        gbc.setState(0x5301, 0x7150, 0xb5e0, 0x429b, 0xd781, 0x4983, 0x1, 0x1);
        gbc.writeMem(0x5301, { 0x14 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7150, gbc.sp());
        EXPECT(0x5302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 025B
        gbc.setState(0x4101, 0x7e38, 0x5940, 0x6b6a, 0x217c, 0x2fa7, 0x0, 0x0);
        gbc.writeMem(0x4101, { 0x14 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7e38, gbc.sp());
        EXPECT(0x4102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 025C
        gbc.setState(0x2651, 0x8091, 0xee0, 0x5cf8, 0x487a, 0x51b3, 0x0, 0x0);
        gbc.writeMem(0x2651, { 0x14 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8091, gbc.sp());
        EXPECT(0x2652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 025D
        gbc.setState(0x1ef7, 0x99d4, 0x1bd0, 0x47dc, 0xd941, 0x7c77, 0x0, 0x1);
        gbc.writeMem(0x1ef7, { 0x14 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x99d4, gbc.sp());
        EXPECT(0x1ef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 025E
        gbc.setState(0x1cdf, 0x5261, 0x9120, 0xb13d, 0x7329, 0xc00f, 0x1, 0x1);
        gbc.writeMem(0x1cdf, { 0x14 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5261, gbc.sp());
        EXPECT(0x1ce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 025F
        gbc.setState(0x9adb, 0x73bd, 0x7110, 0x3e91, 0x9d1e, 0xe375, 0x0, 0x0);
        gbc.writeMem(0x9adb, { 0x14 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x73bd, gbc.sp());
        EXPECT(0x9adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9adb));
        // 14 0260
        gbc.setState(0x52c, 0x9c87, 0x5ed0, 0x79d, 0xc347, 0xc926, 0x1, 0x1);
        gbc.writeMem(0x52c, { 0x14 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9c87, gbc.sp());
        EXPECT(0x52d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0261
        gbc.setState(0x412b, 0x9b0b, 0xcd10, 0x6a9d, 0x32c9, 0x200e, 0x0, 0x1);
        gbc.writeMem(0x412b, { 0x14 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9b0b, gbc.sp());
        EXPECT(0x412c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0262
        gbc.setState(0x61a5, 0x26a9, 0xb630, 0x6aa5, 0xe7f6, 0x4107, 0x0, 0x1);
        gbc.writeMem(0x61a5, { 0x14 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x26a9, gbc.sp());
        EXPECT(0x61a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0263
        gbc.setState(0x69c1, 0x46aa, 0x90e0, 0xd425, 0x850, 0xf481, 0x1, 0x0);
        gbc.writeMem(0x69c1, { 0x14 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x46aa, gbc.sp());
        EXPECT(0x69c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0264
        gbc.setState(0x1baf, 0x6bf8, 0x5f40, 0x9d64, 0x5452, 0xb66d, 0x1, 0x1);
        gbc.writeMem(0x1baf, { 0x14 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6bf8, gbc.sp());
        EXPECT(0x1bb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0265
        gbc.setState(0x3b0, 0xf226, 0x4af0, 0xb422, 0xcbbc, 0x4f43, 0x0, 0x0);
        gbc.writeMem(0x3b0, { 0x14 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf226, gbc.sp());
        EXPECT(0x3b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0266
        gbc.setState(0x238, 0xac60, 0x4140, 0xef3c, 0xea50, 0x175d, 0x1, 0x1);
        gbc.writeMem(0x238, { 0x14 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xac60, gbc.sp());
        EXPECT(0x239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0267
        gbc.setState(0x940d, 0x4439, 0xf580, 0x4221, 0x8c55, 0x2dd3, 0x1, 0x0);
        gbc.writeMem(0x940d, { 0x14 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4439, gbc.sp());
        EXPECT(0x940e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x940d));
        // 14 0268
        gbc.setState(0x3373, 0x9cc8, 0x8960, 0x2860, 0x3d89, 0xb6bd, 0x1, 0x0);
        gbc.writeMem(0x3373, { 0x14 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9cc8, gbc.sp());
        EXPECT(0x3374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0269
        gbc.setState(0x36f9, 0xf7f2, 0x4d0, 0xc612, 0x81f6, 0x44f4, 0x1, 0x1);
        gbc.writeMem(0x36f9, { 0x14 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf7f2, gbc.sp());
        EXPECT(0x36fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 026A
        gbc.setState(0xee77, 0x8588, 0xac60, 0x7c0a, 0x8830, 0xbd4e, 0x1, 0x0);
        gbc.writeMem(0xee77, { 0x14 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8588, gbc.sp());
        EXPECT(0xee78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xee77));
        // 14 026B
        gbc.setState(0xd4aa, 0x8b0, 0xe70, 0x9d93, 0x26ed, 0x662f, 0x1, 0x1);
        gbc.writeMem(0xd4aa, { 0x14 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8b0, gbc.sp());
        EXPECT(0xd4ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd4aa));
        // 14 026C
        gbc.setState(0x57b1, 0x1349, 0xed40, 0x78, 0xb97a, 0x5c17, 0x1, 0x0);
        gbc.writeMem(0x57b1, { 0x14 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1349, gbc.sp());
        EXPECT(0x57b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 026D
        gbc.setState(0x6727, 0x85ff, 0xb100, 0x7588, 0x732b, 0x21a0, 0x1, 0x0);
        gbc.writeMem(0x6727, { 0x14 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x85ff, gbc.sp());
        EXPECT(0x6728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 026E
        gbc.setState(0x68c4, 0x6d78, 0x83d0, 0xb44f, 0x243a, 0x4dde, 0x1, 0x0);
        gbc.writeMem(0x68c4, { 0x14 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6d78, gbc.sp());
        EXPECT(0x68c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 026F
        gbc.setState(0x496a, 0x3a3c, 0x3f0, 0xe521, 0xfd53, 0x1c07, 0x1, 0x0);
        gbc.writeMem(0x496a, { 0x14 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3a3c, gbc.sp());
        EXPECT(0x496b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0270
        gbc.setState(0x2848, 0x1f01, 0xe8c0, 0x1b4, 0x2cf0, 0x52f7, 0x0, 0x0);
        gbc.writeMem(0x2848, { 0x14 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1f01, gbc.sp());
        EXPECT(0x2849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0271
        gbc.setState(0xdcfc, 0x574c, 0xc2a0, 0x3622, 0x6c90, 0xfae5, 0x1, 0x1);
        gbc.writeMem(0xdcfc, { 0x14 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x574c, gbc.sp());
        EXPECT(0xdcfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdcfc));
        // 14 0272
        gbc.setState(0xcd0f, 0x6308, 0x25d0, 0xb006, 0x95aa, 0x62d9, 0x0, 0x1);
        gbc.writeMem(0xcd0f, { 0x14 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6308, gbc.sp());
        EXPECT(0xcd10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xcd0f));
        // 14 0273
        gbc.setState(0x913c, 0x74fc, 0x87c0, 0x840b, 0xe873, 0x26bd, 0x0, 0x1);
        gbc.writeMem(0x913c, { 0x14 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x74fc, gbc.sp());
        EXPECT(0x913d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x913c));
        // 14 0274
        gbc.setState(0x7733, 0xc97f, 0x470, 0xd1eb, 0x6da7, 0x9de5, 0x1, 0x0);
        gbc.writeMem(0x7733, { 0x14 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc97f, gbc.sp());
        EXPECT(0x7734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0275
        gbc.setState(0xa100, 0xf06b, 0xa4b0, 0xdc85, 0xfe8, 0xf52e, 0x1, 0x0);
        gbc.writeMem(0xa100, { 0x14 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf06b, gbc.sp());
        EXPECT(0xa101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa100));
        // 14 0276
        gbc.setState(0x46cc, 0xcb9f, 0x6fa0, 0x8d7f, 0x969d, 0x3f74, 0x1, 0x0);
        gbc.writeMem(0x46cc, { 0x14 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xcb9f, gbc.sp());
        EXPECT(0x46cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0277
        gbc.setState(0xac23, 0x6d5a, 0xd280, 0x4d23, 0xc310, 0x2a8c, 0x0, 0x1);
        gbc.writeMem(0xac23, { 0x14 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6d5a, gbc.sp());
        EXPECT(0xac24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xac23));
        // 14 0278
        gbc.setState(0xa2a9, 0x44aa, 0x24b0, 0xe28c, 0x7115, 0x2f5e, 0x0, 0x1);
        gbc.writeMem(0xa2a9, { 0x14 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x44aa, gbc.sp());
        EXPECT(0xa2aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa2a9));
        // 14 0279
        gbc.setState(0x926e, 0x1006, 0xb010, 0x5679, 0xf470, 0x2f52, 0x1, 0x1);
        gbc.writeMem(0x926e, { 0x14 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1006, gbc.sp());
        EXPECT(0x926f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x926e));
        // 14 027A
        gbc.setState(0x79c6, 0x310e, 0xde00, 0x603d, 0x3874, 0x4165, 0x1, 0x1);
        gbc.writeMem(0x79c6, { 0x14 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x310e, gbc.sp());
        EXPECT(0x79c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 027C
        gbc.setState(0x1fd5, 0x4005, 0xe140, 0x8122, 0x70db, 0x9653, 0x0, 0x1);
        gbc.writeMem(0x1fd5, { 0x14 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4005, gbc.sp());
        EXPECT(0x1fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 027E
        gbc.setState(0xeb3f, 0x507, 0x2ef0, 0x398e, 0x40c1, 0x1a95, 0x0, 0x0);
        gbc.writeMem(0xeb3f, { 0x14 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x507, gbc.sp());
        EXPECT(0xeb40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xeb3f));
        // 14 027F
        gbc.setState(0xdd03, 0x6c33, 0xef40, 0xeede, 0x333f, 0xb7af, 0x0, 0x1);
        gbc.writeMem(0xdd03, { 0x14 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6c33, gbc.sp());
        EXPECT(0xdd04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdd03));
        // 14 0280
        gbc.setState(0xfed, 0xf1b1, 0xdb80, 0x75eb, 0xe2e4, 0x1844, 0x1, 0x0);
        gbc.writeMem(0xfed, { 0x14 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf1b1, gbc.sp());
        EXPECT(0xfee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0281
        gbc.setState(0x7ffb, 0x44f2, 0x7620, 0xaaa0, 0xb78c, 0xc87f, 0x1, 0x0);
        gbc.writeMem(0x7ffb, { 0x14 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x44f2, gbc.sp());
        EXPECT(0x7ffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0282
        gbc.setState(0x9dd9, 0xa61f, 0x6db0, 0xaaba, 0x60e7, 0x961c, 0x0, 0x1);
        gbc.writeMem(0x9dd9, { 0x14 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa61f, gbc.sp());
        EXPECT(0x9dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9dd9));
        // 14 0283
        gbc.setState(0x1a30, 0x260e, 0x7df0, 0x57e7, 0xdd71, 0xf0ab, 0x1, 0x0);
        gbc.writeMem(0x1a30, { 0x14 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x260e, gbc.sp());
        EXPECT(0x1a31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0284
        gbc.setState(0x77dd, 0x7cee, 0x13f0, 0x17d, 0xd551, 0x2871, 0x0, 0x1);
        gbc.writeMem(0x77dd, { 0x14 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7cee, gbc.sp());
        EXPECT(0x77de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0285
        gbc.setState(0x7bdc, 0xbb16, 0x63d0, 0x9ca1, 0x88d, 0xe66a, 0x0, 0x0);
        gbc.writeMem(0x7bdc, { 0x14 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xbb16, gbc.sp());
        EXPECT(0x7bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0286
        gbc.setState(0xd797, 0x1282, 0x7c0, 0xb2d5, 0xfe6a, 0x8900, 0x0, 0x0);
        gbc.writeMem(0xd797, { 0x14 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1282, gbc.sp());
        EXPECT(0xd798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd797));
        // 14 0288
        gbc.setState(0xed77, 0xf49c, 0xfe40, 0x377b, 0x17bc, 0x6b16, 0x1, 0x1);
        gbc.writeMem(0xed77, { 0x14 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf49c, gbc.sp());
        EXPECT(0xed78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xed77));
        // 14 0289
        gbc.setState(0xcfc9, 0x6ea8, 0x35e0, 0x3d2a, 0xf62, 0x9934, 0x1, 0x1);
        gbc.writeMem(0xcfc9, { 0x14 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6ea8, gbc.sp());
        EXPECT(0xcfca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xcfc9));
        // 14 028A
        gbc.setState(0xab89, 0xecd0, 0xc040, 0xf3e9, 0x6b8a, 0x57b5, 0x0, 0x0);
        gbc.writeMem(0xab89, { 0x14 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xecd0, gbc.sp());
        EXPECT(0xab8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xab89));
        // 14 028B
        gbc.setState(0x6043, 0x5be1, 0x7b20, 0xbe45, 0xe51f, 0x767e, 0x1, 0x0);
        gbc.writeMem(0x6043, { 0x14 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5be1, gbc.sp());
        EXPECT(0x6044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 028C
        gbc.setState(0x5cb2, 0x851f, 0xe690, 0x2587, 0xdc57, 0xc02c, 0x1, 0x1);
        gbc.writeMem(0x5cb2, { 0x14 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x851f, gbc.sp());
        EXPECT(0x5cb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 028D
        gbc.setState(0xce2f, 0x356d, 0x8730, 0xb25b, 0x71b3, 0xe440, 0x1, 0x0);
        gbc.writeMem(0xce2f, { 0x14 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x356d, gbc.sp());
        EXPECT(0xce30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xce2f));
        // 14 028E
        gbc.setState(0x7853, 0xef4b, 0xda40, 0xd438, 0x9eb6, 0x73fe, 0x0, 0x1);
        gbc.writeMem(0x7853, { 0x14 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xef4b, gbc.sp());
        EXPECT(0x7854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 028F
        gbc.setState(0x76cf, 0x5799, 0x1670, 0x4ba9, 0x3fb6, 0x8852, 0x0, 0x1);
        gbc.writeMem(0x76cf, { 0x14 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5799, gbc.sp());
        EXPECT(0x76d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0290
        gbc.setState(0xe264, 0x8e2d, 0xa0f0, 0xc0c0, 0x926a, 0x70a0, 0x0, 0x0);
        gbc.writeMem(0xe264, { 0x14 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8e2d, gbc.sp());
        EXPECT(0xe265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe264));
        // 14 0291
        gbc.setState(0x4230, 0xdbff, 0x6430, 0xb0f, 0x695f, 0x7764, 0x0, 0x1);
        gbc.writeMem(0x4230, { 0x14 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xdbff, gbc.sp());
        EXPECT(0x4231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0292
        gbc.setState(0x3712, 0x2417, 0x2de0, 0x8b66, 0xb275, 0x249d, 0x0, 0x0);
        gbc.writeMem(0x3712, { 0x14 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2417, gbc.sp());
        EXPECT(0x3713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0293
        gbc.setState(0xd94e, 0xbc24, 0xed0, 0xbdb0, 0xbb90, 0xf038, 0x1, 0x1);
        gbc.writeMem(0xd94e, { 0x14 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbc24, gbc.sp());
        EXPECT(0xd94f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd94e));
        // 14 0294
        gbc.setState(0xbc3, 0x264, 0x1430, 0x66e3, 0x719a, 0x9f17, 0x0, 0x0);
        gbc.writeMem(0xbc3, { 0x14 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x264, gbc.sp());
        EXPECT(0xbc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0295
        gbc.setState(0xada0, 0x9869, 0x3100, 0x1d31, 0xc6d6, 0x5ce5, 0x0, 0x0);
        gbc.writeMem(0xada0, { 0x14 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9869, gbc.sp());
        EXPECT(0xada1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xada0));
        // 14 0296
        gbc.setState(0xc03d, 0x50b3, 0xafa0, 0xde3c, 0xb264, 0x5910, 0x0, 0x0);
        gbc.writeMem(0xc03d, { 0x14 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x50b3, gbc.sp());
        EXPECT(0xc03e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc03d));
        // 14 0297
        gbc.setState(0xaf1d, 0xf55b, 0xb860, 0xd5d2, 0x4a56, 0xd7b0, 0x0, 0x1);
        gbc.writeMem(0xaf1d, { 0x14 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf55b, gbc.sp());
        EXPECT(0xaf1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xaf1d));
        // 14 0298
        gbc.setState(0x615a, 0x99da, 0x1dc0, 0x18cc, 0x37c7, 0xd794, 0x1, 0x0);
        gbc.writeMem(0x615a, { 0x14 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x99da, gbc.sp());
        EXPECT(0x615b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0299
        gbc.setState(0xffc, 0x3a86, 0x4190, 0xc456, 0x8f31, 0xebb5, 0x1, 0x1);
        gbc.writeMem(0xffc, { 0x14 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3a86, gbc.sp());
        EXPECT(0xffd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 029A
        gbc.setState(0x75f7, 0x55d0, 0xc170, 0xfc3b, 0x5e30, 0x32ee, 0x0, 0x1);
        gbc.writeMem(0x75f7, { 0x14 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x55d0, gbc.sp());
        EXPECT(0x75f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 029B
        gbc.setState(0x779e, 0x8ced, 0x7530, 0x8b0a, 0xf8c8, 0xee35, 0x1, 0x1);
        gbc.writeMem(0x779e, { 0x14 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8ced, gbc.sp());
        EXPECT(0x779f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 029C
        gbc.setState(0xaed2, 0x6750, 0xcfb0, 0x8cf5, 0x7178, 0x4930, 0x1, 0x1);
        gbc.writeMem(0xaed2, { 0x14 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6750, gbc.sp());
        EXPECT(0xaed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xaed2));
        // 14 029D
        gbc.setState(0xcc8, 0x5d5e, 0xc220, 0xe921, 0x7233, 0xf9b, 0x0, 0x1);
        gbc.writeMem(0xcc8, { 0x14 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5d5e, gbc.sp());
        EXPECT(0xcc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 029E
        gbc.setState(0x3c50, 0xa2f4, 0x71f0, 0xf1da, 0x5e9f, 0x10b4, 0x1, 0x0);
        gbc.writeMem(0x3c50, { 0x14 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa2f4, gbc.sp());
        EXPECT(0x3c51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02A0
        gbc.setState(0xc6be, 0x54ac, 0x7c50, 0x5039, 0x76c8, 0x65d0, 0x1, 0x0);
        gbc.writeMem(0xc6be, { 0x14 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x54ac, gbc.sp());
        EXPECT(0xc6bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc6be));
        // 14 02A1
        gbc.setState(0x1195, 0x2ba7, 0x9890, 0xedf1, 0xa28a, 0x7dcd, 0x0, 0x1);
        gbc.writeMem(0x1195, { 0x14 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2ba7, gbc.sp());
        EXPECT(0x1196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02A2
        gbc.setState(0x8c84, 0xcaab, 0x3d30, 0x6aa3, 0xb992, 0x79ec, 0x1, 0x1);
        gbc.writeMem(0x8c84, { 0x14 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xcaab, gbc.sp());
        EXPECT(0x8c85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8c84));
        // 14 02A3
        gbc.setState(0x5a2a, 0xa6a0, 0x68b0, 0xbd64, 0xe047, 0x220c, 0x1, 0x1);
        gbc.writeMem(0x5a2a, { 0x14 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa6a0, gbc.sp());
        EXPECT(0x5a2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02A4
        gbc.setState(0x4af1, 0xe299, 0x6ea0, 0x8af9, 0xc14b, 0x8c37, 0x1, 0x0);
        gbc.writeMem(0x4af1, { 0x14 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe299, gbc.sp());
        EXPECT(0x4af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 02A5
        gbc.setState(0x206c, 0xbcd6, 0xffd0, 0xda0c, 0x4e60, 0x6dfe, 0x1, 0x1);
        gbc.writeMem(0x206c, { 0x14 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xbcd6, gbc.sp());
        EXPECT(0x206d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02A6
        gbc.setState(0xb75d, 0xce65, 0xa970, 0xc425, 0x7e8f, 0x32f, 0x0, 0x1);
        gbc.writeMem(0xb75d, { 0x14 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xce65, gbc.sp());
        EXPECT(0xb75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb75d));
        // 14 02A7
        gbc.setState(0x468a, 0xc456, 0xdf10, 0x8302, 0xcfc2, 0xdef5, 0x0, 0x1);
        gbc.writeMem(0x468a, { 0x14 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc456, gbc.sp());
        EXPECT(0x468b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02A8
        gbc.setState(0xdc94, 0xc4b7, 0x93b0, 0x4df1, 0x18b0, 0x8e99, 0x1, 0x0);
        gbc.writeMem(0xdc94, { 0x14 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc4b7, gbc.sp());
        EXPECT(0xdc95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdc94));
        // 14 02A9
        gbc.setState(0x67fa, 0x6af9, 0x46a0, 0x5125, 0x68d, 0x4d58, 0x0, 0x1);
        gbc.writeMem(0x67fa, { 0x14 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6af9, gbc.sp());
        EXPECT(0x67fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 02AA
        gbc.setState(0x3f89, 0x5bfa, 0xe500, 0xdd96, 0x44f4, 0xa302, 0x1, 0x0);
        gbc.writeMem(0x3f89, { 0x14 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5bfa, gbc.sp());
        EXPECT(0x3f8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 02AB
        gbc.setState(0xeb36, 0xe0fc, 0xb420, 0xc19b, 0xf59f, 0x46ae, 0x0, 0x1);
        gbc.writeMem(0xeb36, { 0x14 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe0fc, gbc.sp());
        EXPECT(0xeb37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xeb36));
        // 14 02AC
        gbc.setState(0xcdf0, 0xb519, 0x5a20, 0xd36c, 0x5e8e, 0x15e5, 0x0, 0x1);
        gbc.writeMem(0xcdf0, { 0x14 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb519, gbc.sp());
        EXPECT(0xcdf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xcdf0));
        // 14 02AD
        gbc.setState(0x7b04, 0x3aab, 0xd940, 0x122d, 0xec07, 0x94c0, 0x0, 0x1);
        gbc.writeMem(0x7b04, { 0x14 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3aab, gbc.sp());
        EXPECT(0x7b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 02AE
        gbc.setState(0x9efc, 0x59ef, 0x9bc0, 0xb3cb, 0xb78c, 0x7b9, 0x0, 0x0);
        gbc.writeMem(0x9efc, { 0x14 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x59ef, gbc.sp());
        EXPECT(0x9efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9efc));
        // 14 02AF
        gbc.setState(0xe90a, 0xcfea, 0xe460, 0xfe9f, 0x5ce5, 0x9c32, 0x1, 0x0);
        gbc.writeMem(0xe90a, { 0x14 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xcfea, gbc.sp());
        EXPECT(0xe90b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe90a));
        // 14 02B0
        gbc.setState(0xb7fa, 0x8c24, 0x3ed0, 0xebbb, 0x7f06, 0x3cd8, 0x0, 0x1);
        gbc.writeMem(0xb7fa, { 0x14 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8c24, gbc.sp());
        EXPECT(0xb7fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb7fa));
        // 14 02B1
        gbc.setState(0xe738, 0xcef4, 0x630, 0x37c8, 0x3184, 0xf8ee, 0x0, 0x1);
        gbc.writeMem(0xe738, { 0x14 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xcef4, gbc.sp());
        EXPECT(0xe739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe738));
        // 14 02B3
        gbc.setState(0x747b, 0x26d3, 0x5e00, 0x995b, 0x634f, 0xa356, 0x0, 0x1);
        gbc.writeMem(0x747b, { 0x14 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x26d3, gbc.sp());
        EXPECT(0x747c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 02B4
        gbc.setState(0x7f79, 0xcf1d, 0x8c0, 0x3453, 0x1e7, 0x84b, 0x1, 0x1);
        gbc.writeMem(0x7f79, { 0x14 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xcf1d, gbc.sp());
        EXPECT(0x7f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 02B5
        gbc.setState(0x102, 0x8b33, 0x30d0, 0x4120, 0xaa67, 0x2ad8, 0x0, 0x0);
        gbc.writeMem(0x102, { 0x14 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8b33, gbc.sp());
        EXPECT(0x103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02B6
        gbc.setState(0xd76b, 0x4980, 0xded0, 0xc243, 0xeb6c, 0x9895, 0x1, 0x0);
        gbc.writeMem(0xd76b, { 0x14 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4980, gbc.sp());
        EXPECT(0xd76c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd76b));
        // 14 02B7
        gbc.setState(0x91dc, 0x44a7, 0x2fd0, 0x7a0, 0x25a1, 0x56a0, 0x0, 0x0);
        gbc.writeMem(0x91dc, { 0x14 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x44a7, gbc.sp());
        EXPECT(0x91dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x91dc));
        // 14 02B9
        gbc.setState(0x3523, 0xb2d9, 0x1770, 0xbfa8, 0x89f2, 0xf124, 0x0, 0x0);
        gbc.writeMem(0x3523, { 0x14 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb2d9, gbc.sp());
        EXPECT(0x3524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02BA
        gbc.setState(0x70ea, 0x1945, 0x2f0, 0x7605, 0xd6e6, 0xc7be, 0x1, 0x1);
        gbc.writeMem(0x70ea, { 0x14 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1945, gbc.sp());
        EXPECT(0x70eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02BB
        gbc.setState(0x6085, 0x6531, 0x3460, 0xdfb5, 0x57f2, 0x9246, 0x1, 0x1);
        gbc.writeMem(0x6085, { 0x14 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6531, gbc.sp());
        EXPECT(0x6086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 02BC
        gbc.setState(0x481b, 0x7180, 0x6450, 0x756b, 0x9e44, 0x222, 0x1, 0x1);
        gbc.writeMem(0x481b, { 0x14 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7180, gbc.sp());
        EXPECT(0x481c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02BD
        gbc.setState(0x6e74, 0xc50e, 0x6330, 0x7adf, 0x8a7, 0xb83e, 0x1, 0x1);
        gbc.writeMem(0x6e74, { 0x14 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc50e, gbc.sp());
        EXPECT(0x6e75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02BF
        gbc.setState(0x20ce, 0x1377, 0xadd0, 0x4958, 0x7943, 0x6ac2, 0x1, 0x1);
        gbc.writeMem(0x20ce, { 0x14 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1377, gbc.sp());
        EXPECT(0x20cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02C0
        gbc.setState(0x941, 0xcfbf, 0xb0, 0x5c37, 0x9761, 0x49e7, 0x0, 0x1);
        gbc.writeMem(0x941, { 0x14 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xcfbf, gbc.sp());
        EXPECT(0x942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02C1
        gbc.setState(0x7897, 0x7f7, 0xaf00, 0xb2c3, 0x6394, 0xa13f, 0x0, 0x0);
        gbc.writeMem(0x7897, { 0x14 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7f7, gbc.sp());
        EXPECT(0x7898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 02C2
        gbc.setState(0xce88, 0xa2a5, 0x2680, 0xf9ba, 0xea8, 0xbf9a, 0x0, 0x1);
        gbc.writeMem(0xce88, { 0x14 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa2a5, gbc.sp());
        EXPECT(0xce89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xce88));
        // 14 02C3
        gbc.setState(0xa4ed, 0xd030, 0xdce0, 0xf1ff, 0x3de4, 0x7a3d, 0x1, 0x1);
        gbc.writeMem(0xa4ed, { 0x14 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd030, gbc.sp());
        EXPECT(0xa4ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa4ed));
        // 14 02C5
        gbc.setState(0xabe0, 0x43e6, 0xaa90, 0x438d, 0x90ee, 0xcf43, 0x1, 0x1);
        gbc.writeMem(0xabe0, { 0x14 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x43e6, gbc.sp());
        EXPECT(0xabe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xabe0));
        // 14 02C7
        gbc.setState(0x4334, 0xd578, 0xca50, 0x1e49, 0x105f, 0xaf4d, 0x1, 0x0);
        gbc.writeMem(0x4334, { 0x14 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd578, gbc.sp());
        EXPECT(0x4335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02C8
        gbc.setState(0x2872, 0x7fa7, 0x8de0, 0xb334, 0x8ef6, 0x4a5e, 0x1, 0x0);
        gbc.writeMem(0x2872, { 0x14 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7fa7, gbc.sp());
        EXPECT(0x2873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 02CA
        gbc.setState(0x1117, 0x2c44, 0xe100, 0x586f, 0xada8, 0xff0a, 0x1, 0x0);
        gbc.writeMem(0x1117, { 0x14 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2c44, gbc.sp());
        EXPECT(0x1118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 02CB
        gbc.setState(0x4ca9, 0xbeeb, 0x76b0, 0x8550, 0xcd4d, 0x8df, 0x0, 0x0);
        gbc.writeMem(0x4ca9, { 0x14 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xbeeb, gbc.sp());
        EXPECT(0x4caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02CC
        gbc.setState(0x250b, 0x5396, 0xf700, 0xed74, 0xac0, 0x3c91, 0x0, 0x0);
        gbc.writeMem(0x250b, { 0x14 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5396, gbc.sp());
        EXPECT(0x250c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 02CD
        gbc.setState(0x4376, 0x62a2, 0x3c70, 0x8c77, 0xa4a4, 0xe48a, 0x0, 0x0);
        gbc.writeMem(0x4376, { 0x14 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x62a2, gbc.sp());
        EXPECT(0x4377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02CE
        gbc.setState(0xa677, 0x90d1, 0xefc0, 0xef4a, 0x3526, 0x7568, 0x1, 0x1);
        gbc.writeMem(0xa677, { 0x14 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x90d1, gbc.sp());
        EXPECT(0xa678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa677));
        // 14 02CF
        gbc.setState(0x6581, 0xdbb7, 0xbf50, 0x1d6, 0x18c9, 0x83b2, 0x1, 0x1);
        gbc.writeMem(0x6581, { 0x14 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xdbb7, gbc.sp());
        EXPECT(0x6582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02D0
        gbc.setState(0x51b6, 0x37d, 0x54c0, 0x7771, 0xdc1a, 0x1065, 0x1, 0x1);
        gbc.writeMem(0x51b6, { 0x14 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x37d, gbc.sp());
        EXPECT(0x51b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 02D1
        gbc.setState(0x82f2, 0x7a34, 0x1030, 0xcf78, 0x2972, 0xd60f, 0x0, 0x0);
        gbc.writeMem(0x82f2, { 0x14 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7a34, gbc.sp());
        EXPECT(0x82f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x82f2));
        // 14 02D2
        gbc.setState(0x233a, 0xb8f6, 0xdaa0, 0x320a, 0x1084, 0xe5fc, 0x0, 0x1);
        gbc.writeMem(0x233a, { 0x14 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb8f6, gbc.sp());
        EXPECT(0x233b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 02D3
        gbc.setState(0x28b8, 0x6a4b, 0xaa70, 0xdf61, 0x1a63, 0xb5d9, 0x1, 0x1);
        gbc.writeMem(0x28b8, { 0x14 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6a4b, gbc.sp());
        EXPECT(0x28b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02D4
        gbc.setState(0x9a6, 0x28d8, 0x8c10, 0xff7c, 0xed2c, 0xb909, 0x0, 0x1);
        gbc.writeMem(0x9a6, { 0x14 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x28d8, gbc.sp());
        EXPECT(0x9a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02D5
        gbc.setState(0x581, 0x561f, 0xd270, 0xe7e9, 0xd855, 0x2a2e, 0x0, 0x0);
        gbc.writeMem(0x581, { 0x14 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x561f, gbc.sp());
        EXPECT(0x582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02D6
        gbc.setState(0xe13c, 0x408a, 0x6530, 0xe481, 0x786f, 0x5371, 0x1, 0x1);
        gbc.writeMem(0xe13c, { 0x14 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x408a, gbc.sp());
        EXPECT(0xe13d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe13c));
        // 14 02D7
        gbc.setState(0xa70c, 0x61f9, 0x6e70, 0x3341, 0x2099, 0x1457, 0x0, 0x0);
        gbc.writeMem(0xa70c, { 0x14 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x61f9, gbc.sp());
        EXPECT(0xa70d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa70c));
        // 14 02D8
        gbc.setState(0x659d, 0x8e35, 0x7270, 0x8db, 0x15c5, 0xc477, 0x1, 0x0);
        gbc.writeMem(0x659d, { 0x14 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8e35, gbc.sp());
        EXPECT(0x659e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02D9
        gbc.setState(0x2414, 0x5f1c, 0x740, 0xe51, 0x5e59, 0x8419, 0x0, 0x0);
        gbc.writeMem(0x2414, { 0x14 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5f1c, gbc.sp());
        EXPECT(0x2415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 02DA
        gbc.setState(0xa0b4, 0xe081, 0xd440, 0x5cd6, 0x4163, 0x77fe, 0x0, 0x0);
        gbc.writeMem(0xa0b4, { 0x14 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe081, gbc.sp());
        EXPECT(0xa0b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa0b4));
        // 14 02DB
        gbc.setState(0x1982, 0xba5e, 0xa690, 0x2b94, 0x9c43, 0x1479, 0x0, 0x0);
        gbc.writeMem(0x1982, { 0x14 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xba5e, gbc.sp());
        EXPECT(0x1983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02DC
        gbc.setState(0x4918, 0xf2b8, 0x7c50, 0x8ad9, 0xd93e, 0xcb0d, 0x1, 0x0);
        gbc.writeMem(0x4918, { 0x14 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf2b8, gbc.sp());
        EXPECT(0x4919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02DD
        gbc.setState(0xa74d, 0xce8f, 0xd910, 0xb0ed, 0xf4dc, 0x523c, 0x1, 0x1);
        gbc.writeMem(0xa74d, { 0x14 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xce8f, gbc.sp());
        EXPECT(0xa74e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa74d));
        // 14 02DE
        gbc.setState(0x1828, 0x50fe, 0xdfd0, 0x7a6a, 0x122d, 0x2427, 0x0, 0x1);
        gbc.writeMem(0x1828, { 0x14 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x50fe, gbc.sp());
        EXPECT(0x1829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02DF
        gbc.setState(0x872b, 0x8f11, 0x97d0, 0x8320, 0x1c69, 0xd66d, 0x1, 0x0);
        gbc.writeMem(0x872b, { 0x14 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8f11, gbc.sp());
        EXPECT(0x872c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x872b));
        // 14 02E0
        gbc.setState(0xd305, 0x489a, 0xee60, 0x64d5, 0x4bf9, 0xbd0a, 0x0, 0x0);
        gbc.writeMem(0xd305, { 0x14 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x489a, gbc.sp());
        EXPECT(0xd306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd305));
        // 14 02E1
        gbc.setState(0xa7d, 0x641c, 0xfca0, 0xdcd9, 0x714b, 0x3b0c, 0x0, 0x1);
        gbc.writeMem(0xa7d, { 0x14 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x641c, gbc.sp());
        EXPECT(0xa7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 02E2
        gbc.setState(0x4b3d, 0xa58f, 0x4290, 0xe486, 0x8cb4, 0xb068, 0x0, 0x1);
        gbc.writeMem(0x4b3d, { 0x14 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa58f, gbc.sp());
        EXPECT(0x4b3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02E3
        gbc.setState(0xd52c, 0x444c, 0xa7e0, 0x5ee0, 0xe541, 0xc57, 0x0, 0x1);
        gbc.writeMem(0xd52c, { 0x14 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x444c, gbc.sp());
        EXPECT(0xd52d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd52c));
        // 14 02E4
        gbc.setState(0x78be, 0x1454, 0x7030, 0xf938, 0x66ab, 0xee84, 0x1, 0x0);
        gbc.writeMem(0x78be, { 0x14 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1454, gbc.sp());
        EXPECT(0x78bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02E5
        gbc.setState(0x121, 0x8d97, 0xdb20, 0xe2c1, 0x9283, 0x731, 0x0, 0x0);
        gbc.writeMem(0x121, { 0x14 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8d97, gbc.sp());
        EXPECT(0x122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 02E6
        gbc.setState(0xdf1, 0xec45, 0xf000, 0xe383, 0x8b43, 0x1227, 0x0, 0x0);
        gbc.writeMem(0xdf1, { 0x14 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xec45, gbc.sp());
        EXPECT(0xdf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 02E7
        gbc.setState(0x1f46, 0x7808, 0x2e90, 0x8d79, 0xcdc1, 0x238b, 0x1, 0x0);
        gbc.writeMem(0x1f46, { 0x14 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7808, gbc.sp());
        EXPECT(0x1f47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02E8
        gbc.setState(0xc37a, 0x83dd, 0x1cc0, 0x6287, 0x4b97, 0xa72d, 0x0, 0x1);
        gbc.writeMem(0xc37a, { 0x14 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x83dd, gbc.sp());
        EXPECT(0xc37b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc37a));
        // 14 02E9
        gbc.setState(0xa58a, 0xe725, 0xe5b0, 0xb7c1, 0x96f4, 0x33, 0x0, 0x1);
        gbc.writeMem(0xa58a, { 0x14 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe725, gbc.sp());
        EXPECT(0xa58b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa58a));
        // 14 02EA
        gbc.setState(0x6ce7, 0x70dd, 0x5510, 0xe7c6, 0x8aab, 0xd565, 0x1, 0x0);
        gbc.writeMem(0x6ce7, { 0x14 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x70dd, gbc.sp());
        EXPECT(0x6ce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02EB
        gbc.setState(0x6f1a, 0xfd34, 0x7940, 0x87a2, 0x8c4d, 0xa2ba, 0x1, 0x0);
        gbc.writeMem(0x6f1a, { 0x14 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfd34, gbc.sp());
        EXPECT(0x6f1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 02EC
        gbc.setState(0x8d2a, 0xbf20, 0xcf30, 0x8abc, 0xbb61, 0x417f, 0x0, 0x1);
        gbc.writeMem(0x8d2a, { 0x14 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xbf20, gbc.sp());
        EXPECT(0x8d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8d2a));
        // 14 02ED
        gbc.setState(0x178c, 0xea4e, 0x8a80, 0x40be, 0xad5e, 0xcbfc, 0x0, 0x1);
        gbc.writeMem(0x178c, { 0x14 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xea4e, gbc.sp());
        EXPECT(0x178d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 02EE
        gbc.setState(0xb680, 0x1ee, 0x26e0, 0xc3ec, 0x16b8, 0x7323, 0x0, 0x1);
        gbc.writeMem(0xb680, { 0x14 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1ee, gbc.sp());
        EXPECT(0xb681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb680));
        // 14 02EF
        gbc.setState(0x77c9, 0x22df, 0x66d0, 0xe086, 0x3f4c, 0x5dd5, 0x0, 0x1);
        gbc.writeMem(0x77c9, { 0x14 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x22df, gbc.sp());
        EXPECT(0x77ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02F0
        gbc.setState(0x47b4, 0xcf83, 0x9fd0, 0xe5c7, 0xe5a1, 0xf8eb, 0x1, 0x0);
        gbc.writeMem(0x47b4, { 0x14 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcf83, gbc.sp());
        EXPECT(0x47b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02F1
        gbc.setState(0xaf6a, 0xaec3, 0x3de0, 0x3952, 0xf254, 0x7738, 0x1, 0x1);
        gbc.writeMem(0xaf6a, { 0x14 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xaec3, gbc.sp());
        EXPECT(0xaf6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xaf6a));
        // 14 02F3
        gbc.setState(0xa43, 0x7b07, 0xb210, 0x6717, 0x133e, 0xcbc6, 0x0, 0x1);
        gbc.writeMem(0xa43, { 0x14 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7b07, gbc.sp());
        EXPECT(0xa44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02F4
        gbc.setState(0x3f79, 0x5d30, 0x9c50, 0xf1e3, 0x901, 0x8fd, 0x0, 0x0);
        gbc.writeMem(0x3f79, { 0x14 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5d30, gbc.sp());
        EXPECT(0x3f7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02F5
        gbc.setState(0x9475, 0xba44, 0x7550, 0xb6c4, 0x6699, 0x7b8b, 0x0, 0x0);
        gbc.writeMem(0x9475, { 0x14 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xba44, gbc.sp());
        EXPECT(0x9476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9475));
        // 14 02F6
        gbc.setState(0x8a7f, 0x4926, 0x54e0, 0x4c0f, 0x4ff2, 0x2302, 0x1, 0x1);
        gbc.writeMem(0x8a7f, { 0x14 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4926, gbc.sp());
        EXPECT(0x8a80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8a7f));
        // 14 02F7
        gbc.setState(0x8944, 0xf286, 0x130, 0x310b, 0xe83f, 0xdc9c, 0x1, 0x0);
        gbc.writeMem(0x8944, { 0x14 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf286, gbc.sp());
        EXPECT(0x8945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8944));
        // 14 02F8
        gbc.setState(0x592d, 0x9764, 0xa8e0, 0xb6f0, 0xa06c, 0xfe5f, 0x1, 0x1);
        gbc.writeMem(0x592d, { 0x14 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9764, gbc.sp());
        EXPECT(0x592e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 02F9
        gbc.setState(0x55bf, 0x69bb, 0xb210, 0xf5a3, 0xbf0, 0x9f5c, 0x0, 0x0);
        gbc.writeMem(0x55bf, { 0x14 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x69bb, gbc.sp());
        EXPECT(0x55c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02FA
        gbc.setState(0x5b7e, 0xd3de, 0x1de0, 0x5257, 0x2306, 0x4335, 0x0, 0x1);
        gbc.writeMem(0x5b7e, { 0x14 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd3de, gbc.sp());
        EXPECT(0x5b7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 02FB
        gbc.setState(0xada8, 0x28a4, 0xe7c0, 0xcb69, 0xc9bb, 0x9c20, 0x1, 0x0);
        gbc.writeMem(0xada8, { 0x14 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x28a4, gbc.sp());
        EXPECT(0xada9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xada8));
        // 14 02FC
        gbc.setState(0x2417, 0x608, 0x21b0, 0x9edd, 0x15d9, 0xfc99, 0x0, 0x1);
        gbc.writeMem(0x2417, { 0x14 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x608, gbc.sp());
        EXPECT(0x2418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 02FD
        gbc.setState(0xaf0a, 0xc1fc, 0xade0, 0x2fda, 0xf883, 0x1746, 0x1, 0x1);
        gbc.writeMem(0xaf0a, { 0x14 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc1fc, gbc.sp());
        EXPECT(0xaf0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xaf0a));
        // 14 02FE
        gbc.setState(0x1ee7, 0x3fce, 0xcae0, 0xd282, 0x6c16, 0xda26, 0x1, 0x0);
        gbc.writeMem(0x1ee7, { 0x14 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3fce, gbc.sp());
        EXPECT(0x1ee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 02FF
        gbc.setState(0xb26b, 0x6682, 0x25d0, 0x57be, 0xf06d, 0xece6, 0x1, 0x1);
        gbc.writeMem(0xb26b, { 0x14 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6682, gbc.sp());
        EXPECT(0xb26c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb26b));
        // 14 0300
        gbc.setState(0xab24, 0xe1c, 0x9480, 0xd80a, 0x773c, 0x6f6, 0x0, 0x0);
        gbc.writeMem(0xab24, { 0x14 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe1c, gbc.sp());
        EXPECT(0xab25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xab24));
        // 14 0301
        gbc.setState(0xcb68, 0xe5b0, 0x410, 0xa1dd, 0xc86e, 0x3d84, 0x0, 0x0);
        gbc.writeMem(0xcb68, { 0x14 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe5b0, gbc.sp());
        EXPECT(0xcb69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xcb68));
        // 14 0302
        gbc.setState(0x1756, 0xadb, 0xd110, 0x23c7, 0xec10, 0x8464, 0x1, 0x1);
        gbc.writeMem(0x1756, { 0x14 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xadb, gbc.sp());
        EXPECT(0x1757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0303
        gbc.setState(0xf5, 0xd704, 0xae70, 0x9730, 0xb269, 0xe1e, 0x0, 0x1);
        gbc.writeMem(0xf5, { 0x14 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd704, gbc.sp());
        EXPECT(0xf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0304
        gbc.setState(0xaba3, 0xd3a6, 0xda40, 0x82bc, 0xcef3, 0x865f, 0x0, 0x1);
        gbc.writeMem(0xaba3, { 0x14 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd3a6, gbc.sp());
        EXPECT(0xaba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xaba3));
        // 14 0305
        gbc.setState(0xc6c1, 0x1f44, 0x7780, 0x1622, 0x8fd4, 0x7740, 0x0, 0x0);
        gbc.writeMem(0xc6c1, { 0x14 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1f44, gbc.sp());
        EXPECT(0xc6c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc6c1));
        // 14 0306
        gbc.setState(0xdfdb, 0xc117, 0x7740, 0x9da, 0xdf9c, 0x11ae, 0x1, 0x1);
        gbc.writeMem(0xdfdb, { 0x14 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc117, gbc.sp());
        EXPECT(0xdfdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdfdb));
        // 14 0307
        gbc.setState(0x2f14, 0xa88, 0x6710, 0xe00b, 0xf39b, 0xc59b, 0x1, 0x1);
        gbc.writeMem(0x2f14, { 0x14 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa88, gbc.sp());
        EXPECT(0x2f15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0308
        gbc.setState(0xc0c9, 0xedc9, 0x99f0, 0xfaf2, 0x1367, 0xa23c, 0x0, 0x1);
        gbc.writeMem(0xc0c9, { 0x14 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xedc9, gbc.sp());
        EXPECT(0xc0ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc0c9));
        // 14 0309
        gbc.setState(0xa570, 0x7624, 0x5480, 0xdeb9, 0x1501, 0xdd63, 0x1, 0x0);
        gbc.writeMem(0xa570, { 0x14 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7624, gbc.sp());
        EXPECT(0xa571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa570));
        // 14 030B
        gbc.setState(0xcfeb, 0x4861, 0xfa80, 0x24f8, 0xae91, 0x661e, 0x1, 0x1);
        gbc.writeMem(0xcfeb, { 0x14 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4861, gbc.sp());
        EXPECT(0xcfec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xcfeb));
        // 14 030C
        gbc.setState(0x42ba, 0x54d2, 0xe480, 0xd68a, 0xcf1f, 0xdd0c, 0x0, 0x1);
        gbc.writeMem(0x42ba, { 0x14 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x54d2, gbc.sp());
        EXPECT(0x42bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 030D
        gbc.setState(0x27ab, 0xf93b, 0x8740, 0x5102, 0x5405, 0xdcdf, 0x0, 0x0);
        gbc.writeMem(0x27ab, { 0x14 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf93b, gbc.sp());
        EXPECT(0x27ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 030E
        gbc.setState(0xc273, 0x1268, 0x9fa0, 0x76c9, 0x822c, 0x8e2a, 0x0, 0x0);
        gbc.writeMem(0xc273, { 0x14 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1268, gbc.sp());
        EXPECT(0xc274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc273));
        // 14 030F
        gbc.setState(0xb45b, 0x7bd1, 0x4d60, 0x4a7d, 0xa3cd, 0xc0d, 0x0, 0x1);
        gbc.writeMem(0xb45b, { 0x14 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7bd1, gbc.sp());
        EXPECT(0xb45c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb45b));
        // 14 0310
        gbc.setState(0x314, 0x5c80, 0xb230, 0x7b9d, 0xe388, 0x4cb, 0x1, 0x1);
        gbc.writeMem(0x314, { 0x14 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5c80, gbc.sp());
        EXPECT(0x315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0312
        gbc.setState(0xd6a6, 0xd788, 0x5100, 0x55d9, 0xb494, 0xe537, 0x0, 0x0);
        gbc.writeMem(0xd6a6, { 0x14 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd788, gbc.sp());
        EXPECT(0xd6a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd6a6));
        // 14 0313
        gbc.setState(0x5662, 0x2ed2, 0x2050, 0x8468, 0x1a00, 0x5d40, 0x0, 0x0);
        gbc.writeMem(0x5662, { 0x14 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2ed2, gbc.sp());
        EXPECT(0x5663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0314
        gbc.setState(0x2617, 0xbd6c, 0x39f0, 0x1ef5, 0xebe9, 0xd51a, 0x1, 0x1);
        gbc.writeMem(0x2617, { 0x14 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbd6c, gbc.sp());
        EXPECT(0x2618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0315
        gbc.setState(0xc4ad, 0xc1a6, 0xa400, 0x7981, 0x7807, 0x14f, 0x0, 0x1);
        gbc.writeMem(0xc4ad, { 0x14 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc1a6, gbc.sp());
        EXPECT(0xc4ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc4ad));
        // 14 0316
        gbc.setState(0x2842, 0xb043, 0xe960, 0xd24, 0xe6f2, 0xc80e, 0x1, 0x0);
        gbc.writeMem(0x2842, { 0x14 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb043, gbc.sp());
        EXPECT(0x2843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0317
        gbc.setState(0xc173, 0x20bc, 0x59e0, 0x5e4, 0x3c1, 0xbe3a, 0x0, 0x0);
        gbc.writeMem(0xc173, { 0x14 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x20bc, gbc.sp());
        EXPECT(0xc174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc173));
        // 14 0318
        gbc.setState(0x9143, 0xa81b, 0xf480, 0xc191, 0xe586, 0xd2e1, 0x1, 0x0);
        gbc.writeMem(0x9143, { 0x14 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa81b, gbc.sp());
        EXPECT(0x9144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9143));
        // 14 0319
        gbc.setState(0x6249, 0x90eb, 0x1d70, 0x21e3, 0xe1aa, 0xc412, 0x1, 0x0);
        gbc.writeMem(0x6249, { 0x14 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x90eb, gbc.sp());
        EXPECT(0x624a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 031A
        gbc.setState(0xdb03, 0xa848, 0x5f40, 0xe35f, 0xd997, 0x8503, 0x1, 0x1);
        gbc.writeMem(0xdb03, { 0x14 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa848, gbc.sp());
        EXPECT(0xdb04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdb03));
        // 14 031B
        gbc.setState(0x623c, 0xf07f, 0x140, 0xe195, 0xb7ed, 0x5083, 0x1, 0x1);
        gbc.writeMem(0x623c, { 0x14 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf07f, gbc.sp());
        EXPECT(0x623d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 031C
        gbc.setState(0xc139, 0xd1bb, 0x3eb0, 0x86b1, 0xefe8, 0x95c2, 0x1, 0x0);
        gbc.writeMem(0xc139, { 0x14 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd1bb, gbc.sp());
        EXPECT(0xc13a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc139));
        // 14 031D
        gbc.setState(0x678b, 0x788, 0x4540, 0xd66d, 0xdb36, 0x9469, 0x0, 0x1);
        gbc.writeMem(0x678b, { 0x14 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x788, gbc.sp());
        EXPECT(0x678c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 031E
        gbc.setState(0x4825, 0xb824, 0x7660, 0x88cd, 0x3a34, 0xff24, 0x1, 0x0);
        gbc.writeMem(0x4825, { 0x14 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb824, gbc.sp());
        EXPECT(0x4826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 031F
        gbc.setState(0xc525, 0xcbdf, 0x5430, 0x506c, 0xcd09, 0xa9df, 0x0, 0x1);
        gbc.writeMem(0xc525, { 0x14 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xcbdf, gbc.sp());
        EXPECT(0xc526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc525));
        // 14 0320
        gbc.setState(0x5777, 0xc021, 0x270, 0x26eb, 0xe7cd, 0x403a, 0x0, 0x1);
        gbc.writeMem(0x5777, { 0x14 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc021, gbc.sp());
        EXPECT(0x5778, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0321
        gbc.setState(0x9bd0, 0xce98, 0x37c0, 0xd871, 0x9f9c, 0x2289, 0x0, 0x0);
        gbc.writeMem(0x9bd0, { 0x14 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xce98, gbc.sp());
        EXPECT(0x9bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9bd0));
        // 14 0322
        gbc.setState(0x78e2, 0x78f1, 0x5f70, 0x8fd0, 0xa76f, 0x4b0c, 0x1, 0x0);
        gbc.writeMem(0x78e2, { 0x14 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x78f1, gbc.sp());
        EXPECT(0x78e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0323
        gbc.setState(0x7db9, 0xad5e, 0x38c0, 0x83c, 0xad44, 0x3fd, 0x0, 0x1);
        gbc.writeMem(0x7db9, { 0x14 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xad5e, gbc.sp());
        EXPECT(0x7dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0324
        gbc.setState(0x87ec, 0x4583, 0xbcc0, 0x61e3, 0x941d, 0x992f, 0x1, 0x1);
        gbc.writeMem(0x87ec, { 0x14 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4583, gbc.sp());
        EXPECT(0x87ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x87ec));
        // 14 0325
        gbc.setState(0x4fe9, 0x587d, 0x9430, 0x4364, 0xd992, 0xc1e5, 0x0, 0x0);
        gbc.writeMem(0x4fe9, { 0x14 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x587d, gbc.sp());
        EXPECT(0x4fea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0326
        gbc.setState(0x1fcf, 0xf18c, 0x23f0, 0x217d, 0xb7c2, 0x762e, 0x0, 0x1);
        gbc.writeMem(0x1fcf, { 0x14 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf18c, gbc.sp());
        EXPECT(0x1fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0327
        gbc.setState(0x4841, 0x88ec, 0x9320, 0x6817, 0x4f18, 0x8c61, 0x0, 0x1);
        gbc.writeMem(0x4841, { 0x14 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x88ec, gbc.sp());
        EXPECT(0x4842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0328
        gbc.setState(0x9d0b, 0x3e56, 0x7580, 0xf388, 0x2779, 0xa7b1, 0x1, 0x0);
        gbc.writeMem(0x9d0b, { 0x14 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3e56, gbc.sp());
        EXPECT(0x9d0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9d0b));
        // 14 0329
        gbc.setState(0xadd7, 0xe462, 0x2f60, 0x564b, 0xbe38, 0x493, 0x0, 0x1);
        gbc.writeMem(0xadd7, { 0x14 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe462, gbc.sp());
        EXPECT(0xadd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xadd7));
        // 14 032A
        gbc.setState(0xa577, 0x5941, 0x3110, 0x3172, 0x27df, 0x92d9, 0x1, 0x0);
        gbc.writeMem(0xa577, { 0x14 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5941, gbc.sp());
        EXPECT(0xa578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa577));
        // 14 032B
        gbc.setState(0xd65, 0xf73f, 0xb470, 0x5d2b, 0x90d3, 0x347a, 0x1, 0x0);
        gbc.writeMem(0xd65, { 0x14 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf73f, gbc.sp());
        EXPECT(0xd66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 032C
        gbc.setState(0xc7be, 0xbf50, 0xdc10, 0xc7ff, 0xbcb7, 0xfb70, 0x0, 0x1);
        gbc.writeMem(0xc7be, { 0x14 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbf50, gbc.sp());
        EXPECT(0xc7bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc7be));
        // 14 032D
        gbc.setState(0x581a, 0xfeba, 0x1630, 0x5dc, 0xb21e, 0xe354, 0x1, 0x0);
        gbc.writeMem(0x581a, { 0x14 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfeba, gbc.sp());
        EXPECT(0x581b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 032E
        gbc.setState(0x5420, 0x1412, 0x250, 0xc13e, 0xf0a5, 0x83dd, 0x0, 0x1);
        gbc.writeMem(0x5420, { 0x14 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1412, gbc.sp());
        EXPECT(0x5421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 032F
        gbc.setState(0x318b, 0x924c, 0x7de0, 0xd744, 0x7ba8, 0x36ce, 0x0, 0x0);
        gbc.writeMem(0x318b, { 0x14 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x924c, gbc.sp());
        EXPECT(0x318c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0330
        gbc.setState(0x86, 0x7413, 0xc6b0, 0x6359, 0x911c, 0xedc4, 0x0, 0x0);
        gbc.writeMem(0x86, { 0x14 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7413, gbc.sp());
        EXPECT(0x87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0331
        gbc.setState(0x93a9, 0x9dbf, 0x2f40, 0xc2a1, 0xf6b1, 0x711f, 0x0, 0x1);
        gbc.writeMem(0x93a9, { 0x14 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9dbf, gbc.sp());
        EXPECT(0x93aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x93a9));
        // 14 0332
        gbc.setState(0xa140, 0x67c, 0x5f50, 0xd4d4, 0x6bb1, 0xf183, 0x0, 0x0);
        gbc.writeMem(0xa140, { 0x14 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x67c, gbc.sp());
        EXPECT(0xa141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa140));
        // 14 0333
        gbc.setState(0xe12e, 0xdc5c, 0x3ed0, 0xcf5b, 0xcb69, 0xed7e, 0x1, 0x0);
        gbc.writeMem(0xe12e, { 0x14 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xdc5c, gbc.sp());
        EXPECT(0xe12f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe12e));
        // 14 0334
        gbc.setState(0x6579, 0x7535, 0x5270, 0xe97c, 0x859c, 0x8701, 0x0, 0x0);
        gbc.writeMem(0x6579, { 0x14 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7535, gbc.sp());
        EXPECT(0x657a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0335
        gbc.setState(0x1a86, 0x8ca, 0x7020, 0x56e7, 0x47e3, 0x4843, 0x0, 0x1);
        gbc.writeMem(0x1a86, { 0x14 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8ca, gbc.sp());
        EXPECT(0x1a87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0336
        gbc.setState(0x5ea7, 0xdcf3, 0xe870, 0x1a33, 0xa24b, 0x752f, 0x1, 0x1);
        gbc.writeMem(0x5ea7, { 0x14 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xdcf3, gbc.sp());
        EXPECT(0x5ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0337
        gbc.setState(0x2bc6, 0xc8ce, 0x8fc0, 0x31a1, 0xb620, 0x2f2, 0x0, 0x1);
        gbc.writeMem(0x2bc6, { 0x14 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc8ce, gbc.sp());
        EXPECT(0x2bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0338
        gbc.setState(0x88b8, 0xdf69, 0xfbc0, 0x5e32, 0x7bdb, 0xbce, 0x1, 0x0);
        gbc.writeMem(0x88b8, { 0x14 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdf69, gbc.sp());
        EXPECT(0x88b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x88b8));
        // 14 0339
        gbc.setState(0xb822, 0x3662, 0x1240, 0x392f, 0xc4e7, 0x237, 0x0, 0x1);
        gbc.writeMem(0xb822, { 0x14 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3662, gbc.sp());
        EXPECT(0xb823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb822));
        // 14 033A
        gbc.setState(0xdc3b, 0xe3a6, 0xc660, 0xa67b, 0x6609, 0x838, 0x0, 0x1);
        gbc.writeMem(0xdc3b, { 0x14 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe3a6, gbc.sp());
        EXPECT(0xdc3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdc3b));
        // 14 033B
        gbc.setState(0x76e9, 0xb2a1, 0xf180, 0x8541, 0xea34, 0x8d00, 0x1, 0x1);
        gbc.writeMem(0x76e9, { 0x14 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb2a1, gbc.sp());
        EXPECT(0x76ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 033C
        gbc.setState(0xb18b, 0x4d90, 0x8530, 0x850f, 0xa6d2, 0xf400, 0x1, 0x0);
        gbc.writeMem(0xb18b, { 0x14 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4d90, gbc.sp());
        EXPECT(0xb18c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb18b));
        // 14 033D
        gbc.setState(0x31f8, 0xdbcd, 0x90c0, 0x6d2a, 0xa80a, 0xb544, 0x0, 0x1);
        gbc.writeMem(0x31f8, { 0x14 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdbcd, gbc.sp());
        EXPECT(0x31f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 033E
        gbc.setState(0xa241, 0x7c06, 0xd600, 0x743a, 0x8eba, 0x3f6b, 0x0, 0x1);
        gbc.writeMem(0xa241, { 0x14 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7c06, gbc.sp());
        EXPECT(0xa242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa241));
        // 14 0340
        gbc.setState(0xe63, 0x4719, 0xa030, 0x4328, 0x7d74, 0xff79, 0x1, 0x0);
        gbc.writeMem(0xe63, { 0x14 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4719, gbc.sp());
        EXPECT(0xe64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0341
        gbc.setState(0x213b, 0x7589, 0x74f0, 0xee9e, 0xf6c2, 0x4b51, 0x1, 0x0);
        gbc.writeMem(0x213b, { 0x14 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7589, gbc.sp());
        EXPECT(0x213c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0342
        gbc.setState(0x7400, 0xacc6, 0xdfb0, 0x6a7a, 0x44d4, 0x59bb, 0x1, 0x0);
        gbc.writeMem(0x7400, { 0x14 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xacc6, gbc.sp());
        EXPECT(0x7401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0343
        gbc.setState(0x50ae, 0xf41d, 0xc430, 0xcbd7, 0xa468, 0xccc7, 0x1, 0x0);
        gbc.writeMem(0x50ae, { 0x14 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf41d, gbc.sp());
        EXPECT(0x50af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0344
        gbc.setState(0xc8a9, 0x79b7, 0x8ea0, 0xfa93, 0x8073, 0x419f, 0x0, 0x1);
        gbc.writeMem(0xc8a9, { 0x14 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x79b7, gbc.sp());
        EXPECT(0xc8aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc8a9));
        // 14 0345
        gbc.setState(0x6312, 0x96cc, 0x5fb0, 0xac49, 0x46b2, 0xe01e, 0x0, 0x0);
        gbc.writeMem(0x6312, { 0x14 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x96cc, gbc.sp());
        EXPECT(0x6313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0346
        gbc.setState(0x376f, 0xed0d, 0xc6d0, 0x7fcc, 0x43ca, 0xce08, 0x1, 0x1);
        gbc.writeMem(0x376f, { 0x14 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xed0d, gbc.sp());
        EXPECT(0x3770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0347
        gbc.setState(0xce8b, 0xbd35, 0xa40, 0x1e28, 0xfa30, 0x940f, 0x0, 0x1);
        gbc.writeMem(0xce8b, { 0x14 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbd35, gbc.sp());
        EXPECT(0xce8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xce8b));
        // 14 0348
        gbc.setState(0x3a5c, 0xe15c, 0x9ab0, 0xbbdf, 0x3f9f, 0x38f, 0x0, 0x0);
        gbc.writeMem(0x3a5c, { 0x14 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe15c, gbc.sp());
        EXPECT(0x3a5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0349
        gbc.setState(0xb380, 0xb4d7, 0xd00, 0x41de, 0xa852, 0x1daf, 0x0, 0x1);
        gbc.writeMem(0xb380, { 0x14 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb4d7, gbc.sp());
        EXPECT(0xb381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb380));
        // 14 034A
        gbc.setState(0xfd0, 0x7c20, 0x6b10, 0x3c47, 0xfe98, 0x77ce, 0x0, 0x0);
        gbc.writeMem(0xfd0, { 0x14 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7c20, gbc.sp());
        EXPECT(0xfd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 034B
        gbc.setState(0x3d10, 0xdf8b, 0x32a0, 0xfa9b, 0x233f, 0x563e, 0x1, 0x1);
        gbc.writeMem(0x3d10, { 0x14 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xdf8b, gbc.sp());
        EXPECT(0x3d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 034C
        gbc.setState(0x9a12, 0x7368, 0x6460, 0xfeb0, 0xffcd, 0x3e0b, 0x0, 0x0);
        gbc.writeMem(0x9a12, { 0x14 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7368, gbc.sp());
        EXPECT(0x9a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9a12));
        // 14 034E
        gbc.setState(0x4a71, 0x25a, 0x1fd0, 0x97e7, 0x1cf1, 0x4738, 0x1, 0x1);
        gbc.writeMem(0x4a71, { 0x14 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x25a, gbc.sp());
        EXPECT(0x4a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 034F
        gbc.setState(0x5243, 0x92a8, 0x9c60, 0xaaf0, 0xcf8d, 0x91f1, 0x0, 0x0);
        gbc.writeMem(0x5243, { 0x14 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x92a8, gbc.sp());
        EXPECT(0x5244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0350
        gbc.setState(0x84ad, 0x7f4c, 0x15c0, 0xdeff, 0x2568, 0x70c2, 0x0, 0x1);
        gbc.writeMem(0x84ad, { 0x14 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7f4c, gbc.sp());
        EXPECT(0x84ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x84ad));
        // 14 0351
        gbc.setState(0xbcb4, 0xb09e, 0x2e00, 0xf9b5, 0x6528, 0xbf0e, 0x0, 0x0);
        gbc.writeMem(0xbcb4, { 0x14 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb09e, gbc.sp());
        EXPECT(0xbcb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbcb4));
        // 14 0352
        gbc.setState(0x1f31, 0x750e, 0xb380, 0xe09c, 0x2fdf, 0x697d, 0x1, 0x1);
        gbc.writeMem(0x1f31, { 0x14 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x750e, gbc.sp());
        EXPECT(0x1f32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0353
        gbc.setState(0xeb36, 0xf148, 0xbf70, 0x855f, 0x9489, 0xd871, 0x0, 0x1);
        gbc.writeMem(0xeb36, { 0x14 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf148, gbc.sp());
        EXPECT(0xeb37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xeb36));
        // 14 0354
        gbc.setState(0xbe3a, 0xc65c, 0x6a00, 0xcbd6, 0x4470, 0x270a, 0x0, 0x0);
        gbc.writeMem(0xbe3a, { 0x14 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc65c, gbc.sp());
        EXPECT(0xbe3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbe3a));
        // 14 0355
        gbc.setState(0xbde2, 0x854a, 0xa820, 0x299c, 0xa088, 0x2bd9, 0x0, 0x1);
        gbc.writeMem(0xbde2, { 0x14 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x854a, gbc.sp());
        EXPECT(0xbde3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbde2));
        // 14 0356
        gbc.setState(0x5112, 0x356a, 0x96d0, 0xba0a, 0x3e2e, 0x7989, 0x1, 0x1);
        gbc.writeMem(0x5112, { 0x14 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x356a, gbc.sp());
        EXPECT(0x5113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0357
        gbc.setState(0xd793, 0xca95, 0x5f0, 0xfb61, 0xd88d, 0xf315, 0x1, 0x0);
        gbc.writeMem(0xd793, { 0x14 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xca95, gbc.sp());
        EXPECT(0xd794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd793));
        // 14 0358
        gbc.setState(0xa01f, 0xe06c, 0xca60, 0xfba9, 0x2526, 0xf4fc, 0x1, 0x1);
        gbc.writeMem(0xa01f, { 0x14 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe06c, gbc.sp());
        EXPECT(0xa020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa01f));
        // 14 0359
        gbc.setState(0x9633, 0x794a, 0x3210, 0x8d50, 0xac83, 0xc7ca, 0x0, 0x0);
        gbc.writeMem(0x9633, { 0x14 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x794a, gbc.sp());
        EXPECT(0x9634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9633));
        // 14 035A
        gbc.setState(0x6405, 0x68a1, 0x84a0, 0x9575, 0xc411, 0xc05e, 0x0, 0x1);
        gbc.writeMem(0x6405, { 0x14 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x68a1, gbc.sp());
        EXPECT(0x6406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 035B
        gbc.setState(0x8c7e, 0x2b29, 0x3490, 0xcda9, 0x405f, 0xb201, 0x0, 0x0);
        gbc.writeMem(0x8c7e, { 0x14 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2b29, gbc.sp());
        EXPECT(0x8c7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8c7e));
        // 14 035C
        gbc.setState(0x3506, 0x4748, 0x44b0, 0xb80f, 0xa421, 0x68b4, 0x1, 0x0);
        gbc.writeMem(0x3506, { 0x14 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4748, gbc.sp());
        EXPECT(0x3507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 035D
        gbc.setState(0x8a88, 0xd352, 0x3b00, 0x8e41, 0x6622, 0x30ea, 0x1, 0x1);
        gbc.writeMem(0x8a88, { 0x14 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd352, gbc.sp());
        EXPECT(0x8a89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8a88));
        // 14 035E
        gbc.setState(0x2b20, 0xe494, 0x1170, 0x77e5, 0x7d63, 0x8a74, 0x0, 0x1);
        gbc.writeMem(0x2b20, { 0x14 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe494, gbc.sp());
        EXPECT(0x2b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 035F
        gbc.setState(0xc0b3, 0xe1b0, 0xf4e0, 0x4a6b, 0x245d, 0xe219, 0x0, 0x0);
        gbc.writeMem(0xc0b3, { 0x14 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe1b0, gbc.sp());
        EXPECT(0xc0b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc0b3));
        // 14 0360
        gbc.setState(0x669d, 0x5127, 0xe620, 0x8b72, 0xef79, 0x3cfc, 0x1, 0x0);
        gbc.writeMem(0x669d, { 0x14 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5127, gbc.sp());
        EXPECT(0x669e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0361
        gbc.setState(0x2eb, 0x2193, 0x5c60, 0x8ad5, 0x87b7, 0x4c22, 0x0, 0x1);
        gbc.writeMem(0x2eb, { 0x14 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2193, gbc.sp());
        EXPECT(0x2ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0362
        gbc.setState(0xa70c, 0xe5aa, 0xae10, 0xf8c8, 0x6151, 0x8ecf, 0x0, 0x0);
        gbc.writeMem(0xa70c, { 0x14 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe5aa, gbc.sp());
        EXPECT(0xa70d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa70c));
        // 14 0363
        gbc.setState(0xbc10, 0xe16f, 0xfa10, 0xffe8, 0xc599, 0x5ec7, 0x0, 0x0);
        gbc.writeMem(0xbc10, { 0x14 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe16f, gbc.sp());
        EXPECT(0xbc11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbc10));
        // 14 0364
        gbc.setState(0xc410, 0xbce3, 0x7900, 0xcb21, 0x97de, 0x87e0, 0x0, 0x1);
        gbc.writeMem(0xc410, { 0x14 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbce3, gbc.sp());
        EXPECT(0xc411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc410));
        // 14 0365
        gbc.setState(0x271a, 0x98ec, 0xb950, 0x75a5, 0x9af6, 0xf871, 0x0, 0x0);
        gbc.writeMem(0x271a, { 0x14 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x98ec, gbc.sp());
        EXPECT(0x271b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0366
        gbc.setState(0x9868, 0x52ba, 0x8b30, 0xef3d, 0x4e70, 0x6d34, 0x1, 0x0);
        gbc.writeMem(0x9868, { 0x14 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x52ba, gbc.sp());
        EXPECT(0x9869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9868));
        // 14 0367
        gbc.setState(0x7486, 0xaa28, 0x7bb0, 0xdfcb, 0x9d22, 0x43ba, 0x0, 0x0);
        gbc.writeMem(0x7486, { 0x14 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xaa28, gbc.sp());
        EXPECT(0x7487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0368
        gbc.setState(0x4151, 0xac3b, 0x7510, 0x9c82, 0x9b62, 0x1fc4, 0x1, 0x0);
        gbc.writeMem(0x4151, { 0x14 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xac3b, gbc.sp());
        EXPECT(0x4152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0369
        gbc.setState(0x43fd, 0x297a, 0xe7a0, 0x52a0, 0x6aee, 0xc400, 0x0, 0x0);
        gbc.writeMem(0x43fd, { 0x14 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x297a, gbc.sp());
        EXPECT(0x43fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 036A
        gbc.setState(0x3891, 0x58e1, 0x4a40, 0x1ed2, 0xa593, 0x4230, 0x0, 0x0);
        gbc.writeMem(0x3891, { 0x14 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x58e1, gbc.sp());
        EXPECT(0x3892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 036B
        gbc.setState(0xe6e8, 0xc395, 0x29d0, 0x2a62, 0x6c70, 0xefe5, 0x0, 0x1);
        gbc.writeMem(0xe6e8, { 0x14 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc395, gbc.sp());
        EXPECT(0xe6e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe6e8));
        // 14 036C
        gbc.setState(0x9ad2, 0x8dfa, 0x1c0, 0xbf99, 0x8286, 0xf561, 0x0, 0x0);
        gbc.writeMem(0x9ad2, { 0x14 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8dfa, gbc.sp());
        EXPECT(0x9ad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9ad2));
        // 14 036D
        gbc.setState(0xbc5b, 0x1cfa, 0x44a0, 0x22fe, 0x9dad, 0xc03d, 0x0, 0x0);
        gbc.writeMem(0xbc5b, { 0x14 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1cfa, gbc.sp());
        EXPECT(0xbc5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbc5b));
        // 14 036E
        gbc.setState(0x5aab, 0x885, 0x5650, 0xa487, 0x3429, 0x77a3, 0x1, 0x0);
        gbc.writeMem(0x5aab, { 0x14 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x885, gbc.sp());
        EXPECT(0x5aac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 036F
        gbc.setState(0xbac4, 0x8a47, 0x41b0, 0x1d34, 0x81d7, 0xc3ca, 0x1, 0x1);
        gbc.writeMem(0xbac4, { 0x14 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8a47, gbc.sp());
        EXPECT(0xbac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbac4));
        // 14 0370
        gbc.setState(0x2282, 0xd317, 0xff80, 0x777e, 0x9421, 0x82cf, 0x0, 0x0);
        gbc.writeMem(0x2282, { 0x14 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd317, gbc.sp());
        EXPECT(0x2283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0371
        gbc.setState(0xb9b3, 0x497, 0x4dd0, 0x8841, 0xb8b9, 0x661f, 0x1, 0x1);
        gbc.writeMem(0xb9b3, { 0x14 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x497, gbc.sp());
        EXPECT(0xb9b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb9b3));
        // 14 0372
        gbc.setState(0x1764, 0x764f, 0x4e10, 0x1eec, 0x8eac, 0x2229, 0x1, 0x1);
        gbc.writeMem(0x1764, { 0x14 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x764f, gbc.sp());
        EXPECT(0x1765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0373
        gbc.setState(0x49f, 0xfa7e, 0x1c90, 0xb453, 0xfe0, 0x4fe0, 0x0, 0x0);
        gbc.writeMem(0x49f, { 0x14 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfa7e, gbc.sp());
        EXPECT(0x4a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0374
        gbc.setState(0x7159, 0xde6b, 0xf270, 0x75d9, 0x7826, 0x8f0f, 0x0, 0x0);
        gbc.writeMem(0x7159, { 0x14 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xde6b, gbc.sp());
        EXPECT(0x715a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0375
        gbc.setState(0x347d, 0x8a96, 0xd710, 0x1ffe, 0xed29, 0xc65e, 0x1, 0x0);
        gbc.writeMem(0x347d, { 0x14 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8a96, gbc.sp());
        EXPECT(0x347e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0376
        gbc.setState(0x5bfc, 0xeaf3, 0x5440, 0xef3b, 0xeded, 0xe1e4, 0x0, 0x1);
        gbc.writeMem(0x5bfc, { 0x14 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xeaf3, gbc.sp());
        EXPECT(0x5bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0377
        gbc.setState(0x7c7, 0xfe32, 0x7a60, 0xbed1, 0x4502, 0xd59f, 0x1, 0x1);
        gbc.writeMem(0x7c7, { 0x14 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfe32, gbc.sp());
        EXPECT(0x7c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0378
        gbc.setState(0xc5c, 0xb14, 0x6860, 0x6c26, 0xc036, 0x7efb, 0x1, 0x1);
        gbc.writeMem(0xc5c, { 0x14 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb14, gbc.sp());
        EXPECT(0xc5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0379
        gbc.setState(0x5810, 0x7c27, 0xa0a0, 0xdb18, 0xd71d, 0x6e21, 0x1, 0x1);
        gbc.writeMem(0x5810, { 0x14 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7c27, gbc.sp());
        EXPECT(0x5811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 037A
        gbc.setState(0x2d40, 0x4a6, 0xa140, 0xe25b, 0x23df, 0x6314, 0x0, 0x0);
        gbc.writeMem(0x2d40, { 0x14 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4a6, gbc.sp());
        EXPECT(0x2d41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 037B
        gbc.setState(0xd33a, 0x5ddd, 0xc660, 0xabcc, 0x2f58, 0xaa1d, 0x0, 0x1);
        gbc.writeMem(0xd33a, { 0x14 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5ddd, gbc.sp());
        EXPECT(0xd33b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd33a));
        // 14 037C
        gbc.setState(0x8c71, 0x1f1, 0xab60, 0x34e2, 0x934, 0xd7ae, 0x1, 0x0);
        gbc.writeMem(0x8c71, { 0x14 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1f1, gbc.sp());
        EXPECT(0x8c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8c71));
        // 14 037D
        gbc.setState(0x1823, 0xdd, 0x46d0, 0x925d, 0xf8f3, 0xfd92, 0x1, 0x1);
        gbc.writeMem(0x1823, { 0x14 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xdd, gbc.sp());
        EXPECT(0x1824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 037E
        gbc.setState(0xb1d4, 0x4415, 0xba50, 0x27cd, 0xb8c9, 0xab1a, 0x1, 0x1);
        gbc.writeMem(0xb1d4, { 0x14 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4415, gbc.sp());
        EXPECT(0xb1d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb1d4));
        // 14 0380
        gbc.setState(0x5669, 0x4fd9, 0x5a90, 0x6a08, 0xd9bb, 0x1e53, 0x0, 0x1);
        gbc.writeMem(0x5669, { 0x14 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4fd9, gbc.sp());
        EXPECT(0x566a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0381
        gbc.setState(0x36eb, 0x29c4, 0x5ab0, 0xd842, 0x9579, 0x43b7, 0x1, 0x0);
        gbc.writeMem(0x36eb, { 0x14 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x29c4, gbc.sp());
        EXPECT(0x36ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0382
        gbc.setState(0xb046, 0x7d36, 0x5fa0, 0x71d4, 0xe198, 0xf56e, 0x0, 0x1);
        gbc.writeMem(0xb046, { 0x14 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7d36, gbc.sp());
        EXPECT(0xb047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb046));
        // 14 0383
        gbc.setState(0x2245, 0x36f1, 0x9ac0, 0x8eca, 0xa20, 0x201a, 0x0, 0x1);
        gbc.writeMem(0x2245, { 0x14 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x36f1, gbc.sp());
        EXPECT(0x2246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0384
        gbc.setState(0x827d, 0xc9f7, 0xc5b0, 0x4296, 0x1608, 0x444c, 0x0, 0x1);
        gbc.writeMem(0x827d, { 0x14 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc9f7, gbc.sp());
        EXPECT(0x827e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x827d));
        // 14 0385
        gbc.setState(0xc93, 0x18c7, 0x26d0, 0xd862, 0xf90f, 0x1d1d, 0x1, 0x0);
        gbc.writeMem(0xc93, { 0x14 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x18c7, gbc.sp());
        EXPECT(0xc94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0386
        gbc.setState(0x42b8, 0x8dbc, 0xb720, 0x6b68, 0xb626, 0xafaa, 0x1, 0x1);
        gbc.writeMem(0x42b8, { 0x14 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8dbc, gbc.sp());
        EXPECT(0x42b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0387
        gbc.setState(0x4509, 0x39b7, 0xbc10, 0xf951, 0xf945, 0x16d1, 0x1, 0x1);
        gbc.writeMem(0x4509, { 0x14 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x39b7, gbc.sp());
        EXPECT(0x450a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 0388
        gbc.setState(0x8733, 0xdc21, 0x2a50, 0x7d7d, 0x4997, 0xc8dc, 0x1, 0x1);
        gbc.writeMem(0x8733, { 0x14 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xdc21, gbc.sp());
        EXPECT(0x8734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8733));
        // 14 0389
        gbc.setState(0xb801, 0xd56d, 0x1690, 0x4acf, 0x76d4, 0x8835, 0x1, 0x1);
        gbc.writeMem(0xb801, { 0x14 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd56d, gbc.sp());
        EXPECT(0xb802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb801));
        // 14 038A
        gbc.setState(0x2b2b, 0x5823, 0xda70, 0x3b20, 0xafb7, 0x8a5e, 0x0, 0x0);
        gbc.writeMem(0x2b2b, { 0x14 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5823, gbc.sp());
        EXPECT(0x2b2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 038B
        gbc.setState(0xbc32, 0x14, 0xe6d0, 0x72aa, 0x15d, 0x6f59, 0x1, 0x0);
        gbc.writeMem(0xbc32, { 0x14 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x14, gbc.sp());
        EXPECT(0xbc33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbc32));
        // 14 038D
        gbc.setState(0xb553, 0x8203, 0xd2d0, 0xefb3, 0x3277, 0x27f, 0x1, 0x0);
        gbc.writeMem(0xb553, { 0x14 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8203, gbc.sp());
        EXPECT(0xb554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb553));
        // 14 038E
        gbc.setState(0x74f5, 0x1476, 0x9810, 0xde38, 0xa9b3, 0x93c, 0x0, 0x0);
        gbc.writeMem(0x74f5, { 0x14 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1476, gbc.sp());
        EXPECT(0x74f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 038F
        gbc.setState(0x975d, 0xb2bd, 0x9860, 0x8661, 0x3e85, 0x6d12, 0x1, 0x0);
        gbc.writeMem(0x975d, { 0x14 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb2bd, gbc.sp());
        EXPECT(0x975e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x975d));
        // 14 0390
        gbc.setState(0xce03, 0xeccd, 0xb5e0, 0xb8c7, 0xc384, 0xf176, 0x0, 0x1);
        gbc.writeMem(0xce03, { 0x14 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xeccd, gbc.sp());
        EXPECT(0xce04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xce03));
        // 14 0391
        gbc.setState(0xdf8f, 0xc392, 0xdf40, 0x8c23, 0x9e86, 0x84c1, 0x1, 0x0);
        gbc.writeMem(0xdf8f, { 0x14 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc392, gbc.sp());
        EXPECT(0xdf90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdf8f));
        // 14 0392
        gbc.setState(0xe03c, 0x1adb, 0x8f80, 0x2ce4, 0x3c89, 0xd99e, 0x1, 0x1);
        gbc.writeMem(0xe03c, { 0x14 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1adb, gbc.sp());
        EXPECT(0xe03d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe03c));
        // 14 0393
        gbc.setState(0x3f9e, 0x85ac, 0x5540, 0x84fa, 0x5336, 0x69f3, 0x1, 0x0);
        gbc.writeMem(0x3f9e, { 0x14 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x85ac, gbc.sp());
        EXPECT(0x3f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0395
        gbc.setState(0x5769, 0xee92, 0xbf80, 0x894e, 0xeb21, 0x7ff5, 0x1, 0x0);
        gbc.writeMem(0x5769, { 0x14 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xee92, gbc.sp());
        EXPECT(0x576a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0396
        gbc.setState(0x9b16, 0x4999, 0x9f40, 0xf3c9, 0x6f12, 0xecd4, 0x0, 0x0);
        gbc.writeMem(0x9b16, { 0x14 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4999, gbc.sp());
        EXPECT(0x9b17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9b16));
        // 14 0397
        gbc.setState(0xbcf5, 0x3a5f, 0xf800, 0x3888, 0x25b8, 0xd804, 0x1, 0x0);
        gbc.writeMem(0xbcf5, { 0x14 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3a5f, gbc.sp());
        EXPECT(0xbcf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbcf5));
        // 14 0398
        gbc.setState(0x3d67, 0x10a8, 0xc4a0, 0xf8d4, 0x66b0, 0x3e77, 0x1, 0x1);
        gbc.writeMem(0x3d67, { 0x14 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x10a8, gbc.sp());
        EXPECT(0x3d68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 0399
        gbc.setState(0x1f36, 0x23be, 0xd690, 0x236d, 0x5598, 0x8c8d, 0x1, 0x0);
        gbc.writeMem(0x1f36, { 0x14 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x23be, gbc.sp());
        EXPECT(0x1f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 039A
        gbc.setState(0xa8ad, 0x185e, 0xd290, 0xb290, 0x92e5, 0x46c4, 0x1, 0x1);
        gbc.writeMem(0xa8ad, { 0x14 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x185e, gbc.sp());
        EXPECT(0xa8ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa8ad));
        // 14 039B
        gbc.setState(0x8855, 0xbec0, 0xdab0, 0x1412, 0x705c, 0xaf17, 0x0, 0x1);
        gbc.writeMem(0x8855, { 0x14 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbec0, gbc.sp());
        EXPECT(0x8856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8855));
        // 14 039C
        gbc.setState(0x5d5b, 0x8c80, 0xbf20, 0x4cdd, 0xddc8, 0x9506, 0x1, 0x0);
        gbc.writeMem(0x5d5b, { 0x14 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8c80, gbc.sp());
        EXPECT(0x5d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 039D
        gbc.setState(0x70bc, 0xfa7c, 0xbfe0, 0x99a2, 0x8a74, 0x5caa, 0x1, 0x1);
        gbc.writeMem(0x70bc, { 0x14 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfa7c, gbc.sp());
        EXPECT(0x70bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 039E
        gbc.setState(0xd4e0, 0x656e, 0x1000, 0x2911, 0x98dd, 0xae0b, 0x1, 0x1);
        gbc.writeMem(0xd4e0, { 0x14 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x656e, gbc.sp());
        EXPECT(0xd4e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd4e0));
        // 14 039F
        gbc.setState(0x111b, 0x3aaa, 0x82d0, 0x3eeb, 0x693a, 0xfbad, 0x1, 0x1);
        gbc.writeMem(0x111b, { 0x14 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3aaa, gbc.sp());
        EXPECT(0x111c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 03A0
        gbc.setState(0xbdf4, 0xa2f6, 0x8210, 0x8831, 0x6f54, 0xb3fc, 0x0, 0x1);
        gbc.writeMem(0xbdf4, { 0x14 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa2f6, gbc.sp());
        EXPECT(0xbdf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbdf4));
        // 14 03A1
        gbc.setState(0xc29d, 0x2ecf, 0x5f40, 0x5644, 0x999e, 0x4522, 0x1, 0x0);
        gbc.writeMem(0xc29d, { 0x14 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2ecf, gbc.sp());
        EXPECT(0xc29e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc29d));
        // 14 03A2
        gbc.setState(0x114f, 0x8e77, 0x9480, 0xf55d, 0x770e, 0xfc01, 0x1, 0x1);
        gbc.writeMem(0x114f, { 0x14 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8e77, gbc.sp());
        EXPECT(0x1150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 03A3
        gbc.setState(0x9b14, 0x114c, 0x4810, 0xe39f, 0x21fe, 0x148a, 0x0, 0x1);
        gbc.writeMem(0x9b14, { 0x14 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x114c, gbc.sp());
        EXPECT(0x9b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9b14));
        // 14 03A4
        gbc.setState(0xdad, 0x8a3f, 0x3cf0, 0xf950, 0xbdfc, 0xd941, 0x0, 0x1);
        gbc.writeMem(0xdad, { 0x14 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8a3f, gbc.sp());
        EXPECT(0xdae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 03A5
        gbc.setState(0x4ed8, 0xf64d, 0x8110, 0x7d9f, 0x78e9, 0xa483, 0x0, 0x0);
        gbc.writeMem(0x4ed8, { 0x14 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf64d, gbc.sp());
        EXPECT(0x4ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 03A7
        gbc.setState(0x2d48, 0xa700, 0x75b0, 0x32fc, 0x4172, 0x6b63, 0x0, 0x1);
        gbc.writeMem(0x2d48, { 0x14 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa700, gbc.sp());
        EXPECT(0x2d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 03A8
        gbc.setState(0xeee1, 0x9aba, 0x60b0, 0x225, 0xe3c6, 0x33d1, 0x1, 0x1);
        gbc.writeMem(0xeee1, { 0x14 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9aba, gbc.sp());
        EXPECT(0xeee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xeee1));
        // 14 03A9
        gbc.setState(0xe884, 0xae6b, 0x7340, 0x977f, 0xa41a, 0xbc67, 0x1, 0x0);
        gbc.writeMem(0xe884, { 0x14 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xae6b, gbc.sp());
        EXPECT(0xe885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe884));
        // 14 03AA
        gbc.setState(0xb32e, 0x31d2, 0xf840, 0x5042, 0x6c9a, 0x7b02, 0x1, 0x1);
        gbc.writeMem(0xb32e, { 0x14 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x31d2, gbc.sp());
        EXPECT(0xb32f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb32e));
        // 14 03AC
        gbc.setState(0x21d1, 0x8bb9, 0x2470, 0x4301, 0xc2df, 0x2a8a, 0x0, 0x0);
        gbc.writeMem(0x21d1, { 0x14 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8bb9, gbc.sp());
        EXPECT(0x21d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 03AD
        gbc.setState(0xb5ed, 0x9d6b, 0xda40, 0x33f3, 0xb272, 0x1125, 0x1, 0x0);
        gbc.writeMem(0xb5ed, { 0x14 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9d6b, gbc.sp());
        EXPECT(0xb5ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb5ed));
        // 14 03AE
        gbc.setState(0xa8d4, 0x56e0, 0x2d0, 0xac20, 0x5747, 0x6ee1, 0x0, 0x1);
        gbc.writeMem(0xa8d4, { 0x14 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x56e0, gbc.sp());
        EXPECT(0xa8d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa8d4));
        // 14 03AF
        gbc.setState(0x14be, 0x88ff, 0xeb60, 0x1e03, 0xc55a, 0x5470, 0x1, 0x1);
        gbc.writeMem(0x14be, { 0x14 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x88ff, gbc.sp());
        EXPECT(0x14bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 03B0
        gbc.setState(0xd0c0, 0x4393, 0x41b0, 0x3039, 0x30da, 0x9203, 0x0, 0x0);
        gbc.writeMem(0xd0c0, { 0x14 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4393, gbc.sp());
        EXPECT(0xd0c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd0c0));
        // 14 03B1
        gbc.setState(0x6b0, 0xb75a, 0x5310, 0x1f93, 0x686a, 0xfc6c, 0x0, 0x1);
        gbc.writeMem(0x6b0, { 0x14 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb75a, gbc.sp());
        EXPECT(0x6b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 03B2
        gbc.setState(0x3848, 0xe6f0, 0xdb20, 0xc342, 0x1fc9, 0x7c63, 0x0, 0x0);
        gbc.writeMem(0x3848, { 0x14 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe6f0, gbc.sp());
        EXPECT(0x3849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 03B3
        gbc.setState(0x4c79, 0x61dc, 0xcb40, 0x3024, 0x28d3, 0xf450, 0x1, 0x1);
        gbc.writeMem(0x4c79, { 0x14 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x61dc, gbc.sp());
        EXPECT(0x4c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 03B4
        gbc.setState(0x1f65, 0x80c, 0x10b0, 0xc878, 0x7ac8, 0xf066, 0x0, 0x0);
        gbc.writeMem(0x1f65, { 0x14 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x80c, gbc.sp());
        EXPECT(0x1f66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 03B6
        gbc.setState(0xaec, 0x6579, 0x3bb0, 0xcc67, 0xc6c4, 0x4698, 0x1, 0x1);
        gbc.writeMem(0xaec, { 0x14 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6579, gbc.sp());
        EXPECT(0xaed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 03B7
        gbc.setState(0x5db0, 0xc90f, 0xec10, 0xa1f7, 0x38b1, 0xb01f, 0x0, 0x0);
        gbc.writeMem(0x5db0, { 0x14 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc90f, gbc.sp());
        EXPECT(0x5db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 03B9
        gbc.setState(0x9eca, 0x9536, 0x9290, 0xb03d, 0x8e65, 0xde11, 0x1, 0x0);
        gbc.writeMem(0x9eca, { 0x14 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9536, gbc.sp());
        EXPECT(0x9ecb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9eca));
        // 14 03BA
        gbc.setState(0x2873, 0x6a64, 0x2ae0, 0x40d4, 0xcacf, 0x1f11, 0x1, 0x1);
        gbc.writeMem(0x2873, { 0x14 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6a64, gbc.sp());
        EXPECT(0x2874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 03BB
        gbc.setState(0xe3f1, 0xcda5, 0xfb10, 0xac3a, 0xdae3, 0xaf44, 0x1, 0x1);
        gbc.writeMem(0xe3f1, { 0x14 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcda5, gbc.sp());
        EXPECT(0xe3f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe3f1));
        // 14 03BC
        gbc.setState(0x18ef, 0xa8fb, 0xcaa0, 0x32e3, 0xca94, 0x36c5, 0x0, 0x0);
        gbc.writeMem(0x18ef, { 0x14 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa8fb, gbc.sp());
        EXPECT(0x18f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 03BD
        gbc.setState(0x419d, 0xb45e, 0x3110, 0x9a1f, 0xf303, 0xd3eb, 0x0, 0x0);
        gbc.writeMem(0x419d, { 0x14 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb45e, gbc.sp());
        EXPECT(0x419e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 03BE
        gbc.setState(0xefc6, 0x7d07, 0xffe0, 0x11b, 0x97f8, 0x4279, 0x0, 0x0);
        gbc.writeMem(0xefc6, { 0x14 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7d07, gbc.sp());
        EXPECT(0xefc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xefc6));
        // 14 03BF
        gbc.setState(0x2ead, 0xcf1b, 0x380, 0x2009, 0xf0d, 0xc3ad, 0x1, 0x0);
        gbc.writeMem(0x2ead, { 0x14 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xcf1b, gbc.sp());
        EXPECT(0x2eae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 03C0
        gbc.setState(0xc91f, 0x76ce, 0x4ed0, 0x1d58, 0xd192, 0x4cfc, 0x0, 0x0);
        gbc.writeMem(0xc91f, { 0x14 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x76ce, gbc.sp());
        EXPECT(0xc920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc91f));
        // 14 03C1
        gbc.setState(0xa323, 0x1b02, 0x9190, 0x42c3, 0xb832, 0x5421, 0x1, 0x1);
        gbc.writeMem(0xa323, { 0x14 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1b02, gbc.sp());
        EXPECT(0xa324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa323));
        // 14 03C2
        gbc.setState(0x8e85, 0xbaac, 0x6da0, 0x8625, 0x8fae, 0x1dc0, 0x1, 0x0);
        gbc.writeMem(0x8e85, { 0x14 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbaac, gbc.sp());
        EXPECT(0x8e86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8e85));
        // 14 03C3
        gbc.setState(0x8ddc, 0xe904, 0xe90, 0x5e83, 0x1bb5, 0x2065, 0x1, 0x0);
        gbc.writeMem(0x8ddc, { 0x14 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe904, gbc.sp());
        EXPECT(0x8ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8ddc));
        // 14 03C4
        gbc.setState(0x6f1e, 0x2195, 0x4ad0, 0xdaef, 0x5eec, 0xfdc4, 0x1, 0x1);
        gbc.writeMem(0x6f1e, { 0x14 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2195, gbc.sp());
        EXPECT(0x6f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 03C5
        gbc.setState(0x2588, 0x9c46, 0x23e0, 0xc000, 0x2f08, 0x4bb9, 0x0, 0x1);
        gbc.writeMem(0x2588, { 0x14 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9c46, gbc.sp());
        EXPECT(0x2589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 03C6
        gbc.setState(0x3b5f, 0x15b2, 0x7440, 0x6f1c, 0xdf2f, 0x7af6, 0x1, 0x1);
        gbc.writeMem(0x3b5f, { 0x14 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x15b2, gbc.sp());
        EXPECT(0x3b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 03C7
        gbc.setState(0x3a2d, 0xe970, 0xbfd0, 0xc88a, 0x7599, 0x3cff, 0x0, 0x1);
        gbc.writeMem(0x3a2d, { 0x14 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe970, gbc.sp());
        EXPECT(0x3a2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 03C8
        gbc.setState(0xb3c4, 0x388c, 0x1d30, 0xbce6, 0xc3ed, 0xbc24, 0x1, 0x0);
        gbc.writeMem(0xb3c4, { 0x14 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x388c, gbc.sp());
        EXPECT(0xb3c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb3c4));
        // 14 03C9
        gbc.setState(0x9a17, 0x44cc, 0xbee0, 0x71d9, 0x98f4, 0xdc7e, 0x0, 0x0);
        gbc.writeMem(0x9a17, { 0x14 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x44cc, gbc.sp());
        EXPECT(0x9a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9a17));
        // 14 03CA
        gbc.setState(0x6373, 0x98bd, 0xecd0, 0x33eb, 0xcde4, 0x6de3, 0x0, 0x0);
        gbc.writeMem(0x6373, { 0x14 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x98bd, gbc.sp());
        EXPECT(0x6374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 03CB
        gbc.setState(0xb415, 0x1ff0, 0x77e0, 0x906e, 0xc281, 0x9151, 0x0, 0x1);
        gbc.writeMem(0xb415, { 0x14 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1ff0, gbc.sp());
        EXPECT(0xb416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb415));
        // 14 03CC
        gbc.setState(0x6e9c, 0x4960, 0x3900, 0x6c8c, 0x7894, 0x446d, 0x1, 0x0);
        gbc.writeMem(0x6e9c, { 0x14 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4960, gbc.sp());
        EXPECT(0x6e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 03CD
        gbc.setState(0x71e3, 0x6bff, 0x2c70, 0x74fa, 0x4b68, 0x3d7c, 0x1, 0x0);
        gbc.writeMem(0x71e3, { 0x14 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6bff, gbc.sp());
        EXPECT(0x71e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 03CE
        gbc.setState(0x49d3, 0x2808, 0x9bb0, 0x51f7, 0xa841, 0xf450, 0x1, 0x1);
        gbc.writeMem(0x49d3, { 0x14 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2808, gbc.sp());
        EXPECT(0x49d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 03CF
        gbc.setState(0x14bc, 0xb085, 0x11d0, 0xc4a, 0x5a19, 0xebe0, 0x1, 0x1);
        gbc.writeMem(0x14bc, { 0x14 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb085, gbc.sp());
        EXPECT(0x14bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 03D1
        gbc.setState(0x1b94, 0x8334, 0xbc80, 0xf177, 0x18bf, 0x4d74, 0x1, 0x1);
        gbc.writeMem(0x1b94, { 0x14 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8334, gbc.sp());
        EXPECT(0x1b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 03D2
        gbc.setState(0x1946, 0x9dcd, 0xac90, 0x75b2, 0x250c, 0x43ea, 0x0, 0x1);
        gbc.writeMem(0x1946, { 0x14 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9dcd, gbc.sp());
        EXPECT(0x1947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 03D3
        gbc.setState(0x367f, 0xeb80, 0x3580, 0x524e, 0x1e78, 0xe2a2, 0x0, 0x1);
        gbc.writeMem(0x367f, { 0x14 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xeb80, gbc.sp());
        EXPECT(0x3680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 03D4
        gbc.setState(0x985e, 0xe9d, 0x9ae0, 0x8ce4, 0x3518, 0xb0c9, 0x1, 0x1);
        gbc.writeMem(0x985e, { 0x14 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe9d, gbc.sp());
        EXPECT(0x985f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x985e));
        // 14 03D5
        gbc.setState(0x535c, 0x3fe0, 0xe360, 0x3740, 0xa972, 0xa175, 0x0, 0x1);
        gbc.writeMem(0x535c, { 0x14 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3fe0, gbc.sp());
        EXPECT(0x535d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 03D6
        gbc.setState(0x205c, 0x7e61, 0x9340, 0x1b2e, 0x5081, 0xc253, 0x1, 0x1);
        gbc.writeMem(0x205c, { 0x14 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7e61, gbc.sp());
        EXPECT(0x205d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 03D7
        gbc.setState(0xde1c, 0x5f46, 0x4070, 0x7aee, 0xf3d, 0xfdd0, 0x0, 0x1);
        gbc.writeMem(0xde1c, { 0x14 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5f46, gbc.sp());
        EXPECT(0xde1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xde1c));
        // 14 03D8
        gbc.setState(0x2403, 0x38da, 0x3710, 0xf80f, 0x40b9, 0xfa09, 0x0, 0x0);
        gbc.writeMem(0x2403, { 0x14 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x38da, gbc.sp());
        EXPECT(0x2404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 03D9
        gbc.setState(0x66cb, 0x206f, 0x4a70, 0xcd39, 0xe5b5, 0x19a1, 0x1, 0x0);
        gbc.writeMem(0x66cb, { 0x14 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x206f, gbc.sp());
        EXPECT(0x66cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 03DA
        gbc.setState(0x2188, 0xc7f5, 0xa760, 0x4e46, 0x22cd, 0x453d, 0x1, 0x1);
        gbc.writeMem(0x2188, { 0x14 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc7f5, gbc.sp());
        EXPECT(0x2189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 03DB
        gbc.setState(0x4405, 0x7d1b, 0xab20, 0x1bb1, 0xcbcf, 0x95b3, 0x1, 0x1);
        gbc.writeMem(0x4405, { 0x14 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7d1b, gbc.sp());
        EXPECT(0x4406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 03DC
        gbc.setState(0xd684, 0xfe23, 0x16c0, 0xb357, 0x6815, 0xae12, 0x1, 0x1);
        gbc.writeMem(0xd684, { 0x14 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xfe23, gbc.sp());
        EXPECT(0xd685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd684));
        // 14 03DD
        gbc.setState(0x9b1f, 0x538c, 0x7f30, 0x9a8a, 0xb2c8, 0x869e, 0x0, 0x1);
        gbc.writeMem(0x9b1f, { 0x14 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x538c, gbc.sp());
        EXPECT(0x9b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9b1f));
        // 14 03DE
        gbc.setState(0x7b97, 0x5357, 0x5b0, 0xca8b, 0x7c9a, 0xea2e, 0x0, 0x1);
        gbc.writeMem(0x7b97, { 0x14 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5357, gbc.sp());
        EXPECT(0x7b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 03DF
        gbc.setState(0x1d6e, 0x258d, 0xfd40, 0x8303, 0x7d18, 0x199b, 0x0, 0x1);
        gbc.writeMem(0x1d6e, { 0x14 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x258d, gbc.sp());
        EXPECT(0x1d6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 03E0
        gbc.setState(0x5b94, 0x3bff, 0x4aa0, 0x795b, 0x83ad, 0xfd0e, 0x1, 0x0);
        gbc.writeMem(0x5b94, { 0x14 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3bff, gbc.sp());
        EXPECT(0x5b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 03E1
        gbc.setState(0x6f44, 0xb30e, 0xb30, 0xf165, 0x1be1, 0xfc12, 0x1, 0x1);
        gbc.writeMem(0x6f44, { 0x14 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb30e, gbc.sp());
        EXPECT(0x6f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 14 03E2
        gbc.setState(0xd599, 0x2351, 0xef10, 0x16af, 0x2be5, 0x7431, 0x1, 0x1);
        gbc.writeMem(0xd599, { 0x14 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2351, gbc.sp());
        EXPECT(0xd59a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd599));
        // 14 03E3
        gbc.setState(0xa7e8, 0x22a7, 0x3310, 0x5d08, 0xa992, 0xb13b, 0x0, 0x1);
        gbc.writeMem(0xa7e8, { 0x14 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x22a7, gbc.sp());
        EXPECT(0xa7e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa7e8));
        // 14 03E4
        gbc.setState(0xd8ff, 0x18b, 0x8620, 0x94cd, 0xbcf3, 0x47b8, 0x0, 0x0);
        gbc.writeMem(0xd8ff, { 0x14 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x18b, gbc.sp());
        EXPECT(0xd900, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd8ff));
        // 14 03E5
        gbc.setState(0x8055, 0x15a4, 0xb840, 0x3e7f, 0xb53a, 0xfea3, 0x0, 0x1);
        gbc.writeMem(0x8055, { 0x14 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x15a4, gbc.sp());
        EXPECT(0x8056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8055));
        // 14 03E6
        gbc.setState(0x75ed, 0x2951, 0x4fc0, 0x3254, 0xa8a, 0x5438, 0x1, 0x1);
        gbc.writeMem(0x75ed, { 0x14 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2951, gbc.sp());
        EXPECT(0x75ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 14 03E7
        gbc.setState(0x905d, 0xa336, 0x2fd0, 0x95f2, 0x9f5, 0x6cbc, 0x0, 0x1);
        gbc.writeMem(0x905d, { 0x14 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa336, gbc.sp());
        EXPECT(0x905e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x905d));
    }
