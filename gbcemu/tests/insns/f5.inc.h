    TEST(gbcemu, opcode_f5) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // F5 0000
        gbc.setState(0x6a0e, 0xc9d0, 0x1850, 0xd220, 0x9968, 0x99eb, 0x1, 0x1);
        gbc.writeMem(0x6a0e, { 0xf5 });
        gbc.writeMem(0xc9ce, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc9ce, gbc.sp());
        EXPECT(0x6a0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc9ce));
        EXPECT(0x18, gbc.readMem(0xc9cf));
        // F5 0001
        gbc.setState(0x48e6, 0x879b, 0xd640, 0x3164, 0x97b0, 0x3463, 0x1, 0x1);
        gbc.writeMem(0x48e6, { 0xf5 });
        gbc.writeMem(0x8799, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8799, gbc.sp());
        EXPECT(0x48e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8799));
        EXPECT(0xd6, gbc.readMem(0x879a));
        // F5 0002
        gbc.setState(0x2b7b, 0xbc02, 0xe6e0, 0xc056, 0x64d, 0xa004, 0x1, 0x1);
        gbc.writeMem(0x2b7b, { 0xf5 });
        gbc.writeMem(0xbc00, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbc00, gbc.sp());
        EXPECT(0x2b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xbc00));
        EXPECT(0xe6, gbc.readMem(0xbc01));
        // F5 0006
        gbc.setState(0x1292, 0x8401, 0x5600, 0x1002, 0xcc36, 0xc85c, 0x0, 0x1);
        gbc.writeMem(0x1292, { 0xf5 });
        gbc.writeMem(0x83ff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x83ff, gbc.sp());
        EXPECT(0x1293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x83ff));
        EXPECT(0x56, gbc.readMem(0x8400));
        // F5 0007
        gbc.setState(0x1c50, 0xac40, 0x9e70, 0x689a, 0xaf00, 0xf5cf, 0x0, 0x0);
        gbc.writeMem(0x1c50, { 0xf5 });
        gbc.writeMem(0xac3e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xac3e, gbc.sp());
        EXPECT(0x1c51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xac3e));
        EXPECT(0x9e, gbc.readMem(0xac3f));
        // F5 0010
        gbc.setState(0xcae3, 0xc5ea, 0xcb30, 0x3cf1, 0x81ca, 0x7950, 0x0, 0x1);
        gbc.writeMem(0xc5e8, { 0x0, 0x0 });
        gbc.writeMem(0xcae3, { 0xf5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc5e8, gbc.sp());
        EXPECT(0xcae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xc5e8));
        EXPECT(0xcb, gbc.readMem(0xc5e9));
        EXPECT(0xf5, gbc.readMem(0xcae3));
        // F5 0011
        gbc.setState(0x52b2, 0xff62, 0x1b30, 0x24d8, 0x972e, 0x21ce, 0x0, 0x1);
        gbc.writeMem(0x52b2, { 0xf5 });
        gbc.writeMem(0xff60, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xff60, gbc.sp());
        EXPECT(0x52b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xff60));
        EXPECT(0x1b, gbc.readMem(0xff61));
        // F5 0014
        gbc.setState(0x5de5, 0xc21b, 0xc130, 0x883e, 0x64ce, 0xef9, 0x1, 0x0);
        gbc.writeMem(0x5de5, { 0xf5 });
        gbc.writeMem(0xc219, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc219, gbc.sp());
        EXPECT(0x5de6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xc219));
        EXPECT(0xc1, gbc.readMem(0xc21a));
        // F5 0015
        gbc.setState(0x6e9a, 0x8275, 0xf030, 0xfb2d, 0xc03d, 0xf88d, 0x1, 0x0);
        gbc.writeMem(0x6e9a, { 0xf5 });
        gbc.writeMem(0x8273, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8273, gbc.sp());
        EXPECT(0x6e9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x8273));
        EXPECT(0xf0, gbc.readMem(0x8274));
        // F5 001B
        gbc.setState(0x4325, 0xa571, 0xceb0, 0x8e66, 0x5a68, 0xfb5d, 0x0, 0x0);
        gbc.writeMem(0x4325, { 0xf5 });
        gbc.writeMem(0xa56f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa56f, gbc.sp());
        EXPECT(0x4326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa56f));
        EXPECT(0xce, gbc.readMem(0xa570));
        // F5 001E
        gbc.setState(0xbc40, 0xa8f2, 0xd940, 0x2bf1, 0x2623, 0x5736, 0x0, 0x1);
        gbc.writeMem(0xa8f0, { 0x0, 0x0 });
        gbc.writeMem(0xbc40, { 0xf5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa8f0, gbc.sp());
        EXPECT(0xbc41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa8f0));
        EXPECT(0xd9, gbc.readMem(0xa8f1));
        EXPECT(0xf5, gbc.readMem(0xbc40));
        // F5 0021
        gbc.setState(0x8394, 0xf0e1, 0x7e60, 0x3a64, 0x633b, 0xb769, 0x1, 0x1);
        gbc.writeMem(0x8394, { 0xf5 });
        gbc.writeMem(0xf0df, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf0df, gbc.sp());
        EXPECT(0x8395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8394));
        EXPECT(0x60, gbc.readMem(0xf0df));
        EXPECT(0x7e, gbc.readMem(0xf0e0));
        // F5 0022
        gbc.setState(0x79d8, 0xa2ca, 0xc2a0, 0x80ff, 0x3fce, 0x2a11, 0x0, 0x1);
        gbc.writeMem(0x79d8, { 0xf5 });
        gbc.writeMem(0xa2c8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa2c8, gbc.sp());
        EXPECT(0x79d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa2c8));
        EXPECT(0xc2, gbc.readMem(0xa2c9));
        // F5 0023
        gbc.setState(0x3988, 0xdc7f, 0x57b0, 0x2f5f, 0xbbd, 0x342b, 0x1, 0x1);
        gbc.writeMem(0x3988, { 0xf5 });
        gbc.writeMem(0xdc7d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xdc7d, gbc.sp());
        EXPECT(0x3989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdc7d));
        EXPECT(0x57, gbc.readMem(0xdc7e));
        // F5 0026
        gbc.setState(0x2218, 0x8f54, 0xe340, 0xb486, 0x6aa, 0x9759, 0x1, 0x1);
        gbc.writeMem(0x2218, { 0xf5 });
        gbc.writeMem(0x8f52, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8f52, gbc.sp());
        EXPECT(0x2219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8f52));
        EXPECT(0xe3, gbc.readMem(0x8f53));
        // F5 0027
        gbc.setState(0xa846, 0xde61, 0xd620, 0x4b01, 0x514d, 0x16cd, 0x0, 0x1);
        gbc.writeMem(0xa846, { 0xf5 });
        gbc.writeMem(0xde5f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xde5f, gbc.sp());
        EXPECT(0xa847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xa846));
        EXPECT(0x20, gbc.readMem(0xde5f));
        EXPECT(0xd6, gbc.readMem(0xde60));
        // F5 0029
        gbc.setState(0xc86d, 0x9b6f, 0x670, 0x4e6a, 0x6b4a, 0x65f0, 0x1, 0x0);
        gbc.writeMem(0x9b6d, { 0x0, 0x0 });
        gbc.writeMem(0xc86d, { 0xf5 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9b6d, gbc.sp());
        EXPECT(0xc86e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x9b6d));
        EXPECT(0x6, gbc.readMem(0x9b6e));
        EXPECT(0xf5, gbc.readMem(0xc86d));
        // F5 0032
        gbc.setState(0x9b7e, 0xd524, 0xa6c0, 0x92ce, 0xb530, 0x611f, 0x0, 0x1);
        gbc.writeMem(0x9b7e, { 0xf5 });
        gbc.writeMem(0xd522, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd522, gbc.sp());
        EXPECT(0x9b7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x9b7e));
        EXPECT(0xc0, gbc.readMem(0xd522));
        EXPECT(0xa6, gbc.readMem(0xd523));
        // F5 0033
        gbc.setState(0xd5f6, 0xc707, 0x9630, 0x4079, 0xdec5, 0x391e, 0x0, 0x0);
        gbc.writeMem(0xc705, { 0x0, 0x0 });
        gbc.writeMem(0xd5f6, { 0xf5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc705, gbc.sp());
        EXPECT(0xd5f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xc705));
        EXPECT(0x96, gbc.readMem(0xc706));
        EXPECT(0xf5, gbc.readMem(0xd5f6));
        // F5 0038
        gbc.setState(0x8d20, 0x83a4, 0xc680, 0x4b3c, 0x7427, 0x631d, 0x1, 0x0);
        gbc.writeMem(0x83a2, { 0x0, 0x0 });
        gbc.writeMem(0x8d20, { 0xf5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x83a2, gbc.sp());
        EXPECT(0x8d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x83a2));
        EXPECT(0xc6, gbc.readMem(0x83a3));
        EXPECT(0xf5, gbc.readMem(0x8d20));
        // F5 003C
        gbc.setState(0x82cf, 0xe7cc, 0x8e10, 0x32e4, 0x1c58, 0x4f6c, 0x1, 0x0);
        gbc.writeMem(0x82cf, { 0xf5 });
        gbc.writeMem(0xe7ca, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe7ca, gbc.sp());
        EXPECT(0x82d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x82cf));
        EXPECT(0x10, gbc.readMem(0xe7ca));
        EXPECT(0x8e, gbc.readMem(0xe7cb));
        // F5 003D
        gbc.setState(0x151c, 0xc4b5, 0xd810, 0xb9a7, 0xd2ec, 0x7b9e, 0x1, 0x1);
        gbc.writeMem(0x151c, { 0xf5 });
        gbc.writeMem(0xc4b3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc4b3, gbc.sp());
        EXPECT(0x151d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc4b3));
        EXPECT(0xd8, gbc.readMem(0xc4b4));
        // F5 0043
        gbc.setState(0x4dc1, 0xe838, 0x4940, 0xaa22, 0x114d, 0x7ae, 0x0, 0x1);
        gbc.writeMem(0x4dc1, { 0xf5 });
        gbc.writeMem(0xe836, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe836, gbc.sp());
        EXPECT(0x4dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe836));
        EXPECT(0x49, gbc.readMem(0xe837));
        // F5 0044
        gbc.setState(0x9a38, 0xe7b7, 0x5f00, 0x1af1, 0x2172, 0x79f7, 0x0, 0x1);
        gbc.writeMem(0x9a38, { 0xf5 });
        gbc.writeMem(0xe7b5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe7b5, gbc.sp());
        EXPECT(0x9a39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x9a38));
        EXPECT(0x0, gbc.readMem(0xe7b5));
        EXPECT(0x5f, gbc.readMem(0xe7b6));
        // F5 0045
        gbc.setState(0x84fb, 0xa951, 0x3f70, 0x32cf, 0x429e, 0xd67b, 0x0, 0x1);
        gbc.writeMem(0x84fb, { 0xf5 });
        gbc.writeMem(0xa94f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa94f, gbc.sp());
        EXPECT(0x84fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x84fb));
        EXPECT(0x70, gbc.readMem(0xa94f));
        EXPECT(0x3f, gbc.readMem(0xa950));
        // F5 004A
        gbc.setState(0xd240, 0xfe0f, 0xf060, 0x961c, 0x8b4f, 0x8a71, 0x0, 0x0);
        gbc.writeMem(0xd240, { 0xf5 });
        gbc.writeMem(0xfe0d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfe0d, gbc.sp());
        EXPECT(0xd241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xd240));
        EXPECT(0x60, gbc.readMem(0xfe0d));
        EXPECT(0xf0, gbc.readMem(0xfe0e));
        // F5 004B
        gbc.setState(0x4ebe, 0xb406, 0xd60, 0x10b2, 0xeaf5, 0x787d, 0x1, 0x0);
        gbc.writeMem(0x4ebe, { 0xf5 });
        gbc.writeMem(0xb404, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb404, gbc.sp());
        EXPECT(0x4ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xb404));
        EXPECT(0xd, gbc.readMem(0xb405));
        // F5 004E
        gbc.setState(0xede7, 0xb8f6, 0x37c0, 0xf8a4, 0x60cb, 0x3985, 0x0, 0x0);
        gbc.writeMem(0xb8f4, { 0x0, 0x0 });
        gbc.writeMem(0xede7, { 0xf5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb8f4, gbc.sp());
        EXPECT(0xede8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xb8f4));
        EXPECT(0x37, gbc.readMem(0xb8f5));
        EXPECT(0xf5, gbc.readMem(0xede7));
        // F5 004F
        gbc.setState(0xd573, 0xe0c0, 0x9dc0, 0xf019, 0x3c3e, 0x57b9, 0x0, 0x1);
        gbc.writeMem(0xd573, { 0xf5 });
        gbc.writeMem(0xe0be, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe0be, gbc.sp());
        EXPECT(0xd574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xd573));
        EXPECT(0xc0, gbc.readMem(0xe0be));
        EXPECT(0x9d, gbc.readMem(0xe0bf));
        // F5 0050
        gbc.setState(0xd986, 0xe779, 0xfc10, 0x7406, 0xc9ee, 0x7ddb, 0x0, 0x1);
        gbc.writeMem(0xd986, { 0xf5 });
        gbc.writeMem(0xe777, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe777, gbc.sp());
        EXPECT(0xd987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xd986));
        EXPECT(0x10, gbc.readMem(0xe777));
        EXPECT(0xfc, gbc.readMem(0xe778));
        // F5 0053
        gbc.setState(0xd7fe, 0xd767, 0xab50, 0xa25, 0x1c04, 0xf4ab, 0x0, 0x0);
        gbc.writeMem(0xd765, { 0x0, 0x0 });
        gbc.writeMem(0xd7fe, { 0xf5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd765, gbc.sp());
        EXPECT(0xd7ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd765));
        EXPECT(0xab, gbc.readMem(0xd766));
        EXPECT(0xf5, gbc.readMem(0xd7fe));
        // F5 0055
        gbc.setState(0x58cc, 0xd987, 0x3bc0, 0x7f81, 0x240c, 0x4358, 0x1, 0x0);
        gbc.writeMem(0x58cc, { 0xf5 });
        gbc.writeMem(0xd985, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd985, gbc.sp());
        EXPECT(0x58cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xd985));
        EXPECT(0x3b, gbc.readMem(0xd986));
        // F5 0057
        gbc.setState(0xe745, 0xcd26, 0xb720, 0xafc8, 0x8dbc, 0xee5a, 0x0, 0x1);
        gbc.writeMem(0xcd24, { 0x0, 0x0 });
        gbc.writeMem(0xe745, { 0xf5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xcd24, gbc.sp());
        EXPECT(0xe746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xcd24));
        EXPECT(0xb7, gbc.readMem(0xcd25));
        EXPECT(0xf5, gbc.readMem(0xe745));
        // F5 005C
        gbc.setState(0x2521, 0xbf8c, 0x4a20, 0xdda9, 0xcd02, 0x8d56, 0x1, 0x1);
        gbc.writeMem(0x2521, { 0xf5 });
        gbc.writeMem(0xbf8a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbf8a, gbc.sp());
        EXPECT(0x2522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xbf8a));
        EXPECT(0x4a, gbc.readMem(0xbf8b));
        // F5 005D
        gbc.setState(0x8945, 0xdae9, 0xca60, 0xf8b0, 0x3a68, 0x611c, 0x1, 0x0);
        gbc.writeMem(0x8945, { 0xf5 });
        gbc.writeMem(0xdae7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdae7, gbc.sp());
        EXPECT(0x8946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8945));
        EXPECT(0x60, gbc.readMem(0xdae7));
        EXPECT(0xca, gbc.readMem(0xdae8));
        // F5 0060
        gbc.setState(0x8879, 0x961c, 0x280, 0xf9ee, 0x47c6, 0xb33c, 0x0, 0x1);
        gbc.writeMem(0x8879, { 0xf5 });
        gbc.writeMem(0x961a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x961a, gbc.sp());
        EXPECT(0x887a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8879));
        EXPECT(0x80, gbc.readMem(0x961a));
        EXPECT(0x2, gbc.readMem(0x961b));
        // F5 0061
        gbc.setState(0xc039, 0x83ff, 0xcbe0, 0xc567, 0x63cf, 0x11bc, 0x1, 0x0);
        gbc.writeMem(0x83fd, { 0x0, 0x0 });
        gbc.writeMem(0xc039, { 0xf5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x83fd, gbc.sp());
        EXPECT(0xc03a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x83fd));
        EXPECT(0xcb, gbc.readMem(0x83fe));
        EXPECT(0xf5, gbc.readMem(0xc039));
        // F5 0066
        gbc.setState(0xaa4a, 0xf9ec, 0x8b90, 0x86c8, 0x9f6d, 0x97ae, 0x1, 0x0);
        gbc.writeMem(0xaa4a, { 0xf5 });
        gbc.writeMem(0xf9ea, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf9ea, gbc.sp());
        EXPECT(0xaa4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xaa4a));
        EXPECT(0x90, gbc.readMem(0xf9ea));
        EXPECT(0x8b, gbc.readMem(0xf9eb));
        // F5 0068
        gbc.setState(0xcc1c, 0xad60, 0x1470, 0xbdb9, 0x9c36, 0xabd4, 0x0, 0x0);
        gbc.writeMem(0xad5e, { 0x0, 0x0 });
        gbc.writeMem(0xcc1c, { 0xf5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xad5e, gbc.sp());
        EXPECT(0xcc1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xad5e));
        EXPECT(0x14, gbc.readMem(0xad5f));
        EXPECT(0xf5, gbc.readMem(0xcc1c));
        // F5 006E
        gbc.setState(0x5e46, 0xb0e7, 0xa640, 0xaf1e, 0xcc63, 0xe588, 0x0, 0x1);
        gbc.writeMem(0x5e46, { 0xf5 });
        gbc.writeMem(0xb0e5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb0e5, gbc.sp());
        EXPECT(0x5e47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb0e5));
        EXPECT(0xa6, gbc.readMem(0xb0e6));
        // F5 006F
        gbc.setState(0xea8f, 0xf193, 0xfa60, 0xc7ff, 0xca9, 0xa28a, 0x1, 0x1);
        gbc.writeMem(0xea8f, { 0xf5 });
        gbc.writeMem(0xf191, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf191, gbc.sp());
        EXPECT(0xea90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xea8f));
        EXPECT(0x60, gbc.readMem(0xf191));
        EXPECT(0xfa, gbc.readMem(0xf192));
        // F5 0070
        gbc.setState(0x6bbc, 0xd6d1, 0xf070, 0x74cf, 0xafe6, 0xc6ca, 0x1, 0x0);
        gbc.writeMem(0x6bbc, { 0xf5 });
        gbc.writeMem(0xd6cf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd6cf, gbc.sp());
        EXPECT(0x6bbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xd6cf));
        EXPECT(0xf0, gbc.readMem(0xd6d0));
        // F5 0071
        gbc.setState(0xcd7a, 0xf32d, 0x510, 0x992e, 0xd18, 0x31cb, 0x1, 0x0);
        gbc.writeMem(0xcd7a, { 0xf5 });
        gbc.writeMem(0xf32b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf32b, gbc.sp());
        EXPECT(0xcd7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xcd7a));
        EXPECT(0x10, gbc.readMem(0xf32b));
        EXPECT(0x5, gbc.readMem(0xf32c));
        // F5 0072
        gbc.setState(0x2d30, 0xcbf1, 0x3250, 0x6bb9, 0x948, 0xc959, 0x1, 0x1);
        gbc.writeMem(0x2d30, { 0xf5 });
        gbc.writeMem(0xcbef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcbef, gbc.sp());
        EXPECT(0x2d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xcbef));
        EXPECT(0x32, gbc.readMem(0xcbf0));
        // F5 0076
        gbc.setState(0x79ec, 0xc196, 0x3cb0, 0x5457, 0xfb09, 0x5ac2, 0x0, 0x1);
        gbc.writeMem(0x79ec, { 0xf5 });
        gbc.writeMem(0xc194, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc194, gbc.sp());
        EXPECT(0x79ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc194));
        EXPECT(0x3c, gbc.readMem(0xc195));
        // F5 007A
        gbc.setState(0x7b8, 0xf077, 0x9440, 0xc712, 0x5c72, 0x3679, 0x0, 0x1);
        gbc.writeMem(0x7b8, { 0xf5 });
        gbc.writeMem(0xf075, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf075, gbc.sp());
        EXPECT(0x7b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xf075));
        EXPECT(0x94, gbc.readMem(0xf076));
        // F5 007C
        gbc.setState(0xc0ad, 0xd6c1, 0xbe40, 0x3c78, 0xc993, 0x8bc1, 0x0, 0x1);
        gbc.writeMem(0xc0ad, { 0xf5 });
        gbc.writeMem(0xd6bf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd6bf, gbc.sp());
        EXPECT(0xc0ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xc0ad));
        EXPECT(0x40, gbc.readMem(0xd6bf));
        EXPECT(0xbe, gbc.readMem(0xd6c0));
        // F5 007D
        gbc.setState(0xb018, 0xffde, 0x1650, 0x1807, 0x422e, 0x586c, 0x0, 0x1);
        gbc.writeMem(0xb018, { 0xf5 });
        gbc.writeMem(0xffdc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xffdc, gbc.sp());
        EXPECT(0xb019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb018));
        EXPECT(0x50, gbc.readMem(0xffdc));
        EXPECT(0x16, gbc.readMem(0xffdd));
        // F5 007E
        gbc.setState(0xe3bb, 0xfa10, 0xcae0, 0xd799, 0x387d, 0xf3e6, 0x0, 0x0);
        gbc.writeMem(0xe3bb, { 0xf5 });
        gbc.writeMem(0xfa0e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfa0e, gbc.sp());
        EXPECT(0xe3bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xe3bb));
        EXPECT(0xe0, gbc.readMem(0xfa0e));
        EXPECT(0xca, gbc.readMem(0xfa0f));
        // F5 0081
        gbc.setState(0x1756, 0xaef0, 0x3da0, 0xb172, 0x5f84, 0x5123, 0x1, 0x1);
        gbc.writeMem(0x1756, { 0xf5 });
        gbc.writeMem(0xaeee, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xaeee, gbc.sp());
        EXPECT(0x1757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xaeee));
        EXPECT(0x3d, gbc.readMem(0xaeef));
        // F5 0082
        gbc.setState(0x252e, 0xc63c, 0x5e0, 0xd208, 0x1750, 0x1c42, 0x1, 0x1);
        gbc.writeMem(0x252e, { 0xf5 });
        gbc.writeMem(0xc63a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc63a, gbc.sp());
        EXPECT(0x252f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc63a));
        EXPECT(0x5, gbc.readMem(0xc63b));
        // F5 0086
        gbc.setState(0xae9b, 0xefaa, 0x61d0, 0x7f8b, 0x659d, 0x7b1a, 0x0, 0x0);
        gbc.writeMem(0xae9b, { 0xf5 });
        gbc.writeMem(0xefa8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xefa8, gbc.sp());
        EXPECT(0xae9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xae9b));
        EXPECT(0xd0, gbc.readMem(0xefa8));
        EXPECT(0x61, gbc.readMem(0xefa9));
        // F5 008B
        gbc.setState(0x33ea, 0xdf32, 0x6310, 0x701e, 0x1922, 0x5b2a, 0x1, 0x0);
        gbc.writeMem(0x33ea, { 0xf5 });
        gbc.writeMem(0xdf30, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xdf30, gbc.sp());
        EXPECT(0x33eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdf30));
        EXPECT(0x63, gbc.readMem(0xdf31));
        // F5 008C
        gbc.setState(0x95d8, 0xde0d, 0x12c0, 0x26a0, 0x660c, 0x52a0, 0x0, 0x1);
        gbc.writeMem(0x95d8, { 0xf5 });
        gbc.writeMem(0xde0b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xde0b, gbc.sp());
        EXPECT(0x95d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x95d8));
        EXPECT(0xc0, gbc.readMem(0xde0b));
        EXPECT(0x12, gbc.readMem(0xde0c));
        // F5 008D
        gbc.setState(0x61d5, 0x8635, 0x1ae0, 0xcf2f, 0x3fdb, 0xf333, 0x0, 0x1);
        gbc.writeMem(0x61d5, { 0xf5 });
        gbc.writeMem(0x8633, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8633, gbc.sp());
        EXPECT(0x61d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8633));
        EXPECT(0x1a, gbc.readMem(0x8634));
        // F5 008E
        gbc.setState(0xdd50, 0xdd70, 0xa220, 0xcaf1, 0x436b, 0xd97b, 0x0, 0x0);
        gbc.writeMem(0xdd50, { 0xf5 });
        gbc.writeMem(0xdd6e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdd6e, gbc.sp());
        EXPECT(0xdd51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xdd50));
        EXPECT(0x20, gbc.readMem(0xdd6e));
        EXPECT(0xa2, gbc.readMem(0xdd6f));
        // F5 008F
        gbc.setState(0xb603, 0xe00c, 0xa970, 0x6970, 0x6f3f, 0x237e, 0x0, 0x1);
        gbc.writeMem(0xb603, { 0xf5 });
        gbc.writeMem(0xe00a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe00a, gbc.sp());
        EXPECT(0xb604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb603));
        EXPECT(0x70, gbc.readMem(0xe00a));
        EXPECT(0xa9, gbc.readMem(0xe00b));
        // F5 0090
        gbc.setState(0x604c, 0x89d7, 0x8740, 0xb524, 0xb6f8, 0x8f1f, 0x0, 0x0);
        gbc.writeMem(0x604c, { 0xf5 });
        gbc.writeMem(0x89d5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x89d5, gbc.sp());
        EXPECT(0x604d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x89d5));
        EXPECT(0x87, gbc.readMem(0x89d6));
        // F5 0093
        gbc.setState(0x6b9b, 0x9e00, 0xe280, 0x2129, 0x5965, 0xea88, 0x1, 0x1);
        gbc.writeMem(0x6b9b, { 0xf5 });
        gbc.writeMem(0x9dfe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9dfe, gbc.sp());
        EXPECT(0x6b9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9dfe));
        EXPECT(0xe2, gbc.readMem(0x9dff));
        // F5 0094
        gbc.setState(0xeb76, 0x83b4, 0xb510, 0xaa57, 0x12a0, 0xcf94, 0x1, 0x1);
        gbc.writeMem(0x83b2, { 0x0, 0x0 });
        gbc.writeMem(0xeb76, { 0xf5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x83b2, gbc.sp());
        EXPECT(0xeb77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x83b2));
        EXPECT(0xb5, gbc.readMem(0x83b3));
        EXPECT(0xf5, gbc.readMem(0xeb76));
        // F5 0097
        gbc.setState(0x1fe4, 0xdb41, 0xa3e0, 0x1e27, 0xe631, 0x3662, 0x1, 0x0);
        gbc.writeMem(0x1fe4, { 0xf5 });
        gbc.writeMem(0xdb3f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xdb3f, gbc.sp());
        EXPECT(0x1fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xdb3f));
        EXPECT(0xa3, gbc.readMem(0xdb40));
        // F5 009C
        gbc.setState(0xd63e, 0xea07, 0x28e0, 0x94a7, 0x97b3, 0xe91b, 0x0, 0x0);
        gbc.writeMem(0xd63e, { 0xf5 });
        gbc.writeMem(0xea05, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xea05, gbc.sp());
        EXPECT(0xd63f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xd63e));
        EXPECT(0xe0, gbc.readMem(0xea05));
        EXPECT(0x28, gbc.readMem(0xea06));
        // F5 009E
        gbc.setState(0x17fd, 0x8f8e, 0xd1a0, 0x1088, 0xcd56, 0xdfc5, 0x0, 0x1);
        gbc.writeMem(0x17fd, { 0xf5 });
        gbc.writeMem(0x8f8c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8f8c, gbc.sp());
        EXPECT(0x17fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8f8c));
        EXPECT(0xd1, gbc.readMem(0x8f8d));
        // F5 00A0
        gbc.setState(0x8349, 0x9c2f, 0x1530, 0x91e5, 0x6282, 0xce59, 0x0, 0x1);
        gbc.writeMem(0x8349, { 0xf5 });
        gbc.writeMem(0x9c2d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9c2d, gbc.sp());
        EXPECT(0x834a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8349));
        EXPECT(0x30, gbc.readMem(0x9c2d));
        EXPECT(0x15, gbc.readMem(0x9c2e));
        // F5 00A1
        gbc.setState(0x83ad, 0xd7fd, 0x1fb0, 0xea30, 0xd1b1, 0xbd9a, 0x0, 0x0);
        gbc.writeMem(0x83ad, { 0xf5 });
        gbc.writeMem(0xd7fb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd7fb, gbc.sp());
        EXPECT(0x83ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x83ad));
        EXPECT(0xb0, gbc.readMem(0xd7fb));
        EXPECT(0x1f, gbc.readMem(0xd7fc));
        // F5 00A2
        gbc.setState(0xd2ec, 0xe9fa, 0x6740, 0x493d, 0xc516, 0x9399, 0x1, 0x1);
        gbc.writeMem(0xd2ec, { 0xf5 });
        gbc.writeMem(0xe9f8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe9f8, gbc.sp());
        EXPECT(0xd2ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xd2ec));
        EXPECT(0x40, gbc.readMem(0xe9f8));
        EXPECT(0x67, gbc.readMem(0xe9f9));
        // F5 00A3
        gbc.setState(0x4595, 0xda3d, 0x1ac0, 0xa541, 0x86ea, 0x1ffd, 0x0, 0x1);
        gbc.writeMem(0x4595, { 0xf5 });
        gbc.writeMem(0xda3b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xda3b, gbc.sp());
        EXPECT(0x4596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xda3b));
        EXPECT(0x1a, gbc.readMem(0xda3c));
        // F5 00A6
        gbc.setState(0xc713, 0xff91, 0xd9c0, 0x3811, 0xcd5e, 0x555f, 0x0, 0x1);
        gbc.writeMem(0xc713, { 0xf5 });
        gbc.writeMem(0xff8f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xff8f, gbc.sp());
        EXPECT(0xc714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xc713));
        EXPECT(0xc0, gbc.readMem(0xff8f));
        EXPECT(0xd9, gbc.readMem(0xff90));
        // F5 00A9
        gbc.setState(0x5715, 0xef92, 0x6880, 0xa97c, 0x1de7, 0x2fb5, 0x1, 0x0);
        gbc.writeMem(0x5715, { 0xf5 });
        gbc.writeMem(0xef90, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xef90, gbc.sp());
        EXPECT(0x5716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xef90));
        EXPECT(0x68, gbc.readMem(0xef91));
        // F5 00AA
        gbc.setState(0xe203, 0xede1, 0x3830, 0xa2ce, 0x4700, 0x1b75, 0x1, 0x0);
        gbc.writeMem(0xe203, { 0xf5 });
        gbc.writeMem(0xeddf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xeddf, gbc.sp());
        EXPECT(0xe204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xe203));
        EXPECT(0x30, gbc.readMem(0xeddf));
        EXPECT(0x38, gbc.readMem(0xede0));
        // F5 00AC
        gbc.setState(0xda00, 0xbc0d, 0xd540, 0x61b5, 0x81a3, 0x5441, 0x1, 0x1);
        gbc.writeMem(0xbc0b, { 0x0, 0x0 });
        gbc.writeMem(0xda00, { 0xf5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbc0b, gbc.sp());
        EXPECT(0xda01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbc0b));
        EXPECT(0xd5, gbc.readMem(0xbc0c));
        EXPECT(0xf5, gbc.readMem(0xda00));
        // F5 00AD
        gbc.setState(0xc08f, 0xff97, 0x7e80, 0x1f9a, 0xf8b1, 0x7512, 0x0, 0x1);
        gbc.writeMem(0xc08f, { 0xf5 });
        gbc.writeMem(0xff95, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xff95, gbc.sp());
        EXPECT(0xc090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xc08f));
        EXPECT(0x80, gbc.readMem(0xff95));
        EXPECT(0x7e, gbc.readMem(0xff96));
        // F5 00AF
        gbc.setState(0x1337, 0xc065, 0x6f20, 0xfb5b, 0xedc1, 0xc0ff, 0x0, 0x0);
        gbc.writeMem(0x1337, { 0xf5 });
        gbc.writeMem(0xc063, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc063, gbc.sp());
        EXPECT(0x1338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc063));
        EXPECT(0x6f, gbc.readMem(0xc064));
        // F5 00B2
        gbc.setState(0x58f2, 0xfc74, 0x5670, 0xf192, 0x9354, 0xc2f4, 0x0, 0x0);
        gbc.writeMem(0x58f2, { 0xf5 });
        gbc.writeMem(0xfc72, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfc72, gbc.sp());
        EXPECT(0x58f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xfc72));
        EXPECT(0x56, gbc.readMem(0xfc73));
        // F5 00B3
        gbc.setState(0xd103, 0xd18b, 0xb0f0, 0x6430, 0xdbb3, 0x7d2d, 0x0, 0x0);
        gbc.writeMem(0xd103, { 0xf5 });
        gbc.writeMem(0xd189, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd189, gbc.sp());
        EXPECT(0xd104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xd103));
        EXPECT(0xf0, gbc.readMem(0xd189));
        EXPECT(0xb0, gbc.readMem(0xd18a));
        // F5 00B5
        gbc.setState(0x2e3b, 0x99ae, 0xdfc0, 0x5535, 0x3f1f, 0xa50, 0x0, 0x1);
        gbc.writeMem(0x2e3b, { 0xf5 });
        gbc.writeMem(0x99ac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x99ac, gbc.sp());
        EXPECT(0x2e3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x99ac));
        EXPECT(0xdf, gbc.readMem(0x99ad));
        // F5 00B8
        gbc.setState(0x3853, 0xe4a2, 0xc80, 0xf774, 0x149b, 0x5652, 0x0, 0x0);
        gbc.writeMem(0x3853, { 0xf5 });
        gbc.writeMem(0xe4a0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe4a0, gbc.sp());
        EXPECT(0x3854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe4a0));
        EXPECT(0xc, gbc.readMem(0xe4a1));
        // F5 00BA
        gbc.setState(0x84e, 0xd029, 0x38c0, 0x2fce, 0xb266, 0xf691, 0x1, 0x0);
        gbc.writeMem(0x84e, { 0xf5 });
        gbc.writeMem(0xd027, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd027, gbc.sp());
        EXPECT(0x84f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xd027));
        EXPECT(0x38, gbc.readMem(0xd028));
        // F5 00BB
        gbc.setState(0x9eb3, 0xa0bc, 0x14f0, 0xebfc, 0x81f5, 0x824d, 0x0, 0x0);
        gbc.writeMem(0x9eb3, { 0xf5 });
        gbc.writeMem(0xa0ba, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa0ba, gbc.sp());
        EXPECT(0x9eb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x9eb3));
        EXPECT(0xf0, gbc.readMem(0xa0ba));
        EXPECT(0x14, gbc.readMem(0xa0bb));
        // F5 00BD
        gbc.setState(0x1775, 0xda0a, 0xd4d0, 0x3fa9, 0x41e, 0x1c1c, 0x0, 0x0);
        gbc.writeMem(0x1775, { 0xf5 });
        gbc.writeMem(0xda08, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xda08, gbc.sp());
        EXPECT(0x1776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xda08));
        EXPECT(0xd4, gbc.readMem(0xda09));
        // F5 00BE
        gbc.setState(0xc570, 0xd231, 0x19c0, 0xf8a9, 0x84, 0x3ebd, 0x1, 0x0);
        gbc.writeMem(0xc570, { 0xf5 });
        gbc.writeMem(0xd22f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd22f, gbc.sp());
        EXPECT(0xc571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xc570));
        EXPECT(0xc0, gbc.readMem(0xd22f));
        EXPECT(0x19, gbc.readMem(0xd230));
        // F5 00C0
        gbc.setState(0xe9b3, 0x8f96, 0xab20, 0xb7fb, 0x21e9, 0xcfc1, 0x1, 0x1);
        gbc.writeMem(0x8f94, { 0x0, 0x0 });
        gbc.writeMem(0xe9b3, { 0xf5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8f94, gbc.sp());
        EXPECT(0xe9b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8f94));
        EXPECT(0xab, gbc.readMem(0x8f95));
        EXPECT(0xf5, gbc.readMem(0xe9b3));
        // F5 00C1
        gbc.setState(0x1aaf, 0x8b6b, 0xd4e0, 0x5857, 0x3ed9, 0xdb4c, 0x1, 0x0);
        gbc.writeMem(0x1aaf, { 0xf5 });
        gbc.writeMem(0x8b69, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8b69, gbc.sp());
        EXPECT(0x1ab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8b69));
        EXPECT(0xd4, gbc.readMem(0x8b6a));
        // F5 00C3
        gbc.setState(0x34ad, 0xdb01, 0xee90, 0xaf1f, 0xeb7d, 0x22fe, 0x1, 0x0);
        gbc.writeMem(0x34ad, { 0xf5 });
        gbc.writeMem(0xdaff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xdaff, gbc.sp());
        EXPECT(0x34ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xdaff));
        EXPECT(0xee, gbc.readMem(0xdb00));
        // F5 00C4
        gbc.setState(0x1a11, 0xa47f, 0x5040, 0x2d4, 0x78a3, 0x83c0, 0x1, 0x1);
        gbc.writeMem(0x1a11, { 0xf5 });
        gbc.writeMem(0xa47d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa47d, gbc.sp());
        EXPECT(0x1a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa47d));
        EXPECT(0x50, gbc.readMem(0xa47e));
        // F5 00C5
        gbc.setState(0xcf16, 0xfc28, 0xbd0, 0x8499, 0x4fd1, 0xa55f, 0x1, 0x0);
        gbc.writeMem(0xcf16, { 0xf5 });
        gbc.writeMem(0xfc26, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfc26, gbc.sp());
        EXPECT(0xcf17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xcf16));
        EXPECT(0xd0, gbc.readMem(0xfc26));
        EXPECT(0xb, gbc.readMem(0xfc27));
        // F5 00CB
        gbc.setState(0xb8f1, 0xd3ec, 0x95e0, 0x96a9, 0x8e8a, 0x46d0, 0x1, 0x0);
        gbc.writeMem(0xb8f1, { 0xf5 });
        gbc.writeMem(0xd3ea, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd3ea, gbc.sp());
        EXPECT(0xb8f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb8f1));
        EXPECT(0xe0, gbc.readMem(0xd3ea));
        EXPECT(0x95, gbc.readMem(0xd3eb));
        // F5 00CC
        gbc.setState(0x6bba, 0xcc88, 0xba30, 0x3072, 0x8c15, 0x64b2, 0x1, 0x0);
        gbc.writeMem(0x6bba, { 0xf5 });
        gbc.writeMem(0xcc86, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xcc86, gbc.sp());
        EXPECT(0x6bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xcc86));
        EXPECT(0xba, gbc.readMem(0xcc87));
        // F5 00CF
        gbc.setState(0xd60, 0xa7de, 0xc7b0, 0xa57e, 0x345a, 0x6ac0, 0x0, 0x0);
        gbc.writeMem(0xd60, { 0xf5 });
        gbc.writeMem(0xa7dc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa7dc, gbc.sp());
        EXPECT(0xd61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa7dc));
        EXPECT(0xc7, gbc.readMem(0xa7dd));
        // F5 00D8
        gbc.setState(0x41ad, 0xe5a7, 0x3000, 0x739d, 0x3529, 0x74b3, 0x1, 0x0);
        gbc.writeMem(0x41ad, { 0xf5 });
        gbc.writeMem(0xe5a5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe5a5, gbc.sp());
        EXPECT(0x41ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe5a5));
        EXPECT(0x30, gbc.readMem(0xe5a6));
        // F5 00DB
        gbc.setState(0x91d5, 0xc3f1, 0xcd10, 0x724a, 0x442, 0x38d9, 0x0, 0x0);
        gbc.writeMem(0x91d5, { 0xf5 });
        gbc.writeMem(0xc3ef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc3ef, gbc.sp());
        EXPECT(0x91d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x91d5));
        EXPECT(0x10, gbc.readMem(0xc3ef));
        EXPECT(0xcd, gbc.readMem(0xc3f0));
        // F5 00DD
        gbc.setState(0x8662, 0xc385, 0x16a0, 0x99ae, 0x44d7, 0x488e, 0x1, 0x0);
        gbc.writeMem(0x8662, { 0xf5 });
        gbc.writeMem(0xc383, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc383, gbc.sp());
        EXPECT(0x8663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8662));
        EXPECT(0xa0, gbc.readMem(0xc383));
        EXPECT(0x16, gbc.readMem(0xc384));
        // F5 00DF
        gbc.setState(0xb223, 0xa0e9, 0x90f0, 0x2e58, 0xd754, 0xc26c, 0x1, 0x0);
        gbc.writeMem(0xa0e7, { 0x0, 0x0 });
        gbc.writeMem(0xb223, { 0xf5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa0e7, gbc.sp());
        EXPECT(0xb224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa0e7));
        EXPECT(0x90, gbc.readMem(0xa0e8));
        EXPECT(0xf5, gbc.readMem(0xb223));
        // F5 00E0
        gbc.setState(0x2246, 0xc577, 0xbcb0, 0x48ff, 0x5f06, 0x2a3f, 0x1, 0x1);
        gbc.writeMem(0x2246, { 0xf5 });
        gbc.writeMem(0xc575, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc575, gbc.sp());
        EXPECT(0x2247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc575));
        EXPECT(0xbc, gbc.readMem(0xc576));
        // F5 00E1
        gbc.setState(0xd329, 0xfe38, 0x83e0, 0xae04, 0x1d15, 0xcae0, 0x0, 0x1);
        gbc.writeMem(0xd329, { 0xf5 });
        gbc.writeMem(0xfe36, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfe36, gbc.sp());
        EXPECT(0xd32a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xd329));
        EXPECT(0xe0, gbc.readMem(0xfe36));
        EXPECT(0x83, gbc.readMem(0xfe37));
        // F5 00E2
        gbc.setState(0x1013, 0xb43d, 0xc640, 0x8f50, 0x2dcd, 0x3505, 0x1, 0x0);
        gbc.writeMem(0x1013, { 0xf5 });
        gbc.writeMem(0xb43b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb43b, gbc.sp());
        EXPECT(0x1014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb43b));
        EXPECT(0xc6, gbc.readMem(0xb43c));
        // F5 00E3
        gbc.setState(0xdc41, 0x8a60, 0x2920, 0xa49e, 0x4099, 0xeb69, 0x1, 0x1);
        gbc.writeMem(0x8a5e, { 0x0, 0x0 });
        gbc.writeMem(0xdc41, { 0xf5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8a5e, gbc.sp());
        EXPECT(0xdc42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8a5e));
        EXPECT(0x29, gbc.readMem(0x8a5f));
        EXPECT(0xf5, gbc.readMem(0xdc41));
        // F5 00E5
        gbc.setState(0xe425, 0xfb81, 0x3ff0, 0x881d, 0x39b3, 0xa248, 0x1, 0x1);
        gbc.writeMem(0xe425, { 0xf5 });
        gbc.writeMem(0xfb7f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfb7f, gbc.sp());
        EXPECT(0xe426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xe425));
        EXPECT(0xf0, gbc.readMem(0xfb7f));
        EXPECT(0x3f, gbc.readMem(0xfb80));
        // F5 00E6
        gbc.setState(0xb35, 0xa2c2, 0x1e10, 0xd9f0, 0x8f2b, 0x950f, 0x0, 0x0);
        gbc.writeMem(0xb35, { 0xf5 });
        gbc.writeMem(0xa2c0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa2c0, gbc.sp());
        EXPECT(0xb36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa2c0));
        EXPECT(0x1e, gbc.readMem(0xa2c1));
        // F5 00E8
        gbc.setState(0x8f33, 0x9021, 0xe920, 0x6375, 0x6d0e, 0x3374, 0x0, 0x0);
        gbc.writeMem(0x8f33, { 0xf5 });
        gbc.writeMem(0x901f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x901f, gbc.sp());
        EXPECT(0x8f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8f33));
        EXPECT(0x20, gbc.readMem(0x901f));
        EXPECT(0xe9, gbc.readMem(0x9020));
        // F5 00EA
        gbc.setState(0x8994, 0xa294, 0x20a0, 0xe7de, 0x27a9, 0x307, 0x0, 0x1);
        gbc.writeMem(0x8994, { 0xf5 });
        gbc.writeMem(0xa292, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa292, gbc.sp());
        EXPECT(0x8995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8994));
        EXPECT(0xa0, gbc.readMem(0xa292));
        EXPECT(0x20, gbc.readMem(0xa293));
        // F5 00EF
        gbc.setState(0x5ced, 0xd601, 0x5e30, 0xe91e, 0x315c, 0xed9e, 0x0, 0x0);
        gbc.writeMem(0x5ced, { 0xf5 });
        gbc.writeMem(0xd5ff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd5ff, gbc.sp());
        EXPECT(0x5cee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xd5ff));
        EXPECT(0x5e, gbc.readMem(0xd600));
        // F5 00F7
        gbc.setState(0x5026, 0x8d97, 0xa6f0, 0xe22c, 0x546a, 0x5fe8, 0x1, 0x0);
        gbc.writeMem(0x5026, { 0xf5 });
        gbc.writeMem(0x8d95, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8d95, gbc.sp());
        EXPECT(0x5027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8d95));
        EXPECT(0xa6, gbc.readMem(0x8d96));
        // F5 00F8
        gbc.setState(0x2aa8, 0xd6c6, 0xfd30, 0x7561, 0x425d, 0xbf08, 0x1, 0x0);
        gbc.writeMem(0x2aa8, { 0xf5 });
        gbc.writeMem(0xd6c4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd6c4, gbc.sp());
        EXPECT(0x2aa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xd6c4));
        EXPECT(0xfd, gbc.readMem(0xd6c5));
        // F5 00FB
        gbc.setState(0x6c8, 0x8a9c, 0x4630, 0x11e7, 0x1f06, 0x195d, 0x0, 0x1);
        gbc.writeMem(0x6c8, { 0xf5 });
        gbc.writeMem(0x8a9a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8a9a, gbc.sp());
        EXPECT(0x6c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x8a9a));
        EXPECT(0x46, gbc.readMem(0x8a9b));
        // F5 00FD
        gbc.setState(0x6fb4, 0xd1d2, 0x8980, 0xa7ca, 0x2894, 0x6a98, 0x1, 0x0);
        gbc.writeMem(0x6fb4, { 0xf5 });
        gbc.writeMem(0xd1d0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd1d0, gbc.sp());
        EXPECT(0x6fb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd1d0));
        EXPECT(0x89, gbc.readMem(0xd1d1));
        // F5 00FF
        gbc.setState(0xc3ba, 0xec7e, 0xd4a0, 0x157a, 0xd480, 0x2e28, 0x1, 0x1);
        gbc.writeMem(0xc3ba, { 0xf5 });
        gbc.writeMem(0xec7c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xec7c, gbc.sp());
        EXPECT(0xc3bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xc3ba));
        EXPECT(0xa0, gbc.readMem(0xec7c));
        EXPECT(0xd4, gbc.readMem(0xec7d));
        // F5 0100
        gbc.setState(0xec22, 0xbdfb, 0xc3f0, 0xc5e, 0xe218, 0xd3db, 0x0, 0x1);
        gbc.writeMem(0xbdf9, { 0x0, 0x0 });
        gbc.writeMem(0xec22, { 0xf5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbdf9, gbc.sp());
        EXPECT(0xec23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbdf9));
        EXPECT(0xc3, gbc.readMem(0xbdfa));
        EXPECT(0xf5, gbc.readMem(0xec22));
        // F5 0101
        gbc.setState(0x7809, 0xdf0a, 0x25f0, 0x894c, 0x68ca, 0x7bd8, 0x0, 0x0);
        gbc.writeMem(0x7809, { 0xf5 });
        gbc.writeMem(0xdf08, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xdf08, gbc.sp());
        EXPECT(0x780a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdf08));
        EXPECT(0x25, gbc.readMem(0xdf09));
        // F5 0102
        gbc.setState(0x79ff, 0xe5a5, 0xd0d0, 0xd5b3, 0xc263, 0x5642, 0x0, 0x1);
        gbc.writeMem(0x79ff, { 0xf5 });
        gbc.writeMem(0xe5a3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe5a3, gbc.sp());
        EXPECT(0x7a00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe5a3));
        EXPECT(0xd0, gbc.readMem(0xe5a4));
        // F5 0104
        gbc.setState(0xa15, 0xdfe4, 0x43a0, 0x865e, 0xdde2, 0x8af1, 0x1, 0x0);
        gbc.writeMem(0xa15, { 0xf5 });
        gbc.writeMem(0xdfe2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdfe2, gbc.sp());
        EXPECT(0xa16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdfe2));
        EXPECT(0x43, gbc.readMem(0xdfe3));
        // F5 0105
        gbc.setState(0xdbb6, 0x9abe, 0xea40, 0x89e, 0x5505, 0xcbfb, 0x0, 0x1);
        gbc.writeMem(0x9abc, { 0x0, 0x0 });
        gbc.writeMem(0xdbb6, { 0xf5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9abc, gbc.sp());
        EXPECT(0xdbb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9abc));
        EXPECT(0xea, gbc.readMem(0x9abd));
        EXPECT(0xf5, gbc.readMem(0xdbb6));
        // F5 0107
        gbc.setState(0x3272, 0xeffd, 0xfcd0, 0x637a, 0x69a8, 0x3d7b, 0x1, 0x0);
        gbc.writeMem(0x3272, { 0xf5 });
        gbc.writeMem(0xeffb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xeffb, gbc.sp());
        EXPECT(0x3273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xeffb));
        EXPECT(0xfc, gbc.readMem(0xeffc));
        // F5 010A
        gbc.setState(0xe12a, 0x9a5d, 0x2540, 0xe7b, 0xb496, 0x7b81, 0x0, 0x0);
        gbc.writeMem(0x9a5b, { 0x0, 0x0 });
        gbc.writeMem(0xe12a, { 0xf5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9a5b, gbc.sp());
        EXPECT(0xe12b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9a5b));
        EXPECT(0x25, gbc.readMem(0x9a5c));
        EXPECT(0xf5, gbc.readMem(0xe12a));
        // F5 010B
        gbc.setState(0x7879, 0xe8c9, 0x3fe0, 0xe548, 0xe44e, 0x5b8e, 0x1, 0x0);
        gbc.writeMem(0x7879, { 0xf5 });
        gbc.writeMem(0xe8c7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe8c7, gbc.sp());
        EXPECT(0x787a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe8c7));
        EXPECT(0x3f, gbc.readMem(0xe8c8));
        // F5 010C
        gbc.setState(0xdf0e, 0xf101, 0xe170, 0x1be0, 0x60bd, 0xd74d, 0x1, 0x1);
        gbc.writeMem(0xdf0e, { 0xf5 });
        gbc.writeMem(0xf0ff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf0ff, gbc.sp());
        EXPECT(0xdf0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xdf0e));
        EXPECT(0x70, gbc.readMem(0xf0ff));
        EXPECT(0xe1, gbc.readMem(0xf100));
        // F5 0110
        gbc.setState(0x1067, 0xbeee, 0x7070, 0x7703, 0xe90d, 0xf7d4, 0x0, 0x1);
        gbc.writeMem(0x1067, { 0xf5 });
        gbc.writeMem(0xbeec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbeec, gbc.sp());
        EXPECT(0x1068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xbeec));
        EXPECT(0x70, gbc.readMem(0xbeed));
        // F5 0111
        gbc.setState(0x558, 0xc28a, 0x9b20, 0x2746, 0xd5c0, 0xfb7a, 0x1, 0x1);
        gbc.writeMem(0x558, { 0xf5 });
        gbc.writeMem(0xc288, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc288, gbc.sp());
        EXPECT(0x559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc288));
        EXPECT(0x9b, gbc.readMem(0xc289));
        // F5 0113
        gbc.setState(0x8f54, 0xbc77, 0x65b0, 0xe439, 0x49a4, 0x5d06, 0x1, 0x1);
        gbc.writeMem(0x8f54, { 0xf5 });
        gbc.writeMem(0xbc75, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xbc75, gbc.sp());
        EXPECT(0x8f55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8f54));
        EXPECT(0xb0, gbc.readMem(0xbc75));
        EXPECT(0x65, gbc.readMem(0xbc76));
        // F5 0115
        gbc.setState(0x47e1, 0xcd14, 0x7f10, 0x1bc9, 0xe8ca, 0x16d4, 0x0, 0x0);
        gbc.writeMem(0x47e1, { 0xf5 });
        gbc.writeMem(0xcd12, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xcd12, gbc.sp());
        EXPECT(0x47e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcd12));
        EXPECT(0x7f, gbc.readMem(0xcd13));
        // F5 0116
        gbc.setState(0xde0d, 0x96d8, 0x7d80, 0x72c5, 0x16b4, 0x9130, 0x1, 0x1);
        gbc.writeMem(0x96d6, { 0x0, 0x0 });
        gbc.writeMem(0xde0d, { 0xf5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x96d6, gbc.sp());
        EXPECT(0xde0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x96d6));
        EXPECT(0x7d, gbc.readMem(0x96d7));
        EXPECT(0xf5, gbc.readMem(0xde0d));
        // F5 0118
        gbc.setState(0x2dc1, 0x9814, 0xcc20, 0xd8, 0xc669, 0xe6d8, 0x1, 0x0);
        gbc.writeMem(0x2dc1, { 0xf5 });
        gbc.writeMem(0x9812, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9812, gbc.sp());
        EXPECT(0x2dc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9812));
        EXPECT(0xcc, gbc.readMem(0x9813));
        // F5 011A
        gbc.setState(0xc578, 0xd6b8, 0x34d0, 0xb3c6, 0x68d5, 0x8a2c, 0x0, 0x0);
        gbc.writeMem(0xc578, { 0xf5 });
        gbc.writeMem(0xd6b6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd6b6, gbc.sp());
        EXPECT(0xc579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xc578));
        EXPECT(0xd0, gbc.readMem(0xd6b6));
        EXPECT(0x34, gbc.readMem(0xd6b7));
        // F5 011C
        gbc.setState(0xbe7f, 0x858f, 0x26f0, 0x94ed, 0xf53a, 0x1274, 0x1, 0x1);
        gbc.writeMem(0x858d, { 0x0, 0x0 });
        gbc.writeMem(0xbe7f, { 0xf5 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x858d, gbc.sp());
        EXPECT(0xbe80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x858d));
        EXPECT(0x26, gbc.readMem(0x858e));
        EXPECT(0xf5, gbc.readMem(0xbe7f));
        // F5 0120
        gbc.setState(0x87fa, 0x8b52, 0xdff0, 0x77ba, 0x447, 0xcdc, 0x1, 0x0);
        gbc.writeMem(0x87fa, { 0xf5 });
        gbc.writeMem(0x8b50, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8b50, gbc.sp());
        EXPECT(0x87fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x87fa));
        EXPECT(0xf0, gbc.readMem(0x8b50));
        EXPECT(0xdf, gbc.readMem(0x8b51));
        // F5 0122
        gbc.setState(0xaf55, 0x9e25, 0x9620, 0x65fd, 0x2415, 0x9f69, 0x1, 0x0);
        gbc.writeMem(0x9e23, { 0x0, 0x0 });
        gbc.writeMem(0xaf55, { 0xf5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9e23, gbc.sp());
        EXPECT(0xaf56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9e23));
        EXPECT(0x96, gbc.readMem(0x9e24));
        EXPECT(0xf5, gbc.readMem(0xaf55));
        // F5 0124
        gbc.setState(0x4bdf, 0xa397, 0xe570, 0x57ab, 0xdd2, 0x6b1b, 0x1, 0x0);
        gbc.writeMem(0x4bdf, { 0xf5 });
        gbc.writeMem(0xa395, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa395, gbc.sp());
        EXPECT(0x4be0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xa395));
        EXPECT(0xe5, gbc.readMem(0xa396));
        // F5 0125
        gbc.setState(0xcfd8, 0xea0f, 0xcc30, 0xbad6, 0x2875, 0x98a, 0x0, 0x0);
        gbc.writeMem(0xcfd8, { 0xf5 });
        gbc.writeMem(0xea0d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xea0d, gbc.sp());
        EXPECT(0xcfd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xcfd8));
        EXPECT(0x30, gbc.readMem(0xea0d));
        EXPECT(0xcc, gbc.readMem(0xea0e));
        // F5 0126
        gbc.setState(0x3e0, 0xe1e6, 0xfe90, 0x8ac8, 0xd08d, 0x1227, 0x1, 0x1);
        gbc.writeMem(0x3e0, { 0xf5 });
        gbc.writeMem(0xe1e4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe1e4, gbc.sp());
        EXPECT(0x3e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xe1e4));
        EXPECT(0xfe, gbc.readMem(0xe1e5));
        // F5 0127
        gbc.setState(0x81c8, 0x958b, 0x1030, 0xb4a0, 0xa1a9, 0x7ca7, 0x1, 0x1);
        gbc.writeMem(0x81c8, { 0xf5 });
        gbc.writeMem(0x9589, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9589, gbc.sp());
        EXPECT(0x81c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x81c8));
        EXPECT(0x30, gbc.readMem(0x9589));
        EXPECT(0x10, gbc.readMem(0x958a));
        // F5 012A
        gbc.setState(0xbac3, 0xb981, 0x210, 0xaa35, 0x5e20, 0xe027, 0x0, 0x0);
        gbc.writeMem(0xb97f, { 0x0, 0x0 });
        gbc.writeMem(0xbac3, { 0xf5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb97f, gbc.sp());
        EXPECT(0xbac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb97f));
        EXPECT(0x2, gbc.readMem(0xb980));
        EXPECT(0xf5, gbc.readMem(0xbac3));
        // F5 012D
        gbc.setState(0xa7d9, 0xac11, 0x1250, 0xdc45, 0x6ae0, 0xa50b, 0x0, 0x0);
        gbc.writeMem(0xa7d9, { 0xf5 });
        gbc.writeMem(0xac0f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xac0f, gbc.sp());
        EXPECT(0xa7da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xa7d9));
        EXPECT(0x50, gbc.readMem(0xac0f));
        EXPECT(0x12, gbc.readMem(0xac10));
        // F5 012E
        gbc.setState(0x834, 0xad79, 0x7b90, 0xc8a6, 0x8aa2, 0x4578, 0x0, 0x1);
        gbc.writeMem(0x834, { 0xf5 });
        gbc.writeMem(0xad77, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xad77, gbc.sp());
        EXPECT(0x835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xad77));
        EXPECT(0x7b, gbc.readMem(0xad78));
        // F5 0132
        gbc.setState(0x92dc, 0xab50, 0x27e0, 0xa94d, 0xeee8, 0x429a, 0x1, 0x0);
        gbc.writeMem(0x92dc, { 0xf5 });
        gbc.writeMem(0xab4e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xab4e, gbc.sp());
        EXPECT(0x92dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x92dc));
        EXPECT(0xe0, gbc.readMem(0xab4e));
        EXPECT(0x27, gbc.readMem(0xab4f));
        // F5 0133
        gbc.setState(0xc0c5, 0xb77a, 0x5710, 0xa8b5, 0x29c6, 0x52ed, 0x0, 0x0);
        gbc.writeMem(0xb778, { 0x0, 0x0 });
        gbc.writeMem(0xc0c5, { 0xf5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb778, gbc.sp());
        EXPECT(0xc0c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb778));
        EXPECT(0x57, gbc.readMem(0xb779));
        EXPECT(0xf5, gbc.readMem(0xc0c5));
        // F5 0135
        gbc.setState(0x7c92, 0xaf85, 0xfb00, 0xb3ba, 0xc0a9, 0x2746, 0x0, 0x0);
        gbc.writeMem(0x7c92, { 0xf5 });
        gbc.writeMem(0xaf83, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xaf83, gbc.sp());
        EXPECT(0x7c93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xaf83));
        EXPECT(0xfb, gbc.readMem(0xaf84));
        // F5 0136
        gbc.setState(0x1792, 0xe116, 0xc010, 0x3f3e, 0x9ee3, 0x5839, 0x0, 0x1);
        gbc.writeMem(0x1792, { 0xf5 });
        gbc.writeMem(0xe114, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe114, gbc.sp());
        EXPECT(0x1793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe114));
        EXPECT(0xc0, gbc.readMem(0xe115));
        // F5 0139
        gbc.setState(0x8c3d, 0xdb62, 0x650, 0xe6f0, 0x844c, 0x3626, 0x1, 0x0);
        gbc.writeMem(0x8c3d, { 0xf5 });
        gbc.writeMem(0xdb60, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xdb60, gbc.sp());
        EXPECT(0x8c3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8c3d));
        EXPECT(0x50, gbc.readMem(0xdb60));
        EXPECT(0x6, gbc.readMem(0xdb61));
        // F5 013A
        gbc.setState(0x32ae, 0x8ce7, 0x7030, 0x9678, 0x7b50, 0xa333, 0x1, 0x1);
        gbc.writeMem(0x32ae, { 0xf5 });
        gbc.writeMem(0x8ce5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8ce5, gbc.sp());
        EXPECT(0x32af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x8ce5));
        EXPECT(0x70, gbc.readMem(0x8ce6));
        // F5 013D
        gbc.setState(0x5649, 0x98b0, 0x14e0, 0x6ca9, 0x47e2, 0x553f, 0x0, 0x1);
        gbc.writeMem(0x5649, { 0xf5 });
        gbc.writeMem(0x98ae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x98ae, gbc.sp());
        EXPECT(0x564a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x98ae));
        EXPECT(0x14, gbc.readMem(0x98af));
        // F5 0140
        gbc.setState(0x8371, 0xabca, 0x93c0, 0xf771, 0x783a, 0x4edd, 0x0, 0x1);
        gbc.writeMem(0x8371, { 0xf5 });
        gbc.writeMem(0xabc8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xabc8, gbc.sp());
        EXPECT(0x8372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8371));
        EXPECT(0xc0, gbc.readMem(0xabc8));
        EXPECT(0x93, gbc.readMem(0xabc9));
        // F5 0144
        gbc.setState(0xd075, 0xf5a0, 0x5f30, 0x5223, 0xb7f1, 0x73f7, 0x0, 0x1);
        gbc.writeMem(0xd075, { 0xf5 });
        gbc.writeMem(0xf59e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf59e, gbc.sp());
        EXPECT(0xd076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xd075));
        EXPECT(0x30, gbc.readMem(0xf59e));
        EXPECT(0x5f, gbc.readMem(0xf59f));
        // F5 0145
        gbc.setState(0x2046, 0xe013, 0x21c0, 0x3035, 0xffaf, 0x2762, 0x1, 0x1);
        gbc.writeMem(0x2046, { 0xf5 });
        gbc.writeMem(0xe011, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe011, gbc.sp());
        EXPECT(0x2047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xe011));
        EXPECT(0x21, gbc.readMem(0xe012));
        // F5 014A
        gbc.setState(0xe0a5, 0xe589, 0x51f0, 0xeef3, 0xcdd8, 0x251a, 0x1, 0x0);
        gbc.writeMem(0xe0a5, { 0xf5 });
        gbc.writeMem(0xe587, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe587, gbc.sp());
        EXPECT(0xe0a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xe0a5));
        EXPECT(0xf0, gbc.readMem(0xe587));
        EXPECT(0x51, gbc.readMem(0xe588));
        // F5 014C
        gbc.setState(0xd11d, 0x80d2, 0x10f0, 0xcbaa, 0xa005, 0x55d4, 0x0, 0x1);
        gbc.writeMem(0x80d0, { 0x0, 0x0 });
        gbc.writeMem(0xd11d, { 0xf5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x80d0, gbc.sp());
        EXPECT(0xd11e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x80d0));
        EXPECT(0x10, gbc.readMem(0x80d1));
        EXPECT(0xf5, gbc.readMem(0xd11d));
        // F5 014E
        gbc.setState(0xd0c1, 0xda7c, 0xad30, 0xfea7, 0x70b8, 0xbc6a, 0x0, 0x0);
        gbc.writeMem(0xd0c1, { 0xf5 });
        gbc.writeMem(0xda7a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xda7a, gbc.sp());
        EXPECT(0xd0c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xd0c1));
        EXPECT(0x30, gbc.readMem(0xda7a));
        EXPECT(0xad, gbc.readMem(0xda7b));
        // F5 0151
        gbc.setState(0x6060, 0xa286, 0xe070, 0xa075, 0xebf6, 0x6ee0, 0x1, 0x1);
        gbc.writeMem(0x6060, { 0xf5 });
        gbc.writeMem(0xa284, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa284, gbc.sp());
        EXPECT(0x6061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xa284));
        EXPECT(0xe0, gbc.readMem(0xa285));
        // F5 0156
        gbc.setState(0xa107, 0xa51c, 0xa30, 0xbb76, 0x7106, 0x14cd, 0x0, 0x0);
        gbc.writeMem(0xa107, { 0xf5 });
        gbc.writeMem(0xa51a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa51a, gbc.sp());
        EXPECT(0xa108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xa107));
        EXPECT(0x30, gbc.readMem(0xa51a));
        EXPECT(0xa, gbc.readMem(0xa51b));
        // F5 0158
        gbc.setState(0x68e6, 0xc591, 0xdeb0, 0xa716, 0xa2e3, 0xc49d, 0x1, 0x1);
        gbc.writeMem(0x68e6, { 0xf5 });
        gbc.writeMem(0xc58f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc58f, gbc.sp());
        EXPECT(0x68e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc58f));
        EXPECT(0xde, gbc.readMem(0xc590));
        // F5 015B
        gbc.setState(0xef76, 0xc525, 0x5f70, 0x9dec, 0x8f2f, 0x40cf, 0x0, 0x0);
        gbc.writeMem(0xc523, { 0x0, 0x0 });
        gbc.writeMem(0xef76, { 0xf5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc523, gbc.sp());
        EXPECT(0xef77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xc523));
        EXPECT(0x5f, gbc.readMem(0xc524));
        EXPECT(0xf5, gbc.readMem(0xef76));
        // F5 015C
        gbc.setState(0x6caa, 0x9776, 0x96d0, 0x73d4, 0xb7cd, 0x45c7, 0x1, 0x0);
        gbc.writeMem(0x6caa, { 0xf5 });
        gbc.writeMem(0x9774, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9774, gbc.sp());
        EXPECT(0x6cab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9774));
        EXPECT(0x96, gbc.readMem(0x9775));
        // F5 015D
        gbc.setState(0xb64d, 0x94d2, 0x2300, 0x7ca0, 0x73d1, 0xe485, 0x1, 0x0);
        gbc.writeMem(0x94d0, { 0x0, 0x0 });
        gbc.writeMem(0xb64d, { 0xf5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x94d0, gbc.sp());
        EXPECT(0xb64e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x94d0));
        EXPECT(0x23, gbc.readMem(0x94d1));
        EXPECT(0xf5, gbc.readMem(0xb64d));
        // F5 0162
        gbc.setState(0x1de4, 0xe63e, 0xa9f0, 0x84e1, 0xed89, 0xd69a, 0x0, 0x1);
        gbc.writeMem(0x1de4, { 0xf5 });
        gbc.writeMem(0xe63c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe63c, gbc.sp());
        EXPECT(0x1de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe63c));
        EXPECT(0xa9, gbc.readMem(0xe63d));
        // F5 0163
        gbc.setState(0xc1f0, 0xa699, 0x5ef0, 0x7b7f, 0xee86, 0xb31c, 0x0, 0x0);
        gbc.writeMem(0xa697, { 0x0, 0x0 });
        gbc.writeMem(0xc1f0, { 0xf5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa697, gbc.sp());
        EXPECT(0xc1f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa697));
        EXPECT(0x5e, gbc.readMem(0xa698));
        EXPECT(0xf5, gbc.readMem(0xc1f0));
        // F5 0167
        gbc.setState(0x5bfa, 0xa978, 0x1740, 0xcb3e, 0xc344, 0xdebc, 0x1, 0x1);
        gbc.writeMem(0x5bfa, { 0xf5 });
        gbc.writeMem(0xa976, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa976, gbc.sp());
        EXPECT(0x5bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa976));
        EXPECT(0x17, gbc.readMem(0xa977));
        // F5 0169
        gbc.setState(0xd75f, 0xf38b, 0xc980, 0x3402, 0xf3c6, 0x176a, 0x0, 0x1);
        gbc.writeMem(0xd75f, { 0xf5 });
        gbc.writeMem(0xf389, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf389, gbc.sp());
        EXPECT(0xd760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xd75f));
        EXPECT(0x80, gbc.readMem(0xf389));
        EXPECT(0xc9, gbc.readMem(0xf38a));
        // F5 016A
        gbc.setState(0x6876, 0xa1f2, 0xade0, 0x5fd1, 0x88b, 0xc176, 0x1, 0x0);
        gbc.writeMem(0x6876, { 0xf5 });
        gbc.writeMem(0xa1f0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa1f0, gbc.sp());
        EXPECT(0x6877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa1f0));
        EXPECT(0xad, gbc.readMem(0xa1f1));
        // F5 016F
        gbc.setState(0x8068, 0xc535, 0xe820, 0xfca2, 0x8f76, 0xf34a, 0x1, 0x1);
        gbc.writeMem(0x8068, { 0xf5 });
        gbc.writeMem(0xc533, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc533, gbc.sp());
        EXPECT(0x8069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8068));
        EXPECT(0x20, gbc.readMem(0xc533));
        EXPECT(0xe8, gbc.readMem(0xc534));
        // F5 0170
        gbc.setState(0x85cf, 0xe5e5, 0xca10, 0xe1ab, 0xb172, 0x768d, 0x1, 0x0);
        gbc.writeMem(0x85cf, { 0xf5 });
        gbc.writeMem(0xe5e3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe5e3, gbc.sp());
        EXPECT(0x85d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x85cf));
        EXPECT(0x10, gbc.readMem(0xe5e3));
        EXPECT(0xca, gbc.readMem(0xe5e4));
        // F5 0176
        gbc.setState(0x9073, 0xe298, 0x2cf0, 0xb435, 0x5808, 0xfdd2, 0x0, 0x0);
        gbc.writeMem(0x9073, { 0xf5 });
        gbc.writeMem(0xe296, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe296, gbc.sp());
        EXPECT(0x9074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x9073));
        EXPECT(0xf0, gbc.readMem(0xe296));
        EXPECT(0x2c, gbc.readMem(0xe297));
        // F5 0178
        gbc.setState(0x76b0, 0x8b19, 0xb310, 0xaaa7, 0x8e0b, 0xaa9c, 0x1, 0x1);
        gbc.writeMem(0x76b0, { 0xf5 });
        gbc.writeMem(0x8b17, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8b17, gbc.sp());
        EXPECT(0x76b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8b17));
        EXPECT(0xb3, gbc.readMem(0x8b18));
        // F5 0179
        gbc.setState(0xc7eb, 0xebd7, 0xc850, 0xf245, 0xcfe, 0xf29e, 0x0, 0x0);
        gbc.writeMem(0xc7eb, { 0xf5 });
        gbc.writeMem(0xebd5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xebd5, gbc.sp());
        EXPECT(0xc7ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xc7eb));
        EXPECT(0x50, gbc.readMem(0xebd5));
        EXPECT(0xc8, gbc.readMem(0xebd6));
        // F5 017B
        gbc.setState(0xb21a, 0xe0d1, 0xcee0, 0x2151, 0x2f0d, 0xcc94, 0x1, 0x1);
        gbc.writeMem(0xb21a, { 0xf5 });
        gbc.writeMem(0xe0cf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe0cf, gbc.sp());
        EXPECT(0xb21b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb21a));
        EXPECT(0xe0, gbc.readMem(0xe0cf));
        EXPECT(0xce, gbc.readMem(0xe0d0));
        // F5 017E
        gbc.setState(0x62b7, 0xa679, 0x3f60, 0x6867, 0x94b, 0xef10, 0x0, 0x1);
        gbc.writeMem(0x62b7, { 0xf5 });
        gbc.writeMem(0xa677, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa677, gbc.sp());
        EXPECT(0x62b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xa677));
        EXPECT(0x3f, gbc.readMem(0xa678));
        // F5 017F
        gbc.setState(0x5b53, 0xa4a0, 0x7380, 0x751b, 0x97a3, 0x94f0, 0x0, 0x1);
        gbc.writeMem(0x5b53, { 0xf5 });
        gbc.writeMem(0xa49e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa49e, gbc.sp());
        EXPECT(0x5b54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa49e));
        EXPECT(0x73, gbc.readMem(0xa49f));
        // F5 0180
        gbc.setState(0x3a7e, 0xdaf0, 0x80f0, 0x2463, 0x597, 0x7e17, 0x1, 0x1);
        gbc.writeMem(0x3a7e, { 0xf5 });
        gbc.writeMem(0xdaee, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdaee, gbc.sp());
        EXPECT(0x3a7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdaee));
        EXPECT(0x80, gbc.readMem(0xdaef));
        // F5 0182
        gbc.setState(0xdb9f, 0xa96c, 0x2b20, 0xf976, 0x6578, 0x4f3, 0x1, 0x1);
        gbc.writeMem(0xa96a, { 0x0, 0x0 });
        gbc.writeMem(0xdb9f, { 0xf5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa96a, gbc.sp());
        EXPECT(0xdba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa96a));
        EXPECT(0x2b, gbc.readMem(0xa96b));
        EXPECT(0xf5, gbc.readMem(0xdb9f));
        // F5 0183
        gbc.setState(0x11c4, 0xea29, 0xb50, 0xc324, 0x59a7, 0x97e4, 0x0, 0x1);
        gbc.writeMem(0x11c4, { 0xf5 });
        gbc.writeMem(0xea27, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xea27, gbc.sp());
        EXPECT(0x11c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xea27));
        EXPECT(0xb, gbc.readMem(0xea28));
        // F5 0184
        gbc.setState(0x3894, 0x9260, 0xd550, 0x279f, 0x5a2f, 0x1534, 0x1, 0x1);
        gbc.writeMem(0x3894, { 0xf5 });
        gbc.writeMem(0x925e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x925e, gbc.sp());
        EXPECT(0x3895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x925e));
        EXPECT(0xd5, gbc.readMem(0x925f));
        // F5 0186
        gbc.setState(0x2df4, 0x9a32, 0x8730, 0xde3, 0xa06e, 0x9c56, 0x0, 0x1);
        gbc.writeMem(0x2df4, { 0xf5 });
        gbc.writeMem(0x9a30, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9a30, gbc.sp());
        EXPECT(0x2df5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x9a30));
        EXPECT(0x87, gbc.readMem(0x9a31));
        // F5 0187
        gbc.setState(0x5888, 0xe677, 0xbfe0, 0x9633, 0xbca1, 0xcc54, 0x0, 0x0);
        gbc.writeMem(0x5888, { 0xf5 });
        gbc.writeMem(0xe675, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe675, gbc.sp());
        EXPECT(0x5889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe675));
        EXPECT(0xbf, gbc.readMem(0xe676));
        // F5 0188
        gbc.setState(0xfbb, 0xf6b4, 0x5510, 0xbb4b, 0xd331, 0xb6b8, 0x0, 0x0);
        gbc.writeMem(0xfbb, { 0xf5 });
        gbc.writeMem(0xf6b2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf6b2, gbc.sp());
        EXPECT(0xfbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xf6b2));
        EXPECT(0x55, gbc.readMem(0xf6b3));
        // F5 0189
        gbc.setState(0xa66f, 0x91d1, 0xe020, 0x3a64, 0xd74f, 0x3017, 0x0, 0x0);
        gbc.writeMem(0x91cf, { 0x0, 0x0 });
        gbc.writeMem(0xa66f, { 0xf5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x91cf, gbc.sp());
        EXPECT(0xa670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x91cf));
        EXPECT(0xe0, gbc.readMem(0x91d0));
        EXPECT(0xf5, gbc.readMem(0xa66f));
        // F5 018A
        gbc.setState(0x5a5b, 0xa8d1, 0xe890, 0xd002, 0xb117, 0x94b2, 0x1, 0x1);
        gbc.writeMem(0x5a5b, { 0xf5 });
        gbc.writeMem(0xa8cf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa8cf, gbc.sp());
        EXPECT(0x5a5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xa8cf));
        EXPECT(0xe8, gbc.readMem(0xa8d0));
        // F5 018B
        gbc.setState(0x8166, 0xfdc5, 0x6aa0, 0x74bf, 0x8aa8, 0x545c, 0x0, 0x0);
        gbc.writeMem(0x8166, { 0xf5 });
        gbc.writeMem(0xfdc3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfdc3, gbc.sp());
        EXPECT(0x8167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8166));
        EXPECT(0xa0, gbc.readMem(0xfdc3));
        EXPECT(0x6a, gbc.readMem(0xfdc4));
        // F5 018C
        gbc.setState(0xb673, 0xef11, 0xd660, 0xfcc, 0xf1e, 0x15fc, 0x1, 0x0);
        gbc.writeMem(0xb673, { 0xf5 });
        gbc.writeMem(0xef0f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xef0f, gbc.sp());
        EXPECT(0xb674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb673));
        EXPECT(0x60, gbc.readMem(0xef0f));
        EXPECT(0xd6, gbc.readMem(0xef10));
        // F5 018D
        gbc.setState(0x6e4, 0x91b2, 0x8750, 0xb7d, 0x82ef, 0xd8b8, 0x1, 0x1);
        gbc.writeMem(0x6e4, { 0xf5 });
        gbc.writeMem(0x91b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x91b0, gbc.sp());
        EXPECT(0x6e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x91b0));
        EXPECT(0x87, gbc.readMem(0x91b1));
        // F5 0190
        gbc.setState(0x2f3d, 0xe443, 0xf6f0, 0x44aa, 0x8334, 0x2ca7, 0x1, 0x0);
        gbc.writeMem(0x2f3d, { 0xf5 });
        gbc.writeMem(0xe441, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe441, gbc.sp());
        EXPECT(0x2f3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe441));
        EXPECT(0xf6, gbc.readMem(0xe442));
        // F5 0192
        gbc.setState(0x6c6c, 0xa76e, 0x7490, 0x3af5, 0x838e, 0x97d9, 0x0, 0x1);
        gbc.writeMem(0x6c6c, { 0xf5 });
        gbc.writeMem(0xa76c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa76c, gbc.sp());
        EXPECT(0x6c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xa76c));
        EXPECT(0x74, gbc.readMem(0xa76d));
        // F5 019B
        gbc.setState(0xbde0, 0xcb56, 0xee0, 0x9a78, 0x7840, 0x456, 0x0, 0x0);
        gbc.writeMem(0xbde0, { 0xf5 });
        gbc.writeMem(0xcb54, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcb54, gbc.sp());
        EXPECT(0xbde1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xbde0));
        EXPECT(0xe0, gbc.readMem(0xcb54));
        EXPECT(0xe, gbc.readMem(0xcb55));
        // F5 019D
        gbc.setState(0x5cc2, 0xadbf, 0x1a40, 0x4d53, 0xe02c, 0x3a10, 0x0, 0x0);
        gbc.writeMem(0x5cc2, { 0xf5 });
        gbc.writeMem(0xadbd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xadbd, gbc.sp());
        EXPECT(0x5cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xadbd));
        EXPECT(0x1a, gbc.readMem(0xadbe));
        // F5 01A1
        gbc.setState(0xea3, 0xb8a4, 0x94b0, 0xe85c, 0x7602, 0x7469, 0x1, 0x0);
        gbc.writeMem(0xea3, { 0xf5 });
        gbc.writeMem(0xb8a2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb8a2, gbc.sp());
        EXPECT(0xea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb8a2));
        EXPECT(0x94, gbc.readMem(0xb8a3));
        // F5 01A2
        gbc.setState(0x4f48, 0xbb74, 0x77c0, 0xd747, 0xf58a, 0x1a91, 0x1, 0x1);
        gbc.writeMem(0x4f48, { 0xf5 });
        gbc.writeMem(0xbb72, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbb72, gbc.sp());
        EXPECT(0x4f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xbb72));
        EXPECT(0x77, gbc.readMem(0xbb73));
        // F5 01A3
        gbc.setState(0xbf5a, 0x9a0a, 0x45c0, 0xfe87, 0x937c, 0xd6c3, 0x0, 0x1);
        gbc.writeMem(0x9a08, { 0x0, 0x0 });
        gbc.writeMem(0xbf5a, { 0xf5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9a08, gbc.sp());
        EXPECT(0xbf5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x9a08));
        EXPECT(0x45, gbc.readMem(0x9a09));
        EXPECT(0xf5, gbc.readMem(0xbf5a));
        // F5 01A4
        gbc.setState(0x713e, 0xdc1d, 0x4990, 0xa22c, 0x2af7, 0xae83, 0x0, 0x1);
        gbc.writeMem(0x713e, { 0xf5 });
        gbc.writeMem(0xdc1b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdc1b, gbc.sp());
        EXPECT(0x713f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xdc1b));
        EXPECT(0x49, gbc.readMem(0xdc1c));
        // F5 01A9
        gbc.setState(0x3ddb, 0xfefd, 0xead0, 0xf9df, 0x6928, 0xefa7, 0x1, 0x0);
        gbc.writeMem(0x3ddb, { 0xf5 });
        gbc.writeMem(0xfefb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xfefb, gbc.sp());
        EXPECT(0x3ddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xfefb));
        EXPECT(0xea, gbc.readMem(0xfefc));
        // F5 01AA
        gbc.setState(0xb007, 0xd8e6, 0x1f90, 0x186d, 0x500d, 0xc4c7, 0x1, 0x0);
        gbc.writeMem(0xb007, { 0xf5 });
        gbc.writeMem(0xd8e4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd8e4, gbc.sp());
        EXPECT(0xb008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb007));
        EXPECT(0x90, gbc.readMem(0xd8e4));
        EXPECT(0x1f, gbc.readMem(0xd8e5));
        // F5 01AD
        gbc.setState(0xb5f6, 0xd168, 0xfbe0, 0x62, 0x5b0f, 0x86bd, 0x0, 0x1);
        gbc.writeMem(0xb5f6, { 0xf5 });
        gbc.writeMem(0xd166, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd166, gbc.sp());
        EXPECT(0xb5f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb5f6));
        EXPECT(0xe0, gbc.readMem(0xd166));
        EXPECT(0xfb, gbc.readMem(0xd167));
        // F5 01AE
        gbc.setState(0x3280, 0x91b5, 0x9e70, 0xf7a9, 0xeb87, 0x474a, 0x1, 0x0);
        gbc.writeMem(0x3280, { 0xf5 });
        gbc.writeMem(0x91b3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x91b3, gbc.sp());
        EXPECT(0x3281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x91b3));
        EXPECT(0x9e, gbc.readMem(0x91b4));
        // F5 01B2
        gbc.setState(0xdc3b, 0xf023, 0xb3f0, 0x6f64, 0xf816, 0xc082, 0x1, 0x0);
        gbc.writeMem(0xdc3b, { 0xf5 });
        gbc.writeMem(0xf021, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf021, gbc.sp());
        EXPECT(0xdc3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xdc3b));
        EXPECT(0xf0, gbc.readMem(0xf021));
        EXPECT(0xb3, gbc.readMem(0xf022));
        // F5 01B3
        gbc.setState(0x92, 0xa019, 0xf460, 0x4f4, 0x665c, 0x6c77, 0x1, 0x0);
        gbc.writeMem(0x92, { 0xf5 });
        gbc.writeMem(0xa017, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa017, gbc.sp());
        EXPECT(0x93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xa017));
        EXPECT(0xf4, gbc.readMem(0xa018));
        // F5 01B4
        gbc.setState(0xe00f, 0xebe8, 0x4f60, 0x114c, 0x1844, 0x7363, 0x1, 0x0);
        gbc.writeMem(0xe00f, { 0xf5 });
        gbc.writeMem(0xebe6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xebe6, gbc.sp());
        EXPECT(0xe010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xe00f));
        EXPECT(0x60, gbc.readMem(0xebe6));
        EXPECT(0x4f, gbc.readMem(0xebe7));
        // F5 01B5
        gbc.setState(0xd427, 0xb5ca, 0x1380, 0x9787, 0x8e9e, 0x14b6, 0x0, 0x1);
        gbc.writeMem(0xb5c8, { 0x0, 0x0 });
        gbc.writeMem(0xd427, { 0xf5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb5c8, gbc.sp());
        EXPECT(0xd428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb5c8));
        EXPECT(0x13, gbc.readMem(0xb5c9));
        EXPECT(0xf5, gbc.readMem(0xd427));
        // F5 01B7
        gbc.setState(0x51a3, 0xf1bd, 0xecb0, 0xeaa3, 0x9c5e, 0x9496, 0x1, 0x0);
        gbc.writeMem(0x51a3, { 0xf5 });
        gbc.writeMem(0xf1bb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf1bb, gbc.sp());
        EXPECT(0x51a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xf1bb));
        EXPECT(0xec, gbc.readMem(0xf1bc));
        // F5 01B8
        gbc.setState(0x8ef1, 0xe87c, 0x1380, 0x2477, 0x1498, 0xd952, 0x0, 0x0);
        gbc.writeMem(0x8ef1, { 0xf5 });
        gbc.writeMem(0xe87a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe87a, gbc.sp());
        EXPECT(0x8ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8ef1));
        EXPECT(0x80, gbc.readMem(0xe87a));
        EXPECT(0x13, gbc.readMem(0xe87b));
        // F5 01BA
        gbc.setState(0xd8f3, 0xf3c4, 0xc970, 0xcec7, 0x89c9, 0x6ddb, 0x0, 0x0);
        gbc.writeMem(0xd8f3, { 0xf5 });
        gbc.writeMem(0xf3c2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf3c2, gbc.sp());
        EXPECT(0xd8f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xd8f3));
        EXPECT(0x70, gbc.readMem(0xf3c2));
        EXPECT(0xc9, gbc.readMem(0xf3c3));
        // F5 01BE
        gbc.setState(0xcb1, 0xe943, 0x7c20, 0x1ea4, 0xe8e9, 0x6938, 0x1, 0x1);
        gbc.writeMem(0xcb1, { 0xf5 });
        gbc.writeMem(0xe941, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe941, gbc.sp());
        EXPECT(0xcb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe941));
        EXPECT(0x7c, gbc.readMem(0xe942));
        // F5 01C3
        gbc.setState(0x8b70, 0x9984, 0xf0d0, 0xfce0, 0xf57, 0x7024, 0x1, 0x0);
        gbc.writeMem(0x8b70, { 0xf5 });
        gbc.writeMem(0x9982, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9982, gbc.sp());
        EXPECT(0x8b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8b70));
        EXPECT(0xd0, gbc.readMem(0x9982));
        EXPECT(0xf0, gbc.readMem(0x9983));
        // F5 01C6
        gbc.setState(0xacb2, 0x9a54, 0x3e80, 0x20f7, 0x70b4, 0x5201, 0x0, 0x1);
        gbc.writeMem(0x9a52, { 0x0, 0x0 });
        gbc.writeMem(0xacb2, { 0xf5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9a52, gbc.sp());
        EXPECT(0xacb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9a52));
        EXPECT(0x3e, gbc.readMem(0x9a53));
        EXPECT(0xf5, gbc.readMem(0xacb2));
        // F5 01C7
        gbc.setState(0x9c1e, 0xe556, 0x25e0, 0x66dc, 0x719d, 0x6753, 0x1, 0x1);
        gbc.writeMem(0x9c1e, { 0xf5 });
        gbc.writeMem(0xe554, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe554, gbc.sp());
        EXPECT(0x9c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x9c1e));
        EXPECT(0xe0, gbc.readMem(0xe554));
        EXPECT(0x25, gbc.readMem(0xe555));
        // F5 01C9
        gbc.setState(0x3cb2, 0xe394, 0xc970, 0x978d, 0xd15c, 0xd4f5, 0x1, 0x0);
        gbc.writeMem(0x3cb2, { 0xf5 });
        gbc.writeMem(0xe392, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe392, gbc.sp());
        EXPECT(0x3cb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xe392));
        EXPECT(0xc9, gbc.readMem(0xe393));
        // F5 01CE
        gbc.setState(0x6c7f, 0xbca0, 0x26c0, 0xadf1, 0xfd4, 0x3cf2, 0x0, 0x0);
        gbc.writeMem(0x6c7f, { 0xf5 });
        gbc.writeMem(0xbc9e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xbc9e, gbc.sp());
        EXPECT(0x6c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xbc9e));
        EXPECT(0x26, gbc.readMem(0xbc9f));
        // F5 01D5
        gbc.setState(0xcc6f, 0x8bd9, 0xc770, 0x8f95, 0xaff7, 0x6291, 0x1, 0x1);
        gbc.writeMem(0x8bd7, { 0x0, 0x0 });
        gbc.writeMem(0xcc6f, { 0xf5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8bd7, gbc.sp());
        EXPECT(0xcc70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x8bd7));
        EXPECT(0xc7, gbc.readMem(0x8bd8));
        EXPECT(0xf5, gbc.readMem(0xcc6f));
        // F5 01D8
        gbc.setState(0x54a8, 0xb40f, 0x42c0, 0x5ce, 0xeea5, 0x1fb0, 0x1, 0x1);
        gbc.writeMem(0x54a8, { 0xf5 });
        gbc.writeMem(0xb40d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb40d, gbc.sp());
        EXPECT(0x54a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xb40d));
        EXPECT(0x42, gbc.readMem(0xb40e));
        // F5 01DA
        gbc.setState(0xadc3, 0x8ede, 0x3c50, 0x2fc1, 0x6d40, 0x9fec, 0x0, 0x0);
        gbc.writeMem(0x8edc, { 0x0, 0x0 });
        gbc.writeMem(0xadc3, { 0xf5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8edc, gbc.sp());
        EXPECT(0xadc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8edc));
        EXPECT(0x3c, gbc.readMem(0x8edd));
        EXPECT(0xf5, gbc.readMem(0xadc3));
        // F5 01DB
        gbc.setState(0x8f5d, 0xe974, 0x3b30, 0xb7ef, 0x2e54, 0x6d21, 0x1, 0x1);
        gbc.writeMem(0x8f5d, { 0xf5 });
        gbc.writeMem(0xe972, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe972, gbc.sp());
        EXPECT(0x8f5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8f5d));
        EXPECT(0x30, gbc.readMem(0xe972));
        EXPECT(0x3b, gbc.readMem(0xe973));
        // F5 01DE
        gbc.setState(0x5294, 0x93d3, 0x5700, 0xcd49, 0x7662, 0x48bc, 0x0, 0x1);
        gbc.writeMem(0x5294, { 0xf5 });
        gbc.writeMem(0x93d1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x93d1, gbc.sp());
        EXPECT(0x5295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x93d1));
        EXPECT(0x57, gbc.readMem(0x93d2));
        // F5 01E3
        gbc.setState(0xd63, 0xb759, 0x7020, 0xa182, 0x1165, 0xd7be, 0x0, 0x0);
        gbc.writeMem(0xd63, { 0xf5 });
        gbc.writeMem(0xb757, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb757, gbc.sp());
        EXPECT(0xd64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb757));
        EXPECT(0x70, gbc.readMem(0xb758));
        // F5 01E7
        gbc.setState(0xa19f, 0x98c2, 0xdfa0, 0x3593, 0xf5ad, 0x7bae, 0x0, 0x1);
        gbc.writeMem(0x98c0, { 0x0, 0x0 });
        gbc.writeMem(0xa19f, { 0xf5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x98c0, gbc.sp());
        EXPECT(0xa1a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x98c0));
        EXPECT(0xdf, gbc.readMem(0x98c1));
        EXPECT(0xf5, gbc.readMem(0xa19f));
        // F5 01E9
        gbc.setState(0x5353, 0x9f89, 0x5ed0, 0x6c26, 0x20a5, 0x6f8e, 0x0, 0x0);
        gbc.writeMem(0x5353, { 0xf5 });
        gbc.writeMem(0x9f87, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9f87, gbc.sp());
        EXPECT(0x5354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9f87));
        EXPECT(0x5e, gbc.readMem(0x9f88));
        // F5 01EC
        gbc.setState(0x836a, 0xdee7, 0xa420, 0xa0c1, 0xcc76, 0xb89c, 0x0, 0x0);
        gbc.writeMem(0x836a, { 0xf5 });
        gbc.writeMem(0xdee5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdee5, gbc.sp());
        EXPECT(0x836b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x836a));
        EXPECT(0x20, gbc.readMem(0xdee5));
        EXPECT(0xa4, gbc.readMem(0xdee6));
        // F5 01F1
        gbc.setState(0x51ea, 0xd389, 0xe8f0, 0xbc6b, 0x338f, 0xff23, 0x1, 0x1);
        gbc.writeMem(0x51ea, { 0xf5 });
        gbc.writeMem(0xd387, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd387, gbc.sp());
        EXPECT(0x51eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd387));
        EXPECT(0xe8, gbc.readMem(0xd388));
        // F5 01F6
        gbc.setState(0x4f93, 0xd5cc, 0xfc0, 0x3d0d, 0xaad8, 0xcc5a, 0x0, 0x1);
        gbc.writeMem(0x4f93, { 0xf5 });
        gbc.writeMem(0xd5ca, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd5ca, gbc.sp());
        EXPECT(0x4f94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xd5ca));
        EXPECT(0xf, gbc.readMem(0xd5cb));
        // F5 01F7
        gbc.setState(0xeba2, 0x877b, 0x19f0, 0xa9e4, 0x5c0b, 0xeb48, 0x0, 0x1);
        gbc.writeMem(0x8779, { 0x0, 0x0 });
        gbc.writeMem(0xeba2, { 0xf5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8779, gbc.sp());
        EXPECT(0xeba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8779));
        EXPECT(0x19, gbc.readMem(0x877a));
        EXPECT(0xf5, gbc.readMem(0xeba2));
        // F5 01F8
        gbc.setState(0x15bd, 0xf4f2, 0xf270, 0xe60, 0xcfb6, 0x9adf, 0x1, 0x1);
        gbc.writeMem(0x15bd, { 0xf5 });
        gbc.writeMem(0xf4f0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf4f0, gbc.sp());
        EXPECT(0x15be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xf4f0));
        EXPECT(0xf2, gbc.readMem(0xf4f1));
        // F5 01FE
        gbc.setState(0x5650, 0xa07c, 0xa800, 0x93f3, 0xb271, 0x6ff9, 0x1, 0x1);
        gbc.writeMem(0x5650, { 0xf5 });
        gbc.writeMem(0xa07a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa07a, gbc.sp());
        EXPECT(0x5651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa07a));
        EXPECT(0xa8, gbc.readMem(0xa07b));
        // F5 01FF
        gbc.setState(0x2cab, 0xe31f, 0xdf40, 0x863c, 0x981f, 0x1b30, 0x0, 0x0);
        gbc.writeMem(0x2cab, { 0xf5 });
        gbc.writeMem(0xe31d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe31d, gbc.sp());
        EXPECT(0x2cac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe31d));
        EXPECT(0xdf, gbc.readMem(0xe31e));
        // F5 0201
        gbc.setState(0x7d4e, 0xf12e, 0x3f30, 0x2314, 0xfa2a, 0xc91f, 0x0, 0x1);
        gbc.writeMem(0x7d4e, { 0xf5 });
        gbc.writeMem(0xf12c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf12c, gbc.sp());
        EXPECT(0x7d4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xf12c));
        EXPECT(0x3f, gbc.readMem(0xf12d));
        // F5 0202
        gbc.setState(0x1b05, 0xdfcb, 0xf4f0, 0x5cd3, 0x4f40, 0xbc2c, 0x1, 0x0);
        gbc.writeMem(0x1b05, { 0xf5 });
        gbc.writeMem(0xdfc9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xdfc9, gbc.sp());
        EXPECT(0x1b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdfc9));
        EXPECT(0xf4, gbc.readMem(0xdfca));
        // F5 0203
        gbc.setState(0xd558, 0x92ad, 0xc80, 0xefa6, 0xe89e, 0x35b2, 0x0, 0x1);
        gbc.writeMem(0x92ab, { 0x0, 0x0 });
        gbc.writeMem(0xd558, { 0xf5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x92ab, gbc.sp());
        EXPECT(0xd559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x92ab));
        EXPECT(0xc, gbc.readMem(0x92ac));
        EXPECT(0xf5, gbc.readMem(0xd558));
        // F5 0204
        gbc.setState(0x4a57, 0x94be, 0x4b40, 0x89b8, 0x1c0d, 0x6d85, 0x0, 0x0);
        gbc.writeMem(0x4a57, { 0xf5 });
        gbc.writeMem(0x94bc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x94bc, gbc.sp());
        EXPECT(0x4a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x94bc));
        EXPECT(0x4b, gbc.readMem(0x94bd));
        // F5 0208
        gbc.setState(0xaead, 0x8b33, 0xa560, 0x576f, 0x5b43, 0x47a1, 0x0, 0x0);
        gbc.writeMem(0x8b31, { 0x0, 0x0 });
        gbc.writeMem(0xaead, { 0xf5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8b31, gbc.sp());
        EXPECT(0xaeae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x8b31));
        EXPECT(0xa5, gbc.readMem(0x8b32));
        EXPECT(0xf5, gbc.readMem(0xaead));
        // F5 020A
        gbc.setState(0xdd0, 0xc3da, 0xd190, 0x6294, 0xb2c4, 0x164, 0x1, 0x0);
        gbc.writeMem(0xdd0, { 0xf5 });
        gbc.writeMem(0xc3d8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc3d8, gbc.sp());
        EXPECT(0xdd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xc3d8));
        EXPECT(0xd1, gbc.readMem(0xc3d9));
        // F5 020B
        gbc.setState(0xe1e2, 0xd360, 0x3f00, 0x1ffd, 0x6bee, 0x6911, 0x1, 0x1);
        gbc.writeMem(0xd35e, { 0x0, 0x0 });
        gbc.writeMem(0xe1e2, { 0xf5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd35e, gbc.sp());
        EXPECT(0xe1e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd35e));
        EXPECT(0x3f, gbc.readMem(0xd35f));
        EXPECT(0xf5, gbc.readMem(0xe1e2));
        // F5 020D
        gbc.setState(0x687e, 0xacd9, 0x93b0, 0xffde, 0xd8d1, 0xe036, 0x0, 0x1);
        gbc.writeMem(0x687e, { 0xf5 });
        gbc.writeMem(0xacd7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xacd7, gbc.sp());
        EXPECT(0x687f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xacd7));
        EXPECT(0x93, gbc.readMem(0xacd8));
        // F5 020E
        gbc.setState(0x7b94, 0xa600, 0xbcc0, 0xda73, 0x1420, 0x5030, 0x1, 0x0);
        gbc.writeMem(0x7b94, { 0xf5 });
        gbc.writeMem(0xa5fe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa5fe, gbc.sp());
        EXPECT(0x7b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xa5fe));
        EXPECT(0xbc, gbc.readMem(0xa5ff));
        // F5 020F
        gbc.setState(0xbcb7, 0xdac1, 0x3740, 0xd7df, 0xf5ac, 0xee69, 0x1, 0x0);
        gbc.writeMem(0xbcb7, { 0xf5 });
        gbc.writeMem(0xdabf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdabf, gbc.sp());
        EXPECT(0xbcb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xbcb7));
        EXPECT(0x40, gbc.readMem(0xdabf));
        EXPECT(0x37, gbc.readMem(0xdac0));
        // F5 0217
        gbc.setState(0x3bbf, 0xf6ce, 0x6db0, 0xfdc3, 0x37a8, 0x9ab2, 0x1, 0x1);
        gbc.writeMem(0x3bbf, { 0xf5 });
        gbc.writeMem(0xf6cc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf6cc, gbc.sp());
        EXPECT(0x3bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xf6cc));
        EXPECT(0x6d, gbc.readMem(0xf6cd));
        // F5 0218
        gbc.setState(0xeb6b, 0xff36, 0xadb0, 0x312d, 0x5c2e, 0x7cb6, 0x0, 0x0);
        gbc.writeMem(0xeb6b, { 0xf5 });
        gbc.writeMem(0xff34, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xff34, gbc.sp());
        EXPECT(0xeb6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xeb6b));
        EXPECT(0xb0, gbc.readMem(0xff34));
        EXPECT(0xad, gbc.readMem(0xff35));
        // F5 021A
        gbc.setState(0xb072, 0xebd5, 0x6e30, 0xcfa, 0x1f3f, 0x6d45, 0x0, 0x1);
        gbc.writeMem(0xb072, { 0xf5 });
        gbc.writeMem(0xebd3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xebd3, gbc.sp());
        EXPECT(0xb073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb072));
        EXPECT(0x30, gbc.readMem(0xebd3));
        EXPECT(0x6e, gbc.readMem(0xebd4));
        // F5 021C
        gbc.setState(0xb873, 0xf777, 0xc4a0, 0xb748, 0xaa05, 0x154d, 0x1, 0x0);
        gbc.writeMem(0xb873, { 0xf5 });
        gbc.writeMem(0xf775, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf775, gbc.sp());
        EXPECT(0xb874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb873));
        EXPECT(0xa0, gbc.readMem(0xf775));
        EXPECT(0xc4, gbc.readMem(0xf776));
        // F5 021D
        gbc.setState(0x6626, 0xe896, 0x1f50, 0xd8d1, 0xec85, 0xcd9f, 0x1, 0x1);
        gbc.writeMem(0x6626, { 0xf5 });
        gbc.writeMem(0xe894, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe894, gbc.sp());
        EXPECT(0x6627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe894));
        EXPECT(0x1f, gbc.readMem(0xe895));
        // F5 021E
        gbc.setState(0xe259, 0xfa14, 0x1d0, 0xe5d8, 0x8a9d, 0x88cc, 0x0, 0x0);
        gbc.writeMem(0xe259, { 0xf5 });
        gbc.writeMem(0xfa12, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xfa12, gbc.sp());
        EXPECT(0xe25a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xe259));
        EXPECT(0xd0, gbc.readMem(0xfa12));
        EXPECT(0x1, gbc.readMem(0xfa13));
        // F5 0220
        gbc.setState(0x9517, 0x850a, 0x85b0, 0xdbb3, 0x4cee, 0xca70, 0x0, 0x1);
        gbc.writeMem(0x8508, { 0x0, 0x0 });
        gbc.writeMem(0x9517, { 0xf5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8508, gbc.sp());
        EXPECT(0x9518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8508));
        EXPECT(0x85, gbc.readMem(0x8509));
        EXPECT(0xf5, gbc.readMem(0x9517));
        // F5 0226
        gbc.setState(0x6273, 0xbf15, 0xd590, 0x3659, 0xe9e2, 0xbbb8, 0x1, 0x1);
        gbc.writeMem(0x6273, { 0xf5 });
        gbc.writeMem(0xbf13, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbf13, gbc.sp());
        EXPECT(0x6274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xbf13));
        EXPECT(0xd5, gbc.readMem(0xbf14));
        // F5 0227
        gbc.setState(0x7162, 0xf611, 0x8020, 0x1e8d, 0xdf60, 0xd159, 0x1, 0x0);
        gbc.writeMem(0x7162, { 0xf5 });
        gbc.writeMem(0xf60f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf60f, gbc.sp());
        EXPECT(0x7163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xf60f));
        EXPECT(0x80, gbc.readMem(0xf610));
        // F5 0228
        gbc.setState(0xd9d0, 0x8cdb, 0x970, 0xf826, 0x1c29, 0xeca6, 0x1, 0x1);
        gbc.writeMem(0x8cd9, { 0x0, 0x0 });
        gbc.writeMem(0xd9d0, { 0xf5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8cd9, gbc.sp());
        EXPECT(0xd9d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x8cd9));
        EXPECT(0x9, gbc.readMem(0x8cda));
        EXPECT(0xf5, gbc.readMem(0xd9d0));
        // F5 0229
        gbc.setState(0xb716, 0xb9a1, 0x54a0, 0xf103, 0x1f75, 0x516b, 0x0, 0x1);
        gbc.writeMem(0xb716, { 0xf5 });
        gbc.writeMem(0xb99f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb99f, gbc.sp());
        EXPECT(0xb717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb716));
        EXPECT(0xa0, gbc.readMem(0xb99f));
        EXPECT(0x54, gbc.readMem(0xb9a0));
        // F5 022C
        gbc.setState(0x6afb, 0xc660, 0x9270, 0xa683, 0xfbfc, 0x307b, 0x1, 0x1);
        gbc.writeMem(0x6afb, { 0xf5 });
        gbc.writeMem(0xc65e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc65e, gbc.sp());
        EXPECT(0x6afc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xc65e));
        EXPECT(0x92, gbc.readMem(0xc65f));
        // F5 022E
        gbc.setState(0x4690, 0xa766, 0x5bb0, 0x8493, 0xc5ef, 0x386f, 0x1, 0x0);
        gbc.writeMem(0x4690, { 0xf5 });
        gbc.writeMem(0xa764, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa764, gbc.sp());
        EXPECT(0x4691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa764));
        EXPECT(0x5b, gbc.readMem(0xa765));
        // F5 022F
        gbc.setState(0x1434, 0xe9a9, 0xea10, 0x91b6, 0x2917, 0x8286, 0x1, 0x1);
        gbc.writeMem(0x1434, { 0xf5 });
        gbc.writeMem(0xe9a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe9a7, gbc.sp());
        EXPECT(0x1435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe9a7));
        EXPECT(0xea, gbc.readMem(0xe9a8));
        // F5 0232
        gbc.setState(0xb, 0x95ff, 0xfd80, 0xb48f, 0xdb59, 0xdf71, 0x0, 0x0);
        gbc.writeMem(0xb, { 0xf5 });
        gbc.writeMem(0x95fd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x95fd, gbc.sp());
        EXPECT(0xc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x95fd));
        EXPECT(0xfd, gbc.readMem(0x95fe));
        // F5 0233
        gbc.setState(0x14bb, 0x94c7, 0x61e0, 0xd088, 0x3c27, 0x5a53, 0x1, 0x0);
        gbc.writeMem(0x14bb, { 0xf5 });
        gbc.writeMem(0x94c5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x94c5, gbc.sp());
        EXPECT(0x14bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x94c5));
        EXPECT(0x61, gbc.readMem(0x94c6));
        // F5 0236
        gbc.setState(0x8fa6, 0xb682, 0xfd50, 0x5ad8, 0x77f0, 0xfa68, 0x1, 0x1);
        gbc.writeMem(0x8fa6, { 0xf5 });
        gbc.writeMem(0xb680, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb680, gbc.sp());
        EXPECT(0x8fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8fa6));
        EXPECT(0x50, gbc.readMem(0xb680));
        EXPECT(0xfd, gbc.readMem(0xb681));
        // F5 0237
        gbc.setState(0x2603, 0xbda6, 0x62c0, 0xfa7a, 0xcfc1, 0xe5a2, 0x1, 0x0);
        gbc.writeMem(0x2603, { 0xf5 });
        gbc.writeMem(0xbda4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbda4, gbc.sp());
        EXPECT(0x2604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xbda4));
        EXPECT(0x62, gbc.readMem(0xbda5));
        // F5 0238
        gbc.setState(0xa22c, 0x8fbb, 0xb40, 0x9cbe, 0x59de, 0xf217, 0x1, 0x0);
        gbc.writeMem(0x8fb9, { 0x0, 0x0 });
        gbc.writeMem(0xa22c, { 0xf5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8fb9, gbc.sp());
        EXPECT(0xa22d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8fb9));
        EXPECT(0xb, gbc.readMem(0x8fba));
        EXPECT(0xf5, gbc.readMem(0xa22c));
        // F5 023A
        gbc.setState(0x2d37, 0xccff, 0x4300, 0x90ef, 0x8865, 0xd55e, 0x0, 0x1);
        gbc.writeMem(0x2d37, { 0xf5 });
        gbc.writeMem(0xccfd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xccfd, gbc.sp());
        EXPECT(0x2d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xccfd));
        EXPECT(0x43, gbc.readMem(0xccfe));
        // F5 023B
        gbc.setState(0x5f4f, 0xfd5d, 0x9230, 0x1a54, 0x23c2, 0xbff2, 0x0, 0x1);
        gbc.writeMem(0x5f4f, { 0xf5 });
        gbc.writeMem(0xfd5b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfd5b, gbc.sp());
        EXPECT(0x5f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xfd5b));
        EXPECT(0x92, gbc.readMem(0xfd5c));
        // F5 023D
        gbc.setState(0xab6a, 0xb8a9, 0xd9a0, 0x437c, 0x91a1, 0x61c, 0x1, 0x1);
        gbc.writeMem(0xab6a, { 0xf5 });
        gbc.writeMem(0xb8a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb8a7, gbc.sp());
        EXPECT(0xab6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xab6a));
        EXPECT(0xa0, gbc.readMem(0xb8a7));
        EXPECT(0xd9, gbc.readMem(0xb8a8));
        // F5 023E
        gbc.setState(0xe52f, 0xd231, 0xaae0, 0x960, 0x32d7, 0xd863, 0x0, 0x1);
        gbc.writeMem(0xd22f, { 0x0, 0x0 });
        gbc.writeMem(0xe52f, { 0xf5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd22f, gbc.sp());
        EXPECT(0xe530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd22f));
        EXPECT(0xaa, gbc.readMem(0xd230));
        EXPECT(0xf5, gbc.readMem(0xe52f));
        // F5 023F
        gbc.setState(0xa0ac, 0xfbb1, 0x3310, 0xde26, 0x5468, 0xa87e, 0x1, 0x1);
        gbc.writeMem(0xa0ac, { 0xf5 });
        gbc.writeMem(0xfbaf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfbaf, gbc.sp());
        EXPECT(0xa0ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xa0ac));
        EXPECT(0x10, gbc.readMem(0xfbaf));
        EXPECT(0x33, gbc.readMem(0xfbb0));
        // F5 0241
        gbc.setState(0xe89c, 0xac06, 0xfa0, 0xce60, 0xc547, 0x60b2, 0x0, 0x1);
        gbc.writeMem(0xac04, { 0x0, 0x0 });
        gbc.writeMem(0xe89c, { 0xf5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xac04, gbc.sp());
        EXPECT(0xe89d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xac04));
        EXPECT(0xf, gbc.readMem(0xac05));
        EXPECT(0xf5, gbc.readMem(0xe89c));
        // F5 0242
        gbc.setState(0xc726, 0xeefd, 0xf370, 0x15e0, 0x630c, 0x5ea5, 0x0, 0x0);
        gbc.writeMem(0xc726, { 0xf5 });
        gbc.writeMem(0xeefb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xeefb, gbc.sp());
        EXPECT(0xc727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xc726));
        EXPECT(0x70, gbc.readMem(0xeefb));
        EXPECT(0xf3, gbc.readMem(0xeefc));
        // F5 0244
        gbc.setState(0x915b, 0x998c, 0xfb90, 0x80ea, 0xef6e, 0xe2a2, 0x0, 0x0);
        gbc.writeMem(0x915b, { 0xf5 });
        gbc.writeMem(0x998a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x998a, gbc.sp());
        EXPECT(0x915c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x915b));
        EXPECT(0x90, gbc.readMem(0x998a));
        EXPECT(0xfb, gbc.readMem(0x998b));
        // F5 0246
        gbc.setState(0x3f40, 0xf2e0, 0x7470, 0x2962, 0xd378, 0x239c, 0x1, 0x1);
        gbc.writeMem(0x3f40, { 0xf5 });
        gbc.writeMem(0xf2de, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf2de, gbc.sp());
        EXPECT(0x3f41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xf2de));
        EXPECT(0x74, gbc.readMem(0xf2df));
        // F5 0247
        gbc.setState(0x58b9, 0xe603, 0x80f0, 0xc701, 0x8128, 0x301, 0x1, 0x0);
        gbc.writeMem(0x58b9, { 0xf5 });
        gbc.writeMem(0xe601, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe601, gbc.sp());
        EXPECT(0x58ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe601));
        EXPECT(0x80, gbc.readMem(0xe602));
        // F5 0248
        gbc.setState(0x3cf5, 0xe968, 0x6440, 0xfd9a, 0xbd94, 0x7ab, 0x0, 0x0);
        gbc.writeMem(0x3cf5, { 0xf5 });
        gbc.writeMem(0xe966, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe966, gbc.sp());
        EXPECT(0x3cf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe966));
        EXPECT(0x64, gbc.readMem(0xe967));
        // F5 0249
        gbc.setState(0xbd41, 0xca67, 0xcb20, 0x82bc, 0xc969, 0x6583, 0x1, 0x1);
        gbc.writeMem(0xbd41, { 0xf5 });
        gbc.writeMem(0xca65, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xca65, gbc.sp());
        EXPECT(0xbd42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xbd41));
        EXPECT(0x20, gbc.readMem(0xca65));
        EXPECT(0xcb, gbc.readMem(0xca66));
        // F5 024A
        gbc.setState(0x9a66, 0x9669, 0x6490, 0xa086, 0x9eb9, 0x211e, 0x0, 0x1);
        gbc.writeMem(0x9667, { 0x0, 0x0 });
        gbc.writeMem(0x9a66, { 0xf5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9667, gbc.sp());
        EXPECT(0x9a67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x9667));
        EXPECT(0x64, gbc.readMem(0x9668));
        EXPECT(0xf5, gbc.readMem(0x9a66));
        // F5 024C
        gbc.setState(0xbc8b, 0x9aed, 0x1ea0, 0xfe5e, 0x81a9, 0xf247, 0x1, 0x0);
        gbc.writeMem(0x9aeb, { 0x0, 0x0 });
        gbc.writeMem(0xbc8b, { 0xf5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9aeb, gbc.sp());
        EXPECT(0xbc8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9aeb));
        EXPECT(0x1e, gbc.readMem(0x9aec));
        EXPECT(0xf5, gbc.readMem(0xbc8b));
        // F5 024D
        gbc.setState(0xc57d, 0xba32, 0x6270, 0x851b, 0x337f, 0x2d15, 0x1, 0x0);
        gbc.writeMem(0xba30, { 0x0, 0x0 });
        gbc.writeMem(0xc57d, { 0xf5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xba30, gbc.sp());
        EXPECT(0xc57e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xba30));
        EXPECT(0x62, gbc.readMem(0xba31));
        EXPECT(0xf5, gbc.readMem(0xc57d));
        // F5 0252
        gbc.setState(0x4ef4, 0xdb20, 0x36c0, 0xf3e9, 0xb186, 0xeb53, 0x0, 0x0);
        gbc.writeMem(0x4ef4, { 0xf5 });
        gbc.writeMem(0xdb1e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdb1e, gbc.sp());
        EXPECT(0x4ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xdb1e));
        EXPECT(0x36, gbc.readMem(0xdb1f));
        // F5 0254
        gbc.setState(0x6fc5, 0xcbd4, 0x9a0, 0x4342, 0xbce3, 0x6944, 0x0, 0x1);
        gbc.writeMem(0x6fc5, { 0xf5 });
        gbc.writeMem(0xcbd2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcbd2, gbc.sp());
        EXPECT(0x6fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xcbd2));
        EXPECT(0x9, gbc.readMem(0xcbd3));
        // F5 0256
        gbc.setState(0xde77, 0xedf2, 0xf770, 0xfa8d, 0xe18f, 0xf262, 0x1, 0x0);
        gbc.writeMem(0xde77, { 0xf5 });
        gbc.writeMem(0xedf0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xedf0, gbc.sp());
        EXPECT(0xde78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xde77));
        EXPECT(0x70, gbc.readMem(0xedf0));
        EXPECT(0xf7, gbc.readMem(0xedf1));
        // F5 0257
        gbc.setState(0xc2db, 0x8052, 0xcde0, 0x81f7, 0x1b1, 0x1ba4, 0x0, 0x1);
        gbc.writeMem(0x8050, { 0x0, 0x0 });
        gbc.writeMem(0xc2db, { 0xf5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8050, gbc.sp());
        EXPECT(0xc2dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8050));
        EXPECT(0xcd, gbc.readMem(0x8051));
        EXPECT(0xf5, gbc.readMem(0xc2db));
        // F5 025C
        gbc.setState(0x6b8f, 0x9607, 0x5d40, 0xafc5, 0x9ded, 0xc3c1, 0x1, 0x1);
        gbc.writeMem(0x6b8f, { 0xf5 });
        gbc.writeMem(0x9605, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9605, gbc.sp());
        EXPECT(0x6b90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9605));
        EXPECT(0x5d, gbc.readMem(0x9606));
        // F5 025D
        gbc.setState(0x4379, 0x975b, 0x3c00, 0xf595, 0x673b, 0xacef, 0x1, 0x1);
        gbc.writeMem(0x4379, { 0xf5 });
        gbc.writeMem(0x9759, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9759, gbc.sp());
        EXPECT(0x437a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9759));
        EXPECT(0x3c, gbc.readMem(0x975a));
        // F5 025E
        gbc.setState(0xbc6, 0xb845, 0xee10, 0x5bea, 0x3761, 0x165f, 0x1, 0x1);
        gbc.writeMem(0xbc6, { 0xf5 });
        gbc.writeMem(0xb843, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb843, gbc.sp());
        EXPECT(0xbc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb843));
        EXPECT(0xee, gbc.readMem(0xb844));
        // F5 0260
        gbc.setState(0x9598, 0x9dc9, 0xc710, 0x7c82, 0x40f8, 0x3182, 0x1, 0x1);
        gbc.writeMem(0x9598, { 0xf5 });
        gbc.writeMem(0x9dc7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9dc7, gbc.sp());
        EXPECT(0x9599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x9598));
        EXPECT(0x10, gbc.readMem(0x9dc7));
        EXPECT(0xc7, gbc.readMem(0x9dc8));
        // F5 0261
        gbc.setState(0xcd1b, 0xdc62, 0xae20, 0xb944, 0x45d3, 0x223, 0x0, 0x0);
        gbc.writeMem(0xcd1b, { 0xf5 });
        gbc.writeMem(0xdc60, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xdc60, gbc.sp());
        EXPECT(0xcd1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xcd1b));
        EXPECT(0x20, gbc.readMem(0xdc60));
        EXPECT(0xae, gbc.readMem(0xdc61));
        // F5 0265
        gbc.setState(0x80a5, 0xce5b, 0x2fe0, 0x2c55, 0x4e86, 0xdec5, 0x1, 0x1);
        gbc.writeMem(0x80a5, { 0xf5 });
        gbc.writeMem(0xce59, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xce59, gbc.sp());
        EXPECT(0x80a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x80a5));
        EXPECT(0xe0, gbc.readMem(0xce59));
        EXPECT(0x2f, gbc.readMem(0xce5a));
        // F5 0269
        gbc.setState(0xec4f, 0xb5d1, 0x7e40, 0xfed8, 0x379a, 0x5723, 0x1, 0x0);
        gbc.writeMem(0xb5cf, { 0x0, 0x0 });
        gbc.writeMem(0xec4f, { 0xf5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb5cf, gbc.sp());
        EXPECT(0xec50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb5cf));
        EXPECT(0x7e, gbc.readMem(0xb5d0));
        EXPECT(0xf5, gbc.readMem(0xec4f));
        // F5 026A
        gbc.setState(0xca91, 0xebd2, 0xbb00, 0x7939, 0xaed8, 0xa973, 0x1, 0x0);
        gbc.writeMem(0xca91, { 0xf5 });
        gbc.writeMem(0xebd0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xebd0, gbc.sp());
        EXPECT(0xca92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xca91));
        EXPECT(0x0, gbc.readMem(0xebd0));
        EXPECT(0xbb, gbc.readMem(0xebd1));
        // F5 026D
        gbc.setState(0xc593, 0xbc2a, 0xa470, 0xfabd, 0x98e, 0x94cf, 0x1, 0x0);
        gbc.writeMem(0xbc28, { 0x0, 0x0 });
        gbc.writeMem(0xc593, { 0xf5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbc28, gbc.sp());
        EXPECT(0xc594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xbc28));
        EXPECT(0xa4, gbc.readMem(0xbc29));
        EXPECT(0xf5, gbc.readMem(0xc593));
        // F5 026E
        gbc.setState(0x1136, 0xfcc4, 0x7050, 0xe57f, 0xf5e9, 0xa074, 0x1, 0x0);
        gbc.writeMem(0x1136, { 0xf5 });
        gbc.writeMem(0xfcc2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfcc2, gbc.sp());
        EXPECT(0x1137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xfcc2));
        EXPECT(0x70, gbc.readMem(0xfcc3));
        // F5 026F
        gbc.setState(0x35ab, 0x9b63, 0xf890, 0xcd52, 0x87d9, 0x2f79, 0x1, 0x0);
        gbc.writeMem(0x35ab, { 0xf5 });
        gbc.writeMem(0x9b61, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9b61, gbc.sp());
        EXPECT(0x35ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x9b61));
        EXPECT(0xf8, gbc.readMem(0x9b62));
        // F5 0271
        gbc.setState(0xa135, 0xa397, 0xb280, 0x6eac, 0xcd05, 0xe50a, 0x1, 0x1);
        gbc.writeMem(0xa135, { 0xf5 });
        gbc.writeMem(0xa395, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa395, gbc.sp());
        EXPECT(0xa136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xa135));
        EXPECT(0x80, gbc.readMem(0xa395));
        EXPECT(0xb2, gbc.readMem(0xa396));
        // F5 0273
        gbc.setState(0x439a, 0x8aaf, 0xfd0, 0xae02, 0xf98b, 0x6dee, 0x0, 0x1);
        gbc.writeMem(0x439a, { 0xf5 });
        gbc.writeMem(0x8aad, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8aad, gbc.sp());
        EXPECT(0x439b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8aad));
        EXPECT(0xf, gbc.readMem(0x8aae));
        // F5 0275
        gbc.setState(0x2b05, 0x8062, 0xf5b0, 0x563b, 0x2c20, 0x224f, 0x1, 0x1);
        gbc.writeMem(0x2b05, { 0xf5 });
        gbc.writeMem(0x8060, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8060, gbc.sp());
        EXPECT(0x2b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8060));
        EXPECT(0xf5, gbc.readMem(0x8061));
        // F5 0276
        gbc.setState(0xc0f3, 0xb3a4, 0x150, 0xea79, 0xca34, 0x49c2, 0x0, 0x1);
        gbc.writeMem(0xb3a2, { 0x0, 0x0 });
        gbc.writeMem(0xc0f3, { 0xf5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb3a2, gbc.sp());
        EXPECT(0xc0f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb3a2));
        EXPECT(0x1, gbc.readMem(0xb3a3));
        EXPECT(0xf5, gbc.readMem(0xc0f3));
        // F5 0278
        gbc.setState(0xcd48, 0xcf6a, 0x6b30, 0x9273, 0x3a77, 0x15e, 0x0, 0x1);
        gbc.writeMem(0xcd48, { 0xf5 });
        gbc.writeMem(0xcf68, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcf68, gbc.sp());
        EXPECT(0xcd49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xcd48));
        EXPECT(0x30, gbc.readMem(0xcf68));
        EXPECT(0x6b, gbc.readMem(0xcf69));
        // F5 0279
        gbc.setState(0xcf61, 0x892b, 0x67b0, 0x5a35, 0x7afa, 0x8fcf, 0x0, 0x1);
        gbc.writeMem(0x8929, { 0x0, 0x0 });
        gbc.writeMem(0xcf61, { 0xf5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8929, gbc.sp());
        EXPECT(0xcf62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8929));
        EXPECT(0x67, gbc.readMem(0x892a));
        EXPECT(0xf5, gbc.readMem(0xcf61));
        // F5 027A
        gbc.setState(0x6a15, 0xab4a, 0xbec0, 0xf323, 0xea3, 0xacfd, 0x1, 0x1);
        gbc.writeMem(0x6a15, { 0xf5 });
        gbc.writeMem(0xab48, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xab48, gbc.sp());
        EXPECT(0x6a16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xab48));
        EXPECT(0xbe, gbc.readMem(0xab49));
        // F5 027C
        gbc.setState(0x7ad4, 0xeb45, 0x4b90, 0x9abf, 0xbaba, 0xd2d4, 0x1, 0x1);
        gbc.writeMem(0x7ad4, { 0xf5 });
        gbc.writeMem(0xeb43, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xeb43, gbc.sp());
        EXPECT(0x7ad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xeb43));
        EXPECT(0x4b, gbc.readMem(0xeb44));
        // F5 027D
        gbc.setState(0x6188, 0xa4bd, 0xa150, 0x44d5, 0x2cbf, 0x168a, 0x1, 0x0);
        gbc.writeMem(0x6188, { 0xf5 });
        gbc.writeMem(0xa4bb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa4bb, gbc.sp());
        EXPECT(0x6189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa4bb));
        EXPECT(0xa1, gbc.readMem(0xa4bc));
        // F5 027F
        gbc.setState(0xe2d9, 0xe7f8, 0xd300, 0x49b3, 0x6df3, 0x25b1, 0x0, 0x1);
        gbc.writeMem(0xe2d9, { 0xf5 });
        gbc.writeMem(0xe7f6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe7f6, gbc.sp());
        EXPECT(0xe2da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xe2d9));
        EXPECT(0x0, gbc.readMem(0xe7f6));
        EXPECT(0xd3, gbc.readMem(0xe7f7));
        // F5 0280
        gbc.setState(0x844, 0x97e4, 0xb520, 0x6fbf, 0x7b24, 0x9d52, 0x0, 0x0);
        gbc.writeMem(0x844, { 0xf5 });
        gbc.writeMem(0x97e2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x97e2, gbc.sp());
        EXPECT(0x845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x97e2));
        EXPECT(0xb5, gbc.readMem(0x97e3));
        // F5 0281
        gbc.setState(0x4aae, 0x8610, 0x4630, 0xf0fb, 0x4095, 0xac2d, 0x1, 0x0);
        gbc.writeMem(0x4aae, { 0xf5 });
        gbc.writeMem(0x860e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x860e, gbc.sp());
        EXPECT(0x4aaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x860e));
        EXPECT(0x46, gbc.readMem(0x860f));
        // F5 0285
        gbc.setState(0x884a, 0xdf79, 0xe310, 0xf7ea, 0xb022, 0xc6d4, 0x0, 0x1);
        gbc.writeMem(0x884a, { 0xf5 });
        gbc.writeMem(0xdf77, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdf77, gbc.sp());
        EXPECT(0x884b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x884a));
        EXPECT(0x10, gbc.readMem(0xdf77));
        EXPECT(0xe3, gbc.readMem(0xdf78));
        // F5 0286
        gbc.setState(0x3396, 0x8287, 0xc20, 0x42f1, 0x1d1, 0x53cd, 0x1, 0x0);
        gbc.writeMem(0x3396, { 0xf5 });
        gbc.writeMem(0x8285, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8285, gbc.sp());
        EXPECT(0x3397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8285));
        EXPECT(0xc, gbc.readMem(0x8286));
        // F5 0287
        gbc.setState(0x9b6e, 0xc492, 0x6aa0, 0xa04f, 0xce59, 0x3f7d, 0x0, 0x1);
        gbc.writeMem(0x9b6e, { 0xf5 });
        gbc.writeMem(0xc490, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc490, gbc.sp());
        EXPECT(0x9b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x9b6e));
        EXPECT(0xa0, gbc.readMem(0xc490));
        EXPECT(0x6a, gbc.readMem(0xc491));
        // F5 0289
        gbc.setState(0x9b4, 0x9375, 0x1290, 0x5d61, 0x32f6, 0xff83, 0x0, 0x1);
        gbc.writeMem(0x9b4, { 0xf5 });
        gbc.writeMem(0x9373, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9373, gbc.sp());
        EXPECT(0x9b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x9373));
        EXPECT(0x12, gbc.readMem(0x9374));
        // F5 028B
        gbc.setState(0x3070, 0xed66, 0xd000, 0x9dc6, 0x1e9a, 0x8fda, 0x1, 0x1);
        gbc.writeMem(0x3070, { 0xf5 });
        gbc.writeMem(0xed64, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xed64, gbc.sp());
        EXPECT(0x3071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xed64));
        EXPECT(0xd0, gbc.readMem(0xed65));
        // F5 028F
        gbc.setState(0x8d55, 0x9aaf, 0x5870, 0x9791, 0x35ac, 0xecdb, 0x0, 0x0);
        gbc.writeMem(0x8d55, { 0xf5 });
        gbc.writeMem(0x9aad, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9aad, gbc.sp());
        EXPECT(0x8d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8d55));
        EXPECT(0x70, gbc.readMem(0x9aad));
        EXPECT(0x58, gbc.readMem(0x9aae));
        // F5 0293
        gbc.setState(0x5ad2, 0xb27a, 0xa800, 0x1d9b, 0x4c55, 0xf6c0, 0x0, 0x1);
        gbc.writeMem(0x5ad2, { 0xf5 });
        gbc.writeMem(0xb278, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb278, gbc.sp());
        EXPECT(0x5ad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb278));
        EXPECT(0xa8, gbc.readMem(0xb279));
        // F5 0296
        gbc.setState(0xa3dd, 0xe60d, 0x5060, 0x3dbd, 0x5a54, 0x1a9b, 0x1, 0x1);
        gbc.writeMem(0xa3dd, { 0xf5 });
        gbc.writeMem(0xe60b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe60b, gbc.sp());
        EXPECT(0xa3de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xa3dd));
        EXPECT(0x60, gbc.readMem(0xe60b));
        EXPECT(0x50, gbc.readMem(0xe60c));
        // F5 0297
        gbc.setState(0x4081, 0x9854, 0x3f40, 0x350e, 0x717a, 0xda5, 0x1, 0x0);
        gbc.writeMem(0x4081, { 0xf5 });
        gbc.writeMem(0x9852, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9852, gbc.sp());
        EXPECT(0x4082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9852));
        EXPECT(0x3f, gbc.readMem(0x9853));
        // F5 0298
        gbc.setState(0x76e9, 0xebf1, 0x1bf0, 0x5898, 0xbe85, 0x3a11, 0x1, 0x0);
        gbc.writeMem(0x76e9, { 0xf5 });
        gbc.writeMem(0xebef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xebef, gbc.sp());
        EXPECT(0x76ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xebef));
        EXPECT(0x1b, gbc.readMem(0xebf0));
        // F5 029A
        gbc.setState(0x2d5b, 0xcb90, 0x75b0, 0x2890, 0x2215, 0x1668, 0x0, 0x0);
        gbc.writeMem(0x2d5b, { 0xf5 });
        gbc.writeMem(0xcb8e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xcb8e, gbc.sp());
        EXPECT(0x2d5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xcb8e));
        EXPECT(0x75, gbc.readMem(0xcb8f));
        // F5 029B
        gbc.setState(0x2817, 0xba24, 0x7160, 0x34e7, 0xab09, 0x465b, 0x1, 0x0);
        gbc.writeMem(0x2817, { 0xf5 });
        gbc.writeMem(0xba22, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xba22, gbc.sp());
        EXPECT(0x2818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xba22));
        EXPECT(0x71, gbc.readMem(0xba23));
        // F5 029C
        gbc.setState(0x7741, 0x83f7, 0x6af0, 0xbb3b, 0x952d, 0xc387, 0x0, 0x0);
        gbc.writeMem(0x7741, { 0xf5 });
        gbc.writeMem(0x83f5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x83f5, gbc.sp());
        EXPECT(0x7742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x83f5));
        EXPECT(0x6a, gbc.readMem(0x83f6));
        // F5 029E
        gbc.setState(0xddc1, 0xcfb6, 0x8c90, 0xada4, 0xa3b8, 0x77fd, 0x1, 0x1);
        gbc.writeMem(0xcfb4, { 0x0, 0x0 });
        gbc.writeMem(0xddc1, { 0xf5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcfb4, gbc.sp());
        EXPECT(0xddc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xcfb4));
        EXPECT(0x8c, gbc.readMem(0xcfb5));
        EXPECT(0xf5, gbc.readMem(0xddc1));
        // F5 029F
        gbc.setState(0x35df, 0xbd86, 0xbcd0, 0x71ff, 0x85d1, 0xcd5f, 0x0, 0x1);
        gbc.writeMem(0x35df, { 0xf5 });
        gbc.writeMem(0xbd84, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbd84, gbc.sp());
        EXPECT(0x35e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbd84));
        EXPECT(0xbc, gbc.readMem(0xbd85));
        // F5 02A1
        gbc.setState(0x4b44, 0xed08, 0x3d60, 0xd530, 0x9d3a, 0xf351, 0x0, 0x0);
        gbc.writeMem(0x4b44, { 0xf5 });
        gbc.writeMem(0xed06, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xed06, gbc.sp());
        EXPECT(0x4b45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xed06));
        EXPECT(0x3d, gbc.readMem(0xed07));
        // F5 02A4
        gbc.setState(0xec66, 0x80f8, 0x9060, 0xcd0e, 0x3f5a, 0x3f60, 0x0, 0x0);
        gbc.writeMem(0x80f6, { 0x0, 0x0 });
        gbc.writeMem(0xec66, { 0xf5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x80f6, gbc.sp());
        EXPECT(0xec67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x80f6));
        EXPECT(0x90, gbc.readMem(0x80f7));
        EXPECT(0xf5, gbc.readMem(0xec66));
        // F5 02A5
        gbc.setState(0xe374, 0x95cd, 0xe030, 0x3391, 0x11ee, 0x1bb5, 0x1, 0x0);
        gbc.writeMem(0x95cb, { 0x0, 0x0 });
        gbc.writeMem(0xe374, { 0xf5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x95cb, gbc.sp());
        EXPECT(0xe375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x95cb));
        EXPECT(0xe0, gbc.readMem(0x95cc));
        EXPECT(0xf5, gbc.readMem(0xe374));
        // F5 02A6
        gbc.setState(0x5384, 0x9706, 0x47c0, 0x98ec, 0x9852, 0xab03, 0x0, 0x1);
        gbc.writeMem(0x5384, { 0xf5 });
        gbc.writeMem(0x9704, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9704, gbc.sp());
        EXPECT(0x5385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x9704));
        EXPECT(0x47, gbc.readMem(0x9705));
        // F5 02A8
        gbc.setState(0x5504, 0xfd4f, 0x310, 0x2077, 0x6388, 0x20b6, 0x1, 0x0);
        gbc.writeMem(0x5504, { 0xf5 });
        gbc.writeMem(0xfd4d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfd4d, gbc.sp());
        EXPECT(0x5505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xfd4d));
        EXPECT(0x3, gbc.readMem(0xfd4e));
        // F5 02AB
        gbc.setState(0xd861, 0xac9e, 0x3010, 0x8463, 0x2e6f, 0x9b59, 0x0, 0x0);
        gbc.writeMem(0xac9c, { 0x0, 0x0 });
        gbc.writeMem(0xd861, { 0xf5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xac9c, gbc.sp());
        EXPECT(0xd862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xac9c));
        EXPECT(0x30, gbc.readMem(0xac9d));
        EXPECT(0xf5, gbc.readMem(0xd861));
        // F5 02AF
        gbc.setState(0x454, 0xef8c, 0xa020, 0x1516, 0x11ad, 0x7301, 0x0, 0x1);
        gbc.writeMem(0x454, { 0xf5 });
        gbc.writeMem(0xef8a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xef8a, gbc.sp());
        EXPECT(0x455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xef8a));
        EXPECT(0xa0, gbc.readMem(0xef8b));
        // F5 02B3
        gbc.setState(0x5a59, 0x9ef7, 0x4160, 0x582c, 0xdb36, 0xd0a4, 0x0, 0x1);
        gbc.writeMem(0x5a59, { 0xf5 });
        gbc.writeMem(0x9ef5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9ef5, gbc.sp());
        EXPECT(0x5a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x9ef5));
        EXPECT(0x41, gbc.readMem(0x9ef6));
        // F5 02B4
        gbc.setState(0x43e7, 0x9819, 0x8a80, 0x7edb, 0xe61a, 0x5a4f, 0x1, 0x1);
        gbc.writeMem(0x43e7, { 0xf5 });
        gbc.writeMem(0x9817, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9817, gbc.sp());
        EXPECT(0x43e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9817));
        EXPECT(0x8a, gbc.readMem(0x9818));
        // F5 02B6
        gbc.setState(0x55a7, 0xfaac, 0x3f60, 0x300e, 0xa48c, 0x65a, 0x1, 0x1);
        gbc.writeMem(0x55a7, { 0xf5 });
        gbc.writeMem(0xfaaa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfaaa, gbc.sp());
        EXPECT(0x55a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xfaaa));
        EXPECT(0x3f, gbc.readMem(0xfaab));
        // F5 02BB
        gbc.setState(0xd9d9, 0xf6c5, 0xce80, 0xcc8b, 0x7b73, 0xb172, 0x1, 0x0);
        gbc.writeMem(0xd9d9, { 0xf5 });
        gbc.writeMem(0xf6c3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf6c3, gbc.sp());
        EXPECT(0xd9da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xd9d9));
        EXPECT(0x80, gbc.readMem(0xf6c3));
        EXPECT(0xce, gbc.readMem(0xf6c4));
        // F5 02BC
        gbc.setState(0xe680, 0xb152, 0x33d0, 0x199, 0xf4a5, 0x5b1d, 0x1, 0x0);
        gbc.writeMem(0xb150, { 0x0, 0x0 });
        gbc.writeMem(0xe680, { 0xf5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb150, gbc.sp());
        EXPECT(0xe681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb150));
        EXPECT(0x33, gbc.readMem(0xb151));
        EXPECT(0xf5, gbc.readMem(0xe680));
        // F5 02C1
        gbc.setState(0x2056, 0xaeff, 0xe5d0, 0xcaf7, 0xe22, 0x3ddd, 0x1, 0x0);
        gbc.writeMem(0x2056, { 0xf5 });
        gbc.writeMem(0xaefd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xaefd, gbc.sp());
        EXPECT(0x2057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xaefd));
        EXPECT(0xe5, gbc.readMem(0xaefe));
        // F5 02C3
        gbc.setState(0x6b18, 0xb6da, 0x6190, 0xb938, 0x6195, 0x3dc6, 0x0, 0x1);
        gbc.writeMem(0x6b18, { 0xf5 });
        gbc.writeMem(0xb6d8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb6d8, gbc.sp());
        EXPECT(0x6b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xb6d8));
        EXPECT(0x61, gbc.readMem(0xb6d9));
        // F5 02C5
        gbc.setState(0x8950, 0xacfa, 0xe950, 0x5337, 0xede0, 0x2b41, 0x0, 0x1);
        gbc.writeMem(0x8950, { 0xf5 });
        gbc.writeMem(0xacf8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xacf8, gbc.sp());
        EXPECT(0x8951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8950));
        EXPECT(0x50, gbc.readMem(0xacf8));
        EXPECT(0xe9, gbc.readMem(0xacf9));
        // F5 02C6
        gbc.setState(0x6d72, 0xd784, 0xdb50, 0x1b7a, 0xfa24, 0xd898, 0x0, 0x1);
        gbc.writeMem(0x6d72, { 0xf5 });
        gbc.writeMem(0xd782, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd782, gbc.sp());
        EXPECT(0x6d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd782));
        EXPECT(0xdb, gbc.readMem(0xd783));
        // F5 02C9
        gbc.setState(0x826d, 0xa3c5, 0x9290, 0xca5e, 0x4ec3, 0x140, 0x1, 0x0);
        gbc.writeMem(0x826d, { 0xf5 });
        gbc.writeMem(0xa3c3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa3c3, gbc.sp());
        EXPECT(0x826e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x826d));
        EXPECT(0x90, gbc.readMem(0xa3c3));
        EXPECT(0x92, gbc.readMem(0xa3c4));
        // F5 02CA
        gbc.setState(0x625f, 0x86a5, 0xbdd0, 0xba1, 0x6a38, 0x3292, 0x1, 0x1);
        gbc.writeMem(0x625f, { 0xf5 });
        gbc.writeMem(0x86a3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x86a3, gbc.sp());
        EXPECT(0x6260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x86a3));
        EXPECT(0xbd, gbc.readMem(0x86a4));
        // F5 02CB
        gbc.setState(0x1632, 0x9718, 0x7b60, 0x9389, 0x5cb8, 0x2eeb, 0x1, 0x0);
        gbc.writeMem(0x1632, { 0xf5 });
        gbc.writeMem(0x9716, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9716, gbc.sp());
        EXPECT(0x1633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x9716));
        EXPECT(0x7b, gbc.readMem(0x9717));
        // F5 02CF
        gbc.setState(0xe7b4, 0xe537, 0x80b0, 0x2056, 0x8221, 0x6fcf, 0x0, 0x0);
        gbc.writeMem(0xe535, { 0x0, 0x0 });
        gbc.writeMem(0xe7b4, { 0xf5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe535, gbc.sp());
        EXPECT(0xe7b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe535));
        EXPECT(0x80, gbc.readMem(0xe536));
        EXPECT(0xf5, gbc.readMem(0xe7b4));
        // F5 02D1
        gbc.setState(0x5590, 0xcf74, 0x7dc0, 0xd3f7, 0x9322, 0xdc24, 0x0, 0x0);
        gbc.writeMem(0x5590, { 0xf5 });
        gbc.writeMem(0xcf72, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcf72, gbc.sp());
        EXPECT(0x5591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xcf72));
        EXPECT(0x7d, gbc.readMem(0xcf73));
        // F5 02D4
        gbc.setState(0xdd87, 0xc2e1, 0x5180, 0x6ab2, 0x4c7d, 0x58be, 0x1, 0x1);
        gbc.writeMem(0xc2df, { 0x0, 0x0 });
        gbc.writeMem(0xdd87, { 0xf5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc2df, gbc.sp());
        EXPECT(0xdd88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc2df));
        EXPECT(0x51, gbc.readMem(0xc2e0));
        EXPECT(0xf5, gbc.readMem(0xdd87));
        // F5 02D9
        gbc.setState(0xc968, 0xa076, 0x55b0, 0xa168, 0xe144, 0xd42a, 0x0, 0x0);
        gbc.writeMem(0xa074, { 0x0, 0x0 });
        gbc.writeMem(0xc968, { 0xf5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa074, gbc.sp());
        EXPECT(0xc969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa074));
        EXPECT(0x55, gbc.readMem(0xa075));
        EXPECT(0xf5, gbc.readMem(0xc968));
        // F5 02DA
        gbc.setState(0x54da, 0xebac, 0xb9c0, 0x23f1, 0xfad, 0xa064, 0x0, 0x0);
        gbc.writeMem(0x54da, { 0xf5 });
        gbc.writeMem(0xebaa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xebaa, gbc.sp());
        EXPECT(0x54db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xebaa));
        EXPECT(0xb9, gbc.readMem(0xebab));
        // F5 02DC
        gbc.setState(0x9ab8, 0xac8e, 0xbc40, 0xbafc, 0x8672, 0x25ce, 0x0, 0x0);
        gbc.writeMem(0x9ab8, { 0xf5 });
        gbc.writeMem(0xac8c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xac8c, gbc.sp());
        EXPECT(0x9ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x9ab8));
        EXPECT(0x40, gbc.readMem(0xac8c));
        EXPECT(0xbc, gbc.readMem(0xac8d));
        // F5 02DD
        gbc.setState(0xc967, 0xba2a, 0x58f0, 0x881e, 0x8083, 0x1932, 0x1, 0x1);
        gbc.writeMem(0xba28, { 0x0, 0x0 });
        gbc.writeMem(0xc967, { 0xf5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xba28, gbc.sp());
        EXPECT(0xc968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xba28));
        EXPECT(0x58, gbc.readMem(0xba29));
        EXPECT(0xf5, gbc.readMem(0xc967));
        // F5 02DF
        gbc.setState(0x24b3, 0xeeef, 0x72b0, 0xd91f, 0x791b, 0x7496, 0x0, 0x0);
        gbc.writeMem(0x24b3, { 0xf5 });
        gbc.writeMem(0xeeed, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xeeed, gbc.sp());
        EXPECT(0x24b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xeeed));
        EXPECT(0x72, gbc.readMem(0xeeee));
        // F5 02E0
        gbc.setState(0xad38, 0xedc2, 0x4880, 0xaa97, 0x15bc, 0x3ccf, 0x0, 0x1);
        gbc.writeMem(0xad38, { 0xf5 });
        gbc.writeMem(0xedc0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xedc0, gbc.sp());
        EXPECT(0xad39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xad38));
        EXPECT(0x80, gbc.readMem(0xedc0));
        EXPECT(0x48, gbc.readMem(0xedc1));
        // F5 02E6
        gbc.setState(0xd3a7, 0xdd2d, 0xe060, 0x724, 0x5d37, 0xd34b, 0x1, 0x1);
        gbc.writeMem(0xd3a7, { 0xf5 });
        gbc.writeMem(0xdd2b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xdd2b, gbc.sp());
        EXPECT(0xd3a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xd3a7));
        EXPECT(0x60, gbc.readMem(0xdd2b));
        EXPECT(0xe0, gbc.readMem(0xdd2c));
        // F5 02EA
        gbc.setState(0xc6f4, 0x8ed6, 0xf8c0, 0x8fe8, 0xcd37, 0xfe86, 0x1, 0x1);
        gbc.writeMem(0x8ed4, { 0x0, 0x0 });
        gbc.writeMem(0xc6f4, { 0xf5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8ed4, gbc.sp());
        EXPECT(0xc6f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x8ed4));
        EXPECT(0xf8, gbc.readMem(0x8ed5));
        EXPECT(0xf5, gbc.readMem(0xc6f4));
        // F5 02F0
        gbc.setState(0x64e2, 0xc2ae, 0xb80, 0x34e2, 0x9e89, 0x4a88, 0x1, 0x1);
        gbc.writeMem(0x64e2, { 0xf5 });
        gbc.writeMem(0xc2ac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc2ac, gbc.sp());
        EXPECT(0x64e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc2ac));
        EXPECT(0xb, gbc.readMem(0xc2ad));
        // F5 02F1
        gbc.setState(0x5978, 0x9875, 0x45c0, 0x7207, 0x1443, 0xe592, 0x0, 0x1);
        gbc.writeMem(0x5978, { 0xf5 });
        gbc.writeMem(0x9873, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9873, gbc.sp());
        EXPECT(0x5979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x9873));
        EXPECT(0x45, gbc.readMem(0x9874));
        // F5 02F2
        gbc.setState(0x1050, 0xa5d6, 0xe0a0, 0x89b, 0x2eb5, 0xee46, 0x1, 0x0);
        gbc.writeMem(0x1050, { 0xf5 });
        gbc.writeMem(0xa5d4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa5d4, gbc.sp());
        EXPECT(0x1051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa5d4));
        EXPECT(0xe0, gbc.readMem(0xa5d5));
        // F5 02F4
        gbc.setState(0xe4c, 0xd66a, 0xb250, 0xe825, 0xb00a, 0x8e72, 0x1, 0x1);
        gbc.writeMem(0xe4c, { 0xf5 });
        gbc.writeMem(0xd668, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd668, gbc.sp());
        EXPECT(0xe4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd668));
        EXPECT(0xb2, gbc.readMem(0xd669));
        // F5 02F5
        gbc.setState(0x35f5, 0xbeab, 0x5360, 0xdbe8, 0x67aa, 0xd161, 0x1, 0x1);
        gbc.writeMem(0x35f5, { 0xf5 });
        gbc.writeMem(0xbea9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbea9, gbc.sp());
        EXPECT(0x35f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xbea9));
        EXPECT(0x53, gbc.readMem(0xbeaa));
        // F5 02F6
        gbc.setState(0xa371, 0xe971, 0x2b40, 0xd68a, 0xdaff, 0x7246, 0x0, 0x0);
        gbc.writeMem(0xa371, { 0xf5 });
        gbc.writeMem(0xe96f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe96f, gbc.sp());
        EXPECT(0xa372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xa371));
        EXPECT(0x40, gbc.readMem(0xe96f));
        EXPECT(0x2b, gbc.readMem(0xe970));
        // F5 02F7
        gbc.setState(0x595f, 0xdea7, 0xd860, 0xbbee, 0x120c, 0x3912, 0x1, 0x0);
        gbc.writeMem(0x595f, { 0xf5 });
        gbc.writeMem(0xdea5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdea5, gbc.sp());
        EXPECT(0x5960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xdea5));
        EXPECT(0xd8, gbc.readMem(0xdea6));
        // F5 02FA
        gbc.setState(0x97f5, 0xd69b, 0xcf50, 0xc62b, 0xecd6, 0xb41, 0x1, 0x0);
        gbc.writeMem(0x97f5, { 0xf5 });
        gbc.writeMem(0xd699, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd699, gbc.sp());
        EXPECT(0x97f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x97f5));
        EXPECT(0x50, gbc.readMem(0xd699));
        EXPECT(0xcf, gbc.readMem(0xd69a));
        // F5 02FB
        gbc.setState(0x7f8, 0x9118, 0x77d0, 0x9964, 0x5984, 0x90e, 0x1, 0x0);
        gbc.writeMem(0x7f8, { 0xf5 });
        gbc.writeMem(0x9116, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9116, gbc.sp());
        EXPECT(0x7f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9116));
        EXPECT(0x77, gbc.readMem(0x9117));
        // F5 02FE
        gbc.setState(0x589a, 0xc64a, 0x750, 0xc7f, 0x7e81, 0xfa, 0x0, 0x0);
        gbc.writeMem(0x589a, { 0xf5 });
        gbc.writeMem(0xc648, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc648, gbc.sp());
        EXPECT(0x589b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc648));
        EXPECT(0x7, gbc.readMem(0xc649));
        // F5 02FF
        gbc.setState(0x3854, 0x9f36, 0x37c0, 0xcfb4, 0xb61a, 0xd459, 0x0, 0x0);
        gbc.writeMem(0x3854, { 0xf5 });
        gbc.writeMem(0x9f34, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9f34, gbc.sp());
        EXPECT(0x3855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x9f34));
        EXPECT(0x37, gbc.readMem(0x9f35));
        // F5 0301
        gbc.setState(0x66af, 0xbd12, 0x15a0, 0x5352, 0xaae0, 0x72f6, 0x0, 0x0);
        gbc.writeMem(0x66af, { 0xf5 });
        gbc.writeMem(0xbd10, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbd10, gbc.sp());
        EXPECT(0x66b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xbd10));
        EXPECT(0x15, gbc.readMem(0xbd11));
        // F5 0305
        gbc.setState(0xe561, 0xe5c6, 0xac60, 0xd861, 0xa4d6, 0xb425, 0x0, 0x0);
        gbc.writeMem(0xe561, { 0xf5 });
        gbc.writeMem(0xe5c4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe5c4, gbc.sp());
        EXPECT(0xe562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xe561));
        EXPECT(0x60, gbc.readMem(0xe5c4));
        EXPECT(0xac, gbc.readMem(0xe5c5));
        // F5 030D
        gbc.setState(0x416f, 0x9183, 0x4460, 0x509b, 0x113c, 0x9ab2, 0x1, 0x0);
        gbc.writeMem(0x416f, { 0xf5 });
        gbc.writeMem(0x9181, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9181, gbc.sp());
        EXPECT(0x4170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x9181));
        EXPECT(0x44, gbc.readMem(0x9182));
        // F5 030E
        gbc.setState(0x5d5b, 0xff4b, 0x54d0, 0x34e3, 0x900d, 0xdd7b, 0x1, 0x1);
        gbc.writeMem(0x5d5b, { 0xf5 });
        gbc.writeMem(0xff49, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xff49, gbc.sp());
        EXPECT(0x5d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xff49));
        EXPECT(0x54, gbc.readMem(0xff4a));
        // F5 030F
        gbc.setState(0x82a7, 0xa653, 0x5ab0, 0x77f3, 0xfc68, 0x43a8, 0x1, 0x0);
        gbc.writeMem(0x82a7, { 0xf5 });
        gbc.writeMem(0xa651, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa651, gbc.sp());
        EXPECT(0x82a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x82a7));
        EXPECT(0xb0, gbc.readMem(0xa651));
        EXPECT(0x5a, gbc.readMem(0xa652));
        // F5 0311
        gbc.setState(0x5b20, 0xaa22, 0x5f10, 0x97, 0xf220, 0xcf8a, 0x1, 0x0);
        gbc.writeMem(0x5b20, { 0xf5 });
        gbc.writeMem(0xaa20, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xaa20, gbc.sp());
        EXPECT(0x5b21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xaa20));
        EXPECT(0x5f, gbc.readMem(0xaa21));
        // F5 0314
        gbc.setState(0xc088, 0xfd62, 0x31f0, 0x5d6f, 0x2681, 0x4a68, 0x1, 0x1);
        gbc.writeMem(0xc088, { 0xf5 });
        gbc.writeMem(0xfd60, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfd60, gbc.sp());
        EXPECT(0xc089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xc088));
        EXPECT(0xf0, gbc.readMem(0xfd60));
        EXPECT(0x31, gbc.readMem(0xfd61));
        // F5 0315
        gbc.setState(0x4c77, 0xb866, 0xe9c0, 0x9675, 0x9d19, 0xdbda, 0x1, 0x0);
        gbc.writeMem(0x4c77, { 0xf5 });
        gbc.writeMem(0xb864, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb864, gbc.sp());
        EXPECT(0x4c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xb864));
        EXPECT(0xe9, gbc.readMem(0xb865));
        // F5 0318
        gbc.setState(0xe7a5, 0xe2a9, 0xa0f0, 0xeeff, 0x375f, 0x5bcc, 0x1, 0x0);
        gbc.writeMem(0xe2a7, { 0x0, 0x0 });
        gbc.writeMem(0xe7a5, { 0xf5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe2a7, gbc.sp());
        EXPECT(0xe7a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe2a7));
        EXPECT(0xa0, gbc.readMem(0xe2a8));
        EXPECT(0xf5, gbc.readMem(0xe7a5));
        // F5 031D
        gbc.setState(0xad0d, 0xcd37, 0xa740, 0x2ded, 0xa2da, 0xfde5, 0x0, 0x0);
        gbc.writeMem(0xad0d, { 0xf5 });
        gbc.writeMem(0xcd35, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcd35, gbc.sp());
        EXPECT(0xad0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xad0d));
        EXPECT(0x40, gbc.readMem(0xcd35));
        EXPECT(0xa7, gbc.readMem(0xcd36));
        // F5 031E
        gbc.setState(0x9386, 0xc8e7, 0x28f0, 0x8c12, 0xe3fe, 0x4682, 0x1, 0x1);
        gbc.writeMem(0x9386, { 0xf5 });
        gbc.writeMem(0xc8e5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc8e5, gbc.sp());
        EXPECT(0x9387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x9386));
        EXPECT(0xf0, gbc.readMem(0xc8e5));
        EXPECT(0x28, gbc.readMem(0xc8e6));
        // F5 031F
        gbc.setState(0x729b, 0xe607, 0xed00, 0xc124, 0x500e, 0x85ad, 0x1, 0x0);
        gbc.writeMem(0x729b, { 0xf5 });
        gbc.writeMem(0xe605, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe605, gbc.sp());
        EXPECT(0x729c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe605));
        EXPECT(0xed, gbc.readMem(0xe606));
        // F5 0322
        gbc.setState(0xc12, 0xad8b, 0x3330, 0x6f2c, 0x2c3a, 0x8741, 0x1, 0x1);
        gbc.writeMem(0xc12, { 0xf5 });
        gbc.writeMem(0xad89, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xad89, gbc.sp());
        EXPECT(0xc13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xad89));
        EXPECT(0x33, gbc.readMem(0xad8a));
        // F5 0324
        gbc.setState(0x7342, 0x8ef1, 0x94d0, 0x1bce, 0x3de3, 0x41, 0x0, 0x0);
        gbc.writeMem(0x7342, { 0xf5 });
        gbc.writeMem(0x8eef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8eef, gbc.sp());
        EXPECT(0x7343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8eef));
        EXPECT(0x94, gbc.readMem(0x8ef0));
        // F5 0328
        gbc.setState(0xe89d, 0xf1ca, 0x4a20, 0xe49d, 0x3062, 0x23ba, 0x1, 0x0);
        gbc.writeMem(0xe89d, { 0xf5 });
        gbc.writeMem(0xf1c8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf1c8, gbc.sp());
        EXPECT(0xe89e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xe89d));
        EXPECT(0x20, gbc.readMem(0xf1c8));
        EXPECT(0x4a, gbc.readMem(0xf1c9));
        // F5 032E
        gbc.setState(0xb08c, 0xf471, 0x5e60, 0x654a, 0xa5c9, 0xcc90, 0x0, 0x1);
        gbc.writeMem(0xb08c, { 0xf5 });
        gbc.writeMem(0xf46f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf46f, gbc.sp());
        EXPECT(0xb08d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb08c));
        EXPECT(0x60, gbc.readMem(0xf46f));
        EXPECT(0x5e, gbc.readMem(0xf470));
        // F5 0334
        gbc.setState(0x14d4, 0xfa72, 0xc8d0, 0x5a27, 0xac9b, 0x441d, 0x1, 0x1);
        gbc.writeMem(0x14d4, { 0xf5 });
        gbc.writeMem(0xfa70, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfa70, gbc.sp());
        EXPECT(0x14d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xfa70));
        EXPECT(0xc8, gbc.readMem(0xfa71));
        // F5 0335
        gbc.setState(0x798d, 0x944b, 0xe120, 0x6d25, 0x5d74, 0x5335, 0x0, 0x1);
        gbc.writeMem(0x798d, { 0xf5 });
        gbc.writeMem(0x9449, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9449, gbc.sp());
        EXPECT(0x798e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9449));
        EXPECT(0xe1, gbc.readMem(0x944a));
        // F5 0336
        gbc.setState(0x7a90, 0xd0c4, 0x4aa0, 0xb801, 0xa34, 0xefb2, 0x1, 0x0);
        gbc.writeMem(0x7a90, { 0xf5 });
        gbc.writeMem(0xd0c2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd0c2, gbc.sp());
        EXPECT(0x7a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd0c2));
        EXPECT(0x4a, gbc.readMem(0xd0c3));
        // F5 0337
        gbc.setState(0xdea7, 0xaa14, 0xca60, 0xdb82, 0xbd44, 0x4412, 0x1, 0x1);
        gbc.writeMem(0xaa12, { 0x0, 0x0 });
        gbc.writeMem(0xdea7, { 0xf5 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xaa12, gbc.sp());
        EXPECT(0xdea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xaa12));
        EXPECT(0xca, gbc.readMem(0xaa13));
        EXPECT(0xf5, gbc.readMem(0xdea7));
        // F5 0339
        gbc.setState(0x9f21, 0xe683, 0xbb30, 0x7a4b, 0xe53d, 0x225f, 0x1, 0x0);
        gbc.writeMem(0x9f21, { 0xf5 });
        gbc.writeMem(0xe681, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe681, gbc.sp());
        EXPECT(0x9f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x9f21));
        EXPECT(0x30, gbc.readMem(0xe681));
        EXPECT(0xbb, gbc.readMem(0xe682));
        // F5 033B
        gbc.setState(0xedb, 0xd1e5, 0x9d00, 0xdb32, 0xa881, 0xe49e, 0x1, 0x1);
        gbc.writeMem(0xedb, { 0xf5 });
        gbc.writeMem(0xd1e3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd1e3, gbc.sp());
        EXPECT(0xedc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd1e3));
        EXPECT(0x9d, gbc.readMem(0xd1e4));
        // F5 033F
        gbc.setState(0x8b22, 0xbc5d, 0x31a0, 0xdf1a, 0x46fa, 0x2ff, 0x0, 0x1);
        gbc.writeMem(0x8b22, { 0xf5 });
        gbc.writeMem(0xbc5b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbc5b, gbc.sp());
        EXPECT(0x8b23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8b22));
        EXPECT(0xa0, gbc.readMem(0xbc5b));
        EXPECT(0x31, gbc.readMem(0xbc5c));
        // F5 0340
        gbc.setState(0xed89, 0xbd3f, 0x4510, 0x5eac, 0x1b43, 0x60f8, 0x0, 0x0);
        gbc.writeMem(0xbd3d, { 0x0, 0x0 });
        gbc.writeMem(0xed89, { 0xf5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbd3d, gbc.sp());
        EXPECT(0xed8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbd3d));
        EXPECT(0x45, gbc.readMem(0xbd3e));
        EXPECT(0xf5, gbc.readMem(0xed89));
        // F5 0344
        gbc.setState(0x2456, 0xd73f, 0x5610, 0xa34f, 0x62b1, 0xb6e0, 0x1, 0x0);
        gbc.writeMem(0x2456, { 0xf5 });
        gbc.writeMem(0xd73d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd73d, gbc.sp());
        EXPECT(0x2457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd73d));
        EXPECT(0x56, gbc.readMem(0xd73e));
        // F5 0346
        gbc.setState(0x7259, 0x9c63, 0x5cd0, 0xc923, 0xe63, 0x4d59, 0x1, 0x0);
        gbc.writeMem(0x7259, { 0xf5 });
        gbc.writeMem(0x9c61, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9c61, gbc.sp());
        EXPECT(0x725a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9c61));
        EXPECT(0x5c, gbc.readMem(0x9c62));
        // F5 0347
        gbc.setState(0x2bd0, 0x8b7b, 0x7900, 0x4d76, 0x655f, 0x447e, 0x1, 0x1);
        gbc.writeMem(0x2bd0, { 0xf5 });
        gbc.writeMem(0x8b79, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8b79, gbc.sp());
        EXPECT(0x2bd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8b79));
        EXPECT(0x79, gbc.readMem(0x8b7a));
        // F5 0348
        gbc.setState(0x21c3, 0xbacc, 0xad60, 0x2b66, 0xa3cc, 0x54eb, 0x0, 0x0);
        gbc.writeMem(0x21c3, { 0xf5 });
        gbc.writeMem(0xbaca, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xbaca, gbc.sp());
        EXPECT(0x21c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xbaca));
        EXPECT(0xad, gbc.readMem(0xbacb));
        // F5 034A
        gbc.setState(0xb6dc, 0x9031, 0xb5a0, 0xd836, 0x2e27, 0x77fe, 0x0, 0x1);
        gbc.writeMem(0x902f, { 0x0, 0x0 });
        gbc.writeMem(0xb6dc, { 0xf5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x902f, gbc.sp());
        EXPECT(0xb6dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x902f));
        EXPECT(0xb5, gbc.readMem(0x9030));
        EXPECT(0xf5, gbc.readMem(0xb6dc));
        // F5 034B
        gbc.setState(0x3676, 0xdb5f, 0x8a60, 0x772f, 0x171, 0xbd63, 0x0, 0x1);
        gbc.writeMem(0x3676, { 0xf5 });
        gbc.writeMem(0xdb5d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xdb5d, gbc.sp());
        EXPECT(0x3677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xdb5d));
        EXPECT(0x8a, gbc.readMem(0xdb5e));
        // F5 034C
        gbc.setState(0x7bdf, 0x942d, 0xe870, 0x12fc, 0xdd20, 0x27d4, 0x0, 0x1);
        gbc.writeMem(0x7bdf, { 0xf5 });
        gbc.writeMem(0x942b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x942b, gbc.sp());
        EXPECT(0x7be0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x942b));
        EXPECT(0xe8, gbc.readMem(0x942c));
        // F5 034D
        gbc.setState(0xa499, 0xde0a, 0x8dc0, 0xc33, 0xb05c, 0xab6b, 0x1, 0x1);
        gbc.writeMem(0xa499, { 0xf5 });
        gbc.writeMem(0xde08, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xde08, gbc.sp());
        EXPECT(0xa49a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xa499));
        EXPECT(0xc0, gbc.readMem(0xde08));
        EXPECT(0x8d, gbc.readMem(0xde09));
        // F5 034E
        gbc.setState(0xbe02, 0xd64f, 0x5a30, 0x6161, 0xc471, 0x3a49, 0x0, 0x0);
        gbc.writeMem(0xbe02, { 0xf5 });
        gbc.writeMem(0xd64d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd64d, gbc.sp());
        EXPECT(0xbe03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xbe02));
        EXPECT(0x30, gbc.readMem(0xd64d));
        EXPECT(0x5a, gbc.readMem(0xd64e));
        // F5 0350
        gbc.setState(0x9f03, 0x8601, 0x4720, 0xbb65, 0xabc, 0xe7b2, 0x1, 0x1);
        gbc.writeMem(0x85ff, { 0x0, 0x0 });
        gbc.writeMem(0x9f03, { 0xf5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x85ff, gbc.sp());
        EXPECT(0x9f04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x85ff));
        EXPECT(0x47, gbc.readMem(0x8600));
        EXPECT(0xf5, gbc.readMem(0x9f03));
        // F5 0351
        gbc.setState(0xea1f, 0x8e5e, 0x1560, 0x65e1, 0x7b8d, 0x8833, 0x0, 0x1);
        gbc.writeMem(0x8e5c, { 0x0, 0x0 });
        gbc.writeMem(0xea1f, { 0xf5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8e5c, gbc.sp());
        EXPECT(0xea20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x8e5c));
        EXPECT(0x15, gbc.readMem(0x8e5d));
        EXPECT(0xf5, gbc.readMem(0xea1f));
        // F5 0356
        gbc.setState(0x6fd2, 0x9011, 0x2ad0, 0xcc15, 0x4c93, 0x7c82, 0x0, 0x0);
        gbc.writeMem(0x6fd2, { 0xf5 });
        gbc.writeMem(0x900f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x900f, gbc.sp());
        EXPECT(0x6fd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x900f));
        EXPECT(0x2a, gbc.readMem(0x9010));
        // F5 0357
        gbc.setState(0x687, 0xde52, 0x5490, 0xb427, 0x81a1, 0x88af, 0x0, 0x0);
        gbc.writeMem(0x687, { 0xf5 });
        gbc.writeMem(0xde50, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xde50, gbc.sp());
        EXPECT(0x688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xde50));
        EXPECT(0x54, gbc.readMem(0xde51));
        // F5 035F
        gbc.setState(0x374d, 0xd965, 0x2de0, 0xe0e7, 0xffb7, 0xa8ce, 0x1, 0x1);
        gbc.writeMem(0x374d, { 0xf5 });
        gbc.writeMem(0xd963, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd963, gbc.sp());
        EXPECT(0x374e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd963));
        EXPECT(0x2d, gbc.readMem(0xd964));
        // F5 0363
        gbc.setState(0x4096, 0x845f, 0x6570, 0x4337, 0xd261, 0x4cd0, 0x0, 0x1);
        gbc.writeMem(0x4096, { 0xf5 });
        gbc.writeMem(0x845d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x845d, gbc.sp());
        EXPECT(0x4097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x845d));
        EXPECT(0x65, gbc.readMem(0x845e));
        // F5 0364
        gbc.setState(0x5d91, 0xada6, 0x94d0, 0x88c0, 0x3293, 0xd76f, 0x1, 0x0);
        gbc.writeMem(0x5d91, { 0xf5 });
        gbc.writeMem(0xada4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xada4, gbc.sp());
        EXPECT(0x5d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xada4));
        EXPECT(0x94, gbc.readMem(0xada5));
        // F5 0367
        gbc.setState(0x9be0, 0xf962, 0x2550, 0xee39, 0xf2b, 0x4296, 0x0, 0x0);
        gbc.writeMem(0x9be0, { 0xf5 });
        gbc.writeMem(0xf960, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf960, gbc.sp());
        EXPECT(0x9be1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x9be0));
        EXPECT(0x50, gbc.readMem(0xf960));
        EXPECT(0x25, gbc.readMem(0xf961));
        // F5 036B
        gbc.setState(0xdd4c, 0x834e, 0xc370, 0x6465, 0xa23c, 0x4377, 0x1, 0x1);
        gbc.writeMem(0x834c, { 0x0, 0x0 });
        gbc.writeMem(0xdd4c, { 0xf5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x834c, gbc.sp());
        EXPECT(0xdd4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x834c));
        EXPECT(0xc3, gbc.readMem(0x834d));
        EXPECT(0xf5, gbc.readMem(0xdd4c));
        // F5 036C
        gbc.setState(0x31d0, 0xc66b, 0x9950, 0xdd1a, 0x7cf3, 0x1a37, 0x0, 0x0);
        gbc.writeMem(0x31d0, { 0xf5 });
        gbc.writeMem(0xc669, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc669, gbc.sp());
        EXPECT(0x31d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc669));
        EXPECT(0x99, gbc.readMem(0xc66a));
        // F5 036F
        gbc.setState(0x5e00, 0x878e, 0xa590, 0xc067, 0xb009, 0x61d6, 0x0, 0x1);
        gbc.writeMem(0x5e00, { 0xf5 });
        gbc.writeMem(0x878c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x878c, gbc.sp());
        EXPECT(0x5e01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x878c));
        EXPECT(0xa5, gbc.readMem(0x878d));
        // F5 0377
        gbc.setState(0x14b0, 0x935e, 0x8a90, 0x2e2f, 0xdf6c, 0xb927, 0x1, 0x0);
        gbc.writeMem(0x14b0, { 0xf5 });
        gbc.writeMem(0x935c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x935c, gbc.sp());
        EXPECT(0x14b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x935c));
        EXPECT(0x8a, gbc.readMem(0x935d));
        // F5 037A
        gbc.setState(0xca16, 0xb7a5, 0x8110, 0xd915, 0x46e, 0x3217, 0x0, 0x0);
        gbc.writeMem(0xb7a3, { 0x0, 0x0 });
        gbc.writeMem(0xca16, { 0xf5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb7a3, gbc.sp());
        EXPECT(0xca17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb7a3));
        EXPECT(0x81, gbc.readMem(0xb7a4));
        EXPECT(0xf5, gbc.readMem(0xca16));
        // F5 037F
        gbc.setState(0xad23, 0xb74e, 0x1b20, 0xad84, 0x3b1e, 0x7e8c, 0x0, 0x0);
        gbc.writeMem(0xad23, { 0xf5 });
        gbc.writeMem(0xb74c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb74c, gbc.sp());
        EXPECT(0xad24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xad23));
        EXPECT(0x20, gbc.readMem(0xb74c));
        EXPECT(0x1b, gbc.readMem(0xb74d));
        // F5 0382
        gbc.setState(0xead9, 0xa26e, 0x370, 0xe6b7, 0xb88f, 0x182, 0x0, 0x0);
        gbc.writeMem(0xa26c, { 0x0, 0x0 });
        gbc.writeMem(0xead9, { 0xf5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa26c, gbc.sp());
        EXPECT(0xeada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xa26c));
        EXPECT(0x3, gbc.readMem(0xa26d));
        EXPECT(0xf5, gbc.readMem(0xead9));
        // F5 0384
        gbc.setState(0xa31, 0xb903, 0x53e0, 0x3432, 0xf9c1, 0xe834, 0x0, 0x0);
        gbc.writeMem(0xa31, { 0xf5 });
        gbc.writeMem(0xb901, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb901, gbc.sp());
        EXPECT(0xa32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb901));
        EXPECT(0x53, gbc.readMem(0xb902));
        // F5 0387
        gbc.setState(0xb5c3, 0xbfaa, 0xb050, 0xcfd4, 0x77d9, 0x5963, 0x0, 0x0);
        gbc.writeMem(0xb5c3, { 0xf5 });
        gbc.writeMem(0xbfa8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbfa8, gbc.sp());
        EXPECT(0xb5c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb5c3));
        EXPECT(0x50, gbc.readMem(0xbfa8));
        EXPECT(0xb0, gbc.readMem(0xbfa9));
        // F5 0389
        gbc.setState(0x8e81, 0xc5e0, 0x5450, 0xb297, 0xbd94, 0x56f5, 0x0, 0x1);
        gbc.writeMem(0x8e81, { 0xf5 });
        gbc.writeMem(0xc5de, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc5de, gbc.sp());
        EXPECT(0x8e82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8e81));
        EXPECT(0x50, gbc.readMem(0xc5de));
        EXPECT(0x54, gbc.readMem(0xc5df));
        // F5 038C
        gbc.setState(0x3542, 0x9976, 0xaaf0, 0x4931, 0x5380, 0x2b9e, 0x0, 0x0);
        gbc.writeMem(0x3542, { 0xf5 });
        gbc.writeMem(0x9974, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9974, gbc.sp());
        EXPECT(0x3543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9974));
        EXPECT(0xaa, gbc.readMem(0x9975));
        // F5 038D
        gbc.setState(0x579b, 0xb02d, 0x6310, 0x890f, 0x48fc, 0xe001, 0x1, 0x1);
        gbc.writeMem(0x579b, { 0xf5 });
        gbc.writeMem(0xb02b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb02b, gbc.sp());
        EXPECT(0x579c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb02b));
        EXPECT(0x63, gbc.readMem(0xb02c));
        // F5 038F
        gbc.setState(0x2321, 0xf8bd, 0x8f00, 0x95d, 0xccc3, 0xaa24, 0x0, 0x0);
        gbc.writeMem(0x2321, { 0xf5 });
        gbc.writeMem(0xf8bb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf8bb, gbc.sp());
        EXPECT(0x2322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xf8bb));
        EXPECT(0x8f, gbc.readMem(0xf8bc));
        // F5 0394
        gbc.setState(0xd02b, 0x9661, 0x27d0, 0x3803, 0xf859, 0xc8e8, 0x0, 0x0);
        gbc.writeMem(0x965f, { 0x0, 0x0 });
        gbc.writeMem(0xd02b, { 0xf5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x965f, gbc.sp());
        EXPECT(0xd02c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x965f));
        EXPECT(0x27, gbc.readMem(0x9660));
        EXPECT(0xf5, gbc.readMem(0xd02b));
        // F5 0395
        gbc.setState(0xcd80, 0xa4e4, 0x22a0, 0xd403, 0x5d38, 0x4da8, 0x0, 0x0);
        gbc.writeMem(0xa4e2, { 0x0, 0x0 });
        gbc.writeMem(0xcd80, { 0xf5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa4e2, gbc.sp());
        EXPECT(0xcd81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa4e2));
        EXPECT(0x22, gbc.readMem(0xa4e3));
        EXPECT(0xf5, gbc.readMem(0xcd80));
        // F5 0397
        gbc.setState(0x335a, 0xed70, 0xd1e0, 0x4566, 0x9814, 0x76d4, 0x0, 0x1);
        gbc.writeMem(0x335a, { 0xf5 });
        gbc.writeMem(0xed6e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xed6e, gbc.sp());
        EXPECT(0x335b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xed6e));
        EXPECT(0xd1, gbc.readMem(0xed6f));
        // F5 0398
        gbc.setState(0x4c23, 0xe4ac, 0x5790, 0x7365, 0xc934, 0x656d, 0x0, 0x1);
        gbc.writeMem(0x4c23, { 0xf5 });
        gbc.writeMem(0xe4aa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe4aa, gbc.sp());
        EXPECT(0x4c24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xe4aa));
        EXPECT(0x57, gbc.readMem(0xe4ab));
        // F5 0399
        gbc.setState(0x6944, 0xc4fc, 0xb6e0, 0xfb53, 0x87ad, 0xbeab, 0x1, 0x0);
        gbc.writeMem(0x6944, { 0xf5 });
        gbc.writeMem(0xc4fa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc4fa, gbc.sp());
        EXPECT(0x6945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc4fa));
        EXPECT(0xb6, gbc.readMem(0xc4fb));
        // F5 039A
        gbc.setState(0x4069, 0xbb71, 0x9310, 0x380c, 0xb20f, 0xd58, 0x0, 0x0);
        gbc.writeMem(0x4069, { 0xf5 });
        gbc.writeMem(0xbb6f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbb6f, gbc.sp());
        EXPECT(0x406a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbb6f));
        EXPECT(0x93, gbc.readMem(0xbb70));
        // F5 039D
        gbc.setState(0x4a55, 0x9212, 0xd160, 0x9733, 0x5229, 0xda09, 0x0, 0x0);
        gbc.writeMem(0x4a55, { 0xf5 });
        gbc.writeMem(0x9210, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9210, gbc.sp());
        EXPECT(0x4a56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x9210));
        EXPECT(0xd1, gbc.readMem(0x9211));
        // F5 039E
        gbc.setState(0x643f, 0xb45d, 0xb110, 0xd7d1, 0xdcbf, 0xcc96, 0x0, 0x1);
        gbc.writeMem(0x643f, { 0xf5 });
        gbc.writeMem(0xb45b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb45b, gbc.sp());
        EXPECT(0x6440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb45b));
        EXPECT(0xb1, gbc.readMem(0xb45c));
        // F5 03A2
        gbc.setState(0x1c89, 0xb8db, 0x5b90, 0x2ea1, 0x953d, 0xb5be, 0x0, 0x0);
        gbc.writeMem(0x1c89, { 0xf5 });
        gbc.writeMem(0xb8d9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb8d9, gbc.sp());
        EXPECT(0x1c8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xb8d9));
        EXPECT(0x5b, gbc.readMem(0xb8da));
        // F5 03A3
        gbc.setState(0xd983, 0x8b3d, 0xce10, 0x425a, 0x191e, 0x6696, 0x0, 0x1);
        gbc.writeMem(0x8b3b, { 0x0, 0x0 });
        gbc.writeMem(0xd983, { 0xf5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8b3b, gbc.sp());
        EXPECT(0xd984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8b3b));
        EXPECT(0xce, gbc.readMem(0x8b3c));
        EXPECT(0xf5, gbc.readMem(0xd983));
        // F5 03A5
        gbc.setState(0x5ca2, 0xafa4, 0x8470, 0xa413, 0xfa4c, 0xd5f0, 0x1, 0x0);
        gbc.writeMem(0x5ca2, { 0xf5 });
        gbc.writeMem(0xafa2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xafa2, gbc.sp());
        EXPECT(0x5ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xafa2));
        EXPECT(0x84, gbc.readMem(0xafa3));
        // F5 03A6
        gbc.setState(0x7f29, 0xd8d5, 0x9900, 0x3c8f, 0xab2f, 0x555c, 0x1, 0x1);
        gbc.writeMem(0x7f29, { 0xf5 });
        gbc.writeMem(0xd8d3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd8d3, gbc.sp());
        EXPECT(0x7f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd8d3));
        EXPECT(0x99, gbc.readMem(0xd8d4));
        // F5 03A8
        gbc.setState(0xd004, 0x9109, 0xaaa0, 0x52f8, 0x226, 0x4462, 0x1, 0x1);
        gbc.writeMem(0x9107, { 0x0, 0x0 });
        gbc.writeMem(0xd004, { 0xf5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9107, gbc.sp());
        EXPECT(0xd005, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9107));
        EXPECT(0xaa, gbc.readMem(0x9108));
        EXPECT(0xf5, gbc.readMem(0xd004));
        // F5 03AA
        gbc.setState(0x4ab8, 0xfc08, 0x10d0, 0xbd71, 0x9fc, 0x93ee, 0x0, 0x0);
        gbc.writeMem(0x4ab8, { 0xf5 });
        gbc.writeMem(0xfc06, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xfc06, gbc.sp());
        EXPECT(0x4ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xfc06));
        EXPECT(0x10, gbc.readMem(0xfc07));
        // F5 03AC
        gbc.setState(0xb0a8, 0xe25b, 0xee30, 0xe87c, 0xe662, 0x2e95, 0x1, 0x1);
        gbc.writeMem(0xb0a8, { 0xf5 });
        gbc.writeMem(0xe259, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe259, gbc.sp());
        EXPECT(0xb0a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb0a8));
        EXPECT(0x30, gbc.readMem(0xe259));
        EXPECT(0xee, gbc.readMem(0xe25a));
        // F5 03AD
        gbc.setState(0x1c72, 0x826e, 0x8830, 0x9c6a, 0x7dcb, 0xff00, 0x1, 0x0);
        gbc.writeMem(0x1c72, { 0xf5 });
        gbc.writeMem(0x826c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x826c, gbc.sp());
        EXPECT(0x1c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x826c));
        EXPECT(0x88, gbc.readMem(0x826d));
        // F5 03AE
        gbc.setState(0x8e52, 0x88df, 0xef30, 0x7163, 0xda5, 0xa61e, 0x1, 0x1);
        gbc.writeMem(0x88dd, { 0x0, 0x0 });
        gbc.writeMem(0x8e52, { 0xf5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x88dd, gbc.sp());
        EXPECT(0x8e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x88dd));
        EXPECT(0xef, gbc.readMem(0x88de));
        EXPECT(0xf5, gbc.readMem(0x8e52));
        // F5 03B6
        gbc.setState(0x92e0, 0xddab, 0x6f60, 0x5c21, 0xcca7, 0xe7fa, 0x0, 0x1);
        gbc.writeMem(0x92e0, { 0xf5 });
        gbc.writeMem(0xdda9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xdda9, gbc.sp());
        EXPECT(0x92e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x92e0));
        EXPECT(0x60, gbc.readMem(0xdda9));
        EXPECT(0x6f, gbc.readMem(0xddaa));
        // F5 03B7
        gbc.setState(0x8971, 0xdd0a, 0x9b0, 0x3958, 0x7eed, 0x62c9, 0x0, 0x0);
        gbc.writeMem(0x8971, { 0xf5 });
        gbc.writeMem(0xdd08, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdd08, gbc.sp());
        EXPECT(0x8972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8971));
        EXPECT(0xb0, gbc.readMem(0xdd08));
        EXPECT(0x9, gbc.readMem(0xdd09));
        // F5 03B9
        gbc.setState(0xd12f, 0xa6a3, 0x64d0, 0xa895, 0xf82c, 0x8b5b, 0x0, 0x1);
        gbc.writeMem(0xa6a1, { 0x0, 0x0 });
        gbc.writeMem(0xd12f, { 0xf5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa6a1, gbc.sp());
        EXPECT(0xd130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa6a1));
        EXPECT(0x64, gbc.readMem(0xa6a2));
        EXPECT(0xf5, gbc.readMem(0xd12f));
        // F5 03BB
        gbc.setState(0x187c, 0xfac5, 0x4240, 0x7b9, 0x97e4, 0xa17, 0x1, 0x0);
        gbc.writeMem(0x187c, { 0xf5 });
        gbc.writeMem(0xfac3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfac3, gbc.sp());
        EXPECT(0x187d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xfac3));
        EXPECT(0x42, gbc.readMem(0xfac4));
        // F5 03BE
        gbc.setState(0x2646, 0xa6cc, 0x3880, 0x3790, 0xe0fc, 0xf4da, 0x1, 0x1);
        gbc.writeMem(0x2646, { 0xf5 });
        gbc.writeMem(0xa6ca, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa6ca, gbc.sp());
        EXPECT(0x2647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa6ca));
        EXPECT(0x38, gbc.readMem(0xa6cb));
        // F5 03C6
        gbc.setState(0x58a7, 0xbd63, 0x75f0, 0xba18, 0x4d91, 0x8b5e, 0x0, 0x1);
        gbc.writeMem(0x58a7, { 0xf5 });
        gbc.writeMem(0xbd61, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbd61, gbc.sp());
        EXPECT(0x58a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbd61));
        EXPECT(0x75, gbc.readMem(0xbd62));
        // F5 03C8
        gbc.setState(0x5b7d, 0xf340, 0x8a60, 0x479b, 0x43dc, 0x3624, 0x0, 0x0);
        gbc.writeMem(0x5b7d, { 0xf5 });
        gbc.writeMem(0xf33e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf33e, gbc.sp());
        EXPECT(0x5b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xf33e));
        EXPECT(0x8a, gbc.readMem(0xf33f));
        // F5 03C9
        gbc.setState(0x24e9, 0xd7b4, 0x19b0, 0xc634, 0xf280, 0x9c6, 0x1, 0x0);
        gbc.writeMem(0x24e9, { 0xf5 });
        gbc.writeMem(0xd7b2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd7b2, gbc.sp());
        EXPECT(0x24ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd7b2));
        EXPECT(0x19, gbc.readMem(0xd7b3));
        // F5 03CB
        gbc.setState(0x422b, 0xb941, 0xbd40, 0x9568, 0xe627, 0x9c75, 0x1, 0x0);
        gbc.writeMem(0x422b, { 0xf5 });
        gbc.writeMem(0xb93f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb93f, gbc.sp());
        EXPECT(0x422c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb93f));
        EXPECT(0xbd, gbc.readMem(0xb940));
        // F5 03CC
        gbc.setState(0x8f85, 0xc9cd, 0xe830, 0x2484, 0xc2d6, 0x21ae, 0x1, 0x0);
        gbc.writeMem(0x8f85, { 0xf5 });
        gbc.writeMem(0xc9cb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc9cb, gbc.sp());
        EXPECT(0x8f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8f85));
        EXPECT(0x30, gbc.readMem(0xc9cb));
        EXPECT(0xe8, gbc.readMem(0xc9cc));
        // F5 03D0
        gbc.setState(0xb31f, 0xcf93, 0x8eb0, 0x4e2f, 0x39c0, 0xc4d9, 0x1, 0x1);
        gbc.writeMem(0xb31f, { 0xf5 });
        gbc.writeMem(0xcf91, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xcf91, gbc.sp());
        EXPECT(0xb320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb31f));
        EXPECT(0xb0, gbc.readMem(0xcf91));
        EXPECT(0x8e, gbc.readMem(0xcf92));
        // F5 03D2
        gbc.setState(0x7815, 0xf233, 0x3b00, 0x76b6, 0xf092, 0x5a4, 0x1, 0x0);
        gbc.writeMem(0x7815, { 0xf5 });
        gbc.writeMem(0xf231, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf231, gbc.sp());
        EXPECT(0x7816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xf231));
        EXPECT(0x3b, gbc.readMem(0xf232));
        // F5 03D4
        gbc.setState(0xaa68, 0x9dd6, 0x4020, 0xd264, 0xa2a3, 0xdd39, 0x0, 0x0);
        gbc.writeMem(0x9dd4, { 0x0, 0x0 });
        gbc.writeMem(0xaa68, { 0xf5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9dd4, gbc.sp());
        EXPECT(0xaa69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9dd4));
        EXPECT(0x40, gbc.readMem(0x9dd5));
        EXPECT(0xf5, gbc.readMem(0xaa68));
        // F5 03D7
        gbc.setState(0xcb00, 0xc50d, 0xf430, 0x6ba2, 0xa8d5, 0x4c00, 0x0, 0x0);
        gbc.writeMem(0xc50b, { 0x0, 0x0 });
        gbc.writeMem(0xcb00, { 0xf5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc50b, gbc.sp());
        EXPECT(0xcb01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xc50b));
        EXPECT(0xf4, gbc.readMem(0xc50c));
        EXPECT(0xf5, gbc.readMem(0xcb00));
        // F5 03D8
        gbc.setState(0xe7f1, 0xfed5, 0x5560, 0xde46, 0x440, 0xa698, 0x0, 0x0);
        gbc.writeMem(0xe7f1, { 0xf5 });
        gbc.writeMem(0xfed3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xfed3, gbc.sp());
        EXPECT(0xe7f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xe7f1));
        EXPECT(0x60, gbc.readMem(0xfed3));
        EXPECT(0x55, gbc.readMem(0xfed4));
        // F5 03D9
        gbc.setState(0x62b8, 0x9e1f, 0xbfd0, 0x6903, 0xb520, 0xe5de, 0x0, 0x0);
        gbc.writeMem(0x62b8, { 0xf5 });
        gbc.writeMem(0x9e1d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9e1d, gbc.sp());
        EXPECT(0x62b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9e1d));
        EXPECT(0xbf, gbc.readMem(0x9e1e));
        // F5 03DB
        gbc.setState(0x888, 0x99f8, 0x9ad0, 0xa4bf, 0xe1fe, 0x782f, 0x0, 0x0);
        gbc.writeMem(0x888, { 0xf5 });
        gbc.writeMem(0x99f6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x99f6, gbc.sp());
        EXPECT(0x889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x99f6));
        EXPECT(0x9a, gbc.readMem(0x99f7));
        // F5 03DC
        gbc.setState(0x5fee, 0xb857, 0x1480, 0x5c29, 0x65fe, 0xcf1f, 0x0, 0x0);
        gbc.writeMem(0x5fee, { 0xf5 });
        gbc.writeMem(0xb855, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb855, gbc.sp());
        EXPECT(0x5fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb855));
        EXPECT(0x14, gbc.readMem(0xb856));
        // F5 03DE
        gbc.setState(0x1666, 0x8c61, 0xea50, 0xf323, 0xcf11, 0x57dc, 0x1, 0x1);
        gbc.writeMem(0x1666, { 0xf5 });
        gbc.writeMem(0x8c5f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8c5f, gbc.sp());
        EXPECT(0x1667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8c5f));
        EXPECT(0xea, gbc.readMem(0x8c60));
        // F5 03E1
        gbc.setState(0x65c0, 0x9ceb, 0x41d0, 0x8204, 0x7417, 0x1c5b, 0x1, 0x0);
        gbc.writeMem(0x65c0, { 0xf5 });
        gbc.writeMem(0x9ce9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9ce9, gbc.sp());
        EXPECT(0x65c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9ce9));
        EXPECT(0x41, gbc.readMem(0x9cea));
        // F5 03E3
        gbc.setState(0x7bf2, 0xd798, 0xbd10, 0xdaf3, 0x8f01, 0xab80, 0x0, 0x0);
        gbc.writeMem(0x7bf2, { 0xf5 });
        gbc.writeMem(0xd796, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd796, gbc.sp());
        EXPECT(0x7bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd796));
        EXPECT(0xbd, gbc.readMem(0xd797));
        // F5 03E6
        gbc.setState(0x43bb, 0x96b0, 0x49b0, 0x45c6, 0xc0e8, 0x78b5, 0x1, 0x0);
        gbc.writeMem(0x43bb, { 0xf5 });
        gbc.writeMem(0x96ae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x96ae, gbc.sp());
        EXPECT(0x43bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x96ae));
        EXPECT(0x49, gbc.readMem(0x96af));
        // F5 03E7
        gbc.setState(0x9ffc, 0x99b7, 0x960, 0x761d, 0x7503, 0x6b20, 0x1, 0x1);
        gbc.writeMem(0x99b5, { 0x0, 0x0 });
        gbc.writeMem(0x9ffc, { 0xf5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x99b5, gbc.sp());
        EXPECT(0x9ffd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x99b5));
        EXPECT(0x9, gbc.readMem(0x99b6));
        EXPECT(0xf5, gbc.readMem(0x9ffc));
    }
