    TEST(gbcemu, opcode_cb_94) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 94 0000
        gbc.setState(0x5b00, 0x2b7f, 0x3ab0, 0x2d82, 0xa65e, 0x75c8, 0x0, 0x1);
        gbc.writeMem(0x5b00, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2b7f, gbc.sp());
        EXPECT(0x5b02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0001
        gbc.setState(0x5f66, 0x326b, 0x35e0, 0xbdde, 0x39bf, 0x913b, 0x0, 0x0);
        gbc.writeMem(0x5f66, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x326b, gbc.sp());
        EXPECT(0x5f68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0002
        gbc.setState(0xb1e9, 0x3787, 0xc310, 0xcc25, 0xf5bc, 0x4b7e, 0x0, 0x0);
        gbc.writeMem(0xb1e9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3787, gbc.sp());
        EXPECT(0xb1eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1e9));
        EXPECT(0x94, gbc.readMem(0xb1ea));
        // CB 94 0003
        gbc.setState(0x29d9, 0x62de, 0xf9f0, 0x2270, 0x9095, 0xcb1, 0x1, 0x1);
        gbc.writeMem(0x29d9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x62de, gbc.sp());
        EXPECT(0x29db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0004
        gbc.setState(0x211, 0xfe59, 0xd7a0, 0xcd7, 0xd8d6, 0xc78b, 0x1, 0x0);
        gbc.writeMem(0x211, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfe59, gbc.sp());
        EXPECT(0x213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0005
        gbc.setState(0xb541, 0xb7b6, 0x5170, 0x71ed, 0xb718, 0xccc9, 0x1, 0x0);
        gbc.writeMem(0xb541, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb7b6, gbc.sp());
        EXPECT(0xb543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb541));
        EXPECT(0x94, gbc.readMem(0xb542));
        // CB 94 0006
        gbc.setState(0x8961, 0x919e, 0xd370, 0x8167, 0x5d14, 0x7d15, 0x0, 0x0);
        gbc.writeMem(0x8961, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x919e, gbc.sp());
        EXPECT(0x8963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8961));
        EXPECT(0x94, gbc.readMem(0x8962));
        // CB 94 0007
        gbc.setState(0xad2b, 0xec38, 0xd830, 0x9b75, 0x5bdb, 0x859, 0x0, 0x0);
        gbc.writeMem(0xad2b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xec38, gbc.sp());
        EXPECT(0xad2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad2b));
        EXPECT(0x94, gbc.readMem(0xad2c));
        // CB 94 0008
        gbc.setState(0x266, 0x4874, 0xbf60, 0x7b9f, 0x86cf, 0xcb26, 0x1, 0x1);
        gbc.writeMem(0x266, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4874, gbc.sp());
        EXPECT(0x268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0009
        gbc.setState(0x9b25, 0x8064, 0xb5c0, 0xd99, 0x155, 0x219a, 0x0, 0x1);
        gbc.writeMem(0x9b25, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8064, gbc.sp());
        EXPECT(0x9b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b25));
        EXPECT(0x94, gbc.readMem(0x9b26));
        // CB 94 000A
        gbc.setState(0xbccb, 0x2c42, 0x92d0, 0xfeb7, 0xc795, 0xb2a0, 0x1, 0x1);
        gbc.writeMem(0xbccb, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2c42, gbc.sp());
        EXPECT(0xbccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbccb));
        EXPECT(0x94, gbc.readMem(0xbccc));
        // CB 94 000B
        gbc.setState(0x7cac, 0x882, 0x9b70, 0x7a0, 0xc4f2, 0xb530, 0x0, 0x1);
        gbc.writeMem(0x7cac, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x882, gbc.sp());
        EXPECT(0x7cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 000C
        gbc.setState(0xb3f9, 0x78b2, 0x6820, 0xb1a3, 0xbef9, 0xe612, 0x0, 0x1);
        gbc.writeMem(0xb3f9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x78b2, gbc.sp());
        EXPECT(0xb3fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f9));
        EXPECT(0x94, gbc.readMem(0xb3fa));
        // CB 94 000D
        gbc.setState(0xe4f1, 0x6243, 0xc730, 0xdda9, 0xb930, 0xf11e, 0x1, 0x0);
        gbc.writeMem(0xe4f1, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6243, gbc.sp());
        EXPECT(0xe4f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f1));
        EXPECT(0x94, gbc.readMem(0xe4f2));
        // CB 94 000E
        gbc.setState(0x10ab, 0xa5e, 0x7420, 0x9bd2, 0xa1d2, 0x58f5, 0x0, 0x1);
        gbc.writeMem(0x10ab, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa5e, gbc.sp());
        EXPECT(0x10ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 000F
        gbc.setState(0x4a93, 0x6d97, 0xf7b0, 0xeb54, 0x64a7, 0xab14, 0x0, 0x1);
        gbc.writeMem(0x4a93, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6d97, gbc.sp());
        EXPECT(0x4a95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0010
        gbc.setState(0xc010, 0xa2a9, 0x69e0, 0x56, 0x2d52, 0x42ae, 0x1, 0x1);
        gbc.writeMem(0xc010, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa2a9, gbc.sp());
        EXPECT(0xc012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc010));
        EXPECT(0x94, gbc.readMem(0xc011));
        // CB 94 0011
        gbc.setState(0x35f9, 0x461, 0x3530, 0x551a, 0x9f88, 0x5b80, 0x0, 0x0);
        gbc.writeMem(0x35f9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x461, gbc.sp());
        EXPECT(0x35fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0012
        gbc.setState(0x3a0f, 0xc922, 0x3320, 0x6be1, 0xb65b, 0x18b1, 0x0, 0x0);
        gbc.writeMem(0x3a0f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc922, gbc.sp());
        EXPECT(0x3a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0013
        gbc.setState(0x3fcb, 0xca53, 0x850, 0x4c65, 0xa74, 0x5976, 0x1, 0x0);
        gbc.writeMem(0x3fcb, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xca53, gbc.sp());
        EXPECT(0x3fcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0014
        gbc.setState(0xaf68, 0x30d5, 0x12d0, 0x16b9, 0xc7b, 0x6951, 0x1, 0x0);
        gbc.writeMem(0xaf68, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x30d5, gbc.sp());
        EXPECT(0xaf6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf68));
        EXPECT(0x94, gbc.readMem(0xaf69));
        // CB 94 0015
        gbc.setState(0x524d, 0x9961, 0x7e00, 0x1513, 0x6d90, 0x7247, 0x1, 0x1);
        gbc.writeMem(0x524d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9961, gbc.sp());
        EXPECT(0x524f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0016
        gbc.setState(0xcf3b, 0xb30c, 0xcdc0, 0x4212, 0x49d7, 0x947c, 0x0, 0x0);
        gbc.writeMem(0xcf3b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb30c, gbc.sp());
        EXPECT(0xcf3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf3b));
        EXPECT(0x94, gbc.readMem(0xcf3c));
        // CB 94 0017
        gbc.setState(0x7e8d, 0x3a61, 0x1e00, 0xda4b, 0xabd6, 0x7df2, 0x0, 0x0);
        gbc.writeMem(0x7e8d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3a61, gbc.sp());
        EXPECT(0x7e8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0018
        gbc.setState(0x368f, 0x28d7, 0x22f0, 0x9961, 0x128, 0x6115, 0x0, 0x1);
        gbc.writeMem(0x368f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x28d7, gbc.sp());
        EXPECT(0x3691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0019
        gbc.setState(0x42ee, 0x49d3, 0xed80, 0x5625, 0x97c5, 0x4596, 0x1, 0x1);
        gbc.writeMem(0x42ee, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x49d3, gbc.sp());
        EXPECT(0x42f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 001A
        gbc.setState(0xbb32, 0x99f5, 0xf670, 0x461d, 0x9e8, 0x39c9, 0x0, 0x1);
        gbc.writeMem(0xbb32, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x99f5, gbc.sp());
        EXPECT(0xbb34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb32));
        EXPECT(0x94, gbc.readMem(0xbb33));
        // CB 94 001B
        gbc.setState(0x150e, 0xdcb1, 0xdc10, 0xdd68, 0x66e7, 0x8dcd, 0x1, 0x0);
        gbc.writeMem(0x150e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdcb1, gbc.sp());
        EXPECT(0x1510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 001C
        gbc.setState(0xd62b, 0x306f, 0x5b10, 0xe10c, 0x25ae, 0xdae1, 0x0, 0x1);
        gbc.writeMem(0xd62b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x306f, gbc.sp());
        EXPECT(0xd62d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd62b));
        EXPECT(0x94, gbc.readMem(0xd62c));
        // CB 94 001D
        gbc.setState(0x7e5b, 0x52a2, 0x83f0, 0xfb68, 0xcda3, 0xe68a, 0x1, 0x1);
        gbc.writeMem(0x7e5b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x52a2, gbc.sp());
        EXPECT(0x7e5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 001E
        gbc.setState(0xa226, 0xa907, 0x2980, 0xc624, 0x9c9d, 0xf07, 0x1, 0x1);
        gbc.writeMem(0xa226, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa907, gbc.sp());
        EXPECT(0xa228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa226));
        EXPECT(0x94, gbc.readMem(0xa227));
        // CB 94 001F
        gbc.setState(0x280b, 0x84d4, 0xe240, 0x6fa4, 0x1b2f, 0x3f2d, 0x0, 0x0);
        gbc.writeMem(0x280b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x84d4, gbc.sp());
        EXPECT(0x280d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0020
        gbc.setState(0xa24d, 0x7b03, 0xd540, 0x3f92, 0x9d73, 0x728, 0x0, 0x0);
        gbc.writeMem(0xa24d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7b03, gbc.sp());
        EXPECT(0xa24f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa24d));
        EXPECT(0x94, gbc.readMem(0xa24e));
        // CB 94 0021
        gbc.setState(0xdd35, 0xa8d3, 0x8370, 0xd880, 0x2c05, 0x5b0e, 0x1, 0x0);
        gbc.writeMem(0xdd35, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa8d3, gbc.sp());
        EXPECT(0xdd37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd35));
        EXPECT(0x94, gbc.readMem(0xdd36));
        // CB 94 0022
        gbc.setState(0xd979, 0x2417, 0xdc70, 0x2ed2, 0x993, 0x4d00, 0x0, 0x1);
        gbc.writeMem(0xd979, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2417, gbc.sp());
        EXPECT(0xd97b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd979));
        EXPECT(0x94, gbc.readMem(0xd97a));
        // CB 94 0023
        gbc.setState(0x5b5d, 0x5972, 0xe8b0, 0xb2d8, 0x6b34, 0x2aad, 0x1, 0x1);
        gbc.writeMem(0x5b5d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5972, gbc.sp());
        EXPECT(0x5b5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0024
        gbc.setState(0x865c, 0x4c5a, 0x1e0, 0xe7b2, 0x17f9, 0x2a58, 0x1, 0x0);
        gbc.writeMem(0x865c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4c5a, gbc.sp());
        EXPECT(0x865e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x865c));
        EXPECT(0x94, gbc.readMem(0x865d));
        // CB 94 0025
        gbc.setState(0x374c, 0x68e7, 0x78d0, 0x6004, 0x5724, 0xc1ac, 0x1, 0x0);
        gbc.writeMem(0x374c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x68e7, gbc.sp());
        EXPECT(0x374e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0026
        gbc.setState(0xc8f5, 0x588d, 0xd1b0, 0xff90, 0xa138, 0xb4f4, 0x0, 0x1);
        gbc.writeMem(0xc8f5, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x588d, gbc.sp());
        EXPECT(0xc8f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f5));
        EXPECT(0x94, gbc.readMem(0xc8f6));
        // CB 94 0027
        gbc.setState(0xe326, 0xba97, 0xdc50, 0x9cc7, 0x20b4, 0x178a, 0x0, 0x0);
        gbc.writeMem(0xe326, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xba97, gbc.sp());
        EXPECT(0xe328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe326));
        EXPECT(0x94, gbc.readMem(0xe327));
        // CB 94 0028
        gbc.setState(0xea4b, 0x90dd, 0x2420, 0x73a4, 0xdde9, 0x227d, 0x1, 0x0);
        gbc.writeMem(0xea4b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x90dd, gbc.sp());
        EXPECT(0xea4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea4b));
        EXPECT(0x94, gbc.readMem(0xea4c));
        // CB 94 0029
        gbc.setState(0xd554, 0xb858, 0x9dc0, 0xe05a, 0x7f98, 0x3adb, 0x0, 0x0);
        gbc.writeMem(0xd554, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb858, gbc.sp());
        EXPECT(0xd556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd554));
        EXPECT(0x94, gbc.readMem(0xd555));
        // CB 94 002A
        gbc.setState(0x246a, 0xa125, 0x91d0, 0x13fd, 0xc1e9, 0xa9e, 0x0, 0x1);
        gbc.writeMem(0x246a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa125, gbc.sp());
        EXPECT(0x246c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 002B
        gbc.setState(0x327, 0x7114, 0x6b60, 0x135e, 0x9e71, 0x8814, 0x0, 0x0);
        gbc.writeMem(0x327, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7114, gbc.sp());
        EXPECT(0x329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 002C
        gbc.setState(0x1b62, 0x32b3, 0xaf0, 0xd86e, 0x4e47, 0x726e, 0x1, 0x1);
        gbc.writeMem(0x1b62, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x32b3, gbc.sp());
        EXPECT(0x1b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 002D
        gbc.setState(0x1241, 0x36b, 0xbb90, 0x2a6, 0x474, 0xe75c, 0x1, 0x0);
        gbc.writeMem(0x1241, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x36b, gbc.sp());
        EXPECT(0x1243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 002E
        gbc.setState(0x9b41, 0xee76, 0x38d0, 0xb096, 0x4ca, 0xede1, 0x1, 0x0);
        gbc.writeMem(0x9b41, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xee76, gbc.sp());
        EXPECT(0x9b43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b41));
        EXPECT(0x94, gbc.readMem(0x9b42));
        // CB 94 002F
        gbc.setState(0x4b99, 0x49b9, 0x2a00, 0x3aa5, 0x57e5, 0x5af8, 0x0, 0x1);
        gbc.writeMem(0x4b99, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x49b9, gbc.sp());
        EXPECT(0x4b9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0030
        gbc.setState(0x1c68, 0x99e8, 0xc980, 0xae3, 0x94e, 0xd06d, 0x0, 0x0);
        gbc.writeMem(0x1c68, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x99e8, gbc.sp());
        EXPECT(0x1c6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0031
        gbc.setState(0x37e4, 0xed3a, 0x8090, 0x8e80, 0x434e, 0x88a0, 0x1, 0x0);
        gbc.writeMem(0x37e4, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xed3a, gbc.sp());
        EXPECT(0x37e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0032
        gbc.setState(0x5a34, 0x4159, 0xd8a0, 0xb85f, 0x1765, 0x1aca, 0x0, 0x1);
        gbc.writeMem(0x5a34, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4159, gbc.sp());
        EXPECT(0x5a36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0033
        gbc.setState(0x6bcf, 0x3739, 0x4740, 0x78d6, 0x7603, 0xb445, 0x1, 0x1);
        gbc.writeMem(0x6bcf, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3739, gbc.sp());
        EXPECT(0x6bd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0034
        gbc.setState(0x4c21, 0x1a5e, 0xd280, 0xc99f, 0x9a77, 0x33b, 0x0, 0x1);
        gbc.writeMem(0x4c21, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1a5e, gbc.sp());
        EXPECT(0x4c23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0035
        gbc.setState(0x185a, 0x458, 0x5e10, 0x3432, 0xeb70, 0x491a, 0x0, 0x1);
        gbc.writeMem(0x185a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x458, gbc.sp());
        EXPECT(0x185c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0036
        gbc.setState(0x5855, 0xf3be, 0xdc50, 0xcad8, 0x50cd, 0xe51c, 0x0, 0x1);
        gbc.writeMem(0x5855, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf3be, gbc.sp());
        EXPECT(0x5857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0037
        gbc.setState(0xc0ee, 0xed9e, 0xd7b0, 0x67e6, 0x9ae3, 0xb8dc, 0x1, 0x0);
        gbc.writeMem(0xc0ee, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xed9e, gbc.sp());
        EXPECT(0xc0f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ee));
        EXPECT(0x94, gbc.readMem(0xc0ef));
        // CB 94 0038
        gbc.setState(0x4604, 0xf469, 0xbe60, 0x6b19, 0x52a4, 0x9352, 0x0, 0x0);
        gbc.writeMem(0x4604, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf469, gbc.sp());
        EXPECT(0x4606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0039
        gbc.setState(0xab20, 0xb36, 0x3f20, 0x2b5, 0xa338, 0x7866, 0x1, 0x1);
        gbc.writeMem(0xab20, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb36, gbc.sp());
        EXPECT(0xab22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab20));
        EXPECT(0x94, gbc.readMem(0xab21));
        // CB 94 003A
        gbc.setState(0x9f73, 0x235a, 0xe8c0, 0x3c14, 0x2e39, 0x9e9a, 0x0, 0x1);
        gbc.writeMem(0x9f73, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x235a, gbc.sp());
        EXPECT(0x9f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f73));
        EXPECT(0x94, gbc.readMem(0x9f74));
        // CB 94 003B
        gbc.setState(0x6b2a, 0x91cc, 0xfa60, 0x6804, 0x52ac, 0xea02, 0x1, 0x0);
        gbc.writeMem(0x6b2a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x91cc, gbc.sp());
        EXPECT(0x6b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 003C
        gbc.setState(0xa7d1, 0x4c47, 0xfae0, 0xb81b, 0x1c1a, 0xf254, 0x0, 0x1);
        gbc.writeMem(0xa7d1, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4c47, gbc.sp());
        EXPECT(0xa7d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d1));
        EXPECT(0x94, gbc.readMem(0xa7d2));
        // CB 94 003D
        gbc.setState(0x1413, 0xc9ad, 0x4d00, 0x9d8b, 0x3c5d, 0x39f, 0x1, 0x1);
        gbc.writeMem(0x1413, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc9ad, gbc.sp());
        EXPECT(0x1415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 003E
        gbc.setState(0xdea, 0x3410, 0x3050, 0x33a4, 0x3eb0, 0x8fdc, 0x1, 0x0);
        gbc.writeMem(0xdea, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3410, gbc.sp());
        EXPECT(0xdec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 003F
        gbc.setState(0xb15c, 0x3288, 0xf7f0, 0xa691, 0xf2c1, 0x8add, 0x0, 0x1);
        gbc.writeMem(0xb15c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3288, gbc.sp());
        EXPECT(0xb15e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb15c));
        EXPECT(0x94, gbc.readMem(0xb15d));
        // CB 94 0040
        gbc.setState(0x821a, 0x1a2a, 0x25c0, 0xec80, 0x13be, 0x6fb0, 0x1, 0x1);
        gbc.writeMem(0x821a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1a2a, gbc.sp());
        EXPECT(0x821c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x821a));
        EXPECT(0x94, gbc.readMem(0x821b));
        // CB 94 0041
        gbc.setState(0xd3ea, 0x5b80, 0x3330, 0x50e1, 0xe420, 0xf52d, 0x0, 0x1);
        gbc.writeMem(0xd3ea, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5b80, gbc.sp());
        EXPECT(0xd3ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ea));
        EXPECT(0x94, gbc.readMem(0xd3eb));
        // CB 94 0042
        gbc.setState(0x14d8, 0x99d7, 0x16e0, 0x6c9c, 0x37d2, 0xe4ad, 0x1, 0x1);
        gbc.writeMem(0x14d8, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x99d7, gbc.sp());
        EXPECT(0x14da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0043
        gbc.setState(0x9e88, 0x2b33, 0xd920, 0x6167, 0xb74b, 0xab0, 0x1, 0x1);
        gbc.writeMem(0x9e88, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2b33, gbc.sp());
        EXPECT(0x9e8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e88));
        EXPECT(0x94, gbc.readMem(0x9e89));
        // CB 94 0044
        gbc.setState(0xb9ef, 0xc7bb, 0xca30, 0xccbd, 0xafe, 0x5c1b, 0x0, 0x0);
        gbc.writeMem(0xb9ef, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc7bb, gbc.sp());
        EXPECT(0xb9f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9ef));
        EXPECT(0x94, gbc.readMem(0xb9f0));
        // CB 94 0045
        gbc.setState(0x8360, 0xb70d, 0xf0d0, 0xbcaf, 0x2241, 0xe65a, 0x0, 0x1);
        gbc.writeMem(0x8360, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb70d, gbc.sp());
        EXPECT(0x8362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8360));
        EXPECT(0x94, gbc.readMem(0x8361));
        // CB 94 0047
        gbc.setState(0x281c, 0xd1d5, 0x1d20, 0x30b6, 0xb247, 0xca79, 0x1, 0x0);
        gbc.writeMem(0x281c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd1d5, gbc.sp());
        EXPECT(0x281e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0048
        gbc.setState(0x581, 0x7df2, 0x5560, 0xb0b7, 0xe0b7, 0x81bd, 0x1, 0x1);
        gbc.writeMem(0x581, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7df2, gbc.sp());
        EXPECT(0x583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0049
        gbc.setState(0xc490, 0xd2f9, 0xf210, 0x6119, 0xa96d, 0xb573, 0x0, 0x1);
        gbc.writeMem(0xc490, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd2f9, gbc.sp());
        EXPECT(0xc492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc490));
        EXPECT(0x94, gbc.readMem(0xc491));
        // CB 94 004A
        gbc.setState(0x1f1b, 0x176d, 0xdbd0, 0xd5c6, 0x50a8, 0x5530, 0x0, 0x1);
        gbc.writeMem(0x1f1b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x176d, gbc.sp());
        EXPECT(0x1f1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 004B
        gbc.setState(0xcc29, 0x3850, 0xb020, 0xe240, 0x6b0b, 0x4ffd, 0x0, 0x0);
        gbc.writeMem(0xcc29, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3850, gbc.sp());
        EXPECT(0xcc2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc29));
        EXPECT(0x94, gbc.readMem(0xcc2a));
        // CB 94 004C
        gbc.setState(0x1d1f, 0xdfeb, 0x65f0, 0x37bd, 0xffed, 0x6834, 0x1, 0x0);
        gbc.writeMem(0x1d1f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xdfeb, gbc.sp());
        EXPECT(0x1d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 004D
        gbc.setState(0x1948, 0xc6e1, 0xba70, 0xdb2a, 0x90e0, 0x6af, 0x1, 0x1);
        gbc.writeMem(0x1948, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc6e1, gbc.sp());
        EXPECT(0x194a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 004E
        gbc.setState(0x49ae, 0x25ca, 0xd9b0, 0x9062, 0x9fdb, 0x878f, 0x1, 0x1);
        gbc.writeMem(0x49ae, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x25ca, gbc.sp());
        EXPECT(0x49b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 004F
        gbc.setState(0xc1c6, 0x888c, 0x1740, 0x3684, 0x11be, 0x869d, 0x1, 0x0);
        gbc.writeMem(0xc1c6, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x888c, gbc.sp());
        EXPECT(0xc1c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c6));
        EXPECT(0x94, gbc.readMem(0xc1c7));
        // CB 94 0050
        gbc.setState(0xe56f, 0x84d0, 0xc3d0, 0x4c88, 0x66d5, 0xa7e8, 0x0, 0x1);
        gbc.writeMem(0xe56f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x84d0, gbc.sp());
        EXPECT(0xe571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe56f));
        EXPECT(0x94, gbc.readMem(0xe570));
        // CB 94 0051
        gbc.setState(0x6ce8, 0x77ef, 0x8f30, 0x361b, 0x8683, 0xa32a, 0x0, 0x0);
        gbc.writeMem(0x6ce8, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x77ef, gbc.sp());
        EXPECT(0x6cea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0052
        gbc.setState(0xeae9, 0xb186, 0x3040, 0x28ba, 0x2af3, 0x6d62, 0x1, 0x0);
        gbc.writeMem(0xeae9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb186, gbc.sp());
        EXPECT(0xeaeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae9));
        EXPECT(0x94, gbc.readMem(0xeaea));
        // CB 94 0053
        gbc.setState(0xa11c, 0x3d08, 0x9530, 0x7f56, 0xaaac, 0x1749, 0x0, 0x0);
        gbc.writeMem(0xa11c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3d08, gbc.sp());
        EXPECT(0xa11e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa11c));
        EXPECT(0x94, gbc.readMem(0xa11d));
        // CB 94 0054
        gbc.setState(0xee30, 0x2885, 0xc4d0, 0x2d48, 0x61e1, 0xa1c8, 0x0, 0x0);
        gbc.writeMem(0xee30, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2885, gbc.sp());
        EXPECT(0xee32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee30));
        EXPECT(0x94, gbc.readMem(0xee31));
        // CB 94 0055
        gbc.setState(0xe677, 0xec4d, 0xc4d0, 0x7213, 0xa856, 0xce5c, 0x0, 0x1);
        gbc.writeMem(0xe677, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xec4d, gbc.sp());
        EXPECT(0xe679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe677));
        EXPECT(0x94, gbc.readMem(0xe678));
        // CB 94 0056
        gbc.setState(0xd235, 0x13c7, 0x2750, 0x982a, 0x35e6, 0x1491, 0x0, 0x0);
        gbc.writeMem(0xd235, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x13c7, gbc.sp());
        EXPECT(0xd237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd235));
        EXPECT(0x94, gbc.readMem(0xd236));
        // CB 94 0057
        gbc.setState(0x82bb, 0x26e9, 0xb4d0, 0x427d, 0x888, 0xf7da, 0x1, 0x1);
        gbc.writeMem(0x82bb, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x26e9, gbc.sp());
        EXPECT(0x82bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82bb));
        EXPECT(0x94, gbc.readMem(0x82bc));
        // CB 94 0058
        gbc.setState(0xa928, 0xceb4, 0x2900, 0x10f6, 0x52ee, 0xa1bd, 0x0, 0x0);
        gbc.writeMem(0xa928, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xceb4, gbc.sp());
        EXPECT(0xa92a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa928));
        EXPECT(0x94, gbc.readMem(0xa929));
        // CB 94 0059
        gbc.setState(0xca5b, 0xbcc4, 0x56d0, 0xcebd, 0x25b8, 0x8c19, 0x1, 0x1);
        gbc.writeMem(0xca5b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbcc4, gbc.sp());
        EXPECT(0xca5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca5b));
        EXPECT(0x94, gbc.readMem(0xca5c));
        // CB 94 005A
        gbc.setState(0x42dd, 0x5722, 0xdd0, 0xe8a7, 0xb837, 0x28a3, 0x0, 0x1);
        gbc.writeMem(0x42dd, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5722, gbc.sp());
        EXPECT(0x42df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 005B
        gbc.setState(0x2878, 0x66b4, 0x8790, 0xbac8, 0x172, 0x7bd4, 0x1, 0x0);
        gbc.writeMem(0x2878, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x66b4, gbc.sp());
        EXPECT(0x287a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 005C
        gbc.setState(0xbcf0, 0xf8af, 0xf240, 0xfeb8, 0xe863, 0x421a, 0x1, 0x0);
        gbc.writeMem(0xbcf0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf8af, gbc.sp());
        EXPECT(0xbcf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcf0));
        EXPECT(0x94, gbc.readMem(0xbcf1));
        // CB 94 005E
        gbc.setState(0x65de, 0x9120, 0x1210, 0x152b, 0x3463, 0x5dfe, 0x0, 0x1);
        gbc.writeMem(0x65de, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9120, gbc.sp());
        EXPECT(0x65e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0060
        gbc.setState(0x98f4, 0x7486, 0x6680, 0xfb4c, 0xb38f, 0xea36, 0x0, 0x0);
        gbc.writeMem(0x98f4, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7486, gbc.sp());
        EXPECT(0x98f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f4));
        EXPECT(0x94, gbc.readMem(0x98f5));
        // CB 94 0061
        gbc.setState(0x1e8d, 0x4b62, 0xe760, 0x4b90, 0xb069, 0x44cb, 0x0, 0x1);
        gbc.writeMem(0x1e8d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4b62, gbc.sp());
        EXPECT(0x1e8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0062
        gbc.setState(0x34ad, 0xe876, 0x5440, 0x5050, 0x427c, 0x8f7e, 0x1, 0x0);
        gbc.writeMem(0x34ad, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe876, gbc.sp());
        EXPECT(0x34af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0063
        gbc.setState(0x20b, 0x8aae, 0x7630, 0x67e1, 0xe83a, 0x7ad2, 0x1, 0x1);
        gbc.writeMem(0x20b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8aae, gbc.sp());
        EXPECT(0x20d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0064
        gbc.setState(0xda17, 0xad9b, 0x4820, 0x5ed1, 0x4e9e, 0x8623, 0x1, 0x1);
        gbc.writeMem(0xda17, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xad9b, gbc.sp());
        EXPECT(0xda19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda17));
        EXPECT(0x94, gbc.readMem(0xda18));
        // CB 94 0065
        gbc.setState(0x5994, 0x1d88, 0x67d0, 0x9431, 0xecfa, 0xd756, 0x0, 0x0);
        gbc.writeMem(0x5994, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1d88, gbc.sp());
        EXPECT(0x5996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0066
        gbc.setState(0xa9dd, 0x7392, 0x5df0, 0x1271, 0x720a, 0x5126, 0x1, 0x0);
        gbc.writeMem(0xa9dd, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7392, gbc.sp());
        EXPECT(0xa9df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9dd));
        EXPECT(0x94, gbc.readMem(0xa9de));
        // CB 94 0067
        gbc.setState(0x5403, 0xa1d0, 0xe940, 0x6e0c, 0x8a5a, 0x6831, 0x1, 0x0);
        gbc.writeMem(0x5403, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa1d0, gbc.sp());
        EXPECT(0x5405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0068
        gbc.setState(0xdeee, 0x249b, 0x5210, 0x53b0, 0x4f87, 0x951e, 0x1, 0x1);
        gbc.writeMem(0xdeee, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x249b, gbc.sp());
        EXPECT(0xdef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeee));
        EXPECT(0x94, gbc.readMem(0xdeef));
        // CB 94 0069
        gbc.setState(0x91e, 0xdd42, 0x7ec0, 0x9290, 0xfb97, 0x11a9, 0x0, 0x1);
        gbc.writeMem(0x91e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdd42, gbc.sp());
        EXPECT(0x920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 006A
        gbc.setState(0x5a56, 0x3843, 0x2d80, 0xc361, 0xeba0, 0x3728, 0x1, 0x0);
        gbc.writeMem(0x5a56, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3843, gbc.sp());
        EXPECT(0x5a58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 006B
        gbc.setState(0x12f6, 0xa7cf, 0x9bf0, 0x4c93, 0x6d6e, 0xe455, 0x0, 0x1);
        gbc.writeMem(0x12f6, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa7cf, gbc.sp());
        EXPECT(0x12f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 006C
        gbc.setState(0xc48c, 0xe349, 0x870, 0x1c09, 0xe81e, 0x7535, 0x1, 0x1);
        gbc.writeMem(0xc48c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe349, gbc.sp());
        EXPECT(0xc48e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc48c));
        EXPECT(0x94, gbc.readMem(0xc48d));
        // CB 94 006D
        gbc.setState(0xd030, 0x4a46, 0x6140, 0x15a1, 0x798, 0x8864, 0x1, 0x1);
        gbc.writeMem(0xd030, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4a46, gbc.sp());
        EXPECT(0xd032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd030));
        EXPECT(0x94, gbc.readMem(0xd031));
        // CB 94 006E
        gbc.setState(0x4825, 0x1606, 0x3f90, 0x61, 0x51a0, 0xba07, 0x1, 0x0);
        gbc.writeMem(0x4825, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1606, gbc.sp());
        EXPECT(0x4827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 006F
        gbc.setState(0xe88a, 0x4fca, 0xd630, 0xd176, 0xe86b, 0x939c, 0x1, 0x0);
        gbc.writeMem(0xe88a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4fca, gbc.sp());
        EXPECT(0xe88c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe88a));
        EXPECT(0x94, gbc.readMem(0xe88b));
        // CB 94 0071
        gbc.setState(0x7504, 0x88b9, 0x3110, 0x9cf8, 0xc1d2, 0xcfaa, 0x1, 0x0);
        gbc.writeMem(0x7504, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x88b9, gbc.sp());
        EXPECT(0x7506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0072
        gbc.setState(0xc879, 0x3da9, 0x4740, 0x6167, 0xd24f, 0x5fb0, 0x1, 0x1);
        gbc.writeMem(0xc879, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3da9, gbc.sp());
        EXPECT(0xc87b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc879));
        EXPECT(0x94, gbc.readMem(0xc87a));
        // CB 94 0073
        gbc.setState(0x4737, 0x2b9, 0x1ee0, 0x9509, 0x2df, 0xfa76, 0x1, 0x1);
        gbc.writeMem(0x4737, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2b9, gbc.sp());
        EXPECT(0x4739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0074
        gbc.setState(0x7561, 0xafac, 0x42d0, 0x1133, 0xd5c5, 0x7eff, 0x1, 0x1);
        gbc.writeMem(0x7561, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xafac, gbc.sp());
        EXPECT(0x7563, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0075
        gbc.setState(0xa93c, 0x4473, 0x5b20, 0x77f4, 0x18ff, 0xb7de, 0x0, 0x1);
        gbc.writeMem(0xa93c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4473, gbc.sp());
        EXPECT(0xa93e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa93c));
        EXPECT(0x94, gbc.readMem(0xa93d));
        // CB 94 0076
        gbc.setState(0x3665, 0xf430, 0x5c90, 0xb876, 0x2458, 0xdaf, 0x0, 0x0);
        gbc.writeMem(0x3665, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf430, gbc.sp());
        EXPECT(0x3667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0077
        gbc.setState(0xcf1c, 0x54d8, 0x7890, 0xbb86, 0xaa58, 0x3d97, 0x1, 0x0);
        gbc.writeMem(0xcf1c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x54d8, gbc.sp());
        EXPECT(0xcf1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf1c));
        EXPECT(0x94, gbc.readMem(0xcf1d));
        // CB 94 0078
        gbc.setState(0x368f, 0x9b53, 0xbd10, 0x6bf6, 0x7c4e, 0x3898, 0x1, 0x1);
        gbc.writeMem(0x368f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9b53, gbc.sp());
        EXPECT(0x3691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0079
        gbc.setState(0x1757, 0x8976, 0x6e80, 0xfac3, 0x517a, 0xd250, 0x1, 0x0);
        gbc.writeMem(0x1757, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8976, gbc.sp());
        EXPECT(0x1759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 007A
        gbc.setState(0x3d33, 0x9114, 0x7b60, 0x14da, 0xb83f, 0xa78c, 0x1, 0x1);
        gbc.writeMem(0x3d33, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9114, gbc.sp());
        EXPECT(0x3d35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 007B
        gbc.setState(0xb7ac, 0x145d, 0xbbe0, 0xa9ed, 0x7da4, 0xb01f, 0x0, 0x0);
        gbc.writeMem(0xb7ac, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x145d, gbc.sp());
        EXPECT(0xb7ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ac));
        EXPECT(0x94, gbc.readMem(0xb7ad));
        // CB 94 007C
        gbc.setState(0x54ce, 0xb01f, 0x18a0, 0x8d76, 0x2099, 0x2439, 0x1, 0x0);
        gbc.writeMem(0x54ce, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb01f, gbc.sp());
        EXPECT(0x54d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 007D
        gbc.setState(0xe302, 0xf922, 0x8400, 0x9d8f, 0x314e, 0xf306, 0x0, 0x0);
        gbc.writeMem(0xe302, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf922, gbc.sp());
        EXPECT(0xe304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe302));
        EXPECT(0x94, gbc.readMem(0xe303));
        // CB 94 007E
        gbc.setState(0x95c5, 0xd76e, 0x3f80, 0x6de6, 0xb501, 0x709f, 0x1, 0x0);
        gbc.writeMem(0x95c5, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd76e, gbc.sp());
        EXPECT(0x95c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95c5));
        EXPECT(0x94, gbc.readMem(0x95c6));
        // CB 94 007F
        gbc.setState(0x26be, 0xdf84, 0x4050, 0x389d, 0x4f7, 0x2044, 0x0, 0x0);
        gbc.writeMem(0x26be, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdf84, gbc.sp());
        EXPECT(0x26c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0080
        gbc.setState(0xe3ca, 0x250c, 0xc550, 0x92f7, 0xa849, 0xe515, 0x0, 0x0);
        gbc.writeMem(0xe3ca, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x250c, gbc.sp());
        EXPECT(0xe3cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ca));
        EXPECT(0x94, gbc.readMem(0xe3cb));
        // CB 94 0081
        gbc.setState(0xa0dd, 0x7944, 0xa060, 0x7376, 0x2707, 0xa2ec, 0x1, 0x1);
        gbc.writeMem(0xa0dd, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7944, gbc.sp());
        EXPECT(0xa0df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0dd));
        EXPECT(0x94, gbc.readMem(0xa0de));
        // CB 94 0082
        gbc.setState(0xec06, 0xf5f4, 0x7640, 0x5edc, 0xdf98, 0x56cd, 0x1, 0x0);
        gbc.writeMem(0xec06, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf5f4, gbc.sp());
        EXPECT(0xec08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec06));
        EXPECT(0x94, gbc.readMem(0xec07));
        // CB 94 0083
        gbc.setState(0x6d6d, 0x2ce1, 0x960, 0x1943, 0x5c08, 0x1269, 0x0, 0x1);
        gbc.writeMem(0x6d6d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2ce1, gbc.sp());
        EXPECT(0x6d6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0084
        gbc.setState(0x34b7, 0xea63, 0x7e70, 0xf8bb, 0xd38b, 0xb0ff, 0x0, 0x1);
        gbc.writeMem(0x34b7, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xea63, gbc.sp());
        EXPECT(0x34b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0085
        gbc.setState(0x87cf, 0xee2d, 0x77b0, 0x37d2, 0xf993, 0x1f08, 0x1, 0x0);
        gbc.writeMem(0x87cf, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xee2d, gbc.sp());
        EXPECT(0x87d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87cf));
        EXPECT(0x94, gbc.readMem(0x87d0));
        // CB 94 0087
        gbc.setState(0xa6a, 0x132e, 0x1bc0, 0x3569, 0xfee7, 0x7be3, 0x1, 0x0);
        gbc.writeMem(0xa6a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x132e, gbc.sp());
        EXPECT(0xa6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0088
        gbc.setState(0x108b, 0xcb58, 0x9830, 0x2a2f, 0x9dff, 0xa92d, 0x1, 0x1);
        gbc.writeMem(0x108b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xcb58, gbc.sp());
        EXPECT(0x108d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0089
        gbc.setState(0xc1ea, 0x710b, 0xf2a0, 0x5b90, 0x9f30, 0x776e, 0x1, 0x0);
        gbc.writeMem(0xc1ea, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x710b, gbc.sp());
        EXPECT(0xc1ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ea));
        EXPECT(0x94, gbc.readMem(0xc1eb));
        // CB 94 008A
        gbc.setState(0xa391, 0x320d, 0xe1a0, 0xf2e3, 0x9a8f, 0xc17e, 0x1, 0x1);
        gbc.writeMem(0xa391, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x320d, gbc.sp());
        EXPECT(0xa393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa391));
        EXPECT(0x94, gbc.readMem(0xa392));
        // CB 94 008B
        gbc.setState(0x2e1b, 0x8169, 0x67b0, 0x8f94, 0xb089, 0xa96, 0x0, 0x1);
        gbc.writeMem(0x2e1b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8169, gbc.sp());
        EXPECT(0x2e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 008C
        gbc.setState(0x27a6, 0xc89d, 0x1000, 0xe59d, 0x2cf9, 0x3119, 0x1, 0x1);
        gbc.writeMem(0x27a6, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc89d, gbc.sp());
        EXPECT(0x27a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 008D
        gbc.setState(0xe5a2, 0x8db, 0xa530, 0x6e24, 0x391e, 0x2a49, 0x0, 0x1);
        gbc.writeMem(0xe5a2, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8db, gbc.sp());
        EXPECT(0xe5a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a2));
        EXPECT(0x94, gbc.readMem(0xe5a3));
        // CB 94 008E
        gbc.setState(0xa508, 0x760e, 0xdc60, 0xa86, 0xeee, 0xa3a5, 0x0, 0x0);
        gbc.writeMem(0xa508, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x760e, gbc.sp());
        EXPECT(0xa50a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa508));
        EXPECT(0x94, gbc.readMem(0xa509));
        // CB 94 008F
        gbc.setState(0x8f3, 0x5715, 0x3f20, 0xbd77, 0x6cd6, 0x301e, 0x0, 0x1);
        gbc.writeMem(0x8f3, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5715, gbc.sp());
        EXPECT(0x8f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0090
        gbc.setState(0x45b5, 0x56ed, 0x3f80, 0xe4d7, 0x70c8, 0xceed, 0x0, 0x1);
        gbc.writeMem(0x45b5, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x56ed, gbc.sp());
        EXPECT(0x45b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0091
        gbc.setState(0x847d, 0xa019, 0xc90, 0x1412, 0xa1f6, 0x1885, 0x1, 0x1);
        gbc.writeMem(0x847d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa019, gbc.sp());
        EXPECT(0x847f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x847d));
        EXPECT(0x94, gbc.readMem(0x847e));
        // CB 94 0092
        gbc.setState(0x52a0, 0x6be1, 0x5b80, 0xc419, 0x50b8, 0x11b5, 0x0, 0x1);
        gbc.writeMem(0x52a0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6be1, gbc.sp());
        EXPECT(0x52a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0093
        gbc.setState(0x41b1, 0xc9e, 0xdf30, 0x39a2, 0xcc0, 0xa139, 0x1, 0x0);
        gbc.writeMem(0x41b1, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc9e, gbc.sp());
        EXPECT(0x41b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0094
        gbc.setState(0xed2a, 0x37d6, 0x8e50, 0x4d12, 0x9aa9, 0xbf3, 0x1, 0x0);
        gbc.writeMem(0xed2a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x37d6, gbc.sp());
        EXPECT(0xed2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed2a));
        EXPECT(0x94, gbc.readMem(0xed2b));
        // CB 94 0095
        gbc.setState(0xc661, 0x57cf, 0xb470, 0xab16, 0x8bd5, 0x66f0, 0x1, 0x1);
        gbc.writeMem(0xc661, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x57cf, gbc.sp());
        EXPECT(0xc663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc661));
        EXPECT(0x94, gbc.readMem(0xc662));
        // CB 94 0096
        gbc.setState(0x8834, 0xd6f2, 0x2af0, 0xbc67, 0x7033, 0x9d18, 0x1, 0x1);
        gbc.writeMem(0x8834, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd6f2, gbc.sp());
        EXPECT(0x8836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8834));
        EXPECT(0x94, gbc.readMem(0x8835));
        // CB 94 0097
        gbc.setState(0xb6e5, 0x1adb, 0xc640, 0x659, 0xb3de, 0xd74b, 0x1, 0x0);
        gbc.writeMem(0xb6e5, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1adb, gbc.sp());
        EXPECT(0xb6e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e5));
        EXPECT(0x94, gbc.readMem(0xb6e6));
        // CB 94 0098
        gbc.setState(0x7dfc, 0x11d, 0x4420, 0xa705, 0x98a2, 0xf55c, 0x0, 0x1);
        gbc.writeMem(0x7dfc, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x11d, gbc.sp());
        EXPECT(0x7dfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0099
        gbc.setState(0x7c3d, 0xb435, 0xeb90, 0x79e4, 0xf7d2, 0x252e, 0x0, 0x1);
        gbc.writeMem(0x7c3d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb435, gbc.sp());
        EXPECT(0x7c3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 009A
        gbc.setState(0x3591, 0x339c, 0x57f0, 0x15f6, 0xf444, 0xcc2d, 0x0, 0x1);
        gbc.writeMem(0x3591, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x339c, gbc.sp());
        EXPECT(0x3593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 009B
        gbc.setState(0x2fae, 0xbcf, 0xe1d0, 0x67f8, 0x5eaf, 0xcf5c, 0x0, 0x0);
        gbc.writeMem(0x2fae, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xbcf, gbc.sp());
        EXPECT(0x2fb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 009C
        gbc.setState(0xaf05, 0x9e34, 0x5620, 0x5dda, 0x501d, 0x8845, 0x1, 0x0);
        gbc.writeMem(0xaf05, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9e34, gbc.sp());
        EXPECT(0xaf07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf05));
        EXPECT(0x94, gbc.readMem(0xaf06));
        // CB 94 009D
        gbc.setState(0xe5cb, 0x2a08, 0xff70, 0xb12, 0x3e9a, 0xe66a, 0x1, 0x1);
        gbc.writeMem(0xe5cb, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2a08, gbc.sp());
        EXPECT(0xe5cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5cb));
        EXPECT(0x94, gbc.readMem(0xe5cc));
        // CB 94 009E
        gbc.setState(0x4387, 0x6669, 0xe2b0, 0xf42, 0xe4f3, 0xc233, 0x0, 0x1);
        gbc.writeMem(0x4387, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6669, gbc.sp());
        EXPECT(0x4389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 009F
        gbc.setState(0x2480, 0x542c, 0x4830, 0x56a4, 0x145f, 0xcb8d, 0x0, 0x0);
        gbc.writeMem(0x2480, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x542c, gbc.sp());
        EXPECT(0x2482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 00A0
        gbc.setState(0xade, 0xe3cb, 0xf100, 0x51eb, 0x8124, 0x32f9, 0x0, 0x0);
        gbc.writeMem(0xade, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe3cb, gbc.sp());
        EXPECT(0xae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00A1
        gbc.setState(0xb3f7, 0x5dbe, 0xef70, 0xf4f3, 0xb81e, 0xb8cb, 0x1, 0x0);
        gbc.writeMem(0xb3f7, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5dbe, gbc.sp());
        EXPECT(0xb3f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f7));
        EXPECT(0x94, gbc.readMem(0xb3f8));
        // CB 94 00A2
        gbc.setState(0xd853, 0x536e, 0x4400, 0xe251, 0x7423, 0xa289, 0x0, 0x0);
        gbc.writeMem(0xd853, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x536e, gbc.sp());
        EXPECT(0xd855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd853));
        EXPECT(0x94, gbc.readMem(0xd854));
        // CB 94 00A3
        gbc.setState(0x5c05, 0xed5d, 0xf030, 0x8b80, 0x1dc1, 0x139, 0x1, 0x1);
        gbc.writeMem(0x5c05, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xed5d, gbc.sp());
        EXPECT(0x5c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 00A4
        gbc.setState(0xe2b9, 0xd685, 0xf2a0, 0x48a8, 0x84b7, 0x73b0, 0x1, 0x1);
        gbc.writeMem(0xe2b9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd685, gbc.sp());
        EXPECT(0xe2bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b9));
        EXPECT(0x94, gbc.readMem(0xe2ba));
        // CB 94 00A5
        gbc.setState(0x33d3, 0xc7f0, 0x1ba0, 0x26fe, 0x2e7d, 0x7cc2, 0x0, 0x0);
        gbc.writeMem(0x33d3, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc7f0, gbc.sp());
        EXPECT(0x33d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00A6
        gbc.setState(0x84ab, 0xae23, 0xa4e0, 0x3b, 0xd058, 0x944f, 0x1, 0x1);
        gbc.writeMem(0x84ab, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xae23, gbc.sp());
        EXPECT(0x84ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ab));
        EXPECT(0x94, gbc.readMem(0x84ac));
        // CB 94 00A7
        gbc.setState(0x23e3, 0x6cd0, 0x8720, 0xcf3a, 0x2617, 0x4314, 0x1, 0x1);
        gbc.writeMem(0x23e3, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6cd0, gbc.sp());
        EXPECT(0x23e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00A8
        gbc.setState(0x10da, 0x70fe, 0x9800, 0x374d, 0x3a47, 0xb2d4, 0x1, 0x1);
        gbc.writeMem(0x10da, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x70fe, gbc.sp());
        EXPECT(0x10dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00A9
        gbc.setState(0xdaad, 0x3ee0, 0x690, 0x99f7, 0x6ee0, 0x8ff3, 0x0, 0x0);
        gbc.writeMem(0xdaad, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3ee0, gbc.sp());
        EXPECT(0xdaaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaad));
        EXPECT(0x94, gbc.readMem(0xdaae));
        // CB 94 00AA
        gbc.setState(0x3dcb, 0xb857, 0x4990, 0x5cec, 0x5fce, 0xf421, 0x0, 0x1);
        gbc.writeMem(0x3dcb, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb857, gbc.sp());
        EXPECT(0x3dcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 00AB
        gbc.setState(0x42f5, 0x1273, 0x5870, 0xe7bd, 0xcf83, 0xe463, 0x0, 0x0);
        gbc.writeMem(0x42f5, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1273, gbc.sp());
        EXPECT(0x42f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 00AC
        gbc.setState(0x1d01, 0x9cb1, 0x2ee0, 0x92, 0x95af, 0x55b6, 0x1, 0x0);
        gbc.writeMem(0x1d01, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9cb1, gbc.sp());
        EXPECT(0x1d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00AD
        gbc.setState(0x436b, 0x8ea2, 0x19d0, 0xa1b4, 0xb302, 0xae63, 0x0, 0x1);
        gbc.writeMem(0x436b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8ea2, gbc.sp());
        EXPECT(0x436d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 00AE
        gbc.setState(0x2964, 0x602e, 0xe480, 0xaf54, 0x2af2, 0xe591, 0x1, 0x1);
        gbc.writeMem(0x2964, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x602e, gbc.sp());
        EXPECT(0x2966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00AF
        gbc.setState(0x7ee9, 0x17f4, 0xf0b0, 0x8f03, 0x548, 0x265c, 0x0, 0x1);
        gbc.writeMem(0x7ee9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x17f4, gbc.sp());
        EXPECT(0x7eeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 00B0
        gbc.setState(0x3dc7, 0xa4d1, 0x7a70, 0xe4c5, 0xdf7b, 0xae03, 0x0, 0x0);
        gbc.writeMem(0x3dc7, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa4d1, gbc.sp());
        EXPECT(0x3dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 00B1
        gbc.setState(0xeb6, 0x37e2, 0xdb10, 0xcd5, 0x4858, 0x5cf5, 0x0, 0x1);
        gbc.writeMem(0xeb6, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x37e2, gbc.sp());
        EXPECT(0xeb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 00B2
        gbc.setState(0x9f9c, 0x964a, 0x6ec0, 0xb41a, 0xad2f, 0x4ec9, 0x0, 0x0);
        gbc.writeMem(0x9f9c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x964a, gbc.sp());
        EXPECT(0x9f9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f9c));
        EXPECT(0x94, gbc.readMem(0x9f9d));
        // CB 94 00B3
        gbc.setState(0x1c0, 0xfd58, 0x9b70, 0xb83b, 0x7913, 0xb771, 0x1, 0x1);
        gbc.writeMem(0x1c0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfd58, gbc.sp());
        EXPECT(0x1c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 00B4
        gbc.setState(0xe3a1, 0x8fa1, 0x67e0, 0xc801, 0xfe3e, 0x2fce, 0x0, 0x0);
        gbc.writeMem(0xe3a1, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8fa1, gbc.sp());
        EXPECT(0xe3a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3a1));
        EXPECT(0x94, gbc.readMem(0xe3a2));
        // CB 94 00B5
        gbc.setState(0xa81e, 0x65fa, 0xf700, 0x9a8c, 0x3d96, 0xd918, 0x0, 0x1);
        gbc.writeMem(0xa81e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x65fa, gbc.sp());
        EXPECT(0xa820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa81e));
        EXPECT(0x94, gbc.readMem(0xa81f));
        // CB 94 00B7
        gbc.setState(0x6790, 0x48e7, 0xaa30, 0xa643, 0x40e6, 0x212f, 0x1, 0x0);
        gbc.writeMem(0x6790, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x48e7, gbc.sp());
        EXPECT(0x6792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 00B8
        gbc.setState(0x867, 0x8a75, 0x90e0, 0xe0ba, 0xe171, 0x5954, 0x0, 0x0);
        gbc.writeMem(0x867, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8a75, gbc.sp());
        EXPECT(0x869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00B9
        gbc.setState(0x5c04, 0x4dfa, 0xfa40, 0x22a9, 0x5719, 0xb964, 0x1, 0x0);
        gbc.writeMem(0x5c04, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4dfa, gbc.sp());
        EXPECT(0x5c06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00BA
        gbc.setState(0x11c, 0x6b50, 0xe170, 0x96e9, 0x64fb, 0x7358, 0x1, 0x0);
        gbc.writeMem(0x11c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6b50, gbc.sp());
        EXPECT(0x11e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 00BB
        gbc.setState(0xade7, 0xaed3, 0x1f60, 0x4839, 0x81a1, 0x2ac6, 0x1, 0x1);
        gbc.writeMem(0xade7, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xaed3, gbc.sp());
        EXPECT(0xade9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xade7));
        EXPECT(0x94, gbc.readMem(0xade8));
        // CB 94 00BC
        gbc.setState(0xba8c, 0xefed, 0xee60, 0x2028, 0x2cc8, 0xe752, 0x1, 0x1);
        gbc.writeMem(0xba8c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xefed, gbc.sp());
        EXPECT(0xba8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba8c));
        EXPECT(0x94, gbc.readMem(0xba8d));
        // CB 94 00BD
        gbc.setState(0x690c, 0xb5c6, 0x32e0, 0x3305, 0x3ece, 0x660e, 0x1, 0x0);
        gbc.writeMem(0x690c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb5c6, gbc.sp());
        EXPECT(0x690e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00BE
        gbc.setState(0x28e9, 0xbccb, 0x7e20, 0x7088, 0x95a3, 0xf453, 0x0, 0x1);
        gbc.writeMem(0x28e9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xbccb, gbc.sp());
        EXPECT(0x28eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00BF
        gbc.setState(0xe15a, 0x40c8, 0xdb80, 0xebcd, 0x27af, 0x4e3, 0x1, 0x1);
        gbc.writeMem(0xe15a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x40c8, gbc.sp());
        EXPECT(0xe15c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe15a));
        EXPECT(0x94, gbc.readMem(0xe15b));
        // CB 94 00C0
        gbc.setState(0x66fc, 0x259a, 0x2030, 0xb916, 0xac95, 0x864c, 0x1, 0x1);
        gbc.writeMem(0x66fc, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x259a, gbc.sp());
        EXPECT(0x66fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 00C1
        gbc.setState(0x1dc8, 0xbb0a, 0xbc60, 0x4dd, 0x9e66, 0xb6b4, 0x1, 0x1);
        gbc.writeMem(0x1dc8, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbb0a, gbc.sp());
        EXPECT(0x1dca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00C3
        gbc.setState(0x4681, 0xbf29, 0x9f00, 0x48f7, 0x668b, 0x9335, 0x1, 0x1);
        gbc.writeMem(0x4681, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbf29, gbc.sp());
        EXPECT(0x4683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00C4
        gbc.setState(0xd0c8, 0x8f9f, 0xf2b0, 0xe6b4, 0x1654, 0xcfe9, 0x0, 0x1);
        gbc.writeMem(0xd0c8, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8f9f, gbc.sp());
        EXPECT(0xd0ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c8));
        EXPECT(0x94, gbc.readMem(0xd0c9));
        // CB 94 00C5
        gbc.setState(0xac83, 0xa06c, 0xb590, 0x9106, 0x6574, 0xff97, 0x1, 0x1);
        gbc.writeMem(0xac83, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa06c, gbc.sp());
        EXPECT(0xac85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac83));
        EXPECT(0x94, gbc.readMem(0xac84));
        // CB 94 00C6
        gbc.setState(0x1a7f, 0xc824, 0x39a0, 0xf282, 0x8d5f, 0x81dc, 0x1, 0x0);
        gbc.writeMem(0x1a7f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc824, gbc.sp());
        EXPECT(0x1a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00C7
        gbc.setState(0x957b, 0x86d1, 0xfce0, 0x9df, 0xe2b4, 0xd99a, 0x1, 0x1);
        gbc.writeMem(0x957b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x86d1, gbc.sp());
        EXPECT(0x957d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x957b));
        EXPECT(0x94, gbc.readMem(0x957c));
        // CB 94 00C8
        gbc.setState(0x4d03, 0x2d61, 0x2050, 0xe77d, 0x986f, 0x4a8d, 0x0, 0x0);
        gbc.writeMem(0x4d03, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2d61, gbc.sp());
        EXPECT(0x4d05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 00CA
        gbc.setState(0xd7f7, 0x2603, 0xe020, 0x774c, 0xd1a9, 0xe7a5, 0x0, 0x1);
        gbc.writeMem(0xd7f7, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2603, gbc.sp());
        EXPECT(0xd7f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7f7));
        EXPECT(0x94, gbc.readMem(0xd7f8));
        // CB 94 00CB
        gbc.setState(0xbebb, 0xc9d3, 0xe750, 0xad4a, 0x273b, 0x2e8e, 0x1, 0x1);
        gbc.writeMem(0xbebb, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc9d3, gbc.sp());
        EXPECT(0xbebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbebb));
        EXPECT(0x94, gbc.readMem(0xbebc));
        // CB 94 00CC
        gbc.setState(0x798e, 0x5674, 0xe940, 0x685e, 0x1833, 0x3a59, 0x1, 0x0);
        gbc.writeMem(0x798e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5674, gbc.sp());
        EXPECT(0x7990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00CD
        gbc.setState(0xe97, 0x887f, 0x93d0, 0x97bb, 0x2c7b, 0x98e8, 0x1, 0x0);
        gbc.writeMem(0xe97, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x887f, gbc.sp());
        EXPECT(0xe99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 00CE
        gbc.setState(0x5b3d, 0x6dc2, 0x9aa0, 0x361d, 0x83a, 0x541e, 0x0, 0x1);
        gbc.writeMem(0x5b3d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6dc2, gbc.sp());
        EXPECT(0x5b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00CF
        gbc.setState(0x853e, 0xbf76, 0xe320, 0xc75f, 0xe82d, 0x1167, 0x0, 0x1);
        gbc.writeMem(0x853e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbf76, gbc.sp());
        EXPECT(0x8540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x853e));
        EXPECT(0x94, gbc.readMem(0x853f));
        // CB 94 00D0
        gbc.setState(0x6284, 0xb550, 0x42c0, 0x3a83, 0xe2da, 0xc0a3, 0x1, 0x0);
        gbc.writeMem(0x6284, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb550, gbc.sp());
        EXPECT(0x6286, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00D1
        gbc.setState(0xada6, 0x1fe6, 0xba10, 0xf79f, 0x5f13, 0xc5a4, 0x0, 0x1);
        gbc.writeMem(0xada6, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1fe6, gbc.sp());
        EXPECT(0xada8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada6));
        EXPECT(0x94, gbc.readMem(0xada7));
        // CB 94 00D2
        gbc.setState(0x90fe, 0x539e, 0x5b0, 0xfb38, 0x67cd, 0x78cd, 0x0, 0x0);
        gbc.writeMem(0x90fe, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x539e, gbc.sp());
        EXPECT(0x9100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90fe));
        EXPECT(0x94, gbc.readMem(0x90ff));
        // CB 94 00D3
        gbc.setState(0xe86a, 0x9ce3, 0xe0e0, 0xd775, 0x95a8, 0xac18, 0x1, 0x1);
        gbc.writeMem(0xe86a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9ce3, gbc.sp());
        EXPECT(0xe86c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe86a));
        EXPECT(0x94, gbc.readMem(0xe86b));
        // CB 94 00D4
        gbc.setState(0xaf76, 0xcbc0, 0x6230, 0x7d9c, 0xf3e8, 0xa82e, 0x0, 0x1);
        gbc.writeMem(0xaf76, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcbc0, gbc.sp());
        EXPECT(0xaf78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf76));
        EXPECT(0x94, gbc.readMem(0xaf77));
        // CB 94 00D5
        gbc.setState(0x33f8, 0x468a, 0x4d80, 0x3a9d, 0xa02, 0xaf90, 0x0, 0x1);
        gbc.writeMem(0x33f8, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x468a, gbc.sp());
        EXPECT(0x33fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00D6
        gbc.setState(0x4f8f, 0x7c66, 0xb350, 0x795f, 0xf42, 0x8190, 0x0, 0x0);
        gbc.writeMem(0x4f8f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7c66, gbc.sp());
        EXPECT(0x4f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 00D7
        gbc.setState(0x2947, 0x4fc6, 0xb4c0, 0x29b1, 0xea3d, 0x3261, 0x1, 0x1);
        gbc.writeMem(0x2947, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4fc6, gbc.sp());
        EXPECT(0x2949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00D8
        gbc.setState(0x3a2c, 0xc07, 0x4820, 0xb686, 0xb351, 0x56a2, 0x0, 0x0);
        gbc.writeMem(0x3a2c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc07, gbc.sp());
        EXPECT(0x3a2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00D9
        gbc.setState(0xadff, 0x7571, 0x54a0, 0x721a, 0x22fb, 0xeec, 0x0, 0x1);
        gbc.writeMem(0xadff, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7571, gbc.sp());
        EXPECT(0xae01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadff));
        EXPECT(0x94, gbc.readMem(0xae00));
        // CB 94 00DA
        gbc.setState(0x5531, 0xc16, 0xf700, 0x4b8e, 0x8f3a, 0x38ac, 0x1, 0x0);
        gbc.writeMem(0x5531, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc16, gbc.sp());
        EXPECT(0x5533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00DC
        gbc.setState(0xb96f, 0xc871, 0x3ee0, 0x5701, 0xdc4f, 0x30b8, 0x1, 0x1);
        gbc.writeMem(0xb96f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc871, gbc.sp());
        EXPECT(0xb971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb96f));
        EXPECT(0x94, gbc.readMem(0xb970));
        // CB 94 00DD
        gbc.setState(0x6cf7, 0xec97, 0x79a0, 0x599b, 0x6ed1, 0x72d4, 0x0, 0x1);
        gbc.writeMem(0x6cf7, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xec97, gbc.sp());
        EXPECT(0x6cf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00DE
        gbc.setState(0x9d9b, 0x3b0a, 0x5720, 0x6050, 0xe753, 0x8f41, 0x1, 0x1);
        gbc.writeMem(0x9d9b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3b0a, gbc.sp());
        EXPECT(0x9d9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d9b));
        EXPECT(0x94, gbc.readMem(0x9d9c));
        // CB 94 00DF
        gbc.setState(0x7f2d, 0x8de8, 0x97b0, 0x5a45, 0x44a7, 0x1164, 0x0, 0x1);
        gbc.writeMem(0x7f2d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8de8, gbc.sp());
        EXPECT(0x7f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 00E0
        gbc.setState(0xb148, 0x801e, 0xb640, 0x4cb2, 0xdc0, 0xe8f, 0x1, 0x0);
        gbc.writeMem(0xb148, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x801e, gbc.sp());
        EXPECT(0xb14a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb148));
        EXPECT(0x94, gbc.readMem(0xb149));
        // CB 94 00E1
        gbc.setState(0x1075, 0x2f52, 0x32b0, 0x5403, 0xe14c, 0x1dc4, 0x1, 0x1);
        gbc.writeMem(0x1075, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2f52, gbc.sp());
        EXPECT(0x1077, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 00E2
        gbc.setState(0x4228, 0xf8c0, 0xd7c0, 0xb82, 0xd801, 0xb5b3, 0x1, 0x0);
        gbc.writeMem(0x4228, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf8c0, gbc.sp());
        EXPECT(0x422a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00E3
        gbc.setState(0x2cc0, 0x6a49, 0x1af0, 0x7f28, 0xd1c9, 0x4103, 0x1, 0x1);
        gbc.writeMem(0x2cc0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6a49, gbc.sp());
        EXPECT(0x2cc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 00E4
        gbc.setState(0xe4c9, 0x9121, 0x570, 0x863d, 0x81a7, 0x3fcc, 0x1, 0x1);
        gbc.writeMem(0xe4c9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9121, gbc.sp());
        EXPECT(0xe4cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c9));
        EXPECT(0x94, gbc.readMem(0xe4ca));
        // CB 94 00E5
        gbc.setState(0x87ae, 0x9286, 0x4e0, 0x6db1, 0x5ac8, 0xba1f, 0x0, 0x1);
        gbc.writeMem(0x87ae, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9286, gbc.sp());
        EXPECT(0x87b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ae));
        EXPECT(0x94, gbc.readMem(0x87af));
        // CB 94 00E6
        gbc.setState(0x2a56, 0x81d0, 0xd300, 0xe582, 0xfa31, 0x2577, 0x0, 0x0);
        gbc.writeMem(0x2a56, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x81d0, gbc.sp());
        EXPECT(0x2a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00E7
        gbc.setState(0x4f6c, 0x2da8, 0xfd20, 0xc61c, 0x1d70, 0xbcbd, 0x1, 0x0);
        gbc.writeMem(0x4f6c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2da8, gbc.sp());
        EXPECT(0x4f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00E8
        gbc.setState(0x2db2, 0x799b, 0x8ea0, 0x4a1b, 0x28e8, 0x8631, 0x1, 0x1);
        gbc.writeMem(0x2db2, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x799b, gbc.sp());
        EXPECT(0x2db4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00E9
        gbc.setState(0x50a8, 0xc900, 0xe1c0, 0xc370, 0x9e51, 0x13af, 0x0, 0x1);
        gbc.writeMem(0x50a8, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc900, gbc.sp());
        EXPECT(0x50aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00EA
        gbc.setState(0xeb97, 0x2ab2, 0xcfb0, 0xcf5b, 0x1ec5, 0x86ac, 0x0, 0x1);
        gbc.writeMem(0xeb97, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2ab2, gbc.sp());
        EXPECT(0xeb99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb97));
        EXPECT(0x94, gbc.readMem(0xeb98));
        // CB 94 00EB
        gbc.setState(0xd5d3, 0xefc9, 0x7110, 0x7ed4, 0x3de6, 0xb7c, 0x1, 0x0);
        gbc.writeMem(0xd5d3, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xefc9, gbc.sp());
        EXPECT(0xd5d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d3));
        EXPECT(0x94, gbc.readMem(0xd5d4));
        // CB 94 00EC
        gbc.setState(0xb3a8, 0xdcea, 0x1260, 0x5881, 0x9a1a, 0x74e5, 0x1, 0x0);
        gbc.writeMem(0xb3a8, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xdcea, gbc.sp());
        EXPECT(0xb3aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a8));
        EXPECT(0x94, gbc.readMem(0xb3a9));
        // CB 94 00ED
        gbc.setState(0x704e, 0x5884, 0x17e0, 0x31e4, 0x7c91, 0x5f02, 0x0, 0x1);
        gbc.writeMem(0x704e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5884, gbc.sp());
        EXPECT(0x7050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00EE
        gbc.setState(0x1f16, 0xf6b0, 0xf2c0, 0x4ecd, 0x8a7b, 0xba4e, 0x0, 0x0);
        gbc.writeMem(0x1f16, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf6b0, gbc.sp());
        EXPECT(0x1f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00EF
        gbc.setState(0xdb25, 0x2fe2, 0xd120, 0xe6d4, 0x3888, 0xf7a9, 0x1, 0x1);
        gbc.writeMem(0xdb25, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2fe2, gbc.sp());
        EXPECT(0xdb27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb25));
        EXPECT(0x94, gbc.readMem(0xdb26));
        // CB 94 00F0
        gbc.setState(0x75a2, 0x891d, 0xd410, 0x2895, 0x7fd3, 0x9fe2, 0x1, 0x1);
        gbc.writeMem(0x75a2, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x891d, gbc.sp());
        EXPECT(0x75a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 00F1
        gbc.setState(0x2a4e, 0x4e9a, 0xe6f0, 0xf7bd, 0xfc96, 0xf96f, 0x1, 0x1);
        gbc.writeMem(0x2a4e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4e9a, gbc.sp());
        EXPECT(0x2a50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 00F2
        gbc.setState(0x21d6, 0xfb4d, 0xb0c0, 0x43ad, 0xc01e, 0x8db2, 0x1, 0x0);
        gbc.writeMem(0x21d6, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfb4d, gbc.sp());
        EXPECT(0x21d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00F3
        gbc.setState(0xe3eb, 0x4bed, 0x11b0, 0x4ce, 0x4ca1, 0xd184, 0x1, 0x0);
        gbc.writeMem(0xe3eb, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4bed, gbc.sp());
        EXPECT(0xe3ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3eb));
        EXPECT(0x94, gbc.readMem(0xe3ec));
        // CB 94 00F4
        gbc.setState(0xe6b7, 0x2a00, 0x8100, 0xc54e, 0x433e, 0xf784, 0x1, 0x0);
        gbc.writeMem(0xe6b7, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2a00, gbc.sp());
        EXPECT(0xe6b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b7));
        EXPECT(0x94, gbc.readMem(0xe6b8));
        // CB 94 00F5
        gbc.setState(0x5af0, 0x2e21, 0xc290, 0x2f22, 0x1a73, 0x510c, 0x1, 0x1);
        gbc.writeMem(0x5af0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2e21, gbc.sp());
        EXPECT(0x5af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 00F6
        gbc.setState(0xd225, 0xcfbe, 0xb4f0, 0xa3aa, 0xf7d9, 0x8fa0, 0x0, 0x0);
        gbc.writeMem(0xd225, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcfbe, gbc.sp());
        EXPECT(0xd227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd225));
        EXPECT(0x94, gbc.readMem(0xd226));
        // CB 94 00F7
        gbc.setState(0xdde9, 0x6d5e, 0x7290, 0x2ed1, 0xa38b, 0xd7b, 0x0, 0x0);
        gbc.writeMem(0xdde9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6d5e, gbc.sp());
        EXPECT(0xddeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde9));
        EXPECT(0x94, gbc.readMem(0xddea));
        // CB 94 00F8
        gbc.setState(0xa7f2, 0x6bf7, 0x4dc0, 0x4dd7, 0x2859, 0xf593, 0x1, 0x0);
        gbc.writeMem(0xa7f2, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6bf7, gbc.sp());
        EXPECT(0xa7f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f2));
        EXPECT(0x94, gbc.readMem(0xa7f3));
        // CB 94 00F9
        gbc.setState(0x65ef, 0xceb3, 0xf1c0, 0x9b2c, 0x9afa, 0xf581, 0x1, 0x1);
        gbc.writeMem(0x65ef, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xceb3, gbc.sp());
        EXPECT(0x65f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00FB
        gbc.setState(0x319d, 0x9f29, 0xe560, 0xcd75, 0x5254, 0xaeac, 0x1, 0x0);
        gbc.writeMem(0x319d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9f29, gbc.sp());
        EXPECT(0x319f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00FC
        gbc.setState(0xd39a, 0x7952, 0x8880, 0xc658, 0x7aff, 0xea7, 0x0, 0x0);
        gbc.writeMem(0xd39a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7952, gbc.sp());
        EXPECT(0xd39c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd39a));
        EXPECT(0x94, gbc.readMem(0xd39b));
        // CB 94 00FD
        gbc.setState(0x57ca, 0xea15, 0x3c30, 0x55b8, 0x4a0f, 0x6a7c, 0x0, 0x1);
        gbc.writeMem(0x57ca, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xea15, gbc.sp());
        EXPECT(0x57cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 00FE
        gbc.setState(0x7b7f, 0x335, 0xb960, 0x5d00, 0xf541, 0xf9c, 0x0, 0x1);
        gbc.writeMem(0x7b7f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x335, gbc.sp());
        EXPECT(0x7b81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 00FF
        gbc.setState(0xe9e0, 0x7c81, 0x4ca0, 0x7fe8, 0x5fb6, 0xd653, 0x1, 0x1);
        gbc.writeMem(0xe9e0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7c81, gbc.sp());
        EXPECT(0xe9e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9e0));
        EXPECT(0x94, gbc.readMem(0xe9e1));
        // CB 94 0100
        gbc.setState(0x9b34, 0xf183, 0x99d0, 0x9b7, 0xced6, 0xfbc0, 0x0, 0x1);
        gbc.writeMem(0x9b34, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf183, gbc.sp());
        EXPECT(0x9b36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b34));
        EXPECT(0x94, gbc.readMem(0x9b35));
        // CB 94 0101
        gbc.setState(0xb1cc, 0x8cc6, 0x21a0, 0xb5e1, 0x41ab, 0xb6c3, 0x0, 0x1);
        gbc.writeMem(0xb1cc, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8cc6, gbc.sp());
        EXPECT(0xb1ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1cc));
        EXPECT(0x94, gbc.readMem(0xb1cd));
        // CB 94 0102
        gbc.setState(0xc751, 0x669c, 0xe730, 0x78, 0xa321, 0xf9, 0x1, 0x1);
        gbc.writeMem(0xc751, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x669c, gbc.sp());
        EXPECT(0xc753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc751));
        EXPECT(0x94, gbc.readMem(0xc752));
        // CB 94 0103
        gbc.setState(0x9332, 0x7c90, 0x3870, 0xde54, 0xec22, 0x8432, 0x1, 0x1);
        gbc.writeMem(0x9332, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7c90, gbc.sp());
        EXPECT(0x9334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9332));
        EXPECT(0x94, gbc.readMem(0x9333));
        // CB 94 0104
        gbc.setState(0x8260, 0x3c50, 0x52c0, 0x638b, 0x7fa8, 0x85f4, 0x0, 0x1);
        gbc.writeMem(0x8260, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3c50, gbc.sp());
        EXPECT(0x8262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8260));
        EXPECT(0x94, gbc.readMem(0x8261));
        // CB 94 0105
        gbc.setState(0xca99, 0x62fe, 0x9070, 0xbabf, 0x6ea4, 0xc7fb, 0x0, 0x1);
        gbc.writeMem(0xca99, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x62fe, gbc.sp());
        EXPECT(0xca9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca99));
        EXPECT(0x94, gbc.readMem(0xca9a));
        // CB 94 0106
        gbc.setState(0x3d25, 0x97d0, 0xd120, 0x142e, 0x2e31, 0x8e99, 0x1, 0x1);
        gbc.writeMem(0x3d25, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x97d0, gbc.sp());
        EXPECT(0x3d27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0107
        gbc.setState(0x170e, 0x8f32, 0x6250, 0xff48, 0x44e8, 0x9f18, 0x1, 0x1);
        gbc.writeMem(0x170e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8f32, gbc.sp());
        EXPECT(0x1710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0108
        gbc.setState(0x6f54, 0xc588, 0x4f40, 0xd787, 0x8cd3, 0x958f, 0x0, 0x1);
        gbc.writeMem(0x6f54, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc588, gbc.sp());
        EXPECT(0x6f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0109
        gbc.setState(0xd5e0, 0x9301, 0x6f90, 0x3902, 0xc017, 0xf290, 0x1, 0x1);
        gbc.writeMem(0xd5e0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9301, gbc.sp());
        EXPECT(0xd5e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e0));
        EXPECT(0x94, gbc.readMem(0xd5e1));
        // CB 94 010A
        gbc.setState(0x179c, 0x3739, 0x3320, 0x6a77, 0xaff7, 0xca8c, 0x0, 0x0);
        gbc.writeMem(0x179c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3739, gbc.sp());
        EXPECT(0x179e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 010B
        gbc.setState(0x9484, 0x6fea, 0x7e40, 0x30e7, 0x218f, 0x317c, 0x1, 0x0);
        gbc.writeMem(0x9484, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6fea, gbc.sp());
        EXPECT(0x9486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9484));
        EXPECT(0x94, gbc.readMem(0x9485));
        // CB 94 010C
        gbc.setState(0x6c7, 0x84df, 0xa330, 0xeb66, 0xe96e, 0xbd9, 0x1, 0x0);
        gbc.writeMem(0x6c7, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x84df, gbc.sp());
        EXPECT(0x6c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 010D
        gbc.setState(0x3303, 0x3c42, 0x2620, 0x442a, 0xdd49, 0xf5f9, 0x1, 0x1);
        gbc.writeMem(0x3303, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3c42, gbc.sp());
        EXPECT(0x3305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 010E
        gbc.setState(0x780c, 0xbbc0, 0xff60, 0x32eb, 0x96c5, 0xba68, 0x0, 0x1);
        gbc.writeMem(0x780c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbbc0, gbc.sp());
        EXPECT(0x780e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 010F
        gbc.setState(0xcabf, 0x1134, 0xbf00, 0x9bf4, 0xaae2, 0xd0d, 0x0, 0x0);
        gbc.writeMem(0xcabf, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1134, gbc.sp());
        EXPECT(0xcac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcabf));
        EXPECT(0x94, gbc.readMem(0xcac0));
        // CB 94 0110
        gbc.setState(0x3a4e, 0xec8f, 0xc320, 0x9bd4, 0xc0d4, 0x7c8, 0x1, 0x1);
        gbc.writeMem(0x3a4e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xec8f, gbc.sp());
        EXPECT(0x3a50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0111
        gbc.setState(0xed3a, 0x76c1, 0x9f20, 0x67e6, 0x4d38, 0x7836, 0x1, 0x1);
        gbc.writeMem(0xed3a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x76c1, gbc.sp());
        EXPECT(0xed3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed3a));
        EXPECT(0x94, gbc.readMem(0xed3b));
        // CB 94 0112
        gbc.setState(0x7718, 0xd853, 0xe5f0, 0x3e6e, 0xe753, 0x6b6, 0x1, 0x1);
        gbc.writeMem(0x7718, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd853, gbc.sp());
        EXPECT(0x771a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0113
        gbc.setState(0xa24f, 0x2b01, 0xb00, 0x56c5, 0x2fd1, 0xb76a, 0x1, 0x1);
        gbc.writeMem(0xa24f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2b01, gbc.sp());
        EXPECT(0xa251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa24f));
        EXPECT(0x94, gbc.readMem(0xa250));
        // CB 94 0114
        gbc.setState(0x54ae, 0x924f, 0x5600, 0x775e, 0x4b97, 0xb377, 0x1, 0x1);
        gbc.writeMem(0x54ae, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x924f, gbc.sp());
        EXPECT(0x54b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0115
        gbc.setState(0x857c, 0xf56d, 0xb9d0, 0xc616, 0x5b60, 0x76d0, 0x0, 0x1);
        gbc.writeMem(0x857c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf56d, gbc.sp());
        EXPECT(0x857e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x857c));
        EXPECT(0x94, gbc.readMem(0x857d));
        // CB 94 0116
        gbc.setState(0xbb27, 0x779, 0x4270, 0xd0b7, 0xbf62, 0x6921, 0x1, 0x0);
        gbc.writeMem(0xbb27, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x779, gbc.sp());
        EXPECT(0xbb29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb27));
        EXPECT(0x94, gbc.readMem(0xbb28));
        // CB 94 0117
        gbc.setState(0x2804, 0x7cd8, 0x6490, 0xa05e, 0x79b5, 0xfe6f, 0x1, 0x1);
        gbc.writeMem(0x2804, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7cd8, gbc.sp());
        EXPECT(0x2806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0118
        gbc.setState(0x9866, 0x19ce, 0x9360, 0xca47, 0x895b, 0x6c4d, 0x0, 0x1);
        gbc.writeMem(0x9866, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x19ce, gbc.sp());
        EXPECT(0x9868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9866));
        EXPECT(0x94, gbc.readMem(0x9867));
        // CB 94 0119
        gbc.setState(0x700e, 0xc51c, 0x8e70, 0xbc7b, 0x6f79, 0x1cb3, 0x1, 0x1);
        gbc.writeMem(0x700e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc51c, gbc.sp());
        EXPECT(0x7010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 011A
        gbc.setState(0x92cc, 0x42d3, 0x5e10, 0xac4a, 0x1488, 0x60e4, 0x0, 0x1);
        gbc.writeMem(0x92cc, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x42d3, gbc.sp());
        EXPECT(0x92ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92cc));
        EXPECT(0x94, gbc.readMem(0x92cd));
        // CB 94 011B
        gbc.setState(0x7217, 0x6a02, 0x8a0, 0x2a12, 0x3fe2, 0x2173, 0x0, 0x0);
        gbc.writeMem(0x7217, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6a02, gbc.sp());
        EXPECT(0x7219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 011C
        gbc.setState(0xd95e, 0x45cd, 0x33c0, 0x5dd0, 0xbe1b, 0xa2c6, 0x1, 0x0);
        gbc.writeMem(0xd95e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x45cd, gbc.sp());
        EXPECT(0xd960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd95e));
        EXPECT(0x94, gbc.readMem(0xd95f));
        // CB 94 011D
        gbc.setState(0x3dcd, 0x3131, 0x2aa0, 0x9be1, 0x8aa9, 0xf29f, 0x1, 0x1);
        gbc.writeMem(0x3dcd, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3131, gbc.sp());
        EXPECT(0x3dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 011E
        gbc.setState(0x733b, 0xef7c, 0xde00, 0xcd6c, 0x76ca, 0xa333, 0x1, 0x1);
        gbc.writeMem(0x733b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xef7c, gbc.sp());
        EXPECT(0x733d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 011F
        gbc.setState(0xb126, 0x5217, 0x7ff0, 0x501c, 0xbffb, 0x9408, 0x0, 0x0);
        gbc.writeMem(0xb126, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5217, gbc.sp());
        EXPECT(0xb128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb126));
        EXPECT(0x94, gbc.readMem(0xb127));
        // CB 94 0120
        gbc.setState(0x2e16, 0x706e, 0xe9e0, 0x7b8c, 0x81e, 0x3a41, 0x0, 0x0);
        gbc.writeMem(0x2e16, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x706e, gbc.sp());
        EXPECT(0x2e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0121
        gbc.setState(0x159c, 0xf035, 0x1e40, 0x35de, 0x8966, 0xf307, 0x0, 0x0);
        gbc.writeMem(0x159c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf035, gbc.sp());
        EXPECT(0x159e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0122
        gbc.setState(0x7a0d, 0xf298, 0x94c0, 0xae55, 0xfcbb, 0x56ab, 0x0, 0x1);
        gbc.writeMem(0x7a0d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf298, gbc.sp());
        EXPECT(0x7a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0123
        gbc.setState(0x3f8c, 0x3606, 0x5f30, 0x6dad, 0x1bf8, 0xb06e, 0x0, 0x0);
        gbc.writeMem(0x3f8c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3606, gbc.sp());
        EXPECT(0x3f8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0124
        gbc.setState(0x35bf, 0x919c, 0xbda0, 0xf99b, 0xbe5e, 0x8ada, 0x0, 0x1);
        gbc.writeMem(0x35bf, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x919c, gbc.sp());
        EXPECT(0x35c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0125
        gbc.setState(0xed4a, 0x44f9, 0x9d0, 0x7fe, 0x9ebc, 0x4f5d, 0x1, 0x0);
        gbc.writeMem(0xed4a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x44f9, gbc.sp());
        EXPECT(0xed4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed4a));
        EXPECT(0x94, gbc.readMem(0xed4b));
        // CB 94 0126
        gbc.setState(0xa7ad, 0x441f, 0xece0, 0xe287, 0x91be, 0xd3e9, 0x1, 0x1);
        gbc.writeMem(0xa7ad, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x441f, gbc.sp());
        EXPECT(0xa7af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ad));
        EXPECT(0x94, gbc.readMem(0xa7ae));
        // CB 94 0127
        gbc.setState(0xbee2, 0x12ad, 0x1550, 0x546f, 0x77d3, 0x8648, 0x1, 0x0);
        gbc.writeMem(0xbee2, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x12ad, gbc.sp());
        EXPECT(0xbee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbee2));
        EXPECT(0x94, gbc.readMem(0xbee3));
        // CB 94 0128
        gbc.setState(0x1884, 0xcfa5, 0xa3a0, 0x22e2, 0xe5b5, 0x27d8, 0x1, 0x1);
        gbc.writeMem(0x1884, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcfa5, gbc.sp());
        EXPECT(0x1886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0129
        gbc.setState(0x4ec7, 0x87c, 0x1030, 0x70e3, 0xd254, 0xb6c1, 0x0, 0x1);
        gbc.writeMem(0x4ec7, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x87c, gbc.sp());
        EXPECT(0x4ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 012A
        gbc.setState(0xe0cb, 0x30a7, 0x7c10, 0x35b4, 0x76f3, 0xe86c, 0x0, 0x0);
        gbc.writeMem(0xe0cb, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x30a7, gbc.sp());
        EXPECT(0xe0cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0cb));
        EXPECT(0x94, gbc.readMem(0xe0cc));
        // CB 94 012B
        gbc.setState(0xcae6, 0xe457, 0xa190, 0xbf6e, 0xfdb5, 0xb774, 0x0, 0x0);
        gbc.writeMem(0xcae6, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe457, gbc.sp());
        EXPECT(0xcae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae6));
        EXPECT(0x94, gbc.readMem(0xcae7));
        // CB 94 012C
        gbc.setState(0x3d8c, 0x961d, 0x7460, 0xefab, 0x259d, 0x564b, 0x0, 0x1);
        gbc.writeMem(0x3d8c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x961d, gbc.sp());
        EXPECT(0x3d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 012E
        gbc.setState(0x813f, 0x1ee, 0xf860, 0xb0dd, 0xd4f7, 0xe641, 0x0, 0x1);
        gbc.writeMem(0x813f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1ee, gbc.sp());
        EXPECT(0x8141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x813f));
        EXPECT(0x94, gbc.readMem(0x8140));
        // CB 94 012F
        gbc.setState(0x9d47, 0x68ee, 0x5a10, 0xd26c, 0x7df0, 0x52bd, 0x0, 0x1);
        gbc.writeMem(0x9d47, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x68ee, gbc.sp());
        EXPECT(0x9d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d47));
        EXPECT(0x94, gbc.readMem(0x9d48));
        // CB 94 0130
        gbc.setState(0x88c1, 0x9b92, 0x5140, 0x63b9, 0xe785, 0x974b, 0x0, 0x1);
        gbc.writeMem(0x88c1, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9b92, gbc.sp());
        EXPECT(0x88c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c1));
        EXPECT(0x94, gbc.readMem(0x88c2));
        // CB 94 0131
        gbc.setState(0x5fd9, 0xaa57, 0x61e0, 0xd4eb, 0x5c9f, 0x9470, 0x1, 0x0);
        gbc.writeMem(0x5fd9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xaa57, gbc.sp());
        EXPECT(0x5fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0132
        gbc.setState(0x9a5c, 0x355f, 0xcb30, 0xc604, 0xaa45, 0xfc28, 0x0, 0x1);
        gbc.writeMem(0x9a5c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x355f, gbc.sp());
        EXPECT(0x9a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a5c));
        EXPECT(0x94, gbc.readMem(0x9a5d));
        // CB 94 0133
        gbc.setState(0xaf57, 0x6aea, 0xaa20, 0xd70e, 0x43c, 0x69c1, 0x0, 0x1);
        gbc.writeMem(0xaf57, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6aea, gbc.sp());
        EXPECT(0xaf59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf57));
        EXPECT(0x94, gbc.readMem(0xaf58));
        // CB 94 0134
        gbc.setState(0xa9cd, 0x2a48, 0xc5c0, 0xa42e, 0xd0fd, 0xe459, 0x0, 0x0);
        gbc.writeMem(0xa9cd, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2a48, gbc.sp());
        EXPECT(0xa9cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9cd));
        EXPECT(0x94, gbc.readMem(0xa9ce));
        // CB 94 0135
        gbc.setState(0xd0ad, 0xfb9a, 0xdb00, 0x34da, 0x3a9, 0x74ca, 0x1, 0x1);
        gbc.writeMem(0xd0ad, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfb9a, gbc.sp());
        EXPECT(0xd0af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ad));
        EXPECT(0x94, gbc.readMem(0xd0ae));
        // CB 94 0136
        gbc.setState(0x681a, 0xff8c, 0x7a30, 0x6a96, 0xe583, 0x248e, 0x1, 0x0);
        gbc.writeMem(0x681a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xff8c, gbc.sp());
        EXPECT(0x681c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0137
        gbc.setState(0x3b1, 0x8b41, 0x27d0, 0x6416, 0xc63c, 0x2470, 0x1, 0x0);
        gbc.writeMem(0x3b1, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8b41, gbc.sp());
        EXPECT(0x3b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0138
        gbc.setState(0xa727, 0x6b75, 0x89a0, 0xb81c, 0x7b93, 0xe38a, 0x0, 0x1);
        gbc.writeMem(0xa727, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6b75, gbc.sp());
        EXPECT(0xa729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa727));
        EXPECT(0x94, gbc.readMem(0xa728));
        // CB 94 0139
        gbc.setState(0x2050, 0x474c, 0x69a0, 0xd25f, 0xe95a, 0xb9cc, 0x1, 0x0);
        gbc.writeMem(0x2050, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x474c, gbc.sp());
        EXPECT(0x2052, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 013A
        gbc.setState(0xd876, 0xffb3, 0x24f0, 0x1a00, 0xb6cd, 0x132b, 0x1, 0x0);
        gbc.writeMem(0xd876, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xffb3, gbc.sp());
        EXPECT(0xd878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd876));
        EXPECT(0x94, gbc.readMem(0xd877));
        // CB 94 013B
        gbc.setState(0xe6c2, 0xbcd7, 0x5a30, 0xcd25, 0xeda, 0xc0b2, 0x1, 0x1);
        gbc.writeMem(0xe6c2, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbcd7, gbc.sp());
        EXPECT(0xe6c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6c2));
        EXPECT(0x94, gbc.readMem(0xe6c3));
        // CB 94 013C
        gbc.setState(0x33e8, 0x2a81, 0xbfd0, 0x8ca5, 0xc5f1, 0xbdd5, 0x1, 0x0);
        gbc.writeMem(0x33e8, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2a81, gbc.sp());
        EXPECT(0x33ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 013D
        gbc.setState(0x5f99, 0xb7af, 0x5b10, 0x1338, 0x990e, 0x6b10, 0x1, 0x1);
        gbc.writeMem(0x5f99, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb7af, gbc.sp());
        EXPECT(0x5f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 013E
        gbc.setState(0x7cf0, 0xa63, 0xf140, 0xfce3, 0x36a5, 0x1473, 0x1, 0x0);
        gbc.writeMem(0x7cf0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa63, gbc.sp());
        EXPECT(0x7cf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 013F
        gbc.setState(0x1984, 0x524c, 0xb550, 0x792a, 0xb829, 0x1df6, 0x1, 0x0);
        gbc.writeMem(0x1984, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x524c, gbc.sp());
        EXPECT(0x1986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0140
        gbc.setState(0x4427, 0xf4df, 0x4bf0, 0xca2e, 0xaace, 0x5ced, 0x0, 0x0);
        gbc.writeMem(0x4427, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf4df, gbc.sp());
        EXPECT(0x4429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0141
        gbc.setState(0x7d89, 0xa032, 0x95b0, 0xff83, 0x49b2, 0xc0a6, 0x0, 0x1);
        gbc.writeMem(0x7d89, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa032, gbc.sp());
        EXPECT(0x7d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0142
        gbc.setState(0x3e0b, 0xccc6, 0xb900, 0x2cc5, 0xca0, 0x75b7, 0x0, 0x1);
        gbc.writeMem(0x3e0b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xccc6, gbc.sp());
        EXPECT(0x3e0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0143
        gbc.setState(0x90c4, 0x3ece, 0xbf0, 0xd931, 0x978, 0xf2ac, 0x1, 0x1);
        gbc.writeMem(0x90c4, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3ece, gbc.sp());
        EXPECT(0x90c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c4));
        EXPECT(0x94, gbc.readMem(0x90c5));
        // CB 94 0144
        gbc.setState(0xeafb, 0x2802, 0xb160, 0xfd2a, 0x9519, 0x2cd1, 0x1, 0x0);
        gbc.writeMem(0xeafb, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2802, gbc.sp());
        EXPECT(0xeafd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeafb));
        EXPECT(0x94, gbc.readMem(0xeafc));
        // CB 94 0145
        gbc.setState(0x6900, 0x14c1, 0x1c70, 0xf0e1, 0x2afe, 0xfe4c, 0x1, 0x1);
        gbc.writeMem(0x6900, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x14c1, gbc.sp());
        EXPECT(0x6902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0146
        gbc.setState(0x192e, 0xe2d6, 0x8fc0, 0xab55, 0x103e, 0x8115, 0x0, 0x1);
        gbc.writeMem(0x192e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe2d6, gbc.sp());
        EXPECT(0x1930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0147
        gbc.setState(0x4890, 0x3e27, 0x66d0, 0xf1cb, 0x1c8b, 0x3b29, 0x0, 0x1);
        gbc.writeMem(0x4890, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3e27, gbc.sp());
        EXPECT(0x4892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0148
        gbc.setState(0xcbe9, 0xcfce, 0xf950, 0xdd8, 0xd499, 0xa58f, 0x0, 0x1);
        gbc.writeMem(0xcbe9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcfce, gbc.sp());
        EXPECT(0xcbeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe9));
        EXPECT(0x94, gbc.readMem(0xcbea));
        // CB 94 0149
        gbc.setState(0x611c, 0x70a4, 0x2640, 0x73f1, 0x3850, 0xc756, 0x0, 0x0);
        gbc.writeMem(0x611c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x70a4, gbc.sp());
        EXPECT(0x611e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 014A
        gbc.setState(0x8fed, 0xf249, 0xc4f0, 0x754a, 0xf4bf, 0x33b3, 0x1, 0x0);
        gbc.writeMem(0x8fed, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf249, gbc.sp());
        EXPECT(0x8fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fed));
        EXPECT(0x94, gbc.readMem(0x8fee));
        // CB 94 014B
        gbc.setState(0xccfb, 0xbd0a, 0xe180, 0x6242, 0x79bf, 0x44ad, 0x1, 0x0);
        gbc.writeMem(0xccfb, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xbd0a, gbc.sp());
        EXPECT(0xccfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccfb));
        EXPECT(0x94, gbc.readMem(0xccfc));
        // CB 94 014C
        gbc.setState(0x6f8, 0x251b, 0x790, 0xaea, 0x876, 0x40b9, 0x1, 0x0);
        gbc.writeMem(0x6f8, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x251b, gbc.sp());
        EXPECT(0x6fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 014D
        gbc.setState(0x5426, 0x8270, 0xe600, 0x49fe, 0x1c42, 0x1ef0, 0x1, 0x0);
        gbc.writeMem(0x5426, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8270, gbc.sp());
        EXPECT(0x5428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 014E
        gbc.setState(0x59df, 0x5c7c, 0x5120, 0xc2b2, 0x61bf, 0x1230, 0x0, 0x1);
        gbc.writeMem(0x59df, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5c7c, gbc.sp());
        EXPECT(0x59e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 014F
        gbc.setState(0x16f2, 0x7c54, 0x76f0, 0xc431, 0xe2fa, 0xf623, 0x0, 0x1);
        gbc.writeMem(0x16f2, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7c54, gbc.sp());
        EXPECT(0x16f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0150
        gbc.setState(0xaf5b, 0xf501, 0x8b40, 0xceab, 0xb61b, 0xd005, 0x0, 0x0);
        gbc.writeMem(0xaf5b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf501, gbc.sp());
        EXPECT(0xaf5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf5b));
        EXPECT(0x94, gbc.readMem(0xaf5c));
        // CB 94 0151
        gbc.setState(0x64d4, 0xda5c, 0x7b50, 0x2b1b, 0xd46, 0xc65a, 0x1, 0x0);
        gbc.writeMem(0x64d4, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xda5c, gbc.sp());
        EXPECT(0x64d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0152
        gbc.setState(0xcca1, 0x9ed6, 0x5890, 0xf4e, 0x3a12, 0xfb0f, 0x0, 0x0);
        gbc.writeMem(0xcca1, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9ed6, gbc.sp());
        EXPECT(0xcca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcca1));
        EXPECT(0x94, gbc.readMem(0xcca2));
        // CB 94 0153
        gbc.setState(0x4062, 0x23fd, 0x9530, 0x1434, 0x6a02, 0x53e3, 0x1, 0x0);
        gbc.writeMem(0x4062, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x23fd, gbc.sp());
        EXPECT(0x4064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0154
        gbc.setState(0xe5ed, 0xb386, 0x1f40, 0xf851, 0x57fd, 0x7232, 0x0, 0x1);
        gbc.writeMem(0xe5ed, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb386, gbc.sp());
        EXPECT(0xe5ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ed));
        EXPECT(0x94, gbc.readMem(0xe5ee));
        // CB 94 0155
        gbc.setState(0x5040, 0xbe7, 0xd40, 0x3067, 0x1c59, 0x1cbe, 0x0, 0x0);
        gbc.writeMem(0x5040, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xbe7, gbc.sp());
        EXPECT(0x5042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0156
        gbc.setState(0x4751, 0xcc6c, 0x13e0, 0xabde, 0x2193, 0x1110, 0x0, 0x1);
        gbc.writeMem(0x4751, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcc6c, gbc.sp());
        EXPECT(0x4753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0157
        gbc.setState(0x513, 0x1566, 0xc910, 0x6803, 0xfef9, 0x8a47, 0x0, 0x0);
        gbc.writeMem(0x513, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1566, gbc.sp());
        EXPECT(0x515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0158
        gbc.setState(0x48d4, 0x8703, 0x8920, 0x36cf, 0x8f0c, 0x2ade, 0x1, 0x1);
        gbc.writeMem(0x48d4, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8703, gbc.sp());
        EXPECT(0x48d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0159
        gbc.setState(0x4892, 0x5589, 0xf870, 0x23e, 0x3ac1, 0x9942, 0x1, 0x1);
        gbc.writeMem(0x4892, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5589, gbc.sp());
        EXPECT(0x4894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 015A
        gbc.setState(0x66b2, 0x536c, 0x94d0, 0x8078, 0x482a, 0x7e93, 0x1, 0x1);
        gbc.writeMem(0x66b2, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x536c, gbc.sp());
        EXPECT(0x66b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 015B
        gbc.setState(0x8ce4, 0x519b, 0x2070, 0xb4fa, 0x27f6, 0xca41, 0x1, 0x1);
        gbc.writeMem(0x8ce4, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x519b, gbc.sp());
        EXPECT(0x8ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce4));
        EXPECT(0x94, gbc.readMem(0x8ce5));
        // CB 94 015C
        gbc.setState(0xb70c, 0xbc52, 0x92a0, 0xcc7a, 0xe2af, 0x595b, 0x0, 0x0);
        gbc.writeMem(0xb70c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbc52, gbc.sp());
        EXPECT(0xb70e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb70c));
        EXPECT(0x94, gbc.readMem(0xb70d));
        // CB 94 015D
        gbc.setState(0x5f6b, 0xd679, 0xaf30, 0x7b6a, 0x1be9, 0x5fcf, 0x0, 0x0);
        gbc.writeMem(0x5f6b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd679, gbc.sp());
        EXPECT(0x5f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 015E
        gbc.setState(0x413c, 0xb5f5, 0x8970, 0x8f49, 0x11fc, 0x16b0, 0x1, 0x1);
        gbc.writeMem(0x413c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb5f5, gbc.sp());
        EXPECT(0x413e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 015F
        gbc.setState(0xc445, 0x9dfc, 0x1e10, 0xd225, 0x7a8b, 0x7c2, 0x0, 0x1);
        gbc.writeMem(0xc445, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9dfc, gbc.sp());
        EXPECT(0xc447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc445));
        EXPECT(0x94, gbc.readMem(0xc446));
        // CB 94 0160
        gbc.setState(0x1d60, 0x69e7, 0x5b30, 0x84bd, 0xa563, 0x481b, 0x0, 0x1);
        gbc.writeMem(0x1d60, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x69e7, gbc.sp());
        EXPECT(0x1d62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0161
        gbc.setState(0xb8c0, 0xb8b8, 0xc530, 0x21bc, 0xc650, 0x8ad, 0x0, 0x1);
        gbc.writeMem(0xb8c0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb8b8, gbc.sp());
        EXPECT(0xb8c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8c0));
        EXPECT(0x94, gbc.readMem(0xb8c1));
        // CB 94 0162
        gbc.setState(0xd149, 0x3e37, 0xbe80, 0x149c, 0x70a3, 0x6f44, 0x0, 0x0);
        gbc.writeMem(0xd149, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3e37, gbc.sp());
        EXPECT(0xd14b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd149));
        EXPECT(0x94, gbc.readMem(0xd14a));
        // CB 94 0164
        gbc.setState(0xc3f4, 0xe7c3, 0xd9e0, 0x1355, 0x9db3, 0xb4a4, 0x1, 0x1);
        gbc.writeMem(0xc3f4, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe7c3, gbc.sp());
        EXPECT(0xc3f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3f4));
        EXPECT(0x94, gbc.readMem(0xc3f5));
        // CB 94 0165
        gbc.setState(0x708f, 0x6658, 0xbab0, 0xec4d, 0xde6c, 0xa173, 0x1, 0x0);
        gbc.writeMem(0x708f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6658, gbc.sp());
        EXPECT(0x7091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0166
        gbc.setState(0x61c3, 0x4b1b, 0x4e50, 0x955a, 0xc74a, 0x9113, 0x0, 0x1);
        gbc.writeMem(0x61c3, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4b1b, gbc.sp());
        EXPECT(0x61c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0167
        gbc.setState(0xa5df, 0x5837, 0x5ee0, 0xb494, 0x8584, 0x9b, 0x1, 0x0);
        gbc.writeMem(0xa5df, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5837, gbc.sp());
        EXPECT(0xa5e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5df));
        EXPECT(0x94, gbc.readMem(0xa5e0));
        // CB 94 0168
        gbc.setState(0xe5b, 0xa256, 0xb9b0, 0x13f, 0xb808, 0xd28, 0x0, 0x0);
        gbc.writeMem(0xe5b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa256, gbc.sp());
        EXPECT(0xe5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0169
        gbc.setState(0x3009, 0x66ca, 0xb510, 0x77ae, 0x6d0d, 0x40e0, 0x1, 0x1);
        gbc.writeMem(0x3009, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x66ca, gbc.sp());
        EXPECT(0x300b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 016A
        gbc.setState(0x23b3, 0xc7e4, 0x470, 0x183d, 0xa634, 0xac36, 0x1, 0x0);
        gbc.writeMem(0x23b3, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc7e4, gbc.sp());
        EXPECT(0x23b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 016B
        gbc.setState(0x6f17, 0x1d8a, 0x9260, 0x3d59, 0xd58d, 0x29fd, 0x1, 0x1);
        gbc.writeMem(0x6f17, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1d8a, gbc.sp());
        EXPECT(0x6f19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 016C
        gbc.setState(0x18c8, 0x32f4, 0xc640, 0xd2ef, 0xe394, 0x8a27, 0x0, 0x0);
        gbc.writeMem(0x18c8, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x32f4, gbc.sp());
        EXPECT(0x18ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 016D
        gbc.setState(0x3e62, 0x2305, 0x7d00, 0x3e94, 0x1a8, 0xec3, 0x0, 0x1);
        gbc.writeMem(0x3e62, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2305, gbc.sp());
        EXPECT(0x3e64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 016E
        gbc.setState(0x6288, 0xdfc2, 0xb2b0, 0xfa91, 0x714a, 0x5e94, 0x0, 0x0);
        gbc.writeMem(0x6288, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xdfc2, gbc.sp());
        EXPECT(0x628a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 016F
        gbc.setState(0x16aa, 0x7511, 0xd0d0, 0x7590, 0x5534, 0x9d76, 0x0, 0x0);
        gbc.writeMem(0x16aa, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7511, gbc.sp());
        EXPECT(0x16ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0170
        gbc.setState(0x8f6b, 0xfa45, 0x2390, 0x9567, 0x7785, 0xe996, 0x0, 0x0);
        gbc.writeMem(0x8f6b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xfa45, gbc.sp());
        EXPECT(0x8f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f6b));
        EXPECT(0x94, gbc.readMem(0x8f6c));
        // CB 94 0171
        gbc.setState(0x5001, 0x6e60, 0xfe50, 0x9050, 0xdc90, 0x7804, 0x0, 0x1);
        gbc.writeMem(0x5001, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6e60, gbc.sp());
        EXPECT(0x5003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0172
        gbc.setState(0x25, 0xdeee, 0xc8a0, 0x3d3c, 0xa3c, 0xba81, 0x1, 0x1);
        gbc.writeMem(0x25, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xdeee, gbc.sp());
        EXPECT(0x27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0173
        gbc.setState(0xb62a, 0xcb84, 0x4be0, 0x2819, 0x8307, 0xfabd, 0x1, 0x0);
        gbc.writeMem(0xb62a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xcb84, gbc.sp());
        EXPECT(0xb62c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb62a));
        EXPECT(0x94, gbc.readMem(0xb62b));
        // CB 94 0174
        gbc.setState(0x1a3c, 0x5681, 0xca50, 0x2788, 0x381f, 0xeb8f, 0x0, 0x0);
        gbc.writeMem(0x1a3c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5681, gbc.sp());
        EXPECT(0x1a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0175
        gbc.setState(0xab51, 0xa4de, 0xf1d0, 0xbd83, 0x3953, 0xfbc7, 0x0, 0x1);
        gbc.writeMem(0xab51, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa4de, gbc.sp());
        EXPECT(0xab53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab51));
        EXPECT(0x94, gbc.readMem(0xab52));
        // CB 94 0176
        gbc.setState(0x3211, 0x50c6, 0xe110, 0x11dd, 0x12fa, 0x3ffb, 0x1, 0x1);
        gbc.writeMem(0x3211, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x50c6, gbc.sp());
        EXPECT(0x3213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0177
        gbc.setState(0x21bc, 0xa014, 0x5cf0, 0x99fd, 0x40b9, 0x7045, 0x1, 0x0);
        gbc.writeMem(0x21bc, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa014, gbc.sp());
        EXPECT(0x21be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0178
        gbc.setState(0x3af0, 0x6265, 0x81f0, 0x196d, 0x2f7c, 0x9ed2, 0x1, 0x0);
        gbc.writeMem(0x3af0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6265, gbc.sp());
        EXPECT(0x3af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0179
        gbc.setState(0x95f6, 0xde22, 0x6520, 0x864f, 0x7de6, 0xf42, 0x0, 0x0);
        gbc.writeMem(0x95f6, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xde22, gbc.sp());
        EXPECT(0x95f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f6));
        EXPECT(0x94, gbc.readMem(0x95f7));
        // CB 94 017A
        gbc.setState(0x1ea9, 0xe25e, 0xf8d0, 0xfd9a, 0xf79, 0x3f65, 0x0, 0x0);
        gbc.writeMem(0x1ea9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe25e, gbc.sp());
        EXPECT(0x1eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 017B
        gbc.setState(0xef82, 0xe46e, 0x3d20, 0xaf29, 0x827a, 0x2c30, 0x1, 0x0);
        gbc.writeMem(0xef82, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe46e, gbc.sp());
        EXPECT(0xef84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef82));
        EXPECT(0x94, gbc.readMem(0xef83));
        // CB 94 017C
        gbc.setState(0x55d8, 0xf7ca, 0x7580, 0x2e36, 0x3785, 0x59e7, 0x1, 0x0);
        gbc.writeMem(0x55d8, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf7ca, gbc.sp());
        EXPECT(0x55da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 017D
        gbc.setState(0x4a45, 0xc99b, 0xe680, 0x36e3, 0x6c00, 0x6067, 0x1, 0x0);
        gbc.writeMem(0x4a45, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc99b, gbc.sp());
        EXPECT(0x4a47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 017E
        gbc.setState(0x222c, 0x9ecb, 0x9470, 0x8ded, 0x916e, 0x14d4, 0x1, 0x1);
        gbc.writeMem(0x222c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9ecb, gbc.sp());
        EXPECT(0x222e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 017F
        gbc.setState(0x39ef, 0xfc2c, 0x78a0, 0x9b77, 0xd856, 0x6921, 0x1, 0x0);
        gbc.writeMem(0x39ef, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfc2c, gbc.sp());
        EXPECT(0x39f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0180
        gbc.setState(0xb3fd, 0x6af7, 0x1c0, 0xbdf7, 0x1ee4, 0xefd3, 0x0, 0x0);
        gbc.writeMem(0xb3fd, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6af7, gbc.sp());
        EXPECT(0xb3ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3fd));
        EXPECT(0x94, gbc.readMem(0xb3fe));
        // CB 94 0182
        gbc.setState(0x6cd0, 0x5f8f, 0x4460, 0xf475, 0x8053, 0xff38, 0x0, 0x1);
        gbc.writeMem(0x6cd0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5f8f, gbc.sp());
        EXPECT(0x6cd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0183
        gbc.setState(0x4a7b, 0x8af7, 0x4e80, 0x4239, 0x72a2, 0x7a9c, 0x0, 0x0);
        gbc.writeMem(0x4a7b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8af7, gbc.sp());
        EXPECT(0x4a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0184
        gbc.setState(0x494d, 0xa998, 0x7990, 0xeb38, 0xea1, 0x88c3, 0x1, 0x1);
        gbc.writeMem(0x494d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa998, gbc.sp());
        EXPECT(0x494f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0185
        gbc.setState(0xa8da, 0xb62e, 0x1560, 0x76eb, 0x89c8, 0x5a74, 0x1, 0x1);
        gbc.writeMem(0xa8da, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb62e, gbc.sp());
        EXPECT(0xa8dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8da));
        EXPECT(0x94, gbc.readMem(0xa8db));
        // CB 94 0186
        gbc.setState(0x2ded, 0x5db4, 0x6b0, 0x373d, 0xc579, 0x9dd5, 0x1, 0x1);
        gbc.writeMem(0x2ded, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5db4, gbc.sp());
        EXPECT(0x2def, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0187
        gbc.setState(0xcbb2, 0xbd97, 0x7490, 0x733c, 0x4fcb, 0xe7c4, 0x0, 0x1);
        gbc.writeMem(0xcbb2, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbd97, gbc.sp());
        EXPECT(0xcbb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb2));
        EXPECT(0x94, gbc.readMem(0xcbb3));
        // CB 94 0188
        gbc.setState(0x98fa, 0x7e4, 0xd1f0, 0x9e8a, 0x29, 0xf1c1, 0x1, 0x0);
        gbc.writeMem(0x98fa, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7e4, gbc.sp());
        EXPECT(0x98fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98fa));
        EXPECT(0x94, gbc.readMem(0x98fb));
        // CB 94 0189
        gbc.setState(0xe9db, 0xc9ff, 0x6f50, 0xd392, 0x5563, 0x961, 0x0, 0x0);
        gbc.writeMem(0xe9db, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc9ff, gbc.sp());
        EXPECT(0xe9dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9db));
        EXPECT(0x94, gbc.readMem(0xe9dc));
        // CB 94 018A
        gbc.setState(0x71cd, 0x7354, 0x5490, 0x6899, 0x4d41, 0xa47d, 0x1, 0x1);
        gbc.writeMem(0x71cd, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7354, gbc.sp());
        EXPECT(0x71cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 018B
        gbc.setState(0x1f8d, 0xcfc4, 0x6bf0, 0x52f1, 0xbc9e, 0xfde9, 0x0, 0x1);
        gbc.writeMem(0x1f8d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcfc4, gbc.sp());
        EXPECT(0x1f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 018C
        gbc.setState(0xa480, 0x91c, 0x97d0, 0xef27, 0xcb2a, 0xf64b, 0x0, 0x1);
        gbc.writeMem(0xa480, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x91c, gbc.sp());
        EXPECT(0xa482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa480));
        EXPECT(0x94, gbc.readMem(0xa481));
        // CB 94 018D
        gbc.setState(0xe864, 0x60d4, 0xcde0, 0xa194, 0xc4a5, 0x22d1, 0x1, 0x1);
        gbc.writeMem(0xe864, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x60d4, gbc.sp());
        EXPECT(0xe866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe864));
        EXPECT(0x94, gbc.readMem(0xe865));
        // CB 94 018E
        gbc.setState(0xdeb4, 0x6c6c, 0xf0f0, 0x8b41, 0x5e27, 0x3803, 0x0, 0x0);
        gbc.writeMem(0xdeb4, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6c6c, gbc.sp());
        EXPECT(0xdeb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeb4));
        EXPECT(0x94, gbc.readMem(0xdeb5));
        // CB 94 018F
        gbc.setState(0xd5c6, 0xa051, 0x4e00, 0xdd21, 0xcd06, 0x6a97, 0x0, 0x0);
        gbc.writeMem(0xd5c6, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa051, gbc.sp());
        EXPECT(0xd5c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5c6));
        EXPECT(0x94, gbc.readMem(0xd5c7));
        // CB 94 0190
        gbc.setState(0xb469, 0x19e8, 0x95c0, 0x9fd1, 0x21da, 0x77f1, 0x0, 0x0);
        gbc.writeMem(0xb469, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x19e8, gbc.sp());
        EXPECT(0xb46b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb469));
        EXPECT(0x94, gbc.readMem(0xb46a));
        // CB 94 0191
        gbc.setState(0x6024, 0xd084, 0x4930, 0x4e58, 0x485b, 0x7c2e, 0x1, 0x0);
        gbc.writeMem(0x6024, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd084, gbc.sp());
        EXPECT(0x6026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0192
        gbc.setState(0x6e4e, 0xb48, 0x1040, 0xa4a7, 0x8bc6, 0x4b82, 0x1, 0x0);
        gbc.writeMem(0x6e4e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb48, gbc.sp());
        EXPECT(0x6e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0193
        gbc.setState(0xcf91, 0x31da, 0xca50, 0x52ab, 0x50a0, 0x8376, 0x0, 0x1);
        gbc.writeMem(0xcf91, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x31da, gbc.sp());
        EXPECT(0xcf93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf91));
        EXPECT(0x94, gbc.readMem(0xcf92));
        // CB 94 0194
        gbc.setState(0x6354, 0xa8e6, 0x670, 0xdddc, 0x5972, 0xaefc, 0x0, 0x0);
        gbc.writeMem(0x6354, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa8e6, gbc.sp());
        EXPECT(0x6356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0195
        gbc.setState(0x7390, 0x5072, 0x1b10, 0x8022, 0x5ab5, 0x8270, 0x0, 0x1);
        gbc.writeMem(0x7390, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5072, gbc.sp());
        EXPECT(0x7392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0196
        gbc.setState(0x64f, 0xa829, 0x240, 0xa36, 0xd179, 0x665e, 0x0, 0x1);
        gbc.writeMem(0x64f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa829, gbc.sp());
        EXPECT(0x651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0197
        gbc.setState(0x1935, 0xa8f, 0x2840, 0xc6bb, 0x28af, 0x7290, 0x0, 0x0);
        gbc.writeMem(0x1935, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa8f, gbc.sp());
        EXPECT(0x1937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0198
        gbc.setState(0x837f, 0x87f5, 0x960, 0x11b, 0x619, 0x3285, 0x1, 0x0);
        gbc.writeMem(0x837f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x87f5, gbc.sp());
        EXPECT(0x8381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x837f));
        EXPECT(0x94, gbc.readMem(0x8380));
        // CB 94 0199
        gbc.setState(0xca11, 0x4d71, 0x1ff0, 0x65ec, 0xeeb2, 0x52a9, 0x1, 0x0);
        gbc.writeMem(0xca11, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4d71, gbc.sp());
        EXPECT(0xca13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca11));
        EXPECT(0x94, gbc.readMem(0xca12));
        // CB 94 019A
        gbc.setState(0x8a7d, 0x1a4a, 0xe100, 0x9336, 0xb4e8, 0x16eb, 0x1, 0x0);
        gbc.writeMem(0x8a7d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1a4a, gbc.sp());
        EXPECT(0x8a7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a7d));
        EXPECT(0x94, gbc.readMem(0x8a7e));
        // CB 94 019B
        gbc.setState(0xbec2, 0x90b7, 0xee30, 0xf3b, 0x403d, 0x8472, 0x1, 0x0);
        gbc.writeMem(0xbec2, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x90b7, gbc.sp());
        EXPECT(0xbec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbec2));
        EXPECT(0x94, gbc.readMem(0xbec3));
        // CB 94 019C
        gbc.setState(0xad88, 0xecb2, 0xef60, 0xaa4b, 0x525e, 0x828c, 0x0, 0x0);
        gbc.writeMem(0xad88, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xecb2, gbc.sp());
        EXPECT(0xad8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad88));
        EXPECT(0x94, gbc.readMem(0xad89));
        // CB 94 019D
        gbc.setState(0xa980, 0xcff, 0x360, 0xa6c6, 0xcf7d, 0xbaf8, 0x1, 0x1);
        gbc.writeMem(0xa980, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xcff, gbc.sp());
        EXPECT(0xa982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa980));
        EXPECT(0x94, gbc.readMem(0xa981));
        // CB 94 019E
        gbc.setState(0x9249, 0xab94, 0x86c0, 0x4e86, 0x7608, 0x844, 0x0, 0x0);
        gbc.writeMem(0x9249, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xab94, gbc.sp());
        EXPECT(0x924b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9249));
        EXPECT(0x94, gbc.readMem(0x924a));
        // CB 94 019F
        gbc.setState(0x1a67, 0x4944, 0xe1f0, 0xb854, 0x1791, 0xd209, 0x0, 0x0);
        gbc.writeMem(0x1a67, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4944, gbc.sp());
        EXPECT(0x1a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01A0
        gbc.setState(0xdc7, 0x237f, 0xec80, 0x627a, 0xe51b, 0x1d, 0x1, 0x0);
        gbc.writeMem(0xdc7, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x237f, gbc.sp());
        EXPECT(0xdc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01A1
        gbc.setState(0x7a88, 0xc641, 0x510, 0xf4a, 0xe452, 0x71e3, 0x0, 0x0);
        gbc.writeMem(0x7a88, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc641, gbc.sp());
        EXPECT(0x7a8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01A2
        gbc.setState(0xb2a2, 0xc14a, 0xae50, 0x1803, 0x6236, 0x7242, 0x1, 0x1);
        gbc.writeMem(0xb2a2, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc14a, gbc.sp());
        EXPECT(0xb2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a2));
        EXPECT(0x94, gbc.readMem(0xb2a3));
        // CB 94 01A3
        gbc.setState(0x7d69, 0x2869, 0xf2e0, 0xe5c8, 0xe93b, 0x165b, 0x0, 0x0);
        gbc.writeMem(0x7d69, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2869, gbc.sp());
        EXPECT(0x7d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01A4
        gbc.setState(0x87e6, 0xcbfa, 0x5c50, 0x5898, 0x6953, 0x9bb4, 0x0, 0x1);
        gbc.writeMem(0x87e6, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xcbfa, gbc.sp());
        EXPECT(0x87e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e6));
        EXPECT(0x94, gbc.readMem(0x87e7));
        // CB 94 01A5
        gbc.setState(0xd4cd, 0xcfef, 0x1be0, 0x7da5, 0xba44, 0x425e, 0x0, 0x1);
        gbc.writeMem(0xd4cd, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcfef, gbc.sp());
        EXPECT(0xd4cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4cd));
        EXPECT(0x94, gbc.readMem(0xd4ce));
        // CB 94 01A6
        gbc.setState(0x70f9, 0x7098, 0x3670, 0xa6de, 0xdfba, 0x2a1a, 0x0, 0x1);
        gbc.writeMem(0x70f9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7098, gbc.sp());
        EXPECT(0x70fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01A7
        gbc.setState(0xa42a, 0xadde, 0x4460, 0xadd2, 0x260f, 0x81fa, 0x0, 0x1);
        gbc.writeMem(0xa42a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xadde, gbc.sp());
        EXPECT(0xa42c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa42a));
        EXPECT(0x94, gbc.readMem(0xa42b));
        // CB 94 01A8
        gbc.setState(0xd94c, 0x847, 0xf4d0, 0x35c7, 0x5c54, 0x9c59, 0x0, 0x1);
        gbc.writeMem(0xd94c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x847, gbc.sp());
        EXPECT(0xd94e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd94c));
        EXPECT(0x94, gbc.readMem(0xd94d));
        // CB 94 01A9
        gbc.setState(0x5231, 0x8e2a, 0xa0e0, 0xc238, 0x7f3b, 0x3582, 0x0, 0x0);
        gbc.writeMem(0x5231, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8e2a, gbc.sp());
        EXPECT(0x5233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01AA
        gbc.setState(0x5ac0, 0x97b4, 0x7840, 0x7b, 0x6f53, 0x9e80, 0x0, 0x1);
        gbc.writeMem(0x5ac0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x97b4, gbc.sp());
        EXPECT(0x5ac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01AB
        gbc.setState(0x97e9, 0xceef, 0x58f0, 0x8f42, 0xd041, 0x1663, 0x0, 0x0);
        gbc.writeMem(0x97e9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xceef, gbc.sp());
        EXPECT(0x97eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97e9));
        EXPECT(0x94, gbc.readMem(0x97ea));
        // CB 94 01AC
        gbc.setState(0x1893, 0x63e2, 0x3c0, 0xc7d8, 0x1f9a, 0xbd46, 0x0, 0x1);
        gbc.writeMem(0x1893, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x63e2, gbc.sp());
        EXPECT(0x1895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01AD
        gbc.setState(0x4337, 0x281b, 0xf020, 0x939b, 0xe62f, 0x8d86, 0x0, 0x1);
        gbc.writeMem(0x4337, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x281b, gbc.sp());
        EXPECT(0x4339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01AF
        gbc.setState(0x56c2, 0xf0d7, 0xbc50, 0xc054, 0xc63c, 0x1bb0, 0x1, 0x1);
        gbc.writeMem(0x56c2, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf0d7, gbc.sp());
        EXPECT(0x56c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01B0
        gbc.setState(0xea46, 0x39b9, 0xbd80, 0xabf8, 0x7ec1, 0xe37e, 0x1, 0x0);
        gbc.writeMem(0xea46, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x39b9, gbc.sp());
        EXPECT(0xea48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea46));
        EXPECT(0x94, gbc.readMem(0xea47));
        // CB 94 01B1
        gbc.setState(0x7cbd, 0x8bd, 0xffb0, 0x2204, 0x21ce, 0x9db, 0x1, 0x0);
        gbc.writeMem(0x7cbd, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8bd, gbc.sp());
        EXPECT(0x7cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01B2
        gbc.setState(0x75c8, 0xcea3, 0x1f30, 0xe583, 0x5cf1, 0xda6b, 0x0, 0x1);
        gbc.writeMem(0x75c8, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcea3, gbc.sp());
        EXPECT(0x75ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01B3
        gbc.setState(0xa227, 0x119f, 0xcef0, 0x491f, 0xf9e6, 0xa6e6, 0x1, 0x0);
        gbc.writeMem(0xa227, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x119f, gbc.sp());
        EXPECT(0xa229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa227));
        EXPECT(0x94, gbc.readMem(0xa228));
        // CB 94 01B4
        gbc.setState(0xb827, 0xc032, 0xd760, 0x73a7, 0x614a, 0x737, 0x0, 0x0);
        gbc.writeMem(0xb827, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc032, gbc.sp());
        EXPECT(0xb829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb827));
        EXPECT(0x94, gbc.readMem(0xb828));
        // CB 94 01B5
        gbc.setState(0xe198, 0xd3f2, 0x4d80, 0xb7e6, 0xe0bd, 0xf1d7, 0x0, 0x1);
        gbc.writeMem(0xe198, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd3f2, gbc.sp());
        EXPECT(0xe19a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe198));
        EXPECT(0x94, gbc.readMem(0xe199));
        // CB 94 01B6
        gbc.setState(0x910b, 0xb1bb, 0xb230, 0x6119, 0x80f, 0xfc66, 0x0, 0x0);
        gbc.writeMem(0x910b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb1bb, gbc.sp());
        EXPECT(0x910d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x910b));
        EXPECT(0x94, gbc.readMem(0x910c));
        // CB 94 01B7
        gbc.setState(0x24dd, 0xbb51, 0xdd40, 0x55c, 0x562d, 0xfb02, 0x1, 0x0);
        gbc.writeMem(0x24dd, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbb51, gbc.sp());
        EXPECT(0x24df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01B8
        gbc.setState(0xe99c, 0xa90e, 0x4560, 0x1fb9, 0x69a2, 0xacb7, 0x1, 0x0);
        gbc.writeMem(0xe99c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa90e, gbc.sp());
        EXPECT(0xe99e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe99c));
        EXPECT(0x94, gbc.readMem(0xe99d));
        // CB 94 01B9
        gbc.setState(0x7ef3, 0xb108, 0x70a0, 0xe61e, 0x7d5, 0xafd8, 0x1, 0x0);
        gbc.writeMem(0x7ef3, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb108, gbc.sp());
        EXPECT(0x7ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01BA
        gbc.setState(0x57de, 0x5988, 0xfb20, 0x4a17, 0xcf52, 0x8f56, 0x0, 0x0);
        gbc.writeMem(0x57de, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5988, gbc.sp());
        EXPECT(0x57e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01BC
        gbc.setState(0x705f, 0x59cf, 0x6870, 0x9b27, 0x9704, 0xde02, 0x0, 0x1);
        gbc.writeMem(0x705f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x59cf, gbc.sp());
        EXPECT(0x7061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01BD
        gbc.setState(0x64ff, 0x9c74, 0xd890, 0xee59, 0x68a6, 0xb9cc, 0x0, 0x1);
        gbc.writeMem(0x64ff, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9c74, gbc.sp());
        EXPECT(0x6501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01BE
        gbc.setState(0x8a95, 0x8b73, 0x73e0, 0xbc7f, 0x59de, 0x474e, 0x0, 0x1);
        gbc.writeMem(0x8a95, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8b73, gbc.sp());
        EXPECT(0x8a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a95));
        EXPECT(0x94, gbc.readMem(0x8a96));
        // CB 94 01BF
        gbc.setState(0x5cbe, 0x99fb, 0xea10, 0x43fd, 0x996e, 0x8ebf, 0x0, 0x1);
        gbc.writeMem(0x5cbe, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x99fb, gbc.sp());
        EXPECT(0x5cc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01C0
        gbc.setState(0x1a0a, 0x6244, 0xd9c0, 0x4c51, 0x440d, 0x29a7, 0x0, 0x1);
        gbc.writeMem(0x1a0a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6244, gbc.sp());
        EXPECT(0x1a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01C2
        gbc.setState(0x1556, 0xe050, 0xea90, 0xea26, 0x89a7, 0x2290, 0x1, 0x1);
        gbc.writeMem(0x1556, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe050, gbc.sp());
        EXPECT(0x1558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01C3
        gbc.setState(0xbd43, 0xbc29, 0x6d90, 0x4044, 0x48d7, 0x8a27, 0x0, 0x0);
        gbc.writeMem(0xbd43, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbc29, gbc.sp());
        EXPECT(0xbd45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd43));
        EXPECT(0x94, gbc.readMem(0xbd44));
        // CB 94 01C4
        gbc.setState(0x201c, 0x28a, 0x5090, 0xa83b, 0x59af, 0xca6e, 0x0, 0x0);
        gbc.writeMem(0x201c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x28a, gbc.sp());
        EXPECT(0x201e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01C5
        gbc.setState(0xa7ca, 0x5be, 0xac00, 0xa225, 0x3108, 0x1965, 0x0, 0x0);
        gbc.writeMem(0xa7ca, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5be, gbc.sp());
        EXPECT(0xa7cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ca));
        EXPECT(0x94, gbc.readMem(0xa7cb));
        // CB 94 01C6
        gbc.setState(0x635f, 0x9da3, 0x3d30, 0x482e, 0xc93f, 0xfd7d, 0x1, 0x1);
        gbc.writeMem(0x635f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9da3, gbc.sp());
        EXPECT(0x6361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01C7
        gbc.setState(0xa0b4, 0x224a, 0x6180, 0x3696, 0x7b9b, 0xbe3d, 0x0, 0x0);
        gbc.writeMem(0xa0b4, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x224a, gbc.sp());
        EXPECT(0xa0b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0b4));
        EXPECT(0x94, gbc.readMem(0xa0b5));
        // CB 94 01C8
        gbc.setState(0x5be6, 0x5761, 0x67b0, 0xdef, 0xa761, 0xc525, 0x0, 0x0);
        gbc.writeMem(0x5be6, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5761, gbc.sp());
        EXPECT(0x5be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01C9
        gbc.setState(0xd885, 0xee7a, 0x2f0, 0xefee, 0xf4de, 0xd3a8, 0x1, 0x0);
        gbc.writeMem(0xd885, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xee7a, gbc.sp());
        EXPECT(0xd887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd885));
        EXPECT(0x94, gbc.readMem(0xd886));
        // CB 94 01CA
        gbc.setState(0xd0ab, 0xcbcc, 0x5160, 0xe9cc, 0x51bb, 0x6087, 0x0, 0x0);
        gbc.writeMem(0xd0ab, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xcbcc, gbc.sp());
        EXPECT(0xd0ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ab));
        EXPECT(0x94, gbc.readMem(0xd0ac));
        // CB 94 01CB
        gbc.setState(0x3ff2, 0x3580, 0xf900, 0xa32f, 0x1674, 0xa735, 0x0, 0x0);
        gbc.writeMem(0x3ff2, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3580, gbc.sp());
        EXPECT(0x3ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01CC
        gbc.setState(0xd4b4, 0xbbac, 0x7d50, 0xebfb, 0x4f8c, 0x70ea, 0x0, 0x1);
        gbc.writeMem(0xd4b4, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbbac, gbc.sp());
        EXPECT(0xd4b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4b4));
        EXPECT(0x94, gbc.readMem(0xd4b5));
        // CB 94 01CD
        gbc.setState(0x2be5, 0xbdfe, 0xde50, 0x774f, 0x2a9b, 0x8e8e, 0x1, 0x1);
        gbc.writeMem(0x2be5, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbdfe, gbc.sp());
        EXPECT(0x2be7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01CE
        gbc.setState(0xcb8, 0x5266, 0x1930, 0x27b4, 0x499b, 0xbc2f, 0x1, 0x1);
        gbc.writeMem(0xcb8, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5266, gbc.sp());
        EXPECT(0xcba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01CF
        gbc.setState(0x4468, 0x8219, 0xec0, 0x74ed, 0x9ff6, 0x2cb6, 0x0, 0x0);
        gbc.writeMem(0x4468, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8219, gbc.sp());
        EXPECT(0x446a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01D0
        gbc.setState(0x2197, 0xb1ed, 0x9280, 0x9f5a, 0x3eb6, 0xde39, 0x0, 0x1);
        gbc.writeMem(0x2197, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb1ed, gbc.sp());
        EXPECT(0x2199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01D1
        gbc.setState(0x4ecf, 0xb5c2, 0xe30, 0x7e7f, 0x1c2a, 0x68b2, 0x1, 0x0);
        gbc.writeMem(0x4ecf, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb5c2, gbc.sp());
        EXPECT(0x4ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01D2
        gbc.setState(0x90c9, 0xac66, 0x7d90, 0x983f, 0x92ca, 0xe288, 0x0, 0x1);
        gbc.writeMem(0x90c9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xac66, gbc.sp());
        EXPECT(0x90cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c9));
        EXPECT(0x94, gbc.readMem(0x90ca));
        // CB 94 01D3
        gbc.setState(0x28b3, 0xadab, 0x9bb0, 0xc5a, 0x61cf, 0x56cf, 0x1, 0x0);
        gbc.writeMem(0x28b3, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xadab, gbc.sp());
        EXPECT(0x28b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01D4
        gbc.setState(0x1a87, 0x2cab, 0x2940, 0x6ad3, 0xa066, 0x9cbe, 0x0, 0x1);
        gbc.writeMem(0x1a87, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2cab, gbc.sp());
        EXPECT(0x1a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01D5
        gbc.setState(0x29a9, 0xe822, 0xb050, 0x899e, 0xf209, 0x5db5, 0x1, 0x1);
        gbc.writeMem(0x29a9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe822, gbc.sp());
        EXPECT(0x29ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01D6
        gbc.setState(0xb49d, 0xcef2, 0x20e0, 0x1b30, 0xcf04, 0x68e8, 0x0, 0x0);
        gbc.writeMem(0xb49d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xcef2, gbc.sp());
        EXPECT(0xb49f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb49d));
        EXPECT(0x94, gbc.readMem(0xb49e));
        // CB 94 01D7
        gbc.setState(0x3071, 0x702, 0x4910, 0xd5ae, 0xa7bf, 0xb577, 0x1, 0x1);
        gbc.writeMem(0x3071, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x702, gbc.sp());
        EXPECT(0x3073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01D8
        gbc.setState(0x118c, 0xf112, 0xbb00, 0xb8bb, 0xe6bb, 0x7694, 0x0, 0x1);
        gbc.writeMem(0x118c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf112, gbc.sp());
        EXPECT(0x118e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01D9
        gbc.setState(0x93ad, 0x2905, 0x5ce0, 0x2904, 0xb7a9, 0x61e2, 0x0, 0x0);
        gbc.writeMem(0x93ad, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2905, gbc.sp());
        EXPECT(0x93af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ad));
        EXPECT(0x94, gbc.readMem(0x93ae));
        // CB 94 01DA
        gbc.setState(0xb4d0, 0x7f77, 0x8dc0, 0x2ff0, 0xf165, 0x4157, 0x0, 0x1);
        gbc.writeMem(0xb4d0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7f77, gbc.sp());
        EXPECT(0xb4d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4d0));
        EXPECT(0x94, gbc.readMem(0xb4d1));
        // CB 94 01DB
        gbc.setState(0x3898, 0xfdbb, 0xfd40, 0xe3d0, 0xcfc, 0x47dc, 0x1, 0x1);
        gbc.writeMem(0x3898, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfdbb, gbc.sp());
        EXPECT(0x389a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01DC
        gbc.setState(0xd958, 0x535f, 0xd7c0, 0x672b, 0xb6e6, 0xaf54, 0x0, 0x0);
        gbc.writeMem(0xd958, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x535f, gbc.sp());
        EXPECT(0xd95a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd958));
        EXPECT(0x94, gbc.readMem(0xd959));
        // CB 94 01DD
        gbc.setState(0x48a3, 0xd5d2, 0x4de0, 0xcb6d, 0x6872, 0x5833, 0x0, 0x0);
        gbc.writeMem(0x48a3, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd5d2, gbc.sp());
        EXPECT(0x48a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01DE
        gbc.setState(0x19cb, 0x5522, 0xb820, 0xcbc8, 0xd018, 0xf006, 0x0, 0x0);
        gbc.writeMem(0x19cb, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5522, gbc.sp());
        EXPECT(0x19cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01DF
        gbc.setState(0xeb08, 0x8305, 0xfaa0, 0xbfef, 0x7d9a, 0x93be, 0x0, 0x0);
        gbc.writeMem(0xeb08, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8305, gbc.sp());
        EXPECT(0xeb0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb08));
        EXPECT(0x94, gbc.readMem(0xeb09));
        // CB 94 01E0
        gbc.setState(0x4e58, 0x96f4, 0x29d0, 0x4b6c, 0xbda0, 0x2ddc, 0x1, 0x0);
        gbc.writeMem(0x4e58, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x96f4, gbc.sp());
        EXPECT(0x4e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01E1
        gbc.setState(0xe914, 0xe47, 0x7400, 0xda39, 0x3254, 0xccf5, 0x0, 0x1);
        gbc.writeMem(0xe914, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe47, gbc.sp());
        EXPECT(0xe916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe914));
        EXPECT(0x94, gbc.readMem(0xe915));
        // CB 94 01E2
        gbc.setState(0x51c5, 0xa3dc, 0xce10, 0xdf57, 0x87c3, 0xfa80, 0x0, 0x1);
        gbc.writeMem(0x51c5, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa3dc, gbc.sp());
        EXPECT(0x51c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01E3
        gbc.setState(0xc37b, 0x5806, 0x9e40, 0x2c4d, 0x4a9a, 0xa93c, 0x0, 0x1);
        gbc.writeMem(0xc37b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5806, gbc.sp());
        EXPECT(0xc37d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc37b));
        EXPECT(0x94, gbc.readMem(0xc37c));
        // CB 94 01E4
        gbc.setState(0xc4a, 0x106d, 0xde90, 0xaf66, 0x532f, 0x896, 0x0, 0x1);
        gbc.writeMem(0xc4a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x106d, gbc.sp());
        EXPECT(0xc4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01E5
        gbc.setState(0xa1ec, 0xf26f, 0xfe20, 0xc5e3, 0x8e18, 0xb18d, 0x0, 0x1);
        gbc.writeMem(0xa1ec, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf26f, gbc.sp());
        EXPECT(0xa1ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ec));
        EXPECT(0x94, gbc.readMem(0xa1ed));
        // CB 94 01E6
        gbc.setState(0x35f8, 0xb0b3, 0xdf80, 0x960a, 0x87f4, 0xbacd, 0x0, 0x1);
        gbc.writeMem(0x35f8, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb0b3, gbc.sp());
        EXPECT(0x35fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01E7
        gbc.setState(0x412b, 0xa115, 0x2fb0, 0xff1f, 0xd3dd, 0x5f87, 0x1, 0x1);
        gbc.writeMem(0x412b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa115, gbc.sp());
        EXPECT(0x412d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01E8
        gbc.setState(0x19fd, 0x141b, 0x8ba0, 0xbf12, 0x1ebb, 0xa19d, 0x0, 0x1);
        gbc.writeMem(0x19fd, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x141b, gbc.sp());
        EXPECT(0x19ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01E9
        gbc.setState(0x1385, 0x2e92, 0xb6f0, 0x981, 0x5440, 0xe35e, 0x1, 0x1);
        gbc.writeMem(0x1385, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2e92, gbc.sp());
        EXPECT(0x1387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01EA
        gbc.setState(0xbcba, 0x1ba8, 0x9e80, 0xd5e1, 0x4e7b, 0xa6cd, 0x1, 0x0);
        gbc.writeMem(0xbcba, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1ba8, gbc.sp());
        EXPECT(0xbcbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcba));
        EXPECT(0x94, gbc.readMem(0xbcbb));
        // CB 94 01EB
        gbc.setState(0x68bd, 0xcaf8, 0x96b0, 0x1eb4, 0x4e7, 0x8dd4, 0x0, 0x0);
        gbc.writeMem(0x68bd, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xcaf8, gbc.sp());
        EXPECT(0x68bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01EC
        gbc.setState(0x9644, 0xc8e3, 0xcf00, 0xaff, 0x8f83, 0x510e, 0x0, 0x1);
        gbc.writeMem(0x9644, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc8e3, gbc.sp());
        EXPECT(0x9646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9644));
        EXPECT(0x94, gbc.readMem(0x9645));
        // CB 94 01ED
        gbc.setState(0x18af, 0x760, 0x45d0, 0x5227, 0x5955, 0x28f8, 0x0, 0x1);
        gbc.writeMem(0x18af, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x760, gbc.sp());
        EXPECT(0x18b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01EE
        gbc.setState(0x239b, 0xa0f1, 0xf730, 0x233d, 0xc89a, 0x2215, 0x1, 0x1);
        gbc.writeMem(0x239b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa0f1, gbc.sp());
        EXPECT(0x239d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01EF
        gbc.setState(0x8e96, 0xc034, 0x6150, 0xbbe, 0xafac, 0x93be, 0x1, 0x0);
        gbc.writeMem(0x8e96, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc034, gbc.sp());
        EXPECT(0x8e98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e96));
        EXPECT(0x94, gbc.readMem(0x8e97));
        // CB 94 01F0
        gbc.setState(0x9f57, 0x7617, 0x56b0, 0x61ed, 0xe365, 0x746b, 0x1, 0x1);
        gbc.writeMem(0x9f57, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7617, gbc.sp());
        EXPECT(0x9f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f57));
        EXPECT(0x94, gbc.readMem(0x9f58));
        // CB 94 01F1
        gbc.setState(0x51e5, 0x7daa, 0x2320, 0x2135, 0x78b6, 0xd04f, 0x0, 0x0);
        gbc.writeMem(0x51e5, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7daa, gbc.sp());
        EXPECT(0x51e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01F2
        gbc.setState(0x2bb0, 0xf3eb, 0xb230, 0x9659, 0xddee, 0x8c8f, 0x1, 0x1);
        gbc.writeMem(0x2bb0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf3eb, gbc.sp());
        EXPECT(0x2bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01F3
        gbc.setState(0x1e35, 0x8b2d, 0x7980, 0x91f8, 0x46f5, 0xf7ce, 0x0, 0x0);
        gbc.writeMem(0x1e35, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8b2d, gbc.sp());
        EXPECT(0x1e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01F4
        gbc.setState(0xe335, 0xe668, 0x95f0, 0x585e, 0x1317, 0x1aa5, 0x1, 0x0);
        gbc.writeMem(0xe335, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe668, gbc.sp());
        EXPECT(0xe337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe335));
        EXPECT(0x94, gbc.readMem(0xe336));
        // CB 94 01F5
        gbc.setState(0x9f88, 0xeb14, 0xd5e0, 0xdd51, 0x79f0, 0x8509, 0x1, 0x0);
        gbc.writeMem(0x9f88, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xeb14, gbc.sp());
        EXPECT(0x9f8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f88));
        EXPECT(0x94, gbc.readMem(0x9f89));
        // CB 94 01F6
        gbc.setState(0x44b1, 0x48bc, 0x3730, 0xfac0, 0x7ee8, 0xaa3f, 0x1, 0x0);
        gbc.writeMem(0x44b1, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x48bc, gbc.sp());
        EXPECT(0x44b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01F7
        gbc.setState(0xced, 0xf4f2, 0x4520, 0xafc0, 0xf1e5, 0xdc16, 0x0, 0x0);
        gbc.writeMem(0xced, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf4f2, gbc.sp());
        EXPECT(0xcef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01F8
        gbc.setState(0x538d, 0x500, 0xfac0, 0x5490, 0x909c, 0x1539, 0x1, 0x0);
        gbc.writeMem(0x538d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x500, gbc.sp());
        EXPECT(0x538f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01F9
        gbc.setState(0x2279, 0xfcbc, 0x2590, 0xc2bc, 0x93f5, 0x807a, 0x0, 0x1);
        gbc.writeMem(0x2279, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xfcbc, gbc.sp());
        EXPECT(0x227b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 01FA
        gbc.setState(0xecdb, 0xe528, 0x1390, 0x68ac, 0xc735, 0x9a05, 0x0, 0x0);
        gbc.writeMem(0xecdb, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe528, gbc.sp());
        EXPECT(0xecdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecdb));
        EXPECT(0x94, gbc.readMem(0xecdc));
        // CB 94 01FC
        gbc.setState(0xeb60, 0x9be1, 0xdbe0, 0x30f2, 0x64d4, 0x7bce, 0x0, 0x0);
        gbc.writeMem(0xeb60, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9be1, gbc.sp());
        EXPECT(0xeb62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb60));
        EXPECT(0x94, gbc.readMem(0xeb61));
        // CB 94 01FD
        gbc.setState(0xee2f, 0x6966, 0xe480, 0xba0c, 0x17e7, 0x4470, 0x0, 0x1);
        gbc.writeMem(0xee2f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6966, gbc.sp());
        EXPECT(0xee31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee2f));
        EXPECT(0x94, gbc.readMem(0xee30));
        // CB 94 01FE
        gbc.setState(0x1644, 0xf428, 0x3840, 0x31e2, 0xd560, 0x91b6, 0x0, 0x0);
        gbc.writeMem(0x1644, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf428, gbc.sp());
        EXPECT(0x1646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 01FF
        gbc.setState(0x69bc, 0x876f, 0xf790, 0xeb68, 0xa4f0, 0x6b1e, 0x0, 0x1);
        gbc.writeMem(0x69bc, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x876f, gbc.sp());
        EXPECT(0x69be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0200
        gbc.setState(0x81d8, 0xdc02, 0xd750, 0x1dda, 0x24ca, 0x7544, 0x0, 0x1);
        gbc.writeMem(0x81d8, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdc02, gbc.sp());
        EXPECT(0x81da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81d8));
        EXPECT(0x94, gbc.readMem(0x81d9));
        // CB 94 0201
        gbc.setState(0x3f7d, 0xd879, 0x9580, 0x2cf3, 0xf760, 0xabfe, 0x1, 0x1);
        gbc.writeMem(0x3f7d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd879, gbc.sp());
        EXPECT(0x3f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0202
        gbc.setState(0xc020, 0xfd4c, 0x5fe0, 0x45e6, 0xb8e3, 0xb256, 0x1, 0x0);
        gbc.writeMem(0xc020, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfd4c, gbc.sp());
        EXPECT(0xc022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc020));
        EXPECT(0x94, gbc.readMem(0xc021));
        // CB 94 0203
        gbc.setState(0xe457, 0xaca3, 0x8100, 0xc4cd, 0x92d1, 0x2ecb, 0x1, 0x1);
        gbc.writeMem(0xe457, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xaca3, gbc.sp());
        EXPECT(0xe459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe457));
        EXPECT(0x94, gbc.readMem(0xe458));
        // CB 94 0204
        gbc.setState(0x390d, 0x3c54, 0x6eb0, 0x9114, 0x281e, 0x75a2, 0x1, 0x0);
        gbc.writeMem(0x390d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3c54, gbc.sp());
        EXPECT(0x390f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0205
        gbc.setState(0xb1c9, 0xd3e5, 0x8030, 0x1b8a, 0xba6d, 0x48a0, 0x1, 0x0);
        gbc.writeMem(0xb1c9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd3e5, gbc.sp());
        EXPECT(0xb1cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c9));
        EXPECT(0x94, gbc.readMem(0xb1ca));
        // CB 94 0206
        gbc.setState(0xad9f, 0xc409, 0xb980, 0xcf1, 0x8fc0, 0x3e3c, 0x0, 0x0);
        gbc.writeMem(0xad9f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc409, gbc.sp());
        EXPECT(0xada1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad9f));
        EXPECT(0x94, gbc.readMem(0xada0));
        // CB 94 0207
        gbc.setState(0x32a, 0x74ab, 0x7140, 0x8c37, 0x8967, 0x52fd, 0x1, 0x1);
        gbc.writeMem(0x32a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x74ab, gbc.sp());
        EXPECT(0x32c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0208
        gbc.setState(0xc61, 0xbd86, 0x34f0, 0x7c7b, 0xf9e0, 0x42a1, 0x0, 0x0);
        gbc.writeMem(0xc61, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xbd86, gbc.sp());
        EXPECT(0xc63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0209
        gbc.setState(0x3dee, 0x67b8, 0xf040, 0x64a, 0xfb79, 0x6b30, 0x0, 0x1);
        gbc.writeMem(0x3dee, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x67b8, gbc.sp());
        EXPECT(0x3df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 020A
        gbc.setState(0x4c7e, 0xe349, 0x29f0, 0xe2dc, 0xdc6, 0x7ef5, 0x0, 0x0);
        gbc.writeMem(0x4c7e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe349, gbc.sp());
        EXPECT(0x4c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 020B
        gbc.setState(0x582, 0x4c4b, 0x7490, 0x57f2, 0x73f9, 0xf316, 0x0, 0x1);
        gbc.writeMem(0x582, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4c4b, gbc.sp());
        EXPECT(0x584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 020C
        gbc.setState(0x3f0e, 0xefb9, 0x9650, 0x6d36, 0xc15e, 0xe585, 0x1, 0x1);
        gbc.writeMem(0x3f0e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xefb9, gbc.sp());
        EXPECT(0x3f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 020D
        gbc.setState(0x633, 0x23bb, 0x930, 0xb759, 0xfcfc, 0xe7bf, 0x1, 0x0);
        gbc.writeMem(0x633, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x23bb, gbc.sp());
        EXPECT(0x635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 020E
        gbc.setState(0xfa0, 0x655b, 0xbad0, 0xa683, 0x833b, 0x5aa1, 0x1, 0x1);
        gbc.writeMem(0xfa0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x655b, gbc.sp());
        EXPECT(0xfa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 020F
        gbc.setState(0x7f04, 0x1544, 0x76b0, 0x3fd8, 0xaa91, 0x4ba0, 0x1, 0x0);
        gbc.writeMem(0x7f04, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1544, gbc.sp());
        EXPECT(0x7f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0211
        gbc.setState(0xa9d0, 0x6ed2, 0x80, 0x69d6, 0x9c66, 0x2777, 0x0, 0x0);
        gbc.writeMem(0xa9d0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6ed2, gbc.sp());
        EXPECT(0xa9d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9d0));
        EXPECT(0x94, gbc.readMem(0xa9d1));
        // CB 94 0212
        gbc.setState(0x6ad8, 0xa3e1, 0xd2e0, 0x108b, 0xb4fa, 0x254f, 0x1, 0x1);
        gbc.writeMem(0x6ad8, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa3e1, gbc.sp());
        EXPECT(0x6ada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0213
        gbc.setState(0x2008, 0xe946, 0xecf0, 0x22b7, 0x914, 0x122a, 0x1, 0x1);
        gbc.writeMem(0x2008, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe946, gbc.sp());
        EXPECT(0x200a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0214
        gbc.setState(0x1b2f, 0x717d, 0x78f0, 0x25ee, 0x4b8e, 0x6d81, 0x1, 0x0);
        gbc.writeMem(0x1b2f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x717d, gbc.sp());
        EXPECT(0x1b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0215
        gbc.setState(0x8243, 0xdb9c, 0xe430, 0x9c84, 0x36e3, 0xc405, 0x0, 0x1);
        gbc.writeMem(0x8243, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xdb9c, gbc.sp());
        EXPECT(0x8245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8243));
        EXPECT(0x94, gbc.readMem(0x8244));
        // CB 94 0216
        gbc.setState(0x65f1, 0xdab6, 0x6770, 0x6a2a, 0x1e07, 0x87fd, 0x1, 0x0);
        gbc.writeMem(0x65f1, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xdab6, gbc.sp());
        EXPECT(0x65f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0217
        gbc.setState(0x9fd6, 0x3245, 0x33d0, 0xafe1, 0xf4fa, 0x1877, 0x0, 0x1);
        gbc.writeMem(0x9fd6, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3245, gbc.sp());
        EXPECT(0x9fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fd6));
        EXPECT(0x94, gbc.readMem(0x9fd7));
        // CB 94 0218
        gbc.setState(0x211e, 0xb113, 0x5410, 0x73ff, 0xc390, 0x77b0, 0x0, 0x1);
        gbc.writeMem(0x211e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb113, gbc.sp());
        EXPECT(0x2120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0219
        gbc.setState(0x7733, 0xce30, 0x7760, 0x8ac1, 0xf928, 0xf5a6, 0x1, 0x1);
        gbc.writeMem(0x7733, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xce30, gbc.sp());
        EXPECT(0x7735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 021A
        gbc.setState(0x251a, 0x9802, 0xc1d0, 0xc490, 0xdf2d, 0xfd5c, 0x1, 0x1);
        gbc.writeMem(0x251a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9802, gbc.sp());
        EXPECT(0x251c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 021B
        gbc.setState(0xed3, 0xdb2e, 0xde40, 0x58f1, 0x64f8, 0xf1b7, 0x0, 0x1);
        gbc.writeMem(0xed3, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdb2e, gbc.sp());
        EXPECT(0xed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 021C
        gbc.setState(0xa4f3, 0xc6be, 0x4ab0, 0x1eaa, 0x67af, 0xfce8, 0x1, 0x0);
        gbc.writeMem(0xa4f3, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc6be, gbc.sp());
        EXPECT(0xa4f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f3));
        EXPECT(0x94, gbc.readMem(0xa4f4));
        // CB 94 021D
        gbc.setState(0x78b2, 0x8cfb, 0xa400, 0x9418, 0xaea3, 0x8226, 0x0, 0x1);
        gbc.writeMem(0x78b2, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8cfb, gbc.sp());
        EXPECT(0x78b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 021E
        gbc.setState(0x6aa3, 0x793b, 0x8450, 0x68bb, 0x68b1, 0x5dc1, 0x0, 0x1);
        gbc.writeMem(0x6aa3, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x793b, gbc.sp());
        EXPECT(0x6aa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 021F
        gbc.setState(0x45b1, 0x7704, 0x15f0, 0xecac, 0xd587, 0x1439, 0x1, 0x0);
        gbc.writeMem(0x45b1, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7704, gbc.sp());
        EXPECT(0x45b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0220
        gbc.setState(0x31, 0x3f39, 0x4380, 0x9dee, 0xa943, 0xd5c5, 0x0, 0x1);
        gbc.writeMem(0x31, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3f39, gbc.sp());
        EXPECT(0x33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0221
        gbc.setState(0x1c49, 0x1db6, 0xbd90, 0xae85, 0x5fba, 0xa568, 0x0, 0x1);
        gbc.writeMem(0x1c49, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1db6, gbc.sp());
        EXPECT(0x1c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0222
        gbc.setState(0xa4ad, 0xf336, 0xaa0, 0xa21c, 0xba04, 0x6af2, 0x1, 0x1);
        gbc.writeMem(0xa4ad, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf336, gbc.sp());
        EXPECT(0xa4af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ad));
        EXPECT(0x94, gbc.readMem(0xa4ae));
        // CB 94 0223
        gbc.setState(0x9d1f, 0x1c71, 0x4fc0, 0xb16c, 0xd5a8, 0xad0, 0x0, 0x0);
        gbc.writeMem(0x9d1f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1c71, gbc.sp());
        EXPECT(0x9d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d1f));
        EXPECT(0x94, gbc.readMem(0x9d20));
        // CB 94 0224
        gbc.setState(0xd0fa, 0x4852, 0x3d90, 0x7187, 0xd9d7, 0x53a1, 0x0, 0x1);
        gbc.writeMem(0xd0fa, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4852, gbc.sp());
        EXPECT(0xd0fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0fa));
        EXPECT(0x94, gbc.readMem(0xd0fb));
        // CB 94 0225
        gbc.setState(0xc6c1, 0x1d7d, 0x4fe0, 0x2d46, 0x6cea, 0x1923, 0x1, 0x1);
        gbc.writeMem(0xc6c1, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1d7d, gbc.sp());
        EXPECT(0xc6c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c1));
        EXPECT(0x94, gbc.readMem(0xc6c2));
        // CB 94 0226
        gbc.setState(0x4bba, 0xbb55, 0x4860, 0x8af9, 0xf386, 0x6a34, 0x0, 0x1);
        gbc.writeMem(0x4bba, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xbb55, gbc.sp());
        EXPECT(0x4bbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0227
        gbc.setState(0xe6e9, 0x903f, 0x86a0, 0xc62f, 0xdf5a, 0x51e, 0x0, 0x1);
        gbc.writeMem(0xe6e9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x903f, gbc.sp());
        EXPECT(0xe6eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e9));
        EXPECT(0x94, gbc.readMem(0xe6ea));
        // CB 94 0228
        gbc.setState(0x8116, 0xa959, 0xbfc0, 0xf3a2, 0xbe6e, 0xdaf5, 0x1, 0x1);
        gbc.writeMem(0x8116, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa959, gbc.sp());
        EXPECT(0x8118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8116));
        EXPECT(0x94, gbc.readMem(0x8117));
        // CB 94 0229
        gbc.setState(0x8d19, 0x4301, 0xa8d0, 0xd5e2, 0xb3f7, 0xb034, 0x0, 0x1);
        gbc.writeMem(0x8d19, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4301, gbc.sp());
        EXPECT(0x8d1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d19));
        EXPECT(0x94, gbc.readMem(0x8d1a));
        // CB 94 022A
        gbc.setState(0xc7a, 0xd89a, 0x6040, 0xce80, 0xd639, 0xfba7, 0x0, 0x1);
        gbc.writeMem(0xc7a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd89a, gbc.sp());
        EXPECT(0xc7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 022C
        gbc.setState(0xe73a, 0x249b, 0x37d0, 0xe141, 0x2c42, 0x93ef, 0x0, 0x1);
        gbc.writeMem(0xe73a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x249b, gbc.sp());
        EXPECT(0xe73c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe73a));
        EXPECT(0x94, gbc.readMem(0xe73b));
        // CB 94 022D
        gbc.setState(0x6cbf, 0xf96f, 0x15d0, 0x5da3, 0xef03, 0x472f, 0x0, 0x1);
        gbc.writeMem(0x6cbf, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf96f, gbc.sp());
        EXPECT(0x6cc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 022E
        gbc.setState(0x7814, 0x2cfb, 0xead0, 0x1118, 0x4954, 0x2a02, 0x1, 0x1);
        gbc.writeMem(0x7814, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2cfb, gbc.sp());
        EXPECT(0x7816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 022F
        gbc.setState(0x8756, 0xd1d2, 0xec30, 0x9ade, 0x7483, 0xb285, 0x1, 0x0);
        gbc.writeMem(0x8756, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd1d2, gbc.sp());
        EXPECT(0x8758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8756));
        EXPECT(0x94, gbc.readMem(0x8757));
        // CB 94 0230
        gbc.setState(0xe3ee, 0xe0e0, 0xd10, 0xb2b2, 0x9ebe, 0x4c4a, 0x0, 0x1);
        gbc.writeMem(0xe3ee, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe0e0, gbc.sp());
        EXPECT(0xe3f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ee));
        EXPECT(0x94, gbc.readMem(0xe3ef));
        // CB 94 0231
        gbc.setState(0x32f9, 0xe473, 0x40, 0x72c8, 0x57ca, 0xfb9f, 0x0, 0x0);
        gbc.writeMem(0x32f9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe473, gbc.sp());
        EXPECT(0x32fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0232
        gbc.setState(0x7559, 0x75b3, 0x1d90, 0x115e, 0x5cdb, 0x1883, 0x1, 0x1);
        gbc.writeMem(0x7559, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x75b3, gbc.sp());
        EXPECT(0x755b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0233
        gbc.setState(0xcd4, 0xe484, 0x6780, 0x8517, 0x282c, 0xb1ad, 0x0, 0x1);
        gbc.writeMem(0xcd4, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe484, gbc.sp());
        EXPECT(0xcd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0234
        gbc.setState(0x5386, 0x1a81, 0x4ad0, 0x5a12, 0x7288, 0x19d3, 0x1, 0x1);
        gbc.writeMem(0x5386, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1a81, gbc.sp());
        EXPECT(0x5388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0235
        gbc.setState(0x4886, 0x1e88, 0x2960, 0x6a6d, 0x2aed, 0xd49b, 0x0, 0x0);
        gbc.writeMem(0x4886, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1e88, gbc.sp());
        EXPECT(0x4888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0236
        gbc.setState(0xa220, 0x38fc, 0xe010, 0x9bfc, 0xe93d, 0x403f, 0x0, 0x1);
        gbc.writeMem(0xa220, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x38fc, gbc.sp());
        EXPECT(0xa222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa220));
        EXPECT(0x94, gbc.readMem(0xa221));
        // CB 94 0237
        gbc.setState(0x8f31, 0x1d62, 0x1ac0, 0x278a, 0x81c, 0x9f08, 0x0, 0x0);
        gbc.writeMem(0x8f31, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1d62, gbc.sp());
        EXPECT(0x8f33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f31));
        EXPECT(0x94, gbc.readMem(0x8f32));
        // CB 94 0238
        gbc.setState(0x9d2b, 0xb602, 0xd140, 0xd474, 0x8ecf, 0x81b7, 0x0, 0x0);
        gbc.writeMem(0x9d2b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb602, gbc.sp());
        EXPECT(0x9d2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d2b));
        EXPECT(0x94, gbc.readMem(0x9d2c));
        // CB 94 0239
        gbc.setState(0xba6a, 0xfd14, 0xf500, 0x3652, 0x8cec, 0xfb80, 0x1, 0x0);
        gbc.writeMem(0xba6a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xfd14, gbc.sp());
        EXPECT(0xba6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba6a));
        EXPECT(0x94, gbc.readMem(0xba6b));
        // CB 94 023A
        gbc.setState(0x50a5, 0x1d6e, 0xe930, 0xa11c, 0xea29, 0x1086, 0x0, 0x1);
        gbc.writeMem(0x50a5, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1d6e, gbc.sp());
        EXPECT(0x50a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 023B
        gbc.setState(0xa683, 0xbfbc, 0x5bd0, 0xe5ba, 0x5d2c, 0x7634, 0x0, 0x1);
        gbc.writeMem(0xa683, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xbfbc, gbc.sp());
        EXPECT(0xa685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa683));
        EXPECT(0x94, gbc.readMem(0xa684));
        // CB 94 023C
        gbc.setState(0xd72c, 0x3931, 0x6be0, 0x35a8, 0xea14, 0x7558, 0x1, 0x1);
        gbc.writeMem(0xd72c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3931, gbc.sp());
        EXPECT(0xd72e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd72c));
        EXPECT(0x94, gbc.readMem(0xd72d));
        // CB 94 023E
        gbc.setState(0x6b87, 0xb565, 0x6ef0, 0x1f7b, 0x374c, 0xaffb, 0x0, 0x0);
        gbc.writeMem(0x6b87, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb565, gbc.sp());
        EXPECT(0x6b89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 023F
        gbc.setState(0xb3e9, 0x9812, 0x9ce0, 0x74ef, 0x8a7e, 0x3608, 0x1, 0x0);
        gbc.writeMem(0xb3e9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9812, gbc.sp());
        EXPECT(0xb3eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3e9));
        EXPECT(0x94, gbc.readMem(0xb3ea));
        // CB 94 0240
        gbc.setState(0x603, 0x4357, 0x5d10, 0xd014, 0xb636, 0xcf1b, 0x1, 0x1);
        gbc.writeMem(0x603, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4357, gbc.sp());
        EXPECT(0x605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0241
        gbc.setState(0x6531, 0x6a2a, 0x7a0, 0x2979, 0xf8e7, 0x8844, 0x1, 0x1);
        gbc.writeMem(0x6531, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6a2a, gbc.sp());
        EXPECT(0x6533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0242
        gbc.setState(0xd465, 0x5b6b, 0xe430, 0xd43b, 0x63f3, 0xaeae, 0x1, 0x0);
        gbc.writeMem(0xd465, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5b6b, gbc.sp());
        EXPECT(0xd467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd465));
        EXPECT(0x94, gbc.readMem(0xd466));
        // CB 94 0243
        gbc.setState(0xeace, 0xd088, 0xee00, 0x46b, 0x2691, 0xca0c, 0x0, 0x0);
        gbc.writeMem(0xeace, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd088, gbc.sp());
        EXPECT(0xead0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeace));
        EXPECT(0x94, gbc.readMem(0xeacf));
        // CB 94 0244
        gbc.setState(0xbafc, 0x3635, 0xe560, 0x5f85, 0x62ef, 0x6546, 0x1, 0x0);
        gbc.writeMem(0xbafc, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3635, gbc.sp());
        EXPECT(0xbafe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbafc));
        EXPECT(0x94, gbc.readMem(0xbafd));
        // CB 94 0245
        gbc.setState(0x54a6, 0xa90a, 0xd680, 0xe3ab, 0x560a, 0x59f8, 0x0, 0x1);
        gbc.writeMem(0x54a6, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa90a, gbc.sp());
        EXPECT(0x54a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0246
        gbc.setState(0x887a, 0x5e75, 0x2430, 0x2890, 0x5c05, 0xa7fd, 0x1, 0x1);
        gbc.writeMem(0x887a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5e75, gbc.sp());
        EXPECT(0x887c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x887a));
        EXPECT(0x94, gbc.readMem(0x887b));
        // CB 94 0247
        gbc.setState(0x254b, 0xb71, 0x2ad0, 0xd7df, 0xe1bd, 0x263d, 0x1, 0x1);
        gbc.writeMem(0x254b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb71, gbc.sp());
        EXPECT(0x254d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0248
        gbc.setState(0x5847, 0xa4a6, 0x560, 0xed03, 0x7367, 0x23d4, 0x0, 0x1);
        gbc.writeMem(0x5847, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa4a6, gbc.sp());
        EXPECT(0x5849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0249
        gbc.setState(0x7e5e, 0xd756, 0x59e0, 0xdd87, 0xe54, 0xf9c7, 0x1, 0x0);
        gbc.writeMem(0x7e5e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd756, gbc.sp());
        EXPECT(0x7e60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 024A
        gbc.setState(0x8cd2, 0x7ec, 0x360, 0xdf8c, 0x3705, 0xb520, 0x1, 0x1);
        gbc.writeMem(0x8cd2, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7ec, gbc.sp());
        EXPECT(0x8cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd2));
        EXPECT(0x94, gbc.readMem(0x8cd3));
        // CB 94 024B
        gbc.setState(0x56ae, 0x6e1a, 0x7060, 0xd6ff, 0xeb9d, 0x35ea, 0x1, 0x1);
        gbc.writeMem(0x56ae, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6e1a, gbc.sp());
        EXPECT(0x56b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 024C
        gbc.setState(0xe50, 0xabd2, 0x7410, 0x2de9, 0x6015, 0x642a, 0x0, 0x0);
        gbc.writeMem(0xe50, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xabd2, gbc.sp());
        EXPECT(0xe52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 024D
        gbc.setState(0x2278, 0x866a, 0xf030, 0x63df, 0xd59, 0x83be, 0x0, 0x0);
        gbc.writeMem(0x2278, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x866a, gbc.sp());
        EXPECT(0x227a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 024E
        gbc.setState(0xa6, 0xfedf, 0x4590, 0xce9c, 0x771c, 0x5b72, 0x1, 0x1);
        gbc.writeMem(0xa6, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xfedf, gbc.sp());
        EXPECT(0xa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 024F
        gbc.setState(0x225a, 0x908, 0x79a0, 0x7eba, 0x4359, 0x90fc, 0x0, 0x0);
        gbc.writeMem(0x225a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x908, gbc.sp());
        EXPECT(0x225c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0250
        gbc.setState(0x453f, 0x1c85, 0x8760, 0xd62d, 0xc367, 0x5b04, 0x1, 0x1);
        gbc.writeMem(0x453f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1c85, gbc.sp());
        EXPECT(0x4541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0251
        gbc.setState(0xbb4b, 0x9d5f, 0x77e0, 0x11a5, 0xffc6, 0x368f, 0x0, 0x1);
        gbc.writeMem(0xbb4b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9d5f, gbc.sp());
        EXPECT(0xbb4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb4b));
        EXPECT(0x94, gbc.readMem(0xbb4c));
        // CB 94 0252
        gbc.setState(0x6cc7, 0x3a6f, 0x10f0, 0x49be, 0xeb27, 0xb6ca, 0x0, 0x1);
        gbc.writeMem(0x6cc7, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3a6f, gbc.sp());
        EXPECT(0x6cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0253
        gbc.setState(0xacf6, 0x382d, 0x41e0, 0xf8ee, 0xe53e, 0x9849, 0x0, 0x1);
        gbc.writeMem(0xacf6, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x382d, gbc.sp());
        EXPECT(0xacf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf6));
        EXPECT(0x94, gbc.readMem(0xacf7));
        // CB 94 0254
        gbc.setState(0x1f51, 0x25ec, 0xe30, 0x5009, 0x1da7, 0x15cd, 0x1, 0x0);
        gbc.writeMem(0x1f51, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x25ec, gbc.sp());
        EXPECT(0x1f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0255
        gbc.setState(0xbe13, 0x8c50, 0x4330, 0x7c08, 0x1e07, 0x6d20, 0x1, 0x0);
        gbc.writeMem(0xbe13, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8c50, gbc.sp());
        EXPECT(0xbe15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe13));
        EXPECT(0x94, gbc.readMem(0xbe14));
        // CB 94 0256
        gbc.setState(0x647d, 0xbd14, 0xed0, 0xadbc, 0x1b1d, 0x1dd0, 0x0, 0x0);
        gbc.writeMem(0x647d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbd14, gbc.sp());
        EXPECT(0x647f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0257
        gbc.setState(0xba75, 0xda75, 0x2b80, 0xc509, 0xf8c5, 0xa752, 0x0, 0x1);
        gbc.writeMem(0xba75, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xda75, gbc.sp());
        EXPECT(0xba77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba75));
        EXPECT(0x94, gbc.readMem(0xba76));
        // CB 94 0258
        gbc.setState(0x20b, 0x3007, 0x71b0, 0x44d, 0x2706, 0xebc3, 0x0, 0x1);
        gbc.writeMem(0x20b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3007, gbc.sp());
        EXPECT(0x20d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0259
        gbc.setState(0xa1dd, 0xe25a, 0x7f70, 0x6bc7, 0xae26, 0xf53f, 0x1, 0x1);
        gbc.writeMem(0xa1dd, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe25a, gbc.sp());
        EXPECT(0xa1df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1dd));
        EXPECT(0x94, gbc.readMem(0xa1de));
        // CB 94 025A
        gbc.setState(0xd328, 0xe5d6, 0xf460, 0xc669, 0xf161, 0x932b, 0x0, 0x0);
        gbc.writeMem(0xd328, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe5d6, gbc.sp());
        EXPECT(0xd32a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd328));
        EXPECT(0x94, gbc.readMem(0xd329));
        // CB 94 025B
        gbc.setState(0xe6ac, 0x23f0, 0xf560, 0xac37, 0xc0ef, 0x7a2f, 0x0, 0x1);
        gbc.writeMem(0xe6ac, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x23f0, gbc.sp());
        EXPECT(0xe6ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ac));
        EXPECT(0x94, gbc.readMem(0xe6ad));
        // CB 94 025C
        gbc.setState(0xc37f, 0x1035, 0x1500, 0x7dfc, 0x8787, 0x1fb5, 0x0, 0x1);
        gbc.writeMem(0xc37f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1035, gbc.sp());
        EXPECT(0xc381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc37f));
        EXPECT(0x94, gbc.readMem(0xc380));
        // CB 94 025E
        gbc.setState(0x7956, 0x5b06, 0x3830, 0x9018, 0xb32, 0x274b, 0x0, 0x0);
        gbc.writeMem(0x7956, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5b06, gbc.sp());
        EXPECT(0x7958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 025F
        gbc.setState(0xbdd5, 0x5b7, 0xad20, 0xd489, 0x22a5, 0x5155, 0x1, 0x1);
        gbc.writeMem(0xbdd5, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5b7, gbc.sp());
        EXPECT(0xbdd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdd5));
        EXPECT(0x94, gbc.readMem(0xbdd6));
        // CB 94 0260
        gbc.setState(0x17a3, 0xfd27, 0x5f30, 0x633e, 0xa3de, 0xc2a3, 0x0, 0x1);
        gbc.writeMem(0x17a3, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xfd27, gbc.sp());
        EXPECT(0x17a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0262
        gbc.setState(0xae41, 0x43c9, 0x6ea0, 0xca3f, 0x776b, 0x8cc8, 0x1, 0x0);
        gbc.writeMem(0xae41, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x43c9, gbc.sp());
        EXPECT(0xae43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae41));
        EXPECT(0x94, gbc.readMem(0xae42));
        // CB 94 0263
        gbc.setState(0xd35a, 0x2b4e, 0x2910, 0xa069, 0xe4e7, 0xe66b, 0x0, 0x0);
        gbc.writeMem(0xd35a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2b4e, gbc.sp());
        EXPECT(0xd35c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd35a));
        EXPECT(0x94, gbc.readMem(0xd35b));
        // CB 94 0264
        gbc.setState(0xce81, 0x20e8, 0xaf20, 0xd4aa, 0xa6b6, 0x2b68, 0x1, 0x1);
        gbc.writeMem(0xce81, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x20e8, gbc.sp());
        EXPECT(0xce83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce81));
        EXPECT(0x94, gbc.readMem(0xce82));
        // CB 94 0265
        gbc.setState(0x7d77, 0x714b, 0xf100, 0x179e, 0xc8ca, 0xebba, 0x0, 0x0);
        gbc.writeMem(0x7d77, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x714b, gbc.sp());
        EXPECT(0x7d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0266
        gbc.setState(0x4e39, 0x1d43, 0x3580, 0xa959, 0xde65, 0xa245, 0x0, 0x0);
        gbc.writeMem(0x4e39, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1d43, gbc.sp());
        EXPECT(0x4e3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0267
        gbc.setState(0xe570, 0xfbfc, 0xf540, 0x298, 0xd593, 0x198c, 0x1, 0x1);
        gbc.writeMem(0xe570, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xfbfc, gbc.sp());
        EXPECT(0xe572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe570));
        EXPECT(0x94, gbc.readMem(0xe571));
        // CB 94 0268
        gbc.setState(0x5a99, 0x6e50, 0x1840, 0xd81, 0xba2a, 0x1045, 0x0, 0x1);
        gbc.writeMem(0x5a99, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6e50, gbc.sp());
        EXPECT(0x5a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0269
        gbc.setState(0xd1ab, 0xe368, 0x9a40, 0x65b1, 0x35bc, 0x8f7f, 0x1, 0x1);
        gbc.writeMem(0xd1ab, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe368, gbc.sp());
        EXPECT(0xd1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ab));
        EXPECT(0x94, gbc.readMem(0xd1ac));
        // CB 94 026A
        gbc.setState(0xe7a6, 0x130c, 0x2470, 0x7e63, 0x10ff, 0x507c, 0x1, 0x0);
        gbc.writeMem(0xe7a6, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x130c, gbc.sp());
        EXPECT(0xe7a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7a6));
        EXPECT(0x94, gbc.readMem(0xe7a7));
        // CB 94 026B
        gbc.setState(0xec3e, 0xbdfe, 0xb220, 0xe610, 0xd5e, 0x6af7, 0x1, 0x0);
        gbc.writeMem(0xec3e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbdfe, gbc.sp());
        EXPECT(0xec40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec3e));
        EXPECT(0x94, gbc.readMem(0xec3f));
        // CB 94 026C
        gbc.setState(0x9c45, 0x402e, 0x1ab0, 0x91ff, 0x3b90, 0x5150, 0x1, 0x0);
        gbc.writeMem(0x9c45, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x402e, gbc.sp());
        EXPECT(0x9c47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c45));
        EXPECT(0x94, gbc.readMem(0x9c46));
        // CB 94 026D
        gbc.setState(0x766c, 0xdd89, 0x47a0, 0x467c, 0x9, 0x6199, 0x0, 0x0);
        gbc.writeMem(0x766c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdd89, gbc.sp());
        EXPECT(0x766e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 026E
        gbc.setState(0x484a, 0x3034, 0xee00, 0x70ff, 0xccd2, 0x5d9e, 0x0, 0x0);
        gbc.writeMem(0x484a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3034, gbc.sp());
        EXPECT(0x484c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 026F
        gbc.setState(0x9d98, 0x66ee, 0xe2d0, 0xd9fd, 0x2e0e, 0xcaf3, 0x0, 0x0);
        gbc.writeMem(0x9d98, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x66ee, gbc.sp());
        EXPECT(0x9d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d98));
        EXPECT(0x94, gbc.readMem(0x9d99));
        // CB 94 0270
        gbc.setState(0x411c, 0x130f, 0x750, 0xf1ec, 0x714c, 0xda85, 0x0, 0x1);
        gbc.writeMem(0x411c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x130f, gbc.sp());
        EXPECT(0x411e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0271
        gbc.setState(0x6e54, 0xfe9a, 0xf60, 0x5ca2, 0xd15, 0x84bf, 0x0, 0x0);
        gbc.writeMem(0x6e54, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfe9a, gbc.sp());
        EXPECT(0x6e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0272
        gbc.setState(0x4c62, 0x8740, 0x6180, 0xff88, 0x1d00, 0x8d27, 0x1, 0x1);
        gbc.writeMem(0x4c62, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8740, gbc.sp());
        EXPECT(0x4c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0273
        gbc.setState(0x7b0a, 0x6742, 0x3440, 0x397a, 0xe73, 0xba8e, 0x0, 0x0);
        gbc.writeMem(0x7b0a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6742, gbc.sp());
        EXPECT(0x7b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0274
        gbc.setState(0x7a80, 0x7678, 0xc2d0, 0x3638, 0xd949, 0x7839, 0x1, 0x0);
        gbc.writeMem(0x7a80, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7678, gbc.sp());
        EXPECT(0x7a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0275
        gbc.setState(0xc390, 0xd71d, 0x15d0, 0xe7f6, 0x72b7, 0x6f38, 0x0, 0x0);
        gbc.writeMem(0xc390, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd71d, gbc.sp());
        EXPECT(0xc392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc390));
        EXPECT(0x94, gbc.readMem(0xc391));
        // CB 94 0276
        gbc.setState(0xb2a0, 0xc18e, 0xd300, 0x4946, 0xa94a, 0xe98, 0x0, 0x1);
        gbc.writeMem(0xb2a0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc18e, gbc.sp());
        EXPECT(0xb2a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a0));
        EXPECT(0x94, gbc.readMem(0xb2a1));
        // CB 94 0277
        gbc.setState(0x5024, 0x3782, 0x1400, 0x3956, 0x2506, 0x1dfd, 0x0, 0x1);
        gbc.writeMem(0x5024, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3782, gbc.sp());
        EXPECT(0x5026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0278
        gbc.setState(0x1154, 0x1f3, 0xc50, 0xe0bb, 0x8d91, 0xc918, 0x0, 0x0);
        gbc.writeMem(0x1154, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1f3, gbc.sp());
        EXPECT(0x1156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0279
        gbc.setState(0xecb9, 0xf0a, 0x85d0, 0x4e31, 0x9000, 0x170a, 0x1, 0x1);
        gbc.writeMem(0xecb9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf0a, gbc.sp());
        EXPECT(0xecbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecb9));
        EXPECT(0x94, gbc.readMem(0xecba));
        // CB 94 027A
        gbc.setState(0x8d24, 0xf9ba, 0xf990, 0x3495, 0x586, 0xa4db, 0x0, 0x1);
        gbc.writeMem(0x8d24, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf9ba, gbc.sp());
        EXPECT(0x8d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d24));
        EXPECT(0x94, gbc.readMem(0x8d25));
        // CB 94 027B
        gbc.setState(0x9870, 0x79b0, 0x7160, 0xf07e, 0x3d05, 0x7425, 0x1, 0x1);
        gbc.writeMem(0x9870, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x79b0, gbc.sp());
        EXPECT(0x9872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9870));
        EXPECT(0x94, gbc.readMem(0x9871));
        // CB 94 027C
        gbc.setState(0xc1b1, 0x9423, 0x89c0, 0x1eee, 0xbe35, 0x3702, 0x0, 0x1);
        gbc.writeMem(0xc1b1, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9423, gbc.sp());
        EXPECT(0xc1b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b1));
        EXPECT(0x94, gbc.readMem(0xc1b2));
        // CB 94 027D
        gbc.setState(0x3005, 0x42, 0xdcc0, 0xe02c, 0xec2a, 0xd7f6, 0x1, 0x0);
        gbc.writeMem(0x3005, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x42, gbc.sp());
        EXPECT(0x3007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 027E
        gbc.setState(0x8dc3, 0x4ea4, 0xf980, 0x5d4, 0x4c01, 0x5938, 0x0, 0x0);
        gbc.writeMem(0x8dc3, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4ea4, gbc.sp());
        EXPECT(0x8dc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc3));
        EXPECT(0x94, gbc.readMem(0x8dc4));
        // CB 94 027F
        gbc.setState(0xcfb9, 0xe284, 0xea30, 0xbdfb, 0x2502, 0xd57e, 0x0, 0x1);
        gbc.writeMem(0xcfb9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe284, gbc.sp());
        EXPECT(0xcfbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfb9));
        EXPECT(0x94, gbc.readMem(0xcfba));
        // CB 94 0280
        gbc.setState(0x3ad7, 0x67e4, 0xe290, 0x33db, 0x39a1, 0x320, 0x1, 0x0);
        gbc.writeMem(0x3ad7, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x67e4, gbc.sp());
        EXPECT(0x3ad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0281
        gbc.setState(0x991, 0xfee9, 0x5ed0, 0xe293, 0x4eb, 0xe140, 0x1, 0x0);
        gbc.writeMem(0x991, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfee9, gbc.sp());
        EXPECT(0x993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0282
        gbc.setState(0xc4e1, 0x4000, 0xe150, 0x3d51, 0xaaa, 0xfece, 0x1, 0x0);
        gbc.writeMem(0xc4e1, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4000, gbc.sp());
        EXPECT(0xc4e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4e1));
        EXPECT(0x94, gbc.readMem(0xc4e2));
        // CB 94 0283
        gbc.setState(0x1820, 0xfd05, 0xb140, 0xdb61, 0x93ab, 0x1bf0, 0x0, 0x1);
        gbc.writeMem(0x1820, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfd05, gbc.sp());
        EXPECT(0x1822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0284
        gbc.setState(0x83f4, 0x4eda, 0x6b80, 0x61e, 0x6d5b, 0x4d48, 0x1, 0x0);
        gbc.writeMem(0x83f4, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4eda, gbc.sp());
        EXPECT(0x83f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83f4));
        EXPECT(0x94, gbc.readMem(0x83f5));
        // CB 94 0285
        gbc.setState(0x156a, 0x38, 0xd050, 0x64d, 0xc3d1, 0xe48d, 0x1, 0x0);
        gbc.writeMem(0x156a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x38, gbc.sp());
        EXPECT(0x156c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0286
        gbc.setState(0x2478, 0xb562, 0x85a0, 0xe141, 0xe490, 0xfec3, 0x0, 0x0);
        gbc.writeMem(0x2478, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb562, gbc.sp());
        EXPECT(0x247a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0287
        gbc.setState(0xeaa1, 0x3a1e, 0x2ef0, 0x223d, 0xe700, 0x60f1, 0x1, 0x1);
        gbc.writeMem(0xeaa1, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3a1e, gbc.sp());
        EXPECT(0xeaa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaa1));
        EXPECT(0x94, gbc.readMem(0xeaa2));
        // CB 94 0288
        gbc.setState(0x8282, 0x4614, 0xe770, 0x4fc4, 0x6771, 0x1f54, 0x0, 0x1);
        gbc.writeMem(0x8282, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4614, gbc.sp());
        EXPECT(0x8284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8282));
        EXPECT(0x94, gbc.readMem(0x8283));
        // CB 94 0289
        gbc.setState(0x687, 0xb869, 0xb200, 0x3bbc, 0xf6d, 0xb464, 0x0, 0x1);
        gbc.writeMem(0x687, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb869, gbc.sp());
        EXPECT(0x689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 028A
        gbc.setState(0x514, 0x569a, 0x8e60, 0x45a3, 0xe596, 0xb409, 0x1, 0x0);
        gbc.writeMem(0x514, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x569a, gbc.sp());
        EXPECT(0x516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 028B
        gbc.setState(0xbcab, 0x3392, 0x7a10, 0xc6f3, 0xa610, 0xb5ef, 0x0, 0x1);
        gbc.writeMem(0xbcab, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3392, gbc.sp());
        EXPECT(0xbcad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcab));
        EXPECT(0x94, gbc.readMem(0xbcac));
        // CB 94 028C
        gbc.setState(0x6232, 0x85ea, 0x7680, 0xd132, 0x833, 0x3764, 0x0, 0x1);
        gbc.writeMem(0x6232, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x85ea, gbc.sp());
        EXPECT(0x6234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 028D
        gbc.setState(0x11e2, 0x8342, 0x9cc0, 0x57c, 0x89eb, 0x39f5, 0x0, 0x0);
        gbc.writeMem(0x11e2, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8342, gbc.sp());
        EXPECT(0x11e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 028E
        gbc.setState(0x3c81, 0x5b71, 0xfaf0, 0x2671, 0xed24, 0xcafb, 0x0, 0x1);
        gbc.writeMem(0x3c81, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5b71, gbc.sp());
        EXPECT(0x3c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 028F
        gbc.setState(0xee04, 0x3a33, 0x8af0, 0x674b, 0x213a, 0xd1d2, 0x1, 0x0);
        gbc.writeMem(0xee04, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3a33, gbc.sp());
        EXPECT(0xee06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee04));
        EXPECT(0x94, gbc.readMem(0xee05));
        // CB 94 0291
        gbc.setState(0xdbfb, 0x4ee, 0x7d70, 0x1815, 0xd949, 0x55a3, 0x0, 0x0);
        gbc.writeMem(0xdbfb, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4ee, gbc.sp());
        EXPECT(0xdbfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbfb));
        EXPECT(0x94, gbc.readMem(0xdbfc));
        // CB 94 0292
        gbc.setState(0x9576, 0x9559, 0xa020, 0xfd7a, 0x6b90, 0xd076, 0x1, 0x1);
        gbc.writeMem(0x9576, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9559, gbc.sp());
        EXPECT(0x9578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9576));
        EXPECT(0x94, gbc.readMem(0x9577));
        // CB 94 0293
        gbc.setState(0x6bf9, 0xc868, 0x8b50, 0x2a88, 0xc2e8, 0x5c00, 0x1, 0x0);
        gbc.writeMem(0x6bf9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc868, gbc.sp());
        EXPECT(0x6bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0294
        gbc.setState(0xb26e, 0x1002, 0xeeb0, 0x6f21, 0x28f8, 0x7bb4, 0x1, 0x0);
        gbc.writeMem(0xb26e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1002, gbc.sp());
        EXPECT(0xb270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb26e));
        EXPECT(0x94, gbc.readMem(0xb26f));
        // CB 94 0296
        gbc.setState(0x92bf, 0xdf81, 0x1870, 0x6d0b, 0xa548, 0xaf7d, 0x1, 0x1);
        gbc.writeMem(0x92bf, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xdf81, gbc.sp());
        EXPECT(0x92c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92bf));
        EXPECT(0x94, gbc.readMem(0x92c0));
        // CB 94 0297
        gbc.setState(0x139c, 0x4e0d, 0x6770, 0xcded, 0x28fc, 0x63a4, 0x0, 0x0);
        gbc.writeMem(0x139c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4e0d, gbc.sp());
        EXPECT(0x139e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0298
        gbc.setState(0xd4df, 0x277e, 0xc110, 0x83c2, 0xc52c, 0x8c61, 0x1, 0x1);
        gbc.writeMem(0xd4df, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x277e, gbc.sp());
        EXPECT(0xd4e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4df));
        EXPECT(0x94, gbc.readMem(0xd4e0));
        // CB 94 0299
        gbc.setState(0x9ead, 0x69cb, 0x9490, 0x4922, 0xaa86, 0x7e4d, 0x1, 0x1);
        gbc.writeMem(0x9ead, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x69cb, gbc.sp());
        EXPECT(0x9eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ead));
        EXPECT(0x94, gbc.readMem(0x9eae));
        // CB 94 029A
        gbc.setState(0xd939, 0x6227, 0x82c0, 0x27ac, 0x2059, 0xb3a6, 0x0, 0x0);
        gbc.writeMem(0xd939, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6227, gbc.sp());
        EXPECT(0xd93b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd939));
        EXPECT(0x94, gbc.readMem(0xd93a));
        // CB 94 029B
        gbc.setState(0x2999, 0xcafc, 0x75e0, 0x347a, 0x8c1f, 0x9ea7, 0x1, 0x1);
        gbc.writeMem(0x2999, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcafc, gbc.sp());
        EXPECT(0x299b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 029C
        gbc.setState(0x37a4, 0x5379, 0x9960, 0x6a6, 0xc404, 0xe10c, 0x1, 0x0);
        gbc.writeMem(0x37a4, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5379, gbc.sp());
        EXPECT(0x37a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 029D
        gbc.setState(0xa57e, 0xc740, 0x6e10, 0x24ad, 0x8f97, 0x7d4b, 0x1, 0x1);
        gbc.writeMem(0xa57e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc740, gbc.sp());
        EXPECT(0xa580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa57e));
        EXPECT(0x94, gbc.readMem(0xa57f));
        // CB 94 029E
        gbc.setState(0x53c2, 0xd8d0, 0x75a0, 0x199a, 0x9fc3, 0x53e5, 0x1, 0x0);
        gbc.writeMem(0x53c2, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd8d0, gbc.sp());
        EXPECT(0x53c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 029F
        gbc.setState(0xa22c, 0x3e57, 0x5c50, 0x49d1, 0xad7a, 0x570c, 0x1, 0x1);
        gbc.writeMem(0xa22c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3e57, gbc.sp());
        EXPECT(0xa22e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa22c));
        EXPECT(0x94, gbc.readMem(0xa22d));
        // CB 94 02A0
        gbc.setState(0x2fdf, 0xd031, 0x6dc0, 0xaf76, 0xa78d, 0x55ac, 0x0, 0x1);
        gbc.writeMem(0x2fdf, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd031, gbc.sp());
        EXPECT(0x2fe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02A1
        gbc.setState(0x9a24, 0x5a5b, 0xf680, 0x54d5, 0x527d, 0x9b84, 0x0, 0x1);
        gbc.writeMem(0x9a24, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5a5b, gbc.sp());
        EXPECT(0x9a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a24));
        EXPECT(0x94, gbc.readMem(0x9a25));
        // CB 94 02A2
        gbc.setState(0xc39d, 0xa423, 0x1d50, 0x5d26, 0x3427, 0x798a, 0x0, 0x0);
        gbc.writeMem(0xc39d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa423, gbc.sp());
        EXPECT(0xc39f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc39d));
        EXPECT(0x94, gbc.readMem(0xc39e));
        // CB 94 02A3
        gbc.setState(0x1ac5, 0x80f, 0x2170, 0xee2d, 0xb4c6, 0x7170, 0x1, 0x0);
        gbc.writeMem(0x1ac5, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x80f, gbc.sp());
        EXPECT(0x1ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 02A4
        gbc.setState(0xc76b, 0x7bd6, 0x53d0, 0xcfca, 0x43bd, 0x7191, 0x1, 0x1);
        gbc.writeMem(0xc76b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7bd6, gbc.sp());
        EXPECT(0xc76d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc76b));
        EXPECT(0x94, gbc.readMem(0xc76c));
        // CB 94 02A5
        gbc.setState(0xd19a, 0xe769, 0xebb0, 0x3ed8, 0xd2f4, 0xf11, 0x0, 0x0);
        gbc.writeMem(0xd19a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe769, gbc.sp());
        EXPECT(0xd19c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd19a));
        EXPECT(0x94, gbc.readMem(0xd19b));
        // CB 94 02A6
        gbc.setState(0x162e, 0xc4af, 0xc9a0, 0xc6c7, 0xea80, 0xa737, 0x0, 0x0);
        gbc.writeMem(0x162e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc4af, gbc.sp());
        EXPECT(0x1630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02A7
        gbc.setState(0x6864, 0x4af3, 0xf480, 0x5ab3, 0x95d2, 0xc5e3, 0x0, 0x0);
        gbc.writeMem(0x6864, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4af3, gbc.sp());
        EXPECT(0x6866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02A8
        gbc.setState(0x4160, 0x74d6, 0xf20, 0x4d3, 0xccad, 0xfee9, 0x1, 0x1);
        gbc.writeMem(0x4160, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x74d6, gbc.sp());
        EXPECT(0x4162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02A9
        gbc.setState(0x544f, 0x2431, 0x72c0, 0x506, 0xa4d, 0xa7a2, 0x0, 0x1);
        gbc.writeMem(0x544f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2431, gbc.sp());
        EXPECT(0x5451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02AA
        gbc.setState(0x3dae, 0x1d37, 0x22c0, 0xf83, 0xba04, 0x8bad, 0x0, 0x0);
        gbc.writeMem(0x3dae, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1d37, gbc.sp());
        EXPECT(0x3db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02AC
        gbc.setState(0x8aad, 0x7e3e, 0xa9a0, 0x726b, 0xaabd, 0xcae3, 0x0, 0x0);
        gbc.writeMem(0x8aad, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7e3e, gbc.sp());
        EXPECT(0x8aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aad));
        EXPECT(0x94, gbc.readMem(0x8aae));
        // CB 94 02AD
        gbc.setState(0xe7e4, 0xda14, 0xf4f0, 0xcefe, 0x635b, 0x9674, 0x0, 0x1);
        gbc.writeMem(0xe7e4, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xda14, gbc.sp());
        EXPECT(0xe7e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7e4));
        EXPECT(0x94, gbc.readMem(0xe7e5));
        // CB 94 02AE
        gbc.setState(0xa799, 0xbfef, 0x82b0, 0x4c30, 0x7d60, 0x70d8, 0x1, 0x1);
        gbc.writeMem(0xa799, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbfef, gbc.sp());
        EXPECT(0xa79b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa799));
        EXPECT(0x94, gbc.readMem(0xa79a));
        // CB 94 02AF
        gbc.setState(0xab3e, 0xe537, 0x2d0, 0x31f7, 0x87b3, 0x6a1e, 0x1, 0x1);
        gbc.writeMem(0xab3e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe537, gbc.sp());
        EXPECT(0xab40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab3e));
        EXPECT(0x94, gbc.readMem(0xab3f));
        // CB 94 02B0
        gbc.setState(0xca54, 0xd790, 0x6ae0, 0x9dee, 0xebb7, 0x70bd, 0x0, 0x1);
        gbc.writeMem(0xca54, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd790, gbc.sp());
        EXPECT(0xca56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca54));
        EXPECT(0x94, gbc.readMem(0xca55));
        // CB 94 02B1
        gbc.setState(0x8457, 0x1d9a, 0xd200, 0x6a61, 0x6fc5, 0x2b4c, 0x1, 0x1);
        gbc.writeMem(0x8457, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1d9a, gbc.sp());
        EXPECT(0x8459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8457));
        EXPECT(0x94, gbc.readMem(0x8458));
        // CB 94 02B2
        gbc.setState(0x6e64, 0x39f2, 0x9b60, 0x41f3, 0x688b, 0x5b29, 0x1, 0x1);
        gbc.writeMem(0x6e64, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x39f2, gbc.sp());
        EXPECT(0x6e66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02B3
        gbc.setState(0x4e7b, 0xd9c7, 0x9b40, 0xeb57, 0x92d5, 0xde06, 0x1, 0x1);
        gbc.writeMem(0x4e7b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd9c7, gbc.sp());
        EXPECT(0x4e7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02B4
        gbc.setState(0x76c5, 0x4d47, 0x21b0, 0x553d, 0xdc00, 0x9d76, 0x1, 0x0);
        gbc.writeMem(0x76c5, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4d47, gbc.sp());
        EXPECT(0x76c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 02B5
        gbc.setState(0xa2f9, 0x6f4e, 0x18c0, 0x9b4a, 0xaba9, 0xcb31, 0x1, 0x1);
        gbc.writeMem(0xa2f9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6f4e, gbc.sp());
        EXPECT(0xa2fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2f9));
        EXPECT(0x94, gbc.readMem(0xa2fa));
        // CB 94 02B6
        gbc.setState(0x9a42, 0xe447, 0x450, 0x531a, 0x5729, 0x537, 0x0, 0x0);
        gbc.writeMem(0x9a42, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe447, gbc.sp());
        EXPECT(0x9a44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a42));
        EXPECT(0x94, gbc.readMem(0x9a43));
        // CB 94 02B7
        gbc.setState(0x430c, 0xb52, 0x6ea0, 0xf988, 0x560d, 0x1d80, 0x0, 0x0);
        gbc.writeMem(0x430c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb52, gbc.sp());
        EXPECT(0x430e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02B9
        gbc.setState(0x5383, 0x7a5e, 0xe360, 0x6773, 0xc599, 0x28d3, 0x0, 0x1);
        gbc.writeMem(0x5383, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7a5e, gbc.sp());
        EXPECT(0x5385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02BA
        gbc.setState(0xbab1, 0x5b58, 0xbf0, 0x3315, 0xf6c, 0x8180, 0x0, 0x1);
        gbc.writeMem(0xbab1, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5b58, gbc.sp());
        EXPECT(0xbab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab1));
        EXPECT(0x94, gbc.readMem(0xbab2));
        // CB 94 02BC
        gbc.setState(0x3dcf, 0xa3e0, 0x4f80, 0xe2ce, 0x21e7, 0x7ef3, 0x0, 0x0);
        gbc.writeMem(0x3dcf, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa3e0, gbc.sp());
        EXPECT(0x3dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02BD
        gbc.setState(0x4527, 0xe6b9, 0xf4f0, 0x7a2b, 0xe5e8, 0xd12a, 0x1, 0x1);
        gbc.writeMem(0x4527, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe6b9, gbc.sp());
        EXPECT(0x4529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 02BE
        gbc.setState(0x769a, 0x6f20, 0xb00, 0xa577, 0x4297, 0x358e, 0x0, 0x0);
        gbc.writeMem(0x769a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6f20, gbc.sp());
        EXPECT(0x769c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02BF
        gbc.setState(0xd9f1, 0x6767, 0xc740, 0x887b, 0xad41, 0xccd0, 0x0, 0x0);
        gbc.writeMem(0xd9f1, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6767, gbc.sp());
        EXPECT(0xd9f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9f1));
        EXPECT(0x94, gbc.readMem(0xd9f2));
        // CB 94 02C0
        gbc.setState(0x3181, 0xd472, 0xa2b0, 0x45cd, 0x8f2c, 0xfdac, 0x1, 0x1);
        gbc.writeMem(0x3181, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd472, gbc.sp());
        EXPECT(0x3183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 02C1
        gbc.setState(0x6f24, 0x2f2e, 0xad00, 0xfaee, 0x692c, 0x4d65, 0x0, 0x0);
        gbc.writeMem(0x6f24, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2f2e, gbc.sp());
        EXPECT(0x6f26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02C2
        gbc.setState(0x115a, 0xb99e, 0xbca0, 0xfca, 0xa1a, 0x3d46, 0x0, 0x1);
        gbc.writeMem(0x115a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb99e, gbc.sp());
        EXPECT(0x115c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02C3
        gbc.setState(0x426, 0x65f0, 0xb4f0, 0x18b6, 0xf5e8, 0xad2d, 0x1, 0x0);
        gbc.writeMem(0x426, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x65f0, gbc.sp());
        EXPECT(0x428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 02C4
        gbc.setState(0x9c89, 0x5f1d, 0x170, 0x123a, 0x7c01, 0x9e82, 0x0, 0x0);
        gbc.writeMem(0x9c89, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5f1d, gbc.sp());
        EXPECT(0x9c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c89));
        EXPECT(0x94, gbc.readMem(0x9c8a));
        // CB 94 02C5
        gbc.setState(0xa43f, 0xf591, 0x9500, 0xeddc, 0x2aff, 0x6569, 0x1, 0x1);
        gbc.writeMem(0xa43f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf591, gbc.sp());
        EXPECT(0xa441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa43f));
        EXPECT(0x94, gbc.readMem(0xa440));
        // CB 94 02C6
        gbc.setState(0xbe1d, 0x38c6, 0xa1d0, 0x3a10, 0x4247, 0xa7e0, 0x1, 0x0);
        gbc.writeMem(0xbe1d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x38c6, gbc.sp());
        EXPECT(0xbe1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe1d));
        EXPECT(0x94, gbc.readMem(0xbe1e));
        // CB 94 02C7
        gbc.setState(0x3631, 0xa349, 0xdcd0, 0xd012, 0xee09, 0xe9d7, 0x1, 0x1);
        gbc.writeMem(0x3631, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa349, gbc.sp());
        EXPECT(0x3633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 02C9
        gbc.setState(0xd170, 0xfed0, 0xad40, 0xe23, 0xb305, 0xc11c, 0x1, 0x1);
        gbc.writeMem(0xd170, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfed0, gbc.sp());
        EXPECT(0xd172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd170));
        EXPECT(0x94, gbc.readMem(0xd171));
        // CB 94 02CA
        gbc.setState(0xc572, 0xd3ea, 0xb470, 0x8c33, 0x9774, 0x521b, 0x0, 0x1);
        gbc.writeMem(0xc572, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd3ea, gbc.sp());
        EXPECT(0xc574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc572));
        EXPECT(0x94, gbc.readMem(0xc573));
        // CB 94 02CB
        gbc.setState(0x83e1, 0x74b5, 0xbf60, 0x504f, 0x7cbe, 0x9eb6, 0x1, 0x1);
        gbc.writeMem(0x83e1, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x74b5, gbc.sp());
        EXPECT(0x83e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e1));
        EXPECT(0x94, gbc.readMem(0x83e2));
        // CB 94 02CC
        gbc.setState(0x5df3, 0x6bf9, 0xfb50, 0x2fb5, 0xae31, 0x6c15, 0x1, 0x1);
        gbc.writeMem(0x5df3, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6bf9, gbc.sp());
        EXPECT(0x5df5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 02CD
        gbc.setState(0xcda9, 0x9cc9, 0x1570, 0x68d, 0x2cb, 0xcd2a, 0x0, 0x1);
        gbc.writeMem(0xcda9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9cc9, gbc.sp());
        EXPECT(0xcdab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcda9));
        EXPECT(0x94, gbc.readMem(0xcdaa));
        // CB 94 02CF
        gbc.setState(0xc6ab, 0xde78, 0xe710, 0x9806, 0xef02, 0xc066, 0x1, 0x1);
        gbc.writeMem(0xc6ab, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xde78, gbc.sp());
        EXPECT(0xc6ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ab));
        EXPECT(0x94, gbc.readMem(0xc6ac));
        // CB 94 02D0
        gbc.setState(0x9f40, 0x7550, 0x6720, 0xefb0, 0x9046, 0xec65, 0x0, 0x0);
        gbc.writeMem(0x9f40, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7550, gbc.sp());
        EXPECT(0x9f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f40));
        EXPECT(0x94, gbc.readMem(0x9f41));
        // CB 94 02D1
        gbc.setState(0x7b30, 0xa5bc, 0x4a0, 0xa19d, 0x7681, 0x479c, 0x1, 0x1);
        gbc.writeMem(0x7b30, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa5bc, gbc.sp());
        EXPECT(0x7b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02D2
        gbc.setState(0x2a4d, 0xb293, 0xd20, 0x3632, 0x20b, 0x2ca0, 0x0, 0x1);
        gbc.writeMem(0x2a4d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb293, gbc.sp());
        EXPECT(0x2a4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02D3
        gbc.setState(0x8810, 0xc8eb, 0x2920, 0x2685, 0xb39d, 0x11c5, 0x0, 0x1);
        gbc.writeMem(0x8810, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc8eb, gbc.sp());
        EXPECT(0x8812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8810));
        EXPECT(0x94, gbc.readMem(0x8811));
        // CB 94 02D4
        gbc.setState(0xc768, 0x23be, 0x6090, 0x8539, 0xfd6d, 0x27c3, 0x1, 0x1);
        gbc.writeMem(0xc768, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x23be, gbc.sp());
        EXPECT(0xc76a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc768));
        EXPECT(0x94, gbc.readMem(0xc769));
        // CB 94 02D5
        gbc.setState(0x815f, 0xda3f, 0xa410, 0xae4c, 0xb39e, 0xa481, 0x0, 0x1);
        gbc.writeMem(0x815f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xda3f, gbc.sp());
        EXPECT(0x8161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x815f));
        EXPECT(0x94, gbc.readMem(0x8160));
        // CB 94 02D6
        gbc.setState(0xee66, 0x2bdb, 0xe10, 0x945a, 0xbca0, 0x9930, 0x1, 0x1);
        gbc.writeMem(0xee66, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2bdb, gbc.sp());
        EXPECT(0xee68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee66));
        EXPECT(0x94, gbc.readMem(0xee67));
        // CB 94 02D7
        gbc.setState(0x1b3f, 0xaffe, 0xa90, 0x24d2, 0x8d9e, 0xf6b9, 0x1, 0x0);
        gbc.writeMem(0x1b3f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xaffe, gbc.sp());
        EXPECT(0x1b41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 02D8
        gbc.setState(0x7995, 0x4466, 0x1b50, 0x9c88, 0x8808, 0xd16f, 0x0, 0x1);
        gbc.writeMem(0x7995, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4466, gbc.sp());
        EXPECT(0x7997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 02D9
        gbc.setState(0xc2cd, 0xd5a8, 0x78e0, 0x38cf, 0x1867, 0x16d6, 0x1, 0x1);
        gbc.writeMem(0xc2cd, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd5a8, gbc.sp());
        EXPECT(0xc2cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2cd));
        EXPECT(0x94, gbc.readMem(0xc2ce));
        // CB 94 02DA
        gbc.setState(0xbb43, 0x4b5d, 0xb1a0, 0xa1d8, 0xa39a, 0x3602, 0x1, 0x1);
        gbc.writeMem(0xbb43, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4b5d, gbc.sp());
        EXPECT(0xbb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb43));
        EXPECT(0x94, gbc.readMem(0xbb44));
        // CB 94 02DB
        gbc.setState(0x165d, 0x8104, 0x8160, 0x7eec, 0xf0fb, 0x620e, 0x1, 0x1);
        gbc.writeMem(0x165d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8104, gbc.sp());
        EXPECT(0x165f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02DC
        gbc.setState(0x78c9, 0x2169, 0x8ec0, 0xae09, 0xc3d7, 0x2256, 0x1, 0x0);
        gbc.writeMem(0x78c9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2169, gbc.sp());
        EXPECT(0x78cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02DD
        gbc.setState(0x5928, 0x4ef0, 0x93d0, 0xd08a, 0x7c37, 0x5101, 0x0, 0x1);
        gbc.writeMem(0x5928, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4ef0, gbc.sp());
        EXPECT(0x592a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 02DE
        gbc.setState(0xec2f, 0x6af4, 0x40c0, 0xe29b, 0xb887, 0xe3e9, 0x1, 0x0);
        gbc.writeMem(0xec2f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6af4, gbc.sp());
        EXPECT(0xec31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec2f));
        EXPECT(0x94, gbc.readMem(0xec30));
        // CB 94 02DF
        gbc.setState(0x1308, 0x6a7d, 0xd900, 0x61f0, 0xa90e, 0xcbf8, 0x1, 0x0);
        gbc.writeMem(0x1308, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6a7d, gbc.sp());
        EXPECT(0x130a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02E0
        gbc.setState(0x39f0, 0x48e8, 0x450, 0x7387, 0x5e75, 0xaed7, 0x0, 0x1);
        gbc.writeMem(0x39f0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x48e8, gbc.sp());
        EXPECT(0x39f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 02E1
        gbc.setState(0x99ff, 0xd31, 0xbe30, 0x2725, 0xcbf9, 0xafb4, 0x0, 0x0);
        gbc.writeMem(0x99ff, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd31, gbc.sp());
        EXPECT(0x9a01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ff));
        EXPECT(0x94, gbc.readMem(0x9a00));
        // CB 94 02E2
        gbc.setState(0x2b51, 0x2c34, 0x2c0, 0x803c, 0xa87, 0x9115, 0x0, 0x0);
        gbc.writeMem(0x2b51, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2c34, gbc.sp());
        EXPECT(0x2b53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02E3
        gbc.setState(0x4a32, 0x728d, 0x9330, 0xa18d, 0xf8ac, 0xe26, 0x0, 0x1);
        gbc.writeMem(0x4a32, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x728d, gbc.sp());
        EXPECT(0x4a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 02E4
        gbc.setState(0xc8cc, 0xb59a, 0xffd0, 0xe6e4, 0xd462, 0x2f76, 0x0, 0x0);
        gbc.writeMem(0xc8cc, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb59a, gbc.sp());
        EXPECT(0xc8ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8cc));
        EXPECT(0x94, gbc.readMem(0xc8cd));
        // CB 94 02E5
        gbc.setState(0xe7b6, 0xde05, 0x46d0, 0xee9a, 0x3d4a, 0x64f7, 0x1, 0x0);
        gbc.writeMem(0xe7b6, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xde05, gbc.sp());
        EXPECT(0xe7b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b6));
        EXPECT(0x94, gbc.readMem(0xe7b7));
        // CB 94 02E6
        gbc.setState(0x6879, 0x2c73, 0x930, 0x792f, 0x259d, 0x79c, 0x0, 0x0);
        gbc.writeMem(0x6879, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2c73, gbc.sp());
        EXPECT(0x687b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 02E7
        gbc.setState(0x888c, 0x4bb5, 0x6ed0, 0xadaa, 0xbc59, 0x4aa5, 0x1, 0x0);
        gbc.writeMem(0x888c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4bb5, gbc.sp());
        EXPECT(0x888e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x888c));
        EXPECT(0x94, gbc.readMem(0x888d));
        // CB 94 02E8
        gbc.setState(0xb357, 0x84a0, 0x6da0, 0x10d7, 0x61f6, 0xda90, 0x0, 0x1);
        gbc.writeMem(0xb357, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x84a0, gbc.sp());
        EXPECT(0xb359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb357));
        EXPECT(0x94, gbc.readMem(0xb358));
        // CB 94 02E9
        gbc.setState(0xc8a8, 0x145a, 0x19e0, 0x1990, 0x81a4, 0x1d6f, 0x1, 0x0);
        gbc.writeMem(0xc8a8, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x145a, gbc.sp());
        EXPECT(0xc8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a8));
        EXPECT(0x94, gbc.readMem(0xc8a9));
        // CB 94 02EA
        gbc.setState(0xba0, 0xa880, 0xe590, 0x87f3, 0xfd03, 0x2d90, 0x0, 0x0);
        gbc.writeMem(0xba0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa880, gbc.sp());
        EXPECT(0xba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 02EB
        gbc.setState(0x10c1, 0x773, 0x34a0, 0x184a, 0x5c43, 0xf1e7, 0x0, 0x0);
        gbc.writeMem(0x10c1, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x773, gbc.sp());
        EXPECT(0x10c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02EC
        gbc.setState(0x5808, 0x8041, 0xa9d0, 0x91d0, 0x298f, 0x1685, 0x1, 0x0);
        gbc.writeMem(0x5808, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8041, gbc.sp());
        EXPECT(0x580a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 02ED
        gbc.setState(0xe86c, 0xca05, 0x1240, 0xba15, 0xbf10, 0x5c06, 0x1, 0x1);
        gbc.writeMem(0xe86c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xca05, gbc.sp());
        EXPECT(0xe86e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe86c));
        EXPECT(0x94, gbc.readMem(0xe86d));
        // CB 94 02EE
        gbc.setState(0xb06d, 0xbf91, 0x98b0, 0xe975, 0xbcac, 0xc1df, 0x0, 0x0);
        gbc.writeMem(0xb06d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xbf91, gbc.sp());
        EXPECT(0xb06f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb06d));
        EXPECT(0x94, gbc.readMem(0xb06e));
        // CB 94 02F0
        gbc.setState(0x51d4, 0xea42, 0x6020, 0x39dc, 0x7423, 0x7279, 0x0, 0x1);
        gbc.writeMem(0x51d4, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xea42, gbc.sp());
        EXPECT(0x51d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02F1
        gbc.setState(0xef98, 0x2f27, 0x68a0, 0xff14, 0x8290, 0x1879, 0x1, 0x0);
        gbc.writeMem(0xef98, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2f27, gbc.sp());
        EXPECT(0xef9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef98));
        EXPECT(0x94, gbc.readMem(0xef99));
        // CB 94 02F2
        gbc.setState(0x7ca9, 0x4409, 0xa4d0, 0x6985, 0x4cd6, 0x1fc2, 0x1, 0x1);
        gbc.writeMem(0x7ca9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4409, gbc.sp());
        EXPECT(0x7cab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 02F3
        gbc.setState(0x4ef8, 0x4199, 0x1380, 0x59b3, 0xc763, 0xc759, 0x1, 0x0);
        gbc.writeMem(0x4ef8, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4199, gbc.sp());
        EXPECT(0x4efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02F4
        gbc.setState(0xb35b, 0x49c8, 0x3ad0, 0xacfe, 0x477c, 0xbb6f, 0x1, 0x1);
        gbc.writeMem(0xb35b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x49c8, gbc.sp());
        EXPECT(0xb35d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb35b));
        EXPECT(0x94, gbc.readMem(0xb35c));
        // CB 94 02F5
        gbc.setState(0xb000, 0x417a, 0xe3c0, 0x1c6c, 0x242a, 0xcb73, 0x1, 0x0);
        gbc.writeMem(0xb000, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x417a, gbc.sp());
        EXPECT(0xb002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb000));
        EXPECT(0x94, gbc.readMem(0xb001));
        // CB 94 02F6
        gbc.setState(0x404c, 0xcb0b, 0x83d0, 0x5e95, 0xbc6, 0x6999, 0x0, 0x0);
        gbc.writeMem(0x404c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcb0b, gbc.sp());
        EXPECT(0x404e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 02F7
        gbc.setState(0x6f85, 0x5d16, 0x2ca0, 0x3802, 0x1b8a, 0xad6e, 0x1, 0x1);
        gbc.writeMem(0x6f85, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5d16, gbc.sp());
        EXPECT(0x6f87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02F8
        gbc.setState(0x3fb7, 0xfdac, 0x8ec0, 0x5847, 0xa779, 0xb935, 0x0, 0x1);
        gbc.writeMem(0x3fb7, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfdac, gbc.sp());
        EXPECT(0x3fb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02F9
        gbc.setState(0xe112, 0x74ac, 0xc740, 0xae6b, 0x95c5, 0x5e5b, 0x0, 0x1);
        gbc.writeMem(0xe112, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x74ac, gbc.sp());
        EXPECT(0xe114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe112));
        EXPECT(0x94, gbc.readMem(0xe113));
        // CB 94 02FA
        gbc.setState(0x582, 0x4f0, 0x80, 0x1802, 0x49a2, 0xddd4, 0x0, 0x0);
        gbc.writeMem(0x582, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4f0, gbc.sp());
        EXPECT(0x584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 02FB
        gbc.setState(0xe131, 0xe3c3, 0x42a0, 0x2130, 0x36e0, 0xf0a3, 0x0, 0x1);
        gbc.writeMem(0xe131, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe3c3, gbc.sp());
        EXPECT(0xe133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe131));
        EXPECT(0x94, gbc.readMem(0xe132));
        // CB 94 02FC
        gbc.setState(0xba2a, 0xd93e, 0xfd40, 0x8109, 0x3936, 0xebf4, 0x1, 0x0);
        gbc.writeMem(0xba2a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd93e, gbc.sp());
        EXPECT(0xba2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba2a));
        EXPECT(0x94, gbc.readMem(0xba2b));
        // CB 94 02FD
        gbc.setState(0xaf78, 0x8ab0, 0xc150, 0xe97c, 0xeec6, 0x78d0, 0x0, 0x0);
        gbc.writeMem(0xaf78, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8ab0, gbc.sp());
        EXPECT(0xaf7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf78));
        EXPECT(0x94, gbc.readMem(0xaf79));
        // CB 94 02FE
        gbc.setState(0xc199, 0x1616, 0x50b0, 0xa491, 0x380, 0x3f80, 0x0, 0x1);
        gbc.writeMem(0xc199, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1616, gbc.sp());
        EXPECT(0xc19b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc199));
        EXPECT(0x94, gbc.readMem(0xc19a));
        // CB 94 02FF
        gbc.setState(0xc0b0, 0x24a9, 0x5a0, 0x8c22, 0xfda9, 0x65d, 0x1, 0x1);
        gbc.writeMem(0xc0b0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x24a9, gbc.sp());
        EXPECT(0xc0b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0b0));
        EXPECT(0x94, gbc.readMem(0xc0b1));
        // CB 94 0300
        gbc.setState(0xbf33, 0x4e2e, 0x56e0, 0x112, 0x352e, 0xeb36, 0x1, 0x1);
        gbc.writeMem(0xbf33, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4e2e, gbc.sp());
        EXPECT(0xbf35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf33));
        EXPECT(0x94, gbc.readMem(0xbf34));
        // CB 94 0301
        gbc.setState(0x8726, 0xa043, 0x5050, 0x1470, 0x766f, 0xbf8a, 0x1, 0x1);
        gbc.writeMem(0x8726, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa043, gbc.sp());
        EXPECT(0x8728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8726));
        EXPECT(0x94, gbc.readMem(0x8727));
        // CB 94 0302
        gbc.setState(0xdc09, 0x92d5, 0xe870, 0x150, 0x2336, 0x2a93, 0x0, 0x0);
        gbc.writeMem(0xdc09, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x92d5, gbc.sp());
        EXPECT(0xdc0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc09));
        EXPECT(0x94, gbc.readMem(0xdc0a));
        // CB 94 0304
        gbc.setState(0x453f, 0xe243, 0x2ef0, 0x84e6, 0xd43b, 0x992a, 0x0, 0x1);
        gbc.writeMem(0x453f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe243, gbc.sp());
        EXPECT(0x4541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0305
        gbc.setState(0xcfb9, 0xea4e, 0x81d0, 0xf38d, 0x366f, 0x9f3d, 0x0, 0x1);
        gbc.writeMem(0xcfb9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xea4e, gbc.sp());
        EXPECT(0xcfbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfb9));
        EXPECT(0x94, gbc.readMem(0xcfba));
        // CB 94 0306
        gbc.setState(0xe642, 0x135, 0x8bf0, 0xbd15, 0x9227, 0xb30b, 0x1, 0x0);
        gbc.writeMem(0xe642, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x135, gbc.sp());
        EXPECT(0xe644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe642));
        EXPECT(0x94, gbc.readMem(0xe643));
        // CB 94 0307
        gbc.setState(0x33d7, 0x77e5, 0x7d70, 0xcd44, 0x5a78, 0x28be, 0x0, 0x1);
        gbc.writeMem(0x33d7, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x77e5, gbc.sp());
        EXPECT(0x33d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0308
        gbc.setState(0xc0d1, 0xec9e, 0x8b60, 0xaa42, 0xdaa, 0x1428, 0x1, 0x0);
        gbc.writeMem(0xc0d1, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xec9e, gbc.sp());
        EXPECT(0xc0d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0d1));
        EXPECT(0x94, gbc.readMem(0xc0d2));
        // CB 94 0309
        gbc.setState(0x6c5d, 0xcbd2, 0x1c20, 0x6391, 0xfde7, 0xdd53, 0x1, 0x1);
        gbc.writeMem(0x6c5d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcbd2, gbc.sp());
        EXPECT(0x6c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 030A
        gbc.setState(0x4e3d, 0x681, 0x6920, 0xc0d4, 0xd904, 0x5480, 0x0, 0x0);
        gbc.writeMem(0x4e3d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x681, gbc.sp());
        EXPECT(0x4e3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 030B
        gbc.setState(0xb88e, 0x7245, 0xb590, 0xc922, 0x5c49, 0x7aa8, 0x0, 0x0);
        gbc.writeMem(0xb88e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7245, gbc.sp());
        EXPECT(0xb890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb88e));
        EXPECT(0x94, gbc.readMem(0xb88f));
        // CB 94 030C
        gbc.setState(0x59c1, 0x387f, 0xcd40, 0x8468, 0x62c1, 0xa081, 0x0, 0x1);
        gbc.writeMem(0x59c1, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x387f, gbc.sp());
        EXPECT(0x59c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 030D
        gbc.setState(0xaf6b, 0xfba9, 0x7420, 0x8cc8, 0xf8fc, 0xa7e2, 0x0, 0x1);
        gbc.writeMem(0xaf6b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xfba9, gbc.sp());
        EXPECT(0xaf6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6b));
        EXPECT(0x94, gbc.readMem(0xaf6c));
        // CB 94 030E
        gbc.setState(0x9a8d, 0x6962, 0x76c0, 0x4a40, 0xe0ad, 0x906c, 0x0, 0x0);
        gbc.writeMem(0x9a8d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6962, gbc.sp());
        EXPECT(0x9a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a8d));
        EXPECT(0x94, gbc.readMem(0x9a8e));
        // CB 94 030F
        gbc.setState(0x5df7, 0x6f7b, 0x8e00, 0xa747, 0x2d3f, 0x3433, 0x0, 0x0);
        gbc.writeMem(0x5df7, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6f7b, gbc.sp());
        EXPECT(0x5df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0310
        gbc.setState(0x687b, 0x959d, 0xca10, 0x15de, 0xcb96, 0x4def, 0x0, 0x0);
        gbc.writeMem(0x687b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x959d, gbc.sp());
        EXPECT(0x687d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0311
        gbc.setState(0xb5b0, 0x6c10, 0xdac0, 0xd56c, 0x82ff, 0xa2f4, 0x0, 0x0);
        gbc.writeMem(0xb5b0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6c10, gbc.sp());
        EXPECT(0xb5b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b0));
        EXPECT(0x94, gbc.readMem(0xb5b1));
        // CB 94 0312
        gbc.setState(0xe936, 0xf5ea, 0xf870, 0xa535, 0xaf97, 0x1078, 0x1, 0x0);
        gbc.writeMem(0xe936, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf5ea, gbc.sp());
        EXPECT(0xe938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe936));
        EXPECT(0x94, gbc.readMem(0xe937));
        // CB 94 0314
        gbc.setState(0x287b, 0xa59, 0x66b0, 0x46a0, 0x1e73, 0xde4b, 0x1, 0x1);
        gbc.writeMem(0x287b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa59, gbc.sp());
        EXPECT(0x287d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0315
        gbc.setState(0xa60c, 0x336e, 0xee70, 0xcd67, 0x6231, 0x55a5, 0x0, 0x0);
        gbc.writeMem(0xa60c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x336e, gbc.sp());
        EXPECT(0xa60e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa60c));
        EXPECT(0x94, gbc.readMem(0xa60d));
        // CB 94 0316
        gbc.setState(0x1da0, 0x2adc, 0x6eb0, 0xad4d, 0x212, 0x242c, 0x1, 0x1);
        gbc.writeMem(0x1da0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2adc, gbc.sp());
        EXPECT(0x1da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0317
        gbc.setState(0x84d5, 0xe025, 0x2600, 0x39de, 0x188e, 0x308e, 0x0, 0x1);
        gbc.writeMem(0x84d5, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe025, gbc.sp());
        EXPECT(0x84d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84d5));
        EXPECT(0x94, gbc.readMem(0x84d6));
        // CB 94 0318
        gbc.setState(0x8dcc, 0x999, 0x5700, 0xda0b, 0x7a1d, 0x7bff, 0x0, 0x1);
        gbc.writeMem(0x8dcc, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x999, gbc.sp());
        EXPECT(0x8dce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dcc));
        EXPECT(0x94, gbc.readMem(0x8dcd));
        // CB 94 0319
        gbc.setState(0xbb2b, 0x54a8, 0x1460, 0x67b3, 0x39ef, 0x9aa8, 0x1, 0x0);
        gbc.writeMem(0xbb2b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x54a8, gbc.sp());
        EXPECT(0xbb2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb2b));
        EXPECT(0x94, gbc.readMem(0xbb2c));
        // CB 94 031A
        gbc.setState(0x4a0b, 0xe36, 0x5f60, 0x6983, 0xe41f, 0x82f6, 0x0, 0x0);
        gbc.writeMem(0x4a0b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe36, gbc.sp());
        EXPECT(0x4a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 031B
        gbc.setState(0x9e1b, 0x7775, 0x7140, 0x5a06, 0x7ea, 0xd7b2, 0x1, 0x1);
        gbc.writeMem(0x9e1b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7775, gbc.sp());
        EXPECT(0x9e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e1b));
        EXPECT(0x94, gbc.readMem(0x9e1c));
        // CB 94 031C
        gbc.setState(0x300e, 0x1876, 0xaf90, 0x3d99, 0xccbc, 0x52d4, 0x0, 0x1);
        gbc.writeMem(0x300e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1876, gbc.sp());
        EXPECT(0x3010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 031E
        gbc.setState(0xa2fe, 0xc297, 0xfca0, 0xa153, 0x3d1b, 0x80e5, 0x1, 0x1);
        gbc.writeMem(0xa2fe, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc297, gbc.sp());
        EXPECT(0xa300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2fe));
        EXPECT(0x94, gbc.readMem(0xa2ff));
        // CB 94 031F
        gbc.setState(0xc8f9, 0x8edd, 0x7e0, 0xb8e2, 0x63e6, 0x563c, 0x0, 0x0);
        gbc.writeMem(0xc8f9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8edd, gbc.sp());
        EXPECT(0xc8fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f9));
        EXPECT(0x94, gbc.readMem(0xc8fa));
        // CB 94 0320
        gbc.setState(0x377f, 0x5bd1, 0x8d10, 0x6a9c, 0xa17a, 0xad45, 0x0, 0x1);
        gbc.writeMem(0x377f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5bd1, gbc.sp());
        EXPECT(0x3781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0321
        gbc.setState(0x129c, 0x667d, 0xfd0, 0x907c, 0xea6c, 0x162b, 0x1, 0x1);
        gbc.writeMem(0x129c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x667d, gbc.sp());
        EXPECT(0x129e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0322
        gbc.setState(0xb592, 0x764a, 0x24e0, 0x6286, 0xd664, 0x118b, 0x0, 0x1);
        gbc.writeMem(0xb592, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x764a, gbc.sp());
        EXPECT(0xb594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb592));
        EXPECT(0x94, gbc.readMem(0xb593));
        // CB 94 0323
        gbc.setState(0xe8f7, 0x2243, 0xa490, 0xd57b, 0x49fa, 0x48a2, 0x1, 0x1);
        gbc.writeMem(0xe8f7, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2243, gbc.sp());
        EXPECT(0xe8f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8f7));
        EXPECT(0x94, gbc.readMem(0xe8f8));
        // CB 94 0324
        gbc.setState(0x1cd7, 0x96fa, 0x55c0, 0x4235, 0x4ce, 0xcdd2, 0x0, 0x1);
        gbc.writeMem(0x1cd7, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x96fa, gbc.sp());
        EXPECT(0x1cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0325
        gbc.setState(0x40ce, 0x6004, 0xdf10, 0x4818, 0x42bd, 0xdb9a, 0x0, 0x0);
        gbc.writeMem(0x40ce, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6004, gbc.sp());
        EXPECT(0x40d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0326
        gbc.setState(0x7ab5, 0x462, 0xe670, 0xb80, 0xc9b0, 0x829a, 0x0, 0x0);
        gbc.writeMem(0x7ab5, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x462, gbc.sp());
        EXPECT(0x7ab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0327
        gbc.setState(0x4cc0, 0x6a84, 0x8c90, 0xbd8a, 0x639e, 0xeed8, 0x0, 0x1);
        gbc.writeMem(0x4cc0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6a84, gbc.sp());
        EXPECT(0x4cc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0328
        gbc.setState(0x9152, 0x9904, 0x8e70, 0xa527, 0x1aab, 0x65f7, 0x0, 0x1);
        gbc.writeMem(0x9152, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9904, gbc.sp());
        EXPECT(0x9154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9152));
        EXPECT(0x94, gbc.readMem(0x9153));
        // CB 94 0329
        gbc.setState(0x17e6, 0xceb2, 0x69d0, 0xfa04, 0x83ef, 0x48db, 0x1, 0x1);
        gbc.writeMem(0x17e6, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xceb2, gbc.sp());
        EXPECT(0x17e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 032A
        gbc.setState(0xdda, 0x6668, 0x8260, 0xddd4, 0xd7a0, 0x766a, 0x1, 0x1);
        gbc.writeMem(0xdda, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6668, gbc.sp());
        EXPECT(0xddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 032B
        gbc.setState(0x841a, 0x8e36, 0xfb00, 0xaa43, 0x31ee, 0xf25a, 0x1, 0x1);
        gbc.writeMem(0x841a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8e36, gbc.sp());
        EXPECT(0x841c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x841a));
        EXPECT(0x94, gbc.readMem(0x841b));
        // CB 94 032C
        gbc.setState(0xad8, 0xb16b, 0x340, 0x60b9, 0x1ab, 0x7f5a, 0x0, 0x0);
        gbc.writeMem(0xad8, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb16b, gbc.sp());
        EXPECT(0xada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 032D
        gbc.setState(0x7fc8, 0xaf76, 0xb770, 0x29e1, 0x841, 0xccb1, 0x1, 0x1);
        gbc.writeMem(0x7fc8, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xaf76, gbc.sp());
        EXPECT(0x7fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 032E
        gbc.setState(0xc370, 0x376b, 0xdb10, 0xee30, 0xbece, 0xa3c0, 0x1, 0x1);
        gbc.writeMem(0xc370, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x376b, gbc.sp());
        EXPECT(0xc372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc370));
        EXPECT(0x94, gbc.readMem(0xc371));
        // CB 94 032F
        gbc.setState(0xd653, 0xf029, 0xf770, 0x1d70, 0x5e2a, 0xd313, 0x0, 0x0);
        gbc.writeMem(0xd653, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf029, gbc.sp());
        EXPECT(0xd655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd653));
        EXPECT(0x94, gbc.readMem(0xd654));
        // CB 94 0330
        gbc.setState(0x53e4, 0xe82, 0x5370, 0xe91a, 0xe5f1, 0x2ddd, 0x0, 0x1);
        gbc.writeMem(0x53e4, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe82, gbc.sp());
        EXPECT(0x53e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0331
        gbc.setState(0xa4bf, 0x85a5, 0x6810, 0x10f1, 0xa16f, 0x3775, 0x0, 0x1);
        gbc.writeMem(0xa4bf, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x85a5, gbc.sp());
        EXPECT(0xa4c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4bf));
        EXPECT(0x94, gbc.readMem(0xa4c0));
        // CB 94 0332
        gbc.setState(0x6584, 0x3b4d, 0x5930, 0xb0ed, 0x7dc5, 0xd49c, 0x1, 0x1);
        gbc.writeMem(0x6584, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3b4d, gbc.sp());
        EXPECT(0x6586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0333
        gbc.setState(0xcb04, 0xcd1e, 0x1b60, 0x7227, 0x8fd9, 0x848d, 0x0, 0x1);
        gbc.writeMem(0xcb04, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcd1e, gbc.sp());
        EXPECT(0xcb06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb04));
        EXPECT(0x94, gbc.readMem(0xcb05));
        // CB 94 0334
        gbc.setState(0x91b5, 0xb855, 0x9780, 0xc29b, 0x6b88, 0x8b82, 0x0, 0x0);
        gbc.writeMem(0x91b5, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb855, gbc.sp());
        EXPECT(0x91b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b5));
        EXPECT(0x94, gbc.readMem(0x91b6));
        // CB 94 0335
        gbc.setState(0xdb32, 0x2e66, 0x5390, 0x9266, 0xf5c7, 0x182, 0x0, 0x0);
        gbc.writeMem(0xdb32, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2e66, gbc.sp());
        EXPECT(0xdb34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb32));
        EXPECT(0x94, gbc.readMem(0xdb33));
        // CB 94 0336
        gbc.setState(0x58c5, 0x17b, 0x8480, 0x3874, 0xa058, 0xa7fb, 0x1, 0x1);
        gbc.writeMem(0x58c5, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x17b, gbc.sp());
        EXPECT(0x58c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0337
        gbc.setState(0x8e1d, 0x1e22, 0xf240, 0xe6ca, 0x6d4e, 0x513f, 0x1, 0x1);
        gbc.writeMem(0x8e1d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1e22, gbc.sp());
        EXPECT(0x8e1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e1d));
        EXPECT(0x94, gbc.readMem(0x8e1e));
        // CB 94 0338
        gbc.setState(0x322c, 0xc22e, 0x5f50, 0x24d0, 0xec5b, 0xdab7, 0x1, 0x0);
        gbc.writeMem(0x322c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc22e, gbc.sp());
        EXPECT(0x322e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0339
        gbc.setState(0x7955, 0x3c4d, 0x41a0, 0xd7c3, 0x18e3, 0x65e9, 0x1, 0x1);
        gbc.writeMem(0x7955, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3c4d, gbc.sp());
        EXPECT(0x7957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 033A
        gbc.setState(0x15a3, 0xc0f9, 0x6490, 0x9bc8, 0x32e, 0xe669, 0x1, 0x1);
        gbc.writeMem(0x15a3, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc0f9, gbc.sp());
        EXPECT(0x15a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 033B
        gbc.setState(0xb4fa, 0xc39a, 0x68c0, 0xf8ed, 0xa9e4, 0xf7b8, 0x0, 0x1);
        gbc.writeMem(0xb4fa, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc39a, gbc.sp());
        EXPECT(0xb4fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4fa));
        EXPECT(0x94, gbc.readMem(0xb4fb));
        // CB 94 033C
        gbc.setState(0x54b6, 0x278d, 0xd3b0, 0x535a, 0xccc9, 0xd3c1, 0x0, 0x0);
        gbc.writeMem(0x54b6, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x278d, gbc.sp());
        EXPECT(0x54b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 033D
        gbc.setState(0xa8a3, 0x5e35, 0x1d70, 0x36ff, 0x7239, 0xba94, 0x1, 0x0);
        gbc.writeMem(0xa8a3, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5e35, gbc.sp());
        EXPECT(0xa8a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8a3));
        EXPECT(0x94, gbc.readMem(0xa8a4));
        // CB 94 033E
        gbc.setState(0xe449, 0x2467, 0xe590, 0x1b47, 0x5919, 0xac79, 0x1, 0x0);
        gbc.writeMem(0xe449, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2467, gbc.sp());
        EXPECT(0xe44b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe449));
        EXPECT(0x94, gbc.readMem(0xe44a));
        // CB 94 033F
        gbc.setState(0xb2bc, 0x2d7a, 0x3d50, 0x2a7d, 0x2202, 0xe7d4, 0x1, 0x0);
        gbc.writeMem(0xb2bc, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2d7a, gbc.sp());
        EXPECT(0xb2be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2bc));
        EXPECT(0x94, gbc.readMem(0xb2bd));
        // CB 94 0340
        gbc.setState(0xa0a7, 0xf64a, 0x5690, 0x91ae, 0x85a2, 0x687f, 0x1, 0x1);
        gbc.writeMem(0xa0a7, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf64a, gbc.sp());
        EXPECT(0xa0a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a7));
        EXPECT(0x94, gbc.readMem(0xa0a8));
        // CB 94 0341
        gbc.setState(0xcaeb, 0xe14, 0xeb60, 0xb843, 0x6b25, 0x330a, 0x0, 0x1);
        gbc.writeMem(0xcaeb, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe14, gbc.sp());
        EXPECT(0xcaed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaeb));
        EXPECT(0x94, gbc.readMem(0xcaec));
        // CB 94 0342
        gbc.setState(0x437f, 0xe428, 0x6e00, 0x45cd, 0x1790, 0x18a9, 0x0, 0x0);
        gbc.writeMem(0x437f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe428, gbc.sp());
        EXPECT(0x4381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0343
        gbc.setState(0x6a32, 0x8d4f, 0x1960, 0x5a02, 0xcd7c, 0x210b, 0x0, 0x0);
        gbc.writeMem(0x6a32, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8d4f, gbc.sp());
        EXPECT(0x6a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0344
        gbc.setState(0xe3a4, 0xa068, 0x11e0, 0x477f, 0x2caa, 0x5fd7, 0x1, 0x1);
        gbc.writeMem(0xe3a4, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa068, gbc.sp());
        EXPECT(0xe3a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3a4));
        EXPECT(0x94, gbc.readMem(0xe3a5));
        // CB 94 0345
        gbc.setState(0x9cab, 0xb3b7, 0xcb90, 0x8c73, 0xfdcb, 0x7bd7, 0x1, 0x0);
        gbc.writeMem(0x9cab, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb3b7, gbc.sp());
        EXPECT(0x9cad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cab));
        EXPECT(0x94, gbc.readMem(0x9cac));
        // CB 94 0346
        gbc.setState(0x1162, 0x5366, 0x4510, 0x96c9, 0x68a4, 0x7d2, 0x1, 0x0);
        gbc.writeMem(0x1162, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5366, gbc.sp());
        EXPECT(0x1164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0348
        gbc.setState(0x4b87, 0xa40f, 0x9100, 0xf610, 0x9470, 0x993c, 0x0, 0x0);
        gbc.writeMem(0x4b87, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa40f, gbc.sp());
        EXPECT(0x4b89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0349
        gbc.setState(0xb996, 0x1142, 0xa720, 0xb006, 0x2b16, 0x35b8, 0x1, 0x1);
        gbc.writeMem(0xb996, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1142, gbc.sp());
        EXPECT(0xb998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb996));
        EXPECT(0x94, gbc.readMem(0xb997));
        // CB 94 034A
        gbc.setState(0x1542, 0xb864, 0x6eb0, 0xb72b, 0x959e, 0xe72f, 0x1, 0x0);
        gbc.writeMem(0x1542, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb864, gbc.sp());
        EXPECT(0x1544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 034B
        gbc.setState(0xd418, 0x1387, 0x27a0, 0xd26e, 0x30ca, 0xb40e, 0x1, 0x0);
        gbc.writeMem(0xd418, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1387, gbc.sp());
        EXPECT(0xd41a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd418));
        EXPECT(0x94, gbc.readMem(0xd419));
        // CB 94 034C
        gbc.setState(0xcf05, 0x5c55, 0x34e0, 0xb527, 0x5b9a, 0x43f4, 0x1, 0x0);
        gbc.writeMem(0xcf05, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5c55, gbc.sp());
        EXPECT(0xcf07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf05));
        EXPECT(0x94, gbc.readMem(0xcf06));
        // CB 94 034D
        gbc.setState(0x242e, 0x2929, 0x48b0, 0xe1af, 0x6653, 0x459f, 0x1, 0x1);
        gbc.writeMem(0x242e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2929, gbc.sp());
        EXPECT(0x2430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 034E
        gbc.setState(0xda0b, 0xaa93, 0x8cf0, 0x88c6, 0x11d1, 0x499f, 0x1, 0x1);
        gbc.writeMem(0xda0b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xaa93, gbc.sp());
        EXPECT(0xda0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda0b));
        EXPECT(0x94, gbc.readMem(0xda0c));
        // CB 94 034F
        gbc.setState(0xd3, 0xbe19, 0x8810, 0x6df1, 0x4b0, 0x6928, 0x1, 0x1);
        gbc.writeMem(0xd3, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbe19, gbc.sp());
        EXPECT(0xd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0350
        gbc.setState(0x218b, 0xf6fa, 0xcae0, 0x7eb0, 0x4f4a, 0x89b, 0x0, 0x1);
        gbc.writeMem(0x218b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf6fa, gbc.sp());
        EXPECT(0x218d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0351
        gbc.setState(0xbb52, 0x7c5c, 0x26b0, 0x587c, 0x47ba, 0x4545, 0x0, 0x1);
        gbc.writeMem(0xbb52, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7c5c, gbc.sp());
        EXPECT(0xbb54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb52));
        EXPECT(0x94, gbc.readMem(0xbb53));
        // CB 94 0352
        gbc.setState(0xef5d, 0x577b, 0xa630, 0xbbb, 0x8e1, 0xc278, 0x0, 0x0);
        gbc.writeMem(0xef5d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x577b, gbc.sp());
        EXPECT(0xef5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef5d));
        EXPECT(0x94, gbc.readMem(0xef5e));
        // CB 94 0353
        gbc.setState(0x590f, 0x1312, 0xaa0, 0xe413, 0x7da1, 0xf796, 0x1, 0x0);
        gbc.writeMem(0x590f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1312, gbc.sp());
        EXPECT(0x5911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0354
        gbc.setState(0x41e7, 0xcdc5, 0x81e0, 0x8fb, 0xe9f7, 0x227, 0x0, 0x0);
        gbc.writeMem(0x41e7, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcdc5, gbc.sp());
        EXPECT(0x41e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0355
        gbc.setState(0xca7, 0x3630, 0xd180, 0x906, 0x1f63, 0x10dc, 0x0, 0x0);
        gbc.writeMem(0xca7, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3630, gbc.sp());
        EXPECT(0xca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0356
        gbc.setState(0x51d, 0x38de, 0x13f0, 0x3efd, 0x3587, 0x4807, 0x0, 0x1);
        gbc.writeMem(0x51d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x38de, gbc.sp());
        EXPECT(0x51f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0357
        gbc.setState(0x1bf0, 0x428b, 0x9430, 0x43a2, 0x38dc, 0xc570, 0x0, 0x1);
        gbc.writeMem(0x1bf0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x428b, gbc.sp());
        EXPECT(0x1bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0358
        gbc.setState(0xe4ea, 0xabb6, 0xc9c0, 0x5c9b, 0xe805, 0x78c2, 0x0, 0x1);
        gbc.writeMem(0xe4ea, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xabb6, gbc.sp());
        EXPECT(0xe4ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ea));
        EXPECT(0x94, gbc.readMem(0xe4eb));
        // CB 94 0359
        gbc.setState(0xb258, 0x24c7, 0x5040, 0x8b00, 0x68b, 0x2f4e, 0x0, 0x0);
        gbc.writeMem(0xb258, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x24c7, gbc.sp());
        EXPECT(0xb25a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb258));
        EXPECT(0x94, gbc.readMem(0xb259));
        // CB 94 035B
        gbc.setState(0x7496, 0xdc15, 0xa40, 0x681a, 0xde0d, 0xfcb7, 0x1, 0x1);
        gbc.writeMem(0x7496, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdc15, gbc.sp());
        EXPECT(0x7498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 035C
        gbc.setState(0xb89a, 0xf238, 0xaf80, 0xb899, 0x7a35, 0xa6b9, 0x0, 0x1);
        gbc.writeMem(0xb89a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf238, gbc.sp());
        EXPECT(0xb89c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb89a));
        EXPECT(0x94, gbc.readMem(0xb89b));
        // CB 94 035D
        gbc.setState(0xd60d, 0xb480, 0x1850, 0xf3a9, 0x2a36, 0x51a7, 0x0, 0x1);
        gbc.writeMem(0xd60d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb480, gbc.sp());
        EXPECT(0xd60f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd60d));
        EXPECT(0x94, gbc.readMem(0xd60e));
        // CB 94 035E
        gbc.setState(0x7425, 0xd7d9, 0x6d40, 0x9d3, 0xf4c1, 0xabae, 0x1, 0x0);
        gbc.writeMem(0x7425, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd7d9, gbc.sp());
        EXPECT(0x7427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 035F
        gbc.setState(0x3ffe, 0x8aeb, 0xeb60, 0x4255, 0x3360, 0x1ad5, 0x0, 0x0);
        gbc.writeMem(0x3ffe, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8aeb, gbc.sp());
        EXPECT(0x4000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0360
        gbc.setState(0xe047, 0x8c06, 0xfb90, 0x62ae, 0xe573, 0xc359, 0x0, 0x0);
        gbc.writeMem(0xe047, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8c06, gbc.sp());
        EXPECT(0xe049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe047));
        EXPECT(0x94, gbc.readMem(0xe048));
        // CB 94 0361
        gbc.setState(0x62f0, 0x4c11, 0x110, 0x1c4a, 0x70b2, 0x8d34, 0x0, 0x1);
        gbc.writeMem(0x62f0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4c11, gbc.sp());
        EXPECT(0x62f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0362
        gbc.setState(0x4914, 0x6b10, 0x3d40, 0xc9c7, 0x3562, 0x7642, 0x0, 0x0);
        gbc.writeMem(0x4914, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6b10, gbc.sp());
        EXPECT(0x4916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0363
        gbc.setState(0xef92, 0xf39a, 0x1d50, 0xd218, 0x7db4, 0x1620, 0x1, 0x0);
        gbc.writeMem(0xef92, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf39a, gbc.sp());
        EXPECT(0xef94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef92));
        EXPECT(0x94, gbc.readMem(0xef93));
        // CB 94 0364
        gbc.setState(0xb30, 0x27f7, 0x99d0, 0x4983, 0xed8c, 0xb6b, 0x0, 0x0);
        gbc.writeMem(0xb30, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x27f7, gbc.sp());
        EXPECT(0xb32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0365
        gbc.setState(0xe57f, 0xd169, 0xd190, 0x65d0, 0xd5c5, 0x66c6, 0x1, 0x1);
        gbc.writeMem(0xe57f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd169, gbc.sp());
        EXPECT(0xe581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe57f));
        EXPECT(0x94, gbc.readMem(0xe580));
        // CB 94 0366
        gbc.setState(0x6cd4, 0x8a11, 0xa230, 0x9580, 0xf395, 0x6a30, 0x0, 0x1);
        gbc.writeMem(0x6cd4, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8a11, gbc.sp());
        EXPECT(0x6cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0367
        gbc.setState(0x39e6, 0xe1b9, 0x720, 0xb898, 0x22e5, 0x19c, 0x1, 0x0);
        gbc.writeMem(0x39e6, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe1b9, gbc.sp());
        EXPECT(0x39e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0368
        gbc.setState(0x87f1, 0x9ae0, 0x53b0, 0xb659, 0xaf03, 0x43fd, 0x0, 0x0);
        gbc.writeMem(0x87f1, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9ae0, gbc.sp());
        EXPECT(0x87f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f1));
        EXPECT(0x94, gbc.readMem(0x87f2));
        // CB 94 0369
        gbc.setState(0x4d9a, 0x8a15, 0x1e70, 0x10b6, 0xc16a, 0x12b7, 0x1, 0x0);
        gbc.writeMem(0x4d9a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8a15, gbc.sp());
        EXPECT(0x4d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 036A
        gbc.setState(0xb8c9, 0x86af, 0xf760, 0x662e, 0x7573, 0x2d37, 0x0, 0x1);
        gbc.writeMem(0xb8c9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x86af, gbc.sp());
        EXPECT(0xb8cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8c9));
        EXPECT(0x94, gbc.readMem(0xb8ca));
        // CB 94 036B
        gbc.setState(0x48eb, 0x2b97, 0xcbd0, 0xcf00, 0x6ec5, 0x48d4, 0x1, 0x1);
        gbc.writeMem(0x48eb, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2b97, gbc.sp());
        EXPECT(0x48ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 036C
        gbc.setState(0xa939, 0xde47, 0x3170, 0xc03e, 0xcb67, 0x4ecd, 0x0, 0x0);
        gbc.writeMem(0xa939, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xde47, gbc.sp());
        EXPECT(0xa93b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa939));
        EXPECT(0x94, gbc.readMem(0xa93a));
        // CB 94 036D
        gbc.setState(0x8e84, 0x338e, 0xb170, 0xc39c, 0xd92, 0xf56f, 0x1, 0x1);
        gbc.writeMem(0x8e84, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x338e, gbc.sp());
        EXPECT(0x8e86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e84));
        EXPECT(0x94, gbc.readMem(0x8e85));
        // CB 94 036E
        gbc.setState(0xd76f, 0x9e45, 0x9510, 0x5f9f, 0x27a8, 0xe48f, 0x0, 0x0);
        gbc.writeMem(0xd76f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9e45, gbc.sp());
        EXPECT(0xd771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd76f));
        EXPECT(0x94, gbc.readMem(0xd770));
        // CB 94 036F
        gbc.setState(0xe2ae, 0x5938, 0x4040, 0x944a, 0xbadf, 0x9227, 0x1, 0x1);
        gbc.writeMem(0xe2ae, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5938, gbc.sp());
        EXPECT(0xe2b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ae));
        EXPECT(0x94, gbc.readMem(0xe2af));
        // CB 94 0370
        gbc.setState(0x947c, 0x6389, 0x4920, 0x49c6, 0xb722, 0x6446, 0x0, 0x0);
        gbc.writeMem(0x947c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6389, gbc.sp());
        EXPECT(0x947e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x947c));
        EXPECT(0x94, gbc.readMem(0x947d));
        // CB 94 0371
        gbc.setState(0x2002, 0x4608, 0x44d0, 0xb6fd, 0x24ef, 0x2bfe, 0x1, 0x0);
        gbc.writeMem(0x2002, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4608, gbc.sp());
        EXPECT(0x2004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0372
        gbc.setState(0xc181, 0xc663, 0xa50, 0x7d8b, 0xc9b8, 0xbd35, 0x1, 0x1);
        gbc.writeMem(0xc181, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc663, gbc.sp());
        EXPECT(0xc183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc181));
        EXPECT(0x94, gbc.readMem(0xc182));
        // CB 94 0373
        gbc.setState(0x81d2, 0x5403, 0xed50, 0xb7e8, 0x902c, 0xb35, 0x0, 0x1);
        gbc.writeMem(0x81d2, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5403, gbc.sp());
        EXPECT(0x81d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81d2));
        EXPECT(0x94, gbc.readMem(0x81d3));
        // CB 94 0374
        gbc.setState(0xea33, 0xae46, 0x3290, 0x91e0, 0x1544, 0x2fcb, 0x1, 0x1);
        gbc.writeMem(0xea33, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xae46, gbc.sp());
        EXPECT(0xea35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea33));
        EXPECT(0x94, gbc.readMem(0xea34));
        // CB 94 0375
        gbc.setState(0x8bc0, 0xed2f, 0x8c50, 0xd0e7, 0x125b, 0x332d, 0x1, 0x0);
        gbc.writeMem(0x8bc0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xed2f, gbc.sp());
        EXPECT(0x8bc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc0));
        EXPECT(0x94, gbc.readMem(0x8bc1));
        // CB 94 0376
        gbc.setState(0xde21, 0xa6f7, 0x5eb0, 0x86aa, 0xf280, 0xa5cc, 0x1, 0x1);
        gbc.writeMem(0xde21, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa6f7, gbc.sp());
        EXPECT(0xde23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde21));
        EXPECT(0x94, gbc.readMem(0xde22));
        // CB 94 0377
        gbc.setState(0x6db, 0x10aa, 0x50e0, 0x92d8, 0x5683, 0x6457, 0x1, 0x0);
        gbc.writeMem(0x6db, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x10aa, gbc.sp());
        EXPECT(0x6dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0378
        gbc.setState(0xd483, 0x9fe6, 0x8000, 0xe075, 0xdbb6, 0x706, 0x1, 0x0);
        gbc.writeMem(0xd483, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9fe6, gbc.sp());
        EXPECT(0xd485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd483));
        EXPECT(0x94, gbc.readMem(0xd484));
        // CB 94 0379
        gbc.setState(0x6d2f, 0x80f4, 0xec30, 0xcdad, 0x1004, 0xc40a, 0x1, 0x1);
        gbc.writeMem(0x6d2f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x80f4, gbc.sp());
        EXPECT(0x6d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 037A
        gbc.setState(0x311e, 0xf3fa, 0x9960, 0xb11, 0x708b, 0xbe68, 0x1, 0x1);
        gbc.writeMem(0x311e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf3fa, gbc.sp());
        EXPECT(0x3120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 037B
        gbc.setState(0xaf58, 0x663e, 0x6890, 0xb34, 0xfdaa, 0x1bd8, 0x1, 0x0);
        gbc.writeMem(0xaf58, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x663e, gbc.sp());
        EXPECT(0xaf5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf58));
        EXPECT(0x94, gbc.readMem(0xaf59));
        // CB 94 037C
        gbc.setState(0x3854, 0xc45d, 0xded0, 0xa899, 0x3e38, 0xa0b, 0x1, 0x1);
        gbc.writeMem(0x3854, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc45d, gbc.sp());
        EXPECT(0x3856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 037D
        gbc.setState(0x8ee9, 0x8ff5, 0x3970, 0x1c1a, 0x8c94, 0x8063, 0x1, 0x0);
        gbc.writeMem(0x8ee9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8ff5, gbc.sp());
        EXPECT(0x8eeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee9));
        EXPECT(0x94, gbc.readMem(0x8eea));
        // CB 94 037F
        gbc.setState(0xdf32, 0x4f7b, 0x1360, 0xc611, 0xdac4, 0x4b5f, 0x1, 0x1);
        gbc.writeMem(0xdf32, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4f7b, gbc.sp());
        EXPECT(0xdf34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf32));
        EXPECT(0x94, gbc.readMem(0xdf33));
        // CB 94 0380
        gbc.setState(0xa4f, 0xf8b0, 0x9e30, 0x3a73, 0xf52d, 0xe854, 0x1, 0x1);
        gbc.writeMem(0xa4f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf8b0, gbc.sp());
        EXPECT(0xa51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0381
        gbc.setState(0xc40a, 0x51d9, 0xac00, 0xaed4, 0x22b2, 0xc0f5, 0x0, 0x1);
        gbc.writeMem(0xc40a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x51d9, gbc.sp());
        EXPECT(0xc40c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc40a));
        EXPECT(0x94, gbc.readMem(0xc40b));
        // CB 94 0382
        gbc.setState(0x33ab, 0xa3ea, 0x64f0, 0x645c, 0xaa7b, 0x155d, 0x1, 0x1);
        gbc.writeMem(0x33ab, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa3ea, gbc.sp());
        EXPECT(0x33ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0383
        gbc.setState(0xb0d8, 0xcd55, 0x1990, 0x985f, 0x73c4, 0x2888, 0x0, 0x0);
        gbc.writeMem(0xb0d8, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xcd55, gbc.sp());
        EXPECT(0xb0da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0d8));
        EXPECT(0x94, gbc.readMem(0xb0d9));
        // CB 94 0384
        gbc.setState(0x9cab, 0x7dde, 0x77e0, 0x7910, 0xb4de, 0xc200, 0x1, 0x1);
        gbc.writeMem(0x9cab, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7dde, gbc.sp());
        EXPECT(0x9cad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cab));
        EXPECT(0x94, gbc.readMem(0x9cac));
        // CB 94 0385
        gbc.setState(0x260d, 0x5040, 0x2580, 0xe6f4, 0x4dd9, 0x3a92, 0x1, 0x0);
        gbc.writeMem(0x260d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5040, gbc.sp());
        EXPECT(0x260f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0386
        gbc.setState(0x6c5f, 0x2c11, 0x4f40, 0x9ee, 0xd47e, 0x844b, 0x1, 0x1);
        gbc.writeMem(0x6c5f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2c11, gbc.sp());
        EXPECT(0x6c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0387
        gbc.setState(0xeb7e, 0xd6c1, 0x4b40, 0x6430, 0xb04b, 0x78b9, 0x0, 0x1);
        gbc.writeMem(0xeb7e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd6c1, gbc.sp());
        EXPECT(0xeb80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb7e));
        EXPECT(0x94, gbc.readMem(0xeb7f));
        // CB 94 0388
        gbc.setState(0x77c6, 0xd68d, 0x140, 0x329c, 0xf760, 0x6465, 0x1, 0x0);
        gbc.writeMem(0x77c6, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd68d, gbc.sp());
        EXPECT(0x77c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0389
        gbc.setState(0xc93b, 0x62ee, 0x2820, 0xd07f, 0x9568, 0x60c7, 0x1, 0x0);
        gbc.writeMem(0xc93b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x62ee, gbc.sp());
        EXPECT(0xc93d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc93b));
        EXPECT(0x94, gbc.readMem(0xc93c));
        // CB 94 038A
        gbc.setState(0xb6dd, 0xef1a, 0x4ad0, 0xb479, 0x10da, 0xf6a4, 0x1, 0x0);
        gbc.writeMem(0xb6dd, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xef1a, gbc.sp());
        EXPECT(0xb6df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6dd));
        EXPECT(0x94, gbc.readMem(0xb6de));
        // CB 94 038B
        gbc.setState(0x8120, 0x30e0, 0x20b0, 0x6022, 0xfc2b, 0x7ded, 0x0, 0x0);
        gbc.writeMem(0x8120, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x30e0, gbc.sp());
        EXPECT(0x8122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8120));
        EXPECT(0x94, gbc.readMem(0x8121));
        // CB 94 038C
        gbc.setState(0xcecb, 0x1f6b, 0x2990, 0x1023, 0xcff5, 0x63c9, 0x1, 0x1);
        gbc.writeMem(0xcecb, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1f6b, gbc.sp());
        EXPECT(0xcecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcecb));
        EXPECT(0x94, gbc.readMem(0xcecc));
        // CB 94 038D
        gbc.setState(0x478d, 0xcbcf, 0x6e60, 0xeb93, 0xa7f7, 0xd688, 0x1, 0x1);
        gbc.writeMem(0x478d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xcbcf, gbc.sp());
        EXPECT(0x478f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 038E
        gbc.setState(0x6a3e, 0x4cd5, 0x3b20, 0xd630, 0xccb4, 0xa1a1, 0x1, 0x0);
        gbc.writeMem(0x6a3e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4cd5, gbc.sp());
        EXPECT(0x6a40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 038F
        gbc.setState(0x9f71, 0x5139, 0x70d0, 0x6437, 0x48d, 0x8475, 0x0, 0x1);
        gbc.writeMem(0x9f71, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5139, gbc.sp());
        EXPECT(0x9f73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f71));
        EXPECT(0x94, gbc.readMem(0x9f72));
        // CB 94 0390
        gbc.setState(0x4b6a, 0xde6f, 0x26d0, 0xe382, 0x64d3, 0x42b, 0x1, 0x1);
        gbc.writeMem(0x4b6a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xde6f, gbc.sp());
        EXPECT(0x4b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 0392
        gbc.setState(0xbdbc, 0xd51f, 0x3a0, 0x1722, 0xd1e, 0xde9, 0x0, 0x0);
        gbc.writeMem(0xbdbc, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd51f, gbc.sp());
        EXPECT(0xbdbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdbc));
        EXPECT(0x94, gbc.readMem(0xbdbd));
        // CB 94 0393
        gbc.setState(0x6c87, 0x4d4d, 0x1a20, 0xc9cf, 0xc67c, 0xefdc, 0x1, 0x1);
        gbc.writeMem(0x6c87, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4d4d, gbc.sp());
        EXPECT(0x6c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0394
        gbc.setState(0x6473, 0xffe2, 0xdc80, 0xcea7, 0xc98e, 0x6b67, 0x0, 0x0);
        gbc.writeMem(0x6473, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xffe2, gbc.sp());
        EXPECT(0x6475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0395
        gbc.setState(0xef6d, 0x894c, 0x34a0, 0x5d4b, 0x7d5e, 0x933d, 0x1, 0x0);
        gbc.writeMem(0xef6d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x894c, gbc.sp());
        EXPECT(0xef6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef6d));
        EXPECT(0x94, gbc.readMem(0xef6e));
        // CB 94 0396
        gbc.setState(0x31cd, 0x46ce, 0xa1e0, 0xb557, 0xef85, 0xadb5, 0x1, 0x0);
        gbc.writeMem(0x31cd, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x46ce, gbc.sp());
        EXPECT(0x31cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 0398
        gbc.setState(0xbe8b, 0xfb6, 0x760, 0xb64e, 0x8e49, 0xa54e, 0x1, 0x1);
        gbc.writeMem(0xbe8b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfb6, gbc.sp());
        EXPECT(0xbe8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe8b));
        EXPECT(0x94, gbc.readMem(0xbe8c));
        // CB 94 0399
        gbc.setState(0xa0a6, 0xc35, 0x2b40, 0xf928, 0x832e, 0x74e2, 0x0, 0x0);
        gbc.writeMem(0xa0a6, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc35, gbc.sp());
        EXPECT(0xa0a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a6));
        EXPECT(0x94, gbc.readMem(0xa0a7));
        // CB 94 039A
        gbc.setState(0x3c2e, 0x8b44, 0x31e0, 0xd6a9, 0xff85, 0xbda7, 0x1, 0x0);
        gbc.writeMem(0x3c2e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8b44, gbc.sp());
        EXPECT(0x3c30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 039B
        gbc.setState(0xaf30, 0xdac9, 0x89b0, 0x6386, 0xc9dc, 0x9edc, 0x1, 0x0);
        gbc.writeMem(0xaf30, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xdac9, gbc.sp());
        EXPECT(0xaf32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf30));
        EXPECT(0x94, gbc.readMem(0xaf31));
        // CB 94 039C
        gbc.setState(0x2933, 0x34f3, 0xa120, 0x4218, 0x6639, 0x5bcb, 0x0, 0x0);
        gbc.writeMem(0x2933, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x34f3, gbc.sp());
        EXPECT(0x2935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 039D
        gbc.setState(0x373b, 0x1d15, 0x9a00, 0x4c05, 0x724c, 0x537e, 0x0, 0x1);
        gbc.writeMem(0x373b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1d15, gbc.sp());
        EXPECT(0x373d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 039E
        gbc.setState(0xcf06, 0x128f, 0x3160, 0x2f37, 0x4b2f, 0x35ab, 0x1, 0x0);
        gbc.writeMem(0xcf06, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x128f, gbc.sp());
        EXPECT(0xcf08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf06));
        EXPECT(0x94, gbc.readMem(0xcf07));
        // CB 94 039F
        gbc.setState(0x8eee, 0xcd80, 0xc190, 0x522b, 0x17ed, 0xf3e8, 0x1, 0x0);
        gbc.writeMem(0x8eee, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xcd80, gbc.sp());
        EXPECT(0x8ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eee));
        EXPECT(0x94, gbc.readMem(0x8eef));
        // CB 94 03A0
        gbc.setState(0x26fd, 0x2b48, 0x380, 0xcff0, 0xc050, 0x80c0, 0x1, 0x0);
        gbc.writeMem(0x26fd, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2b48, gbc.sp());
        EXPECT(0x26ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 03A1
        gbc.setState(0x43fa, 0xcf95, 0x6ae0, 0x5654, 0x6281, 0x2627, 0x1, 0x1);
        gbc.writeMem(0x43fa, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcf95, gbc.sp());
        EXPECT(0x43fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 03A2
        gbc.setState(0x63a0, 0xc26d, 0x17c0, 0x4fb6, 0x6c96, 0xe2fa, 0x1, 0x1);
        gbc.writeMem(0x63a0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc26d, gbc.sp());
        EXPECT(0x63a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 03A3
        gbc.setState(0x3463, 0xf9f7, 0xa9a0, 0x1c51, 0x8d30, 0xc468, 0x0, 0x1);
        gbc.writeMem(0x3463, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf9f7, gbc.sp());
        EXPECT(0x3465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 03A4
        gbc.setState(0x4bbe, 0x4512, 0x7320, 0x207d, 0xf018, 0xfb22, 0x0, 0x1);
        gbc.writeMem(0x4bbe, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4512, gbc.sp());
        EXPECT(0x4bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 03A5
        gbc.setState(0x4e11, 0xa76, 0x4b40, 0xfe9b, 0xca34, 0x5046, 0x0, 0x1);
        gbc.writeMem(0x4e11, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa76, gbc.sp());
        EXPECT(0x4e13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 03A6
        gbc.setState(0xb097, 0x2341, 0x6a90, 0xd884, 0x8f6e, 0xc7a7, 0x0, 0x0);
        gbc.writeMem(0xb097, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2341, gbc.sp());
        EXPECT(0xb099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb097));
        EXPECT(0x94, gbc.readMem(0xb098));
        // CB 94 03A7
        gbc.setState(0x54df, 0x202d, 0x5d40, 0x5069, 0x5609, 0x8385, 0x1, 0x0);
        gbc.writeMem(0x54df, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x202d, gbc.sp());
        EXPECT(0x54e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 03A8
        gbc.setState(0xe7a0, 0x4a5b, 0x8580, 0xa886, 0x9, 0x38fa, 0x0, 0x1);
        gbc.writeMem(0xe7a0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4a5b, gbc.sp());
        EXPECT(0xe7a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7a0));
        EXPECT(0x94, gbc.readMem(0xe7a1));
        // CB 94 03A9
        gbc.setState(0xef7c, 0x4c4c, 0x5af0, 0xde58, 0x6121, 0x955d, 0x1, 0x1);
        gbc.writeMem(0xef7c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4c4c, gbc.sp());
        EXPECT(0xef7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef7c));
        EXPECT(0x94, gbc.readMem(0xef7d));
        // CB 94 03AA
        gbc.setState(0x2210, 0xc9b5, 0x28d0, 0x73e2, 0xaa23, 0x21ac, 0x1, 0x0);
        gbc.writeMem(0x2210, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc9b5, gbc.sp());
        EXPECT(0x2212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 03AB
        gbc.setState(0x740b, 0x934e, 0x79b0, 0x84e4, 0x43c5, 0x4935, 0x1, 0x0);
        gbc.writeMem(0x740b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x934e, gbc.sp());
        EXPECT(0x740d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 03AC
        gbc.setState(0x615d, 0xe77b, 0x9100, 0xb5bd, 0x95f4, 0xfe22, 0x0, 0x1);
        gbc.writeMem(0x615d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe77b, gbc.sp());
        EXPECT(0x615f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 03AD
        gbc.setState(0x8920, 0x3842, 0x1c70, 0x5983, 0x8965, 0x1bc5, 0x1, 0x1);
        gbc.writeMem(0x8920, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3842, gbc.sp());
        EXPECT(0x8922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8920));
        EXPECT(0x94, gbc.readMem(0x8921));
        // CB 94 03AE
        gbc.setState(0xceda, 0x6db8, 0x2640, 0x2630, 0x468a, 0x225e, 0x0, 0x1);
        gbc.writeMem(0xceda, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6db8, gbc.sp());
        EXPECT(0xcedc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceda));
        EXPECT(0x94, gbc.readMem(0xcedb));
        // CB 94 03AF
        gbc.setState(0x3544, 0x2025, 0x36c0, 0xbb47, 0xcb18, 0xfedb, 0x1, 0x1);
        gbc.writeMem(0x3544, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2025, gbc.sp());
        EXPECT(0x3546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 03B0
        gbc.setState(0x4f54, 0xcc, 0xa230, 0x6653, 0x21a1, 0xc427, 0x0, 0x1);
        gbc.writeMem(0x4f54, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcc, gbc.sp());
        EXPECT(0x4f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 03B1
        gbc.setState(0x18b2, 0x699c, 0xde10, 0xed6a, 0x5d98, 0xb65a, 0x0, 0x1);
        gbc.writeMem(0x18b2, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x699c, gbc.sp());
        EXPECT(0x18b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 03B2
        gbc.setState(0x94fd, 0x17d2, 0xf480, 0x8e6d, 0x3961, 0x464e, 0x1, 0x0);
        gbc.writeMem(0x94fd, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x17d2, gbc.sp());
        EXPECT(0x94ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94fd));
        EXPECT(0x94, gbc.readMem(0x94fe));
        // CB 94 03B3
        gbc.setState(0xdc06, 0x9e9f, 0x74a0, 0x5451, 0xb73f, 0xd220, 0x0, 0x1);
        gbc.writeMem(0xdc06, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9e9f, gbc.sp());
        EXPECT(0xdc08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc06));
        EXPECT(0x94, gbc.readMem(0xdc07));
        // CB 94 03B4
        gbc.setState(0x147f, 0x1b97, 0x3c70, 0x16c5, 0x2984, 0x3d14, 0x0, 0x0);
        gbc.writeMem(0x147f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1b97, gbc.sp());
        EXPECT(0x1481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 03B5
        gbc.setState(0x254b, 0x1c94, 0x48d0, 0xc2b5, 0x543b, 0x6475, 0x0, 0x1);
        gbc.writeMem(0x254b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1c94, gbc.sp());
        EXPECT(0x254d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 03B6
        gbc.setState(0xe73a, 0xb3a5, 0x2760, 0x7018, 0x98ac, 0x3867, 0x1, 0x1);
        gbc.writeMem(0xe73a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb3a5, gbc.sp());
        EXPECT(0xe73c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe73a));
        EXPECT(0x94, gbc.readMem(0xe73b));
        // CB 94 03B7
        gbc.setState(0xb128, 0x6265, 0x94a0, 0xa185, 0xa8ed, 0x24d8, 0x1, 0x0);
        gbc.writeMem(0xb128, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6265, gbc.sp());
        EXPECT(0xb12a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb128));
        EXPECT(0x94, gbc.readMem(0xb129));
        // CB 94 03B8
        gbc.setState(0x6e4f, 0x2370, 0x6a80, 0x8743, 0xd5f4, 0x2ee0, 0x1, 0x0);
        gbc.writeMem(0x6e4f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2370, gbc.sp());
        EXPECT(0x6e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 03B9
        gbc.setState(0x1c0a, 0xddaa, 0x5210, 0x139e, 0x8992, 0x2a7f, 0x1, 0x1);
        gbc.writeMem(0x1c0a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xddaa, gbc.sp());
        EXPECT(0x1c0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 03BA
        gbc.setState(0xbe64, 0x160b, 0xa2a0, 0x3655, 0xbe50, 0xe9ef, 0x0, 0x1);
        gbc.writeMem(0xbe64, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x160b, gbc.sp());
        EXPECT(0xbe66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe64));
        EXPECT(0x94, gbc.readMem(0xbe65));
        // CB 94 03BB
        gbc.setState(0x5331, 0xda92, 0x6e00, 0x978d, 0xd4e9, 0xc61e, 0x1, 0x1);
        gbc.writeMem(0x5331, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xda92, gbc.sp());
        EXPECT(0x5333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 03BC
        gbc.setState(0x37a4, 0xb2d3, 0x4c80, 0x6cb1, 0x9787, 0x524d, 0x0, 0x0);
        gbc.writeMem(0x37a4, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb2d3, gbc.sp());
        EXPECT(0x37a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 03BD
        gbc.setState(0xcd13, 0xb11b, 0x76a0, 0xa1a3, 0x9fcd, 0xd6f2, 0x1, 0x0);
        gbc.writeMem(0xcd13, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb11b, gbc.sp());
        EXPECT(0xcd15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd13));
        EXPECT(0x94, gbc.readMem(0xcd14));
        // CB 94 03BE
        gbc.setState(0x6bd9, 0xc5f7, 0x2d90, 0xcf1b, 0x1ff5, 0xdfbb, 0x0, 0x0);
        gbc.writeMem(0x6bd9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc5f7, gbc.sp());
        EXPECT(0x6bdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 03BF
        gbc.setState(0x31b0, 0xb93f, 0x8240, 0xed98, 0xd1c6, 0x5615, 0x1, 0x0);
        gbc.writeMem(0x31b0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb93f, gbc.sp());
        EXPECT(0x31b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 03C0
        gbc.setState(0xaf71, 0xb41, 0x8b50, 0xb5bc, 0x1ba5, 0x41f4, 0x0, 0x0);
        gbc.writeMem(0xaf71, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb41, gbc.sp());
        EXPECT(0xaf73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf71));
        EXPECT(0x94, gbc.readMem(0xaf72));
        // CB 94 03C1
        gbc.setState(0xec2, 0xaf56, 0xd370, 0xbedf, 0x3472, 0x6ce5, 0x1, 0x1);
        gbc.writeMem(0xec2, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xaf56, gbc.sp());
        EXPECT(0xec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 03C2
        gbc.setState(0xbba2, 0xd8b7, 0x97a0, 0x394a, 0x6d1c, 0x1f69, 0x1, 0x1);
        gbc.writeMem(0xbba2, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd8b7, gbc.sp());
        EXPECT(0xbba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbba2));
        EXPECT(0x94, gbc.readMem(0xbba3));
        // CB 94 03C3
        gbc.setState(0xdfcc, 0x447, 0xdc40, 0x2930, 0xb10e, 0xe579, 0x0, 0x0);
        gbc.writeMem(0xdfcc, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x447, gbc.sp());
        EXPECT(0xdfce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfcc));
        EXPECT(0x94, gbc.readMem(0xdfcd));
        // CB 94 03C4
        gbc.setState(0x5710, 0x9bdb, 0x59b0, 0xc98d, 0xca5a, 0xfca5, 0x0, 0x0);
        gbc.writeMem(0x5710, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9bdb, gbc.sp());
        EXPECT(0x5712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 03C5
        gbc.setState(0xdbab, 0xc160, 0x8370, 0xc354, 0xb51a, 0xa38c, 0x0, 0x1);
        gbc.writeMem(0xdbab, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc160, gbc.sp());
        EXPECT(0xdbad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbab));
        EXPECT(0x94, gbc.readMem(0xdbac));
        // CB 94 03C6
        gbc.setState(0x2f5, 0x8639, 0x2970, 0xc84, 0xb0ba, 0xfcb1, 0x1, 0x0);
        gbc.writeMem(0x2f5, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8639, gbc.sp());
        EXPECT(0x2f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 03C7
        gbc.setState(0xcad4, 0x9814, 0xdc90, 0x55b0, 0xb470, 0x7ecc, 0x0, 0x0);
        gbc.writeMem(0xcad4, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9814, gbc.sp());
        EXPECT(0xcad6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcad4));
        EXPECT(0x94, gbc.readMem(0xcad5));
        // CB 94 03C8
        gbc.setState(0xe50d, 0xa07c, 0xabc0, 0x2edc, 0xb762, 0xf28f, 0x0, 0x1);
        gbc.writeMem(0xe50d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa07c, gbc.sp());
        EXPECT(0xe50f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe50d));
        EXPECT(0x94, gbc.readMem(0xe50e));
        // CB 94 03C9
        gbc.setState(0x8852, 0x5c58, 0x1fc0, 0xade6, 0xce62, 0x114b, 0x0, 0x0);
        gbc.writeMem(0x8852, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5c58, gbc.sp());
        EXPECT(0x8854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8852));
        EXPECT(0x94, gbc.readMem(0x8853));
        // CB 94 03CA
        gbc.setState(0xdf7d, 0x28e9, 0x8ed0, 0x390f, 0x46ed, 0xf236, 0x0, 0x0);
        gbc.writeMem(0xdf7d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x28e9, gbc.sp());
        EXPECT(0xdf7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf7d));
        EXPECT(0x94, gbc.readMem(0xdf7e));
        // CB 94 03CB
        gbc.setState(0xe09b, 0x40aa, 0xcdd0, 0xbf70, 0x5fc0, 0xa5a6, 0x0, 0x0);
        gbc.writeMem(0xe09b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x40aa, gbc.sp());
        EXPECT(0xe09d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe09b));
        EXPECT(0x94, gbc.readMem(0xe09c));
        // CB 94 03CC
        gbc.setState(0xbc8c, 0xb615, 0x7330, 0x6957, 0x4cb2, 0xcfd1, 0x0, 0x0);
        gbc.writeMem(0xbc8c, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb615, gbc.sp());
        EXPECT(0xbc8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8c));
        EXPECT(0x94, gbc.readMem(0xbc8d));
        // CB 94 03CD
        gbc.setState(0xd61b, 0x599d, 0x9770, 0x5802, 0x4b57, 0xcbd5, 0x1, 0x1);
        gbc.writeMem(0xd61b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x599d, gbc.sp());
        EXPECT(0xd61d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd61b));
        EXPECT(0x94, gbc.readMem(0xd61c));
        // CB 94 03CE
        gbc.setState(0xe7e2, 0x3e19, 0xb4e0, 0x8c4f, 0xb807, 0xad69, 0x0, 0x0);
        gbc.writeMem(0xe7e2, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3e19, gbc.sp());
        EXPECT(0xe7e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7e2));
        EXPECT(0x94, gbc.readMem(0xe7e3));
        // CB 94 03CF
        gbc.setState(0x3a70, 0x66e2, 0x5560, 0x5d51, 0x5218, 0xfade, 0x1, 0x1);
        gbc.writeMem(0x3a70, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x66e2, gbc.sp());
        EXPECT(0x3a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 03D0
        gbc.setState(0x1888, 0x281a, 0x61f0, 0x7c8, 0x68d0, 0x47ce, 0x1, 0x0);
        gbc.writeMem(0x1888, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x281a, gbc.sp());
        EXPECT(0x188a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 03D1
        gbc.setState(0x4bfc, 0x2ab0, 0x32f0, 0x8497, 0x9e94, 0x7402, 0x0, 0x1);
        gbc.writeMem(0x4bfc, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2ab0, gbc.sp());
        EXPECT(0x4bfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 03D2
        gbc.setState(0xa979, 0x1dc0, 0x19d0, 0x873c, 0x7cd, 0x49b7, 0x0, 0x0);
        gbc.writeMem(0xa979, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1dc0, gbc.sp());
        EXPECT(0xa97b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa979));
        EXPECT(0x94, gbc.readMem(0xa97a));
        // CB 94 03D3
        gbc.setState(0x806b, 0x6322, 0xba30, 0xd210, 0x2b3c, 0x8d0d, 0x0, 0x1);
        gbc.writeMem(0x806b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6322, gbc.sp());
        EXPECT(0x806d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x806b));
        EXPECT(0x94, gbc.readMem(0x806c));
        // CB 94 03D4
        gbc.setState(0xe39d, 0x64d, 0x1fe0, 0x9baf, 0x7735, 0xa68f, 0x0, 0x1);
        gbc.writeMem(0xe39d, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x64d, gbc.sp());
        EXPECT(0xe39f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe39d));
        EXPECT(0x94, gbc.readMem(0xe39e));
        // CB 94 03D5
        gbc.setState(0x218f, 0xccac, 0x5c40, 0x83c, 0xb35e, 0xd315, 0x1, 0x0);
        gbc.writeMem(0x218f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xccac, gbc.sp());
        EXPECT(0x2191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 03D6
        gbc.setState(0x2aa9, 0x558e, 0x5ce0, 0xd923, 0xc7cb, 0xdb63, 0x1, 0x1);
        gbc.writeMem(0x2aa9, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x558e, gbc.sp());
        EXPECT(0x2aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 03D7
        gbc.setState(0x4276, 0xf67f, 0x5b80, 0xc694, 0x2047, 0x72e4, 0x0, 0x1);
        gbc.writeMem(0x4276, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf67f, gbc.sp());
        EXPECT(0x4278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 03D8
        gbc.setState(0x9ac4, 0xdfc4, 0x8f0, 0x58f2, 0x3b9e, 0x177, 0x0, 0x1);
        gbc.writeMem(0x9ac4, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdfc4, gbc.sp());
        EXPECT(0x9ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac4));
        EXPECT(0x94, gbc.readMem(0x9ac5));
        // CB 94 03D9
        gbc.setState(0xb94f, 0x808a, 0xbb0, 0xa344, 0x651, 0xbc, 0x1, 0x1);
        gbc.writeMem(0xb94f, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x808a, gbc.sp());
        EXPECT(0xb951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb94f));
        EXPECT(0x94, gbc.readMem(0xb950));
        // CB 94 03DA
        gbc.setState(0xeb49, 0x97f1, 0xdfb0, 0x8ec7, 0x554e, 0x6bf4, 0x0, 0x0);
        gbc.writeMem(0xeb49, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x97f1, gbc.sp());
        EXPECT(0xeb4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb49));
        EXPECT(0x94, gbc.readMem(0xeb4a));
        // CB 94 03DB
        gbc.setState(0x9021, 0x8e49, 0x2f90, 0x8ffd, 0xbfc3, 0x6e46, 0x1, 0x1);
        gbc.writeMem(0x9021, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8e49, gbc.sp());
        EXPECT(0x9023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9021));
        EXPECT(0x94, gbc.readMem(0x9022));
        // CB 94 03DC
        gbc.setState(0xd736, 0x1669, 0x1790, 0x1d93, 0x8199, 0xd6e4, 0x1, 0x1);
        gbc.writeMem(0xd736, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1669, gbc.sp());
        EXPECT(0xd738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd736));
        EXPECT(0x94, gbc.readMem(0xd737));
        // CB 94 03DD
        gbc.setState(0x1b94, 0xbfb6, 0xabd0, 0x1672, 0x13dc, 0xef92, 0x0, 0x1);
        gbc.writeMem(0x1b94, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbfb6, gbc.sp());
        EXPECT(0x1b96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 03DE
        gbc.setState(0x75a3, 0x2fc5, 0x52c0, 0x109c, 0x9a12, 0x7853, 0x1, 0x1);
        gbc.writeMem(0x75a3, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2fc5, gbc.sp());
        EXPECT(0x75a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 03DF
        gbc.setState(0x10f0, 0x5258, 0xb290, 0xb052, 0x1599, 0x2326, 0x1, 0x0);
        gbc.writeMem(0x10f0, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5258, gbc.sp());
        EXPECT(0x10f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 03E0
        gbc.setState(0xdc4b, 0x4600, 0xbde0, 0xcc62, 0xabba, 0xc3a1, 0x0, 0x0);
        gbc.writeMem(0xdc4b, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4600, gbc.sp());
        EXPECT(0xdc4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc4b));
        EXPECT(0x94, gbc.readMem(0xdc4c));
        // CB 94 03E1
        gbc.setState(0x8f2a, 0xb8d6, 0x4b0, 0xd727, 0x6934, 0x98e3, 0x0, 0x1);
        gbc.writeMem(0x8f2a, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb8d6, gbc.sp());
        EXPECT(0x8f2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f2a));
        EXPECT(0x94, gbc.readMem(0x8f2b));
        // CB 94 03E2
        gbc.setState(0x522, 0xe591, 0x3110, 0x3e47, 0xcdd9, 0x9ef0, 0x0, 0x1);
        gbc.writeMem(0x522, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe591, gbc.sp());
        EXPECT(0x524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 94 03E3
        gbc.setState(0xd505, 0x7393, 0x29a0, 0x6748, 0xbd5b, 0x68c4, 0x1, 0x1);
        gbc.writeMem(0xd505, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7393, gbc.sp());
        EXPECT(0xd507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd505));
        EXPECT(0x94, gbc.readMem(0xd506));
        // CB 94 03E4
        gbc.setState(0x30a4, 0xc9c5, 0x1720, 0xa7cc, 0x5415, 0x290c, 0x0, 0x1);
        gbc.writeMem(0x30a4, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc9c5, gbc.sp());
        EXPECT(0x30a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 94 03E5
        gbc.setState(0x89cd, 0x949a, 0x810, 0xc554, 0xf250, 0xa152, 0x0, 0x0);
        gbc.writeMem(0x89cd, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x949a, gbc.sp());
        EXPECT(0x89cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89cd));
        EXPECT(0x94, gbc.readMem(0x89ce));
        // CB 94 03E6
        gbc.setState(0xb11e, 0x9dda, 0x5830, 0xdef, 0x3f63, 0x2b72, 0x0, 0x0);
        gbc.writeMem(0xb11e, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9dda, gbc.sp());
        EXPECT(0xb120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11e));
        EXPECT(0x94, gbc.readMem(0xb11f));
        // CB 94 03E7
        gbc.setState(0x7edc, 0x9c94, 0xdca0, 0xdce4, 0x7200, 0xcfa6, 0x0, 0x1);
        gbc.writeMem(0x7edc, { 0xcb, 0x94 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9c94, gbc.sp());
        EXPECT(0x7ede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
