    TEST(gbcemu, opcode_04) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 04 0000
        gbc.setState(0x993b, 0xa0bf, 0x7d00, 0x56b6, 0x17ec, 0xa760, 0x1, 0x0);
        gbc.writeMem(0x993b, { 0x4 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa0bf, gbc.sp());
        EXPECT(0x993c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x993b));
        // 04 0001
        gbc.setState(0xe93f, 0x713a, 0x3280, 0xf284, 0xeeb0, 0x6bf8, 0x1, 0x1);
        gbc.writeMem(0xe93f, { 0x4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x713a, gbc.sp());
        EXPECT(0xe940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe93f));
        // 04 0002
        gbc.setState(0x4fb4, 0xca9f, 0x6850, 0x73b1, 0x9f20, 0x89c0, 0x1, 0x1);
        gbc.writeMem(0x4fb4, { 0x4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xca9f, gbc.sp());
        EXPECT(0x4fb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0003
        gbc.setState(0x65fc, 0x411f, 0x8f30, 0x9b6b, 0x586d, 0x88e5, 0x0, 0x1);
        gbc.writeMem(0x65fc, { 0x4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x411f, gbc.sp());
        EXPECT(0x65fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0004
        gbc.setState(0xae2b, 0x8592, 0x7980, 0xee57, 0xffe1, 0xd551, 0x1, 0x0);
        gbc.writeMem(0xae2b, { 0x4 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8592, gbc.sp());
        EXPECT(0xae2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xae2b));
        // 04 0006
        gbc.setState(0x9025, 0x83e5, 0x9330, 0xdfcf, 0x7fa9, 0xd864, 0x0, 0x1);
        gbc.writeMem(0x9025, { 0x4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x83e5, gbc.sp());
        EXPECT(0x9026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9025));
        // 04 0007
        gbc.setState(0x6c7d, 0xbde1, 0x7f70, 0xbefd, 0x8d4e, 0xa9e7, 0x1, 0x0);
        gbc.writeMem(0x6c7d, { 0x4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbde1, gbc.sp());
        EXPECT(0x6c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0008
        gbc.setState(0x7d3, 0xebd2, 0xda60, 0x751b, 0x90b1, 0xf0b0, 0x0, 0x0);
        gbc.writeMem(0x7d3, { 0x4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xebd2, gbc.sp());
        EXPECT(0x7d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0009
        gbc.setState(0x3c43, 0x5acb, 0x5c20, 0xf791, 0xf7b7, 0xa705, 0x1, 0x1);
        gbc.writeMem(0x3c43, { 0x4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5acb, gbc.sp());
        EXPECT(0x3c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 000A
        gbc.setState(0xd14f, 0x98a3, 0x6410, 0x1e04, 0xe71e, 0xce57, 0x0, 0x1);
        gbc.writeMem(0xd14f, { 0x4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x98a3, gbc.sp());
        EXPECT(0xd150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd14f));
        // 04 000B
        gbc.setState(0x5d23, 0xa4f8, 0xe50, 0xc50a, 0xec2b, 0x8ae3, 0x1, 0x0);
        gbc.writeMem(0x5d23, { 0x4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa4f8, gbc.sp());
        EXPECT(0x5d24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 000C
        gbc.setState(0xc110, 0xf729, 0x61a0, 0x227, 0x8e5d, 0x50f0, 0x1, 0x1);
        gbc.writeMem(0xc110, { 0x4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf729, gbc.sp());
        EXPECT(0xc111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc110));
        // 04 000D
        gbc.setState(0x7575, 0x49dc, 0x1200, 0xacf0, 0xd432, 0x2553, 0x0, 0x1);
        gbc.writeMem(0x7575, { 0x4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x49dc, gbc.sp());
        EXPECT(0x7576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 000E
        gbc.setState(0x9360, 0x43bb, 0x9a80, 0x5f63, 0x9341, 0xa5bd, 0x1, 0x0);
        gbc.writeMem(0x9360, { 0x4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x43bb, gbc.sp());
        EXPECT(0x9361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9360));
        // 04 000F
        gbc.setState(0x89f4, 0x61e6, 0x6190, 0x563e, 0xf379, 0xd732, 0x1, 0x0);
        gbc.writeMem(0x89f4, { 0x4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x61e6, gbc.sp());
        EXPECT(0x89f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x89f4));
        // 04 0010
        gbc.setState(0x6212, 0x1ff2, 0x74f0, 0x4037, 0xdf86, 0xfa6c, 0x1, 0x1);
        gbc.writeMem(0x6212, { 0x4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1ff2, gbc.sp());
        EXPECT(0x6213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0011
        gbc.setState(0xc02, 0x124b, 0x9200, 0xae5f, 0x3690, 0x4ba9, 0x1, 0x0);
        gbc.writeMem(0xc02, { 0x4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x124b, gbc.sp());
        EXPECT(0xc03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0012
        gbc.setState(0x8b6b, 0x218f, 0x9930, 0x45ff, 0x1458, 0x1a3c, 0x1, 0x0);
        gbc.writeMem(0x8b6b, { 0x4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x218f, gbc.sp());
        EXPECT(0x8b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8b6b));
        // 04 0013
        gbc.setState(0x9cbc, 0x6f0f, 0x9870, 0xc622, 0x6228, 0x72c8, 0x1, 0x1);
        gbc.writeMem(0x9cbc, { 0x4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6f0f, gbc.sp());
        EXPECT(0x9cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9cbc));
        // 04 0014
        gbc.setState(0x8298, 0xdc4c, 0x8c60, 0x35b, 0x2801, 0xd852, 0x0, 0x0);
        gbc.writeMem(0x8298, { 0x4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdc4c, gbc.sp());
        EXPECT(0x8299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8298));
        // 04 0015
        gbc.setState(0x588c, 0x2ffc, 0x7db0, 0xaaf9, 0x5c89, 0x986d, 0x1, 0x0);
        gbc.writeMem(0x588c, { 0x4 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2ffc, gbc.sp());
        EXPECT(0x588d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0016
        gbc.setState(0x6537, 0x4058, 0xb2f0, 0x6893, 0x75b7, 0x3433, 0x0, 0x1);
        gbc.writeMem(0x6537, { 0x4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4058, gbc.sp());
        EXPECT(0x6538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0017
        gbc.setState(0x556, 0xd772, 0x4de0, 0xcbef, 0xcddf, 0x9d87, 0x0, 0x1);
        gbc.writeMem(0x556, { 0x4 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd772, gbc.sp());
        EXPECT(0x557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0018
        gbc.setState(0xb6fb, 0xdbe7, 0x6b90, 0x8805, 0x5a4, 0x5932, 0x1, 0x0);
        gbc.writeMem(0xb6fb, { 0x4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdbe7, gbc.sp());
        EXPECT(0xb6fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb6fb));
        // 04 0019
        gbc.setState(0x702f, 0xf46c, 0x2b30, 0x61d6, 0xa198, 0x318c, 0x0, 0x1);
        gbc.writeMem(0x702f, { 0x4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf46c, gbc.sp());
        EXPECT(0x7030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 001A
        gbc.setState(0x2620, 0x2b59, 0x3100, 0x9cba, 0xfc21, 0x4c1d, 0x1, 0x1);
        gbc.writeMem(0x2620, { 0x4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2b59, gbc.sp());
        EXPECT(0x2621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 001B
        gbc.setState(0xd20, 0x32bf, 0x7470, 0xd783, 0x70c, 0xf531, 0x0, 0x1);
        gbc.writeMem(0xd20, { 0x4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x32bf, gbc.sp());
        EXPECT(0xd21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 001C
        gbc.setState(0xe34a, 0x1c1a, 0x9960, 0xde07, 0xf75d, 0xa998, 0x1, 0x1);
        gbc.writeMem(0xe34a, { 0x4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1c1a, gbc.sp());
        EXPECT(0xe34b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe34a));
        // 04 001D
        gbc.setState(0x3d79, 0xf258, 0xc510, 0x7641, 0xd02c, 0x57c4, 0x1, 0x1);
        gbc.writeMem(0x3d79, { 0x4 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf258, gbc.sp());
        EXPECT(0x3d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 001E
        gbc.setState(0x6a42, 0x716c, 0xde70, 0x2c5a, 0x3a08, 0xd2be, 0x1, 0x1);
        gbc.writeMem(0x6a42, { 0x4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x716c, gbc.sp());
        EXPECT(0x6a43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 001F
        gbc.setState(0xc694, 0x52ab, 0x3000, 0x963b, 0xd3c6, 0x77a3, 0x1, 0x0);
        gbc.writeMem(0xc694, { 0x4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x52ab, gbc.sp());
        EXPECT(0xc695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc694));
        // 04 0020
        gbc.setState(0x1844, 0x3cab, 0x6ad0, 0x6e6c, 0xd08e, 0x1b6e, 0x1, 0x1);
        gbc.writeMem(0x1844, { 0x4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3cab, gbc.sp());
        EXPECT(0x1845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0021
        gbc.setState(0x37eb, 0x89e3, 0x4000, 0xbebb, 0x5c7e, 0xfe96, 0x0, 0x1);
        gbc.writeMem(0x37eb, { 0x4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x89e3, gbc.sp());
        EXPECT(0x37ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0022
        gbc.setState(0x642f, 0xb7bb, 0x7750, 0xea9, 0xa024, 0x1bb4, 0x0, 0x0);
        gbc.writeMem(0x642f, { 0x4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb7bb, gbc.sp());
        EXPECT(0x6430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0023
        gbc.setState(0x4ebb, 0x744b, 0x1a00, 0x24d2, 0xf81, 0x3c24, 0x1, 0x0);
        gbc.writeMem(0x4ebb, { 0x4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x744b, gbc.sp());
        EXPECT(0x4ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0024
        gbc.setState(0x84d9, 0x9957, 0x96b0, 0x2afc, 0x393e, 0xfce7, 0x0, 0x0);
        gbc.writeMem(0x84d9, { 0x4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9957, gbc.sp());
        EXPECT(0x84da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x84d9));
        // 04 0025
        gbc.setState(0xbe20, 0x9bd9, 0x7ec0, 0xa7d2, 0xa3ec, 0xc80b, 0x1, 0x1);
        gbc.writeMem(0xbe20, { 0x4 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9bd9, gbc.sp());
        EXPECT(0xbe21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xbe20));
        // 04 0026
        gbc.setState(0xdbb2, 0xa95f, 0xb090, 0xa6d8, 0xde59, 0xfd81, 0x0, 0x1);
        gbc.writeMem(0xdbb2, { 0x4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa95f, gbc.sp());
        EXPECT(0xdbb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdbb2));
        // 04 0027
        gbc.setState(0x4800, 0xd2a5, 0x5630, 0xf8fc, 0x2998, 0xcbe6, 0x1, 0x0);
        gbc.writeMem(0x4800, { 0x4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd2a5, gbc.sp());
        EXPECT(0x4801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0028
        gbc.setState(0xb04a, 0x3d0f, 0x9380, 0xc585, 0x2c37, 0xab6c, 0x0, 0x1);
        gbc.writeMem(0xb04a, { 0x4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3d0f, gbc.sp());
        EXPECT(0xb04b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb04a));
        // 04 0029
        gbc.setState(0x5c6c, 0x6f13, 0x8a70, 0xc0a7, 0xe813, 0xea4c, 0x1, 0x1);
        gbc.writeMem(0x5c6c, { 0x4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6f13, gbc.sp());
        EXPECT(0x5c6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 002A
        gbc.setState(0x26c9, 0xf0ec, 0xb390, 0xe41f, 0xe399, 0x2f27, 0x1, 0x1);
        gbc.writeMem(0x26c9, { 0x4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf0ec, gbc.sp());
        EXPECT(0x26ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 002B
        gbc.setState(0x2a81, 0xab04, 0xadc0, 0xd4fb, 0x8101, 0x17d7, 0x1, 0x1);
        gbc.writeMem(0x2a81, { 0x4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xab04, gbc.sp());
        EXPECT(0x2a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 002C
        gbc.setState(0x79fe, 0x20ed, 0x53d0, 0xace8, 0x73fd, 0x89e4, 0x1, 0x0);
        gbc.writeMem(0x79fe, { 0x4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x20ed, gbc.sp());
        EXPECT(0x79ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 002E
        gbc.setState(0xc395, 0xc212, 0x97f0, 0xed39, 0x27b0, 0x76b9, 0x1, 0x1);
        gbc.writeMem(0xc395, { 0x4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc212, gbc.sp());
        EXPECT(0xc396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc395));
        // 04 002F
        gbc.setState(0x6158, 0x3ef5, 0x570, 0xcf0e, 0x5aa2, 0x88d1, 0x0, 0x1);
        gbc.writeMem(0x6158, { 0x4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3ef5, gbc.sp());
        EXPECT(0x6159, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0030
        gbc.setState(0xe1ad, 0x428, 0xebe0, 0x54d1, 0x9a80, 0x572c, 0x0, 0x0);
        gbc.writeMem(0xe1ad, { 0x4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x428, gbc.sp());
        EXPECT(0xe1ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe1ad));
        // 04 0031
        gbc.setState(0xd672, 0xa2e, 0x4d50, 0x4386, 0x6c02, 0x34c7, 0x1, 0x0);
        gbc.writeMem(0xd672, { 0x4 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa2e, gbc.sp());
        EXPECT(0xd673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd672));
        // 04 0032
        gbc.setState(0xaf09, 0x1b02, 0x1710, 0x6d51, 0x2d66, 0x2d9, 0x1, 0x1);
        gbc.writeMem(0xaf09, { 0x4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1b02, gbc.sp());
        EXPECT(0xaf0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xaf09));
        // 04 0033
        gbc.setState(0x24c8, 0xd0c, 0xf920, 0xd7fb, 0x81f8, 0xe68b, 0x0, 0x1);
        gbc.writeMem(0x24c8, { 0x4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd0c, gbc.sp());
        EXPECT(0x24c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0034
        gbc.setState(0x8814, 0x7e16, 0xd060, 0xd3cb, 0x5a0f, 0xea86, 0x1, 0x0);
        gbc.writeMem(0x8814, { 0x4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7e16, gbc.sp());
        EXPECT(0x8815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8814));
        // 04 0035
        gbc.setState(0xb495, 0xf3c3, 0x47a0, 0x51a, 0x6916, 0xaa22, 0x0, 0x1);
        gbc.writeMem(0xb495, { 0x4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf3c3, gbc.sp());
        EXPECT(0xb496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb495));
        // 04 0036
        gbc.setState(0x9481, 0x333b, 0x2790, 0x8b3e, 0xadf3, 0xfc03, 0x0, 0x1);
        gbc.writeMem(0x9481, { 0x4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x333b, gbc.sp());
        EXPECT(0x9482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9481));
        // 04 0037
        gbc.setState(0xc716, 0x93b4, 0xd6e0, 0xf1ef, 0xe0db, 0xe30c, 0x0, 0x0);
        gbc.writeMem(0xc716, { 0x4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x93b4, gbc.sp());
        EXPECT(0xc717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc716));
        // 04 0038
        gbc.setState(0xd8c4, 0x96ff, 0xfa20, 0x4336, 0xcd6d, 0x6179, 0x0, 0x1);
        gbc.writeMem(0xd8c4, { 0x4 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x96ff, gbc.sp());
        EXPECT(0xd8c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd8c4));
        // 04 0039
        gbc.setState(0xd035, 0x36a2, 0xc300, 0x3cc0, 0xc484, 0xa373, 0x1, 0x1);
        gbc.writeMem(0xd035, { 0x4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x36a2, gbc.sp());
        EXPECT(0xd036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd035));
        // 04 003A
        gbc.setState(0xac2, 0xc0cd, 0xea60, 0xe948, 0xdf8d, 0xb7b3, 0x1, 0x1);
        gbc.writeMem(0xac2, { 0x4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc0cd, gbc.sp());
        EXPECT(0xac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 003C
        gbc.setState(0x4bed, 0xeddb, 0x30a0, 0x8eee, 0xc6a7, 0x28b8, 0x0, 0x1);
        gbc.writeMem(0x4bed, { 0x4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xeddb, gbc.sp());
        EXPECT(0x4bee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 003D
        gbc.setState(0x3914, 0x787d, 0xbda0, 0xedef, 0x8d56, 0xa6ab, 0x0, 0x1);
        gbc.writeMem(0x3914, { 0x4 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x787d, gbc.sp());
        EXPECT(0x3915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 003E
        gbc.setState(0xb53e, 0xb240, 0x8e70, 0x7cd3, 0x2255, 0xab4a, 0x1, 0x1);
        gbc.writeMem(0xb53e, { 0x4 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb240, gbc.sp());
        EXPECT(0xb53f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb53e));
        // 04 003F
        gbc.setState(0x53e6, 0xb475, 0x43c0, 0xa2e3, 0x18f8, 0x767, 0x1, 0x0);
        gbc.writeMem(0x53e6, { 0x4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb475, gbc.sp());
        EXPECT(0x53e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0041
        gbc.setState(0xde40, 0xd370, 0xfab0, 0x2068, 0x909d, 0x4ade, 0x0, 0x0);
        gbc.writeMem(0xde40, { 0x4 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd370, gbc.sp());
        EXPECT(0xde41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xde40));
        // 04 0042
        gbc.setState(0x6ac0, 0xd66, 0x8fb0, 0xb5f7, 0xb32c, 0xaddc, 0x0, 0x0);
        gbc.writeMem(0x6ac0, { 0x4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd66, gbc.sp());
        EXPECT(0x6ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0043
        gbc.setState(0xe30b, 0x66c9, 0x67d0, 0x7923, 0xd10c, 0xd82d, 0x1, 0x0);
        gbc.writeMem(0xe30b, { 0x4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x66c9, gbc.sp());
        EXPECT(0xe30c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe30b));
        // 04 0044
        gbc.setState(0x3363, 0x2b41, 0x3820, 0x77b1, 0xc54f, 0x54e6, 0x1, 0x0);
        gbc.writeMem(0x3363, { 0x4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2b41, gbc.sp());
        EXPECT(0x3364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0045
        gbc.setState(0xeb3a, 0x55e0, 0x7930, 0x7eeb, 0x6c4b, 0xe1b7, 0x1, 0x0);
        gbc.writeMem(0xeb3a, { 0x4 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x55e0, gbc.sp());
        EXPECT(0xeb3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xeb3a));
        // 04 0046
        gbc.setState(0xbde3, 0xf312, 0x2db0, 0x46a2, 0x39e4, 0x8309, 0x0, 0x0);
        gbc.writeMem(0xbde3, { 0x4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf312, gbc.sp());
        EXPECT(0xbde4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xbde3));
        // 04 0047
        gbc.setState(0x2d26, 0x30e2, 0x9590, 0x3663, 0xe9dc, 0xa1de, 0x0, 0x0);
        gbc.writeMem(0x2d26, { 0x4 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x30e2, gbc.sp());
        EXPECT(0x2d27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0048
        gbc.setState(0x75a9, 0xda4d, 0xafb0, 0x6dd, 0xec23, 0x360c, 0x0, 0x1);
        gbc.writeMem(0x75a9, { 0x4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xda4d, gbc.sp());
        EXPECT(0x75aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0049
        gbc.setState(0xc9a0, 0x748f, 0x74e0, 0xad27, 0xbb4e, 0x3749, 0x1, 0x0);
        gbc.writeMem(0xc9a0, { 0x4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x748f, gbc.sp());
        EXPECT(0xc9a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc9a0));
        // 04 004A
        gbc.setState(0x8311, 0x917a, 0xe770, 0x914f, 0xf53e, 0x121c, 0x1, 0x0);
        gbc.writeMem(0x8311, { 0x4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x917a, gbc.sp());
        EXPECT(0x8312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8311));
        // 04 004B
        gbc.setState(0x7c6d, 0xf996, 0x8100, 0xabb5, 0xfc5, 0xf24c, 0x1, 0x0);
        gbc.writeMem(0x7c6d, { 0x4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf996, gbc.sp());
        EXPECT(0x7c6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 004C
        gbc.setState(0xc4ed, 0xf709, 0x5440, 0xb0bb, 0xd48a, 0xa159, 0x1, 0x1);
        gbc.writeMem(0xc4ed, { 0x4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf709, gbc.sp());
        EXPECT(0xc4ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc4ed));
        // 04 004D
        gbc.setState(0xcbb5, 0xa53f, 0xe590, 0x1f46, 0x4a1f, 0x13b, 0x1, 0x1);
        gbc.writeMem(0xcbb5, { 0x4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa53f, gbc.sp());
        EXPECT(0xcbb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xcbb5));
        // 04 004E
        gbc.setState(0x2d97, 0xc173, 0x1ef0, 0x3eba, 0x7870, 0xc730, 0x0, 0x0);
        gbc.writeMem(0x2d97, { 0x4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc173, gbc.sp());
        EXPECT(0x2d98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 004F
        gbc.setState(0x27c0, 0xee67, 0x5220, 0x6a3a, 0x4f58, 0xe6f0, 0x0, 0x1);
        gbc.writeMem(0x27c0, { 0x4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xee67, gbc.sp());
        EXPECT(0x27c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0050
        gbc.setState(0x6f1b, 0xf849, 0xe2b0, 0x2e86, 0xc175, 0xebf, 0x0, 0x0);
        gbc.writeMem(0x6f1b, { 0x4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf849, gbc.sp());
        EXPECT(0x6f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0051
        gbc.setState(0x27f5, 0xa549, 0xa190, 0xccac, 0x1d7b, 0xb326, 0x1, 0x1);
        gbc.writeMem(0x27f5, { 0x4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa549, gbc.sp());
        EXPECT(0x27f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0052
        gbc.setState(0x5303, 0x827b, 0x69f0, 0x6b6a, 0xbe42, 0x812e, 0x0, 0x0);
        gbc.writeMem(0x5303, { 0x4 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x827b, gbc.sp());
        EXPECT(0x5304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0053
        gbc.setState(0x6a50, 0xd968, 0xa1f0, 0x16a4, 0xc83, 0x4b70, 0x0, 0x1);
        gbc.writeMem(0x6a50, { 0x4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd968, gbc.sp());
        EXPECT(0x6a51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0054
        gbc.setState(0x8d2a, 0xce4e, 0x6250, 0xe8f, 0x42cd, 0xf371, 0x1, 0x0);
        gbc.writeMem(0x8d2a, { 0x4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xce4e, gbc.sp());
        EXPECT(0x8d2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8d2a));
        // 04 0055
        gbc.setState(0x5a2b, 0x196c, 0x80a0, 0xd88b, 0xc5c, 0x3f55, 0x1, 0x0);
        gbc.writeMem(0x5a2b, { 0x4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x196c, gbc.sp());
        EXPECT(0x5a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0056
        gbc.setState(0x75cd, 0xa9d, 0xd7c0, 0x366a, 0x964f, 0xc1e1, 0x1, 0x0);
        gbc.writeMem(0x75cd, { 0x4 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa9d, gbc.sp());
        EXPECT(0x75ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0057
        gbc.setState(0x1861, 0xd5b8, 0x6ca0, 0x4f48, 0x6ca2, 0x5162, 0x1, 0x0);
        gbc.writeMem(0x1861, { 0x4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd5b8, gbc.sp());
        EXPECT(0x1862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0058
        gbc.setState(0x1e55, 0xa14c, 0x2d50, 0xcee8, 0x2174, 0x2a51, 0x1, 0x0);
        gbc.writeMem(0x1e55, { 0x4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa14c, gbc.sp());
        EXPECT(0x1e56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0059
        gbc.setState(0x3eb5, 0xe8dc, 0x5c00, 0x5a20, 0xe601, 0xfac4, 0x0, 0x0);
        gbc.writeMem(0x3eb5, { 0x4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe8dc, gbc.sp());
        EXPECT(0x3eb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 005A
        gbc.setState(0xe283, 0x7eef, 0x97a0, 0x24a6, 0x888e, 0x7e54, 0x0, 0x0);
        gbc.writeMem(0xe283, { 0x4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7eef, gbc.sp());
        EXPECT(0xe284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe283));
        // 04 005B
        gbc.setState(0x1b80, 0x2ef6, 0x24f0, 0x696b, 0x4e60, 0x422e, 0x0, 0x0);
        gbc.writeMem(0x1b80, { 0x4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2ef6, gbc.sp());
        EXPECT(0x1b81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 005C
        gbc.setState(0x84aa, 0xd1a3, 0x4ce0, 0x959e, 0xf132, 0x62a8, 0x0, 0x0);
        gbc.writeMem(0x84aa, { 0x4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd1a3, gbc.sp());
        EXPECT(0x84ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x84aa));
        // 04 005D
        gbc.setState(0x67f, 0xe1d4, 0x6b50, 0xae27, 0x8f0c, 0xd0b4, 0x0, 0x1);
        gbc.writeMem(0x67f, { 0x4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe1d4, gbc.sp());
        EXPECT(0x680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 005E
        gbc.setState(0xc463, 0x4026, 0x28b0, 0x5e8a, 0xc30b, 0x1b63, 0x1, 0x1);
        gbc.writeMem(0xc463, { 0x4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4026, gbc.sp());
        EXPECT(0xc464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc463));
        // 04 005F
        gbc.setState(0x7d7b, 0x9730, 0x81c0, 0x40ba, 0x11c, 0xd42c, 0x0, 0x0);
        gbc.writeMem(0x7d7b, { 0x4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9730, gbc.sp());
        EXPECT(0x7d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0060
        gbc.setState(0xb88d, 0xa16d, 0xdab0, 0xdccd, 0xb296, 0x345d, 0x0, 0x0);
        gbc.writeMem(0xb88d, { 0x4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa16d, gbc.sp());
        EXPECT(0xb88e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb88d));
        // 04 0062
        gbc.setState(0xefc8, 0x97f3, 0xf6f0, 0x9775, 0x30a8, 0x9073, 0x1, 0x0);
        gbc.writeMem(0xefc8, { 0x4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x97f3, gbc.sp());
        EXPECT(0xefc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xefc8));
        // 04 0063
        gbc.setState(0x5fde, 0x4360, 0xeb10, 0x6f7f, 0xe387, 0x257b, 0x0, 0x1);
        gbc.writeMem(0x5fde, { 0x4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4360, gbc.sp());
        EXPECT(0x5fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0064
        gbc.setState(0x6bdc, 0x9fe3, 0x6b70, 0x8574, 0x64a0, 0x1645, 0x1, 0x0);
        gbc.writeMem(0x6bdc, { 0x4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9fe3, gbc.sp());
        EXPECT(0x6bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0066
        gbc.setState(0x9232, 0xca23, 0x3200, 0xacc7, 0x86af, 0xcccc, 0x0, 0x1);
        gbc.writeMem(0x9232, { 0x4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xca23, gbc.sp());
        EXPECT(0x9233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9232));
        // 04 0067
        gbc.setState(0xace7, 0xd455, 0xbba0, 0x664a, 0xadea, 0xa9c8, 0x1, 0x0);
        gbc.writeMem(0xace7, { 0x4 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd455, gbc.sp());
        EXPECT(0xace8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xace7));
        // 04 0068
        gbc.setState(0x453b, 0xdebb, 0xc8d0, 0xb927, 0xd126, 0x98ee, 0x1, 0x1);
        gbc.writeMem(0x453b, { 0x4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdebb, gbc.sp());
        EXPECT(0x453c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0069
        gbc.setState(0x4d9c, 0xc281, 0x9660, 0xe192, 0x5eee, 0xa530, 0x0, 0x1);
        gbc.writeMem(0x4d9c, { 0x4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc281, gbc.sp());
        EXPECT(0x4d9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 006B
        gbc.setState(0xc6f6, 0x5d0e, 0x7820, 0x1efe, 0x282e, 0x1c12, 0x1, 0x1);
        gbc.writeMem(0xc6f6, { 0x4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5d0e, gbc.sp());
        EXPECT(0xc6f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc6f6));
        // 04 006C
        gbc.setState(0x3523, 0x2017, 0xef90, 0xb14c, 0xcdf2, 0xf615, 0x0, 0x0);
        gbc.writeMem(0x3523, { 0x4 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2017, gbc.sp());
        EXPECT(0x3524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 006D
        gbc.setState(0xb1ba, 0x3c55, 0x3960, 0xd606, 0xf7bb, 0x201f, 0x0, 0x0);
        gbc.writeMem(0xb1ba, { 0x4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3c55, gbc.sp());
        EXPECT(0xb1bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb1ba));
        // 04 006E
        gbc.setState(0x83c8, 0x332c, 0x4e90, 0xdd51, 0xe8cd, 0x87b0, 0x0, 0x1);
        gbc.writeMem(0x83c8, { 0x4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x332c, gbc.sp());
        EXPECT(0x83c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x83c8));
        // 04 006F
        gbc.setState(0x113a, 0xe7b0, 0x5580, 0x69a0, 0x707b, 0x8e8, 0x1, 0x1);
        gbc.writeMem(0x113a, { 0x4 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe7b0, gbc.sp());
        EXPECT(0x113b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0070
        gbc.setState(0x43d3, 0x350d, 0xd880, 0xc0ab, 0x8dd, 0x8a5e, 0x0, 0x1);
        gbc.writeMem(0x43d3, { 0x4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x350d, gbc.sp());
        EXPECT(0x43d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0071
        gbc.setState(0x2874, 0xa7a5, 0x3b10, 0x7fd2, 0xb6f1, 0xd585, 0x1, 0x1);
        gbc.writeMem(0x2874, { 0x4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa7a5, gbc.sp());
        EXPECT(0x2875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0072
        gbc.setState(0x86db, 0xfe, 0x5020, 0xa525, 0x715d, 0x72ed, 0x0, 0x0);
        gbc.writeMem(0x86db, { 0x4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xfe, gbc.sp());
        EXPECT(0x86dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x86db));
        // 04 0073
        gbc.setState(0xd0cd, 0x86ac, 0x40c0, 0x307e, 0xe244, 0x678a, 0x0, 0x0);
        gbc.writeMem(0xd0cd, { 0x4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x86ac, gbc.sp());
        EXPECT(0xd0ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd0cd));
        // 04 0074
        gbc.setState(0xe9a8, 0xe8d0, 0x12e0, 0x1e31, 0x8493, 0x71e5, 0x0, 0x1);
        gbc.writeMem(0xe9a8, { 0x4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe8d0, gbc.sp());
        EXPECT(0xe9a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe9a8));
        // 04 0075
        gbc.setState(0x2936, 0xee3f, 0x6100, 0xcdeb, 0x6bde, 0xf0e6, 0x1, 0x1);
        gbc.writeMem(0x2936, { 0x4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xee3f, gbc.sp());
        EXPECT(0x2937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0076
        gbc.setState(0xd8d6, 0xddef, 0x1a10, 0x31ae, 0x7a9e, 0xf924, 0x0, 0x0);
        gbc.writeMem(0xd8d6, { 0x4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xddef, gbc.sp());
        EXPECT(0xd8d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd8d6));
        // 04 0077
        gbc.setState(0xd957, 0xd66a, 0xf1e0, 0x315a, 0xd4a, 0xa08a, 0x0, 0x0);
        gbc.writeMem(0xd957, { 0x4 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd66a, gbc.sp());
        EXPECT(0xd958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd957));
        // 04 0078
        gbc.setState(0x79c, 0xf1e5, 0x1e80, 0x219b, 0x7a55, 0x6999, 0x0, 0x0);
        gbc.writeMem(0x79c, { 0x4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf1e5, gbc.sp());
        EXPECT(0x79d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0079
        gbc.setState(0x4160, 0x641e, 0x9660, 0x6573, 0x65af, 0x63bd, 0x0, 0x1);
        gbc.writeMem(0x4160, { 0x4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x641e, gbc.sp());
        EXPECT(0x4161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 007A
        gbc.setState(0x107e, 0xa4b7, 0x7590, 0x724d, 0x4bce, 0x3a7d, 0x1, 0x1);
        gbc.writeMem(0x107e, { 0x4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa4b7, gbc.sp());
        EXPECT(0x107f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 007B
        gbc.setState(0x18fd, 0x725c, 0x28a0, 0x4d3c, 0x27f8, 0xc28a, 0x1, 0x1);
        gbc.writeMem(0x18fd, { 0x4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x725c, gbc.sp());
        EXPECT(0x18fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 007C
        gbc.setState(0xeee1, 0xbad2, 0x83d0, 0x214, 0x75bf, 0xa080, 0x1, 0x0);
        gbc.writeMem(0xeee1, { 0x4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbad2, gbc.sp());
        EXPECT(0xeee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xeee1));
        // 04 007D
        gbc.setState(0x582c, 0x5cab, 0x3680, 0x949f, 0x79e0, 0xeecb, 0x1, 0x0);
        gbc.writeMem(0x582c, { 0x4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5cab, gbc.sp());
        EXPECT(0x582d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 007E
        gbc.setState(0x1160, 0xedc0, 0x900, 0x40d6, 0xf62e, 0xf0, 0x1, 0x1);
        gbc.writeMem(0x1160, { 0x4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xedc0, gbc.sp());
        EXPECT(0x1161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 007F
        gbc.setState(0x7ff2, 0x377a, 0xacc0, 0x62e3, 0x43, 0x47ee, 0x0, 0x0);
        gbc.writeMem(0x7ff2, { 0x4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x377a, gbc.sp());
        EXPECT(0x7ff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0081
        gbc.setState(0x36a0, 0xfc41, 0xe9a0, 0x9458, 0xa047, 0xcc5d, 0x1, 0x0);
        gbc.writeMem(0x36a0, { 0x4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfc41, gbc.sp());
        EXPECT(0x36a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0083
        gbc.setState(0x90ad, 0x4faf, 0x4300, 0x49d7, 0x7b32, 0x33f8, 0x1, 0x1);
        gbc.writeMem(0x90ad, { 0x4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4faf, gbc.sp());
        EXPECT(0x90ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x90ad));
        // 04 0084
        gbc.setState(0x2d5, 0xc9da, 0x97a0, 0x13c0, 0x45c0, 0x4e27, 0x1, 0x0);
        gbc.writeMem(0x2d5, { 0x4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc9da, gbc.sp());
        EXPECT(0x2d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0085
        gbc.setState(0x3c7a, 0xf9c9, 0x1e90, 0xc253, 0xf837, 0xffa3, 0x0, 0x0);
        gbc.writeMem(0x3c7a, { 0x4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf9c9, gbc.sp());
        EXPECT(0x3c7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0086
        gbc.setState(0x5241, 0x5ca9, 0xe010, 0x7c74, 0x90c, 0x122d, 0x0, 0x1);
        gbc.writeMem(0x5241, { 0x4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5ca9, gbc.sp());
        EXPECT(0x5242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0087
        gbc.setState(0xac4d, 0xef23, 0x9600, 0xd3e3, 0x20f0, 0xbfeb, 0x1, 0x1);
        gbc.writeMem(0xac4d, { 0x4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xef23, gbc.sp());
        EXPECT(0xac4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xac4d));
        // 04 0088
        gbc.setState(0xa690, 0x928c, 0x4350, 0xc782, 0xbd21, 0x64b6, 0x1, 0x1);
        gbc.writeMem(0xa690, { 0x4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x928c, gbc.sp());
        EXPECT(0xa691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa690));
        // 04 0089
        gbc.setState(0xd902, 0xd224, 0x2040, 0x87b2, 0xfc69, 0xee76, 0x0, 0x1);
        gbc.writeMem(0xd902, { 0x4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd224, gbc.sp());
        EXPECT(0xd903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd902));
        // 04 008A
        gbc.setState(0x5ee, 0x169e, 0xd110, 0xf7df, 0x5e93, 0x550b, 0x0, 0x0);
        gbc.writeMem(0x5ee, { 0x4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x169e, gbc.sp());
        EXPECT(0x5ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 008B
        gbc.setState(0x5915, 0x7013, 0x30b0, 0xf06e, 0xf0f5, 0x4d99, 0x1, 0x0);
        gbc.writeMem(0x5915, { 0x4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7013, gbc.sp());
        EXPECT(0x5916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 008C
        gbc.setState(0x9207, 0x1c0c, 0x2f80, 0x838f, 0x9dd8, 0x85f, 0x1, 0x0);
        gbc.writeMem(0x9207, { 0x4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1c0c, gbc.sp());
        EXPECT(0x9208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9207));
        // 04 008D
        gbc.setState(0xe575, 0x41ba, 0xcc20, 0xb3d, 0x8dae, 0x2b3f, 0x1, 0x0);
        gbc.writeMem(0xe575, { 0x4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x41ba, gbc.sp());
        EXPECT(0xe576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe575));
        // 04 008E
        gbc.setState(0x9d6, 0x8415, 0x7920, 0x50b8, 0x3d32, 0xa570, 0x1, 0x0);
        gbc.writeMem(0x9d6, { 0x4 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8415, gbc.sp());
        EXPECT(0x9d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 008F
        gbc.setState(0x4cca, 0xc99, 0x6110, 0x95f5, 0x8425, 0x9b74, 0x1, 0x1);
        gbc.writeMem(0x4cca, { 0x4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc99, gbc.sp());
        EXPECT(0x4ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0090
        gbc.setState(0x168f, 0xb006, 0x1130, 0x82e7, 0xae92, 0x3cf9, 0x1, 0x1);
        gbc.writeMem(0x168f, { 0x4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb006, gbc.sp());
        EXPECT(0x1690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0091
        gbc.setState(0x1f3e, 0xaf74, 0xe880, 0x37c, 0x6693, 0x2cf2, 0x0, 0x0);
        gbc.writeMem(0x1f3e, { 0x4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xaf74, gbc.sp());
        EXPECT(0x1f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0092
        gbc.setState(0x46e1, 0xce1e, 0x2f10, 0x8995, 0x1054, 0x703e, 0x1, 0x1);
        gbc.writeMem(0x46e1, { 0x4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xce1e, gbc.sp());
        EXPECT(0x46e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0093
        gbc.setState(0xad13, 0xe6a, 0x6c80, 0x77e3, 0xadea, 0x29f0, 0x0, 0x1);
        gbc.writeMem(0xad13, { 0x4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe6a, gbc.sp());
        EXPECT(0xad14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xad13));
        // 04 0094
        gbc.setState(0x3b4d, 0x7c44, 0x5b30, 0xb274, 0xd19e, 0x761b, 0x1, 0x1);
        gbc.writeMem(0x3b4d, { 0x4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7c44, gbc.sp());
        EXPECT(0x3b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0095
        gbc.setState(0x15e3, 0x67f9, 0xaf60, 0xe269, 0x7a84, 0x63ea, 0x0, 0x1);
        gbc.writeMem(0x15e3, { 0x4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x67f9, gbc.sp());
        EXPECT(0x15e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0096
        gbc.setState(0x856, 0x396b, 0xe800, 0x493, 0x91ff, 0xe68a, 0x1, 0x1);
        gbc.writeMem(0x856, { 0x4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x396b, gbc.sp());
        EXPECT(0x857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0097
        gbc.setState(0x2012, 0x23bd, 0xdf40, 0x4cef, 0x8635, 0xe4e9, 0x1, 0x1);
        gbc.writeMem(0x2012, { 0x4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x23bd, gbc.sp());
        EXPECT(0x2013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0098
        gbc.setState(0xa6ee, 0xffaa, 0xcb30, 0x654c, 0xd609, 0xc664, 0x1, 0x1);
        gbc.writeMem(0xa6ee, { 0x4 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xffaa, gbc.sp());
        EXPECT(0xa6ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa6ee));
        // 04 0099
        gbc.setState(0x3d77, 0x481a, 0x7410, 0xb9ac, 0x6101, 0x16e9, 0x1, 0x0);
        gbc.writeMem(0x3d77, { 0x4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x481a, gbc.sp());
        EXPECT(0x3d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 009A
        gbc.setState(0x8f42, 0x831b, 0x6cb0, 0x9e4c, 0x1a75, 0x8375, 0x0, 0x1);
        gbc.writeMem(0x8f42, { 0x4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x831b, gbc.sp());
        EXPECT(0x8f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8f42));
        // 04 009B
        gbc.setState(0x63b, 0x5305, 0x3d60, 0xd401, 0x911c, 0xeca4, 0x0, 0x0);
        gbc.writeMem(0x63b, { 0x4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5305, gbc.sp());
        EXPECT(0x63c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 009E
        gbc.setState(0x4633, 0xabc, 0x2700, 0x4eba, 0x982b, 0x7f60, 0x1, 0x1);
        gbc.writeMem(0x4633, { 0x4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xabc, gbc.sp());
        EXPECT(0x4634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 009F
        gbc.setState(0x67cf, 0xb6d8, 0x1370, 0xc850, 0xdfd1, 0xb64, 0x1, 0x0);
        gbc.writeMem(0x67cf, { 0x4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb6d8, gbc.sp());
        EXPECT(0x67d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 00A0
        gbc.setState(0xc0f7, 0xcefd, 0xc0a0, 0xfdd, 0x930a, 0x3731, 0x0, 0x0);
        gbc.writeMem(0xc0f7, { 0x4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xcefd, gbc.sp());
        EXPECT(0xc0f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc0f7));
        // 04 00A1
        gbc.setState(0xdff5, 0xe59a, 0x7f30, 0x752a, 0xe645, 0x76b6, 0x0, 0x1);
        gbc.writeMem(0xdff5, { 0x4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe59a, gbc.sp());
        EXPECT(0xdff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdff5));
        // 04 00A2
        gbc.setState(0xab62, 0xcc41, 0xb7f0, 0xbf8e, 0x469b, 0x9fea, 0x0, 0x0);
        gbc.writeMem(0xab62, { 0x4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcc41, gbc.sp());
        EXPECT(0xab63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xab62));
        // 04 00A4
        gbc.setState(0x67af, 0xd542, 0x2c70, 0x4df4, 0xbab9, 0xfa0e, 0x1, 0x0);
        gbc.writeMem(0x67af, { 0x4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd542, gbc.sp());
        EXPECT(0x67b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 00A5
        gbc.setState(0x89d0, 0xcbe8, 0xc790, 0xbf33, 0x72b2, 0x5b22, 0x1, 0x1);
        gbc.writeMem(0x89d0, { 0x4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xcbe8, gbc.sp());
        EXPECT(0x89d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x89d0));
        // 04 00A6
        gbc.setState(0x3268, 0x99b2, 0x45c0, 0xe638, 0x7547, 0x957f, 0x1, 0x1);
        gbc.writeMem(0x3268, { 0x4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x99b2, gbc.sp());
        EXPECT(0x3269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00A7
        gbc.setState(0x6b72, 0xf7fb, 0xc100, 0x7359, 0xe436, 0x8959, 0x0, 0x1);
        gbc.writeMem(0x6b72, { 0x4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf7fb, gbc.sp());
        EXPECT(0x6b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00A8
        gbc.setState(0x575f, 0x4e79, 0x4380, 0xee67, 0x9d7f, 0x7436, 0x1, 0x1);
        gbc.writeMem(0x575f, { 0x4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4e79, gbc.sp());
        EXPECT(0x5760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00A9
        gbc.setState(0xfbe, 0x87d6, 0xea80, 0x1e5d, 0xf8e0, 0x84c4, 0x0, 0x0);
        gbc.writeMem(0xfbe, { 0x4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x87d6, gbc.sp());
        EXPECT(0xfbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00AB
        gbc.setState(0x86f0, 0xbb5a, 0xdf90, 0xc69b, 0xec84, 0x626d, 0x1, 0x1);
        gbc.writeMem(0x86f0, { 0x4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xbb5a, gbc.sp());
        EXPECT(0x86f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x86f0));
        // 04 00AC
        gbc.setState(0x7a76, 0xe5d5, 0x6190, 0x5fa1, 0x14af, 0xb8b3, 0x1, 0x1);
        gbc.writeMem(0x7a76, { 0x4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe5d5, gbc.sp());
        EXPECT(0x7a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 00AD
        gbc.setState(0x8bee, 0xbaab, 0xacf0, 0x5af4, 0xdaa, 0x3685, 0x1, 0x1);
        gbc.writeMem(0x8bee, { 0x4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xbaab, gbc.sp());
        EXPECT(0x8bef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8bee));
        // 04 00AE
        gbc.setState(0x9799, 0x1fa3, 0x9d70, 0x1d3c, 0xf185, 0x5a6b, 0x0, 0x1);
        gbc.writeMem(0x9799, { 0x4 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1fa3, gbc.sp());
        EXPECT(0x979a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9799));
        // 04 00AF
        gbc.setState(0xb720, 0xa9eb, 0x2bf0, 0x7c5d, 0xea9, 0x5981, 0x1, 0x1);
        gbc.writeMem(0xb720, { 0x4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa9eb, gbc.sp());
        EXPECT(0xb721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb720));
        // 04 00B0
        gbc.setState(0x53c, 0xda8e, 0x8a0, 0x6cae, 0x40a4, 0x3233, 0x0, 0x1);
        gbc.writeMem(0x53c, { 0x4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xda8e, gbc.sp());
        EXPECT(0x53d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00B1
        gbc.setState(0x2b76, 0xf605, 0xe740, 0x44c9, 0x196d, 0xefd6, 0x1, 0x0);
        gbc.writeMem(0x2b76, { 0x4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf605, gbc.sp());
        EXPECT(0x2b77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00B2
        gbc.setState(0x534d, 0x4b9f, 0x65a0, 0x85cb, 0x4cb5, 0xab43, 0x1, 0x1);
        gbc.writeMem(0x534d, { 0x4 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4b9f, gbc.sp());
        EXPECT(0x534e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00B3
        gbc.setState(0xec54, 0x95e1, 0xc1c0, 0x35c2, 0x89d, 0xba80, 0x1, 0x0);
        gbc.writeMem(0xec54, { 0x4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x95e1, gbc.sp());
        EXPECT(0xec55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xec54));
        // 04 00B4
        gbc.setState(0x6d3, 0x3173, 0x4890, 0xab3f, 0x344a, 0xfdce, 0x0, 0x0);
        gbc.writeMem(0x6d3, { 0x4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3173, gbc.sp());
        EXPECT(0x6d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 00B5
        gbc.setState(0xc95e, 0x87ec, 0xe360, 0x311f, 0xb9c0, 0xabd4, 0x0, 0x0);
        gbc.writeMem(0xc95e, { 0x4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x87ec, gbc.sp());
        EXPECT(0xc95f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc95e));
        // 04 00B6
        gbc.setState(0x3861, 0xf13f, 0x880, 0xd849, 0xa1ce, 0x6b89, 0x0, 0x1);
        gbc.writeMem(0x3861, { 0x4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf13f, gbc.sp());
        EXPECT(0x3862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00B7
        gbc.setState(0x29c4, 0xecb2, 0x3b0, 0x64b6, 0xfbec, 0xd267, 0x0, 0x0);
        gbc.writeMem(0x29c4, { 0x4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xecb2, gbc.sp());
        EXPECT(0x29c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 00B9
        gbc.setState(0x9917, 0x83e4, 0x7f30, 0x966, 0x78be, 0x3be5, 0x1, 0x0);
        gbc.writeMem(0x9917, { 0x4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x83e4, gbc.sp());
        EXPECT(0x9918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9917));
        // 04 00BA
        gbc.setState(0x4484, 0x6da6, 0xf8b0, 0x7bb6, 0xf63f, 0x8d11, 0x0, 0x1);
        gbc.writeMem(0x4484, { 0x4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6da6, gbc.sp());
        EXPECT(0x4485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 00BB
        gbc.setState(0x66c4, 0xc51d, 0xf270, 0x28e8, 0xc872, 0x1a53, 0x0, 0x0);
        gbc.writeMem(0x66c4, { 0x4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc51d, gbc.sp());
        EXPECT(0x66c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 00BC
        gbc.setState(0xcbc8, 0x86b1, 0xa50, 0xa6d8, 0x47e6, 0x2064, 0x1, 0x1);
        gbc.writeMem(0xcbc8, { 0x4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x86b1, gbc.sp());
        EXPECT(0xcbc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xcbc8));
        // 04 00BD
        gbc.setState(0x199e, 0x72bf, 0xd450, 0xb2b5, 0x726b, 0x2e50, 0x0, 0x1);
        gbc.writeMem(0x199e, { 0x4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x72bf, gbc.sp());
        EXPECT(0x199f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 00BE
        gbc.setState(0xd053, 0xb904, 0xd0c0, 0x68ba, 0xf62b, 0x2508, 0x1, 0x0);
        gbc.writeMem(0xd053, { 0x4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb904, gbc.sp());
        EXPECT(0xd054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd053));
        // 04 00BF
        gbc.setState(0xcf95, 0x3c53, 0xec0, 0x54ab, 0x104a, 0xf184, 0x1, 0x1);
        gbc.writeMem(0xcf95, { 0x4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3c53, gbc.sp());
        EXPECT(0xcf96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xcf95));
        // 04 00C0
        gbc.setState(0x56b7, 0xb859, 0x4be0, 0xa506, 0x5e54, 0xbba6, 0x0, 0x1);
        gbc.writeMem(0x56b7, { 0x4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb859, gbc.sp());
        EXPECT(0x56b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00C1
        gbc.setState(0x32c2, 0x5e45, 0xe160, 0xdfcb, 0x5717, 0x139e, 0x0, 0x0);
        gbc.writeMem(0x32c2, { 0x4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5e45, gbc.sp());
        EXPECT(0x32c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00C2
        gbc.setState(0x6511, 0x9ad2, 0x5960, 0x6029, 0x7418, 0xf745, 0x1, 0x0);
        gbc.writeMem(0x6511, { 0x4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9ad2, gbc.sp());
        EXPECT(0x6512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00C3
        gbc.setState(0x8ddf, 0x115b, 0x560, 0x1075, 0x2f26, 0x6aa, 0x0, 0x0);
        gbc.writeMem(0x8ddf, { 0x4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x115b, gbc.sp());
        EXPECT(0x8de0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8ddf));
        // 04 00C4
        gbc.setState(0x88f7, 0xea7c, 0x3a20, 0x35aa, 0x57b7, 0xcd97, 0x0, 0x1);
        gbc.writeMem(0x88f7, { 0x4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xea7c, gbc.sp());
        EXPECT(0x88f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x88f7));
        // 04 00C5
        gbc.setState(0x3089, 0xf0ad, 0xbc20, 0x9940, 0x7018, 0x668b, 0x0, 0x0);
        gbc.writeMem(0x3089, { 0x4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf0ad, gbc.sp());
        EXPECT(0x308a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00C6
        gbc.setState(0x78c1, 0x8761, 0xa7b0, 0xf37e, 0xf09c, 0x2499, 0x1, 0x1);
        gbc.writeMem(0x78c1, { 0x4 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8761, gbc.sp());
        EXPECT(0x78c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 00C7
        gbc.setState(0xab8, 0xa93, 0xfad0, 0xa3f7, 0x37d6, 0x25b0, 0x1, 0x0);
        gbc.writeMem(0xab8, { 0x4 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa93, gbc.sp());
        EXPECT(0xab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 00C8
        gbc.setState(0xba3f, 0x121f, 0x59f0, 0x223d, 0xb73e, 0x4143, 0x1, 0x1);
        gbc.writeMem(0xba3f, { 0x4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x121f, gbc.sp());
        EXPECT(0xba40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xba3f));
        // 04 00C9
        gbc.setState(0xeb71, 0x7784, 0x2cf0, 0x9604, 0xd16b, 0x1d32, 0x0, 0x0);
        gbc.writeMem(0xeb71, { 0x4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7784, gbc.sp());
        EXPECT(0xeb72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xeb71));
        // 04 00CA
        gbc.setState(0xaf7, 0x8df4, 0x84d0, 0x735a, 0x62a6, 0xb0e0, 0x0, 0x1);
        gbc.writeMem(0xaf7, { 0x4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8df4, gbc.sp());
        EXPECT(0xaf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 00CB
        gbc.setState(0xe27, 0x4635, 0xa580, 0xb8cb, 0xa45b, 0xd8d3, 0x1, 0x0);
        gbc.writeMem(0xe27, { 0x4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4635, gbc.sp());
        EXPECT(0xe28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00CC
        gbc.setState(0xadbb, 0xb1fb, 0x2f00, 0x3eb0, 0xf2fc, 0x5e77, 0x1, 0x0);
        gbc.writeMem(0xadbb, { 0x4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb1fb, gbc.sp());
        EXPECT(0xadbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xadbb));
        // 04 00CD
        gbc.setState(0xa061, 0x148, 0x3a40, 0xb14a, 0xb268, 0x854e, 0x0, 0x1);
        gbc.writeMem(0xa061, { 0x4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x148, gbc.sp());
        EXPECT(0xa062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa061));
        // 04 00CE
        gbc.setState(0x7c68, 0x3084, 0xae10, 0x2691, 0xfa06, 0x2621, 0x1, 0x1);
        gbc.writeMem(0x7c68, { 0x4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3084, gbc.sp());
        EXPECT(0x7c69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 00CF
        gbc.setState(0x21b1, 0xaafb, 0x4240, 0x843d, 0x1722, 0x74e8, 0x1, 0x1);
        gbc.writeMem(0x21b1, { 0x4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xaafb, gbc.sp());
        EXPECT(0x21b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00D0
        gbc.setState(0xefa, 0xfd61, 0x4a30, 0x45f4, 0x343, 0x9a39, 0x0, 0x1);
        gbc.writeMem(0xefa, { 0x4 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xfd61, gbc.sp());
        EXPECT(0xefb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 00D1
        gbc.setState(0x34e3, 0xcd90, 0x9840, 0x774f, 0x19b5, 0x3d12, 0x0, 0x1);
        gbc.writeMem(0x34e3, { 0x4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xcd90, gbc.sp());
        EXPECT(0x34e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00D2
        gbc.setState(0x3aec, 0x8d83, 0xb500, 0x5ac3, 0xe674, 0xbbc7, 0x0, 0x0);
        gbc.writeMem(0x3aec, { 0x4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8d83, gbc.sp());
        EXPECT(0x3aed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00D3
        gbc.setState(0x62c4, 0xd267, 0xb990, 0x6173, 0x3639, 0x1777, 0x1, 0x0);
        gbc.writeMem(0x62c4, { 0x4 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd267, gbc.sp());
        EXPECT(0x62c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 00D4
        gbc.setState(0x6e0, 0x2bca, 0xc990, 0x9bcd, 0xa3ec, 0x8b94, 0x0, 0x0);
        gbc.writeMem(0x6e0, { 0x4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2bca, gbc.sp());
        EXPECT(0x6e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 00D5
        gbc.setState(0xded4, 0x3a69, 0xdae0, 0xf159, 0xd389, 0xc8, 0x0, 0x0);
        gbc.writeMem(0xded4, { 0x4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3a69, gbc.sp());
        EXPECT(0xded5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xded4));
        // 04 00D6
        gbc.setState(0x9a4b, 0x4d1c, 0x2330, 0x1447, 0xb236, 0xd48e, 0x0, 0x1);
        gbc.writeMem(0x9a4b, { 0x4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4d1c, gbc.sp());
        EXPECT(0x9a4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9a4b));
        // 04 00D7
        gbc.setState(0xaba4, 0x6748, 0x5f20, 0x7c90, 0x4b39, 0x6c88, 0x0, 0x0);
        gbc.writeMem(0xaba4, { 0x4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6748, gbc.sp());
        EXPECT(0xaba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xaba4));
        // 04 00D8
        gbc.setState(0xb2f6, 0x3558, 0x5ba0, 0x94f6, 0x7c9e, 0xab8b, 0x0, 0x1);
        gbc.writeMem(0xb2f6, { 0x4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3558, gbc.sp());
        EXPECT(0xb2f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb2f6));
        // 04 00D9
        gbc.setState(0x3607, 0x4c3, 0x1950, 0xbdfc, 0x67ef, 0xc25b, 0x0, 0x0);
        gbc.writeMem(0x3607, { 0x4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4c3, gbc.sp());
        EXPECT(0x3608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 00DA
        gbc.setState(0x5ce3, 0xb611, 0xcfa0, 0xcbc3, 0xb9d2, 0x4845, 0x0, 0x1);
        gbc.writeMem(0x5ce3, { 0x4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb611, gbc.sp());
        EXPECT(0x5ce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00DB
        gbc.setState(0x31d5, 0x63b8, 0xfc70, 0xdb8a, 0x97e5, 0x571d, 0x1, 0x1);
        gbc.writeMem(0x31d5, { 0x4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x63b8, gbc.sp());
        EXPECT(0x31d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 00DC
        gbc.setState(0xd5e6, 0x86b9, 0xa3b0, 0x3dba, 0x6e47, 0x5e37, 0x1, 0x1);
        gbc.writeMem(0xd5e6, { 0x4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x86b9, gbc.sp());
        EXPECT(0xd5e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd5e6));
        // 04 00DD
        gbc.setState(0x8552, 0xbc13, 0xfa40, 0x62b5, 0xd1c5, 0x685c, 0x0, 0x0);
        gbc.writeMem(0x8552, { 0x4 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xbc13, gbc.sp());
        EXPECT(0x8553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8552));
        // 04 00DE
        gbc.setState(0xc2ff, 0x5dff, 0x1ef0, 0x7417, 0xb66e, 0x2c5a, 0x0, 0x0);
        gbc.writeMem(0xc2ff, { 0x4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5dff, gbc.sp());
        EXPECT(0xc300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc2ff));
        // 04 00DF
        gbc.setState(0x78e7, 0xa709, 0x10, 0xae79, 0xc451, 0xf045, 0x1, 0x0);
        gbc.writeMem(0x78e7, { 0x4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa709, gbc.sp());
        EXPECT(0x78e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 00E0
        gbc.setState(0xb5f4, 0x22c4, 0x8130, 0x913d, 0x9a01, 0x1802, 0x0, 0x1);
        gbc.writeMem(0xb5f4, { 0x4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x22c4, gbc.sp());
        EXPECT(0xb5f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb5f4));
        // 04 00E1
        gbc.setState(0xec20, 0xf23, 0x4bb0, 0x9d6b, 0x6ff, 0xff57, 0x1, 0x1);
        gbc.writeMem(0xec20, { 0x4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf23, gbc.sp());
        EXPECT(0xec21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xec20));
        // 04 00E2
        gbc.setState(0x1292, 0xb67, 0x6050, 0xf56d, 0x27d0, 0xaa28, 0x1, 0x0);
        gbc.writeMem(0x1292, { 0x4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb67, gbc.sp());
        EXPECT(0x1293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 00E3
        gbc.setState(0x5947, 0x7e00, 0x7260, 0x4ba8, 0xfe0, 0x49c5, 0x1, 0x0);
        gbc.writeMem(0x5947, { 0x4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7e00, gbc.sp());
        EXPECT(0x5948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00E4
        gbc.setState(0x3520, 0x18f7, 0x5520, 0x7d3c, 0xdf36, 0x35b7, 0x0, 0x1);
        gbc.writeMem(0x3520, { 0x4 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x18f7, gbc.sp());
        EXPECT(0x3521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00E5
        gbc.setState(0x7148, 0xc34a, 0x36c0, 0xb97f, 0xc20c, 0x1172, 0x1, 0x1);
        gbc.writeMem(0x7148, { 0x4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc34a, gbc.sp());
        EXPECT(0x7149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00E6
        gbc.setState(0xd256, 0x74e1, 0xe5f0, 0xc33f, 0xac6b, 0xcaf6, 0x1, 0x0);
        gbc.writeMem(0xd256, { 0x4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x74e1, gbc.sp());
        EXPECT(0xd257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd256));
        // 04 00E7
        gbc.setState(0x9759, 0x95a3, 0x5250, 0x1e64, 0x3b48, 0xf52f, 0x0, 0x0);
        gbc.writeMem(0x9759, { 0x4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x95a3, gbc.sp());
        EXPECT(0x975a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9759));
        // 04 00E9
        gbc.setState(0xd7b9, 0x7ad9, 0xc870, 0xe515, 0x4182, 0x6cef, 0x1, 0x1);
        gbc.writeMem(0xd7b9, { 0x4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7ad9, gbc.sp());
        EXPECT(0xd7ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd7b9));
        // 04 00EB
        gbc.setState(0xecb5, 0x5f8b, 0x1350, 0x4b67, 0x578d, 0xfc5, 0x0, 0x1);
        gbc.writeMem(0xecb5, { 0x4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5f8b, gbc.sp());
        EXPECT(0xecb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xecb5));
        // 04 00EC
        gbc.setState(0x2b34, 0xef3b, 0x64e0, 0x2a7a, 0xfdf0, 0x734e, 0x0, 0x0);
        gbc.writeMem(0x2b34, { 0x4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xef3b, gbc.sp());
        EXPECT(0x2b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00ED
        gbc.setState(0xa870, 0x383a, 0x4680, 0x4ef5, 0xf324, 0x459f, 0x0, 0x1);
        gbc.writeMem(0xa870, { 0x4 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x383a, gbc.sp());
        EXPECT(0xa871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa870));
        // 04 00EE
        gbc.setState(0x9f7c, 0x99ff, 0xeef0, 0x8e11, 0xb70a, 0xc67e, 0x1, 0x1);
        gbc.writeMem(0x9f7c, { 0x4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x99ff, gbc.sp());
        EXPECT(0x9f7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9f7c));
        // 04 00EF
        gbc.setState(0x37f4, 0xc802, 0x43b0, 0xce59, 0x72c3, 0x5153, 0x0, 0x0);
        gbc.writeMem(0x37f4, { 0x4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc802, gbc.sp());
        EXPECT(0x37f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 00F0
        gbc.setState(0x2f18, 0xc4bd, 0xd230, 0xb1ec, 0x6566, 0x7ddf, 0x1, 0x0);
        gbc.writeMem(0x2f18, { 0x4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc4bd, gbc.sp());
        EXPECT(0x2f19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 00F1
        gbc.setState(0xe619, 0xd4d1, 0x5820, 0x29de, 0x689c, 0x1126, 0x1, 0x1);
        gbc.writeMem(0xe619, { 0x4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd4d1, gbc.sp());
        EXPECT(0xe61a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe619));
        // 04 00F2
        gbc.setState(0xa501, 0xbf6a, 0xf270, 0x5fe9, 0xd70f, 0x9e56, 0x0, 0x0);
        gbc.writeMem(0xa501, { 0x4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbf6a, gbc.sp());
        EXPECT(0xa502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa501));
        // 04 00F3
        gbc.setState(0x6232, 0xfe83, 0xcaf0, 0x1f7e, 0xbafd, 0xac1e, 0x1, 0x1);
        gbc.writeMem(0x6232, { 0x4 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfe83, gbc.sp());
        EXPECT(0x6233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 00F4
        gbc.setState(0xee62, 0xc22d, 0x5fa0, 0x126, 0xf573, 0x93c, 0x1, 0x1);
        gbc.writeMem(0xee62, { 0x4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc22d, gbc.sp());
        EXPECT(0xee63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xee62));
        // 04 00F6
        gbc.setState(0x5d80, 0x8e4, 0x3ea0, 0xf075, 0x71fe, 0xb375, 0x0, 0x0);
        gbc.writeMem(0x5d80, { 0x4 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8e4, gbc.sp());
        EXPECT(0x5d81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00F7
        gbc.setState(0xe01f, 0x4ffc, 0x9ee0, 0x5cb2, 0xb6e1, 0x751b, 0x1, 0x1);
        gbc.writeMem(0xe01f, { 0x4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4ffc, gbc.sp());
        EXPECT(0xe020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe01f));
        // 04 00F8
        gbc.setState(0x4393, 0x1dc1, 0xda40, 0xb0cd, 0x1f65, 0xf18e, 0x0, 0x1);
        gbc.writeMem(0x4393, { 0x4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1dc1, gbc.sp());
        EXPECT(0x4394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 00F9
        gbc.setState(0xadc5, 0xd8b7, 0xed90, 0x959e, 0x9866, 0xc23f, 0x0, 0x0);
        gbc.writeMem(0xadc5, { 0x4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd8b7, gbc.sp());
        EXPECT(0xadc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xadc5));
        // 04 00FA
        gbc.setState(0xbab9, 0x821c, 0x7500, 0x1ecc, 0x3ad3, 0xeab8, 0x0, 0x1);
        gbc.writeMem(0xbab9, { 0x4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x821c, gbc.sp());
        EXPECT(0xbaba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xbab9));
        // 04 00FB
        gbc.setState(0x8b9c, 0xf9d1, 0xb910, 0x58bd, 0x62a0, 0x3938, 0x1, 0x1);
        gbc.writeMem(0x8b9c, { 0x4 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf9d1, gbc.sp());
        EXPECT(0x8b9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8b9c));
        // 04 00FC
        gbc.setState(0xa086, 0x3a22, 0x80c0, 0x58c6, 0xafe0, 0xbbfc, 0x1, 0x1);
        gbc.writeMem(0xa086, { 0x4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3a22, gbc.sp());
        EXPECT(0xa087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa086));
        // 04 00FD
        gbc.setState(0xc15c, 0x35d6, 0x1620, 0xad77, 0xdb71, 0xf53f, 0x0, 0x0);
        gbc.writeMem(0xc15c, { 0x4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x35d6, gbc.sp());
        EXPECT(0xc15d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc15c));
        // 04 00FE
        gbc.setState(0xae8f, 0xb39c, 0xd330, 0x37ba, 0xfe55, 0x4ad3, 0x1, 0x0);
        gbc.writeMem(0xae8f, { 0x4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb39c, gbc.sp());
        EXPECT(0xae90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xae8f));
        // 04 00FF
        gbc.setState(0x9e98, 0xf337, 0xae40, 0xce04, 0xa958, 0xd999, 0x0, 0x0);
        gbc.writeMem(0x9e98, { 0x4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf337, gbc.sp());
        EXPECT(0x9e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9e98));
        // 04 0100
        gbc.setState(0x5bdd, 0x1129, 0x7810, 0x18f8, 0x978a, 0x13a1, 0x1, 0x1);
        gbc.writeMem(0x5bdd, { 0x4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1129, gbc.sp());
        EXPECT(0x5bde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0101
        gbc.setState(0xbeab, 0xb330, 0x6af0, 0x7d11, 0xf790, 0x8faf, 0x1, 0x1);
        gbc.writeMem(0xbeab, { 0x4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb330, gbc.sp());
        EXPECT(0xbeac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xbeab));
        // 04 0102
        gbc.setState(0x88db, 0xe3b4, 0xcb0, 0x4134, 0x6172, 0x4a40, 0x1, 0x1);
        gbc.writeMem(0x88db, { 0x4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe3b4, gbc.sp());
        EXPECT(0x88dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x88db));
        // 04 0103
        gbc.setState(0x2e7, 0xcd04, 0xa1c0, 0xcb30, 0x658e, 0xc3eb, 0x0, 0x1);
        gbc.writeMem(0x2e7, { 0x4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcd04, gbc.sp());
        EXPECT(0x2e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0104
        gbc.setState(0xc2b9, 0x9f52, 0x8bf0, 0x1f35, 0xa021, 0x83ea, 0x1, 0x0);
        gbc.writeMem(0xc2b9, { 0x4 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9f52, gbc.sp());
        EXPECT(0xc2ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc2b9));
        // 04 0105
        gbc.setState(0x50c0, 0xa4d2, 0xe010, 0x907b, 0x5948, 0xe5bb, 0x1, 0x0);
        gbc.writeMem(0x50c0, { 0x4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa4d2, gbc.sp());
        EXPECT(0x50c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0106
        gbc.setState(0xd866, 0x1976, 0xe620, 0x512b, 0x4425, 0xf052, 0x1, 0x0);
        gbc.writeMem(0xd866, { 0x4 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1976, gbc.sp());
        EXPECT(0xd867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd866));
        // 04 0107
        gbc.setState(0x3f47, 0xe080, 0x4740, 0x2cee, 0x7cdf, 0xd544, 0x0, 0x0);
        gbc.writeMem(0x3f47, { 0x4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe080, gbc.sp());
        EXPECT(0x3f48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0108
        gbc.setState(0xe3be, 0x93e3, 0xf070, 0x5e6, 0x46bd, 0x7dfd, 0x0, 0x0);
        gbc.writeMem(0xe3be, { 0x4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x93e3, gbc.sp());
        EXPECT(0xe3bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe3be));
        // 04 0109
        gbc.setState(0xb251, 0x7f12, 0xe580, 0x8637, 0x93a4, 0xe73e, 0x1, 0x0);
        gbc.writeMem(0xb251, { 0x4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7f12, gbc.sp());
        EXPECT(0xb252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb251));
        // 04 010A
        gbc.setState(0xed5f, 0x230c, 0xd600, 0xfe94, 0x4a38, 0x8fa1, 0x1, 0x1);
        gbc.writeMem(0xed5f, { 0x4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x230c, gbc.sp());
        EXPECT(0xed60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xed5f));
        // 04 010B
        gbc.setState(0xdb84, 0xcb7b, 0xaa0, 0x4a18, 0x85b2, 0x17e1, 0x1, 0x0);
        gbc.writeMem(0xdb84, { 0x4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xcb7b, gbc.sp());
        EXPECT(0xdb85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdb84));
        // 04 010C
        gbc.setState(0x2471, 0xe72c, 0xbc60, 0xe0b4, 0x51c9, 0x1045, 0x1, 0x1);
        gbc.writeMem(0x2471, { 0x4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe72c, gbc.sp());
        EXPECT(0x2472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 010D
        gbc.setState(0xe009, 0x237f, 0xf1e0, 0x4bc6, 0x5b13, 0xe74c, 0x0, 0x1);
        gbc.writeMem(0xe009, { 0x4 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x237f, gbc.sp());
        EXPECT(0xe00a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe009));
        // 04 010E
        gbc.setState(0x33f0, 0x43c5, 0xbb20, 0x3d5d, 0x6812, 0x323d, 0x1, 0x1);
        gbc.writeMem(0x33f0, { 0x4 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x43c5, gbc.sp());
        EXPECT(0x33f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0110
        gbc.setState(0x96b5, 0xaef7, 0x1b20, 0x44f6, 0xbc50, 0x5027, 0x0, 0x0);
        gbc.writeMem(0x96b5, { 0x4 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xaef7, gbc.sp());
        EXPECT(0x96b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x96b5));
        // 04 0111
        gbc.setState(0xda09, 0x2796, 0x8870, 0x7cf7, 0xb68d, 0xc5, 0x1, 0x0);
        gbc.writeMem(0xda09, { 0x4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2796, gbc.sp());
        EXPECT(0xda0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xda09));
        // 04 0112
        gbc.setState(0x2cb2, 0x6ebe, 0x4260, 0x4f5b, 0x21c6, 0x9f35, 0x0, 0x1);
        gbc.writeMem(0x2cb2, { 0x4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6ebe, gbc.sp());
        EXPECT(0x2cb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0113
        gbc.setState(0x4650, 0xd88a, 0x90, 0x52fd, 0xae76, 0xbcbb, 0x1, 0x1);
        gbc.writeMem(0x4650, { 0x4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd88a, gbc.sp());
        EXPECT(0x4651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0114
        gbc.setState(0x3fbd, 0x6931, 0xccb0, 0xd0e7, 0xdf87, 0x6325, 0x0, 0x1);
        gbc.writeMem(0x3fbd, { 0x4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6931, gbc.sp());
        EXPECT(0x3fbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0116
        gbc.setState(0xeb2b, 0x919c, 0x53a0, 0x9528, 0x510c, 0x55e6, 0x1, 0x0);
        gbc.writeMem(0xeb2b, { 0x4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x919c, gbc.sp());
        EXPECT(0xeb2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xeb2b));
        // 04 0117
        gbc.setState(0x915c, 0xfc56, 0x7820, 0x1412, 0xc393, 0x474e, 0x0, 0x0);
        gbc.writeMem(0x915c, { 0x4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfc56, gbc.sp());
        EXPECT(0x915d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x915c));
        // 04 0118
        gbc.setState(0x4532, 0x51e0, 0x5db0, 0x6730, 0x955f, 0x703a, 0x0, 0x1);
        gbc.writeMem(0x4532, { 0x4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x51e0, gbc.sp());
        EXPECT(0x4533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0119
        gbc.setState(0x6c2e, 0xcd23, 0xd80, 0x5a39, 0x5e2f, 0x7e89, 0x1, 0x0);
        gbc.writeMem(0x6c2e, { 0x4 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xcd23, gbc.sp());
        EXPECT(0x6c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 011A
        gbc.setState(0x201d, 0xd54, 0xf7c0, 0xeacc, 0xd55e, 0x8419, 0x0, 0x0);
        gbc.writeMem(0x201d, { 0x4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd54, gbc.sp());
        EXPECT(0x201e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 011C
        gbc.setState(0xa261, 0x1d65, 0xbcb0, 0xe8af, 0x3118, 0x22a5, 0x0, 0x0);
        gbc.writeMem(0xa261, { 0x4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1d65, gbc.sp());
        EXPECT(0xa262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa261));
        // 04 011D
        gbc.setState(0x7de8, 0xd3a3, 0x1a00, 0x4891, 0x156b, 0x87e7, 0x1, 0x0);
        gbc.writeMem(0x7de8, { 0x4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd3a3, gbc.sp());
        EXPECT(0x7de9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 011E
        gbc.setState(0x3fb6, 0xd24a, 0xa8b0, 0xfaf6, 0xc172, 0x273c, 0x0, 0x0);
        gbc.writeMem(0x3fb6, { 0x4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd24a, gbc.sp());
        EXPECT(0x3fb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 011F
        gbc.setState(0xa470, 0xe0ae, 0x5240, 0xed42, 0x7b14, 0x5fca, 0x1, 0x0);
        gbc.writeMem(0xa470, { 0x4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe0ae, gbc.sp());
        EXPECT(0xa471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa470));
        // 04 0120
        gbc.setState(0x651a, 0x3576, 0x2520, 0x556b, 0xc907, 0x303b, 0x0, 0x0);
        gbc.writeMem(0x651a, { 0x4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3576, gbc.sp());
        EXPECT(0x651b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0121
        gbc.setState(0x6637, 0x887d, 0xb6e0, 0xd60f, 0xcc65, 0xd4b, 0x1, 0x0);
        gbc.writeMem(0x6637, { 0x4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x887d, gbc.sp());
        EXPECT(0x6638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0122
        gbc.setState(0xdca9, 0xb2c7, 0x92a0, 0xb45f, 0x28df, 0xbb91, 0x0, 0x0);
        gbc.writeMem(0xdca9, { 0x4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb2c7, gbc.sp());
        EXPECT(0xdcaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdca9));
        // 04 0123
        gbc.setState(0x2edf, 0x6a40, 0xcbd0, 0xd868, 0x5cd8, 0xe772, 0x1, 0x0);
        gbc.writeMem(0x2edf, { 0x4 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6a40, gbc.sp());
        EXPECT(0x2ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0124
        gbc.setState(0xef92, 0xac01, 0x3f30, 0x1b54, 0xe27f, 0xfa47, 0x1, 0x0);
        gbc.writeMem(0xef92, { 0x4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xac01, gbc.sp());
        EXPECT(0xef93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xef92));
        // 04 0125
        gbc.setState(0xce32, 0x6a10, 0xdfd0, 0x8dad, 0x3d45, 0xa59c, 0x0, 0x1);
        gbc.writeMem(0xce32, { 0x4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6a10, gbc.sp());
        EXPECT(0xce33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xce32));
        // 04 0126
        gbc.setState(0xb6b3, 0xd590, 0xc670, 0xfe72, 0x5f95, 0xb77f, 0x0, 0x0);
        gbc.writeMem(0xb6b3, { 0x4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd590, gbc.sp());
        EXPECT(0xb6b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb6b3));
        // 04 0127
        gbc.setState(0x2511, 0xa697, 0x2620, 0x3720, 0xabac, 0xa409, 0x0, 0x1);
        gbc.writeMem(0x2511, { 0x4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa697, gbc.sp());
        EXPECT(0x2512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0128
        gbc.setState(0x571b, 0x5206, 0x4090, 0xb3d, 0x831d, 0x8c8a, 0x0, 0x0);
        gbc.writeMem(0x571b, { 0x4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5206, gbc.sp());
        EXPECT(0x571c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0129
        gbc.setState(0x3d28, 0x7343, 0xa5f0, 0x2918, 0x33b3, 0xd8c6, 0x1, 0x0);
        gbc.writeMem(0x3d28, { 0x4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7343, gbc.sp());
        EXPECT(0x3d29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 012A
        gbc.setState(0x4aab, 0x3e96, 0xc650, 0x461a, 0x6fdc, 0x596b, 0x0, 0x1);
        gbc.writeMem(0x4aab, { 0x4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3e96, gbc.sp());
        EXPECT(0x4aac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 012B
        gbc.setState(0x64d5, 0x45ee, 0x9290, 0x183b, 0x5121, 0x5c31, 0x0, 0x0);
        gbc.writeMem(0x64d5, { 0x4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x45ee, gbc.sp());
        EXPECT(0x64d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 012C
        gbc.setState(0x186d, 0x9d52, 0xee0, 0xcc6d, 0x4dd7, 0xbd2a, 0x1, 0x0);
        gbc.writeMem(0x186d, { 0x4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9d52, gbc.sp());
        EXPECT(0x186e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 012D
        gbc.setState(0x9640, 0x57e8, 0x4c90, 0x44b2, 0x17fb, 0x61a3, 0x1, 0x0);
        gbc.writeMem(0x9640, { 0x4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x57e8, gbc.sp());
        EXPECT(0x9641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9640));
        // 04 012E
        gbc.setState(0x5aa1, 0x6660, 0x3590, 0x394d, 0xaee5, 0xcac6, 0x1, 0x1);
        gbc.writeMem(0x5aa1, { 0x4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6660, gbc.sp());
        EXPECT(0x5aa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 012F
        gbc.setState(0x369a, 0x7e0d, 0x2d80, 0x1621, 0x5fef, 0xcbcc, 0x0, 0x1);
        gbc.writeMem(0x369a, { 0x4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7e0d, gbc.sp());
        EXPECT(0x369b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0130
        gbc.setState(0xc7b6, 0xb0a, 0xa540, 0xc00e, 0x1a07, 0x545e, 0x0, 0x0);
        gbc.writeMem(0xc7b6, { 0x4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb0a, gbc.sp());
        EXPECT(0xc7b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc7b6));
        // 04 0132
        gbc.setState(0x80d1, 0x7ca9, 0xf1a0, 0xc874, 0xf374, 0x6ef9, 0x0, 0x0);
        gbc.writeMem(0x80d1, { 0x4 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7ca9, gbc.sp());
        EXPECT(0x80d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x80d1));
        // 04 0133
        gbc.setState(0x3748, 0xfe74, 0xbd00, 0x663b, 0xfc5f, 0x7c75, 0x1, 0x0);
        gbc.writeMem(0x3748, { 0x4 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfe74, gbc.sp());
        EXPECT(0x3749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0134
        gbc.setState(0x9bb1, 0x2944, 0xbba0, 0x8239, 0x3b02, 0x8f4a, 0x0, 0x0);
        gbc.writeMem(0x9bb1, { 0x4 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2944, gbc.sp());
        EXPECT(0x9bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9bb1));
        // 04 0135
        gbc.setState(0xa92f, 0x5606, 0x8f10, 0xff69, 0x6038, 0xebf7, 0x0, 0x0);
        gbc.writeMem(0xa92f, { 0x4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5606, gbc.sp());
        EXPECT(0xa930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa92f));
        // 04 0136
        gbc.setState(0x9159, 0x583a, 0xd2b0, 0xf845, 0xec4, 0x78ce, 0x0, 0x0);
        gbc.writeMem(0x9159, { 0x4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x583a, gbc.sp());
        EXPECT(0x915a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9159));
        // 04 0137
        gbc.setState(0xa263, 0x4732, 0x6bb0, 0x376d, 0x10ec, 0xc735, 0x0, 0x1);
        gbc.writeMem(0xa263, { 0x4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4732, gbc.sp());
        EXPECT(0xa264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa263));
        // 04 0138
        gbc.setState(0x4ad3, 0xf63c, 0x9c00, 0x74ba, 0xcc0d, 0xb5c9, 0x0, 0x1);
        gbc.writeMem(0x4ad3, { 0x4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf63c, gbc.sp());
        EXPECT(0x4ad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0139
        gbc.setState(0x57b4, 0x83c, 0xcc40, 0xe55, 0xe8e6, 0x81f3, 0x0, 0x0);
        gbc.writeMem(0x57b4, { 0x4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x83c, gbc.sp());
        EXPECT(0x57b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 013A
        gbc.setState(0x653f, 0x81e7, 0xe7a0, 0x826a, 0x2ab0, 0xea5b, 0x0, 0x0);
        gbc.writeMem(0x653f, { 0x4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x81e7, gbc.sp());
        EXPECT(0x6540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 013C
        gbc.setState(0xcf20, 0xccc6, 0xb3d0, 0x5aee, 0x61d1, 0xaa85, 0x1, 0x0);
        gbc.writeMem(0xcf20, { 0x4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xccc6, gbc.sp());
        EXPECT(0xcf21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xcf20));
        // 04 013D
        gbc.setState(0x49, 0x4164, 0x86a0, 0x7778, 0x96e7, 0xc4a4, 0x1, 0x0);
        gbc.writeMem(0x49, { 0x4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4164, gbc.sp());
        EXPECT(0x4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 013E
        gbc.setState(0xa9e5, 0x6ea3, 0xed00, 0x28f8, 0xf01c, 0x2276, 0x0, 0x1);
        gbc.writeMem(0xa9e5, { 0x4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6ea3, gbc.sp());
        EXPECT(0xa9e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa9e5));
        // 04 013F
        gbc.setState(0x1a89, 0x1150, 0x6c50, 0xbb21, 0xe9aa, 0x7540, 0x1, 0x1);
        gbc.writeMem(0x1a89, { 0x4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1150, gbc.sp());
        EXPECT(0x1a8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0140
        gbc.setState(0xb0cb, 0x1365, 0xde40, 0x4fc3, 0x23a7, 0x82a8, 0x0, 0x1);
        gbc.writeMem(0xb0cb, { 0x4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1365, gbc.sp());
        EXPECT(0xb0cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb0cb));
        // 04 0141
        gbc.setState(0xe01d, 0x3331, 0xffe0, 0xe938, 0x31aa, 0x3ba9, 0x1, 0x1);
        gbc.writeMem(0xe01d, { 0x4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3331, gbc.sp());
        EXPECT(0xe01e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe01d));
        // 04 0142
        gbc.setState(0xa592, 0xfbcb, 0x8a50, 0x40b3, 0xfa99, 0x2810, 0x1, 0x0);
        gbc.writeMem(0xa592, { 0x4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xfbcb, gbc.sp());
        EXPECT(0xa593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa592));
        // 04 0143
        gbc.setState(0x27ae, 0x365f, 0xce90, 0x7c4c, 0xa27f, 0xfdfe, 0x1, 0x0);
        gbc.writeMem(0x27ae, { 0x4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x365f, gbc.sp());
        EXPECT(0x27af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0144
        gbc.setState(0x78b3, 0x360e, 0xfa80, 0xeb2f, 0xe4ae, 0x7ade, 0x1, 0x1);
        gbc.writeMem(0x78b3, { 0x4 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x360e, gbc.sp());
        EXPECT(0x78b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0145
        gbc.setState(0x61d, 0xfa01, 0xa3a0, 0x8b80, 0x4aa9, 0x4087, 0x0, 0x1);
        gbc.writeMem(0x61d, { 0x4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfa01, gbc.sp());
        EXPECT(0x61e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0146
        gbc.setState(0x338a, 0x3de3, 0xb060, 0x5974, 0x3e53, 0x1b2d, 0x0, 0x1);
        gbc.writeMem(0x338a, { 0x4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3de3, gbc.sp());
        EXPECT(0x338b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0147
        gbc.setState(0x820f, 0x2eb7, 0x1720, 0x3fa2, 0x2ad1, 0xdfdd, 0x0, 0x1);
        gbc.writeMem(0x820f, { 0x4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2eb7, gbc.sp());
        EXPECT(0x8210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x820f));
        // 04 0148
        gbc.setState(0x2da8, 0x6d75, 0x7480, 0x5b91, 0xf356, 0xb694, 0x1, 0x0);
        gbc.writeMem(0x2da8, { 0x4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6d75, gbc.sp());
        EXPECT(0x2da9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0149
        gbc.setState(0x3d98, 0x447, 0xd110, 0xfdb9, 0x1d87, 0xa476, 0x1, 0x1);
        gbc.writeMem(0x3d98, { 0x4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x447, gbc.sp());
        EXPECT(0x3d99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 014A
        gbc.setState(0x2cfe, 0x9ac5, 0xd060, 0x2325, 0x20aa, 0xac3f, 0x0, 0x1);
        gbc.writeMem(0x2cfe, { 0x4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9ac5, gbc.sp());
        EXPECT(0x2cff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 014B
        gbc.setState(0xedcb, 0xc39f, 0x9800, 0xb535, 0x8d0e, 0xc5c9, 0x1, 0x0);
        gbc.writeMem(0xedcb, { 0x4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc39f, gbc.sp());
        EXPECT(0xedcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xedcb));
        // 04 014C
        gbc.setState(0x83dd, 0xdcf1, 0x6390, 0x9e43, 0x6db5, 0x5cb3, 0x1, 0x0);
        gbc.writeMem(0x83dd, { 0x4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xdcf1, gbc.sp());
        EXPECT(0x83de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x83dd));
        // 04 014D
        gbc.setState(0x1c42, 0xa305, 0xf9f0, 0xe55f, 0x6e38, 0xd809, 0x1, 0x1);
        gbc.writeMem(0x1c42, { 0x4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa305, gbc.sp());
        EXPECT(0x1c43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 014E
        gbc.setState(0x6538, 0xa30, 0xcfa0, 0x505, 0x5d05, 0x342f, 0x1, 0x0);
        gbc.writeMem(0x6538, { 0x4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa30, gbc.sp());
        EXPECT(0x6539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 014F
        gbc.setState(0xbb33, 0xe4a3, 0x5190, 0xac0b, 0xb067, 0x6175, 0x1, 0x0);
        gbc.writeMem(0xbb33, { 0x4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe4a3, gbc.sp());
        EXPECT(0xbb34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xbb33));
        // 04 0150
        gbc.setState(0x1488, 0xfb57, 0xbc70, 0xa26, 0x9b7a, 0xf75f, 0x0, 0x0);
        gbc.writeMem(0x1488, { 0x4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfb57, gbc.sp());
        EXPECT(0x1489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0151
        gbc.setState(0xb417, 0x2f4f, 0xb8d0, 0xa8d3, 0x3e39, 0x2770, 0x1, 0x0);
        gbc.writeMem(0xb417, { 0x4 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2f4f, gbc.sp());
        EXPECT(0xb418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb417));
        // 04 0152
        gbc.setState(0x4b33, 0x2ef4, 0xc20, 0xe2ed, 0xa52e, 0x77bb, 0x0, 0x0);
        gbc.writeMem(0x4b33, { 0x4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2ef4, gbc.sp());
        EXPECT(0x4b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0153
        gbc.setState(0x7fc1, 0xa10a, 0x1950, 0xc85d, 0xcece, 0xb139, 0x1, 0x0);
        gbc.writeMem(0x7fc1, { 0x4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa10a, gbc.sp());
        EXPECT(0x7fc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0154
        gbc.setState(0x62a7, 0x3f38, 0xc2f0, 0xb126, 0x78a8, 0x7e27, 0x1, 0x0);
        gbc.writeMem(0x62a7, { 0x4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3f38, gbc.sp());
        EXPECT(0x62a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0155
        gbc.setState(0x14af, 0x470, 0xbbb0, 0x4a77, 0x1e8a, 0x472e, 0x0, 0x1);
        gbc.writeMem(0x14af, { 0x4 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x470, gbc.sp());
        EXPECT(0x14b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0156
        gbc.setState(0xef26, 0x872a, 0x48a0, 0x8175, 0xc7a9, 0xfc7a, 0x0, 0x1);
        gbc.writeMem(0xef26, { 0x4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x872a, gbc.sp());
        EXPECT(0xef27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xef26));
        // 04 0157
        gbc.setState(0xac0b, 0x65f7, 0x6d90, 0xbe61, 0x5b3e, 0xf14b, 0x0, 0x1);
        gbc.writeMem(0xac0b, { 0x4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x65f7, gbc.sp());
        EXPECT(0xac0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xac0b));
        // 04 0158
        gbc.setState(0x3349, 0xadfe, 0xc0d0, 0xf8a1, 0x65e, 0x467, 0x1, 0x0);
        gbc.writeMem(0x3349, { 0x4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xadfe, gbc.sp());
        EXPECT(0x334a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0159
        gbc.setState(0xd51, 0xbc3f, 0x3630, 0x8d85, 0x7517, 0x34e0, 0x0, 0x0);
        gbc.writeMem(0xd51, { 0x4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbc3f, gbc.sp());
        EXPECT(0xd52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 015A
        gbc.setState(0xec8e, 0x4ac3, 0x2d70, 0x65a5, 0x2280, 0xe762, 0x0, 0x0);
        gbc.writeMem(0xec8e, { 0x4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4ac3, gbc.sp());
        EXPECT(0xec8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xec8e));
        // 04 015B
        gbc.setState(0x86ed, 0xbb60, 0xaf0, 0x4458, 0x1bb5, 0xa060, 0x0, 0x1);
        gbc.writeMem(0x86ed, { 0x4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbb60, gbc.sp());
        EXPECT(0x86ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x86ed));
        // 04 015C
        gbc.setState(0xad1b, 0xd50d, 0x9c70, 0xeda8, 0xe339, 0x4dff, 0x0, 0x1);
        gbc.writeMem(0xad1b, { 0x4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd50d, gbc.sp());
        EXPECT(0xad1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xad1b));
        // 04 015D
        gbc.setState(0x9093, 0x814b, 0xab80, 0x58f5, 0x54b5, 0xe19e, 0x1, 0x0);
        gbc.writeMem(0x9093, { 0x4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x814b, gbc.sp());
        EXPECT(0x9094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9093));
        // 04 015E
        gbc.setState(0xa48, 0x6167, 0xfae0, 0x7d0d, 0xd02, 0xb58f, 0x0, 0x0);
        gbc.writeMem(0xa48, { 0x4 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6167, gbc.sp());
        EXPECT(0xa49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 015F
        gbc.setState(0xc4b7, 0xd3a0, 0xcaf0, 0xdc73, 0x1038, 0xb90d, 0x1, 0x0);
        gbc.writeMem(0xc4b7, { 0x4 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd3a0, gbc.sp());
        EXPECT(0xc4b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc4b7));
        // 04 0160
        gbc.setState(0x4f62, 0xc871, 0x5fd0, 0xf1b0, 0xc75b, 0xb6fe, 0x0, 0x1);
        gbc.writeMem(0x4f62, { 0x4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc871, gbc.sp());
        EXPECT(0x4f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0161
        gbc.setState(0xaef4, 0xdd15, 0x6790, 0x3eaa, 0x861c, 0x5313, 0x1, 0x0);
        gbc.writeMem(0xaef4, { 0x4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xdd15, gbc.sp());
        EXPECT(0xaef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xaef4));
        // 04 0162
        gbc.setState(0x178, 0x2750, 0xaf50, 0x17f2, 0x8086, 0xd8d0, 0x1, 0x1);
        gbc.writeMem(0x178, { 0x4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2750, gbc.sp());
        EXPECT(0x179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0163
        gbc.setState(0xad2a, 0xeb4d, 0xd390, 0x5cc, 0xc0a5, 0x2fc1, 0x0, 0x1);
        gbc.writeMem(0xad2a, { 0x4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xeb4d, gbc.sp());
        EXPECT(0xad2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xad2a));
        // 04 0164
        gbc.setState(0x8ec2, 0x7a40, 0x6bd0, 0xa9d3, 0x2a1e, 0xdcdc, 0x1, 0x0);
        gbc.writeMem(0x8ec2, { 0x4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7a40, gbc.sp());
        EXPECT(0x8ec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8ec2));
        // 04 0165
        gbc.setState(0x4b, 0x613d, 0x2ed0, 0xb7f7, 0xac53, 0x70b0, 0x1, 0x1);
        gbc.writeMem(0x4b, { 0x4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x613d, gbc.sp());
        EXPECT(0x4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0166
        gbc.setState(0x97e1, 0xe14a, 0xbe30, 0xa812, 0x29e5, 0x7a40, 0x1, 0x0);
        gbc.writeMem(0x97e1, { 0x4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe14a, gbc.sp());
        EXPECT(0x97e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x97e1));
        // 04 0167
        gbc.setState(0x9185, 0xc9dc, 0xaeb0, 0x890f, 0x1c43, 0x463e, 0x1, 0x0);
        gbc.writeMem(0x9185, { 0x4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc9dc, gbc.sp());
        EXPECT(0x9186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9185));
        // 04 0168
        gbc.setState(0x5cb3, 0x7e66, 0xab60, 0xa163, 0xd60d, 0xad16, 0x0, 0x1);
        gbc.writeMem(0x5cb3, { 0x4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7e66, gbc.sp());
        EXPECT(0x5cb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0169
        gbc.setState(0x14ed, 0xc81, 0x3b40, 0x674, 0x37d2, 0x58f8, 0x0, 0x1);
        gbc.writeMem(0x14ed, { 0x4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc81, gbc.sp());
        EXPECT(0x14ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 016A
        gbc.setState(0x623e, 0x6b27, 0x8710, 0xa4d4, 0x976f, 0x8022, 0x1, 0x1);
        gbc.writeMem(0x623e, { 0x4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6b27, gbc.sp());
        EXPECT(0x623f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 016B
        gbc.setState(0xb5e7, 0x10c, 0xfa00, 0x21b8, 0xbf6b, 0x4e98, 0x1, 0x1);
        gbc.writeMem(0xb5e7, { 0x4 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x10c, gbc.sp());
        EXPECT(0xb5e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb5e7));
        // 04 016C
        gbc.setState(0x5f2, 0x4288, 0xeec0, 0xb4c7, 0x2d9a, 0x63fe, 0x1, 0x1);
        gbc.writeMem(0x5f2, { 0x4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4288, gbc.sp());
        EXPECT(0x5f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 016D
        gbc.setState(0x55ba, 0x279, 0xce00, 0x9e47, 0x12e6, 0xa208, 0x0, 0x1);
        gbc.writeMem(0x55ba, { 0x4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x279, gbc.sp());
        EXPECT(0x55bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 016E
        gbc.setState(0xc389, 0xf1d8, 0xd510, 0xdc8c, 0xd01b, 0x38e1, 0x0, 0x1);
        gbc.writeMem(0xc389, { 0x4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf1d8, gbc.sp());
        EXPECT(0xc38a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc389));
        // 04 016F
        gbc.setState(0x3eff, 0xc870, 0x4060, 0x2561, 0xb631, 0x31fd, 0x0, 0x1);
        gbc.writeMem(0x3eff, { 0x4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc870, gbc.sp());
        EXPECT(0x3f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0170
        gbc.setState(0x1644, 0xb8bf, 0xf710, 0x7b51, 0x247b, 0x8e98, 0x0, 0x1);
        gbc.writeMem(0x1644, { 0x4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb8bf, gbc.sp());
        EXPECT(0x1645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0171
        gbc.setState(0xeb20, 0xb0ee, 0xdcb0, 0x58ba, 0xa9b1, 0xa698, 0x0, 0x1);
        gbc.writeMem(0xeb20, { 0x4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb0ee, gbc.sp());
        EXPECT(0xeb21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xeb20));
        // 04 0172
        gbc.setState(0xd797, 0x9b2c, 0xa3f0, 0x4b45, 0xf5ca, 0xb93e, 0x1, 0x0);
        gbc.writeMem(0xd797, { 0x4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9b2c, gbc.sp());
        EXPECT(0xd798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd797));
        // 04 0173
        gbc.setState(0x7a27, 0x5d6e, 0x2c0, 0xf9fb, 0xf97, 0x5f4c, 0x1, 0x0);
        gbc.writeMem(0x7a27, { 0x4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5d6e, gbc.sp());
        EXPECT(0x7a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0174
        gbc.setState(0x6831, 0xceb3, 0xed40, 0xa023, 0x41f6, 0x5025, 0x1, 0x1);
        gbc.writeMem(0x6831, { 0x4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xceb3, gbc.sp());
        EXPECT(0x6832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0175
        gbc.setState(0x1158, 0x3029, 0x6f50, 0xf134, 0x993e, 0x7959, 0x0, 0x1);
        gbc.writeMem(0x1158, { 0x4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3029, gbc.sp());
        EXPECT(0x1159, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0176
        gbc.setState(0x646f, 0xe26f, 0xad60, 0xcc02, 0x959d, 0xa9dc, 0x1, 0x0);
        gbc.writeMem(0x646f, { 0x4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe26f, gbc.sp());
        EXPECT(0x6470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0177
        gbc.setState(0xc8af, 0xd621, 0x3ed0, 0x2667, 0xe833, 0xc1a, 0x0, 0x0);
        gbc.writeMem(0xc8af, { 0x4 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd621, gbc.sp());
        EXPECT(0xc8b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc8af));
        // 04 0178
        gbc.setState(0x2422, 0x1f68, 0xf430, 0x6fe, 0x802a, 0x2ee2, 0x0, 0x0);
        gbc.writeMem(0x2422, { 0x4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1f68, gbc.sp());
        EXPECT(0x2423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 017A
        gbc.setState(0x18b9, 0x697c, 0x2130, 0x224, 0xa319, 0x7258, 0x1, 0x0);
        gbc.writeMem(0x18b9, { 0x4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x697c, gbc.sp());
        EXPECT(0x18ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 017B
        gbc.setState(0x279d, 0xf6b2, 0x8f80, 0xad99, 0x68d7, 0x553e, 0x1, 0x0);
        gbc.writeMem(0x279d, { 0x4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf6b2, gbc.sp());
        EXPECT(0x279e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 017C
        gbc.setState(0x2909, 0xe70f, 0x13b0, 0xfbf6, 0x5a4e, 0x46b2, 0x0, 0x0);
        gbc.writeMem(0x2909, { 0x4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe70f, gbc.sp());
        EXPECT(0x290a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 017D
        gbc.setState(0x5b02, 0x56d3, 0x6a70, 0x39a7, 0x9db0, 0x7a9f, 0x0, 0x1);
        gbc.writeMem(0x5b02, { 0x4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x56d3, gbc.sp());
        EXPECT(0x5b03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 017E
        gbc.setState(0x20f4, 0x630c, 0x8a90, 0x54b2, 0x2122, 0xdf3c, 0x0, 0x1);
        gbc.writeMem(0x20f4, { 0x4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x630c, gbc.sp());
        EXPECT(0x20f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 017F
        gbc.setState(0x3f41, 0xf9f5, 0x59a0, 0xf0ad, 0x7146, 0x1a42, 0x0, 0x1);
        gbc.writeMem(0x3f41, { 0x4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf9f5, gbc.sp());
        EXPECT(0x3f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0180
        gbc.setState(0xa37a, 0x5c81, 0xa3c0, 0x8dc2, 0xcba1, 0xf66a, 0x1, 0x0);
        gbc.writeMem(0xa37a, { 0x4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5c81, gbc.sp());
        EXPECT(0xa37b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa37a));
        // 04 0181
        gbc.setState(0x5004, 0xb7d9, 0xbc00, 0x2e6a, 0x6ec8, 0xc0b0, 0x0, 0x1);
        gbc.writeMem(0x5004, { 0x4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb7d9, gbc.sp());
        EXPECT(0x5005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0182
        gbc.setState(0xc613, 0xef5, 0x4630, 0x4863, 0x3a9e, 0x928e, 0x1, 0x1);
        gbc.writeMem(0xc613, { 0x4 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xef5, gbc.sp());
        EXPECT(0xc614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc613));
        // 04 0184
        gbc.setState(0x3c16, 0xe334, 0x2f40, 0x764a, 0x919b, 0xfab, 0x1, 0x0);
        gbc.writeMem(0x3c16, { 0x4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe334, gbc.sp());
        EXPECT(0x3c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0185
        gbc.setState(0xefe3, 0x2512, 0x7690, 0x1cea, 0x40cd, 0x8fd6, 0x0, 0x1);
        gbc.writeMem(0xefe3, { 0x4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2512, gbc.sp());
        EXPECT(0xefe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xefe3));
        // 04 0186
        gbc.setState(0x4938, 0x4f86, 0xfe80, 0xe4bc, 0x85d9, 0xf427, 0x1, 0x0);
        gbc.writeMem(0x4938, { 0x4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4f86, gbc.sp());
        EXPECT(0x4939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0187
        gbc.setState(0x331a, 0xdde, 0xa1a0, 0xe2ef, 0x7219, 0xbb2e, 0x0, 0x0);
        gbc.writeMem(0x331a, { 0x4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xdde, gbc.sp());
        EXPECT(0x331b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0188
        gbc.setState(0x79fc, 0xc2ed, 0xe7f0, 0xde2a, 0xbb, 0x70ca, 0x0, 0x0);
        gbc.writeMem(0x79fc, { 0x4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc2ed, gbc.sp());
        EXPECT(0x79fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0189
        gbc.setState(0xfc4, 0x2858, 0x3370, 0xdea6, 0x2ceb, 0x2dd4, 0x0, 0x1);
        gbc.writeMem(0xfc4, { 0x4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2858, gbc.sp());
        EXPECT(0xfc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 018A
        gbc.setState(0x9325, 0x453c, 0xe1d0, 0x144a, 0x4f8a, 0x41e, 0x1, 0x0);
        gbc.writeMem(0x9325, { 0x4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x453c, gbc.sp());
        EXPECT(0x9326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9325));
        // 04 018B
        gbc.setState(0x47e0, 0x25d2, 0xd560, 0xdd1b, 0x6c21, 0x888, 0x1, 0x0);
        gbc.writeMem(0x47e0, { 0x4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x25d2, gbc.sp());
        EXPECT(0x47e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 018C
        gbc.setState(0x5b10, 0x1008, 0xb3e0, 0x183, 0x6059, 0x514, 0x0, 0x1);
        gbc.writeMem(0x5b10, { 0x4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1008, gbc.sp());
        EXPECT(0x5b11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 018D
        gbc.setState(0x3890, 0x413b, 0x64e0, 0xb1b4, 0x4c3, 0x8ba5, 0x1, 0x0);
        gbc.writeMem(0x3890, { 0x4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x413b, gbc.sp());
        EXPECT(0x3891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 018E
        gbc.setState(0xc7b6, 0x2ea3, 0x6660, 0x7fe, 0x3273, 0x6eff, 0x1, 0x1);
        gbc.writeMem(0xc7b6, { 0x4 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2ea3, gbc.sp());
        EXPECT(0xc7b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc7b6));
        // 04 018F
        gbc.setState(0xa217, 0x18c8, 0x82b0, 0xe4c0, 0xdb60, 0x1404, 0x1, 0x1);
        gbc.writeMem(0xa217, { 0x4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x18c8, gbc.sp());
        EXPECT(0xa218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa217));
        // 04 0190
        gbc.setState(0x1292, 0x62, 0x2770, 0xeaa4, 0x4d59, 0x2692, 0x1, 0x0);
        gbc.writeMem(0x1292, { 0x4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x62, gbc.sp());
        EXPECT(0x1293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0191
        gbc.setState(0x1f75, 0xd2ff, 0x89b0, 0x16cf, 0x7c0, 0xac57, 0x0, 0x0);
        gbc.writeMem(0x1f75, { 0x4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd2ff, gbc.sp());
        EXPECT(0x1f76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0192
        gbc.setState(0xa88e, 0x6fe2, 0x6440, 0x93fd, 0xfbb1, 0xe57d, 0x0, 0x0);
        gbc.writeMem(0xa88e, { 0x4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6fe2, gbc.sp());
        EXPECT(0xa88f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa88e));
        // 04 0193
        gbc.setState(0x5a64, 0x2fe5, 0x4f40, 0x1cd2, 0xda3c, 0x265, 0x0, 0x1);
        gbc.writeMem(0x5a64, { 0x4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2fe5, gbc.sp());
        EXPECT(0x5a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0194
        gbc.setState(0x1256, 0x6435, 0xd380, 0x6d37, 0xd656, 0xae95, 0x0, 0x0);
        gbc.writeMem(0x1256, { 0x4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6435, gbc.sp());
        EXPECT(0x1257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0195
        gbc.setState(0xbc85, 0xcb81, 0xce30, 0x36cb, 0x594, 0x20d0, 0x1, 0x1);
        gbc.writeMem(0xbc85, { 0x4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcb81, gbc.sp());
        EXPECT(0xbc86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xbc85));
        // 04 0196
        gbc.setState(0xc712, 0x136, 0xd910, 0x4b9f, 0x9dac, 0xeedb, 0x0, 0x0);
        gbc.writeMem(0xc712, { 0x4 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x136, gbc.sp());
        EXPECT(0xc713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc712));
        // 04 0197
        gbc.setState(0x7c6c, 0x590e, 0xf380, 0x9db, 0x1bd1, 0x7c93, 0x0, 0x0);
        gbc.writeMem(0x7c6c, { 0x4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x590e, gbc.sp());
        EXPECT(0x7c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0198
        gbc.setState(0xc237, 0x6653, 0x4370, 0xe9b9, 0x20d4, 0xdb5c, 0x0, 0x1);
        gbc.writeMem(0xc237, { 0x4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6653, gbc.sp());
        EXPECT(0xc238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc237));
        // 04 0199
        gbc.setState(0xe8b8, 0x7ec5, 0x8880, 0x616, 0x1837, 0xc644, 0x0, 0x1);
        gbc.writeMem(0xe8b8, { 0x4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7ec5, gbc.sp());
        EXPECT(0xe8b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe8b8));
        // 04 019A
        gbc.setState(0xe597, 0x6f63, 0x5390, 0xd17d, 0x988a, 0xef2a, 0x1, 0x0);
        gbc.writeMem(0xe597, { 0x4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6f63, gbc.sp());
        EXPECT(0xe598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe597));
        // 04 019B
        gbc.setState(0x9e3b, 0xec41, 0x80d0, 0xb2f7, 0xd9d5, 0x5ec4, 0x1, 0x0);
        gbc.writeMem(0x9e3b, { 0x4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xec41, gbc.sp());
        EXPECT(0x9e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9e3b));
        // 04 019C
        gbc.setState(0x743c, 0xd5d1, 0xb6f0, 0xfe6b, 0x9fed, 0xc2e7, 0x1, 0x0);
        gbc.writeMem(0x743c, { 0x4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd5d1, gbc.sp());
        EXPECT(0x743d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 019D
        gbc.setState(0x13a, 0xe251, 0xa470, 0xf8a8, 0x2ce7, 0xd912, 0x1, 0x1);
        gbc.writeMem(0x13a, { 0x4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe251, gbc.sp());
        EXPECT(0x13b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 019E
        gbc.setState(0x988c, 0x3a8, 0xfd80, 0x54a9, 0x9940, 0x3068, 0x1, 0x0);
        gbc.writeMem(0x988c, { 0x4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3a8, gbc.sp());
        EXPECT(0x988d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x988c));
        // 04 019F
        gbc.setState(0xd186, 0x18d8, 0xdd20, 0xe637, 0xa9fa, 0xbbc7, 0x1, 0x0);
        gbc.writeMem(0xd186, { 0x4 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x18d8, gbc.sp());
        EXPECT(0xd187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd186));
        // 04 01A0
        gbc.setState(0x38bc, 0x9366, 0x9680, 0x77c7, 0xe483, 0xe226, 0x0, 0x0);
        gbc.writeMem(0x38bc, { 0x4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9366, gbc.sp());
        EXPECT(0x38bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 01A1
        gbc.setState(0xe339, 0x2b62, 0x210, 0x1a1e, 0x7f23, 0x5747, 0x0, 0x1);
        gbc.writeMem(0xe339, { 0x4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2b62, gbc.sp());
        EXPECT(0xe33a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe339));
        // 04 01A2
        gbc.setState(0xd23d, 0x3c97, 0x9a30, 0x8143, 0x59b, 0x15eb, 0x1, 0x0);
        gbc.writeMem(0xd23d, { 0x4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3c97, gbc.sp());
        EXPECT(0xd23e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd23d));
        // 04 01A3
        gbc.setState(0x6bce, 0x3e6e, 0x5cc0, 0x9942, 0x8731, 0x270f, 0x0, 0x0);
        gbc.writeMem(0x6bce, { 0x4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3e6e, gbc.sp());
        EXPECT(0x6bcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 01A4
        gbc.setState(0x7605, 0xad5d, 0x85f0, 0x5156, 0x2dc5, 0xf256, 0x0, 0x0);
        gbc.writeMem(0x7605, { 0x4 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xad5d, gbc.sp());
        EXPECT(0x7606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01A5
        gbc.setState(0x326d, 0x2a0e, 0xf730, 0x3c4, 0xd013, 0x5975, 0x0, 0x1);
        gbc.writeMem(0x326d, { 0x4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2a0e, gbc.sp());
        EXPECT(0x326e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01A6
        gbc.setState(0xb7a2, 0x48de, 0xb6c0, 0xe7a9, 0x6919, 0xd26, 0x1, 0x1);
        gbc.writeMem(0xb7a2, { 0x4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x48de, gbc.sp());
        EXPECT(0xb7a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb7a2));
        // 04 01A7
        gbc.setState(0x36b9, 0x8b57, 0xaeb0, 0xcb29, 0x3e39, 0x5f96, 0x0, 0x0);
        gbc.writeMem(0x36b9, { 0x4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8b57, gbc.sp());
        EXPECT(0x36ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01A8
        gbc.setState(0x123, 0xf87b, 0x2360, 0xee2b, 0x3b03, 0xb632, 0x0, 0x1);
        gbc.writeMem(0x123, { 0x4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf87b, gbc.sp());
        EXPECT(0x124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 01A9
        gbc.setState(0x25b2, 0x2629, 0xe770, 0x9161, 0x9749, 0x285, 0x0, 0x0);
        gbc.writeMem(0x25b2, { 0x4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2629, gbc.sp());
        EXPECT(0x25b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01AB
        gbc.setState(0x1872, 0xbadd, 0x6770, 0x648a, 0xfe73, 0x5eed, 0x1, 0x0);
        gbc.writeMem(0x1872, { 0x4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbadd, gbc.sp());
        EXPECT(0x1873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01AC
        gbc.setState(0x9fde, 0x2eb7, 0x4040, 0x2141, 0x6998, 0x86a4, 0x0, 0x1);
        gbc.writeMem(0x9fde, { 0x4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2eb7, gbc.sp());
        EXPECT(0x9fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9fde));
        // 04 01AD
        gbc.setState(0x949e, 0x7775, 0x9f00, 0x3a51, 0x6575, 0x97a4, 0x0, 0x1);
        gbc.writeMem(0x949e, { 0x4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7775, gbc.sp());
        EXPECT(0x949f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x949e));
        // 04 01AE
        gbc.setState(0x2b20, 0x27c6, 0x5520, 0x69dd, 0xef2e, 0xbe8e, 0x0, 0x0);
        gbc.writeMem(0x2b20, { 0x4 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x27c6, gbc.sp());
        EXPECT(0x2b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 01B0
        gbc.setState(0x3e2e, 0x41ec, 0xa350, 0x8135, 0xcf7f, 0x2f55, 0x0, 0x1);
        gbc.writeMem(0x3e2e, { 0x4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x41ec, gbc.sp());
        EXPECT(0x3e2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01B1
        gbc.setState(0x634c, 0x4fa8, 0xf2f0, 0x9a78, 0xd0a8, 0xa01d, 0x1, 0x0);
        gbc.writeMem(0x634c, { 0x4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4fa8, gbc.sp());
        EXPECT(0x634d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01B2
        gbc.setState(0xa23a, 0xc3df, 0xd640, 0x42e5, 0x7412, 0x89a4, 0x1, 0x0);
        gbc.writeMem(0xa23a, { 0x4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc3df, gbc.sp());
        EXPECT(0xa23b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa23a));
        // 04 01B3
        gbc.setState(0x23b8, 0x2182, 0x6300, 0x6175, 0x7054, 0xc745, 0x1, 0x0);
        gbc.writeMem(0x23b8, { 0x4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2182, gbc.sp());
        EXPECT(0x23b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 01B4
        gbc.setState(0x3773, 0xdea5, 0x9870, 0x8485, 0xd222, 0xb788, 0x1, 0x1);
        gbc.writeMem(0x3773, { 0x4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdea5, gbc.sp());
        EXPECT(0x3774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01B5
        gbc.setState(0x2793, 0xe24c, 0x60c0, 0x440, 0x455b, 0x4720, 0x0, 0x0);
        gbc.writeMem(0x2793, { 0x4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe24c, gbc.sp());
        EXPECT(0x2794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 01B6
        gbc.setState(0x9bfc, 0x19d5, 0xaa40, 0x7943, 0xdcb3, 0x1ab, 0x1, 0x0);
        gbc.writeMem(0x9bfc, { 0x4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x19d5, gbc.sp());
        EXPECT(0x9bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9bfc));
        // 04 01B7
        gbc.setState(0x4fca, 0x3951, 0x32c0, 0x2fdf, 0x668b, 0x3993, 0x0, 0x1);
        gbc.writeMem(0x4fca, { 0x4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3951, gbc.sp());
        EXPECT(0x4fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 01B8
        gbc.setState(0x8fa7, 0xd71a, 0x7440, 0x15ea, 0x105e, 0x23eb, 0x0, 0x0);
        gbc.writeMem(0x8fa7, { 0x4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd71a, gbc.sp());
        EXPECT(0x8fa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8fa7));
        // 04 01B9
        gbc.setState(0x4f74, 0xc909, 0x4f70, 0x63ab, 0x8760, 0x4700, 0x0, 0x0);
        gbc.writeMem(0x4f74, { 0x4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc909, gbc.sp());
        EXPECT(0x4f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01BA
        gbc.setState(0xd43, 0xf460, 0xc4d0, 0xd21d, 0xb48d, 0x3e9b, 0x0, 0x0);
        gbc.writeMem(0xd43, { 0x4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf460, gbc.sp());
        EXPECT(0xd44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01BB
        gbc.setState(0x1765, 0xa592, 0x1d10, 0x8a5d, 0xb4fc, 0xf329, 0x0, 0x1);
        gbc.writeMem(0x1765, { 0x4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa592, gbc.sp());
        EXPECT(0x1766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01BC
        gbc.setState(0xab38, 0x3230, 0x6390, 0xd34d, 0x1bd8, 0x6bdb, 0x1, 0x0);
        gbc.writeMem(0xab38, { 0x4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3230, gbc.sp());
        EXPECT(0xab39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xab38));
        // 04 01BD
        gbc.setState(0xcfcc, 0x887b, 0xdc60, 0x75af, 0x59f1, 0xfd84, 0x0, 0x1);
        gbc.writeMem(0xcfcc, { 0x4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x887b, gbc.sp());
        EXPECT(0xcfcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xcfcc));
        // 04 01BE
        gbc.setState(0x8c51, 0xf86a, 0xe650, 0x6418, 0x68e8, 0xb06, 0x0, 0x0);
        gbc.writeMem(0x8c51, { 0x4 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf86a, gbc.sp());
        EXPECT(0x8c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8c51));
        // 04 01BF
        gbc.setState(0x11aa, 0x3d6d, 0x8db0, 0x935d, 0x107b, 0x4f29, 0x0, 0x1);
        gbc.writeMem(0x11aa, { 0x4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3d6d, gbc.sp());
        EXPECT(0x11ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01C0
        gbc.setState(0x53c6, 0xc27, 0x67a0, 0xebaf, 0x22c2, 0x8dde, 0x1, 0x0);
        gbc.writeMem(0x53c6, { 0x4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc27, gbc.sp());
        EXPECT(0x53c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 01C1
        gbc.setState(0xdb9f, 0xeebb, 0xe8a0, 0xa938, 0xdcb9, 0xc5ae, 0x1, 0x1);
        gbc.writeMem(0xdb9f, { 0x4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xeebb, gbc.sp());
        EXPECT(0xdba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdb9f));
        // 04 01C2
        gbc.setState(0x89f5, 0x677c, 0xda0, 0x25d7, 0x23ef, 0x1296, 0x0, 0x1);
        gbc.writeMem(0x89f5, { 0x4 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x677c, gbc.sp());
        EXPECT(0x89f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x89f5));
        // 04 01C3
        gbc.setState(0xb9fe, 0xe360, 0x9c20, 0xec85, 0x16e3, 0x48d5, 0x1, 0x1);
        gbc.writeMem(0xb9fe, { 0x4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe360, gbc.sp());
        EXPECT(0xb9ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb9fe));
        // 04 01C4
        gbc.setState(0x5f3e, 0x4211, 0x4030, 0x38e2, 0x3fd3, 0xf287, 0x1, 0x0);
        gbc.writeMem(0x5f3e, { 0x4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4211, gbc.sp());
        EXPECT(0x5f3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01C5
        gbc.setState(0x1596, 0xf382, 0x3430, 0xd97, 0x5566, 0xfd78, 0x1, 0x0);
        gbc.writeMem(0x1596, { 0x4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf382, gbc.sp());
        EXPECT(0x1597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01C6
        gbc.setState(0x7b2b, 0xf033, 0xed10, 0xeef0, 0x51e9, 0xfd8, 0x0, 0x1);
        gbc.writeMem(0x7b2b, { 0x4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf033, gbc.sp());
        EXPECT(0x7b2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01C7
        gbc.setState(0xbfab, 0x6567, 0xaf40, 0x2174, 0xeed, 0x8ae6, 0x1, 0x0);
        gbc.writeMem(0xbfab, { 0x4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6567, gbc.sp());
        EXPECT(0xbfac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xbfab));
        // 04 01C9
        gbc.setState(0x8447, 0x9fab, 0x3b20, 0x3f48, 0x9093, 0x561b, 0x0, 0x0);
        gbc.writeMem(0x8447, { 0x4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9fab, gbc.sp());
        EXPECT(0x8448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8447));
        // 04 01CA
        gbc.setState(0x886b, 0x45ad, 0x4b60, 0xf18b, 0xc937, 0x2ec9, 0x1, 0x1);
        gbc.writeMem(0x886b, { 0x4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x45ad, gbc.sp());
        EXPECT(0x886c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x886b));
        // 04 01CB
        gbc.setState(0x13db, 0x7830, 0x9df0, 0x67d9, 0xb406, 0x7314, 0x1, 0x1);
        gbc.writeMem(0x13db, { 0x4 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7830, gbc.sp());
        EXPECT(0x13dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01CC
        gbc.setState(0xe57f, 0x4d97, 0xa4d0, 0x6f9f, 0x9929, 0x4bfb, 0x1, 0x0);
        gbc.writeMem(0xe57f, { 0x4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4d97, gbc.sp());
        EXPECT(0xe580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe57f));
        // 04 01CD
        gbc.setState(0x6e71, 0xa3c7, 0x2410, 0x7194, 0x467f, 0x9cbc, 0x1, 0x1);
        gbc.writeMem(0x6e71, { 0x4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa3c7, gbc.sp());
        EXPECT(0x6e72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01CE
        gbc.setState(0xba84, 0x76f, 0x8130, 0x1cdb, 0xf3bb, 0x92e2, 0x1, 0x1);
        gbc.writeMem(0xba84, { 0x4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x76f, gbc.sp());
        EXPECT(0xba85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xba84));
        // 04 01CF
        gbc.setState(0xcc68, 0xf195, 0xf150, 0xc16c, 0x234c, 0x947a, 0x0, 0x1);
        gbc.writeMem(0xcc68, { 0x4 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf195, gbc.sp());
        EXPECT(0xcc69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xcc68));
        // 04 01D0
        gbc.setState(0xace5, 0xf552, 0xa0, 0x5839, 0xd75f, 0x6dc3, 0x0, 0x1);
        gbc.writeMem(0xace5, { 0x4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf552, gbc.sp());
        EXPECT(0xace6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xace5));
        // 04 01D1
        gbc.setState(0x2400, 0x7ad4, 0x4c90, 0xd3cf, 0x9a4d, 0xb14a, 0x0, 0x0);
        gbc.writeMem(0x2400, { 0x4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7ad4, gbc.sp());
        EXPECT(0x2401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01D2
        gbc.setState(0xca2b, 0x9902, 0xa6b0, 0x2696, 0xb0b0, 0xb14c, 0x1, 0x1);
        gbc.writeMem(0xca2b, { 0x4 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9902, gbc.sp());
        EXPECT(0xca2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xca2b));
        // 04 01D3
        gbc.setState(0x68cd, 0xd15a, 0x7940, 0xe965, 0xa6b1, 0x7965, 0x1, 0x1);
        gbc.writeMem(0x68cd, { 0x4 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd15a, gbc.sp());
        EXPECT(0x68ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 01D4
        gbc.setState(0x236e, 0x74f7, 0x47a0, 0x82ae, 0x5bba, 0xc3fa, 0x0, 0x1);
        gbc.writeMem(0x236e, { 0x4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x74f7, gbc.sp());
        EXPECT(0x236f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 01D5
        gbc.setState(0x6bad, 0x98a7, 0xc1a0, 0x9e9b, 0x4354, 0x5745, 0x1, 0x1);
        gbc.writeMem(0x6bad, { 0x4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x98a7, gbc.sp());
        EXPECT(0x6bae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 01D7
        gbc.setState(0xd08d, 0xc2a6, 0x51f0, 0x121a, 0x7e8, 0x6fb3, 0x1, 0x0);
        gbc.writeMem(0xd08d, { 0x4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc2a6, gbc.sp());
        EXPECT(0xd08e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd08d));
        // 04 01D8
        gbc.setState(0x11a7, 0x20c8, 0x31e0, 0x48d0, 0xc098, 0x63c8, 0x0, 0x1);
        gbc.writeMem(0x11a7, { 0x4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x20c8, gbc.sp());
        EXPECT(0x11a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 01D9
        gbc.setState(0x611d, 0xf0bd, 0x5db0, 0x5f37, 0x67a6, 0x5808, 0x1, 0x0);
        gbc.writeMem(0x611d, { 0x4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf0bd, gbc.sp());
        EXPECT(0x611e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01DB
        gbc.setState(0x5261, 0x1a9f, 0x3d10, 0x735d, 0x51cf, 0x6c34, 0x1, 0x1);
        gbc.writeMem(0x5261, { 0x4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1a9f, gbc.sp());
        EXPECT(0x5262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01DC
        gbc.setState(0x227, 0xeaca, 0x5d30, 0xfcf6, 0xeb31, 0x3556, 0x0, 0x0);
        gbc.writeMem(0x227, { 0x4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xeaca, gbc.sp());
        EXPECT(0x228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01DD
        gbc.setState(0x4f4a, 0xdfa8, 0xff70, 0x83eb, 0xf66b, 0xaa65, 0x0, 0x0);
        gbc.writeMem(0x4f4a, { 0x4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xdfa8, gbc.sp());
        EXPECT(0x4f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01DE
        gbc.setState(0x154c, 0x1855, 0x4990, 0x2d61, 0x4a27, 0x34ae, 0x0, 0x0);
        gbc.writeMem(0x154c, { 0x4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1855, gbc.sp());
        EXPECT(0x154d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01DF
        gbc.setState(0x8c02, 0xaa47, 0x8920, 0x4fab, 0x5471, 0x29fa, 0x0, 0x0);
        gbc.writeMem(0x8c02, { 0x4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xaa47, gbc.sp());
        EXPECT(0x8c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8c02));
        // 04 01E0
        gbc.setState(0xa61f, 0x239, 0xb850, 0xf38e, 0x85b6, 0x1155, 0x1, 0x1);
        gbc.writeMem(0xa61f, { 0x4 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x239, gbc.sp());
        EXPECT(0xa620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa61f));
        // 04 01E1
        gbc.setState(0x9087, 0x4b7c, 0x3b20, 0xf117, 0xdf86, 0x6ae6, 0x0, 0x1);
        gbc.writeMem(0x9087, { 0x4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4b7c, gbc.sp());
        EXPECT(0x9088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9087));
        // 04 01E2
        gbc.setState(0x96f2, 0x115a, 0x2340, 0xf0f9, 0xaa77, 0xd8c4, 0x1, 0x1);
        gbc.writeMem(0x96f2, { 0x4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x115a, gbc.sp());
        EXPECT(0x96f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x96f2));
        // 04 01E3
        gbc.setState(0xd909, 0x6e8d, 0x1df0, 0x6eb0, 0x99e2, 0x5a1f, 0x0, 0x0);
        gbc.writeMem(0xd909, { 0x4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6e8d, gbc.sp());
        EXPECT(0xd90a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd909));
        // 04 01E4
        gbc.setState(0x7cf0, 0x2334, 0x790, 0x45cd, 0x49c5, 0x6ebc, 0x0, 0x1);
        gbc.writeMem(0x7cf0, { 0x4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2334, gbc.sp());
        EXPECT(0x7cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01E5
        gbc.setState(0xe769, 0x3489, 0x9710, 0xb643, 0x60fb, 0x758a, 0x0, 0x1);
        gbc.writeMem(0xe769, { 0x4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3489, gbc.sp());
        EXPECT(0xe76a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe769));
        // 04 01E6
        gbc.setState(0x4222, 0x761a, 0x8100, 0x7fe6, 0x78bb, 0xe3d1, 0x1, 0x0);
        gbc.writeMem(0x4222, { 0x4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x761a, gbc.sp());
        EXPECT(0x4223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 01E7
        gbc.setState(0x17a0, 0x23ee, 0x9920, 0xeb70, 0x79ca, 0x35bf, 0x1, 0x1);
        gbc.writeMem(0x17a0, { 0x4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x23ee, gbc.sp());
        EXPECT(0x17a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 01E8
        gbc.setState(0x907c, 0x7bcf, 0xc60, 0xf5b8, 0xa827, 0xfd59, 0x1, 0x1);
        gbc.writeMem(0x907c, { 0x4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7bcf, gbc.sp());
        EXPECT(0x907d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x907c));
        // 04 01E9
        gbc.setState(0xd1ff, 0xaec, 0xfe10, 0x62dd, 0xe16, 0x2c8b, 0x1, 0x0);
        gbc.writeMem(0xd1ff, { 0x4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xaec, gbc.sp());
        EXPECT(0xd200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd1ff));
        // 04 01EA
        gbc.setState(0x98a4, 0xde8d, 0xb10, 0x625b, 0xd5ef, 0x934c, 0x1, 0x1);
        gbc.writeMem(0x98a4, { 0x4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xde8d, gbc.sp());
        EXPECT(0x98a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x98a4));
        // 04 01EB
        gbc.setState(0xfbf, 0xffa1, 0xa360, 0x5ebe, 0xc856, 0x5339, 0x0, 0x1);
        gbc.writeMem(0xfbf, { 0x4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xffa1, gbc.sp());
        EXPECT(0xfc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 01EC
        gbc.setState(0xa658, 0xf1e1, 0x790, 0x9f5b, 0x599d, 0x3843, 0x1, 0x0);
        gbc.writeMem(0xa658, { 0x4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf1e1, gbc.sp());
        EXPECT(0xa659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa658));
        // 04 01ED
        gbc.setState(0xc2d0, 0x8618, 0x9850, 0x8b22, 0x79e6, 0x2123, 0x1, 0x1);
        gbc.writeMem(0xc2d0, { 0x4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8618, gbc.sp());
        EXPECT(0xc2d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc2d0));
        // 04 01EE
        gbc.setState(0x31a0, 0xee9, 0x7a70, 0xae99, 0x455b, 0xdcd2, 0x0, 0x0);
        gbc.writeMem(0x31a0, { 0x4 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xee9, gbc.sp());
        EXPECT(0x31a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01EF
        gbc.setState(0xc2b4, 0x2de2, 0x47a0, 0xf228, 0x8fe, 0xe31b, 0x1, 0x0);
        gbc.writeMem(0xc2b4, { 0x4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2de2, gbc.sp());
        EXPECT(0xc2b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc2b4));
        // 04 01F0
        gbc.setState(0x222f, 0x3908, 0xfe60, 0xd787, 0x23e3, 0x8cce, 0x0, 0x1);
        gbc.writeMem(0x222f, { 0x4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3908, gbc.sp());
        EXPECT(0x2230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 01F1
        gbc.setState(0x638c, 0x165b, 0x37e0, 0x833b, 0x6c9d, 0xb04d, 0x1, 0x0);
        gbc.writeMem(0x638c, { 0x4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x165b, gbc.sp());
        EXPECT(0x638d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 01F2
        gbc.setState(0xce08, 0x8c38, 0xe060, 0x182c, 0xc3fa, 0x108f, 0x1, 0x1);
        gbc.writeMem(0xce08, { 0x4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8c38, gbc.sp());
        EXPECT(0xce09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xce08));
        // 04 01F3
        gbc.setState(0xa0de, 0x7cdf, 0x4300, 0xd1a, 0x58c0, 0xf711, 0x0, 0x1);
        gbc.writeMem(0xa0de, { 0x4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7cdf, gbc.sp());
        EXPECT(0xa0df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa0de));
        // 04 01F4
        gbc.setState(0xc0b6, 0xf6a7, 0x5c70, 0x9e76, 0xd4b1, 0x661f, 0x1, 0x0);
        gbc.writeMem(0xc0b6, { 0x4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf6a7, gbc.sp());
        EXPECT(0xc0b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc0b6));
        // 04 01F5
        gbc.setState(0xa539, 0x7816, 0x4210, 0x4eec, 0x799d, 0xe38e, 0x1, 0x1);
        gbc.writeMem(0xa539, { 0x4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7816, gbc.sp());
        EXPECT(0xa53a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa539));
        // 04 01F6
        gbc.setState(0xa739, 0x6776, 0xd750, 0xb880, 0xee6c, 0xf577, 0x0, 0x1);
        gbc.writeMem(0xa739, { 0x4 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6776, gbc.sp());
        EXPECT(0xa73a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa739));
        // 04 01F7
        gbc.setState(0x12ad, 0xb1c2, 0xe20, 0x99a4, 0xe17, 0x9969, 0x1, 0x0);
        gbc.writeMem(0x12ad, { 0x4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb1c2, gbc.sp());
        EXPECT(0x12ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 01F8
        gbc.setState(0xdba9, 0x3702, 0x9380, 0x8523, 0xd99c, 0x5e6c, 0x0, 0x1);
        gbc.writeMem(0xdba9, { 0x4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3702, gbc.sp());
        EXPECT(0xdbaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdba9));
        // 04 01F9
        gbc.setState(0x2d81, 0x9809, 0xc610, 0x42d6, 0xd9a6, 0xfd03, 0x1, 0x1);
        gbc.writeMem(0x2d81, { 0x4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9809, gbc.sp());
        EXPECT(0x2d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 01FA
        gbc.setState(0x9c29, 0x2a1c, 0x25e0, 0x138f, 0x340c, 0x1a6, 0x0, 0x0);
        gbc.writeMem(0x9c29, { 0x4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2a1c, gbc.sp());
        EXPECT(0x9c2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9c29));
        // 04 01FB
        gbc.setState(0xdcff, 0xcf7b, 0xeaf0, 0x78e1, 0xc927, 0xb0c3, 0x0, 0x1);
        gbc.writeMem(0xdcff, { 0x4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xcf7b, gbc.sp());
        EXPECT(0xdd00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdcff));
        // 04 01FC
        gbc.setState(0x847f, 0x1750, 0x7a50, 0xc0f9, 0x10d7, 0x8661, 0x0, 0x1);
        gbc.writeMem(0x847f, { 0x4 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1750, gbc.sp());
        EXPECT(0x8480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x847f));
        // 04 01FD
        gbc.setState(0x1973, 0x25be, 0x9b00, 0x12fe, 0xf703, 0x72f2, 0x1, 0x0);
        gbc.writeMem(0x1973, { 0x4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x25be, gbc.sp());
        EXPECT(0x1974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 01FE
        gbc.setState(0xeec5, 0xe15d, 0xa550, 0x1b42, 0xd389, 0x916a, 0x0, 0x0);
        gbc.writeMem(0xeec5, { 0x4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe15d, gbc.sp());
        EXPECT(0xeec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xeec5));
        // 04 01FF
        gbc.setState(0xc477, 0x7eb0, 0xfd30, 0x164d, 0x2bb5, 0x3cac, 0x1, 0x1);
        gbc.writeMem(0xc477, { 0x4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7eb0, gbc.sp());
        EXPECT(0xc478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc477));
        // 04 0200
        gbc.setState(0x11d, 0x2049, 0xfe50, 0x76, 0x97c2, 0xa11a, 0x1, 0x0);
        gbc.writeMem(0x11d, { 0x4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2049, gbc.sp());
        EXPECT(0x11e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0201
        gbc.setState(0xd681, 0xd0ba, 0x7610, 0x88b5, 0x1461, 0xc1df, 0x1, 0x0);
        gbc.writeMem(0xd681, { 0x4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd0ba, gbc.sp());
        EXPECT(0xd682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd681));
        // 04 0202
        gbc.setState(0x19f9, 0x35b7, 0x1ce0, 0x9050, 0xd727, 0x9b4, 0x1, 0x1);
        gbc.writeMem(0x19f9, { 0x4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x35b7, gbc.sp());
        EXPECT(0x19fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0203
        gbc.setState(0x52dd, 0x661d, 0xdf40, 0x812d, 0x8d52, 0xd637, 0x0, 0x0);
        gbc.writeMem(0x52dd, { 0x4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x661d, gbc.sp());
        EXPECT(0x52de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0204
        gbc.setState(0x4344, 0x49ae, 0xced0, 0xd233, 0x6d2b, 0x22ca, 0x0, 0x0);
        gbc.writeMem(0x4344, { 0x4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x49ae, gbc.sp());
        EXPECT(0x4345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0205
        gbc.setState(0xcb10, 0x9eae, 0x73d0, 0xbca9, 0x2fe5, 0x424c, 0x0, 0x1);
        gbc.writeMem(0xcb10, { 0x4 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9eae, gbc.sp());
        EXPECT(0xcb11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xcb10));
        // 04 0208
        gbc.setState(0x3e84, 0xc84c, 0x5e80, 0x6d8e, 0xbdcb, 0xb701, 0x1, 0x1);
        gbc.writeMem(0x3e84, { 0x4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc84c, gbc.sp());
        EXPECT(0x3e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0209
        gbc.setState(0x3d82, 0x625c, 0xa3d0, 0x9e7e, 0xf545, 0xb5a8, 0x0, 0x1);
        gbc.writeMem(0x3d82, { 0x4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x625c, gbc.sp());
        EXPECT(0x3d83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 020A
        gbc.setState(0x17a4, 0x1acf, 0x5720, 0x1e29, 0x1ab3, 0xe3c1, 0x1, 0x1);
        gbc.writeMem(0x17a4, { 0x4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1acf, gbc.sp());
        EXPECT(0x17a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 020B
        gbc.setState(0xa94a, 0x7be7, 0x8390, 0xf6f5, 0x34a0, 0x8639, 0x0, 0x0);
        gbc.writeMem(0xa94a, { 0x4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7be7, gbc.sp());
        EXPECT(0xa94b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa94a));
        // 04 020C
        gbc.setState(0x3d31, 0x3bcd, 0x18b0, 0x8549, 0xf1f9, 0x4b55, 0x0, 0x0);
        gbc.writeMem(0x3d31, { 0x4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3bcd, gbc.sp());
        EXPECT(0x3d32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 020D
        gbc.setState(0x8c28, 0x5df8, 0xd830, 0x5d78, 0x581e, 0x8f87, 0x1, 0x1);
        gbc.writeMem(0x8c28, { 0x4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5df8, gbc.sp());
        EXPECT(0x8c29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8c28));
        // 04 020E
        gbc.setState(0x6c39, 0xd22e, 0x44b0, 0x8d96, 0x6bc3, 0xf2ed, 0x0, 0x0);
        gbc.writeMem(0x6c39, { 0x4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd22e, gbc.sp());
        EXPECT(0x6c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 020F
        gbc.setState(0x376a, 0xfa3c, 0x5ca0, 0x49f8, 0xd1e8, 0xf06d, 0x0, 0x0);
        gbc.writeMem(0x376a, { 0x4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfa3c, gbc.sp());
        EXPECT(0x376b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0210
        gbc.setState(0xb2c9, 0x1d9b, 0xf360, 0xc227, 0xb10, 0x702, 0x0, 0x1);
        gbc.writeMem(0xb2c9, { 0x4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1d9b, gbc.sp());
        EXPECT(0xb2ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb2c9));
        // 04 0211
        gbc.setState(0xb7b2, 0x1967, 0x3410, 0xd1e2, 0xdee4, 0x4086, 0x1, 0x0);
        gbc.writeMem(0xb7b2, { 0x4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1967, gbc.sp());
        EXPECT(0xb7b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb7b2));
        // 04 0212
        gbc.setState(0x9f9c, 0x8046, 0xedd0, 0x3c36, 0xab4a, 0x5427, 0x1, 0x0);
        gbc.writeMem(0x9f9c, { 0x4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8046, gbc.sp());
        EXPECT(0x9f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9f9c));
        // 04 0213
        gbc.setState(0x1560, 0xd50, 0x4c40, 0xbf4a, 0xe829, 0x9f73, 0x1, 0x0);
        gbc.writeMem(0x1560, { 0x4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd50, gbc.sp());
        EXPECT(0x1561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0214
        gbc.setState(0xb6fe, 0xdc81, 0x2a00, 0xe105, 0x69d2, 0xe3a4, 0x1, 0x0);
        gbc.writeMem(0xb6fe, { 0x4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdc81, gbc.sp());
        EXPECT(0xb6ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb6fe));
        // 04 0215
        gbc.setState(0x66ec, 0xfb88, 0xcc80, 0xa77e, 0xd964, 0x1884, 0x1, 0x0);
        gbc.writeMem(0x66ec, { 0x4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfb88, gbc.sp());
        EXPECT(0x66ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0216
        gbc.setState(0x9341, 0x5eac, 0xe970, 0x2a5b, 0xbb29, 0xf2fc, 0x1, 0x1);
        gbc.writeMem(0x9341, { 0x4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5eac, gbc.sp());
        EXPECT(0x9342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9341));
        // 04 0217
        gbc.setState(0x2b03, 0xcaa1, 0xe080, 0xd8b8, 0xbc1b, 0xfaec, 0x0, 0x0);
        gbc.writeMem(0x2b03, { 0x4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xcaa1, gbc.sp());
        EXPECT(0x2b04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0218
        gbc.setState(0x463b, 0xc281, 0x3670, 0x43bb, 0x4df1, 0x4621, 0x1, 0x0);
        gbc.writeMem(0x463b, { 0x4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc281, gbc.sp());
        EXPECT(0x463c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0219
        gbc.setState(0xb64c, 0x625f, 0xfef0, 0x12ba, 0xfae5, 0xa49, 0x1, 0x0);
        gbc.writeMem(0xb64c, { 0x4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x625f, gbc.sp());
        EXPECT(0xb64d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb64c));
        // 04 021A
        gbc.setState(0x12bb, 0xcc20, 0xe8a0, 0x7077, 0x8406, 0x2226, 0x0, 0x0);
        gbc.writeMem(0x12bb, { 0x4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcc20, gbc.sp());
        EXPECT(0x12bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 021B
        gbc.setState(0xb8a9, 0x1c92, 0x7410, 0xd6b0, 0xb6aa, 0xd8fc, 0x0, 0x0);
        gbc.writeMem(0xb8a9, { 0x4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1c92, gbc.sp());
        EXPECT(0xb8aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb8a9));
        // 04 021C
        gbc.setState(0xd0cf, 0xb0ab, 0xcf00, 0x6d70, 0xd29e, 0x2c57, 0x0, 0x0);
        gbc.writeMem(0xd0cf, { 0x4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb0ab, gbc.sp());
        EXPECT(0xd0d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd0cf));
        // 04 021D
        gbc.setState(0x3510, 0xf331, 0x6ec0, 0x11db, 0xea29, 0xb006, 0x1, 0x0);
        gbc.writeMem(0x3510, { 0x4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf331, gbc.sp());
        EXPECT(0x3511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 021E
        gbc.setState(0x7e23, 0x1588, 0x5ca0, 0x90f, 0xe09e, 0x11f5, 0x1, 0x0);
        gbc.writeMem(0x7e23, { 0x4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1588, gbc.sp());
        EXPECT(0x7e24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 021F
        gbc.setState(0xa74, 0xd80f, 0xcc10, 0x7f7f, 0x1815, 0xd676, 0x1, 0x0);
        gbc.writeMem(0xa74, { 0x4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd80f, gbc.sp());
        EXPECT(0xa75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0220
        gbc.setState(0x3ca8, 0xbb6f, 0x14b0, 0x6a5a, 0xef99, 0xaf84, 0x0, 0x1);
        gbc.writeMem(0x3ca8, { 0x4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbb6f, gbc.sp());
        EXPECT(0x3ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0221
        gbc.setState(0xc5b3, 0x1fcf, 0x8f90, 0xeedc, 0xc1, 0xe757, 0x1, 0x0);
        gbc.writeMem(0xc5b3, { 0x4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1fcf, gbc.sp());
        EXPECT(0xc5b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc5b3));
        // 04 0222
        gbc.setState(0xe190, 0x7560, 0x650, 0x6ded, 0x45a, 0xa832, 0x1, 0x0);
        gbc.writeMem(0xe190, { 0x4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7560, gbc.sp());
        EXPECT(0xe191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe190));
        // 04 0223
        gbc.setState(0xafd7, 0x103a, 0x8460, 0x27a0, 0x6a40, 0x6a40, 0x0, 0x0);
        gbc.writeMem(0xafd7, { 0x4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x103a, gbc.sp());
        EXPECT(0xafd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xafd7));
        // 04 0224
        gbc.setState(0xe93a, 0x87a9, 0x6640, 0xdc17, 0x9439, 0xa54e, 0x1, 0x1);
        gbc.writeMem(0xe93a, { 0x4 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x87a9, gbc.sp());
        EXPECT(0xe93b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe93a));
        // 04 0225
        gbc.setState(0x2991, 0x3b9d, 0xeef0, 0xf05c, 0x511, 0x5410, 0x1, 0x1);
        gbc.writeMem(0x2991, { 0x4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3b9d, gbc.sp());
        EXPECT(0x2992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0226
        gbc.setState(0xa9bc, 0xf179, 0x1bd0, 0xfbee, 0x275a, 0xcc9a, 0x1, 0x1);
        gbc.writeMem(0xa9bc, { 0x4 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf179, gbc.sp());
        EXPECT(0xa9bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa9bc));
        // 04 0227
        gbc.setState(0xe826, 0x3181, 0xcb20, 0xc24a, 0x292, 0xaf1a, 0x0, 0x1);
        gbc.writeMem(0xe826, { 0x4 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3181, gbc.sp());
        EXPECT(0xe827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe826));
        // 04 0228
        gbc.setState(0xdc62, 0xec5f, 0xe020, 0x6218, 0xe266, 0x98c0, 0x0, 0x1);
        gbc.writeMem(0xdc62, { 0x4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xec5f, gbc.sp());
        EXPECT(0xdc63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdc62));
        // 04 0229
        gbc.setState(0xce52, 0x8532, 0x7f70, 0xcae, 0x3315, 0xc8bf, 0x0, 0x1);
        gbc.writeMem(0xce52, { 0x4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8532, gbc.sp());
        EXPECT(0xce53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xce52));
        // 04 022A
        gbc.setState(0x16fc, 0xbd4b, 0x7db0, 0x14e9, 0xba82, 0x9896, 0x0, 0x1);
        gbc.writeMem(0x16fc, { 0x4 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbd4b, gbc.sp());
        EXPECT(0x16fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 022B
        gbc.setState(0xd6b9, 0x9c87, 0x5d30, 0xfd87, 0x2787, 0x92f9, 0x0, 0x0);
        gbc.writeMem(0xd6b9, { 0x4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9c87, gbc.sp());
        EXPECT(0xd6ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd6b9));
        // 04 022D
        gbc.setState(0xdaa, 0x9aac, 0x7f10, 0x594, 0x4f8d, 0xcb19, 0x1, 0x1);
        gbc.writeMem(0xdaa, { 0x4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9aac, gbc.sp());
        EXPECT(0xdab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 022E
        gbc.setState(0x3a78, 0xa93, 0x7e30, 0x79e1, 0x11d0, 0x3b8f, 0x1, 0x0);
        gbc.writeMem(0x3a78, { 0x4 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa93, gbc.sp());
        EXPECT(0x3a79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 022F
        gbc.setState(0xe2e8, 0x5e46, 0xbfc0, 0x296d, 0xe747, 0xef8b, 0x1, 0x0);
        gbc.writeMem(0xe2e8, { 0x4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5e46, gbc.sp());
        EXPECT(0xe2e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe2e8));
        // 04 0230
        gbc.setState(0xd5c7, 0x38f4, 0x320, 0x7f07, 0xb68f, 0x45a7, 0x1, 0x1);
        gbc.writeMem(0xd5c7, { 0x4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x38f4, gbc.sp());
        EXPECT(0xd5c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd5c7));
        // 04 0231
        gbc.setState(0xd146, 0xa24a, 0x3880, 0x611a, 0x4a08, 0xf212, 0x0, 0x0);
        gbc.writeMem(0xd146, { 0x4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa24a, gbc.sp());
        EXPECT(0xd147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd146));
        // 04 0232
        gbc.setState(0xbd0a, 0x81be, 0x7580, 0xd0ef, 0x56b7, 0x79db, 0x0, 0x0);
        gbc.writeMem(0xbd0a, { 0x4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x81be, gbc.sp());
        EXPECT(0xbd0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xbd0a));
        // 04 0233
        gbc.setState(0xa394, 0xa0f0, 0xc2e0, 0xdcef, 0xd5b0, 0xf8c1, 0x0, 0x1);
        gbc.writeMem(0xa394, { 0x4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa0f0, gbc.sp());
        EXPECT(0xa395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa394));
        // 04 0234
        gbc.setState(0x25, 0xd3d8, 0xc300, 0x468f, 0xcda, 0xf7f0, 0x0, 0x0);
        gbc.writeMem(0x25, { 0x4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd3d8, gbc.sp());
        EXPECT(0x26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0235
        gbc.setState(0x641d, 0x3e25, 0xac0, 0x12be, 0xdfd, 0x24f2, 0x0, 0x0);
        gbc.writeMem(0x641d, { 0x4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3e25, gbc.sp());
        EXPECT(0x641e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0237
        gbc.setState(0xbb64, 0xf70a, 0xb6b0, 0x8c67, 0x52d7, 0xde5a, 0x0, 0x1);
        gbc.writeMem(0xbb64, { 0x4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf70a, gbc.sp());
        EXPECT(0xbb65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xbb64));
        // 04 0238
        gbc.setState(0xc5ae, 0xbbee, 0xeff0, 0x440d, 0xdc74, 0x17b4, 0x1, 0x0);
        gbc.writeMem(0xc5ae, { 0x4 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbbee, gbc.sp());
        EXPECT(0xc5af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc5ae));
        // 04 0239
        gbc.setState(0x6156, 0x2398, 0xdcd0, 0x6458, 0x7890, 0xcb5, 0x0, 0x0);
        gbc.writeMem(0x6156, { 0x4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2398, gbc.sp());
        EXPECT(0x6157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 023A
        gbc.setState(0x68e6, 0xa2fc, 0xc2d0, 0xa3af, 0xaac9, 0xf464, 0x0, 0x1);
        gbc.writeMem(0x68e6, { 0x4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa2fc, gbc.sp());
        EXPECT(0x68e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 023B
        gbc.setState(0x6ba1, 0xf309, 0xf6b0, 0x7881, 0x19af, 0x8398, 0x0, 0x1);
        gbc.writeMem(0x6ba1, { 0x4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf309, gbc.sp());
        EXPECT(0x6ba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 023C
        gbc.setState(0xa6ec, 0x79ff, 0x2960, 0x38a2, 0xaba2, 0xa58c, 0x1, 0x0);
        gbc.writeMem(0xa6ec, { 0x4 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x79ff, gbc.sp());
        EXPECT(0xa6ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa6ec));
        // 04 023D
        gbc.setState(0x9611, 0xb92f, 0x9b50, 0x28aa, 0x93e7, 0x5cb7, 0x0, 0x0);
        gbc.writeMem(0x9611, { 0x4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb92f, gbc.sp());
        EXPECT(0x9612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9611));
        // 04 023E
        gbc.setState(0xbc4b, 0xc4ee, 0x3d50, 0xb9a9, 0xd32c, 0xa953, 0x1, 0x1);
        gbc.writeMem(0xbc4b, { 0x4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc4ee, gbc.sp());
        EXPECT(0xbc4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xbc4b));
        // 04 023F
        gbc.setState(0x69d1, 0x2a27, 0x3620, 0x986b, 0xe55e, 0x9133, 0x1, 0x1);
        gbc.writeMem(0x69d1, { 0x4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2a27, gbc.sp());
        EXPECT(0x69d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0240
        gbc.setState(0x933a, 0x5f89, 0x2750, 0x1968, 0x26e9, 0xc9be, 0x0, 0x0);
        gbc.writeMem(0x933a, { 0x4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5f89, gbc.sp());
        EXPECT(0x933b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x933a));
        // 04 0241
        gbc.setState(0x5993, 0xb11, 0xa110, 0xbeb5, 0x408, 0xfc2a, 0x1, 0x1);
        gbc.writeMem(0x5993, { 0x4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb11, gbc.sp());
        EXPECT(0x5994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0242
        gbc.setState(0x299c, 0x5790, 0xf420, 0x9a0b, 0x2d3f, 0xa3a8, 0x1, 0x0);
        gbc.writeMem(0x299c, { 0x4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5790, gbc.sp());
        EXPECT(0x299d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0243
        gbc.setState(0x31ab, 0x5b4b, 0x3ae0, 0x8e91, 0x3556, 0x738c, 0x0, 0x1);
        gbc.writeMem(0x31ab, { 0x4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5b4b, gbc.sp());
        EXPECT(0x31ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0244
        gbc.setState(0x1f11, 0x5775, 0x42c0, 0xda5f, 0x5d9d, 0xe2d5, 0x1, 0x0);
        gbc.writeMem(0x1f11, { 0x4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5775, gbc.sp());
        EXPECT(0x1f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0245
        gbc.setState(0x6c0f, 0xe3c, 0x4550, 0xbf50, 0x36b0, 0x17fb, 0x1, 0x1);
        gbc.writeMem(0x6c0f, { 0x4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe3c, gbc.sp());
        EXPECT(0x6c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0246
        gbc.setState(0xd52f, 0x919f, 0xd850, 0x14cd, 0xafe4, 0xb4d7, 0x0, 0x1);
        gbc.writeMem(0xd52f, { 0x4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x919f, gbc.sp());
        EXPECT(0xd530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd52f));
        // 04 0247
        gbc.setState(0x8b42, 0x668e, 0x5060, 0xb289, 0x7d86, 0xec6f, 0x1, 0x0);
        gbc.writeMem(0x8b42, { 0x4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x668e, gbc.sp());
        EXPECT(0x8b43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8b42));
        // 04 0248
        gbc.setState(0xe481, 0xb766, 0xc340, 0x550e, 0x88fb, 0x7b74, 0x0, 0x0);
        gbc.writeMem(0xe481, { 0x4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb766, gbc.sp());
        EXPECT(0xe482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe481));
        // 04 0249
        gbc.setState(0x36bc, 0xda46, 0xbe50, 0x290f, 0x2a20, 0x90a1, 0x0, 0x1);
        gbc.writeMem(0x36bc, { 0x4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xda46, gbc.sp());
        EXPECT(0x36bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 024A
        gbc.setState(0x5e6c, 0xa9f5, 0x7b90, 0xbbb5, 0xd170, 0xefcb, 0x0, 0x0);
        gbc.writeMem(0x5e6c, { 0x4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa9f5, gbc.sp());
        EXPECT(0x5e6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 024B
        gbc.setState(0x88b8, 0x3e26, 0xfc80, 0x7e93, 0xa96c, 0x569, 0x0, 0x0);
        gbc.writeMem(0x88b8, { 0x4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3e26, gbc.sp());
        EXPECT(0x88b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x88b8));
        // 04 024C
        gbc.setState(0xd0a8, 0xf356, 0x4380, 0x4ff2, 0x8cb0, 0x297f, 0x1, 0x1);
        gbc.writeMem(0xd0a8, { 0x4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf356, gbc.sp());
        EXPECT(0xd0a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd0a8));
        // 04 024D
        gbc.setState(0xd765, 0xe364, 0xa30, 0xc2f5, 0xd3fd, 0xb399, 0x1, 0x1);
        gbc.writeMem(0xd765, { 0x4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe364, gbc.sp());
        EXPECT(0xd766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd765));
        // 04 024E
        gbc.setState(0x2973, 0xc914, 0x5d20, 0x2158, 0xaa13, 0x2f8a, 0x1, 0x0);
        gbc.writeMem(0x2973, { 0x4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc914, gbc.sp());
        EXPECT(0x2974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 024F
        gbc.setState(0xdea9, 0xb15b, 0x4590, 0xc1a6, 0x7250, 0x1804, 0x1, 0x0);
        gbc.writeMem(0xdea9, { 0x4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb15b, gbc.sp());
        EXPECT(0xdeaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdea9));
        // 04 0250
        gbc.setState(0x845a, 0x73e3, 0x9130, 0x95c3, 0x4b68, 0xa46b, 0x0, 0x0);
        gbc.writeMem(0x845a, { 0x4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x73e3, gbc.sp());
        EXPECT(0x845b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x845a));
        // 04 0251
        gbc.setState(0xe5e, 0xce65, 0xae60, 0xce79, 0x5973, 0xe9de, 0x0, 0x1);
        gbc.writeMem(0xe5e, { 0x4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xce65, gbc.sp());
        EXPECT(0xe5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0252
        gbc.setState(0x2be5, 0x52e1, 0x9730, 0x8e57, 0x517e, 0xae4, 0x1, 0x0);
        gbc.writeMem(0x2be5, { 0x4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x52e1, gbc.sp());
        EXPECT(0x2be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0253
        gbc.setState(0x64cd, 0x6460, 0x3670, 0xa1a0, 0xb64e, 0x6f79, 0x1, 0x0);
        gbc.writeMem(0x64cd, { 0x4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6460, gbc.sp());
        EXPECT(0x64ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0254
        gbc.setState(0x74f3, 0x2bfa, 0x16f0, 0x6190, 0xf3ca, 0xaba, 0x1, 0x1);
        gbc.writeMem(0x74f3, { 0x4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2bfa, gbc.sp());
        EXPECT(0x74f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0255
        gbc.setState(0xc985, 0xcdd0, 0x3f00, 0xa5f7, 0x93a5, 0x32ed, 0x1, 0x0);
        gbc.writeMem(0xc985, { 0x4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcdd0, gbc.sp());
        EXPECT(0xc986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc985));
        // 04 0256
        gbc.setState(0x4690, 0x38e8, 0xf620, 0x9d3f, 0xdbaf, 0xb3d8, 0x1, 0x1);
        gbc.writeMem(0x4690, { 0x4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x38e8, gbc.sp());
        EXPECT(0x4691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0257
        gbc.setState(0x2eab, 0x4eee, 0xebe0, 0xbee7, 0xe87d, 0x2d70, 0x1, 0x1);
        gbc.writeMem(0x2eab, { 0x4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4eee, gbc.sp());
        EXPECT(0x2eac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0258
        gbc.setState(0x359d, 0xb085, 0x51c0, 0xe3be, 0x59f6, 0x58b5, 0x0, 0x0);
        gbc.writeMem(0x359d, { 0x4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb085, gbc.sp());
        EXPECT(0x359e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0259
        gbc.setState(0x604e, 0xd506, 0x9a0, 0x1b90, 0xefd8, 0x1f9, 0x0, 0x1);
        gbc.writeMem(0x604e, { 0x4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd506, gbc.sp());
        EXPECT(0x604f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 025A
        gbc.setState(0xe010, 0x5dc0, 0x46c0, 0x5a8d, 0x5271, 0x85b1, 0x1, 0x1);
        gbc.writeMem(0xe010, { 0x4 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5dc0, gbc.sp());
        EXPECT(0xe011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe010));
        // 04 025C
        gbc.setState(0x4dcc, 0x614, 0x56a0, 0x1cd5, 0x386c, 0x813b, 0x0, 0x1);
        gbc.writeMem(0x4dcc, { 0x4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x614, gbc.sp());
        EXPECT(0x4dcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 025D
        gbc.setState(0xae4e, 0xbf55, 0x5120, 0x3918, 0x701f, 0xc218, 0x1, 0x0);
        gbc.writeMem(0xae4e, { 0x4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbf55, gbc.sp());
        EXPECT(0xae4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xae4e));
        // 04 025E
        gbc.setState(0xd6b, 0xd584, 0xd6f0, 0x9b2f, 0x2503, 0x1e47, 0x1, 0x0);
        gbc.writeMem(0xd6b, { 0x4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd584, gbc.sp());
        EXPECT(0xd6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 025F
        gbc.setState(0x80ce, 0xe15f, 0xb3e0, 0xa0fc, 0xcb3, 0x1f8a, 0x0, 0x1);
        gbc.writeMem(0x80ce, { 0x4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe15f, gbc.sp());
        EXPECT(0x80cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x80ce));
        // 04 0260
        gbc.setState(0x874b, 0xc4d5, 0x1170, 0xfcbe, 0xc280, 0xe70b, 0x0, 0x1);
        gbc.writeMem(0x874b, { 0x4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc4d5, gbc.sp());
        EXPECT(0x874c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x874b));
        // 04 0261
        gbc.setState(0x9fe0, 0xb3dc, 0x8870, 0xf0c4, 0xf0cd, 0xac84, 0x0, 0x1);
        gbc.writeMem(0x9fe0, { 0x4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb3dc, gbc.sp());
        EXPECT(0x9fe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9fe0));
        // 04 0262
        gbc.setState(0x9ce5, 0x18b, 0x4150, 0xe5fe, 0x6bdf, 0xed38, 0x1, 0x1);
        gbc.writeMem(0x9ce5, { 0x4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x18b, gbc.sp());
        EXPECT(0x9ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9ce5));
        // 04 0263
        gbc.setState(0xd475, 0x739a, 0x160, 0x3a71, 0x61f9, 0x920, 0x0, 0x1);
        gbc.writeMem(0xd475, { 0x4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x739a, gbc.sp());
        EXPECT(0xd476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd475));
        // 04 0264
        gbc.setState(0x5ef4, 0x27d1, 0xd570, 0xb829, 0xa71b, 0xc4f8, 0x1, 0x0);
        gbc.writeMem(0x5ef4, { 0x4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x27d1, gbc.sp());
        EXPECT(0x5ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0265
        gbc.setState(0xdc03, 0xce5c, 0x46f0, 0x1b07, 0x567c, 0xe388, 0x1, 0x0);
        gbc.writeMem(0xdc03, { 0x4 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xce5c, gbc.sp());
        EXPECT(0xdc04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdc03));
        // 04 0266
        gbc.setState(0x6851, 0xa2cb, 0x37d0, 0xff3d, 0xa10b, 0x8be4, 0x0, 0x1);
        gbc.writeMem(0x6851, { 0x4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa2cb, gbc.sp());
        EXPECT(0x6852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0268
        gbc.setState(0x3411, 0x8abd, 0x5ac0, 0xc001, 0x454, 0xc2b7, 0x0, 0x0);
        gbc.writeMem(0x3411, { 0x4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8abd, gbc.sp());
        EXPECT(0x3412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0269
        gbc.setState(0x90f6, 0x4a0b, 0x21b0, 0xe5ea, 0xc32b, 0xb22a, 0x0, 0x0);
        gbc.writeMem(0x90f6, { 0x4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4a0b, gbc.sp());
        EXPECT(0x90f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x90f6));
        // 04 026A
        gbc.setState(0x67b4, 0xa4f6, 0xf30, 0xe9e, 0x9aec, 0x17ab, 0x0, 0x1);
        gbc.writeMem(0x67b4, { 0x4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa4f6, gbc.sp());
        EXPECT(0x67b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 026B
        gbc.setState(0x43b3, 0xe825, 0xefd0, 0x6863, 0x5d08, 0x9187, 0x1, 0x0);
        gbc.writeMem(0x43b3, { 0x4 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe825, gbc.sp());
        EXPECT(0x43b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 026C
        gbc.setState(0xc598, 0x5518, 0x47a0, 0x556f, 0x5e69, 0x1841, 0x0, 0x0);
        gbc.writeMem(0xc598, { 0x4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5518, gbc.sp());
        EXPECT(0xc599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc598));
        // 04 026D
        gbc.setState(0x2442, 0xc231, 0x5380, 0xb887, 0xddef, 0xee40, 0x0, 0x1);
        gbc.writeMem(0x2442, { 0x4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc231, gbc.sp());
        EXPECT(0x2443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 026E
        gbc.setState(0xaa8a, 0xc5e9, 0x7c80, 0x5b0e, 0xd676, 0x56a4, 0x0, 0x0);
        gbc.writeMem(0xaa8a, { 0x4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc5e9, gbc.sp());
        EXPECT(0xaa8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xaa8a));
        // 04 026F
        gbc.setState(0x3e0, 0xacbf, 0xbf00, 0x4d49, 0x4bf2, 0x91a8, 0x0, 0x1);
        gbc.writeMem(0x3e0, { 0x4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xacbf, gbc.sp());
        EXPECT(0x3e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0270
        gbc.setState(0x44fc, 0xbc11, 0xbf80, 0x88f9, 0xe200, 0x8cbc, 0x1, 0x1);
        gbc.writeMem(0x44fc, { 0x4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbc11, gbc.sp());
        EXPECT(0x44fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0271
        gbc.setState(0x728b, 0xbb8, 0xc680, 0x407a, 0xa0ce, 0x133e, 0x1, 0x1);
        gbc.writeMem(0x728b, { 0x4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbb8, gbc.sp());
        EXPECT(0x728c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0272
        gbc.setState(0xefd8, 0x4632, 0x2740, 0x8d58, 0x90ab, 0x7422, 0x0, 0x0);
        gbc.writeMem(0xefd8, { 0x4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4632, gbc.sp());
        EXPECT(0xefd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xefd8));
        // 04 0273
        gbc.setState(0x71fc, 0x5a08, 0x6750, 0x11ee, 0x9704, 0x32f9, 0x1, 0x0);
        gbc.writeMem(0x71fc, { 0x4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5a08, gbc.sp());
        EXPECT(0x71fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0274
        gbc.setState(0xe31e, 0x4200, 0x90e0, 0xd99f, 0x62c8, 0x6afc, 0x0, 0x1);
        gbc.writeMem(0xe31e, { 0x4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4200, gbc.sp());
        EXPECT(0xe31f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe31e));
        // 04 0275
        gbc.setState(0xec72, 0xac10, 0xa0c0, 0x62c, 0x5c62, 0x2719, 0x1, 0x0);
        gbc.writeMem(0xec72, { 0x4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xac10, gbc.sp());
        EXPECT(0xec73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xec72));
        // 04 0276
        gbc.setState(0xae91, 0xe9f8, 0xf0f0, 0xba26, 0xb2b9, 0x5207, 0x1, 0x1);
        gbc.writeMem(0xae91, { 0x4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe9f8, gbc.sp());
        EXPECT(0xae92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xae91));
        // 04 0277
        gbc.setState(0xc126, 0xfeb6, 0x66e0, 0x901b, 0x7440, 0x86fb, 0x1, 0x1);
        gbc.writeMem(0xc126, { 0x4 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfeb6, gbc.sp());
        EXPECT(0xc127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc126));
        // 04 0278
        gbc.setState(0x91ee, 0x94a9, 0xa9b0, 0xa8f0, 0xa398, 0x2cfa, 0x0, 0x1);
        gbc.writeMem(0x91ee, { 0x4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x94a9, gbc.sp());
        EXPECT(0x91ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x91ee));
        // 04 0279
        gbc.setState(0x4c5d, 0x9a1f, 0x9460, 0x9b21, 0xd406, 0x3af8, 0x0, 0x0);
        gbc.writeMem(0x4c5d, { 0x4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9a1f, gbc.sp());
        EXPECT(0x4c5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 027A
        gbc.setState(0xae11, 0xcf00, 0xb490, 0x5bef, 0x7c2f, 0x22fd, 0x1, 0x1);
        gbc.writeMem(0xae11, { 0x4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcf00, gbc.sp());
        EXPECT(0xae12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xae11));
        // 04 027B
        gbc.setState(0x225c, 0x60bf, 0xf7d0, 0xba6b, 0x94c7, 0x9452, 0x0, 0x1);
        gbc.writeMem(0x225c, { 0x4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x60bf, gbc.sp());
        EXPECT(0x225d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 027C
        gbc.setState(0xc238, 0x6aa4, 0xea10, 0x10e8, 0x4445, 0x7ff1, 0x1, 0x1);
        gbc.writeMem(0xc238, { 0x4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6aa4, gbc.sp());
        EXPECT(0xc239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc238));
        // 04 027D
        gbc.setState(0xee9d, 0xf35e, 0x80a0, 0x7c82, 0x2eb1, 0x50e3, 0x1, 0x1);
        gbc.writeMem(0xee9d, { 0x4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf35e, gbc.sp());
        EXPECT(0xee9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xee9d));
        // 04 027E
        gbc.setState(0x8cd9, 0xdb30, 0xd610, 0xda6f, 0xd78c, 0xaa51, 0x1, 0x0);
        gbc.writeMem(0x8cd9, { 0x4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdb30, gbc.sp());
        EXPECT(0x8cda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8cd9));
        // 04 027F
        gbc.setState(0x3797, 0x1b0d, 0x150, 0xc340, 0x8be1, 0xa5c2, 0x0, 0x0);
        gbc.writeMem(0x3797, { 0x4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1b0d, gbc.sp());
        EXPECT(0x3798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0280
        gbc.setState(0x3aad, 0x29c3, 0x700, 0x5c81, 0xd71, 0xe0d4, 0x0, 0x1);
        gbc.writeMem(0x3aad, { 0x4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x29c3, gbc.sp());
        EXPECT(0x3aae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0281
        gbc.setState(0xac73, 0x66f7, 0x8f30, 0x15cf, 0xdf81, 0xac15, 0x0, 0x0);
        gbc.writeMem(0xac73, { 0x4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x66f7, gbc.sp());
        EXPECT(0xac74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xac73));
        // 04 0282
        gbc.setState(0x151a, 0x5279, 0xd6a0, 0x919a, 0xcbae, 0x32f5, 0x0, 0x1);
        gbc.writeMem(0x151a, { 0x4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5279, gbc.sp());
        EXPECT(0x151b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0283
        gbc.setState(0x9656, 0x1e53, 0x6b40, 0x1730, 0x29a2, 0x8941, 0x1, 0x1);
        gbc.writeMem(0x9656, { 0x4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1e53, gbc.sp());
        EXPECT(0x9657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9656));
        // 04 0284
        gbc.setState(0xe09a, 0xe9b, 0xb8c0, 0xf23d, 0xbee9, 0xeb24, 0x1, 0x0);
        gbc.writeMem(0xe09a, { 0x4 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe9b, gbc.sp());
        EXPECT(0xe09b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe09a));
        // 04 0285
        gbc.setState(0x4bf9, 0x46b9, 0x1f50, 0xd949, 0x92ce, 0x7517, 0x1, 0x1);
        gbc.writeMem(0x4bf9, { 0x4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x46b9, gbc.sp());
        EXPECT(0x4bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0286
        gbc.setState(0xdcc7, 0xdb08, 0x1e20, 0xbb67, 0xab14, 0xe818, 0x0, 0x0);
        gbc.writeMem(0xdcc7, { 0x4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xdb08, gbc.sp());
        EXPECT(0xdcc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdcc7));
        // 04 0288
        gbc.setState(0xe147, 0xf46a, 0x9980, 0x3f51, 0x105c, 0xefdd, 0x1, 0x1);
        gbc.writeMem(0xe147, { 0x4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf46a, gbc.sp());
        EXPECT(0xe148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe147));
        // 04 0289
        gbc.setState(0xb77b, 0x2c3a, 0xab60, 0x6ebe, 0x5c35, 0x50b3, 0x1, 0x0);
        gbc.writeMem(0xb77b, { 0x4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2c3a, gbc.sp());
        EXPECT(0xb77c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb77b));
        // 04 028A
        gbc.setState(0xa8a, 0x69c7, 0x2f0, 0xbd8b, 0x1a8c, 0x124f, 0x0, 0x1);
        gbc.writeMem(0xa8a, { 0x4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x69c7, gbc.sp());
        EXPECT(0xa8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 028C
        gbc.setState(0x43e7, 0xc2d9, 0x2280, 0x1fc7, 0x79d4, 0x68bf, 0x1, 0x1);
        gbc.writeMem(0x43e7, { 0x4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc2d9, gbc.sp());
        EXPECT(0x43e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 028D
        gbc.setState(0xc865, 0x8aa9, 0xf330, 0x2c87, 0x980d, 0x6f3f, 0x1, 0x1);
        gbc.writeMem(0xc865, { 0x4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8aa9, gbc.sp());
        EXPECT(0xc866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc865));
        // 04 028E
        gbc.setState(0xeaa6, 0xcf29, 0x9150, 0x37c3, 0x4a98, 0xc5cd, 0x0, 0x1);
        gbc.writeMem(0xeaa6, { 0x4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcf29, gbc.sp());
        EXPECT(0xeaa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xeaa6));
        // 04 028F
        gbc.setState(0xe013, 0x9128, 0xccb0, 0x8f66, 0xfc1, 0x9079, 0x0, 0x1);
        gbc.writeMem(0xe013, { 0x4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9128, gbc.sp());
        EXPECT(0xe014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe013));
        // 04 0290
        gbc.setState(0x309, 0xd168, 0xf4d0, 0x4279, 0x4ad4, 0x1e3c, 0x0, 0x0);
        gbc.writeMem(0x309, { 0x4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd168, gbc.sp());
        EXPECT(0x30a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0291
        gbc.setState(0xe62c, 0x27e2, 0x6950, 0x39d1, 0x4eb, 0x9074, 0x1, 0x1);
        gbc.writeMem(0xe62c, { 0x4 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x27e2, gbc.sp());
        EXPECT(0xe62d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe62c));
        // 04 0292
        gbc.setState(0xe4f1, 0x467f, 0xd750, 0x3756, 0x43c7, 0xd654, 0x1, 0x0);
        gbc.writeMem(0xe4f1, { 0x4 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x467f, gbc.sp());
        EXPECT(0xe4f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe4f1));
        // 04 0293
        gbc.setState(0x4dd, 0x1bce, 0x7800, 0x5415, 0x5cc6, 0xd1b2, 0x1, 0x0);
        gbc.writeMem(0x4dd, { 0x4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1bce, gbc.sp());
        EXPECT(0x4de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0294
        gbc.setState(0xafe7, 0x8ec2, 0xfe40, 0xbb75, 0xba48, 0x1ea6, 0x0, 0x0);
        gbc.writeMem(0xafe7, { 0x4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8ec2, gbc.sp());
        EXPECT(0xafe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xafe7));
        // 04 0295
        gbc.setState(0x6bfb, 0x68ca, 0x8810, 0x23fa, 0x12f3, 0x17af, 0x1, 0x0);
        gbc.writeMem(0x6bfb, { 0x4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x68ca, gbc.sp());
        EXPECT(0x6bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0296
        gbc.setState(0x95c0, 0xf0d7, 0xe010, 0x9e81, 0x6a12, 0x8ff3, 0x0, 0x0);
        gbc.writeMem(0x95c0, { 0x4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf0d7, gbc.sp());
        EXPECT(0x95c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x95c0));
        // 04 0297
        gbc.setState(0x4171, 0xff42, 0x4ae0, 0xc7b9, 0xaf1b, 0x4e4e, 0x1, 0x0);
        gbc.writeMem(0x4171, { 0x4 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xff42, gbc.sp());
        EXPECT(0x4172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0298
        gbc.setState(0xabe9, 0x17d4, 0xda20, 0xaa06, 0xd22b, 0x8ad7, 0x1, 0x1);
        gbc.writeMem(0xabe9, { 0x4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x17d4, gbc.sp());
        EXPECT(0xabea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xabe9));
        // 04 0299
        gbc.setState(0xc238, 0x74b7, 0x42e0, 0xa78b, 0x8c28, 0xb315, 0x0, 0x1);
        gbc.writeMem(0xc238, { 0x4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x74b7, gbc.sp());
        EXPECT(0xc239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc238));
        // 04 029A
        gbc.setState(0xaf37, 0x397, 0x5e60, 0x42cf, 0x89, 0x7a62, 0x1, 0x1);
        gbc.writeMem(0xaf37, { 0x4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x397, gbc.sp());
        EXPECT(0xaf38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xaf37));
        // 04 029B
        gbc.setState(0x3f1b, 0xc7e8, 0x160, 0xb732, 0x24d5, 0xa8b0, 0x0, 0x0);
        gbc.writeMem(0x3f1b, { 0x4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc7e8, gbc.sp());
        EXPECT(0x3f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 029C
        gbc.setState(0xdc19, 0x4927, 0xfb10, 0xe1cd, 0xa76c, 0xbfc5, 0x0, 0x0);
        gbc.writeMem(0xdc19, { 0x4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4927, gbc.sp());
        EXPECT(0xdc1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdc19));
        // 04 029D
        gbc.setState(0x1eae, 0xcc77, 0xa150, 0xfaf0, 0xd0be, 0xc10a, 0x1, 0x0);
        gbc.writeMem(0x1eae, { 0x4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcc77, gbc.sp());
        EXPECT(0x1eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 029E
        gbc.setState(0x8813, 0x20b2, 0x3b80, 0x84b6, 0x552c, 0xdd06, 0x1, 0x1);
        gbc.writeMem(0x8813, { 0x4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x20b2, gbc.sp());
        EXPECT(0x8814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8813));
        // 04 029F
        gbc.setState(0x201d, 0x46e7, 0xe990, 0xdfa, 0x5cec, 0x22a4, 0x0, 0x1);
        gbc.writeMem(0x201d, { 0x4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x46e7, gbc.sp());
        EXPECT(0x201e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02A0
        gbc.setState(0xd0c0, 0x7d2b, 0xba10, 0xb0a5, 0xb39f, 0xf593, 0x1, 0x1);
        gbc.writeMem(0xd0c0, { 0x4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7d2b, gbc.sp());
        EXPECT(0xd0c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd0c0));
        // 04 02A1
        gbc.setState(0xa795, 0x5624, 0x1340, 0x8044, 0xa811, 0x88c, 0x1, 0x1);
        gbc.writeMem(0xa795, { 0x4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5624, gbc.sp());
        EXPECT(0xa796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa795));
        // 04 02A2
        gbc.setState(0xc88b, 0x21b7, 0xb1e0, 0x4d8f, 0x4df9, 0x312a, 0x0, 0x1);
        gbc.writeMem(0xc88b, { 0x4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x21b7, gbc.sp());
        EXPECT(0xc88c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc88b));
        // 04 02A3
        gbc.setState(0x7b60, 0xbcda, 0x6c40, 0x6a49, 0x2c62, 0x9233, 0x0, 0x0);
        gbc.writeMem(0x7b60, { 0x4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xbcda, gbc.sp());
        EXPECT(0x7b61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02A4
        gbc.setState(0xc6e0, 0x7ac, 0x3d60, 0x6ffb, 0x36fb, 0x7348, 0x0, 0x0);
        gbc.writeMem(0xc6e0, { 0x4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7ac, gbc.sp());
        EXPECT(0xc6e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc6e0));
        // 04 02A5
        gbc.setState(0xebfb, 0x14c8, 0x1d00, 0xc49e, 0x6e2d, 0xc19f, 0x0, 0x0);
        gbc.writeMem(0xebfb, { 0x4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x14c8, gbc.sp());
        EXPECT(0xebfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xebfb));
        // 04 02A6
        gbc.setState(0xb152, 0x1731, 0x74e0, 0x4bb7, 0xd036, 0xe82f, 0x0, 0x1);
        gbc.writeMem(0xb152, { 0x4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1731, gbc.sp());
        EXPECT(0xb153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb152));
        // 04 02A7
        gbc.setState(0xcf6, 0x36b7, 0x36f0, 0xf92a, 0x6dc6, 0x9330, 0x0, 0x1);
        gbc.writeMem(0xcf6, { 0x4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x36b7, gbc.sp());
        EXPECT(0xcf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02A9
        gbc.setState(0x111e, 0xde13, 0x770, 0x9264, 0x2cc9, 0xfd5d, 0x1, 0x0);
        gbc.writeMem(0x111e, { 0x4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xde13, gbc.sp());
        EXPECT(0x111f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02AA
        gbc.setState(0x49a5, 0xa9a3, 0x3520, 0xd49a, 0xf7f0, 0x96de, 0x1, 0x0);
        gbc.writeMem(0x49a5, { 0x4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa9a3, gbc.sp());
        EXPECT(0x49a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02AB
        gbc.setState(0x2688, 0x68a5, 0x9f60, 0x9062, 0x6795, 0xd483, 0x0, 0x0);
        gbc.writeMem(0x2688, { 0x4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x68a5, gbc.sp());
        EXPECT(0x2689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02AC
        gbc.setState(0x2419, 0xd3eb, 0x4e40, 0xca6c, 0x20f, 0x2c2e, 0x1, 0x1);
        gbc.writeMem(0x2419, { 0x4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd3eb, gbc.sp());
        EXPECT(0x241a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02AD
        gbc.setState(0xe00f, 0x59cc, 0x1210, 0x7183, 0x6ee0, 0x14a7, 0x0, 0x0);
        gbc.writeMem(0xe00f, { 0x4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x59cc, gbc.sp());
        EXPECT(0xe010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe00f));
        // 04 02AE
        gbc.setState(0x7258, 0xd2c7, 0x7830, 0x3623, 0xa746, 0xd717, 0x1, 0x0);
        gbc.writeMem(0x7258, { 0x4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd2c7, gbc.sp());
        EXPECT(0x7259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02AF
        gbc.setState(0x11c, 0xcffa, 0xafd0, 0x2519, 0x10a9, 0x30c5, 0x1, 0x1);
        gbc.writeMem(0x11c, { 0x4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xcffa, gbc.sp());
        EXPECT(0x11d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02B0
        gbc.setState(0xe6a8, 0x225f, 0x6cf0, 0xc2a5, 0x9c8e, 0xae4, 0x1, 0x1);
        gbc.writeMem(0xe6a8, { 0x4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x225f, gbc.sp());
        EXPECT(0xe6a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe6a8));
        // 04 02B1
        gbc.setState(0xca5f, 0x3078, 0xc2d0, 0x2e48, 0x7e23, 0x88c5, 0x1, 0x1);
        gbc.writeMem(0xca5f, { 0x4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3078, gbc.sp());
        EXPECT(0xca60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xca5f));
        // 04 02B2
        gbc.setState(0x9109, 0xff36, 0x3840, 0xb864, 0x7a6c, 0xfb2d, 0x1, 0x1);
        gbc.writeMem(0x9109, { 0x4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xff36, gbc.sp());
        EXPECT(0x910a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9109));
        // 04 02B3
        gbc.setState(0x48, 0x52f1, 0x5000, 0x5b7c, 0x225f, 0x1f9e, 0x1, 0x1);
        gbc.writeMem(0x48, { 0x4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x52f1, gbc.sp());
        EXPECT(0x49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02B4
        gbc.setState(0x9c86, 0xbb2b, 0xf290, 0xee03, 0x2342, 0x5ab9, 0x0, 0x1);
        gbc.writeMem(0x9c86, { 0x4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbb2b, gbc.sp());
        EXPECT(0x9c87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9c86));
        // 04 02B5
        gbc.setState(0xc356, 0x79ef, 0xe870, 0x4a7d, 0x20d0, 0x19ee, 0x0, 0x0);
        gbc.writeMem(0xc356, { 0x4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x79ef, gbc.sp());
        EXPECT(0xc357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc356));
        // 04 02B6
        gbc.setState(0x3ba8, 0xd465, 0x2300, 0x45f, 0xf949, 0x3705, 0x0, 0x1);
        gbc.writeMem(0x3ba8, { 0x4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd465, gbc.sp());
        EXPECT(0x3ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02B7
        gbc.setState(0xd312, 0xe72f, 0xd2a0, 0x6791, 0xdc52, 0x94eb, 0x0, 0x0);
        gbc.writeMem(0xd312, { 0x4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe72f, gbc.sp());
        EXPECT(0xd313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd312));
        // 04 02B8
        gbc.setState(0x5eaa, 0x2d30, 0x7c60, 0x50d7, 0xd2, 0x7d4d, 0x0, 0x0);
        gbc.writeMem(0x5eaa, { 0x4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2d30, gbc.sp());
        EXPECT(0x5eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02B9
        gbc.setState(0xc149, 0x4f07, 0x5040, 0x4726, 0xa88f, 0x1c2b, 0x0, 0x0);
        gbc.writeMem(0xc149, { 0x4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4f07, gbc.sp());
        EXPECT(0xc14a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc149));
        // 04 02BA
        gbc.setState(0x26b5, 0xbf2d, 0x3d40, 0x553f, 0x5f5a, 0xd3dd, 0x0, 0x0);
        gbc.writeMem(0x26b5, { 0x4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xbf2d, gbc.sp());
        EXPECT(0x26b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02BB
        gbc.setState(0x2dea, 0xd3a4, 0xeb20, 0xa32d, 0xc656, 0xde4d, 0x1, 0x1);
        gbc.writeMem(0x2dea, { 0x4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd3a4, gbc.sp());
        EXPECT(0x2deb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02BC
        gbc.setState(0xb17e, 0x3c68, 0x6040, 0x8b76, 0xb131, 0x81bf, 0x1, 0x1);
        gbc.writeMem(0xb17e, { 0x4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3c68, gbc.sp());
        EXPECT(0xb17f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb17e));
        // 04 02BD
        gbc.setState(0x5f66, 0x1d84, 0x530, 0xb54e, 0xf973, 0xe07d, 0x0, 0x0);
        gbc.writeMem(0x5f66, { 0x4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1d84, gbc.sp());
        EXPECT(0x5f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02BE
        gbc.setState(0x7b5f, 0xde1f, 0x6a30, 0xbecd, 0xf086, 0xe4b7, 0x1, 0x1);
        gbc.writeMem(0x7b5f, { 0x4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xde1f, gbc.sp());
        EXPECT(0x7b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02BF
        gbc.setState(0x3fb1, 0x1975, 0xce00, 0xa870, 0x3370, 0x3b2d, 0x0, 0x1);
        gbc.writeMem(0x3fb1, { 0x4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1975, gbc.sp());
        EXPECT(0x3fb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02C0
        gbc.setState(0xadaf, 0x834b, 0x77f0, 0x4ddc, 0xfe55, 0x712d, 0x0, 0x1);
        gbc.writeMem(0xadaf, { 0x4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x834b, gbc.sp());
        EXPECT(0xadb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xadaf));
        // 04 02C1
        gbc.setState(0x9adb, 0x6da, 0x1b60, 0x4c0, 0xf05f, 0x4b0a, 0x0, 0x1);
        gbc.writeMem(0x9adb, { 0x4 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6da, gbc.sp());
        EXPECT(0x9adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9adb));
        // 04 02C2
        gbc.setState(0xce4b, 0xfea7, 0x6f80, 0x2536, 0x3b27, 0x78f, 0x0, 0x0);
        gbc.writeMem(0xce4b, { 0x4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfea7, gbc.sp());
        EXPECT(0xce4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xce4b));
        // 04 02C3
        gbc.setState(0x3058, 0x7655, 0xcd50, 0x5923, 0xf8a9, 0x4ea8, 0x0, 0x0);
        gbc.writeMem(0x3058, { 0x4 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7655, gbc.sp());
        EXPECT(0x3059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02C4
        gbc.setState(0x214f, 0xd4d4, 0x6890, 0x2fab, 0xcfe9, 0x8ced, 0x1, 0x1);
        gbc.writeMem(0x214f, { 0x4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd4d4, gbc.sp());
        EXPECT(0x2150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02C5
        gbc.setState(0xca3d, 0x52a6, 0x3d60, 0x8d7e, 0x2959, 0xcd41, 0x0, 0x1);
        gbc.writeMem(0xca3d, { 0x4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x52a6, gbc.sp());
        EXPECT(0xca3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xca3d));
        // 04 02C6
        gbc.setState(0xaa82, 0xf0c, 0xd4e0, 0x4004, 0xb553, 0xea97, 0x0, 0x1);
        gbc.writeMem(0xaa82, { 0x4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf0c, gbc.sp());
        EXPECT(0xaa83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xaa82));
        // 04 02C7
        gbc.setState(0xbc02, 0x2981, 0x3bf0, 0xaf4e, 0x39a, 0xb7e0, 0x0, 0x0);
        gbc.writeMem(0xbc02, { 0x4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2981, gbc.sp());
        EXPECT(0xbc03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xbc02));
        // 04 02C8
        gbc.setState(0x3cb4, 0x419f, 0x5b50, 0x565c, 0x10d7, 0x5af, 0x1, 0x0);
        gbc.writeMem(0x3cb4, { 0x4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x419f, gbc.sp());
        EXPECT(0x3cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02C9
        gbc.setState(0x84cb, 0xe45e, 0xd880, 0xdf1a, 0x5082, 0x496, 0x0, 0x0);
        gbc.writeMem(0x84cb, { 0x4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe45e, gbc.sp());
        EXPECT(0x84cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x84cb));
        // 04 02CA
        gbc.setState(0xac42, 0xa539, 0x9120, 0x7f9c, 0x2b76, 0x393e, 0x1, 0x1);
        gbc.writeMem(0xac42, { 0x4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa539, gbc.sp());
        EXPECT(0xac43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xac42));
        // 04 02CB
        gbc.setState(0xca68, 0x7f80, 0x21c0, 0x72bf, 0x3b33, 0x49a3, 0x0, 0x1);
        gbc.writeMem(0xca68, { 0x4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7f80, gbc.sp());
        EXPECT(0xca69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xca68));
        // 04 02CC
        gbc.setState(0x652, 0x47a4, 0x2a30, 0x5c3c, 0x9d41, 0x4ac, 0x1, 0x0);
        gbc.writeMem(0x652, { 0x4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x47a4, gbc.sp());
        EXPECT(0x653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02CD
        gbc.setState(0x5b73, 0xe5f3, 0xeda0, 0xd794, 0x8d6, 0xa4f2, 0x1, 0x1);
        gbc.writeMem(0x5b73, { 0x4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe5f3, gbc.sp());
        EXPECT(0x5b74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02CE
        gbc.setState(0x8ad5, 0x398e, 0x1130, 0xf68f, 0x2100, 0x8f74, 0x1, 0x0);
        gbc.writeMem(0x8ad5, { 0x4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x398e, gbc.sp());
        EXPECT(0x8ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8ad5));
        // 04 02CF
        gbc.setState(0xd9c7, 0xed43, 0xa880, 0x57cd, 0x79d5, 0x5bc, 0x1, 0x0);
        gbc.writeMem(0xd9c7, { 0x4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xed43, gbc.sp());
        EXPECT(0xd9c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd9c7));
        // 04 02D0
        gbc.setState(0x6262, 0xb559, 0x4e30, 0x428c, 0xf72a, 0xbda, 0x1, 0x1);
        gbc.writeMem(0x6262, { 0x4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb559, gbc.sp());
        EXPECT(0x6263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02D1
        gbc.setState(0x7cd6, 0xb79c, 0xef70, 0xba3, 0x221f, 0xfa4a, 0x1, 0x0);
        gbc.writeMem(0x7cd6, { 0x4 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb79c, gbc.sp());
        EXPECT(0x7cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02D2
        gbc.setState(0xa308, 0x6120, 0xe730, 0x7625, 0xcaea, 0x9e87, 0x1, 0x0);
        gbc.writeMem(0xa308, { 0x4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6120, gbc.sp());
        EXPECT(0xa309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa308));
        // 04 02D3
        gbc.setState(0xdb57, 0x7bec, 0xb770, 0xfae6, 0x53e5, 0x10c6, 0x1, 0x1);
        gbc.writeMem(0xdb57, { 0x4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7bec, gbc.sp());
        EXPECT(0xdb58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdb57));
        // 04 02D4
        gbc.setState(0x32e7, 0x2c02, 0x85a0, 0xd513, 0x9a38, 0xf43, 0x1, 0x1);
        gbc.writeMem(0x32e7, { 0x4 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2c02, gbc.sp());
        EXPECT(0x32e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02D5
        gbc.setState(0xccc5, 0xbc35, 0xbea0, 0x949e, 0x7dfe, 0xcf02, 0x1, 0x1);
        gbc.writeMem(0xccc5, { 0x4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbc35, gbc.sp());
        EXPECT(0xccc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xccc5));
        // 04 02D6
        gbc.setState(0x2e96, 0xa984, 0xd440, 0x2e35, 0x62db, 0x8e9c, 0x0, 0x1);
        gbc.writeMem(0x2e96, { 0x4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa984, gbc.sp());
        EXPECT(0x2e97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02D7
        gbc.setState(0x5ad5, 0xd82e, 0x6b60, 0x349e, 0xdeed, 0xa533, 0x1, 0x0);
        gbc.writeMem(0x5ad5, { 0x4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd82e, gbc.sp());
        EXPECT(0x5ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02D8
        gbc.setState(0x1551, 0x97fc, 0x45f0, 0x5c4d, 0x8ac3, 0xa6f7, 0x1, 0x1);
        gbc.writeMem(0x1551, { 0x4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x97fc, gbc.sp());
        EXPECT(0x1552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02D9
        gbc.setState(0x3e86, 0xc5e1, 0x6c70, 0xba05, 0x32fa, 0x9c3b, 0x0, 0x0);
        gbc.writeMem(0x3e86, { 0x4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc5e1, gbc.sp());
        EXPECT(0x3e87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02DA
        gbc.setState(0x62f6, 0x7702, 0x5a60, 0x7aff, 0x119d, 0x1f19, 0x0, 0x1);
        gbc.writeMem(0x62f6, { 0x4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7702, gbc.sp());
        EXPECT(0x62f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02DB
        gbc.setState(0x602b, 0x173a, 0xb2b0, 0xaf38, 0xe5f0, 0xf291, 0x1, 0x0);
        gbc.writeMem(0x602b, { 0x4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x173a, gbc.sp());
        EXPECT(0x602c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02DC
        gbc.setState(0xdd69, 0x8b59, 0x4de0, 0x89dc, 0x1b38, 0xbd30, 0x1, 0x1);
        gbc.writeMem(0xdd69, { 0x4 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8b59, gbc.sp());
        EXPECT(0xdd6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdd69));
        // 04 02DD
        gbc.setState(0x5d07, 0x5a0, 0x1c40, 0xfce5, 0x7ad7, 0xe4e9, 0x0, 0x1);
        gbc.writeMem(0x5d07, { 0x4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5a0, gbc.sp());
        EXPECT(0x5d08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02DE
        gbc.setState(0x927e, 0x244a, 0xa2f0, 0xdfb9, 0x27ec, 0x48d3, 0x1, 0x1);
        gbc.writeMem(0x927e, { 0x4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x244a, gbc.sp());
        EXPECT(0x927f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x927e));
        // 04 02DF
        gbc.setState(0x2757, 0x42df, 0x9410, 0x8c90, 0xfb69, 0x249, 0x1, 0x1);
        gbc.writeMem(0x2757, { 0x4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x42df, gbc.sp());
        EXPECT(0x2758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02E0
        gbc.setState(0xef9b, 0xfb92, 0x6e80, 0x57ef, 0xece7, 0x74e7, 0x0, 0x1);
        gbc.writeMem(0xef9b, { 0x4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xfb92, gbc.sp());
        EXPECT(0xef9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xef9b));
        // 04 02E1
        gbc.setState(0x12d2, 0xf381, 0x55b0, 0xa2c8, 0x5940, 0xd979, 0x1, 0x1);
        gbc.writeMem(0x12d2, { 0x4 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf381, gbc.sp());
        EXPECT(0x12d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02E2
        gbc.setState(0x286f, 0x6e1a, 0x9fb0, 0x5a3c, 0xe067, 0x69a4, 0x0, 0x1);
        gbc.writeMem(0x286f, { 0x4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6e1a, gbc.sp());
        EXPECT(0x2870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02E3
        gbc.setState(0x643, 0x2778, 0xc410, 0x2fe0, 0xe05f, 0x5221, 0x0, 0x0);
        gbc.writeMem(0x643, { 0x4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2778, gbc.sp());
        EXPECT(0x644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02E4
        gbc.setState(0x33f2, 0xeef6, 0x9360, 0x84aa, 0x5789, 0x9f, 0x0, 0x0);
        gbc.writeMem(0x33f2, { 0x4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xeef6, gbc.sp());
        EXPECT(0x33f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02E5
        gbc.setState(0xc1f6, 0xa5, 0x1330, 0xc5c8, 0x2b75, 0xe155, 0x0, 0x1);
        gbc.writeMem(0xc1f6, { 0x4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa5, gbc.sp());
        EXPECT(0xc1f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc1f6));
        // 04 02E8
        gbc.setState(0x7812, 0x5a3b, 0x8320, 0x9911, 0x44b0, 0x9e5b, 0x1, 0x1);
        gbc.writeMem(0x7812, { 0x4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5a3b, gbc.sp());
        EXPECT(0x7813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02E9
        gbc.setState(0xd103, 0xffda, 0x2cb0, 0x87a4, 0x2502, 0xde85, 0x1, 0x0);
        gbc.writeMem(0xd103, { 0x4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xffda, gbc.sp());
        EXPECT(0xd104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd103));
        // 04 02EA
        gbc.setState(0x283f, 0xca9b, 0x8d80, 0x1a7d, 0xab00, 0x1aa5, 0x0, 0x0);
        gbc.writeMem(0x283f, { 0x4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xca9b, gbc.sp());
        EXPECT(0x2840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02EB
        gbc.setState(0xde24, 0xb5f3, 0x6bd0, 0xbf67, 0xbfd1, 0xc2f0, 0x0, 0x1);
        gbc.writeMem(0xde24, { 0x4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb5f3, gbc.sp());
        EXPECT(0xde25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xde24));
        // 04 02EC
        gbc.setState(0x14d4, 0x8fdc, 0x51e0, 0x39a8, 0x18b7, 0xa78c, 0x1, 0x0);
        gbc.writeMem(0x14d4, { 0x4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8fdc, gbc.sp());
        EXPECT(0x14d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02ED
        gbc.setState(0x221e, 0x3238, 0xf670, 0xf516, 0x2b89, 0xb028, 0x1, 0x0);
        gbc.writeMem(0x221e, { 0x4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3238, gbc.sp());
        EXPECT(0x221f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02EE
        gbc.setState(0x9d8d, 0xc628, 0xab70, 0x39bb, 0xc304, 0x7dcf, 0x0, 0x1);
        gbc.writeMem(0x9d8d, { 0x4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc628, gbc.sp());
        EXPECT(0x9d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9d8d));
        // 04 02EF
        gbc.setState(0x2759, 0xefcb, 0xe80, 0x2392, 0x376, 0x1726, 0x1, 0x1);
        gbc.writeMem(0x2759, { 0x4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xefcb, gbc.sp());
        EXPECT(0x275a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02F0
        gbc.setState(0xd88f, 0x393e, 0xb0b0, 0xc51c, 0x50ed, 0x84a0, 0x0, 0x1);
        gbc.writeMem(0xd88f, { 0x4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x393e, gbc.sp());
        EXPECT(0xd890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd88f));
        // 04 02F1
        gbc.setState(0x3653, 0x61da, 0x31e0, 0x4a83, 0xa2fe, 0xe12e, 0x1, 0x1);
        gbc.writeMem(0x3653, { 0x4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x61da, gbc.sp());
        EXPECT(0x3654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02F2
        gbc.setState(0xb2f2, 0x3d77, 0xc810, 0xf98c, 0xd71d, 0xf13d, 0x1, 0x1);
        gbc.writeMem(0xb2f2, { 0x4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3d77, gbc.sp());
        EXPECT(0xb2f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb2f2));
        // 04 02F3
        gbc.setState(0x9e70, 0x88b0, 0x8b50, 0x79d8, 0x7391, 0xf13d, 0x0, 0x1);
        gbc.writeMem(0x9e70, { 0x4 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x88b0, gbc.sp());
        EXPECT(0x9e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9e70));
        // 04 02F4
        gbc.setState(0x74a9, 0x4945, 0xdcb0, 0x1595, 0xa57f, 0xb9f5, 0x0, 0x1);
        gbc.writeMem(0x74a9, { 0x4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4945, gbc.sp());
        EXPECT(0x74aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02F5
        gbc.setState(0xed2, 0x4891, 0x6dd0, 0x3fad, 0x80e8, 0xbea0, 0x1, 0x1);
        gbc.writeMem(0xed2, { 0x4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4891, gbc.sp());
        EXPECT(0xed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02F6
        gbc.setState(0xdbf9, 0x69b3, 0xede0, 0x6ce3, 0x7814, 0x1ce5, 0x1, 0x0);
        gbc.writeMem(0xdbf9, { 0x4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x69b3, gbc.sp());
        EXPECT(0xdbfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdbf9));
        // 04 02F7
        gbc.setState(0x2dcb, 0x5328, 0x97b0, 0xd89b, 0xc047, 0x9dee, 0x1, 0x0);
        gbc.writeMem(0x2dcb, { 0x4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5328, gbc.sp());
        EXPECT(0x2dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02F8
        gbc.setState(0x30a, 0x3c98, 0x7c90, 0x9f90, 0xb105, 0xb6d3, 0x1, 0x0);
        gbc.writeMem(0x30a, { 0x4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3c98, gbc.sp());
        EXPECT(0x30b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02F9
        gbc.setState(0x84cf, 0xdf45, 0x76e0, 0x6942, 0x88ce, 0xf29b, 0x1, 0x1);
        gbc.writeMem(0x84cf, { 0x4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdf45, gbc.sp());
        EXPECT(0x84d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x84cf));
        // 04 02FA
        gbc.setState(0x124d, 0xc288, 0xcd70, 0xe424, 0xbe72, 0x3f55, 0x0, 0x1);
        gbc.writeMem(0x124d, { 0x4 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc288, gbc.sp());
        EXPECT(0x124e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02FB
        gbc.setState(0x6e36, 0x5786, 0xcc80, 0x3e0, 0xd5de, 0x695e, 0x1, 0x1);
        gbc.writeMem(0x6e36, { 0x4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5786, gbc.sp());
        EXPECT(0x6e37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 02FC
        gbc.setState(0x9556, 0x90be, 0x2760, 0xef6a, 0xa385, 0xb6f, 0x1, 0x1);
        gbc.writeMem(0x9556, { 0x4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x90be, gbc.sp());
        EXPECT(0x9557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9556));
        // 04 02FD
        gbc.setState(0x2ab1, 0xf51d, 0xc0b0, 0xcac2, 0x7204, 0x11bd, 0x1, 0x0);
        gbc.writeMem(0x2ab1, { 0x4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf51d, gbc.sp());
        EXPECT(0x2ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 02FE
        gbc.setState(0xd57d, 0x96d1, 0xf690, 0x23bd, 0x22f4, 0xe0ef, 0x0, 0x0);
        gbc.writeMem(0xd57d, { 0x4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x96d1, gbc.sp());
        EXPECT(0xd57e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd57d));
        // 04 02FF
        gbc.setState(0xb6be, 0xc489, 0x770, 0x2713, 0xac7d, 0x5ce8, 0x1, 0x0);
        gbc.writeMem(0xb6be, { 0x4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc489, gbc.sp());
        EXPECT(0xb6bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb6be));
        // 04 0300
        gbc.setState(0xcb6b, 0x1d95, 0xeca0, 0x7352, 0x641d, 0xf187, 0x0, 0x1);
        gbc.writeMem(0xcb6b, { 0x4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1d95, gbc.sp());
        EXPECT(0xcb6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xcb6b));
        // 04 0301
        gbc.setState(0x33a1, 0x9c, 0xaf00, 0xe1c6, 0x4de3, 0x4cf, 0x1, 0x0);
        gbc.writeMem(0x33a1, { 0x4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9c, gbc.sp());
        EXPECT(0x33a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0302
        gbc.setState(0xe238, 0xb483, 0xd610, 0xe6de, 0x49b4, 0x8525, 0x0, 0x1);
        gbc.writeMem(0xe238, { 0x4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb483, gbc.sp());
        EXPECT(0xe239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe238));
        // 04 0303
        gbc.setState(0xc7f1, 0x4b70, 0x3f70, 0xaea1, 0x4963, 0xc519, 0x0, 0x0);
        gbc.writeMem(0xc7f1, { 0x4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4b70, gbc.sp());
        EXPECT(0xc7f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc7f1));
        // 04 0304
        gbc.setState(0x3dc5, 0xf41b, 0x5400, 0x8dbd, 0x9c78, 0xa076, 0x1, 0x0);
        gbc.writeMem(0x3dc5, { 0x4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf41b, gbc.sp());
        EXPECT(0x3dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0305
        gbc.setState(0xaadf, 0x8c6e, 0x3230, 0x1c98, 0x3935, 0xa58a, 0x1, 0x0);
        gbc.writeMem(0xaadf, { 0x4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8c6e, gbc.sp());
        EXPECT(0xaae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xaadf));
        // 04 0306
        gbc.setState(0x3f53, 0xf7ce, 0x1750, 0x7c52, 0x879c, 0x7c6e, 0x0, 0x1);
        gbc.writeMem(0x3f53, { 0x4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf7ce, gbc.sp());
        EXPECT(0x3f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0307
        gbc.setState(0x5142, 0x494c, 0x6270, 0x9e7f, 0x74f, 0x1579, 0x0, 0x0);
        gbc.writeMem(0x5142, { 0x4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x494c, gbc.sp());
        EXPECT(0x5143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0308
        gbc.setState(0x7ba6, 0x943, 0x7860, 0xcfc8, 0x26f9, 0x159e, 0x1, 0x0);
        gbc.writeMem(0x7ba6, { 0x4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x943, gbc.sp());
        EXPECT(0x7ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 030A
        gbc.setState(0x423, 0x866a, 0x7390, 0x648d, 0x1918, 0x21b6, 0x1, 0x1);
        gbc.writeMem(0x423, { 0x4 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x866a, gbc.sp());
        EXPECT(0x424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 030B
        gbc.setState(0xc787, 0xb0d, 0x68c0, 0xb321, 0x9796, 0x90a5, 0x0, 0x1);
        gbc.writeMem(0xc787, { 0x4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb0d, gbc.sp());
        EXPECT(0xc788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc787));
        // 04 030C
        gbc.setState(0x8d9f, 0xe693, 0xac30, 0x4e1a, 0xf6f, 0x6c34, 0x0, 0x0);
        gbc.writeMem(0x8d9f, { 0x4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe693, gbc.sp());
        EXPECT(0x8da0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8d9f));
        // 04 030D
        gbc.setState(0x4342, 0x134, 0xeea0, 0x2237, 0x2b7f, 0x2b0, 0x1, 0x0);
        gbc.writeMem(0x4342, { 0x4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x134, gbc.sp());
        EXPECT(0x4343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 030E
        gbc.setState(0xdbff, 0xf097, 0xde60, 0xd8fe, 0x496e, 0xa208, 0x1, 0x1);
        gbc.writeMem(0xdbff, { 0x4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf097, gbc.sp());
        EXPECT(0xdc00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdbff));
        // 04 030F
        gbc.setState(0xdcd3, 0x2bd9, 0x79a0, 0xaa04, 0x6640, 0xb9a4, 0x1, 0x0);
        gbc.writeMem(0xdcd3, { 0x4 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2bd9, gbc.sp());
        EXPECT(0xdcd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdcd3));
        // 04 0310
        gbc.setState(0x875, 0x6486, 0x1890, 0x2f86, 0x8a4e, 0x9c07, 0x1, 0x0);
        gbc.writeMem(0x875, { 0x4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6486, gbc.sp());
        EXPECT(0x876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0311
        gbc.setState(0x3f0, 0xc84a, 0x1eb0, 0xc27e, 0xe8a3, 0x67af, 0x1, 0x1);
        gbc.writeMem(0x3f0, { 0x4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc84a, gbc.sp());
        EXPECT(0x3f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0312
        gbc.setState(0x92c5, 0x3f3d, 0xc40, 0x7060, 0xbc33, 0xd8d5, 0x0, 0x1);
        gbc.writeMem(0x92c5, { 0x4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3f3d, gbc.sp());
        EXPECT(0x92c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x92c5));
        // 04 0313
        gbc.setState(0xc645, 0xca92, 0xd4c0, 0x83e6, 0x2a38, 0x1e23, 0x0, 0x1);
        gbc.writeMem(0xc645, { 0x4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xca92, gbc.sp());
        EXPECT(0xc646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc645));
        // 04 0314
        gbc.setState(0x6ed6, 0x6db4, 0x5f80, 0xffd2, 0x538c, 0xdaa5, 0x1, 0x0);
        gbc.writeMem(0x6ed6, { 0x4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6db4, gbc.sp());
        EXPECT(0x6ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0315
        gbc.setState(0x1096, 0xdac3, 0x7d90, 0x37a8, 0x7895, 0xe394, 0x1, 0x0);
        gbc.writeMem(0x1096, { 0x4 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xdac3, gbc.sp());
        EXPECT(0x1097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0316
        gbc.setState(0x38fe, 0x48df, 0x2220, 0xe300, 0x52b2, 0xfc9c, 0x0, 0x1);
        gbc.writeMem(0x38fe, { 0x4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x48df, gbc.sp());
        EXPECT(0x38ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0317
        gbc.setState(0x3d3, 0xb604, 0x6b60, 0xe851, 0x3c86, 0x26bd, 0x0, 0x0);
        gbc.writeMem(0x3d3, { 0x4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb604, gbc.sp());
        EXPECT(0x3d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0318
        gbc.setState(0xe378, 0x23e8, 0xf50, 0xaac6, 0x82e1, 0x547a, 0x1, 0x1);
        gbc.writeMem(0xe378, { 0x4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x23e8, gbc.sp());
        EXPECT(0xe379, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe378));
        // 04 0319
        gbc.setState(0x8148, 0xccfc, 0x690, 0x51b0, 0xbd3b, 0x6eb9, 0x1, 0x0);
        gbc.writeMem(0x8148, { 0x4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xccfc, gbc.sp());
        EXPECT(0x8149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8148));
        // 04 031A
        gbc.setState(0x6886, 0x398c, 0xec00, 0x886a, 0x980a, 0x69b5, 0x0, 0x0);
        gbc.writeMem(0x6886, { 0x4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x398c, gbc.sp());
        EXPECT(0x6887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 031B
        gbc.setState(0xde45, 0x3d82, 0x55c0, 0x6d8a, 0x2ade, 0x5fc9, 0x0, 0x0);
        gbc.writeMem(0xde45, { 0x4 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3d82, gbc.sp());
        EXPECT(0xde46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xde45));
        // 04 031C
        gbc.setState(0x376d, 0x281f, 0xe90, 0xd7c1, 0x56e7, 0x3d8b, 0x0, 0x0);
        gbc.writeMem(0x376d, { 0x4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x281f, gbc.sp());
        EXPECT(0x376e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 031D
        gbc.setState(0xba8c, 0x420a, 0x3c00, 0x1922, 0x2fec, 0xaaa7, 0x1, 0x0);
        gbc.writeMem(0xba8c, { 0x4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x420a, gbc.sp());
        EXPECT(0xba8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xba8c));
        // 04 031E
        gbc.setState(0x226b, 0x933d, 0x8de0, 0xe944, 0x8b93, 0x2575, 0x0, 0x0);
        gbc.writeMem(0x226b, { 0x4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x933d, gbc.sp());
        EXPECT(0x226c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 031F
        gbc.setState(0x39a3, 0x4dfa, 0x5a40, 0x4e6c, 0xedfd, 0x958f, 0x0, 0x1);
        gbc.writeMem(0x39a3, { 0x4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4dfa, gbc.sp());
        EXPECT(0x39a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0321
        gbc.setState(0x73f7, 0xfe48, 0xdfc0, 0x48f9, 0xb59e, 0x78f5, 0x1, 0x0);
        gbc.writeMem(0x73f7, { 0x4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xfe48, gbc.sp());
        EXPECT(0x73f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0322
        gbc.setState(0x89e8, 0x7d2e, 0x7290, 0x9f09, 0x6873, 0x259f, 0x0, 0x0);
        gbc.writeMem(0x89e8, { 0x4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7d2e, gbc.sp());
        EXPECT(0x89e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x89e8));
        // 04 0323
        gbc.setState(0x8d35, 0xdaec, 0x470, 0xe949, 0x8ccc, 0x5973, 0x0, 0x0);
        gbc.writeMem(0x8d35, { 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xdaec, gbc.sp());
        EXPECT(0x8d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8d35));
        // 04 0325
        gbc.setState(0x21b4, 0xc641, 0x6020, 0xe777, 0xb92b, 0x344e, 0x1, 0x1);
        gbc.writeMem(0x21b4, { 0x4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc641, gbc.sp());
        EXPECT(0x21b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0326
        gbc.setState(0xab2a, 0x7bb2, 0x4820, 0x3027, 0x8c7f, 0xc06b, 0x0, 0x0);
        gbc.writeMem(0xab2a, { 0x4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7bb2, gbc.sp());
        EXPECT(0xab2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xab2a));
        // 04 0327
        gbc.setState(0x64f7, 0x5908, 0x3820, 0x2392, 0x6a17, 0x10a6, 0x1, 0x0);
        gbc.writeMem(0x64f7, { 0x4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5908, gbc.sp());
        EXPECT(0x64f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0328
        gbc.setState(0xddfe, 0x5c2c, 0x2080, 0xeded, 0x34df, 0x794a, 0x1, 0x0);
        gbc.writeMem(0xddfe, { 0x4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5c2c, gbc.sp());
        EXPECT(0xddff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xddfe));
        // 04 0329
        gbc.setState(0x70de, 0x1a6d, 0xbed0, 0x1e, 0x3af1, 0x509a, 0x1, 0x0);
        gbc.writeMem(0x70de, { 0x4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1a6d, gbc.sp());
        EXPECT(0x70df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 032A
        gbc.setState(0xbcee, 0xe2d6, 0x8fb0, 0xbe73, 0xc99, 0x4f96, 0x1, 0x1);
        gbc.writeMem(0xbcee, { 0x4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe2d6, gbc.sp());
        EXPECT(0xbcef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xbcee));
        // 04 032B
        gbc.setState(0x9d94, 0x39c6, 0xd410, 0xdd8d, 0xb8d7, 0xb3c8, 0x0, 0x0);
        gbc.writeMem(0x9d94, { 0x4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x39c6, gbc.sp());
        EXPECT(0x9d95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9d94));
        // 04 032C
        gbc.setState(0x8642, 0x15b4, 0x2380, 0x779, 0x1dfd, 0x2ba1, 0x0, 0x1);
        gbc.writeMem(0x8642, { 0x4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x15b4, gbc.sp());
        EXPECT(0x8643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8642));
        // 04 032D
        gbc.setState(0xd8e4, 0x1df5, 0xe770, 0xec16, 0xbc2f, 0xee31, 0x0, 0x1);
        gbc.writeMem(0xd8e4, { 0x4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1df5, gbc.sp());
        EXPECT(0xd8e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd8e4));
        // 04 032E
        gbc.setState(0x5a7c, 0x4d26, 0x21d0, 0x6b83, 0x6dba, 0xff5, 0x1, 0x1);
        gbc.writeMem(0x5a7c, { 0x4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4d26, gbc.sp());
        EXPECT(0x5a7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 032F
        gbc.setState(0xe563, 0xa051, 0x41b0, 0xaeca, 0x3aea, 0xdb12, 0x1, 0x0);
        gbc.writeMem(0xe563, { 0x4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa051, gbc.sp());
        EXPECT(0xe564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe563));
        // 04 0330
        gbc.setState(0xa1ed, 0x4c9f, 0xfc00, 0x4d18, 0x135c, 0xd53d, 0x0, 0x0);
        gbc.writeMem(0xa1ed, { 0x4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4c9f, gbc.sp());
        EXPECT(0xa1ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa1ed));
        // 04 0331
        gbc.setState(0xc114, 0xd113, 0x1040, 0xf51a, 0x1c4f, 0xf4ba, 0x1, 0x0);
        gbc.writeMem(0xc114, { 0x4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd113, gbc.sp());
        EXPECT(0xc115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc114));
        // 04 0332
        gbc.setState(0xcc40, 0x1224, 0xaac0, 0x1610, 0xea4c, 0x1037, 0x1, 0x0);
        gbc.writeMem(0xcc40, { 0x4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1224, gbc.sp());
        EXPECT(0xcc41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xcc40));
        // 04 0333
        gbc.setState(0x8efb, 0xa9c2, 0xe1c0, 0x5d9d, 0x91d3, 0x1f3f, 0x1, 0x1);
        gbc.writeMem(0x8efb, { 0x4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa9c2, gbc.sp());
        EXPECT(0x8efc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8efb));
        // 04 0334
        gbc.setState(0xc744, 0xaf6b, 0xfec0, 0x6a3c, 0x74dc, 0xf17e, 0x1, 0x1);
        gbc.writeMem(0xc744, { 0x4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xaf6b, gbc.sp());
        EXPECT(0xc745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc744));
        // 04 0335
        gbc.setState(0x23f6, 0x1a91, 0x6340, 0x2989, 0x7cdc, 0x4b16, 0x1, 0x0);
        gbc.writeMem(0x23f6, { 0x4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1a91, gbc.sp());
        EXPECT(0x23f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0336
        gbc.setState(0x6211, 0x458c, 0x65c0, 0x184d, 0xe1a3, 0xd528, 0x0, 0x1);
        gbc.writeMem(0x6211, { 0x4 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x458c, gbc.sp());
        EXPECT(0x6212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0337
        gbc.setState(0x8519, 0x69ea, 0x9be0, 0xda46, 0x602c, 0xfb9e, 0x1, 0x0);
        gbc.writeMem(0x8519, { 0x4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x69ea, gbc.sp());
        EXPECT(0x851a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8519));
        // 04 0339
        gbc.setState(0x4f5c, 0x1a77, 0x7720, 0xdd49, 0x6b3c, 0xeb48, 0x1, 0x0);
        gbc.writeMem(0x4f5c, { 0x4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1a77, gbc.sp());
        EXPECT(0x4f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 033A
        gbc.setState(0xbec0, 0x521f, 0x4e30, 0x5f57, 0xeee6, 0x8f53, 0x1, 0x0);
        gbc.writeMem(0xbec0, { 0x4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x521f, gbc.sp());
        EXPECT(0xbec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xbec0));
        // 04 033B
        gbc.setState(0xa61b, 0xe47, 0xe140, 0x739, 0x7d8a, 0x6ec3, 0x1, 0x0);
        gbc.writeMem(0xa61b, { 0x4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe47, gbc.sp());
        EXPECT(0xa61c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa61b));
        // 04 033C
        gbc.setState(0x3b25, 0x2bc4, 0x7200, 0xd475, 0xa52e, 0xea9, 0x0, 0x0);
        gbc.writeMem(0x3b25, { 0x4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2bc4, gbc.sp());
        EXPECT(0x3b26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 033D
        gbc.setState(0x1dca, 0xf417, 0x7920, 0x7393, 0xccd0, 0xdc89, 0x1, 0x1);
        gbc.writeMem(0x1dca, { 0x4 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf417, gbc.sp());
        EXPECT(0x1dcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 033E
        gbc.setState(0x7023, 0xd2f3, 0xeb40, 0xd4ec, 0xadaa, 0xe927, 0x0, 0x1);
        gbc.writeMem(0x7023, { 0x4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd2f3, gbc.sp());
        EXPECT(0x7024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 033F
        gbc.setState(0x12e6, 0x6134, 0x750, 0xe6e0, 0x18b0, 0xef35, 0x0, 0x0);
        gbc.writeMem(0x12e6, { 0x4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6134, gbc.sp());
        EXPECT(0x12e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0340
        gbc.setState(0x3d59, 0xae32, 0xd070, 0xcaa4, 0x51c2, 0x6b50, 0x0, 0x1);
        gbc.writeMem(0x3d59, { 0x4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xae32, gbc.sp());
        EXPECT(0x3d5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0341
        gbc.setState(0xa526, 0xa894, 0xda10, 0x276e, 0x24a4, 0xb60e, 0x0, 0x0);
        gbc.writeMem(0xa526, { 0x4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa894, gbc.sp());
        EXPECT(0xa527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa526));
        // 04 0342
        gbc.setState(0xa0b4, 0x26e4, 0xf620, 0x9bed, 0x9238, 0x2669, 0x1, 0x0);
        gbc.writeMem(0xa0b4, { 0x4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x26e4, gbc.sp());
        EXPECT(0xa0b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa0b4));
        // 04 0343
        gbc.setState(0xd126, 0xa5f2, 0x70e0, 0x40a5, 0xde44, 0xc47f, 0x1, 0x1);
        gbc.writeMem(0xd126, { 0x4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa5f2, gbc.sp());
        EXPECT(0xd127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd126));
        // 04 0344
        gbc.setState(0xda2c, 0x6a05, 0xa260, 0xaa0b, 0xea28, 0x76e3, 0x1, 0x0);
        gbc.writeMem(0xda2c, { 0x4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6a05, gbc.sp());
        EXPECT(0xda2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xda2c));
        // 04 0345
        gbc.setState(0x62f0, 0x2032, 0xc50, 0x1233, 0xbe49, 0x3991, 0x1, 0x0);
        gbc.writeMem(0x62f0, { 0x4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2032, gbc.sp());
        EXPECT(0x62f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0346
        gbc.setState(0x81d5, 0x44bc, 0xcc60, 0xb41a, 0xdf78, 0xb873, 0x1, 0x0);
        gbc.writeMem(0x81d5, { 0x4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x44bc, gbc.sp());
        EXPECT(0x81d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x81d5));
        // 04 0347
        gbc.setState(0xd1b4, 0x43a, 0xf750, 0xfe51, 0x70b4, 0xedd8, 0x1, 0x0);
        gbc.writeMem(0xd1b4, { 0x4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x43a, gbc.sp());
        EXPECT(0xd1b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd1b4));
        // 04 0348
        gbc.setState(0xacde, 0xdfb3, 0xd920, 0x6e6d, 0x322e, 0xee4c, 0x1, 0x0);
        gbc.writeMem(0xacde, { 0x4 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdfb3, gbc.sp());
        EXPECT(0xacdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xacde));
        // 04 0349
        gbc.setState(0x72dd, 0xecc1, 0x35b0, 0x3e7f, 0x9cdc, 0x5f0d, 0x0, 0x0);
        gbc.writeMem(0x72dd, { 0x4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xecc1, gbc.sp());
        EXPECT(0x72de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 034A
        gbc.setState(0x2ef, 0x9359, 0xeca0, 0x5132, 0x23af, 0xce1f, 0x0, 0x1);
        gbc.writeMem(0x2ef, { 0x4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9359, gbc.sp());
        EXPECT(0x2f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 034B
        gbc.setState(0x7c1e, 0x4509, 0x6e00, 0xbe5d, 0xa045, 0x18e2, 0x1, 0x1);
        gbc.writeMem(0x7c1e, { 0x4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4509, gbc.sp());
        EXPECT(0x7c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 034D
        gbc.setState(0x41b7, 0x454, 0x7b80, 0x55c8, 0xa821, 0xe903, 0x1, 0x0);
        gbc.writeMem(0x41b7, { 0x4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x454, gbc.sp());
        EXPECT(0x41b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 034E
        gbc.setState(0x3ed5, 0x74f9, 0xeb10, 0x52ff, 0x12a2, 0xc04b, 0x0, 0x1);
        gbc.writeMem(0x3ed5, { 0x4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x74f9, gbc.sp());
        EXPECT(0x3ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0350
        gbc.setState(0x7016, 0x224d, 0x4200, 0x87c8, 0xd8db, 0x959, 0x1, 0x0);
        gbc.writeMem(0x7016, { 0x4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x224d, gbc.sp());
        EXPECT(0x7017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0352
        gbc.setState(0x56d1, 0xcc1b, 0xb040, 0xc76d, 0x3e01, 0xa322, 0x0, 0x0);
        gbc.writeMem(0x56d1, { 0x4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xcc1b, gbc.sp());
        EXPECT(0x56d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0353
        gbc.setState(0xb0b3, 0xb547, 0x820, 0xbb97, 0xbd9b, 0xa80f, 0x1, 0x1);
        gbc.writeMem(0xb0b3, { 0x4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb547, gbc.sp());
        EXPECT(0xb0b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb0b3));
        // 04 0354
        gbc.setState(0x374, 0x70ca, 0x7b30, 0x829c, 0xe760, 0x4a03, 0x1, 0x1);
        gbc.writeMem(0x374, { 0x4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x70ca, gbc.sp());
        EXPECT(0x375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0355
        gbc.setState(0x6b48, 0x6eed, 0x5b10, 0x6ecb, 0x3c09, 0xfa4d, 0x0, 0x1);
        gbc.writeMem(0x6b48, { 0x4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6eed, gbc.sp());
        EXPECT(0x6b49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0356
        gbc.setState(0x1572, 0xe5ba, 0xd0a0, 0xed0c, 0xb5d9, 0xc459, 0x1, 0x0);
        gbc.writeMem(0x1572, { 0x4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe5ba, gbc.sp());
        EXPECT(0x1573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0357
        gbc.setState(0x2d25, 0x2fa5, 0xff70, 0xc76, 0x90d4, 0x524d, 0x1, 0x1);
        gbc.writeMem(0x2d25, { 0x4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2fa5, gbc.sp());
        EXPECT(0x2d26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0359
        gbc.setState(0xd692, 0xc0f7, 0x69a0, 0xa9cd, 0x318, 0x5e6f, 0x1, 0x0);
        gbc.writeMem(0xd692, { 0x4 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc0f7, gbc.sp());
        EXPECT(0xd693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd692));
        // 04 035A
        gbc.setState(0x2c0d, 0xdc58, 0x4f90, 0xd451, 0x25a6, 0xeccf, 0x0, 0x1);
        gbc.writeMem(0x2c0d, { 0x4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xdc58, gbc.sp());
        EXPECT(0x2c0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 035B
        gbc.setState(0x9e4a, 0x732a, 0x8030, 0x7f6b, 0xc32c, 0xe693, 0x1, 0x0);
        gbc.writeMem(0x9e4a, { 0x4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x732a, gbc.sp());
        EXPECT(0x9e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9e4a));
        // 04 035C
        gbc.setState(0x340e, 0x3dc4, 0x9760, 0x568a, 0x3c84, 0x6873, 0x1, 0x0);
        gbc.writeMem(0x340e, { 0x4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3dc4, gbc.sp());
        EXPECT(0x340f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 035D
        gbc.setState(0x3068, 0xd983, 0x1730, 0x232a, 0x45de, 0x66f2, 0x0, 0x1);
        gbc.writeMem(0x3068, { 0x4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd983, gbc.sp());
        EXPECT(0x3069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 035E
        gbc.setState(0x5275, 0xc4e4, 0x4ec0, 0x575b, 0x5be7, 0xa6a1, 0x1, 0x1);
        gbc.writeMem(0x5275, { 0x4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc4e4, gbc.sp());
        EXPECT(0x5276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 035F
        gbc.setState(0x6fab, 0x8017, 0xdea0, 0x5448, 0xe416, 0xd965, 0x0, 0x1);
        gbc.writeMem(0x6fab, { 0x4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8017, gbc.sp());
        EXPECT(0x6fac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0360
        gbc.setState(0x8ce0, 0x4a17, 0xf000, 0x805d, 0xae7, 0x18dc, 0x0, 0x1);
        gbc.writeMem(0x8ce0, { 0x4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4a17, gbc.sp());
        EXPECT(0x8ce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8ce0));
        // 04 0361
        gbc.setState(0x8958, 0x23b6, 0xed30, 0x873c, 0x19e4, 0x14fc, 0x1, 0x0);
        gbc.writeMem(0x8958, { 0x4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x23b6, gbc.sp());
        EXPECT(0x8959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8958));
        // 04 0362
        gbc.setState(0xbcb3, 0x186b, 0x7e10, 0xa7e6, 0x4de, 0x2673, 0x0, 0x0);
        gbc.writeMem(0xbcb3, { 0x4 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x186b, gbc.sp());
        EXPECT(0xbcb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xbcb3));
        // 04 0363
        gbc.setState(0x4d91, 0x6d6e, 0x15f0, 0x3c1, 0x5046, 0x2064, 0x1, 0x1);
        gbc.writeMem(0x4d91, { 0x4 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6d6e, gbc.sp());
        EXPECT(0x4d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0364
        gbc.setState(0x6a9d, 0x868f, 0x3ad0, 0x8dd4, 0x5844, 0x28be, 0x1, 0x0);
        gbc.writeMem(0x6a9d, { 0x4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x868f, gbc.sp());
        EXPECT(0x6a9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0366
        gbc.setState(0x2c2d, 0x38cc, 0x94a0, 0xdf7a, 0x105f, 0x8f85, 0x1, 0x0);
        gbc.writeMem(0x2c2d, { 0x4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x38cc, gbc.sp());
        EXPECT(0x2c2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0367
        gbc.setState(0x12dc, 0x7cf8, 0x9690, 0x2ceb, 0x6c49, 0xa8d5, 0x0, 0x0);
        gbc.writeMem(0x12dc, { 0x4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7cf8, gbc.sp());
        EXPECT(0x12dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0368
        gbc.setState(0x362f, 0x9b06, 0x9ae0, 0x865f, 0x3a41, 0x8b1c, 0x1, 0x1);
        gbc.writeMem(0x362f, { 0x4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9b06, gbc.sp());
        EXPECT(0x3630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0369
        gbc.setState(0xb025, 0xe9b, 0x1970, 0xc1c2, 0xb370, 0xb98, 0x1, 0x0);
        gbc.writeMem(0xb025, { 0x4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe9b, gbc.sp());
        EXPECT(0xb026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb025));
        // 04 036A
        gbc.setState(0xdee1, 0xac7d, 0xf710, 0xbde8, 0x45cc, 0xde0f, 0x1, 0x1);
        gbc.writeMem(0xdee1, { 0x4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xac7d, gbc.sp());
        EXPECT(0xdee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdee1));
        // 04 036B
        gbc.setState(0x80bc, 0xaaad, 0xcfd0, 0x8a18, 0x875c, 0x652, 0x0, 0x1);
        gbc.writeMem(0x80bc, { 0x4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xaaad, gbc.sp());
        EXPECT(0x80bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x80bc));
        // 04 036C
        gbc.setState(0x9974, 0x4180, 0x5040, 0xb7eb, 0x297a, 0xb4e9, 0x0, 0x0);
        gbc.writeMem(0x9974, { 0x4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4180, gbc.sp());
        EXPECT(0x9975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9974));
        // 04 036D
        gbc.setState(0x4b98, 0x39b1, 0x7a0, 0xf0e5, 0x6f79, 0xe97c, 0x0, 0x0);
        gbc.writeMem(0x4b98, { 0x4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x39b1, gbc.sp());
        EXPECT(0x4b99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 036E
        gbc.setState(0x9739, 0x5fc0, 0x6ce0, 0x613d, 0xe7b, 0x9bef, 0x1, 0x0);
        gbc.writeMem(0x9739, { 0x4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5fc0, gbc.sp());
        EXPECT(0x973a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9739));
        // 04 036F
        gbc.setState(0x8f22, 0xabd0, 0x440, 0xa41a, 0xba71, 0x1ad3, 0x1, 0x1);
        gbc.writeMem(0x8f22, { 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xabd0, gbc.sp());
        EXPECT(0x8f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8f22));
        // 04 0370
        gbc.setState(0x9324, 0xe6b, 0xc770, 0x6024, 0xd3f4, 0x5c62, 0x0, 0x1);
        gbc.writeMem(0x9324, { 0x4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe6b, gbc.sp());
        EXPECT(0x9325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9324));
        // 04 0371
        gbc.setState(0x7aa9, 0xac8b, 0x1e30, 0x3efb, 0xbf98, 0x7448, 0x1, 0x0);
        gbc.writeMem(0x7aa9, { 0x4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xac8b, gbc.sp());
        EXPECT(0x7aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0372
        gbc.setState(0x2adc, 0xc881, 0x8550, 0x5018, 0x224d, 0x5361, 0x0, 0x0);
        gbc.writeMem(0x2adc, { 0x4 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc881, gbc.sp());
        EXPECT(0x2add, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0373
        gbc.setState(0xccdd, 0xef64, 0x7b50, 0xf711, 0x43af, 0xb537, 0x0, 0x0);
        gbc.writeMem(0xccdd, { 0x4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xef64, gbc.sp());
        EXPECT(0xccde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xccdd));
        // 04 0374
        gbc.setState(0x1b4f, 0xdc16, 0x66a0, 0x9360, 0xaeb3, 0xa13d, 0x1, 0x0);
        gbc.writeMem(0x1b4f, { 0x4 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdc16, gbc.sp());
        EXPECT(0x1b50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0375
        gbc.setState(0xa419, 0x5e5d, 0x1ef0, 0x2c26, 0xad72, 0x1f4e, 0x0, 0x1);
        gbc.writeMem(0xa419, { 0x4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5e5d, gbc.sp());
        EXPECT(0xa41a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa419));
        // 04 0376
        gbc.setState(0xc27b, 0x1e4b, 0xdf30, 0xa6dd, 0xf8dd, 0xd404, 0x0, 0x0);
        gbc.writeMem(0xc27b, { 0x4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1e4b, gbc.sp());
        EXPECT(0xc27c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc27b));
        // 04 0378
        gbc.setState(0x7c49, 0x4436, 0x6870, 0x27ce, 0x8450, 0x80ff, 0x0, 0x0);
        gbc.writeMem(0x7c49, { 0x4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4436, gbc.sp());
        EXPECT(0x7c4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0379
        gbc.setState(0xbf12, 0x3bc9, 0x15f0, 0xf39f, 0x2eac, 0x4a55, 0x0, 0x0);
        gbc.writeMem(0xbf12, { 0x4 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3bc9, gbc.sp());
        EXPECT(0xbf13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xbf12));
        // 04 037A
        gbc.setState(0xa87d, 0x13e2, 0x9e10, 0xdc9d, 0x5582, 0x2fe5, 0x0, 0x1);
        gbc.writeMem(0xa87d, { 0x4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x13e2, gbc.sp());
        EXPECT(0xa87e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa87d));
        // 04 037B
        gbc.setState(0x3f82, 0xf818, 0xa550, 0x95e3, 0x8e54, 0xd6d2, 0x0, 0x0);
        gbc.writeMem(0x3f82, { 0x4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf818, gbc.sp());
        EXPECT(0x3f83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 037D
        gbc.setState(0x9539, 0x4263, 0x47c0, 0x52e1, 0xa84d, 0xeccd, 0x0, 0x1);
        gbc.writeMem(0x9539, { 0x4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4263, gbc.sp());
        EXPECT(0x953a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9539));
        // 04 037E
        gbc.setState(0x545d, 0x7959, 0xad40, 0xe4b8, 0x63de, 0xedee, 0x0, 0x0);
        gbc.writeMem(0x545d, { 0x4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7959, gbc.sp());
        EXPECT(0x545e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 037F
        gbc.setState(0x9ab6, 0xfe8a, 0xd480, 0x4ac6, 0x5d46, 0xeb15, 0x0, 0x0);
        gbc.writeMem(0x9ab6, { 0x4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfe8a, gbc.sp());
        EXPECT(0x9ab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9ab6));
        // 04 0380
        gbc.setState(0x9e70, 0x89dd, 0x3f90, 0xca63, 0x173c, 0xfeae, 0x1, 0x1);
        gbc.writeMem(0x9e70, { 0x4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x89dd, gbc.sp());
        EXPECT(0x9e71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9e70));
        // 04 0381
        gbc.setState(0x3ea2, 0x7c18, 0x7950, 0xb595, 0x8939, 0x4aeb, 0x1, 0x0);
        gbc.writeMem(0x3ea2, { 0x4 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7c18, gbc.sp());
        EXPECT(0x3ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0382
        gbc.setState(0x70ed, 0x375, 0x4e20, 0x784a, 0xf542, 0x3358, 0x1, 0x1);
        gbc.writeMem(0x70ed, { 0x4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x375, gbc.sp());
        EXPECT(0x70ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0383
        gbc.setState(0x99ce, 0xba70, 0xc280, 0x6960, 0x5664, 0x41fe, 0x0, 0x0);
        gbc.writeMem(0x99ce, { 0x4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xba70, gbc.sp());
        EXPECT(0x99cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x99ce));
        // 04 0384
        gbc.setState(0xb6a9, 0x37df, 0xc290, 0x885a, 0x352, 0xf9c9, 0x0, 0x1);
        gbc.writeMem(0xb6a9, { 0x4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x37df, gbc.sp());
        EXPECT(0xb6aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb6a9));
        // 04 0385
        gbc.setState(0x5a61, 0x38ad, 0x8630, 0xfbac, 0xefcc, 0x122, 0x0, 0x1);
        gbc.writeMem(0x5a61, { 0x4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x38ad, gbc.sp());
        EXPECT(0x5a62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0386
        gbc.setState(0x60bc, 0xa2b8, 0x19c0, 0x4497, 0xfd0c, 0xe3c4, 0x0, 0x1);
        gbc.writeMem(0x60bc, { 0x4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa2b8, gbc.sp());
        EXPECT(0x60bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0387
        gbc.setState(0x993f, 0x9f1b, 0xfe90, 0x86b1, 0xd9fc, 0x1138, 0x1, 0x1);
        gbc.writeMem(0x993f, { 0x4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9f1b, gbc.sp());
        EXPECT(0x9940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x993f));
        // 04 0388
        gbc.setState(0xb748, 0x975b, 0x3390, 0xce4f, 0xa317, 0xe365, 0x1, 0x1);
        gbc.writeMem(0xb748, { 0x4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x975b, gbc.sp());
        EXPECT(0xb749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb748));
        // 04 0389
        gbc.setState(0x3008, 0x151f, 0xdcf0, 0x8f0a, 0x1d7d, 0x9abf, 0x0, 0x0);
        gbc.writeMem(0x3008, { 0x4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x151f, gbc.sp());
        EXPECT(0x3009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 038A
        gbc.setState(0xac54, 0x7b9c, 0xdf00, 0xdb2d, 0xad3e, 0x3123, 0x1, 0x0);
        gbc.writeMem(0xac54, { 0x4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7b9c, gbc.sp());
        EXPECT(0xac55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xac54));
        // 04 038B
        gbc.setState(0x499f, 0xe27e, 0x1740, 0xe2dc, 0x7a46, 0x590a, 0x1, 0x1);
        gbc.writeMem(0x499f, { 0x4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe27e, gbc.sp());
        EXPECT(0x49a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 038C
        gbc.setState(0xd43, 0xc623, 0x4710, 0xb1f4, 0x9f78, 0x2c2b, 0x1, 0x1);
        gbc.writeMem(0xd43, { 0x4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc623, gbc.sp());
        EXPECT(0xd44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 038E
        gbc.setState(0x87bb, 0x913, 0x1b90, 0x8306, 0x9e, 0xea04, 0x1, 0x0);
        gbc.writeMem(0x87bb, { 0x4 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x913, gbc.sp());
        EXPECT(0x87bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x87bb));
        // 04 038F
        gbc.setState(0xdcfe, 0x6b90, 0xee0, 0x67c9, 0x10cf, 0x45d5, 0x1, 0x0);
        gbc.writeMem(0xdcfe, { 0x4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6b90, gbc.sp());
        EXPECT(0xdcff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdcfe));
        // 04 0390
        gbc.setState(0x5d3d, 0x5887, 0x27a0, 0x1cc6, 0xe4ab, 0xe7ca, 0x0, 0x1);
        gbc.writeMem(0x5d3d, { 0x4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5887, gbc.sp());
        EXPECT(0x5d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0391
        gbc.setState(0x7470, 0xbd5f, 0xc1f0, 0x3b1e, 0x4695, 0xcb2b, 0x1, 0x0);
        gbc.writeMem(0x7470, { 0x4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbd5f, gbc.sp());
        EXPECT(0x7471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0392
        gbc.setState(0xe9e6, 0xce9a, 0x4c0, 0xfeae, 0x26ef, 0x3f8d, 0x1, 0x1);
        gbc.writeMem(0xe9e6, { 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xce9a, gbc.sp());
        EXPECT(0xe9e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe9e6));
        // 04 0393
        gbc.setState(0xce07, 0x7844, 0x5b10, 0xc11a, 0x3fa9, 0x3518, 0x1, 0x0);
        gbc.writeMem(0xce07, { 0x4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7844, gbc.sp());
        EXPECT(0xce08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xce07));
        // 04 0394
        gbc.setState(0xbfc5, 0x17aa, 0x8d00, 0x8f36, 0x5152, 0xd2e5, 0x1, 0x0);
        gbc.writeMem(0xbfc5, { 0x4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x17aa, gbc.sp());
        EXPECT(0xbfc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xbfc5));
        // 04 0395
        gbc.setState(0x6778, 0x6c13, 0x1f00, 0x102f, 0xe623, 0x4e31, 0x1, 0x1);
        gbc.writeMem(0x6778, { 0x4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6c13, gbc.sp());
        EXPECT(0x6779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 0396
        gbc.setState(0x7db4, 0xb352, 0xc30, 0x8755, 0xeb1f, 0x888f, 0x0, 0x0);
        gbc.writeMem(0x7db4, { 0x4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb352, gbc.sp());
        EXPECT(0x7db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 0397
        gbc.setState(0xad07, 0x4707, 0x9810, 0xe4a2, 0x5861, 0x1268, 0x1, 0x1);
        gbc.writeMem(0xad07, { 0x4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4707, gbc.sp());
        EXPECT(0xad08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xad07));
        // 04 0398
        gbc.setState(0x8c17, 0xea9b, 0x8390, 0xb649, 0xc30f, 0x8f7, 0x1, 0x1);
        gbc.writeMem(0x8c17, { 0x4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xea9b, gbc.sp());
        EXPECT(0x8c18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8c17));
        // 04 0399
        gbc.setState(0xeff6, 0x6417, 0x1e30, 0xfd66, 0x81ae, 0xd406, 0x0, 0x1);
        gbc.writeMem(0xeff6, { 0x4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6417, gbc.sp());
        EXPECT(0xeff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xeff6));
        // 04 039A
        gbc.setState(0x1988, 0x45ab, 0xe0e0, 0x5778, 0x9, 0x64dc, 0x1, 0x0);
        gbc.writeMem(0x1988, { 0x4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x45ab, gbc.sp());
        EXPECT(0x1989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 039C
        gbc.setState(0xb87d, 0x3368, 0xee00, 0x720c, 0x43ce, 0xbe42, 0x1, 0x0);
        gbc.writeMem(0xb87d, { 0x4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3368, gbc.sp());
        EXPECT(0xb87e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb87d));
        // 04 039D
        gbc.setState(0x55ff, 0x7fd0, 0x2470, 0xb30a, 0xe5e2, 0x8e3d, 0x1, 0x1);
        gbc.writeMem(0x55ff, { 0x4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7fd0, gbc.sp());
        EXPECT(0x5600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 039E
        gbc.setState(0x6809, 0x8c33, 0xec20, 0x2c49, 0x8911, 0x85d1, 0x0, 0x1);
        gbc.writeMem(0x6809, { 0x4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8c33, gbc.sp());
        EXPECT(0x680a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 039F
        gbc.setState(0x954c, 0xd848, 0x5140, 0xea43, 0xcd9e, 0x77b4, 0x0, 0x0);
        gbc.writeMem(0x954c, { 0x4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd848, gbc.sp());
        EXPECT(0x954d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x954c));
        // 04 03A0
        gbc.setState(0x52c5, 0xdc40, 0xe80, 0x900c, 0xb868, 0x2490, 0x1, 0x1);
        gbc.writeMem(0x52c5, { 0x4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdc40, gbc.sp());
        EXPECT(0x52c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03A1
        gbc.setState(0x4fc7, 0xb0de, 0x2880, 0xa580, 0xba71, 0x720b, 0x0, 0x1);
        gbc.writeMem(0x4fc7, { 0x4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb0de, gbc.sp());
        EXPECT(0x4fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03A2
        gbc.setState(0x3a25, 0xdbcc, 0xcf20, 0x46b4, 0x878f, 0xd531, 0x0, 0x1);
        gbc.writeMem(0x3a25, { 0x4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xdbcc, gbc.sp());
        EXPECT(0x3a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03A3
        gbc.setState(0x457, 0xe2cf, 0x7740, 0x7016, 0xbb9e, 0xc0df, 0x1, 0x1);
        gbc.writeMem(0x457, { 0x4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe2cf, gbc.sp());
        EXPECT(0x458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03A4
        gbc.setState(0x1b4e, 0xcdec, 0x60e0, 0xb37c, 0xe7b, 0x69bd, 0x0, 0x0);
        gbc.writeMem(0x1b4e, { 0x4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xcdec, gbc.sp());
        EXPECT(0x1b4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03A5
        gbc.setState(0x5014, 0x29fc, 0x16e0, 0x534, 0x1411, 0x863d, 0x0, 0x0);
        gbc.writeMem(0x5014, { 0x4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x29fc, gbc.sp());
        EXPECT(0x5015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03A6
        gbc.setState(0x32f3, 0xd9cd, 0xb020, 0xa70, 0xca6, 0x9ad0, 0x0, 0x1);
        gbc.writeMem(0x32f3, { 0x4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd9cd, gbc.sp());
        EXPECT(0x32f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03A7
        gbc.setState(0xfe, 0x828d, 0xec10, 0x6bcd, 0x356b, 0x2eea, 0x0, 0x0);
        gbc.writeMem(0xfe, { 0x4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x828d, gbc.sp());
        EXPECT(0xff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 03A8
        gbc.setState(0x199f, 0x477b, 0x8140, 0x4d16, 0x32cb, 0x9c7e, 0x0, 0x1);
        gbc.writeMem(0x199f, { 0x4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x477b, gbc.sp());
        EXPECT(0x19a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03A9
        gbc.setState(0xdb51, 0xbdc2, 0x8000, 0x29fc, 0x7470, 0xf922, 0x0, 0x0);
        gbc.writeMem(0xdb51, { 0x4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbdc2, gbc.sp());
        EXPECT(0xdb52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdb51));
        // 04 03AA
        gbc.setState(0xdfc9, 0xadd4, 0x4120, 0x56f8, 0x22a6, 0xd285, 0x0, 0x1);
        gbc.writeMem(0xdfc9, { 0x4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xadd4, gbc.sp());
        EXPECT(0xdfca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdfc9));
        // 04 03AB
        gbc.setState(0x9a6, 0x9259, 0x2eb0, 0xbcfb, 0xc30f, 0xe7a9, 0x1, 0x0);
        gbc.writeMem(0x9a6, { 0x4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9259, gbc.sp());
        EXPECT(0x9a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 03AC
        gbc.setState(0xa491, 0x8e4c, 0xcd60, 0xaef4, 0xae59, 0x4c31, 0x1, 0x0);
        gbc.writeMem(0xa491, { 0x4 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8e4c, gbc.sp());
        EXPECT(0xa492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa491));
        // 04 03AD
        gbc.setState(0x28b, 0x7e4e, 0x96f0, 0xfa9f, 0xaa30, 0x744a, 0x0, 0x0);
        gbc.writeMem(0x28b, { 0x4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7e4e, gbc.sp());
        EXPECT(0x28c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 03AE
        gbc.setState(0xfb7, 0x8304, 0xd250, 0x6323, 0xaf24, 0x4011, 0x1, 0x0);
        gbc.writeMem(0xfb7, { 0x4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8304, gbc.sp());
        EXPECT(0xfb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 03AF
        gbc.setState(0x44ed, 0xe11c, 0xc780, 0x9985, 0x6cce, 0xa071, 0x0, 0x0);
        gbc.writeMem(0x44ed, { 0x4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe11c, gbc.sp());
        EXPECT(0x44ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03B0
        gbc.setState(0xae88, 0x1115, 0xa50, 0xd728, 0x7886, 0xc12c, 0x0, 0x1);
        gbc.writeMem(0xae88, { 0x4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1115, gbc.sp());
        EXPECT(0xae89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xae88));
        // 04 03B1
        gbc.setState(0xd98c, 0xfdc, 0xd270, 0xec75, 0x3d7d, 0xce43, 0x1, 0x1);
        gbc.writeMem(0xd98c, { 0x4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xfdc, gbc.sp());
        EXPECT(0xd98d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd98c));
        // 04 03B2
        gbc.setState(0xde89, 0xa259, 0xb20, 0xf875, 0x5538, 0x5fc9, 0x0, 0x0);
        gbc.writeMem(0xde89, { 0x4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa259, gbc.sp());
        EXPECT(0xde8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xde89));
        // 04 03B3
        gbc.setState(0x12c4, 0xfeda, 0xa560, 0x5b1b, 0x1dde, 0xf550, 0x1, 0x0);
        gbc.writeMem(0x12c4, { 0x4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xfeda, gbc.sp());
        EXPECT(0x12c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03B4
        gbc.setState(0x1252, 0xfa22, 0x3100, 0x6e0e, 0x8e71, 0xcff3, 0x0, 0x1);
        gbc.writeMem(0x1252, { 0x4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xfa22, gbc.sp());
        EXPECT(0x1253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03B5
        gbc.setState(0x8a7a, 0x7ae3, 0x6b50, 0xdcce, 0xabb4, 0x3b5b, 0x1, 0x1);
        gbc.writeMem(0x8a7a, { 0x4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7ae3, gbc.sp());
        EXPECT(0x8a7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8a7a));
        // 04 03B6
        gbc.setState(0x7430, 0xdab4, 0xdc70, 0x5861, 0xec65, 0x60e9, 0x1, 0x1);
        gbc.writeMem(0x7430, { 0x4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xdab4, gbc.sp());
        EXPECT(0x7431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 03B7
        gbc.setState(0x814a, 0xf584, 0xed80, 0x3976, 0xd09b, 0xa3ef, 0x1, 0x1);
        gbc.writeMem(0x814a, { 0x4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf584, gbc.sp());
        EXPECT(0x814b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x814a));
        // 04 03B8
        gbc.setState(0x2a, 0x7f61, 0x4be0, 0x9dab, 0x21a7, 0x3072, 0x1, 0x0);
        gbc.writeMem(0x2a, { 0x4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7f61, gbc.sp());
        EXPECT(0x2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03B9
        gbc.setState(0xb336, 0x1dc6, 0x1420, 0xa52c, 0x39f0, 0x3b31, 0x0, 0x0);
        gbc.writeMem(0xb336, { 0x4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1dc6, gbc.sp());
        EXPECT(0xb337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb336));
        // 04 03BA
        gbc.setState(0x45d4, 0xd640, 0x5d50, 0x1596, 0x2f12, 0x94fc, 0x0, 0x0);
        gbc.writeMem(0x45d4, { 0x4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd640, gbc.sp());
        EXPECT(0x45d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 03BB
        gbc.setState(0x8aac, 0x323, 0x5ac0, 0xcaab, 0xcebb, 0xd095, 0x1, 0x1);
        gbc.writeMem(0x8aac, { 0x4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x323, gbc.sp());
        EXPECT(0x8aad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8aac));
        // 04 03BC
        gbc.setState(0x661e, 0xfaa9, 0xb130, 0xa196, 0x5ca8, 0x87d7, 0x0, 0x0);
        gbc.writeMem(0x661e, { 0x4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfaa9, gbc.sp());
        EXPECT(0x661f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 03BD
        gbc.setState(0xd137, 0xc6bb, 0xdb80, 0x4e76, 0x6a49, 0x64d2, 0x1, 0x1);
        gbc.writeMem(0xd137, { 0x4 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc6bb, gbc.sp());
        EXPECT(0xd138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd137));
        // 04 03BE
        gbc.setState(0x23d, 0x9b88, 0x8290, 0x338f, 0xb5d8, 0x1ef5, 0x1, 0x0);
        gbc.writeMem(0x23d, { 0x4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9b88, gbc.sp());
        EXPECT(0x23e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 03BF
        gbc.setState(0x4685, 0x913d, 0x1ef0, 0xebd6, 0xf426, 0x69af, 0x1, 0x1);
        gbc.writeMem(0x4685, { 0x4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x913d, gbc.sp());
        EXPECT(0x4686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 03C0
        gbc.setState(0x5695, 0x4678, 0x1ac0, 0x9bd2, 0x26af, 0x27f5, 0x0, 0x0);
        gbc.writeMem(0x5695, { 0x4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4678, gbc.sp());
        EXPECT(0x5696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03C1
        gbc.setState(0x207d, 0x9ff9, 0x4630, 0x273, 0x6249, 0x94f0, 0x1, 0x0);
        gbc.writeMem(0x207d, { 0x4 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9ff9, gbc.sp());
        EXPECT(0x207e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 03C2
        gbc.setState(0xe8dd, 0xee02, 0x2400, 0xe6ac, 0x6240, 0xd520, 0x1, 0x1);
        gbc.writeMem(0xe8dd, { 0x4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xee02, gbc.sp());
        EXPECT(0xe8de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe8dd));
        // 04 03C3
        gbc.setState(0x2467, 0xbfdd, 0x66c0, 0x851a, 0x71de, 0x6f64, 0x0, 0x0);
        gbc.writeMem(0x2467, { 0x4 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xbfdd, gbc.sp());
        EXPECT(0x2468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03C4
        gbc.setState(0x8170, 0x388f, 0xf530, 0x8e41, 0x7dbc, 0x2c7a, 0x1, 0x1);
        gbc.writeMem(0x8170, { 0x4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x388f, gbc.sp());
        EXPECT(0x8171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8170));
        // 04 03C5
        gbc.setState(0x717c, 0x80c9, 0x6d50, 0xe225, 0x10df, 0x400e, 0x0, 0x0);
        gbc.writeMem(0x717c, { 0x4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x80c9, gbc.sp());
        EXPECT(0x717d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 03C6
        gbc.setState(0x2ecc, 0xbbb9, 0x8370, 0xdea7, 0xa6d0, 0xf44b, 0x0, 0x0);
        gbc.writeMem(0x2ecc, { 0x4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbbb9, gbc.sp());
        EXPECT(0x2ecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 03C7
        gbc.setState(0x9063, 0xd5ce, 0xa50, 0xbfd2, 0x9675, 0xff21, 0x1, 0x1);
        gbc.writeMem(0x9063, { 0x4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd5ce, gbc.sp());
        EXPECT(0x9064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9063));
        // 04 03C8
        gbc.setState(0xda6c, 0xb529, 0xbab0, 0xa712, 0x5b2d, 0x472c, 0x0, 0x0);
        gbc.writeMem(0xda6c, { 0x4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb529, gbc.sp());
        EXPECT(0xda6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xda6c));
        // 04 03C9
        gbc.setState(0x623d, 0xff25, 0x9fc0, 0x8be4, 0xa8cb, 0x5d07, 0x1, 0x0);
        gbc.writeMem(0x623d, { 0x4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xff25, gbc.sp());
        EXPECT(0x623e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03CA
        gbc.setState(0x61d0, 0x3425, 0xf7f0, 0xeeca, 0xa3bc, 0xaa1c, 0x0, 0x0);
        gbc.writeMem(0x61d0, { 0x4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3425, gbc.sp());
        EXPECT(0x61d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 03CB
        gbc.setState(0x9953, 0xc717, 0xfd70, 0xd1a6, 0xb06, 0xe9f9, 0x0, 0x0);
        gbc.writeMem(0x9953, { 0x4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc717, gbc.sp());
        EXPECT(0x9954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9953));
        // 04 03CC
        gbc.setState(0x810, 0x9c52, 0xcb50, 0x9fe2, 0xfa95, 0x2d35, 0x0, 0x0);
        gbc.writeMem(0x810, { 0x4 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9c52, gbc.sp());
        EXPECT(0x811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 03CD
        gbc.setState(0xb894, 0xa272, 0xc7a0, 0x6f90, 0xa2dc, 0x5e31, 0x1, 0x0);
        gbc.writeMem(0xb894, { 0x4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa272, gbc.sp());
        EXPECT(0xb895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb894));
        // 04 03CE
        gbc.setState(0xb083, 0x9a65, 0x3960, 0x5f1f, 0x3a0, 0x9d0a, 0x0, 0x1);
        gbc.writeMem(0xb083, { 0x4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9a65, gbc.sp());
        EXPECT(0xb084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb083));
        // 04 03CF
        gbc.setState(0x3437, 0xb224, 0x1050, 0x9f21, 0x8574, 0x94ed, 0x0, 0x1);
        gbc.writeMem(0x3437, { 0x4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb224, gbc.sp());
        EXPECT(0x3438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 03D0
        gbc.setState(0x5b48, 0xefc7, 0x86b0, 0xddd5, 0xfc4b, 0xb0a8, 0x0, 0x1);
        gbc.writeMem(0x5b48, { 0x4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xefc7, gbc.sp());
        EXPECT(0x5b49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 03D1
        gbc.setState(0x4005, 0xa92e, 0x9bf0, 0x418c, 0x4bfb, 0x82db, 0x1, 0x0);
        gbc.writeMem(0x4005, { 0x4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa92e, gbc.sp());
        EXPECT(0x4006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 03D2
        gbc.setState(0x80c8, 0xc588, 0x32b0, 0xdc2d, 0x76ae, 0x3da, 0x1, 0x0);
        gbc.writeMem(0x80c8, { 0x4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc588, gbc.sp());
        EXPECT(0x80c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x80c8));
        // 04 03D3
        gbc.setState(0xc0c5, 0x3cd6, 0x9390, 0xb9d2, 0xdb16, 0x1fa2, 0x0, 0x0);
        gbc.writeMem(0xc0c5, { 0x4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3cd6, gbc.sp());
        EXPECT(0xc0c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc0c5));
        // 04 03D4
        gbc.setState(0x5e8f, 0x8523, 0x9160, 0x77b0, 0x93f7, 0x26ba, 0x0, 0x0);
        gbc.writeMem(0x5e8f, { 0x4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8523, gbc.sp());
        EXPECT(0x5e90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03D5
        gbc.setState(0x55d2, 0xbc0c, 0xe5a0, 0x1cd3, 0xcd0e, 0x41d7, 0x1, 0x0);
        gbc.writeMem(0x55d2, { 0x4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xbc0c, gbc.sp());
        EXPECT(0x55d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03D6
        gbc.setState(0xe2ca, 0xf898, 0x38b0, 0x7aae, 0xb788, 0xb10e, 0x0, 0x1);
        gbc.writeMem(0xe2ca, { 0x4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf898, gbc.sp());
        EXPECT(0xe2cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe2ca));
        // 04 03D7
        gbc.setState(0x337b, 0xdfdb, 0x27d0, 0xe99d, 0x4077, 0x4ef8, 0x1, 0x0);
        gbc.writeMem(0x337b, { 0x4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdfdb, gbc.sp());
        EXPECT(0x337c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 03D8
        gbc.setState(0xd230, 0xdbc7, 0xcf50, 0x45f9, 0xc5a8, 0x7293, 0x1, 0x1);
        gbc.writeMem(0xd230, { 0x4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdbc7, gbc.sp());
        EXPECT(0xd231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd230));
        // 04 03D9
        gbc.setState(0x7bcd, 0xe51e, 0x4c80, 0xa4cf, 0xd02a, 0x99a2, 0x1, 0x1);
        gbc.writeMem(0x7bcd, { 0x4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe51e, gbc.sp());
        EXPECT(0x7bce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03DA
        gbc.setState(0xd68f, 0x16eb, 0xbd0, 0xbaf9, 0xaf34, 0xf11b, 0x0, 0x1);
        gbc.writeMem(0xd68f, { 0x4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x16eb, gbc.sp());
        EXPECT(0xd690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd68f));
        // 04 03DB
        gbc.setState(0xeb38, 0xf0fd, 0x96e0, 0x1b65, 0x2a5c, 0x6b2b, 0x0, 0x0);
        gbc.writeMem(0xeb38, { 0x4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf0fd, gbc.sp());
        EXPECT(0xeb39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xeb38));
        // 04 03DC
        gbc.setState(0xc0ee, 0x6e64, 0x72c0, 0x42a4, 0x14b6, 0xb04a, 0x1, 0x0);
        gbc.writeMem(0xc0ee, { 0x4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6e64, gbc.sp());
        EXPECT(0xc0ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc0ee));
        // 04 03DD
        gbc.setState(0x7313, 0xffe8, 0xb2a0, 0xfbf4, 0x118e, 0x11d8, 0x0, 0x0);
        gbc.writeMem(0x7313, { 0x4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xffe8, gbc.sp());
        EXPECT(0x7314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03DE
        gbc.setState(0x25d0, 0x8057, 0x640, 0xaf82, 0x16e1, 0xabc0, 0x0, 0x0);
        gbc.writeMem(0x25d0, { 0x4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8057, gbc.sp());
        EXPECT(0x25d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03DF
        gbc.setState(0x2481, 0x553, 0x9450, 0xa547, 0xd689, 0x4041, 0x0, 0x0);
        gbc.writeMem(0x2481, { 0x4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x553, gbc.sp());
        EXPECT(0x2482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 04 03E1
        gbc.setState(0xbf70, 0x73e4, 0x3b40, 0x1937, 0xc352, 0x481e, 0x0, 0x0);
        gbc.writeMem(0xbf70, { 0x4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x73e4, gbc.sp());
        EXPECT(0xbf71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xbf70));
        // 04 03E2
        gbc.setState(0x5ca9, 0x57ae, 0x8640, 0x7d5d, 0x1be2, 0xd9b9, 0x1, 0x0);
        gbc.writeMem(0x5ca9, { 0x4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x57ae, gbc.sp());
        EXPECT(0x5caa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03E3
        gbc.setState(0x13f0, 0x96db, 0xf260, 0x28d6, 0x81f6, 0xac, 0x0, 0x0);
        gbc.writeMem(0x13f0, { 0x4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x96db, gbc.sp());
        EXPECT(0x13f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03E4
        gbc.setState(0xba26, 0x1d66, 0x39f0, 0x4c8f, 0x4f9, 0x26d9, 0x1, 0x1);
        gbc.writeMem(0xba26, { 0x4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1d66, gbc.sp());
        EXPECT(0xba27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xba26));
        // 04 03E5
        gbc.setState(0x78b3, 0xeb67, 0x94e0, 0x5c1c, 0x1dd6, 0xc67a, 0x0, 0x0);
        gbc.writeMem(0x78b3, { 0x4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xeb67, gbc.sp());
        EXPECT(0x78b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 04 03E6
        gbc.setState(0xb26f, 0x8b5a, 0xa830, 0xaf45, 0x605, 0x17ab, 0x1, 0x0);
        gbc.writeMem(0xb26f, { 0x4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8b5a, gbc.sp());
        EXPECT(0xb270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb26f));
        // 04 03E7
        gbc.setState(0xbe00, 0xcb5d, 0x7120, 0x986f, 0x6ce8, 0xb73a, 0x0, 0x0);
        gbc.writeMem(0xbe00, { 0x4 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcb5d, gbc.sp());
        EXPECT(0xbe01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xbe00));
    }
