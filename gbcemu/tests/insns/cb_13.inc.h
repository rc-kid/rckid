    TEST(gbcemu, opcode_cb_13) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 13 0000
        gbc.setState(0x1858, 0x46b9, 0x3d70, 0x9728, 0x1763, 0x3186, 0x0, 0x1);
        gbc.writeMem(0x1858, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x46b9, gbc.sp());
        EXPECT(0x185a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0001
        gbc.setState(0x7652, 0x26d4, 0x7cb0, 0x9597, 0xac69, 0x60b9, 0x0, 0x0);
        gbc.writeMem(0x7652, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x26d4, gbc.sp());
        EXPECT(0x7654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0002
        gbc.setState(0x4968, 0x2bc5, 0xea0, 0xe237, 0x9be0, 0x5acb, 0x0, 0x1);
        gbc.writeMem(0x4968, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2bc5, gbc.sp());
        EXPECT(0x496a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0003
        gbc.setState(0x1daa, 0x9480, 0xe4c0, 0x580f, 0x1459, 0x7535, 0x0, 0x0);
        gbc.writeMem(0x1daa, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9480, gbc.sp());
        EXPECT(0x1dac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0005
        gbc.setState(0x4502, 0xff80, 0xf3c0, 0xb138, 0xe06a, 0x6266, 0x1, 0x1);
        gbc.writeMem(0x4502, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xff80, gbc.sp());
        EXPECT(0x4504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0006
        gbc.setState(0x40e1, 0x9258, 0x9300, 0xd2a5, 0x1ce, 0x7ec7, 0x1, 0x1);
        gbc.writeMem(0x40e1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9258, gbc.sp());
        EXPECT(0x40e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0007
        gbc.setState(0xbeff, 0x228a, 0x7160, 0x63e2, 0x16c5, 0x4ee1, 0x1, 0x0);
        gbc.writeMem(0xbeff, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x228a, gbc.sp());
        EXPECT(0xbf01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeff));
        EXPECT(0x13, gbc.readMem(0xbf00));
        // CB 13 0008
        gbc.setState(0xd1ba, 0x4bb3, 0x1450, 0xb663, 0xb4fd, 0xe2e6, 0x1, 0x0);
        gbc.writeMem(0xd1ba, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4bb3, gbc.sp());
        EXPECT(0xd1bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ba));
        EXPECT(0x13, gbc.readMem(0xd1bb));
        // CB 13 0009
        gbc.setState(0x24e9, 0x8eeb, 0xeeb0, 0x6b53, 0x6644, 0xcee8, 0x1, 0x0);
        gbc.writeMem(0x24e9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8eeb, gbc.sp());
        EXPECT(0x24eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 000A
        gbc.setState(0xe54c, 0xd998, 0x6910, 0xc085, 0x32eb, 0x16ff, 0x0, 0x1);
        gbc.writeMem(0xe54c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd998, gbc.sp());
        EXPECT(0xe54e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe54c));
        EXPECT(0x13, gbc.readMem(0xe54d));
        // CB 13 000B
        gbc.setState(0xa9c8, 0x45, 0x7fb0, 0x73b2, 0xf873, 0xae4b, 0x0, 0x0);
        gbc.writeMem(0xa9c8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x45, gbc.sp());
        EXPECT(0xa9ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9c8));
        EXPECT(0x13, gbc.readMem(0xa9c9));
        // CB 13 000C
        gbc.setState(0x7694, 0xdb2e, 0x5b40, 0xdbda, 0xfc43, 0x3580, 0x0, 0x1);
        gbc.writeMem(0x7694, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdb2e, gbc.sp());
        EXPECT(0x7696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 000D
        gbc.setState(0x651b, 0xe6fe, 0xf00, 0x26f, 0xc001, 0x9159, 0x1, 0x1);
        gbc.writeMem(0x651b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe6fe, gbc.sp());
        EXPECT(0x651d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 000E
        gbc.setState(0x8644, 0x5177, 0xef90, 0xee12, 0xcb7d, 0x50b, 0x1, 0x0);
        gbc.writeMem(0x8644, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5177, gbc.sp());
        EXPECT(0x8646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8644));
        EXPECT(0x13, gbc.readMem(0x8645));
        // CB 13 000F
        gbc.setState(0xb92e, 0x364e, 0x3f70, 0x91e0, 0x67e8, 0x1f6, 0x1, 0x1);
        gbc.writeMem(0xb92e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x364e, gbc.sp());
        EXPECT(0xb930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb92e));
        EXPECT(0x13, gbc.readMem(0xb92f));
        // CB 13 0010
        gbc.setState(0xac14, 0x8318, 0x57d0, 0xf2af, 0x630a, 0x7af6, 0x1, 0x0);
        gbc.writeMem(0xac14, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8318, gbc.sp());
        EXPECT(0xac16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac14));
        EXPECT(0x13, gbc.readMem(0xac15));
        // CB 13 0011
        gbc.setState(0x5d1, 0xb983, 0x6190, 0x8a70, 0x352f, 0xca21, 0x0, 0x1);
        gbc.writeMem(0x5d1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb983, gbc.sp());
        EXPECT(0x5d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0012
        gbc.setState(0x4b12, 0x8edd, 0xb3a0, 0x8f54, 0x2118, 0x7418, 0x1, 0x1);
        gbc.writeMem(0x4b12, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8edd, gbc.sp());
        EXPECT(0x4b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0013
        gbc.setState(0x4a19, 0x2664, 0x4e0, 0xd42b, 0xe407, 0x1ad1, 0x0, 0x0);
        gbc.writeMem(0x4a19, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2664, gbc.sp());
        EXPECT(0x4a1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0014
        gbc.setState(0x9833, 0x9c9f, 0xcaf0, 0x5c3d, 0xb9f3, 0x5ce5, 0x1, 0x0);
        gbc.writeMem(0x9833, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9c9f, gbc.sp());
        EXPECT(0x9835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9833));
        EXPECT(0x13, gbc.readMem(0x9834));
        // CB 13 0015
        gbc.setState(0x843c, 0xda0, 0xbf50, 0xcaf7, 0x391a, 0xeb3f, 0x0, 0x1);
        gbc.writeMem(0x843c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xda0, gbc.sp());
        EXPECT(0x843e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x843c));
        EXPECT(0x13, gbc.readMem(0x843d));
        // CB 13 0016
        gbc.setState(0xe3ea, 0x9c13, 0xf2c0, 0xa078, 0x26a5, 0x2b2c, 0x0, 0x0);
        gbc.writeMem(0xe3ea, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9c13, gbc.sp());
        EXPECT(0xe3ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ea));
        EXPECT(0x13, gbc.readMem(0xe3eb));
        // CB 13 0017
        gbc.setState(0xa278, 0xc848, 0xe750, 0x3e96, 0xdbfd, 0xc79a, 0x0, 0x1);
        gbc.writeMem(0xa278, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc848, gbc.sp());
        EXPECT(0xa27a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa278));
        EXPECT(0x13, gbc.readMem(0xa279));
        // CB 13 0018
        gbc.setState(0x7251, 0xb60b, 0x3100, 0x8265, 0xafc7, 0x5ac7, 0x0, 0x1);
        gbc.writeMem(0x7251, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb60b, gbc.sp());
        EXPECT(0x7253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0019
        gbc.setState(0xc76c, 0xce05, 0x9df0, 0x233a, 0x415c, 0xcffe, 0x1, 0x0);
        gbc.writeMem(0xc76c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xce05, gbc.sp());
        EXPECT(0xc76e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc76c));
        EXPECT(0x13, gbc.readMem(0xc76d));
        // CB 13 001A
        gbc.setState(0x9cb7, 0x8326, 0xbe60, 0x207d, 0xad2b, 0xbb61, 0x0, 0x0);
        gbc.writeMem(0x9cb7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8326, gbc.sp());
        EXPECT(0x9cb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb7));
        EXPECT(0x13, gbc.readMem(0x9cb8));
        // CB 13 001B
        gbc.setState(0x693e, 0x9434, 0xbc80, 0xfbba, 0x2442, 0x5b3d, 0x1, 0x0);
        gbc.writeMem(0x693e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9434, gbc.sp());
        EXPECT(0x6940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 001C
        gbc.setState(0x9a08, 0xd4be, 0x1930, 0x2521, 0x5a9, 0x88be, 0x1, 0x1);
        gbc.writeMem(0x9a08, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd4be, gbc.sp());
        EXPECT(0x9a0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a08));
        EXPECT(0x13, gbc.readMem(0x9a09));
        // CB 13 001D
        gbc.setState(0x3caf, 0xf50d, 0x2470, 0xaae7, 0x25f, 0xbf25, 0x0, 0x1);
        gbc.writeMem(0x3caf, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf50d, gbc.sp());
        EXPECT(0x3cb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 001E
        gbc.setState(0x2570, 0x94f8, 0x8160, 0x219b, 0xc3a7, 0x573b, 0x1, 0x1);
        gbc.writeMem(0x2570, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x94f8, gbc.sp());
        EXPECT(0x2572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 001F
        gbc.setState(0x645f, 0x9429, 0x20, 0xca07, 0xc837, 0x1f21, 0x0, 0x1);
        gbc.writeMem(0x645f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9429, gbc.sp());
        EXPECT(0x6461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0020
        gbc.setState(0x688c, 0xee1f, 0x1630, 0xe3d5, 0xc24, 0xfb1, 0x0, 0x1);
        gbc.writeMem(0x688c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xee1f, gbc.sp());
        EXPECT(0x688e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0021
        gbc.setState(0xda2, 0xc659, 0x23c0, 0x4404, 0xbf3f, 0x6444, 0x0, 0x1);
        gbc.writeMem(0xda2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc659, gbc.sp());
        EXPECT(0xda4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0024
        gbc.setState(0x8aa1, 0x8c20, 0x3690, 0x1440, 0x3cdc, 0xd7a9, 0x0, 0x1);
        gbc.writeMem(0x8aa1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8c20, gbc.sp());
        EXPECT(0x8aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aa1));
        EXPECT(0x13, gbc.readMem(0x8aa2));
        // CB 13 0025
        gbc.setState(0x82ea, 0x1d49, 0x890, 0x2060, 0x5b74, 0x3c20, 0x1, 0x1);
        gbc.writeMem(0x82ea, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1d49, gbc.sp());
        EXPECT(0x82ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ea));
        EXPECT(0x13, gbc.readMem(0x82eb));
        // CB 13 0026
        gbc.setState(0x6c64, 0x8f7, 0x9cb0, 0x507, 0x5f19, 0x560a, 0x0, 0x1);
        gbc.writeMem(0x6c64, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8f7, gbc.sp());
        EXPECT(0x6c66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0027
        gbc.setState(0xe5a7, 0x30f6, 0xa0b0, 0xe154, 0x9a66, 0x91dc, 0x1, 0x1);
        gbc.writeMem(0xe5a7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x30f6, gbc.sp());
        EXPECT(0xe5a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a7));
        EXPECT(0x13, gbc.readMem(0xe5a8));
        // CB 13 0028
        gbc.setState(0x3a3e, 0x1d77, 0x47d0, 0xbc61, 0xf73f, 0x41fb, 0x0, 0x0);
        gbc.writeMem(0x3a3e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1d77, gbc.sp());
        EXPECT(0x3a40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0029
        gbc.setState(0x6669, 0x7785, 0x9830, 0x6b81, 0xdfa1, 0xbabb, 0x0, 0x1);
        gbc.writeMem(0x6669, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7785, gbc.sp());
        EXPECT(0x666b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 002A
        gbc.setState(0xb3f5, 0x67a5, 0xba50, 0x490d, 0xf47e, 0xd70e, 0x1, 0x1);
        gbc.writeMem(0xb3f5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x67a5, gbc.sp());
        EXPECT(0xb3f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f5));
        EXPECT(0x13, gbc.readMem(0xb3f6));
        // CB 13 002B
        gbc.setState(0x22a, 0x7ec6, 0x32f0, 0xee07, 0xc3aa, 0x5704, 0x1, 0x1);
        gbc.writeMem(0x22a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7ec6, gbc.sp());
        EXPECT(0x22c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 002C
        gbc.setState(0x2810, 0x9a8d, 0x6f30, 0x8a7f, 0x89a2, 0x7cfc, 0x1, 0x0);
        gbc.writeMem(0x2810, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9a8d, gbc.sp());
        EXPECT(0x2812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 002D
        gbc.setState(0x9e29, 0x5ad7, 0x80e0, 0x5d31, 0xf777, 0xa64f, 0x0, 0x1);
        gbc.writeMem(0x9e29, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5ad7, gbc.sp());
        EXPECT(0x9e2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e29));
        EXPECT(0x13, gbc.readMem(0x9e2a));
        // CB 13 002E
        gbc.setState(0xe4ca, 0x667f, 0x8d90, 0x8249, 0xc0a7, 0x7a77, 0x0, 0x0);
        gbc.writeMem(0xe4ca, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x667f, gbc.sp());
        EXPECT(0xe4cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ca));
        EXPECT(0x13, gbc.readMem(0xe4cb));
        // CB 13 002F
        gbc.setState(0x845c, 0x6c7e, 0x7ef0, 0x63aa, 0x1c4a, 0xe029, 0x1, 0x0);
        gbc.writeMem(0x845c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6c7e, gbc.sp());
        EXPECT(0x845e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x845c));
        EXPECT(0x13, gbc.readMem(0x845d));
        // CB 13 0032
        gbc.setState(0x4a0f, 0xf652, 0x4d70, 0xb144, 0xaf, 0x75c8, 0x0, 0x1);
        gbc.writeMem(0x4a0f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf652, gbc.sp());
        EXPECT(0x4a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0033
        gbc.setState(0x377a, 0x60c3, 0x7940, 0xeed7, 0xc891, 0x228e, 0x0, 0x0);
        gbc.writeMem(0x377a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x60c3, gbc.sp());
        EXPECT(0x377c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0034
        gbc.setState(0xe6a, 0x35b9, 0xa300, 0x9570, 0x7d8c, 0x19d0, 0x1, 0x1);
        gbc.writeMem(0xe6a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x35b9, gbc.sp());
        EXPECT(0xe6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0035
        gbc.setState(0xc4cc, 0xa17a, 0x3510, 0x72d5, 0x901, 0xd3c9, 0x0, 0x0);
        gbc.writeMem(0xc4cc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa17a, gbc.sp());
        EXPECT(0xc4ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4cc));
        EXPECT(0x13, gbc.readMem(0xc4cd));
        // CB 13 0036
        gbc.setState(0x14, 0xc196, 0x4e0, 0xc539, 0x39bc, 0xba4d, 0x1, 0x1);
        gbc.writeMem(0x14, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc196, gbc.sp());
        EXPECT(0x16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0037
        gbc.setState(0x46b6, 0xfb9f, 0x91d0, 0x7cc2, 0x5a80, 0xcd65, 0x0, 0x1);
        gbc.writeMem(0x46b6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfb9f, gbc.sp());
        EXPECT(0x46b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0038
        gbc.setState(0x5b3b, 0xce24, 0x3480, 0xcd20, 0x568e, 0xf0b4, 0x1, 0x0);
        gbc.writeMem(0x5b3b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xce24, gbc.sp());
        EXPECT(0x5b3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0039
        gbc.setState(0xcf0e, 0xbba7, 0xd130, 0x1912, 0xabb7, 0x1db9, 0x1, 0x0);
        gbc.writeMem(0xcf0e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbba7, gbc.sp());
        EXPECT(0xcf10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf0e));
        EXPECT(0x13, gbc.readMem(0xcf0f));
        // CB 13 003A
        gbc.setState(0x669d, 0x623e, 0x67c0, 0xf8e1, 0xbf17, 0x4c12, 0x1, 0x0);
        gbc.writeMem(0x669d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x623e, gbc.sp());
        EXPECT(0x669f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 003B
        gbc.setState(0x64d6, 0xd718, 0x56c0, 0x1fba, 0x4668, 0xe8e8, 0x0, 0x0);
        gbc.writeMem(0x64d6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd718, gbc.sp());
        EXPECT(0x64d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 003C
        gbc.setState(0x3e6b, 0x2b86, 0x9f70, 0x7040, 0x904f, 0x5a3b, 0x1, 0x1);
        gbc.writeMem(0x3e6b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2b86, gbc.sp());
        EXPECT(0x3e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 003E
        gbc.setState(0x9280, 0xab98, 0xae80, 0xf297, 0x971d, 0xc642, 0x1, 0x0);
        gbc.writeMem(0x9280, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xab98, gbc.sp());
        EXPECT(0x9282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9280));
        EXPECT(0x13, gbc.readMem(0x9281));
        // CB 13 003F
        gbc.setState(0xde1e, 0x869b, 0x61d0, 0xb895, 0xdf24, 0x40ca, 0x0, 0x0);
        gbc.writeMem(0xde1e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x869b, gbc.sp());
        EXPECT(0xde20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde1e));
        EXPECT(0x13, gbc.readMem(0xde1f));
        // CB 13 0040
        gbc.setState(0x1cb8, 0xb108, 0xb080, 0xaf0c, 0xc48e, 0xffe4, 0x1, 0x1);
        gbc.writeMem(0x1cb8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb108, gbc.sp());
        EXPECT(0x1cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0041
        gbc.setState(0x471, 0x840e, 0xb340, 0x261d, 0x74dc, 0x39b5, 0x1, 0x1);
        gbc.writeMem(0x471, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x840e, gbc.sp());
        EXPECT(0x473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0042
        gbc.setState(0x4922, 0xe1ee, 0x25b0, 0xea8c, 0x55c5, 0xecb1, 0x1, 0x1);
        gbc.writeMem(0x4922, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe1ee, gbc.sp());
        EXPECT(0x4924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0043
        gbc.setState(0x8f17, 0xfbe6, 0xec90, 0xe8bc, 0xedd4, 0x329e, 0x1, 0x1);
        gbc.writeMem(0x8f17, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xfbe6, gbc.sp());
        EXPECT(0x8f19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f17));
        EXPECT(0x13, gbc.readMem(0x8f18));
        // CB 13 0044
        gbc.setState(0x8a42, 0x73b, 0x9660, 0xb5bf, 0x93f7, 0xcfb9, 0x0, 0x0);
        gbc.writeMem(0x8a42, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x73b, gbc.sp());
        EXPECT(0x8a44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a42));
        EXPECT(0x13, gbc.readMem(0x8a43));
        // CB 13 0045
        gbc.setState(0xee42, 0xe6a7, 0xf9c0, 0xe772, 0xed57, 0x8e54, 0x1, 0x1);
        gbc.writeMem(0xee42, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe6a7, gbc.sp());
        EXPECT(0xee44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee42));
        EXPECT(0x13, gbc.readMem(0xee43));
        // CB 13 0046
        gbc.setState(0x1dd4, 0x11bf, 0x3d20, 0xe3ff, 0x7876, 0x349, 0x1, 0x1);
        gbc.writeMem(0x1dd4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x11bf, gbc.sp());
        EXPECT(0x1dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0048
        gbc.setState(0x30f1, 0xb28b, 0xebf0, 0xb56a, 0xe343, 0xddf0, 0x1, 0x1);
        gbc.writeMem(0x30f1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb28b, gbc.sp());
        EXPECT(0x30f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0049
        gbc.setState(0x9fd0, 0x1c5, 0x51f0, 0x8571, 0xc912, 0xe3b4, 0x0, 0x0);
        gbc.writeMem(0x9fd0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1c5, gbc.sp());
        EXPECT(0x9fd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fd0));
        EXPECT(0x13, gbc.readMem(0x9fd1));
        // CB 13 004A
        gbc.setState(0xe4b7, 0xdd1, 0xb7e0, 0xd521, 0xdfa6, 0xd841, 0x0, 0x0);
        gbc.writeMem(0xe4b7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xdd1, gbc.sp());
        EXPECT(0xe4b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4b7));
        EXPECT(0x13, gbc.readMem(0xe4b8));
        // CB 13 004B
        gbc.setState(0xb79e, 0xc46e, 0xe200, 0x2f99, 0xec59, 0xd3f5, 0x1, 0x0);
        gbc.writeMem(0xb79e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc46e, gbc.sp());
        EXPECT(0xb7a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb79e));
        EXPECT(0x13, gbc.readMem(0xb79f));
        // CB 13 004C
        gbc.setState(0x18f9, 0x7661, 0x70f0, 0x9881, 0x6e21, 0x4547, 0x0, 0x0);
        gbc.writeMem(0x18f9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7661, gbc.sp());
        EXPECT(0x18fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 004D
        gbc.setState(0xbbe7, 0xa8a8, 0x3cb0, 0x99b9, 0x1181, 0x3c92, 0x0, 0x0);
        gbc.writeMem(0xbbe7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa8a8, gbc.sp());
        EXPECT(0xbbe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe7));
        EXPECT(0x13, gbc.readMem(0xbbe8));
        // CB 13 004E
        gbc.setState(0xd342, 0x326f, 0xca40, 0xb439, 0xdf3, 0x6df1, 0x1, 0x1);
        gbc.writeMem(0xd342, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x326f, gbc.sp());
        EXPECT(0xd344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd342));
        EXPECT(0x13, gbc.readMem(0xd343));
        // CB 13 004F
        gbc.setState(0x348, 0x4771, 0xb880, 0xfd49, 0x213d, 0xc5a, 0x0, 0x1);
        gbc.writeMem(0x348, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4771, gbc.sp());
        EXPECT(0x34a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0050
        gbc.setState(0x67f7, 0x687b, 0xa170, 0x51c8, 0x6372, 0xfd48, 0x1, 0x0);
        gbc.writeMem(0x67f7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x687b, gbc.sp());
        EXPECT(0x67f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0051
        gbc.setState(0x5402, 0xa6db, 0xc6c0, 0x407d, 0xfa5a, 0x4c39, 0x0, 0x1);
        gbc.writeMem(0x5402, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa6db, gbc.sp());
        EXPECT(0x5404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0052
        gbc.setState(0x1ee, 0xb210, 0x9af0, 0x55df, 0x392c, 0xd4e7, 0x0, 0x1);
        gbc.writeMem(0x1ee, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb210, gbc.sp());
        EXPECT(0x1f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0053
        gbc.setState(0x9842, 0xb0c7, 0x10c0, 0x2153, 0x6b8b, 0x6b9c, 0x0, 0x0);
        gbc.writeMem(0x9842, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb0c7, gbc.sp());
        EXPECT(0x9844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9842));
        EXPECT(0x13, gbc.readMem(0x9843));
        // CB 13 0054
        gbc.setState(0x261, 0xed24, 0xe160, 0xff1f, 0xe627, 0xfc77, 0x0, 0x1);
        gbc.writeMem(0x261, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xed24, gbc.sp());
        EXPECT(0x263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0055
        gbc.setState(0xca0b, 0x21e, 0x5d50, 0xc98a, 0xa49f, 0x84cc, 0x0, 0x0);
        gbc.writeMem(0xca0b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x21e, gbc.sp());
        EXPECT(0xca0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca0b));
        EXPECT(0x13, gbc.readMem(0xca0c));
        // CB 13 0056
        gbc.setState(0x222, 0x42bb, 0xc970, 0xb47, 0x846, 0xf4b9, 0x1, 0x0);
        gbc.writeMem(0x222, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x42bb, gbc.sp());
        EXPECT(0x224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0057
        gbc.setState(0x3636, 0x9d19, 0x5b00, 0x3fdc, 0xb3b1, 0xa101, 0x0, 0x1);
        gbc.writeMem(0x3636, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9d19, gbc.sp());
        EXPECT(0x3638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0058
        gbc.setState(0xcd8f, 0xbf1f, 0x2ca0, 0xbb27, 0x440a, 0x3fe, 0x1, 0x0);
        gbc.writeMem(0xcd8f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xbf1f, gbc.sp());
        EXPECT(0xcd91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd8f));
        EXPECT(0x13, gbc.readMem(0xcd90));
        // CB 13 0059
        gbc.setState(0xa9e9, 0x6530, 0xd1b0, 0x8ab0, 0xdc27, 0x3520, 0x0, 0x1);
        gbc.writeMem(0xa9e9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6530, gbc.sp());
        EXPECT(0xa9eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9e9));
        EXPECT(0x13, gbc.readMem(0xa9ea));
        // CB 13 005A
        gbc.setState(0x3757, 0xd17, 0x440, 0x80a0, 0xe52, 0x9de, 0x0, 0x0);
        gbc.writeMem(0x3757, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd17, gbc.sp());
        EXPECT(0x3759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 005B
        gbc.setState(0x82d1, 0x8a72, 0xbad0, 0x14cd, 0xb894, 0x8bb8, 0x0, 0x1);
        gbc.writeMem(0x82d1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8a72, gbc.sp());
        EXPECT(0x82d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d1));
        EXPECT(0x13, gbc.readMem(0x82d2));
        // CB 13 005C
        gbc.setState(0xb3fd, 0x4cb3, 0xbee0, 0x9e27, 0xbba4, 0xddae, 0x0, 0x1);
        gbc.writeMem(0xb3fd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4cb3, gbc.sp());
        EXPECT(0xb3ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3fd));
        EXPECT(0x13, gbc.readMem(0xb3fe));
        // CB 13 005D
        gbc.setState(0x2fc3, 0xf599, 0xe810, 0x3997, 0xab3f, 0x4551, 0x0, 0x1);
        gbc.writeMem(0x2fc3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf599, gbc.sp());
        EXPECT(0x2fc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 005E
        gbc.setState(0x63af, 0x3a0d, 0x7a40, 0x91fc, 0x28e2, 0xe877, 0x1, 0x0);
        gbc.writeMem(0x63af, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3a0d, gbc.sp());
        EXPECT(0x63b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 005F
        gbc.setState(0x6807, 0x1e6f, 0xcbd0, 0xd2e8, 0xf7db, 0x436, 0x0, 0x1);
        gbc.writeMem(0x6807, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1e6f, gbc.sp());
        EXPECT(0x6809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0060
        gbc.setState(0xd05a, 0xeb71, 0x6090, 0x7472, 0xbba, 0x213f, 0x1, 0x0);
        gbc.writeMem(0xd05a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xeb71, gbc.sp());
        EXPECT(0xd05c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd05a));
        EXPECT(0x13, gbc.readMem(0xd05b));
        // CB 13 0061
        gbc.setState(0x264e, 0xe46f, 0x2970, 0x6408, 0x4571, 0x190b, 0x0, 0x0);
        gbc.writeMem(0x264e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe46f, gbc.sp());
        EXPECT(0x2650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0062
        gbc.setState(0x57b7, 0xff4c, 0xa9c0, 0xa869, 0x7870, 0xb5e7, 0x1, 0x0);
        gbc.writeMem(0x57b7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xff4c, gbc.sp());
        EXPECT(0x57b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0063
        gbc.setState(0x62f8, 0xf465, 0xab20, 0xc5e, 0x671c, 0x4220, 0x1, 0x0);
        gbc.writeMem(0x62f8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf465, gbc.sp());
        EXPECT(0x62fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0064
        gbc.setState(0x3742, 0xebcb, 0x3260, 0x8b13, 0xb85f, 0x722a, 0x1, 0x1);
        gbc.writeMem(0x3742, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xebcb, gbc.sp());
        EXPECT(0x3744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0065
        gbc.setState(0x51b7, 0x2fdc, 0xbf40, 0x5d93, 0x7180, 0x73e0, 0x1, 0x1);
        gbc.writeMem(0x51b7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2fdc, gbc.sp());
        EXPECT(0x51b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0066
        gbc.setState(0x5f52, 0x7d08, 0x73a0, 0xaa34, 0x6ef8, 0x9e0f, 0x0, 0x0);
        gbc.writeMem(0x5f52, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7d08, gbc.sp());
        EXPECT(0x5f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0067
        gbc.setState(0x14f8, 0xb68b, 0x58d0, 0xab2b, 0x3f1d, 0xe88a, 0x1, 0x0);
        gbc.writeMem(0x14f8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb68b, gbc.sp());
        EXPECT(0x14fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0068
        gbc.setState(0x21f6, 0xc8cf, 0x7e00, 0xabf7, 0x53fd, 0xbb25, 0x1, 0x1);
        gbc.writeMem(0x21f6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc8cf, gbc.sp());
        EXPECT(0x21f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 006A
        gbc.setState(0x4748, 0x9e69, 0x10f0, 0xfbe9, 0x36ad, 0x1a0f, 0x1, 0x0);
        gbc.writeMem(0x4748, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9e69, gbc.sp());
        EXPECT(0x474a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 006B
        gbc.setState(0x44bd, 0x68ea, 0xc840, 0x9249, 0x4e15, 0x3659, 0x0, 0x1);
        gbc.writeMem(0x44bd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x68ea, gbc.sp());
        EXPECT(0x44bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 006C
        gbc.setState(0x542c, 0xdc0d, 0xfbd0, 0x2096, 0x6ccc, 0xd74f, 0x1, 0x0);
        gbc.writeMem(0x542c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdc0d, gbc.sp());
        EXPECT(0x542e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 006D
        gbc.setState(0xeb06, 0xf0ec, 0xbe10, 0x9fd7, 0x8c11, 0x1405, 0x0, 0x0);
        gbc.writeMem(0xeb06, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf0ec, gbc.sp());
        EXPECT(0xeb08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb06));
        EXPECT(0x13, gbc.readMem(0xeb07));
        // CB 13 006E
        gbc.setState(0xb4ed, 0x9cf2, 0x2d80, 0xff99, 0xeb7, 0x663b, 0x1, 0x1);
        gbc.writeMem(0xb4ed, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9cf2, gbc.sp());
        EXPECT(0xb4ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ed));
        EXPECT(0x13, gbc.readMem(0xb4ee));
        // CB 13 006F
        gbc.setState(0xf8d, 0xbac0, 0xa720, 0x89d, 0xee50, 0x47a7, 0x1, 0x0);
        gbc.writeMem(0xf8d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbac0, gbc.sp());
        EXPECT(0xf8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0070
        gbc.setState(0xdee0, 0x8750, 0xcd0, 0x178f, 0xe76a, 0xa22a, 0x0, 0x1);
        gbc.writeMem(0xdee0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8750, gbc.sp());
        EXPECT(0xdee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdee0));
        EXPECT(0x13, gbc.readMem(0xdee1));
        // CB 13 0071
        gbc.setState(0x424, 0xb142, 0xed50, 0xcf8f, 0xa28e, 0x816, 0x0, 0x1);
        gbc.writeMem(0x424, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb142, gbc.sp());
        EXPECT(0x426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0072
        gbc.setState(0x453d, 0xf582, 0x4de0, 0xee86, 0xc5b2, 0xbec1, 0x1, 0x0);
        gbc.writeMem(0x453d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf582, gbc.sp());
        EXPECT(0x453f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0073
        gbc.setState(0x33c4, 0x92e1, 0x6b90, 0x250b, 0xab5e, 0xc75e, 0x1, 0x1);
        gbc.writeMem(0x33c4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x92e1, gbc.sp());
        EXPECT(0x33c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0074
        gbc.setState(0x65fe, 0xd82, 0x3630, 0xe045, 0x960e, 0xb5e2, 0x0, 0x0);
        gbc.writeMem(0x65fe, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd82, gbc.sp());
        EXPECT(0x6600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0075
        gbc.setState(0x1a87, 0x7397, 0x7c30, 0x95cd, 0xc02e, 0xffd1, 0x1, 0x0);
        gbc.writeMem(0x1a87, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7397, gbc.sp());
        EXPECT(0x1a89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0076
        gbc.setState(0x2955, 0x44db, 0x3b70, 0x10ec, 0x8bf3, 0x2b73, 0x0, 0x0);
        gbc.writeMem(0x2955, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x44db, gbc.sp());
        EXPECT(0x2957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0077
        gbc.setState(0x4700, 0x6a12, 0xf940, 0x2604, 0xd011, 0xf6f6, 0x0, 0x1);
        gbc.writeMem(0x4700, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6a12, gbc.sp());
        EXPECT(0x4702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0078
        gbc.setState(0x42b, 0x7a15, 0xd370, 0x5b91, 0xc5d8, 0xbd0a, 0x1, 0x0);
        gbc.writeMem(0x42b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7a15, gbc.sp());
        EXPECT(0x42d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0079
        gbc.setState(0xe0bd, 0xa417, 0x6da0, 0xcb9, 0x270c, 0xec9, 0x1, 0x1);
        gbc.writeMem(0xe0bd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa417, gbc.sp());
        EXPECT(0xe0bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0bd));
        EXPECT(0x13, gbc.readMem(0xe0be));
        // CB 13 007A
        gbc.setState(0x994e, 0xfee3, 0xaaf0, 0x5f85, 0xaf8, 0x9106, 0x1, 0x1);
        gbc.writeMem(0x994e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfee3, gbc.sp());
        EXPECT(0x9950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994e));
        EXPECT(0x13, gbc.readMem(0x994f));
        // CB 13 007C
        gbc.setState(0x39fd, 0x9801, 0xf910, 0x9f7f, 0xad5e, 0x6ea7, 0x0, 0x0);
        gbc.writeMem(0x39fd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9801, gbc.sp());
        EXPECT(0x39ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 007D
        gbc.setState(0x56a4, 0x92d4, 0x1440, 0xb76d, 0x6b2e, 0xb2b2, 0x1, 0x1);
        gbc.writeMem(0x56a4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x92d4, gbc.sp());
        EXPECT(0x56a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 007E
        gbc.setState(0x60cb, 0x1eee, 0x6df0, 0x1b17, 0x7765, 0x231, 0x0, 0x1);
        gbc.writeMem(0x60cb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1eee, gbc.sp());
        EXPECT(0x60cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 007F
        gbc.setState(0x3ee4, 0x272e, 0x6190, 0x3bb9, 0x2f36, 0x92c3, 0x0, 0x0);
        gbc.writeMem(0x3ee4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x272e, gbc.sp());
        EXPECT(0x3ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0080
        gbc.setState(0x82db, 0x618, 0xfcf0, 0x22fb, 0x737c, 0x6f07, 0x0, 0x1);
        gbc.writeMem(0x82db, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x618, gbc.sp());
        EXPECT(0x82dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82db));
        EXPECT(0x13, gbc.readMem(0x82dc));
        // CB 13 0081
        gbc.setState(0x62ea, 0x5481, 0xbee0, 0xc76f, 0xd8a7, 0x6618, 0x1, 0x0);
        gbc.writeMem(0x62ea, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5481, gbc.sp());
        EXPECT(0x62ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0082
        gbc.setState(0xec9d, 0xd6a4, 0xf000, 0x161e, 0xef9d, 0x21fc, 0x1, 0x0);
        gbc.writeMem(0xec9d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd6a4, gbc.sp());
        EXPECT(0xec9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec9d));
        EXPECT(0x13, gbc.readMem(0xec9e));
        // CB 13 0083
        gbc.setState(0x9387, 0x8b28, 0x9c60, 0xc56f, 0xb73d, 0x40db, 0x0, 0x1);
        gbc.writeMem(0x9387, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8b28, gbc.sp());
        EXPECT(0x9389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9387));
        EXPECT(0x13, gbc.readMem(0x9388));
        // CB 13 0084
        gbc.setState(0xce40, 0xd794, 0x7e00, 0x771d, 0x74a7, 0xecbf, 0x1, 0x1);
        gbc.writeMem(0xce40, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd794, gbc.sp());
        EXPECT(0xce42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce40));
        EXPECT(0x13, gbc.readMem(0xce41));
        // CB 13 0085
        gbc.setState(0xb023, 0xf182, 0x2490, 0x2ebf, 0xd3fa, 0x30a2, 0x1, 0x0);
        gbc.writeMem(0xb023, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf182, gbc.sp());
        EXPECT(0xb025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb023));
        EXPECT(0x13, gbc.readMem(0xb024));
        // CB 13 0086
        gbc.setState(0xdb04, 0xbedb, 0x7fc0, 0x4755, 0xb54e, 0x798f, 0x1, 0x0);
        gbc.writeMem(0xdb04, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xbedb, gbc.sp());
        EXPECT(0xdb06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb04));
        EXPECT(0x13, gbc.readMem(0xdb05));
        // CB 13 0087
        gbc.setState(0xaa9c, 0x8468, 0xb290, 0x8f7d, 0x5c97, 0xe037, 0x1, 0x1);
        gbc.writeMem(0xaa9c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8468, gbc.sp());
        EXPECT(0xaa9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa9c));
        EXPECT(0x13, gbc.readMem(0xaa9d));
        // CB 13 0088
        gbc.setState(0x8a60, 0x2f1b, 0xa220, 0x4a9b, 0x91a1, 0x5bdb, 0x1, 0x1);
        gbc.writeMem(0x8a60, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2f1b, gbc.sp());
        EXPECT(0x8a62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a60));
        EXPECT(0x13, gbc.readMem(0x8a61));
        // CB 13 0089
        gbc.setState(0xc180, 0xe6e2, 0xb7c0, 0x2506, 0xb1cf, 0x4e29, 0x1, 0x0);
        gbc.writeMem(0xc180, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe6e2, gbc.sp());
        EXPECT(0xc182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc180));
        EXPECT(0x13, gbc.readMem(0xc181));
        // CB 13 008A
        gbc.setState(0x43b8, 0x5446, 0x8e00, 0xd820, 0x632e, 0x9a45, 0x1, 0x0);
        gbc.writeMem(0x43b8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5446, gbc.sp());
        EXPECT(0x43ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 008B
        gbc.setState(0xabc0, 0x286b, 0x4480, 0x67d1, 0x3304, 0x5dae, 0x1, 0x1);
        gbc.writeMem(0xabc0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x286b, gbc.sp());
        EXPECT(0xabc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc0));
        EXPECT(0x13, gbc.readMem(0xabc1));
        // CB 13 008C
        gbc.setState(0x1a71, 0xb3de, 0x7a10, 0x4a45, 0xa6dd, 0x6a4c, 0x0, 0x0);
        gbc.writeMem(0x1a71, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb3de, gbc.sp());
        EXPECT(0x1a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 008D
        gbc.setState(0x83b7, 0xab97, 0xf410, 0x7793, 0x3f9f, 0xd146, 0x0, 0x0);
        gbc.writeMem(0x83b7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xab97, gbc.sp());
        EXPECT(0x83b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83b7));
        EXPECT(0x13, gbc.readMem(0x83b8));
        // CB 13 008E
        gbc.setState(0x75b7, 0x1a8, 0xab20, 0x12de, 0x4954, 0x38dd, 0x1, 0x0);
        gbc.writeMem(0x75b7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1a8, gbc.sp());
        EXPECT(0x75b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 008F
        gbc.setState(0xd686, 0x56d3, 0x8d50, 0xfaa8, 0xe2eb, 0x3fee, 0x1, 0x0);
        gbc.writeMem(0xd686, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x56d3, gbc.sp());
        EXPECT(0xd688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd686));
        EXPECT(0x13, gbc.readMem(0xd687));
        // CB 13 0090
        gbc.setState(0x2204, 0xd77d, 0x5140, 0xa1cd, 0x3268, 0x41bd, 0x1, 0x0);
        gbc.writeMem(0x2204, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd77d, gbc.sp());
        EXPECT(0x2206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0091
        gbc.setState(0x7076, 0xe1c8, 0xaff0, 0x8d88, 0xefbe, 0x3b02, 0x1, 0x1);
        gbc.writeMem(0x7076, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe1c8, gbc.sp());
        EXPECT(0x7078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0093
        gbc.setState(0x87c3, 0x28bb, 0x8eb0, 0x93c5, 0x8321, 0x9e4a, 0x1, 0x0);
        gbc.writeMem(0x87c3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x28bb, gbc.sp());
        EXPECT(0x87c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87c3));
        EXPECT(0x13, gbc.readMem(0x87c4));
        // CB 13 0094
        gbc.setState(0x9f5e, 0x690b, 0x7690, 0xac75, 0xa6d4, 0xccb9, 0x1, 0x0);
        gbc.writeMem(0x9f5e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x690b, gbc.sp());
        EXPECT(0x9f60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f5e));
        EXPECT(0x13, gbc.readMem(0x9f5f));
        // CB 13 0096
        gbc.setState(0xa509, 0xbd5d, 0x6310, 0x87c9, 0xa1e, 0x1897, 0x0, 0x1);
        gbc.writeMem(0xa509, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbd5d, gbc.sp());
        EXPECT(0xa50b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa509));
        EXPECT(0x13, gbc.readMem(0xa50a));
        // CB 13 0097
        gbc.setState(0xed7e, 0x9140, 0xfb80, 0x3770, 0x4473, 0xf11b, 0x1, 0x0);
        gbc.writeMem(0xed7e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9140, gbc.sp());
        EXPECT(0xed80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed7e));
        EXPECT(0x13, gbc.readMem(0xed7f));
        // CB 13 0098
        gbc.setState(0xa8af, 0xc47f, 0x2ef0, 0xc960, 0xe2cd, 0xe328, 0x1, 0x0);
        gbc.writeMem(0xa8af, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc47f, gbc.sp());
        EXPECT(0xa8b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8af));
        EXPECT(0x13, gbc.readMem(0xa8b0));
        // CB 13 0099
        gbc.setState(0x4082, 0xf4e1, 0xd100, 0xeed2, 0x4f9e, 0x429, 0x0, 0x0);
        gbc.writeMem(0x4082, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf4e1, gbc.sp());
        EXPECT(0x4084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 009A
        gbc.setState(0xb0fc, 0x5f5, 0x3940, 0xb61c, 0xd55d, 0x35c0, 0x1, 0x1);
        gbc.writeMem(0xb0fc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5f5, gbc.sp());
        EXPECT(0xb0fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0fc));
        EXPECT(0x13, gbc.readMem(0xb0fd));
        // CB 13 009B
        gbc.setState(0x15b8, 0x9bb1, 0xda90, 0x2215, 0x5c20, 0xb7d2, 0x0, 0x1);
        gbc.writeMem(0x15b8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9bb1, gbc.sp());
        EXPECT(0x15ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 009C
        gbc.setState(0x6815, 0x1d1e, 0x1430, 0xacc4, 0x60e8, 0xe877, 0x0, 0x1);
        gbc.writeMem(0x6815, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1d1e, gbc.sp());
        EXPECT(0x6817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 009D
        gbc.setState(0xe070, 0x65ee, 0xd3c0, 0x98b0, 0x6995, 0x67b0, 0x0, 0x1);
        gbc.writeMem(0xe070, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x65ee, gbc.sp());
        EXPECT(0xe072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe070));
        EXPECT(0x13, gbc.readMem(0xe071));
        // CB 13 009E
        gbc.setState(0xc777, 0x2808, 0xade0, 0x255f, 0x554d, 0xdc35, 0x0, 0x0);
        gbc.writeMem(0xc777, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2808, gbc.sp());
        EXPECT(0xc779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc777));
        EXPECT(0x13, gbc.readMem(0xc778));
        // CB 13 009F
        gbc.setState(0x2e93, 0x9b1d, 0x2bd0, 0xf25a, 0xe835, 0x6850, 0x0, 0x1);
        gbc.writeMem(0x2e93, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9b1d, gbc.sp());
        EXPECT(0x2e95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 00A0
        gbc.setState(0xe033, 0xa2c8, 0x7b60, 0xe5d1, 0x9c51, 0x515e, 0x0, 0x0);
        gbc.writeMem(0xe033, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa2c8, gbc.sp());
        EXPECT(0xe035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe033));
        EXPECT(0x13, gbc.readMem(0xe034));
        // CB 13 00A1
        gbc.setState(0x256f, 0x395f, 0xb9a0, 0x6d50, 0x621f, 0x26c5, 0x1, 0x0);
        gbc.writeMem(0x256f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x395f, gbc.sp());
        EXPECT(0x2571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 00A2
        gbc.setState(0x63b5, 0x650c, 0x40a0, 0x3139, 0xab1b, 0xb104, 0x0, 0x1);
        gbc.writeMem(0x63b5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x650c, gbc.sp());
        EXPECT(0x63b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 00A3
        gbc.setState(0x691d, 0x62cc, 0xc470, 0x1018, 0x7b69, 0x252e, 0x1, 0x1);
        gbc.writeMem(0x691d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x62cc, gbc.sp());
        EXPECT(0x691f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 00A4
        gbc.setState(0x2977, 0x48ce, 0x4310, 0x7bfc, 0xcce0, 0xb86b, 0x0, 0x1);
        gbc.writeMem(0x2977, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x48ce, gbc.sp());
        EXPECT(0x2979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00A5
        gbc.setState(0xd659, 0xa454, 0xc40, 0xf576, 0x2d5b, 0xdc17, 0x1, 0x0);
        gbc.writeMem(0xd659, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa454, gbc.sp());
        EXPECT(0xd65b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd659));
        EXPECT(0x13, gbc.readMem(0xd65a));
        // CB 13 00A6
        gbc.setState(0xc9, 0x3544, 0x3b10, 0xfdeb, 0x390e, 0x4614, 0x1, 0x1);
        gbc.writeMem(0xc9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3544, gbc.sp());
        EXPECT(0xcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 00A7
        gbc.setState(0x860c, 0x14c7, 0x2170, 0x26be, 0x2aae, 0x86f2, 0x1, 0x0);
        gbc.writeMem(0x860c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x14c7, gbc.sp());
        EXPECT(0x860e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x860c));
        EXPECT(0x13, gbc.readMem(0x860d));
        // CB 13 00A8
        gbc.setState(0x1c5, 0xb071, 0x72d0, 0xff00, 0xcce5, 0x9705, 0x1, 0x0);
        gbc.writeMem(0x1c5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb071, gbc.sp());
        EXPECT(0x1c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00A9
        gbc.setState(0xcf9c, 0x9610, 0xa250, 0xc65d, 0x75, 0x733f, 0x0, 0x0);
        gbc.writeMem(0xcf9c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9610, gbc.sp());
        EXPECT(0xcf9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf9c));
        EXPECT(0x13, gbc.readMem(0xcf9d));
        // CB 13 00AA
        gbc.setState(0xc284, 0xaa, 0xb960, 0x29f4, 0x86a1, 0x2e24, 0x1, 0x0);
        gbc.writeMem(0xc284, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xaa, gbc.sp());
        EXPECT(0xc286, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc284));
        EXPECT(0x13, gbc.readMem(0xc285));
        // CB 13 00AB
        gbc.setState(0x6485, 0xecf2, 0x1870, 0xba8b, 0x86c3, 0xe02, 0x1, 0x1);
        gbc.writeMem(0x6485, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xecf2, gbc.sp());
        EXPECT(0x6487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00AC
        gbc.setState(0x840b, 0xe71e, 0xd2b0, 0x503f, 0xc47d, 0xf6dc, 0x0, 0x1);
        gbc.writeMem(0x840b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe71e, gbc.sp());
        EXPECT(0x840d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x840b));
        EXPECT(0x13, gbc.readMem(0x840c));
        // CB 13 00AD
        gbc.setState(0x3ed0, 0x7de9, 0x59b0, 0x290c, 0x1ac7, 0xb97e, 0x0, 0x1);
        gbc.writeMem(0x3ed0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7de9, gbc.sp());
        EXPECT(0x3ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00AE
        gbc.setState(0xc2a9, 0x32a2, 0x2a30, 0x9221, 0x6a, 0x4cf, 0x1, 0x0);
        gbc.writeMem(0xc2a9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x32a2, gbc.sp());
        EXPECT(0xc2ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a9));
        EXPECT(0x13, gbc.readMem(0xc2aa));
        // CB 13 00AF
        gbc.setState(0x12fa, 0xb0da, 0xdfc0, 0xc5aa, 0x3ab7, 0x9f7b, 0x0, 0x1);
        gbc.writeMem(0x12fa, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb0da, gbc.sp());
        EXPECT(0x12fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00B0
        gbc.setState(0x1e5, 0x4d32, 0x2e10, 0x9d30, 0xabe7, 0xe08f, 0x1, 0x0);
        gbc.writeMem(0x1e5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4d32, gbc.sp());
        EXPECT(0x1e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00B1
        gbc.setState(0xee7f, 0x5bc7, 0xcf30, 0xf521, 0x67a1, 0xf8b6, 0x1, 0x0);
        gbc.writeMem(0xee7f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5bc7, gbc.sp());
        EXPECT(0xee81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee7f));
        EXPECT(0x13, gbc.readMem(0xee80));
        // CB 13 00B2
        gbc.setState(0xa0dd, 0x20d5, 0xde70, 0x613b, 0x16cd, 0x6d2f, 0x0, 0x1);
        gbc.writeMem(0xa0dd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x20d5, gbc.sp());
        EXPECT(0xa0df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0dd));
        EXPECT(0x13, gbc.readMem(0xa0de));
        // CB 13 00B3
        gbc.setState(0x2226, 0x9bab, 0x9bb0, 0x70c5, 0xa069, 0x1134, 0x0, 0x0);
        gbc.writeMem(0x2226, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9bab, gbc.sp());
        EXPECT(0x2228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 00B4
        gbc.setState(0xecec, 0x6eb0, 0x88b0, 0xa289, 0xddef, 0xc2cb, 0x0, 0x0);
        gbc.writeMem(0xecec, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6eb0, gbc.sp());
        EXPECT(0xecee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecec));
        EXPECT(0x13, gbc.readMem(0xeced));
        // CB 13 00B5
        gbc.setState(0x4531, 0xf6e5, 0x9ed0, 0xf799, 0x485, 0xcbd1, 0x1, 0x0);
        gbc.writeMem(0x4531, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf6e5, gbc.sp());
        EXPECT(0x4533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00B6
        gbc.setState(0x927b, 0x4249, 0x6a50, 0x9b83, 0xfd03, 0x10b1, 0x0, 0x1);
        gbc.writeMem(0x927b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4249, gbc.sp());
        EXPECT(0x927d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x927b));
        EXPECT(0x13, gbc.readMem(0x927c));
        // CB 13 00B7
        gbc.setState(0x5476, 0x3f15, 0xa420, 0xfaf0, 0xe03d, 0xa1f, 0x1, 0x0);
        gbc.writeMem(0x5476, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3f15, gbc.sp());
        EXPECT(0x5478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 00B8
        gbc.setState(0x1cf8, 0x684e, 0xa8f0, 0x738e, 0xb0d8, 0x824f, 0x0, 0x0);
        gbc.writeMem(0x1cf8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x684e, gbc.sp());
        EXPECT(0x1cfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00B9
        gbc.setState(0x4069, 0x3356, 0x7890, 0xbc9f, 0x5495, 0x47f1, 0x1, 0x1);
        gbc.writeMem(0x4069, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3356, gbc.sp());
        EXPECT(0x406b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00BA
        gbc.setState(0xad85, 0xf17, 0x4f30, 0x2e9b, 0xe230, 0x64d3, 0x1, 0x0);
        gbc.writeMem(0xad85, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf17, gbc.sp());
        EXPECT(0xad87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad85));
        EXPECT(0x13, gbc.readMem(0xad86));
        // CB 13 00BC
        gbc.setState(0x5678, 0x5b38, 0x7f90, 0xca02, 0xbe1c, 0xe452, 0x1, 0x1);
        gbc.writeMem(0x5678, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5b38, gbc.sp());
        EXPECT(0x567a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 00BD
        gbc.setState(0x7e1d, 0x119e, 0xd000, 0x7830, 0xef89, 0xaed5, 0x1, 0x1);
        gbc.writeMem(0x7e1d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x119e, gbc.sp());
        EXPECT(0x7e1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00BE
        gbc.setState(0xc3f4, 0xad02, 0x3da0, 0x41b6, 0xd568, 0x63bd, 0x1, 0x0);
        gbc.writeMem(0xc3f4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xad02, gbc.sp());
        EXPECT(0xc3f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3f4));
        EXPECT(0x13, gbc.readMem(0xc3f5));
        // CB 13 00BF
        gbc.setState(0xab57, 0x616f, 0x5090, 0xdcfb, 0x5c6c, 0x1490, 0x0, 0x1);
        gbc.writeMem(0xab57, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x616f, gbc.sp());
        EXPECT(0xab59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab57));
        EXPECT(0x13, gbc.readMem(0xab58));
        // CB 13 00C0
        gbc.setState(0x355b, 0x15a, 0x87f0, 0xdae1, 0xb297, 0xd261, 0x0, 0x0);
        gbc.writeMem(0x355b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x15a, gbc.sp());
        EXPECT(0x355d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00C1
        gbc.setState(0xbabb, 0x87c6, 0xd280, 0x9f4f, 0x1b6f, 0x773, 0x1, 0x1);
        gbc.writeMem(0xbabb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x87c6, gbc.sp());
        EXPECT(0xbabd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbabb));
        EXPECT(0x13, gbc.readMem(0xbabc));
        // CB 13 00C2
        gbc.setState(0xb153, 0xf089, 0xd3d0, 0xdcd6, 0x44f2, 0x76b7, 0x0, 0x1);
        gbc.writeMem(0xb153, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf089, gbc.sp());
        EXPECT(0xb155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb153));
        EXPECT(0x13, gbc.readMem(0xb154));
        // CB 13 00C3
        gbc.setState(0xce01, 0x8b25, 0x13b0, 0xfd27, 0x7a9e, 0xd491, 0x0, 0x0);
        gbc.writeMem(0xce01, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8b25, gbc.sp());
        EXPECT(0xce03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce01));
        EXPECT(0x13, gbc.readMem(0xce02));
        // CB 13 00C4
        gbc.setState(0x4014, 0xf4b6, 0x9540, 0x106f, 0xd4b8, 0x1f2b, 0x1, 0x0);
        gbc.writeMem(0x4014, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf4b6, gbc.sp());
        EXPECT(0x4016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00C5
        gbc.setState(0x118f, 0xde4e, 0xe850, 0x7ba4, 0x1a7a, 0x7555, 0x1, 0x0);
        gbc.writeMem(0x118f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xde4e, gbc.sp());
        EXPECT(0x1191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 00C6
        gbc.setState(0x5ba9, 0x6264, 0x7590, 0x6347, 0x51c8, 0x90a5, 0x0, 0x0);
        gbc.writeMem(0x5ba9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6264, gbc.sp());
        EXPECT(0x5bab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00C8
        gbc.setState(0xbbe7, 0xc148, 0x89e0, 0x3d53, 0x994b, 0xbb32, 0x1, 0x0);
        gbc.writeMem(0xbbe7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc148, gbc.sp());
        EXPECT(0xbbe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe7));
        EXPECT(0x13, gbc.readMem(0xbbe8));
        // CB 13 00C9
        gbc.setState(0x38de, 0x1f08, 0xdc60, 0x846c, 0x99d1, 0x8d52, 0x0, 0x1);
        gbc.writeMem(0x38de, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1f08, gbc.sp());
        EXPECT(0x38e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00CA
        gbc.setState(0xac40, 0x915f, 0x9290, 0x1a5a, 0xcf8a, 0x8bd2, 0x1, 0x0);
        gbc.writeMem(0xac40, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x915f, gbc.sp());
        EXPECT(0xac42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac40));
        EXPECT(0x13, gbc.readMem(0xac41));
        // CB 13 00CB
        gbc.setState(0x996, 0xb535, 0xd4a0, 0x41b5, 0x8284, 0xf3bb, 0x1, 0x0);
        gbc.writeMem(0x996, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb535, gbc.sp());
        EXPECT(0x998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00CC
        gbc.setState(0xccd8, 0xea3a, 0xa4e0, 0x82d9, 0x7bb6, 0xd60b, 0x0, 0x0);
        gbc.writeMem(0xccd8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xea3a, gbc.sp());
        EXPECT(0xccda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd8));
        EXPECT(0x13, gbc.readMem(0xccd9));
        // CB 13 00CD
        gbc.setState(0x70f1, 0x7d32, 0x2810, 0xbbf4, 0xa839, 0x5400, 0x0, 0x0);
        gbc.writeMem(0x70f1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7d32, gbc.sp());
        EXPECT(0x70f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 00CE
        gbc.setState(0x5951, 0xc8b6, 0x510, 0x2971, 0xf7d5, 0x27cd, 0x0, 0x0);
        gbc.writeMem(0x5951, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc8b6, gbc.sp());
        EXPECT(0x5953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00CF
        gbc.setState(0xb, 0x44f6, 0xdbd0, 0x2a6e, 0xfd25, 0xdc65, 0x1, 0x1);
        gbc.writeMem(0xb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x44f6, gbc.sp());
        EXPECT(0xd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 00D0
        gbc.setState(0x1b7d, 0x9e51, 0xc380, 0x56bc, 0x4570, 0xddc5, 0x0, 0x0);
        gbc.writeMem(0x1b7d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9e51, gbc.sp());
        EXPECT(0x1b7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 00D1
        gbc.setState(0xcd0f, 0x93d1, 0x2680, 0x971f, 0xb47d, 0xbf4c, 0x0, 0x0);
        gbc.writeMem(0xcd0f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x93d1, gbc.sp());
        EXPECT(0xcd11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd0f));
        EXPECT(0x13, gbc.readMem(0xcd10));
        // CB 13 00D2
        gbc.setState(0xae49, 0x7707, 0xd2d0, 0x2be8, 0xe1d7, 0xa951, 0x1, 0x0);
        gbc.writeMem(0xae49, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7707, gbc.sp());
        EXPECT(0xae4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae49));
        EXPECT(0x13, gbc.readMem(0xae4a));
        // CB 13 00D3
        gbc.setState(0xdaa2, 0xd287, 0x1530, 0xc0e5, 0xecc5, 0x6c7, 0x0, 0x0);
        gbc.writeMem(0xdaa2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd287, gbc.sp());
        EXPECT(0xdaa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaa2));
        EXPECT(0x13, gbc.readMem(0xdaa3));
        // CB 13 00D4
        gbc.setState(0xdea1, 0x4199, 0x94e0, 0x87be, 0xa0e5, 0xe12e, 0x1, 0x1);
        gbc.writeMem(0xdea1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4199, gbc.sp());
        EXPECT(0xdea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea1));
        EXPECT(0x13, gbc.readMem(0xdea2));
        // CB 13 00D5
        gbc.setState(0xbd41, 0x1e2c, 0xc830, 0x91c0, 0x549e, 0xc233, 0x0, 0x0);
        gbc.writeMem(0xbd41, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1e2c, gbc.sp());
        EXPECT(0xbd43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd41));
        EXPECT(0x13, gbc.readMem(0xbd42));
        // CB 13 00D6
        gbc.setState(0x4c2d, 0xa839, 0x4240, 0x16e3, 0x8060, 0x7a01, 0x1, 0x0);
        gbc.writeMem(0x4c2d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa839, gbc.sp());
        EXPECT(0x4c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 00D7
        gbc.setState(0x56dc, 0xd66d, 0x8910, 0xf515, 0x4aa1, 0x4b8d, 0x0, 0x1);
        gbc.writeMem(0x56dc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd66d, gbc.sp());
        EXPECT(0x56de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00D8
        gbc.setState(0x6f85, 0x39bf, 0x3980, 0x3382, 0xdc39, 0xd23b, 0x1, 0x1);
        gbc.writeMem(0x6f85, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x39bf, gbc.sp());
        EXPECT(0x6f87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 00DA
        gbc.setState(0x326d, 0xda53, 0xcf20, 0x81bc, 0x8e96, 0xb0ef, 0x0, 0x0);
        gbc.writeMem(0x326d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xda53, gbc.sp());
        EXPECT(0x326f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00DB
        gbc.setState(0x1547, 0x7a03, 0x7e90, 0xe976, 0x2cd0, 0xe3e5, 0x0, 0x1);
        gbc.writeMem(0x1547, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7a03, gbc.sp());
        EXPECT(0x1549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00DC
        gbc.setState(0xdbd4, 0xbc42, 0xef70, 0x2815, 0xda25, 0x9813, 0x0, 0x0);
        gbc.writeMem(0xdbd4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbc42, gbc.sp());
        EXPECT(0xdbd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbd4));
        EXPECT(0x13, gbc.readMem(0xdbd5));
        // CB 13 00DD
        gbc.setState(0x80bc, 0x820e, 0x1780, 0xb8a4, 0x9830, 0x7508, 0x0, 0x1);
        gbc.writeMem(0x80bc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x820e, gbc.sp());
        EXPECT(0x80be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80bc));
        EXPECT(0x13, gbc.readMem(0x80bd));
        // CB 13 00DE
        gbc.setState(0x991b, 0xc65b, 0x3de0, 0xe906, 0xacfe, 0xa3db, 0x1, 0x1);
        gbc.writeMem(0x991b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc65b, gbc.sp());
        EXPECT(0x991d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x991b));
        EXPECT(0x13, gbc.readMem(0x991c));
        // CB 13 00DF
        gbc.setState(0x285e, 0xcd20, 0x38a0, 0xd706, 0xc3d3, 0x5f50, 0x1, 0x0);
        gbc.writeMem(0x285e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xcd20, gbc.sp());
        EXPECT(0x2860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00E0
        gbc.setState(0x7bc4, 0xfbe9, 0x53a0, 0x4b3, 0x9cb8, 0x1912, 0x0, 0x0);
        gbc.writeMem(0x7bc4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xfbe9, gbc.sp());
        EXPECT(0x7bc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00E1
        gbc.setState(0xebcd, 0xbe5d, 0x4600, 0x964a, 0xddca, 0x496, 0x1, 0x1);
        gbc.writeMem(0xebcd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbe5d, gbc.sp());
        EXPECT(0xebcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebcd));
        EXPECT(0x13, gbc.readMem(0xebce));
        // CB 13 00E2
        gbc.setState(0xe793, 0x5c8f, 0xc120, 0x597f, 0x7254, 0x163b, 0x0, 0x1);
        gbc.writeMem(0xe793, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5c8f, gbc.sp());
        EXPECT(0xe795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe793));
        EXPECT(0x13, gbc.readMem(0xe794));
        // CB 13 00E3
        gbc.setState(0xb85a, 0x9f73, 0x60f0, 0x90d2, 0xac94, 0xd3b4, 0x1, 0x0);
        gbc.writeMem(0xb85a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9f73, gbc.sp());
        EXPECT(0xb85c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb85a));
        EXPECT(0x13, gbc.readMem(0xb85b));
        // CB 13 00E4
        gbc.setState(0xe0ec, 0xcce7, 0x3590, 0xdf3d, 0x5287, 0x22e4, 0x1, 0x1);
        gbc.writeMem(0xe0ec, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcce7, gbc.sp());
        EXPECT(0xe0ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ec));
        EXPECT(0x13, gbc.readMem(0xe0ed));
        // CB 13 00E6
        gbc.setState(0xdf7, 0xed49, 0xa8c0, 0xf8a3, 0xc4ce, 0x9f62, 0x1, 0x1);
        gbc.writeMem(0xdf7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xed49, gbc.sp());
        EXPECT(0xdf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00E7
        gbc.setState(0x4b70, 0x1cd1, 0x45d0, 0x812d, 0xe572, 0x51f5, 0x1, 0x1);
        gbc.writeMem(0x4b70, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1cd1, gbc.sp());
        EXPECT(0x4b72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 00E8
        gbc.setState(0xd921, 0x7ca8, 0xcdb0, 0x5eb7, 0x70b1, 0x1ec4, 0x0, 0x0);
        gbc.writeMem(0xd921, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7ca8, gbc.sp());
        EXPECT(0xd923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd921));
        EXPECT(0x13, gbc.readMem(0xd922));
        // CB 13 00E9
        gbc.setState(0x3b36, 0x4bc2, 0x8260, 0x89fd, 0x7579, 0xc2d9, 0x0, 0x0);
        gbc.writeMem(0x3b36, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4bc2, gbc.sp());
        EXPECT(0x3b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 00EA
        gbc.setState(0x76fa, 0x9b71, 0x9a10, 0xa124, 0xa622, 0x7341, 0x1, 0x0);
        gbc.writeMem(0x76fa, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9b71, gbc.sp());
        EXPECT(0x76fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 00EB
        gbc.setState(0xb861, 0x953, 0x8710, 0x6a27, 0xa728, 0x4ca3, 0x1, 0x0);
        gbc.writeMem(0xb861, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x953, gbc.sp());
        EXPECT(0xb863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb861));
        EXPECT(0x13, gbc.readMem(0xb862));
        // CB 13 00EC
        gbc.setState(0x73d3, 0xd95f, 0xf860, 0xdcdd, 0xc77c, 0xb229, 0x1, 0x1);
        gbc.writeMem(0x73d3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd95f, gbc.sp());
        EXPECT(0x73d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 00ED
        gbc.setState(0xb88c, 0x4871, 0xb520, 0x5771, 0x4353, 0x35e4, 0x1, 0x1);
        gbc.writeMem(0xb88c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4871, gbc.sp());
        EXPECT(0xb88e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb88c));
        EXPECT(0x13, gbc.readMem(0xb88d));
        // CB 13 00EE
        gbc.setState(0x34c0, 0x3da0, 0x8ef0, 0xe4ec, 0xbfbb, 0xb162, 0x0, 0x0);
        gbc.writeMem(0x34c0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3da0, gbc.sp());
        EXPECT(0x34c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00EF
        gbc.setState(0x1438, 0x4b15, 0xd60, 0x6b25, 0xe2a4, 0xa96b, 0x0, 0x0);
        gbc.writeMem(0x1438, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4b15, gbc.sp());
        EXPECT(0x143a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00F0
        gbc.setState(0x8cb3, 0xb46a, 0x60d0, 0xea87, 0x47ad, 0x6c43, 0x1, 0x1);
        gbc.writeMem(0x8cb3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb46a, gbc.sp());
        EXPECT(0x8cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cb3));
        EXPECT(0x13, gbc.readMem(0x8cb4));
        // CB 13 00F1
        gbc.setState(0xb49b, 0x7e40, 0xeca0, 0xd423, 0x1b33, 0x16c1, 0x1, 0x0);
        gbc.writeMem(0xb49b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7e40, gbc.sp());
        EXPECT(0xb49d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb49b));
        EXPECT(0x13, gbc.readMem(0xb49c));
        // CB 13 00F2
        gbc.setState(0x91be, 0x9a0a, 0xa320, 0x5a61, 0x6dbc, 0x21d9, 0x1, 0x1);
        gbc.writeMem(0x91be, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9a0a, gbc.sp());
        EXPECT(0x91c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91be));
        EXPECT(0x13, gbc.readMem(0x91bf));
        // CB 13 00F3
        gbc.setState(0x21cd, 0xdaf6, 0x2ac0, 0x9953, 0x1865, 0xfa49, 0x1, 0x0);
        gbc.writeMem(0x21cd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xdaf6, gbc.sp());
        EXPECT(0x21cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 00F4
        gbc.setState(0xecd0, 0x56c1, 0xb9d0, 0x24ca, 0x1aa7, 0x1415, 0x1, 0x0);
        gbc.writeMem(0xecd0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x56c1, gbc.sp());
        EXPECT(0xecd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecd0));
        EXPECT(0x13, gbc.readMem(0xecd1));
        // CB 13 00F5
        gbc.setState(0x7718, 0xefd0, 0xc170, 0x495d, 0xacf2, 0x2b77, 0x1, 0x0);
        gbc.writeMem(0x7718, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xefd0, gbc.sp());
        EXPECT(0x771a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00F6
        gbc.setState(0x10a, 0xdc8b, 0xfee0, 0x462, 0x7dc9, 0x8c83, 0x1, 0x0);
        gbc.writeMem(0x10a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdc8b, gbc.sp());
        EXPECT(0x10c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00F7
        gbc.setState(0x475b, 0x3030, 0x380, 0x7b7b, 0x9d6a, 0x3802, 0x0, 0x1);
        gbc.writeMem(0x475b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3030, gbc.sp());
        EXPECT(0x475d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 00F8
        gbc.setState(0x1dc7, 0x3ca1, 0xc740, 0xb81b, 0xffd1, 0x4c51, 0x1, 0x1);
        gbc.writeMem(0x1dc7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3ca1, gbc.sp());
        EXPECT(0x1dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00F9
        gbc.setState(0x11f7, 0xea5f, 0xf2c0, 0xda3, 0x3ceb, 0x66f1, 0x0, 0x1);
        gbc.writeMem(0x11f7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xea5f, gbc.sp());
        EXPECT(0x11f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00FA
        gbc.setState(0x9599, 0xe23, 0x5670, 0x7e0, 0xceb8, 0x1aa9, 0x1, 0x1);
        gbc.writeMem(0x9599, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe23, gbc.sp());
        EXPECT(0x959b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9599));
        EXPECT(0x13, gbc.readMem(0x959a));
        // CB 13 00FB
        gbc.setState(0xa7c, 0x1bb4, 0x2a0, 0x351c, 0xdfbd, 0x79bd, 0x0, 0x0);
        gbc.writeMem(0xa7c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1bb4, gbc.sp());
        EXPECT(0xa7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 00FC
        gbc.setState(0xde03, 0x11a0, 0xef20, 0x427c, 0x3d8b, 0x83c1, 0x0, 0x0);
        gbc.writeMem(0xde03, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x11a0, gbc.sp());
        EXPECT(0xde05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde03));
        EXPECT(0x13, gbc.readMem(0xde04));
        // CB 13 00FD
        gbc.setState(0x83b3, 0x746, 0x5130, 0x7d74, 0xfd4d, 0x8ac6, 0x0, 0x1);
        gbc.writeMem(0x83b3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x746, gbc.sp());
        EXPECT(0x83b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83b3));
        EXPECT(0x13, gbc.readMem(0x83b4));
        // CB 13 00FF
        gbc.setState(0x1302, 0xcb46, 0xda20, 0xb608, 0x931, 0x680c, 0x1, 0x0);
        gbc.writeMem(0x1302, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xcb46, gbc.sp());
        EXPECT(0x1304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0100
        gbc.setState(0x4dd9, 0xac6d, 0x3ae0, 0xe8b9, 0x91ef, 0xddd8, 0x0, 0x0);
        gbc.writeMem(0x4dd9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xac6d, gbc.sp());
        EXPECT(0x4ddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0101
        gbc.setState(0x1e9d, 0x76ee, 0x4180, 0x7f06, 0x434, 0x2c34, 0x0, 0x1);
        gbc.writeMem(0x1e9d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x76ee, gbc.sp());
        EXPECT(0x1e9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0102
        gbc.setState(0x5cf5, 0x96da, 0x2fe0, 0x195f, 0x50f2, 0xb538, 0x0, 0x0);
        gbc.writeMem(0x5cf5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x96da, gbc.sp());
        EXPECT(0x5cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0103
        gbc.setState(0x5c72, 0x410b, 0x6470, 0x33c6, 0x2e73, 0x68bd, 0x0, 0x1);
        gbc.writeMem(0x5c72, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x410b, gbc.sp());
        EXPECT(0x5c74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0105
        gbc.setState(0x254b, 0xe0e1, 0x1280, 0x6dea, 0xa0e2, 0x787c, 0x0, 0x0);
        gbc.writeMem(0x254b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe0e1, gbc.sp());
        EXPECT(0x254d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0106
        gbc.setState(0xae99, 0xc1bc, 0x4b70, 0x8bc8, 0x7787, 0x92bb, 0x1, 0x1);
        gbc.writeMem(0xae99, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc1bc, gbc.sp());
        EXPECT(0xae9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae99));
        EXPECT(0x13, gbc.readMem(0xae9a));
        // CB 13 0107
        gbc.setState(0xe26e, 0xe1ca, 0x1de0, 0xb4f9, 0xd145, 0xab4b, 0x1, 0x0);
        gbc.writeMem(0xe26e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe1ca, gbc.sp());
        EXPECT(0xe270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe26e));
        EXPECT(0x13, gbc.readMem(0xe26f));
        // CB 13 0108
        gbc.setState(0x8393, 0x1e4e, 0x7340, 0x4947, 0xb467, 0xbd42, 0x0, 0x0);
        gbc.writeMem(0x8393, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1e4e, gbc.sp());
        EXPECT(0x8395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8393));
        EXPECT(0x13, gbc.readMem(0x8394));
        // CB 13 010A
        gbc.setState(0xa749, 0xf34b, 0x9e30, 0x70cd, 0xc1cb, 0xe849, 0x1, 0x0);
        gbc.writeMem(0xa749, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf34b, gbc.sp());
        EXPECT(0xa74b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa749));
        EXPECT(0x13, gbc.readMem(0xa74a));
        // CB 13 010B
        gbc.setState(0xc5c, 0xb638, 0x79c0, 0x91b6, 0x4888, 0xb66, 0x1, 0x1);
        gbc.writeMem(0xc5c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb638, gbc.sp());
        EXPECT(0xc5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 010C
        gbc.setState(0xe4fc, 0x63a5, 0x5270, 0xe1dc, 0x2218, 0x2794, 0x0, 0x1);
        gbc.writeMem(0xe4fc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x63a5, gbc.sp());
        EXPECT(0xe4fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4fc));
        EXPECT(0x13, gbc.readMem(0xe4fd));
        // CB 13 010D
        gbc.setState(0x1971, 0x49c9, 0x3a40, 0x6421, 0x5151, 0xea0a, 0x1, 0x1);
        gbc.writeMem(0x1971, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x49c9, gbc.sp());
        EXPECT(0x1973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 010E
        gbc.setState(0x1801, 0x1197, 0x64a0, 0x9ef3, 0x414b, 0xe952, 0x0, 0x1);
        gbc.writeMem(0x1801, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1197, gbc.sp());
        EXPECT(0x1803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 010F
        gbc.setState(0x8f5e, 0x1099, 0x9f30, 0xebff, 0x754b, 0x1018, 0x1, 0x0);
        gbc.writeMem(0x8f5e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1099, gbc.sp());
        EXPECT(0x8f60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f5e));
        EXPECT(0x13, gbc.readMem(0x8f5f));
        // CB 13 0110
        gbc.setState(0x4538, 0x4e04, 0x6bc0, 0xda95, 0x88b, 0xab83, 0x0, 0x1);
        gbc.writeMem(0x4538, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4e04, gbc.sp());
        EXPECT(0x453a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0111
        gbc.setState(0xa730, 0x9f2f, 0x2ac0, 0xf033, 0xf40e, 0x99ca, 0x0, 0x0);
        gbc.writeMem(0xa730, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9f2f, gbc.sp());
        EXPECT(0xa732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa730));
        EXPECT(0x13, gbc.readMem(0xa731));
        // CB 13 0112
        gbc.setState(0x6d70, 0xa016, 0xba80, 0x1cac, 0x5bc, 0x844a, 0x1, 0x1);
        gbc.writeMem(0x6d70, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa016, gbc.sp());
        EXPECT(0x6d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0113
        gbc.setState(0x15ef, 0x1ed8, 0x63d0, 0x22a6, 0x6d7, 0xf05f, 0x0, 0x1);
        gbc.writeMem(0x15ef, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1ed8, gbc.sp());
        EXPECT(0x15f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0114
        gbc.setState(0x8c2a, 0xbe48, 0x54e0, 0x1ed2, 0x6375, 0x9f9f, 0x0, 0x0);
        gbc.writeMem(0x8c2a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbe48, gbc.sp());
        EXPECT(0x8c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c2a));
        EXPECT(0x13, gbc.readMem(0x8c2b));
        // CB 13 0115
        gbc.setState(0x4e54, 0x1fb2, 0x5c00, 0x4d76, 0x74d6, 0xd90f, 0x0, 0x0);
        gbc.writeMem(0x4e54, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1fb2, gbc.sp());
        EXPECT(0x4e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0116
        gbc.setState(0x9e9f, 0xe783, 0x5130, 0xdab3, 0x1ddc, 0x55cb, 0x1, 0x0);
        gbc.writeMem(0x9e9f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe783, gbc.sp());
        EXPECT(0x9ea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e9f));
        EXPECT(0x13, gbc.readMem(0x9ea0));
        // CB 13 0117
        gbc.setState(0x9b1, 0xb73f, 0x4720, 0xdf13, 0x375f, 0x932e, 0x0, 0x1);
        gbc.writeMem(0x9b1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb73f, gbc.sp());
        EXPECT(0x9b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0118
        gbc.setState(0x2aea, 0xcee3, 0x3430, 0x1fc5, 0x7516, 0xa1bb, 0x1, 0x0);
        gbc.writeMem(0x2aea, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcee3, gbc.sp());
        EXPECT(0x2aec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0119
        gbc.setState(0x3e76, 0x751a, 0x50f0, 0x5a56, 0x7ed7, 0x3524, 0x0, 0x1);
        gbc.writeMem(0x3e76, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x751a, gbc.sp());
        EXPECT(0x3e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 011A
        gbc.setState(0x3cf2, 0x6d91, 0x7480, 0x29da, 0x1b3e, 0x2caf, 0x0, 0x1);
        gbc.writeMem(0x3cf2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6d91, gbc.sp());
        EXPECT(0x3cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 011B
        gbc.setState(0x54c0, 0xd1b2, 0xf8f0, 0x6352, 0x2f7b, 0x98bb, 0x1, 0x1);
        gbc.writeMem(0x54c0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd1b2, gbc.sp());
        EXPECT(0x54c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 011C
        gbc.setState(0x82c3, 0x9367, 0x1390, 0x1f2c, 0x44bf, 0xcc8e, 0x0, 0x0);
        gbc.writeMem(0x82c3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9367, gbc.sp());
        EXPECT(0x82c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82c3));
        EXPECT(0x13, gbc.readMem(0x82c4));
        // CB 13 011D
        gbc.setState(0xc81d, 0xc96, 0xda50, 0xad20, 0x3d9c, 0x2f5d, 0x0, 0x1);
        gbc.writeMem(0xc81d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc96, gbc.sp());
        EXPECT(0xc81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc81d));
        EXPECT(0x13, gbc.readMem(0xc81e));
        // CB 13 011E
        gbc.setState(0xc550, 0x2875, 0xee00, 0xdbe2, 0x1ead, 0xec5, 0x0, 0x0);
        gbc.writeMem(0xc550, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2875, gbc.sp());
        EXPECT(0xc552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc550));
        EXPECT(0x13, gbc.readMem(0xc551));
        // CB 13 0120
        gbc.setState(0x9d54, 0x5335, 0x1570, 0x2ab2, 0x765c, 0xdc7a, 0x0, 0x1);
        gbc.writeMem(0x9d54, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5335, gbc.sp());
        EXPECT(0x9d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d54));
        EXPECT(0x13, gbc.readMem(0x9d55));
        // CB 13 0121
        gbc.setState(0x4775, 0xc5ef, 0x49a0, 0xaa4b, 0x7630, 0x1b97, 0x0, 0x1);
        gbc.writeMem(0x4775, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc5ef, gbc.sp());
        EXPECT(0x4777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0122
        gbc.setState(0x5f87, 0x3d5a, 0x43e0, 0xa50d, 0x433a, 0xf17f, 0x1, 0x1);
        gbc.writeMem(0x5f87, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3d5a, gbc.sp());
        EXPECT(0x5f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0123
        gbc.setState(0x3a5c, 0x729b, 0xa090, 0x2467, 0x11bf, 0x497c, 0x1, 0x0);
        gbc.writeMem(0x3a5c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x729b, gbc.sp());
        EXPECT(0x3a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0124
        gbc.setState(0x36d1, 0xc829, 0xe170, 0x3023, 0x4156, 0x1891, 0x0, 0x0);
        gbc.writeMem(0x36d1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc829, gbc.sp());
        EXPECT(0x36d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0125
        gbc.setState(0x8d80, 0xd0df, 0x3db0, 0xa537, 0x68bd, 0xaefd, 0x1, 0x1);
        gbc.writeMem(0x8d80, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd0df, gbc.sp());
        EXPECT(0x8d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d80));
        EXPECT(0x13, gbc.readMem(0x8d81));
        // CB 13 0126
        gbc.setState(0x22b6, 0xe216, 0x1b90, 0x400, 0x4c6e, 0xf413, 0x0, 0x0);
        gbc.writeMem(0x22b6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe216, gbc.sp());
        EXPECT(0x22b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0127
        gbc.setState(0xaa6b, 0x6cdc, 0xd630, 0x8ade, 0x31da, 0xad01, 0x1, 0x0);
        gbc.writeMem(0xaa6b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6cdc, gbc.sp());
        EXPECT(0xaa6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa6b));
        EXPECT(0x13, gbc.readMem(0xaa6c));
        // CB 13 0128
        gbc.setState(0xe868, 0x4139, 0x2300, 0x5b7a, 0x1bdf, 0x2664, 0x0, 0x0);
        gbc.writeMem(0xe868, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4139, gbc.sp());
        EXPECT(0xe86a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe868));
        EXPECT(0x13, gbc.readMem(0xe869));
        // CB 13 0129
        gbc.setState(0xe685, 0xe1b0, 0x1540, 0x6eb9, 0x22dc, 0xb161, 0x0, 0x1);
        gbc.writeMem(0xe685, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe1b0, gbc.sp());
        EXPECT(0xe687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe685));
        EXPECT(0x13, gbc.readMem(0xe686));
        // CB 13 012A
        gbc.setState(0x81b8, 0xdd20, 0xc90, 0x8c9b, 0xc432, 0xb55d, 0x1, 0x1);
        gbc.writeMem(0x81b8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdd20, gbc.sp());
        EXPECT(0x81ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81b8));
        EXPECT(0x13, gbc.readMem(0x81b9));
        // CB 13 012B
        gbc.setState(0x430d, 0xbb6a, 0x1830, 0xb10, 0xd9ac, 0x92b9, 0x0, 0x0);
        gbc.writeMem(0x430d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbb6a, gbc.sp());
        EXPECT(0x430f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 012C
        gbc.setState(0x98f9, 0x1756, 0x730, 0x1c96, 0x5219, 0xf041, 0x1, 0x1);
        gbc.writeMem(0x98f9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1756, gbc.sp());
        EXPECT(0x98fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f9));
        EXPECT(0x13, gbc.readMem(0x98fa));
        // CB 13 012D
        gbc.setState(0xb93c, 0xf47f, 0x5c70, 0x8363, 0x9e88, 0x945a, 0x1, 0x1);
        gbc.writeMem(0xb93c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf47f, gbc.sp());
        EXPECT(0xb93e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb93c));
        EXPECT(0x13, gbc.readMem(0xb93d));
        // CB 13 012E
        gbc.setState(0xb193, 0x8ced, 0xcaa0, 0x76b7, 0x944e, 0x412d, 0x0, 0x0);
        gbc.writeMem(0xb193, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8ced, gbc.sp());
        EXPECT(0xb195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb193));
        EXPECT(0x13, gbc.readMem(0xb194));
        // CB 13 012F
        gbc.setState(0x98e0, 0x5e38, 0x5680, 0x52f5, 0xec19, 0xe83f, 0x0, 0x0);
        gbc.writeMem(0x98e0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5e38, gbc.sp());
        EXPECT(0x98e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e0));
        EXPECT(0x13, gbc.readMem(0x98e1));
        // CB 13 0130
        gbc.setState(0x258, 0xe9b0, 0x8c50, 0xbce8, 0xcdfb, 0x754a, 0x0, 0x0);
        gbc.writeMem(0x258, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe9b0, gbc.sp());
        EXPECT(0x25a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0131
        gbc.setState(0xa37, 0xa5a, 0x8120, 0x98d9, 0x83df, 0x46ae, 0x1, 0x0);
        gbc.writeMem(0xa37, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa5a, gbc.sp());
        EXPECT(0xa39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0132
        gbc.setState(0x86f2, 0xbc1a, 0x8c20, 0xd739, 0x848a, 0x1567, 0x0, 0x0);
        gbc.writeMem(0x86f2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbc1a, gbc.sp());
        EXPECT(0x86f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f2));
        EXPECT(0x13, gbc.readMem(0x86f3));
        // CB 13 0133
        gbc.setState(0x10fb, 0x4b0a, 0x3980, 0x6352, 0xf485, 0xbf9, 0x1, 0x0);
        gbc.writeMem(0x10fb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4b0a, gbc.sp());
        EXPECT(0x10fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0134
        gbc.setState(0x409f, 0xc2d6, 0x880, 0x14f, 0x36f7, 0x35ba, 0x0, 0x1);
        gbc.writeMem(0x409f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc2d6, gbc.sp());
        EXPECT(0x40a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0135
        gbc.setState(0x67fc, 0xcd87, 0x6360, 0x2597, 0x441, 0x5aff, 0x0, 0x0);
        gbc.writeMem(0x67fc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xcd87, gbc.sp());
        EXPECT(0x67fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0136
        gbc.setState(0x6780, 0xb4ac, 0x3cc0, 0xe9ab, 0xb137, 0xd136, 0x0, 0x1);
        gbc.writeMem(0x6780, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb4ac, gbc.sp());
        EXPECT(0x6782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0137
        gbc.setState(0x37af, 0x86c2, 0xb640, 0x4cf4, 0x4fb1, 0xa374, 0x0, 0x0);
        gbc.writeMem(0x37af, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x86c2, gbc.sp());
        EXPECT(0x37b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0138
        gbc.setState(0x660c, 0xcb0f, 0x5330, 0x9dae, 0xf6f5, 0x6c5e, 0x1, 0x0);
        gbc.writeMem(0x660c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcb0f, gbc.sp());
        EXPECT(0x660e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0139
        gbc.setState(0xef5e, 0xaa95, 0x8e70, 0x3175, 0x81d1, 0x81c6, 0x0, 0x1);
        gbc.writeMem(0xef5e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xaa95, gbc.sp());
        EXPECT(0xef60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef5e));
        EXPECT(0x13, gbc.readMem(0xef5f));
        // CB 13 013A
        gbc.setState(0x4092, 0xd7c2, 0x3390, 0xd8f1, 0xd934, 0xc70d, 0x0, 0x0);
        gbc.writeMem(0x4092, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd7c2, gbc.sp());
        EXPECT(0x4094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 013B
        gbc.setState(0x5f6a, 0x5adf, 0xf0c0, 0x78c4, 0xe57f, 0xeafb, 0x0, 0x0);
        gbc.writeMem(0x5f6a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5adf, gbc.sp());
        EXPECT(0x5f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 013C
        gbc.setState(0x3c74, 0x4de8, 0x6cf0, 0x4560, 0x1cd2, 0xf08c, 0x0, 0x1);
        gbc.writeMem(0x3c74, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4de8, gbc.sp());
        EXPECT(0x3c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 013D
        gbc.setState(0x645c, 0x5138, 0x2df0, 0x54f7, 0x9381, 0x63d9, 0x0, 0x1);
        gbc.writeMem(0x645c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5138, gbc.sp());
        EXPECT(0x645e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 013E
        gbc.setState(0xe5ac, 0xf972, 0xe360, 0x84d7, 0xb6db, 0x8604, 0x0, 0x1);
        gbc.writeMem(0xe5ac, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf972, gbc.sp());
        EXPECT(0xe5ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ac));
        EXPECT(0x13, gbc.readMem(0xe5ad));
        // CB 13 013F
        gbc.setState(0x3c3, 0x2540, 0x17e0, 0x92cc, 0x1980, 0xcd6b, 0x1, 0x0);
        gbc.writeMem(0x3c3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2540, gbc.sp());
        EXPECT(0x3c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0140
        gbc.setState(0x9d41, 0xdccb, 0x7ff0, 0xd281, 0x5b71, 0xf53d, 0x1, 0x1);
        gbc.writeMem(0x9d41, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdccb, gbc.sp());
        EXPECT(0x9d43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d41));
        EXPECT(0x13, gbc.readMem(0x9d42));
        // CB 13 0141
        gbc.setState(0xa463, 0x4241, 0x99a0, 0xe7ee, 0xd980, 0x25b5, 0x0, 0x0);
        gbc.writeMem(0xa463, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4241, gbc.sp());
        EXPECT(0xa465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa463));
        EXPECT(0x13, gbc.readMem(0xa464));
        // CB 13 0142
        gbc.setState(0xdabc, 0x6373, 0xbd00, 0xf92f, 0x61c, 0x353, 0x0, 0x1);
        gbc.writeMem(0xdabc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6373, gbc.sp());
        EXPECT(0xdabe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdabc));
        EXPECT(0x13, gbc.readMem(0xdabd));
        // CB 13 0143
        gbc.setState(0x1ffc, 0xffc7, 0x71c0, 0xd616, 0x5d9b, 0xbbf9, 0x1, 0x1);
        gbc.writeMem(0x1ffc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xffc7, gbc.sp());
        EXPECT(0x1ffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0144
        gbc.setState(0xa30f, 0xf4cb, 0xfd0, 0xd245, 0xe55f, 0xd91, 0x0, 0x0);
        gbc.writeMem(0xa30f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf4cb, gbc.sp());
        EXPECT(0xa311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa30f));
        EXPECT(0x13, gbc.readMem(0xa310));
        // CB 13 0145
        gbc.setState(0xce7, 0xf097, 0x3de0, 0x3419, 0x5d3c, 0xef8f, 0x1, 0x0);
        gbc.writeMem(0xce7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf097, gbc.sp());
        EXPECT(0xce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0146
        gbc.setState(0x1cc8, 0x2f62, 0x64b0, 0x7ed4, 0xe227, 0xed8b, 0x0, 0x1);
        gbc.writeMem(0x1cc8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2f62, gbc.sp());
        EXPECT(0x1cca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0147
        gbc.setState(0x501f, 0x8abf, 0xd080, 0xc767, 0x1be1, 0xcebf, 0x1, 0x0);
        gbc.writeMem(0x501f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8abf, gbc.sp());
        EXPECT(0x5021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0148
        gbc.setState(0xb61a, 0x2528, 0xf740, 0x9f90, 0x5353, 0xdeca, 0x1, 0x0);
        gbc.writeMem(0xb61a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2528, gbc.sp());
        EXPECT(0xb61c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb61a));
        EXPECT(0x13, gbc.readMem(0xb61b));
        // CB 13 0149
        gbc.setState(0x71b6, 0xf09e, 0xbe20, 0xdd28, 0xff40, 0x2c6e, 0x1, 0x0);
        gbc.writeMem(0x71b6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf09e, gbc.sp());
        EXPECT(0x71b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 014A
        gbc.setState(0x5a68, 0xb148, 0xcd00, 0x132a, 0x32f, 0xa04b, 0x0, 0x0);
        gbc.writeMem(0x5a68, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb148, gbc.sp());
        EXPECT(0x5a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 014B
        gbc.setState(0xa393, 0x1084, 0x6cf0, 0x5e6d, 0x2823, 0x5ac5, 0x1, 0x1);
        gbc.writeMem(0xa393, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1084, gbc.sp());
        EXPECT(0xa395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa393));
        EXPECT(0x13, gbc.readMem(0xa394));
        // CB 13 014C
        gbc.setState(0x27f0, 0x4888, 0x3770, 0x4d4d, 0xe3ef, 0xc315, 0x1, 0x0);
        gbc.writeMem(0x27f0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4888, gbc.sp());
        EXPECT(0x27f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 014D
        gbc.setState(0x6bed, 0x233e, 0x8cb0, 0x2d5f, 0xde1e, 0x9d26, 0x1, 0x1);
        gbc.writeMem(0x6bed, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x233e, gbc.sp());
        EXPECT(0x6bef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 014E
        gbc.setState(0x61d, 0xc3ad, 0x20, 0x97d9, 0xcf3e, 0xdec, 0x0, 0x1);
        gbc.writeMem(0x61d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc3ad, gbc.sp());
        EXPECT(0x61f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 014F
        gbc.setState(0x12bd, 0xb048, 0x6fb0, 0xcf16, 0x9de, 0xcd08, 0x0, 0x0);
        gbc.writeMem(0x12bd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb048, gbc.sp());
        EXPECT(0x12bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0150
        gbc.setState(0xc726, 0xce94, 0xc5a0, 0x33e9, 0xc985, 0x1716, 0x0, 0x0);
        gbc.writeMem(0xc726, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xce94, gbc.sp());
        EXPECT(0xc728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc726));
        EXPECT(0x13, gbc.readMem(0xc727));
        // CB 13 0151
        gbc.setState(0xece6, 0xd4a2, 0x620, 0xc408, 0x23a3, 0x3bca, 0x1, 0x1);
        gbc.writeMem(0xece6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd4a2, gbc.sp());
        EXPECT(0xece8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xece6));
        EXPECT(0x13, gbc.readMem(0xece7));
        // CB 13 0152
        gbc.setState(0xb7d6, 0x97b5, 0x2fa0, 0xc669, 0xf55a, 0xbe0a, 0x0, 0x1);
        gbc.writeMem(0xb7d6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x97b5, gbc.sp());
        EXPECT(0xb7d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d6));
        EXPECT(0x13, gbc.readMem(0xb7d7));
        // CB 13 0153
        gbc.setState(0xa064, 0xae6f, 0x55c0, 0x1d4, 0x3457, 0x2c18, 0x0, 0x0);
        gbc.writeMem(0xa064, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xae6f, gbc.sp());
        EXPECT(0xa066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa064));
        EXPECT(0x13, gbc.readMem(0xa065));
        // CB 13 0154
        gbc.setState(0xd7be, 0x2e73, 0xce70, 0x5326, 0x2639, 0x8c43, 0x0, 0x0);
        gbc.writeMem(0xd7be, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2e73, gbc.sp());
        EXPECT(0xd7c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7be));
        EXPECT(0x13, gbc.readMem(0xd7bf));
        // CB 13 0155
        gbc.setState(0x8d77, 0x63d7, 0xd7d0, 0x3186, 0x1f4f, 0x3383, 0x1, 0x1);
        gbc.writeMem(0x8d77, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x63d7, gbc.sp());
        EXPECT(0x8d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d77));
        EXPECT(0x13, gbc.readMem(0x8d78));
        // CB 13 0156
        gbc.setState(0xbfce, 0x994b, 0x57e0, 0xbab6, 0x64c3, 0xab77, 0x0, 0x1);
        gbc.writeMem(0xbfce, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x994b, gbc.sp());
        EXPECT(0xbfd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfce));
        EXPECT(0x13, gbc.readMem(0xbfcf));
        // CB 13 0157
        gbc.setState(0x985, 0xe501, 0x6c20, 0xb031, 0x86fc, 0xb2df, 0x1, 0x1);
        gbc.writeMem(0x985, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe501, gbc.sp());
        EXPECT(0x987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0158
        gbc.setState(0x3749, 0x5e28, 0xdad0, 0x9d06, 0xc54f, 0x5b1, 0x1, 0x0);
        gbc.writeMem(0x3749, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5e28, gbc.sp());
        EXPECT(0x374b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0159
        gbc.setState(0x7330, 0xce1f, 0x5a90, 0xdcb6, 0xbdd, 0xacd1, 0x1, 0x1);
        gbc.writeMem(0x7330, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xce1f, gbc.sp());
        EXPECT(0x7332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 015A
        gbc.setState(0x382b, 0xcaf6, 0xea40, 0xf3fc, 0x4f17, 0xf322, 0x1, 0x1);
        gbc.writeMem(0x382b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xcaf6, gbc.sp());
        EXPECT(0x382d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 015B
        gbc.setState(0xc6b, 0xe4a2, 0xd6c0, 0x1634, 0x270, 0x6a2d, 0x1, 0x1);
        gbc.writeMem(0xc6b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe4a2, gbc.sp());
        EXPECT(0xc6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 015E
        gbc.setState(0x98c8, 0x9d41, 0x5260, 0x3cfd, 0xf98f, 0x5b32, 0x1, 0x1);
        gbc.writeMem(0x98c8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9d41, gbc.sp());
        EXPECT(0x98ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c8));
        EXPECT(0x13, gbc.readMem(0x98c9));
        // CB 13 015F
        gbc.setState(0x1fec, 0xabf0, 0x5590, 0x14d4, 0xa048, 0x2512, 0x1, 0x1);
        gbc.writeMem(0x1fec, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xabf0, gbc.sp());
        EXPECT(0x1fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0160
        gbc.setState(0xbb08, 0x7822, 0x12e0, 0x918e, 0x87a0, 0x3e60, 0x1, 0x1);
        gbc.writeMem(0xbb08, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7822, gbc.sp());
        EXPECT(0xbb0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb08));
        EXPECT(0x13, gbc.readMem(0xbb09));
        // CB 13 0161
        gbc.setState(0xee92, 0x6887, 0x52e0, 0x985d, 0xcf58, 0xa00d, 0x1, 0x1);
        gbc.writeMem(0xee92, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6887, gbc.sp());
        EXPECT(0xee94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee92));
        EXPECT(0x13, gbc.readMem(0xee93));
        // CB 13 0162
        gbc.setState(0x756d, 0x7f27, 0x7560, 0xeca3, 0x7a19, 0x24e9, 0x1, 0x0);
        gbc.writeMem(0x756d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7f27, gbc.sp());
        EXPECT(0x756f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0163
        gbc.setState(0xab32, 0xe2d5, 0x8770, 0x169f, 0xa872, 0x7340, 0x0, 0x1);
        gbc.writeMem(0xab32, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe2d5, gbc.sp());
        EXPECT(0xab34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab32));
        EXPECT(0x13, gbc.readMem(0xab33));
        // CB 13 0164
        gbc.setState(0x1be1, 0x72fd, 0x82c0, 0x82e5, 0xc7dd, 0x3ddd, 0x0, 0x1);
        gbc.writeMem(0x1be1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x72fd, gbc.sp());
        EXPECT(0x1be3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0165
        gbc.setState(0xded0, 0x5c2c, 0x2260, 0x9001, 0xd1f7, 0x4a52, 0x1, 0x1);
        gbc.writeMem(0xded0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5c2c, gbc.sp());
        EXPECT(0xded2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded0));
        EXPECT(0x13, gbc.readMem(0xded1));
        // CB 13 0166
        gbc.setState(0xc36b, 0xc320, 0x8450, 0x2945, 0x104d, 0x1138, 0x0, 0x1);
        gbc.writeMem(0xc36b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc320, gbc.sp());
        EXPECT(0xc36d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc36b));
        EXPECT(0x13, gbc.readMem(0xc36c));
        // CB 13 0167
        gbc.setState(0x270, 0x4137, 0x2ad0, 0x9fe2, 0xcba0, 0x4a72, 0x1, 0x1);
        gbc.writeMem(0x270, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4137, gbc.sp());
        EXPECT(0x272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0168
        gbc.setState(0xb55d, 0x7e40, 0x660, 0x9caa, 0x3348, 0xb807, 0x0, 0x0);
        gbc.writeMem(0xb55d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7e40, gbc.sp());
        EXPECT(0xb55f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb55d));
        EXPECT(0x13, gbc.readMem(0xb55e));
        // CB 13 0169
        gbc.setState(0x1bb9, 0x6f16, 0x4a80, 0x4669, 0x681f, 0xbabc, 0x1, 0x1);
        gbc.writeMem(0x1bb9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6f16, gbc.sp());
        EXPECT(0x1bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 016A
        gbc.setState(0x5fb, 0x3b03, 0x3680, 0xa2eb, 0xa99d, 0x2f1e, 0x0, 0x0);
        gbc.writeMem(0x5fb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3b03, gbc.sp());
        EXPECT(0x5fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 016B
        gbc.setState(0x4489, 0xe0cc, 0xff70, 0x45c0, 0xc9a6, 0x2dc2, 0x0, 0x1);
        gbc.writeMem(0x4489, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe0cc, gbc.sp());
        EXPECT(0x448b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 016C
        gbc.setState(0x623b, 0xae61, 0xec70, 0x847a, 0x4cb1, 0x7152, 0x0, 0x1);
        gbc.writeMem(0x623b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xae61, gbc.sp());
        EXPECT(0x623d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 016D
        gbc.setState(0x5615, 0x1b44, 0xd5a0, 0xfdd3, 0x68, 0x7979, 0x1, 0x1);
        gbc.writeMem(0x5615, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1b44, gbc.sp());
        EXPECT(0x5617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 016E
        gbc.setState(0x8e94, 0xa0c1, 0x6e60, 0xf291, 0x9f35, 0xedca, 0x1, 0x0);
        gbc.writeMem(0x8e94, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa0c1, gbc.sp());
        EXPECT(0x8e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e94));
        EXPECT(0x13, gbc.readMem(0x8e95));
        // CB 13 016F
        gbc.setState(0xb7b5, 0xdcf7, 0xfa90, 0xd6a8, 0xda48, 0xfa8, 0x1, 0x1);
        gbc.writeMem(0xb7b5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdcf7, gbc.sp());
        EXPECT(0xb7b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b5));
        EXPECT(0x13, gbc.readMem(0xb7b6));
        // CB 13 0170
        gbc.setState(0xc2d0, 0xabee, 0x6d70, 0xd493, 0x78cf, 0x5008, 0x1, 0x0);
        gbc.writeMem(0xc2d0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xabee, gbc.sp());
        EXPECT(0xc2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2d0));
        EXPECT(0x13, gbc.readMem(0xc2d1));
        // CB 13 0171
        gbc.setState(0x3fe5, 0x4572, 0x5f0, 0xb7f9, 0x17c4, 0x63f, 0x1, 0x0);
        gbc.writeMem(0x3fe5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4572, gbc.sp());
        EXPECT(0x3fe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0172
        gbc.setState(0x7588, 0xdf1b, 0xdb80, 0x3193, 0x2cc3, 0x4ba2, 0x0, 0x0);
        gbc.writeMem(0x7588, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xdf1b, gbc.sp());
        EXPECT(0x758a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0173
        gbc.setState(0xcd2, 0x232b, 0xd6d0, 0x8146, 0xe18f, 0x7144, 0x0, 0x0);
        gbc.writeMem(0xcd2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x232b, gbc.sp());
        EXPECT(0xcd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0174
        gbc.setState(0x48c1, 0xff9a, 0xf580, 0xb5d8, 0xb6ca, 0x4ece, 0x1, 0x1);
        gbc.writeMem(0x48c1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xff9a, gbc.sp());
        EXPECT(0x48c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0175
        gbc.setState(0xa6d5, 0x2ef7, 0x6200, 0xfd3b, 0xa591, 0xba65, 0x1, 0x0);
        gbc.writeMem(0xa6d5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2ef7, gbc.sp());
        EXPECT(0xa6d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d5));
        EXPECT(0x13, gbc.readMem(0xa6d6));
        // CB 13 0176
        gbc.setState(0x1398, 0xf961, 0x59c0, 0x576, 0xbe58, 0x26d3, 0x1, 0x0);
        gbc.writeMem(0x1398, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf961, gbc.sp());
        EXPECT(0x139a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0177
        gbc.setState(0x8532, 0xde19, 0xa5f0, 0xf6e1, 0x5d92, 0x2ff2, 0x0, 0x1);
        gbc.writeMem(0x8532, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xde19, gbc.sp());
        EXPECT(0x8534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8532));
        EXPECT(0x13, gbc.readMem(0x8533));
        // CB 13 0178
        gbc.setState(0x551a, 0x94c5, 0x1410, 0xa750, 0xbe85, 0xf123, 0x1, 0x1);
        gbc.writeMem(0x551a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x94c5, gbc.sp());
        EXPECT(0x551c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 017A
        gbc.setState(0xa302, 0xf7aa, 0x50c0, 0xa848, 0x8b50, 0x4223, 0x0, 0x1);
        gbc.writeMem(0xa302, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf7aa, gbc.sp());
        EXPECT(0xa304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa302));
        EXPECT(0x13, gbc.readMem(0xa303));
        // CB 13 017B
        gbc.setState(0xcc59, 0xaf62, 0x7070, 0x601b, 0x9520, 0xb6d0, 0x1, 0x1);
        gbc.writeMem(0xcc59, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xaf62, gbc.sp());
        EXPECT(0xcc5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc59));
        EXPECT(0x13, gbc.readMem(0xcc5a));
        // CB 13 017C
        gbc.setState(0xe31, 0xe642, 0x7ca0, 0x10c1, 0x7aa2, 0xb374, 0x1, 0x0);
        gbc.writeMem(0xe31, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe642, gbc.sp());
        EXPECT(0xe33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 017D
        gbc.setState(0x8250, 0x2af3, 0x1780, 0x10c7, 0xf412, 0x4ad9, 0x1, 0x0);
        gbc.writeMem(0x8250, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2af3, gbc.sp());
        EXPECT(0x8252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8250));
        EXPECT(0x13, gbc.readMem(0x8251));
        // CB 13 017E
        gbc.setState(0xce1d, 0xdfc3, 0x8770, 0xe19, 0x34e0, 0xf4ef, 0x1, 0x1);
        gbc.writeMem(0xce1d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdfc3, gbc.sp());
        EXPECT(0xce1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce1d));
        EXPECT(0x13, gbc.readMem(0xce1e));
        // CB 13 017F
        gbc.setState(0xdf79, 0xe967, 0x50a0, 0x71a, 0x2068, 0x1bb5, 0x0, 0x1);
        gbc.writeMem(0xdf79, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe967, gbc.sp());
        EXPECT(0xdf7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf79));
        EXPECT(0x13, gbc.readMem(0xdf7a));
        // CB 13 0180
        gbc.setState(0x7b94, 0xe663, 0x7050, 0x54f9, 0x7ce3, 0xff83, 0x1, 0x1);
        gbc.writeMem(0x7b94, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe663, gbc.sp());
        EXPECT(0x7b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0181
        gbc.setState(0x82ae, 0xf36b, 0xef90, 0xd86f, 0xf9c0, 0xed28, 0x0, 0x1);
        gbc.writeMem(0x82ae, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf36b, gbc.sp());
        EXPECT(0x82b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ae));
        EXPECT(0x13, gbc.readMem(0x82af));
        // CB 13 0182
        gbc.setState(0xdc9e, 0x7be, 0x8e20, 0x1208, 0xf439, 0x6e81, 0x1, 0x0);
        gbc.writeMem(0xdc9e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7be, gbc.sp());
        EXPECT(0xdca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc9e));
        EXPECT(0x13, gbc.readMem(0xdc9f));
        // CB 13 0183
        gbc.setState(0xe8e7, 0xaeaa, 0xc230, 0x670, 0x2871, 0x59fa, 0x1, 0x0);
        gbc.writeMem(0xe8e7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xaeaa, gbc.sp());
        EXPECT(0xe8e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e7));
        EXPECT(0x13, gbc.readMem(0xe8e8));
        // CB 13 0184
        gbc.setState(0x6d15, 0x9c8b, 0x4a80, 0xbd28, 0x7256, 0xd70c, 0x1, 0x0);
        gbc.writeMem(0x6d15, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9c8b, gbc.sp());
        EXPECT(0x6d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0185
        gbc.setState(0xea9f, 0xc98d, 0x7b60, 0x8b71, 0x3cea, 0x1cf, 0x0, 0x1);
        gbc.writeMem(0xea9f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc98d, gbc.sp());
        EXPECT(0xeaa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea9f));
        EXPECT(0x13, gbc.readMem(0xeaa0));
        // CB 13 0186
        gbc.setState(0x3bea, 0x73d2, 0xf1f0, 0xade0, 0x2b19, 0xa2a7, 0x0, 0x0);
        gbc.writeMem(0x3bea, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x73d2, gbc.sp());
        EXPECT(0x3bec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0187
        gbc.setState(0x6673, 0x32b, 0x8050, 0x545e, 0x6393, 0x39ba, 0x1, 0x0);
        gbc.writeMem(0x6673, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x32b, gbc.sp());
        EXPECT(0x6675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0188
        gbc.setState(0x2e71, 0x357d, 0x6730, 0x8892, 0x1035, 0x70f9, 0x0, 0x1);
        gbc.writeMem(0x2e71, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x357d, gbc.sp());
        EXPECT(0x2e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0189
        gbc.setState(0x1d41, 0x7ccd, 0x48d0, 0x64de, 0x7283, 0xbcc7, 0x0, 0x0);
        gbc.writeMem(0x1d41, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7ccd, gbc.sp());
        EXPECT(0x1d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 018A
        gbc.setState(0x2af8, 0x29cf, 0x3db0, 0x72a, 0x2422, 0x3d79, 0x1, 0x0);
        gbc.writeMem(0x2af8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x29cf, gbc.sp());
        EXPECT(0x2afa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 018B
        gbc.setState(0x4516, 0xc9da, 0xa540, 0xd14d, 0x4b0d, 0x4329, 0x0, 0x1);
        gbc.writeMem(0x4516, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc9da, gbc.sp());
        EXPECT(0x4518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 018C
        gbc.setState(0xe973, 0x5e8d, 0x88c0, 0x98bd, 0x2990, 0xfe48, 0x0, 0x1);
        gbc.writeMem(0xe973, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5e8d, gbc.sp());
        EXPECT(0xe975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe973));
        EXPECT(0x13, gbc.readMem(0xe974));
        // CB 13 018E
        gbc.setState(0xa1d3, 0xf435, 0xc710, 0x470b, 0xb84, 0x2c8e, 0x0, 0x0);
        gbc.writeMem(0xa1d3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf435, gbc.sp());
        EXPECT(0xa1d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d3));
        EXPECT(0x13, gbc.readMem(0xa1d4));
        // CB 13 0191
        gbc.setState(0x6e4b, 0xc1c9, 0x6ab0, 0x2b1e, 0xaf83, 0x5eda, 0x0, 0x1);
        gbc.writeMem(0x6e4b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc1c9, gbc.sp());
        EXPECT(0x6e4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0192
        gbc.setState(0x3175, 0xdfc9, 0x2650, 0x37f6, 0x79be, 0x6946, 0x1, 0x1);
        gbc.writeMem(0x3175, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdfc9, gbc.sp());
        EXPECT(0x3177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0193
        gbc.setState(0xa952, 0x1423, 0x1760, 0xc85a, 0x3dc0, 0xc069, 0x1, 0x0);
        gbc.writeMem(0xa952, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1423, gbc.sp());
        EXPECT(0xa954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa952));
        EXPECT(0x13, gbc.readMem(0xa953));
        // CB 13 0194
        gbc.setState(0x10fd, 0x47b3, 0x6590, 0xef7f, 0xc8e3, 0x64fb, 0x1, 0x1);
        gbc.writeMem(0x10fd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x47b3, gbc.sp());
        EXPECT(0x10ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0195
        gbc.setState(0x2f13, 0xd7, 0xb950, 0xe939, 0x9f6f, 0xb88b, 0x1, 0x0);
        gbc.writeMem(0x2f13, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd7, gbc.sp());
        EXPECT(0x2f15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0196
        gbc.setState(0x27b3, 0xf88a, 0x6f00, 0x8bb8, 0x11f9, 0x2c73, 0x0, 0x0);
        gbc.writeMem(0x27b3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf88a, gbc.sp());
        EXPECT(0x27b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0197
        gbc.setState(0x1f1f, 0xf15d, 0x1b30, 0xff77, 0x514a, 0xde0f, 0x1, 0x1);
        gbc.writeMem(0x1f1f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf15d, gbc.sp());
        EXPECT(0x1f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0199
        gbc.setState(0x74e9, 0x7d13, 0xe140, 0xea2f, 0x26d3, 0x4611, 0x1, 0x1);
        gbc.writeMem(0x74e9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7d13, gbc.sp());
        EXPECT(0x74eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 019A
        gbc.setState(0xab23, 0xb62e, 0x9a0, 0xc7e5, 0xbfc6, 0x8d0f, 0x0, 0x0);
        gbc.writeMem(0xab23, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb62e, gbc.sp());
        EXPECT(0xab25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab23));
        EXPECT(0x13, gbc.readMem(0xab24));
        // CB 13 019B
        gbc.setState(0xe10d, 0xc883, 0x49d0, 0x4a7b, 0xb4ed, 0x6b2, 0x0, 0x1);
        gbc.writeMem(0xe10d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc883, gbc.sp());
        EXPECT(0xe10f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe10d));
        EXPECT(0x13, gbc.readMem(0xe10e));
        // CB 13 019C
        gbc.setState(0x488, 0xbeed, 0x5020, 0x8b61, 0xa3ca, 0x21a3, 0x0, 0x0);
        gbc.writeMem(0x488, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbeed, gbc.sp());
        EXPECT(0x48a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 019D
        gbc.setState(0x26fb, 0x795f, 0x110, 0x6365, 0x5ff0, 0x7fd9, 0x0, 0x0);
        gbc.writeMem(0x26fb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x795f, gbc.sp());
        EXPECT(0x26fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 019E
        gbc.setState(0x767f, 0x17dc, 0xd0a0, 0xfa4a, 0x803b, 0x8c83, 0x0, 0x0);
        gbc.writeMem(0x767f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x17dc, gbc.sp());
        EXPECT(0x7681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 019F
        gbc.setState(0x234b, 0xdbbd, 0xbaa0, 0x423b, 0x3b4, 0x9c10, 0x0, 0x1);
        gbc.writeMem(0x234b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xdbbd, gbc.sp());
        EXPECT(0x234d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01A0
        gbc.setState(0xebca, 0xf8da, 0xa960, 0x325b, 0x8e11, 0x8a82, 0x0, 0x1);
        gbc.writeMem(0xebca, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf8da, gbc.sp());
        EXPECT(0xebcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebca));
        EXPECT(0x13, gbc.readMem(0xebcb));
        // CB 13 01A1
        gbc.setState(0xaee7, 0xd781, 0xfe80, 0x7982, 0x2c2d, 0x452c, 0x1, 0x0);
        gbc.writeMem(0xaee7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd781, gbc.sp());
        EXPECT(0xaee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee7));
        EXPECT(0x13, gbc.readMem(0xaee8));
        // CB 13 01A2
        gbc.setState(0xbc6a, 0xc60b, 0xb350, 0x9228, 0x73d, 0x7239, 0x0, 0x0);
        gbc.writeMem(0xbc6a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc60b, gbc.sp());
        EXPECT(0xbc6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc6a));
        EXPECT(0x13, gbc.readMem(0xbc6b));
        // CB 13 01A3
        gbc.setState(0xe3d5, 0x2f19, 0xa490, 0x3d7c, 0x6a1b, 0x6500, 0x1, 0x1);
        gbc.writeMem(0xe3d5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2f19, gbc.sp());
        EXPECT(0xe3d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3d5));
        EXPECT(0x13, gbc.readMem(0xe3d6));
        // CB 13 01A4
        gbc.setState(0xa3cc, 0x5044, 0xc060, 0xd66, 0x2a67, 0xdb4, 0x1, 0x1);
        gbc.writeMem(0xa3cc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5044, gbc.sp());
        EXPECT(0xa3ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3cc));
        EXPECT(0x13, gbc.readMem(0xa3cd));
        // CB 13 01A5
        gbc.setState(0xa5ed, 0x1694, 0x21c0, 0x8a99, 0x4bda, 0x8c53, 0x1, 0x0);
        gbc.writeMem(0xa5ed, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1694, gbc.sp());
        EXPECT(0xa5ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ed));
        EXPECT(0x13, gbc.readMem(0xa5ee));
        // CB 13 01A6
        gbc.setState(0xc1c7, 0xbb58, 0x43c0, 0x7551, 0x50e3, 0xc035, 0x1, 0x1);
        gbc.writeMem(0xc1c7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbb58, gbc.sp());
        EXPECT(0xc1c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c7));
        EXPECT(0x13, gbc.readMem(0xc1c8));
        // CB 13 01A7
        gbc.setState(0x9988, 0x1e63, 0x15b0, 0x947d, 0xa1a8, 0x58ae, 0x0, 0x0);
        gbc.writeMem(0x9988, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1e63, gbc.sp());
        EXPECT(0x998a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9988));
        EXPECT(0x13, gbc.readMem(0x9989));
        // CB 13 01A8
        gbc.setState(0x6878, 0x3d3, 0xacf0, 0x7a1e, 0x2442, 0x213d, 0x1, 0x0);
        gbc.writeMem(0x6878, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3d3, gbc.sp());
        EXPECT(0x687a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 01A9
        gbc.setState(0xc667, 0xd217, 0x11b0, 0x2c03, 0xd8b3, 0x961, 0x0, 0x1);
        gbc.writeMem(0xc667, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd217, gbc.sp());
        EXPECT(0xc669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc667));
        EXPECT(0x13, gbc.readMem(0xc668));
        // CB 13 01AA
        gbc.setState(0x5135, 0xe898, 0x310, 0xb7a3, 0x77ca, 0x34de, 0x0, 0x0);
        gbc.writeMem(0x5135, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe898, gbc.sp());
        EXPECT(0x5137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01AB
        gbc.setState(0x7f88, 0x4ac9, 0x8360, 0xcf50, 0x2ed7, 0x9df5, 0x0, 0x0);
        gbc.writeMem(0x7f88, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4ac9, gbc.sp());
        EXPECT(0x7f8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01AC
        gbc.setState(0xebd0, 0xd9a0, 0xe380, 0x1c75, 0x150e, 0x4301, 0x1, 0x0);
        gbc.writeMem(0xebd0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd9a0, gbc.sp());
        EXPECT(0xebd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd0));
        EXPECT(0x13, gbc.readMem(0xebd1));
        // CB 13 01AD
        gbc.setState(0x8170, 0xf2bb, 0xf9a0, 0x3353, 0x785e, 0xc8fe, 0x1, 0x0);
        gbc.writeMem(0x8170, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf2bb, gbc.sp());
        EXPECT(0x8172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8170));
        EXPECT(0x13, gbc.readMem(0x8171));
        // CB 13 01AE
        gbc.setState(0x7a09, 0x35be, 0xdbc0, 0x267, 0xeea, 0x5f4e, 0x0, 0x0);
        gbc.writeMem(0x7a09, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x35be, gbc.sp());
        EXPECT(0x7a0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01AF
        gbc.setState(0x8c39, 0x64e4, 0x6000, 0x1488, 0xdac5, 0xb128, 0x0, 0x1);
        gbc.writeMem(0x8c39, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x64e4, gbc.sp());
        EXPECT(0x8c3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c39));
        EXPECT(0x13, gbc.readMem(0x8c3a));
        // CB 13 01B0
        gbc.setState(0x6db9, 0xb9a6, 0x9140, 0x151b, 0x56df, 0xa108, 0x0, 0x1);
        gbc.writeMem(0x6db9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb9a6, gbc.sp());
        EXPECT(0x6dbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01B1
        gbc.setState(0x2435, 0xbdd7, 0xe190, 0x650b, 0xdc52, 0x6cca, 0x1, 0x1);
        gbc.writeMem(0x2435, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xbdd7, gbc.sp());
        EXPECT(0x2437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 01B2
        gbc.setState(0x7c90, 0xc6f7, 0xefb0, 0xc3d8, 0xd0d4, 0xb1ae, 0x0, 0x0);
        gbc.writeMem(0x7c90, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc6f7, gbc.sp());
        EXPECT(0x7c92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01B3
        gbc.setState(0xab23, 0xacfe, 0xa980, 0xfb31, 0x857, 0x39e, 0x1, 0x1);
        gbc.writeMem(0xab23, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xacfe, gbc.sp());
        EXPECT(0xab25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab23));
        EXPECT(0x13, gbc.readMem(0xab24));
        // CB 13 01B4
        gbc.setState(0xe059, 0x80dd, 0x7b50, 0xc019, 0xc20e, 0x1e5d, 0x0, 0x1);
        gbc.writeMem(0xe059, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x80dd, gbc.sp());
        EXPECT(0xe05b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe059));
        EXPECT(0x13, gbc.readMem(0xe05a));
        // CB 13 01B5
        gbc.setState(0xf79, 0x3528, 0x10f0, 0xe0af, 0xb97d, 0x85cc, 0x0, 0x0);
        gbc.writeMem(0xf79, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3528, gbc.sp());
        EXPECT(0xf7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 01B6
        gbc.setState(0xe9d2, 0x7ecf, 0x1690, 0xa3aa, 0x4a87, 0x8865, 0x0, 0x1);
        gbc.writeMem(0xe9d2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7ecf, gbc.sp());
        EXPECT(0xe9d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9d2));
        EXPECT(0x13, gbc.readMem(0xe9d3));
        // CB 13 01B7
        gbc.setState(0xef75, 0x871c, 0xe950, 0xc8b3, 0x2000, 0xc98c, 0x1, 0x0);
        gbc.writeMem(0xef75, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x871c, gbc.sp());
        EXPECT(0xef77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef75));
        EXPECT(0x13, gbc.readMem(0xef76));
        // CB 13 01B8
        gbc.setState(0xa1ba, 0xd70e, 0x7530, 0xdab0, 0xc20e, 0xaff8, 0x0, 0x1);
        gbc.writeMem(0xa1ba, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd70e, gbc.sp());
        EXPECT(0xa1bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ba));
        EXPECT(0x13, gbc.readMem(0xa1bb));
        // CB 13 01B9
        gbc.setState(0x62d8, 0xb03c, 0xdf20, 0x2747, 0x3b37, 0xc5b3, 0x1, 0x1);
        gbc.writeMem(0x62d8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb03c, gbc.sp());
        EXPECT(0x62da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 01BA
        gbc.setState(0xb871, 0xa2e0, 0xb230, 0xaeca, 0x5b2f, 0xa778, 0x0, 0x1);
        gbc.writeMem(0xb871, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa2e0, gbc.sp());
        EXPECT(0xb873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb871));
        EXPECT(0x13, gbc.readMem(0xb872));
        // CB 13 01BB
        gbc.setState(0xb7f, 0xab33, 0x1d50, 0x6471, 0xf1f5, 0xdf79, 0x1, 0x0);
        gbc.writeMem(0xb7f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xab33, gbc.sp());
        EXPECT(0xb81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01BC
        gbc.setState(0xda10, 0x77ee, 0x80f0, 0x56e1, 0xe5b9, 0xccee, 0x1, 0x1);
        gbc.writeMem(0xda10, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x77ee, gbc.sp());
        EXPECT(0xda12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda10));
        EXPECT(0x13, gbc.readMem(0xda11));
        // CB 13 01BD
        gbc.setState(0x1ab8, 0x4fd1, 0x4710, 0x5eae, 0x8d88, 0xee62, 0x0, 0x1);
        gbc.writeMem(0x1ab8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4fd1, gbc.sp());
        EXPECT(0x1aba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01BE
        gbc.setState(0x3217, 0xb727, 0x840, 0x81ce, 0xbf8f, 0xa7f1, 0x0, 0x1);
        gbc.writeMem(0x3217, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb727, gbc.sp());
        EXPECT(0x3219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01BF
        gbc.setState(0x5ce0, 0x3c25, 0x1d30, 0x9533, 0x2247, 0xd63c, 0x1, 0x0);
        gbc.writeMem(0x5ce0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3c25, gbc.sp());
        EXPECT(0x5ce2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 01C1
        gbc.setState(0x6f43, 0xeb04, 0xe90, 0xc4fa, 0x92d9, 0x7318, 0x0, 0x1);
        gbc.writeMem(0x6f43, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xeb04, gbc.sp());
        EXPECT(0x6f45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01C2
        gbc.setState(0x8923, 0xacda, 0xc4d0, 0xda3, 0xdbab, 0x7f01, 0x1, 0x1);
        gbc.writeMem(0x8923, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xacda, gbc.sp());
        EXPECT(0x8925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8923));
        EXPECT(0x13, gbc.readMem(0x8924));
        // CB 13 01C4
        gbc.setState(0x79bf, 0x1fa2, 0x4c30, 0x4e, 0x2f41, 0xb5bc, 0x1, 0x1);
        gbc.writeMem(0x79bf, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1fa2, gbc.sp());
        EXPECT(0x79c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 01C5
        gbc.setState(0xa31c, 0x5037, 0x6770, 0x4c2b, 0x3963, 0x2125, 0x1, 0x1);
        gbc.writeMem(0xa31c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5037, gbc.sp());
        EXPECT(0xa31e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa31c));
        EXPECT(0x13, gbc.readMem(0xa31d));
        // CB 13 01C6
        gbc.setState(0x8712, 0xa92d, 0xe4e0, 0xa802, 0x1758, 0x7bce, 0x0, 0x0);
        gbc.writeMem(0x8712, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa92d, gbc.sp());
        EXPECT(0x8714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8712));
        EXPECT(0x13, gbc.readMem(0x8713));
        // CB 13 01C7
        gbc.setState(0x92cb, 0x8efe, 0x6ca0, 0xa1b8, 0xb6ab, 0xb6ab, 0x0, 0x0);
        gbc.writeMem(0x92cb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8efe, gbc.sp());
        EXPECT(0x92cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92cb));
        EXPECT(0x13, gbc.readMem(0x92cc));
        // CB 13 01C8
        gbc.setState(0x1e68, 0x36a6, 0x72e0, 0xe81d, 0xf87f, 0x36e9, 0x1, 0x0);
        gbc.writeMem(0x1e68, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x36a6, gbc.sp());
        EXPECT(0x1e6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 01C9
        gbc.setState(0x25f4, 0xdaa4, 0x8100, 0x96cf, 0x61c7, 0xce16, 0x1, 0x0);
        gbc.writeMem(0x25f4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xdaa4, gbc.sp());
        EXPECT(0x25f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01CA
        gbc.setState(0xc027, 0xe10a, 0xc0e0, 0x363d, 0x1d05, 0x22b5, 0x0, 0x0);
        gbc.writeMem(0xc027, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe10a, gbc.sp());
        EXPECT(0xc029, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc027));
        EXPECT(0x13, gbc.readMem(0xc028));
        // CB 13 01CB
        gbc.setState(0x7bfd, 0xfdc3, 0x1c10, 0x2b94, 0x1e88, 0xa074, 0x0, 0x0);
        gbc.writeMem(0x7bfd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfdc3, gbc.sp());
        EXPECT(0x7bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01CC
        gbc.setState(0x2d2b, 0x96de, 0xfe10, 0xc293, 0xb6ef, 0x5ef4, 0x0, 0x1);
        gbc.writeMem(0x2d2b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x96de, gbc.sp());
        EXPECT(0x2d2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01CD
        gbc.setState(0x7f58, 0x58c7, 0x2fc0, 0xb881, 0x955e, 0xe34f, 0x0, 0x0);
        gbc.writeMem(0x7f58, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x58c7, gbc.sp());
        EXPECT(0x7f5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 01CF
        gbc.setState(0x81e, 0xcc0d, 0xa7e0, 0xcca4, 0x9d92, 0x2e15, 0x0, 0x1);
        gbc.writeMem(0x81e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xcc0d, gbc.sp());
        EXPECT(0x820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01D0
        gbc.setState(0x1422, 0xdf4b, 0xb1f0, 0x7bb6, 0x3bb0, 0x52ec, 0x1, 0x0);
        gbc.writeMem(0x1422, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdf4b, gbc.sp());
        EXPECT(0x1424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01D1
        gbc.setState(0x7783, 0xc186, 0xa220, 0xcbaf, 0xa30a, 0x81e3, 0x1, 0x1);
        gbc.writeMem(0x7783, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc186, gbc.sp());
        EXPECT(0x7785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 01D2
        gbc.setState(0xc17c, 0xf33, 0x8f80, 0xc32, 0xee37, 0x2f7d, 0x1, 0x0);
        gbc.writeMem(0xc17c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf33, gbc.sp());
        EXPECT(0xc17e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc17c));
        EXPECT(0x13, gbc.readMem(0xc17d));
        // CB 13 01D3
        gbc.setState(0x3a65, 0x2130, 0x4b00, 0x11f1, 0xac50, 0x2285, 0x0, 0x1);
        gbc.writeMem(0x3a65, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2130, gbc.sp());
        EXPECT(0x3a67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 01D4
        gbc.setState(0xc239, 0xd436, 0xed80, 0x39fa, 0x86dd, 0x4f52, 0x0, 0x0);
        gbc.writeMem(0xc239, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd436, gbc.sp());
        EXPECT(0xc23b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc239));
        EXPECT(0x13, gbc.readMem(0xc23a));
        // CB 13 01D5
        gbc.setState(0x7d05, 0x44fe, 0x6720, 0x3bb9, 0xebb9, 0x4b74, 0x0, 0x0);
        gbc.writeMem(0x7d05, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x44fe, gbc.sp());
        EXPECT(0x7d07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01D6
        gbc.setState(0x965f, 0xc64d, 0xb00, 0xa516, 0x2ffe, 0xd640, 0x0, 0x0);
        gbc.writeMem(0x965f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc64d, gbc.sp());
        EXPECT(0x9661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x965f));
        EXPECT(0x13, gbc.readMem(0x9660));
        // CB 13 01D7
        gbc.setState(0x489d, 0x6019, 0xb830, 0x1c78, 0xcc34, 0xf97b, 0x1, 0x0);
        gbc.writeMem(0x489d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6019, gbc.sp());
        EXPECT(0x489f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 01D8
        gbc.setState(0x2b01, 0x7ff0, 0x5d70, 0xaa21, 0x6362, 0xc61b, 0x0, 0x0);
        gbc.writeMem(0x2b01, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7ff0, gbc.sp());
        EXPECT(0x2b03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 01D9
        gbc.setState(0xde84, 0x5775, 0xb790, 0xdae1, 0x6dee, 0x1010, 0x1, 0x1);
        gbc.writeMem(0xde84, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5775, gbc.sp());
        EXPECT(0xde86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde84));
        EXPECT(0x13, gbc.readMem(0xde85));
        // CB 13 01DA
        gbc.setState(0xdcda, 0xec2e, 0x9600, 0x257, 0x2a2, 0x6e9d, 0x1, 0x1);
        gbc.writeMem(0xdcda, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xec2e, gbc.sp());
        EXPECT(0xdcdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcda));
        EXPECT(0x13, gbc.readMem(0xdcdb));
        // CB 13 01DB
        gbc.setState(0xaedb, 0xca83, 0x5820, 0xe521, 0xdcb, 0x8a7b, 0x1, 0x0);
        gbc.writeMem(0xaedb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xca83, gbc.sp());
        EXPECT(0xaedd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaedb));
        EXPECT(0x13, gbc.readMem(0xaedc));
        // CB 13 01DC
        gbc.setState(0x4b, 0x9c0c, 0xd260, 0x7832, 0xe27b, 0xb4c8, 0x1, 0x0);
        gbc.writeMem(0x4b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9c0c, gbc.sp());
        EXPECT(0x4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 01DD
        gbc.setState(0x41a6, 0xdaa0, 0x5850, 0xff38, 0x7014, 0x8b3d, 0x0, 0x0);
        gbc.writeMem(0x41a6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdaa0, gbc.sp());
        EXPECT(0x41a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 01DE
        gbc.setState(0xed54, 0x2bc9, 0xc400, 0xa749, 0x6abe, 0xfd59, 0x1, 0x0);
        gbc.writeMem(0xed54, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2bc9, gbc.sp());
        EXPECT(0xed56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed54));
        EXPECT(0x13, gbc.readMem(0xed55));
        // CB 13 01DF
        gbc.setState(0x9d00, 0xd831, 0x5a40, 0x1201, 0xcd6a, 0x39ca, 0x1, 0x1);
        gbc.writeMem(0x9d00, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd831, gbc.sp());
        EXPECT(0x9d02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d00));
        EXPECT(0x13, gbc.readMem(0x9d01));
        // CB 13 01E0
        gbc.setState(0xe01f, 0x9df7, 0x9410, 0xa1be, 0x2f26, 0xa1af, 0x0, 0x0);
        gbc.writeMem(0xe01f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9df7, gbc.sp());
        EXPECT(0xe021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe01f));
        EXPECT(0x13, gbc.readMem(0xe020));
        // CB 13 01E1
        gbc.setState(0x8384, 0x86fe, 0xdb50, 0xa690, 0x8eeb, 0xcab2, 0x1, 0x0);
        gbc.writeMem(0x8384, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x86fe, gbc.sp());
        EXPECT(0x8386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8384));
        EXPECT(0x13, gbc.readMem(0x8385));
        // CB 13 01E2
        gbc.setState(0x595c, 0x6000, 0x9de0, 0x56a9, 0x5010, 0x53d5, 0x0, 0x1);
        gbc.writeMem(0x595c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6000, gbc.sp());
        EXPECT(0x595e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 01E3
        gbc.setState(0x1381, 0xe517, 0x7680, 0x8b3b, 0xddae, 0x89f, 0x0, 0x0);
        gbc.writeMem(0x1381, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe517, gbc.sp());
        EXPECT(0x1383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01E4
        gbc.setState(0x5a60, 0x8d5d, 0x5320, 0xb9c0, 0xca9f, 0x59a5, 0x1, 0x1);
        gbc.writeMem(0x5a60, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8d5d, gbc.sp());
        EXPECT(0x5a62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01E5
        gbc.setState(0x9d26, 0xc389, 0x470, 0xfd05, 0x370e, 0x4680, 0x1, 0x1);
        gbc.writeMem(0x9d26, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc389, gbc.sp());
        EXPECT(0x9d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d26));
        EXPECT(0x13, gbc.readMem(0x9d27));
        // CB 13 01E6
        gbc.setState(0x3c77, 0x7772, 0xea40, 0x9da8, 0xb2a8, 0x6da6, 0x0, 0x0);
        gbc.writeMem(0x3c77, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7772, gbc.sp());
        EXPECT(0x3c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01E7
        gbc.setState(0x3479, 0xa701, 0xf8a0, 0x4107, 0x1e29, 0x6827, 0x0, 0x1);
        gbc.writeMem(0x3479, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa701, gbc.sp());
        EXPECT(0x347b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 01E8
        gbc.setState(0xef5, 0xf5f5, 0xe600, 0xdad6, 0x8edf, 0x6e2a, 0x0, 0x1);
        gbc.writeMem(0xef5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf5f5, gbc.sp());
        EXPECT(0xef7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01E9
        gbc.setState(0xb33c, 0x5a35, 0xe8f0, 0x8c57, 0xa3a4, 0x2e49, 0x0, 0x1);
        gbc.writeMem(0xb33c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5a35, gbc.sp());
        EXPECT(0xb33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb33c));
        EXPECT(0x13, gbc.readMem(0xb33d));
        // CB 13 01EA
        gbc.setState(0x38be, 0x874f, 0x200, 0x977b, 0x1d5d, 0xee78, 0x0, 0x0);
        gbc.writeMem(0x38be, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x874f, gbc.sp());
        EXPECT(0x38c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 01EB
        gbc.setState(0x6ab7, 0x7438, 0x2a30, 0x8610, 0xab30, 0x9a17, 0x0, 0x0);
        gbc.writeMem(0x6ab7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7438, gbc.sp());
        EXPECT(0x6ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 01EC
        gbc.setState(0x18c2, 0xbf0a, 0x660, 0x36ac, 0x902e, 0x85aa, 0x0, 0x1);
        gbc.writeMem(0x18c2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbf0a, gbc.sp());
        EXPECT(0x18c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 01ED
        gbc.setState(0xc71e, 0x5e5a, 0xcac0, 0x3538, 0xdb19, 0x41fd, 0x1, 0x1);
        gbc.writeMem(0xc71e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5e5a, gbc.sp());
        EXPECT(0xc720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc71e));
        EXPECT(0x13, gbc.readMem(0xc71f));
        // CB 13 01EE
        gbc.setState(0x6874, 0x2363, 0x5af0, 0x8ab, 0x2edb, 0xe538, 0x0, 0x1);
        gbc.writeMem(0x6874, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2363, gbc.sp());
        EXPECT(0x6876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01EF
        gbc.setState(0xcdd8, 0xa37d, 0xdd10, 0x4632, 0xd0fd, 0xb8f0, 0x0, 0x0);
        gbc.writeMem(0xcdd8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa37d, gbc.sp());
        EXPECT(0xcdda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd8));
        EXPECT(0x13, gbc.readMem(0xcdd9));
        // CB 13 01F1
        gbc.setState(0xb043, 0xb617, 0xa240, 0x7236, 0x13c7, 0x4cf2, 0x0, 0x1);
        gbc.writeMem(0xb043, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb617, gbc.sp());
        EXPECT(0xb045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb043));
        EXPECT(0x13, gbc.readMem(0xb044));
        // CB 13 01F2
        gbc.setState(0x8164, 0xcf4, 0xaa40, 0xe8a1, 0x3acd, 0xf827, 0x0, 0x0);
        gbc.writeMem(0x8164, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcf4, gbc.sp());
        EXPECT(0x8166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8164));
        EXPECT(0x13, gbc.readMem(0x8165));
        // CB 13 01F3
        gbc.setState(0x1c50, 0xdf0b, 0xafa0, 0x2ca9, 0xd583, 0xfe57, 0x0, 0x1);
        gbc.writeMem(0x1c50, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xdf0b, gbc.sp());
        EXPECT(0x1c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01F4
        gbc.setState(0xd6ca, 0x9c5e, 0x6a60, 0x4472, 0xe6b1, 0xcc96, 0x1, 0x1);
        gbc.writeMem(0xd6ca, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9c5e, gbc.sp());
        EXPECT(0xd6cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ca));
        EXPECT(0x13, gbc.readMem(0xd6cb));
        // CB 13 01F5
        gbc.setState(0x5ab6, 0x3c7, 0xdba0, 0x8a96, 0xc2c0, 0xd5f, 0x0, 0x1);
        gbc.writeMem(0x5ab6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3c7, gbc.sp());
        EXPECT(0x5ab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 01F6
        gbc.setState(0xb4e9, 0x59c, 0xda00, 0xd38, 0xb69c, 0xa53e, 0x0, 0x1);
        gbc.writeMem(0xb4e9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x59c, gbc.sp());
        EXPECT(0xb4eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e9));
        EXPECT(0x13, gbc.readMem(0xb4ea));
        // CB 13 01F7
        gbc.setState(0xdd59, 0x507d, 0xcd00, 0x4031, 0x1c57, 0x4953, 0x0, 0x0);
        gbc.writeMem(0xdd59, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x507d, gbc.sp());
        EXPECT(0xdd5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd59));
        EXPECT(0x13, gbc.readMem(0xdd5a));
        // CB 13 01F8
        gbc.setState(0xa366, 0xd04f, 0x2970, 0x9b88, 0x2aa7, 0xd70a, 0x0, 0x1);
        gbc.writeMem(0xa366, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd04f, gbc.sp());
        EXPECT(0xa368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa366));
        EXPECT(0x13, gbc.readMem(0xa367));
        // CB 13 01F9
        gbc.setState(0x4f5e, 0x66cf, 0x5ba0, 0xa51, 0x7752, 0x49d2, 0x0, 0x1);
        gbc.writeMem(0x4f5e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x66cf, gbc.sp());
        EXPECT(0x4f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 01FA
        gbc.setState(0xd47a, 0x7e92, 0x8e60, 0xa7c6, 0xa6c6, 0x8c3d, 0x0, 0x0);
        gbc.writeMem(0xd47a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7e92, gbc.sp());
        EXPECT(0xd47c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd47a));
        EXPECT(0x13, gbc.readMem(0xd47b));
        // CB 13 01FC
        gbc.setState(0xceec, 0x2c7e, 0x1460, 0x6b90, 0x90b3, 0xb403, 0x1, 0x1);
        gbc.writeMem(0xceec, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2c7e, gbc.sp());
        EXPECT(0xceee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceec));
        EXPECT(0x13, gbc.readMem(0xceed));
        // CB 13 01FD
        gbc.setState(0xabaa, 0x2d3e, 0xc070, 0xb4ea, 0xa252, 0xeac3, 0x1, 0x0);
        gbc.writeMem(0xabaa, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2d3e, gbc.sp());
        EXPECT(0xabac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabaa));
        EXPECT(0x13, gbc.readMem(0xabab));
        // CB 13 01FE
        gbc.setState(0xc737, 0x8273, 0x5e20, 0xfc5c, 0xf61c, 0xc4b9, 0x1, 0x1);
        gbc.writeMem(0xc737, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8273, gbc.sp());
        EXPECT(0xc739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc737));
        EXPECT(0x13, gbc.readMem(0xc738));
        // CB 13 01FF
        gbc.setState(0x670e, 0x7e19, 0xa660, 0xe71f, 0xcb48, 0x31dc, 0x0, 0x0);
        gbc.writeMem(0x670e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7e19, gbc.sp());
        EXPECT(0x6710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0200
        gbc.setState(0x36fa, 0xca1f, 0xd320, 0x74f3, 0x50bd, 0x4ae2, 0x0, 0x1);
        gbc.writeMem(0x36fa, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xca1f, gbc.sp());
        EXPECT(0x36fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0201
        gbc.setState(0x27dc, 0xcb02, 0x300, 0xe453, 0xfe8c, 0xc43, 0x1, 0x0);
        gbc.writeMem(0x27dc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcb02, gbc.sp());
        EXPECT(0x27de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0202
        gbc.setState(0xd31, 0x2409, 0x97b0, 0xf805, 0xf715, 0x1127, 0x1, 0x0);
        gbc.writeMem(0xd31, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2409, gbc.sp());
        EXPECT(0xd33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0203
        gbc.setState(0x2e6, 0x354a, 0xca60, 0x3264, 0xad6b, 0x3d67, 0x0, 0x1);
        gbc.writeMem(0x2e6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x354a, gbc.sp());
        EXPECT(0x2e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0204
        gbc.setState(0x8d37, 0xea68, 0x8370, 0xaa46, 0x2cc2, 0x7d25, 0x1, 0x1);
        gbc.writeMem(0x8d37, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xea68, gbc.sp());
        EXPECT(0x8d39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d37));
        EXPECT(0x13, gbc.readMem(0x8d38));
        // CB 13 0205
        gbc.setState(0xbd2c, 0xcfe0, 0x4db0, 0xbbe4, 0xa6ca, 0x5263, 0x0, 0x0);
        gbc.writeMem(0xbd2c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcfe0, gbc.sp());
        EXPECT(0xbd2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd2c));
        EXPECT(0x13, gbc.readMem(0xbd2d));
        // CB 13 0206
        gbc.setState(0x988c, 0x90d8, 0xa610, 0x6742, 0xa407, 0x3fe6, 0x1, 0x1);
        gbc.writeMem(0x988c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x90d8, gbc.sp());
        EXPECT(0x988e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x988c));
        EXPECT(0x13, gbc.readMem(0x988d));
        // CB 13 0207
        gbc.setState(0x816, 0xfa5, 0x7460, 0xc01b, 0x2827, 0x9f7e, 0x0, 0x0);
        gbc.writeMem(0x816, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfa5, gbc.sp());
        EXPECT(0x818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0208
        gbc.setState(0x5a2e, 0xdf9c, 0xdd0, 0xa5de, 0x968e, 0x44dd, 0x0, 0x1);
        gbc.writeMem(0x5a2e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdf9c, gbc.sp());
        EXPECT(0x5a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0209
        gbc.setState(0x6320, 0x1505, 0x33b0, 0x74b4, 0x2558, 0xc4f0, 0x1, 0x0);
        gbc.writeMem(0x6320, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1505, gbc.sp());
        EXPECT(0x6322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 020A
        gbc.setState(0xe63c, 0x8751, 0xf770, 0xd49d, 0x22bd, 0xcb11, 0x0, 0x1);
        gbc.writeMem(0xe63c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8751, gbc.sp());
        EXPECT(0xe63e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe63c));
        EXPECT(0x13, gbc.readMem(0xe63d));
        // CB 13 020B
        gbc.setState(0x8ebc, 0xec80, 0x3ea0, 0x76, 0x1328, 0x18aa, 0x0, 0x0);
        gbc.writeMem(0x8ebc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xec80, gbc.sp());
        EXPECT(0x8ebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ebc));
        EXPECT(0x13, gbc.readMem(0x8ebd));
        // CB 13 020D
        gbc.setState(0x6c74, 0x9447, 0x42a0, 0x5c31, 0x7473, 0x5398, 0x0, 0x1);
        gbc.writeMem(0x6c74, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9447, gbc.sp());
        EXPECT(0x6c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 020E
        gbc.setState(0x7e8d, 0x7b02, 0x1eb0, 0x79f7, 0xbcf, 0xe9e2, 0x0, 0x0);
        gbc.writeMem(0x7e8d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7b02, gbc.sp());
        EXPECT(0x7e8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 020F
        gbc.setState(0xbf74, 0xdecf, 0x3260, 0x9485, 0x5c1b, 0xac1c, 0x0, 0x1);
        gbc.writeMem(0xbf74, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdecf, gbc.sp());
        EXPECT(0xbf76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf74));
        EXPECT(0x13, gbc.readMem(0xbf75));
        // CB 13 0210
        gbc.setState(0x97e2, 0x9f5a, 0x4a30, 0xc1de, 0x369b, 0x6e5e, 0x1, 0x1);
        gbc.writeMem(0x97e2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9f5a, gbc.sp());
        EXPECT(0x97e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97e2));
        EXPECT(0x13, gbc.readMem(0x97e3));
        // CB 13 0211
        gbc.setState(0x2a06, 0x4fd, 0xa260, 0xabb2, 0xcdd, 0x2fd9, 0x0, 0x1);
        gbc.writeMem(0x2a06, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4fd, gbc.sp());
        EXPECT(0x2a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0212
        gbc.setState(0xd244, 0x8a80, 0x1920, 0x1e6c, 0xb51f, 0x5e0c, 0x1, 0x0);
        gbc.writeMem(0xd244, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8a80, gbc.sp());
        EXPECT(0xd246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd244));
        EXPECT(0x13, gbc.readMem(0xd245));
        // CB 13 0213
        gbc.setState(0x93df, 0xc0bc, 0x1590, 0xff3c, 0x14c2, 0xce35, 0x0, 0x0);
        gbc.writeMem(0x93df, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc0bc, gbc.sp());
        EXPECT(0x93e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93df));
        EXPECT(0x13, gbc.readMem(0x93e0));
        // CB 13 0214
        gbc.setState(0x2416, 0x8de1, 0x8ef0, 0xf806, 0x8a39, 0x8823, 0x1, 0x0);
        gbc.writeMem(0x2416, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8de1, gbc.sp());
        EXPECT(0x2418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0215
        gbc.setState(0x82e4, 0x3fea, 0x4090, 0x2e55, 0x3e57, 0xad82, 0x1, 0x0);
        gbc.writeMem(0x82e4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3fea, gbc.sp());
        EXPECT(0x82e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e4));
        EXPECT(0x13, gbc.readMem(0x82e5));
        // CB 13 0216
        gbc.setState(0xc01c, 0x6e74, 0x6240, 0xfb48, 0x1956, 0x221d, 0x0, 0x1);
        gbc.writeMem(0xc01c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6e74, gbc.sp());
        EXPECT(0xc01e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc01c));
        EXPECT(0x13, gbc.readMem(0xc01d));
        // CB 13 0217
        gbc.setState(0x81a3, 0x15ff, 0x8170, 0xed49, 0xde6a, 0xb440, 0x1, 0x1);
        gbc.writeMem(0x81a3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x15ff, gbc.sp());
        EXPECT(0x81a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81a3));
        EXPECT(0x13, gbc.readMem(0x81a4));
        // CB 13 0218
        gbc.setState(0x9c03, 0xa20c, 0x32d0, 0x5ff1, 0x4474, 0xfddc, 0x0, 0x1);
        gbc.writeMem(0x9c03, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa20c, gbc.sp());
        EXPECT(0x9c05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c03));
        EXPECT(0x13, gbc.readMem(0x9c04));
        // CB 13 0219
        gbc.setState(0x6ecb, 0x1d56, 0xbd60, 0xf76c, 0xff25, 0x1353, 0x1, 0x0);
        gbc.writeMem(0x6ecb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1d56, gbc.sp());
        EXPECT(0x6ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 021A
        gbc.setState(0x565e, 0x9660, 0xda40, 0xa7a0, 0xa7a6, 0xd9cf, 0x0, 0x0);
        gbc.writeMem(0x565e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9660, gbc.sp());
        EXPECT(0x5660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 021B
        gbc.setState(0xd672, 0x3b62, 0xf2e0, 0x6338, 0xa12b, 0x8b4, 0x1, 0x1);
        gbc.writeMem(0xd672, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3b62, gbc.sp());
        EXPECT(0xd674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd672));
        EXPECT(0x13, gbc.readMem(0xd673));
        // CB 13 021C
        gbc.setState(0x564e, 0x3054, 0x4940, 0x4023, 0x8aab, 0xc737, 0x1, 0x1);
        gbc.writeMem(0x564e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3054, gbc.sp());
        EXPECT(0x5650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 021D
        gbc.setState(0x726d, 0xe6dd, 0x8f30, 0x333d, 0xc21a, 0x399a, 0x1, 0x0);
        gbc.writeMem(0x726d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe6dd, gbc.sp());
        EXPECT(0x726f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 021E
        gbc.setState(0x96c5, 0xd12a, 0xedd0, 0x1b1a, 0x10d2, 0x12ab, 0x1, 0x0);
        gbc.writeMem(0x96c5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd12a, gbc.sp());
        EXPECT(0x96c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c5));
        EXPECT(0x13, gbc.readMem(0x96c6));
        // CB 13 021F
        gbc.setState(0x5dd3, 0xb248, 0xd5b0, 0x9f69, 0x57f9, 0x567a, 0x0, 0x1);
        gbc.writeMem(0x5dd3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb248, gbc.sp());
        EXPECT(0x5dd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0221
        gbc.setState(0xcdf0, 0x77b8, 0x8b70, 0x578f, 0x6544, 0x8c8a, 0x1, 0x0);
        gbc.writeMem(0xcdf0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x77b8, gbc.sp());
        EXPECT(0xcdf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdf0));
        EXPECT(0x13, gbc.readMem(0xcdf1));
        // CB 13 0222
        gbc.setState(0xa257, 0x5456, 0xa6d0, 0xc487, 0xdc7f, 0x694, 0x0, 0x1);
        gbc.writeMem(0xa257, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5456, gbc.sp());
        EXPECT(0xa259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa257));
        EXPECT(0x13, gbc.readMem(0xa258));
        // CB 13 0223
        gbc.setState(0x21c7, 0x93e1, 0xa2b0, 0xb842, 0xea6f, 0x3218, 0x0, 0x1);
        gbc.writeMem(0x21c7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x93e1, gbc.sp());
        EXPECT(0x21c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0224
        gbc.setState(0xb52, 0x8370, 0xce70, 0x9775, 0x2442, 0xf07a, 0x0, 0x0);
        gbc.writeMem(0xb52, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8370, gbc.sp());
        EXPECT(0xb54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0225
        gbc.setState(0xe89d, 0xe1c7, 0x1620, 0xa38c, 0xdd12, 0x9779, 0x0, 0x1);
        gbc.writeMem(0xe89d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe1c7, gbc.sp());
        EXPECT(0xe89f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe89d));
        EXPECT(0x13, gbc.readMem(0xe89e));
        // CB 13 0226
        gbc.setState(0xd201, 0x4297, 0xdab0, 0xc82f, 0x5b5f, 0xad31, 0x1, 0x0);
        gbc.writeMem(0xd201, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4297, gbc.sp());
        EXPECT(0xd203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd201));
        EXPECT(0x13, gbc.readMem(0xd202));
        // CB 13 0227
        gbc.setState(0x5094, 0x7895, 0x2e10, 0x4b8, 0xebeb, 0x91a1, 0x1, 0x1);
        gbc.writeMem(0x5094, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7895, gbc.sp());
        EXPECT(0x5096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0228
        gbc.setState(0x950b, 0x27d1, 0xc960, 0x5338, 0xe5e6, 0xa695, 0x1, 0x1);
        gbc.writeMem(0x950b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x27d1, gbc.sp());
        EXPECT(0x950d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x950b));
        EXPECT(0x13, gbc.readMem(0x950c));
        // CB 13 0229
        gbc.setState(0x7fd9, 0x8121, 0xa1f0, 0xb057, 0xe656, 0x225d, 0x0, 0x0);
        gbc.writeMem(0x7fd9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8121, gbc.sp());
        EXPECT(0x7fdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 022A
        gbc.setState(0x28, 0xfe71, 0x9260, 0xe009, 0x2362, 0xcb16, 0x1, 0x1);
        gbc.writeMem(0x28, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfe71, gbc.sp());
        EXPECT(0x2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 022B
        gbc.setState(0xb007, 0xa930, 0x33d0, 0x38cd, 0xb4f6, 0xced4, 0x1, 0x0);
        gbc.writeMem(0xb007, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa930, gbc.sp());
        EXPECT(0xb009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb007));
        EXPECT(0x13, gbc.readMem(0xb008));
        // CB 13 022C
        gbc.setState(0x54af, 0x2fd6, 0x6d80, 0x66a, 0xe896, 0x4733, 0x1, 0x1);
        gbc.writeMem(0x54af, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2fd6, gbc.sp());
        EXPECT(0x54b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 022D
        gbc.setState(0x18e6, 0x1e28, 0xb510, 0xbf7c, 0x60bf, 0x2b04, 0x0, 0x1);
        gbc.writeMem(0x18e6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1e28, gbc.sp());
        EXPECT(0x18e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 022E
        gbc.setState(0xba9a, 0x6f62, 0x70d0, 0xdb63, 0xc338, 0x2e, 0x0, 0x0);
        gbc.writeMem(0xba9a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6f62, gbc.sp());
        EXPECT(0xba9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba9a));
        EXPECT(0x13, gbc.readMem(0xba9b));
        // CB 13 022F
        gbc.setState(0x3f2d, 0xd0d9, 0x9b60, 0x5807, 0xaa31, 0x6e40, 0x0, 0x1);
        gbc.writeMem(0x3f2d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd0d9, gbc.sp());
        EXPECT(0x3f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0230
        gbc.setState(0xaf62, 0x766f, 0x8a60, 0x3b65, 0x646, 0x5f32, 0x1, 0x1);
        gbc.writeMem(0xaf62, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x766f, gbc.sp());
        EXPECT(0xaf64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf62));
        EXPECT(0x13, gbc.readMem(0xaf63));
        // CB 13 0231
        gbc.setState(0x8a96, 0x7556, 0xe490, 0xdd3d, 0x17e6, 0x6a93, 0x0, 0x0);
        gbc.writeMem(0x8a96, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7556, gbc.sp());
        EXPECT(0x8a98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a96));
        EXPECT(0x13, gbc.readMem(0x8a97));
        // CB 13 0232
        gbc.setState(0xe076, 0x6d26, 0x5610, 0x89c8, 0x444, 0x7132, 0x0, 0x1);
        gbc.writeMem(0xe076, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6d26, gbc.sp());
        EXPECT(0xe078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe076));
        EXPECT(0x13, gbc.readMem(0xe077));
        // CB 13 0233
        gbc.setState(0x8112, 0x4581, 0xb750, 0xdab8, 0x54e3, 0x82ca, 0x1, 0x0);
        gbc.writeMem(0x8112, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4581, gbc.sp());
        EXPECT(0x8114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8112));
        EXPECT(0x13, gbc.readMem(0x8113));
        // CB 13 0234
        gbc.setState(0xbd7d, 0x2c7d, 0x6410, 0xcc1b, 0x859a, 0x860, 0x1, 0x1);
        gbc.writeMem(0xbd7d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2c7d, gbc.sp());
        EXPECT(0xbd7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd7d));
        EXPECT(0x13, gbc.readMem(0xbd7e));
        // CB 13 0236
        gbc.setState(0x4570, 0x6ac1, 0x470, 0x63b8, 0xc6ba, 0xeafd, 0x1, 0x0);
        gbc.writeMem(0x4570, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6ac1, gbc.sp());
        EXPECT(0x4572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0237
        gbc.setState(0x2544, 0xa274, 0xd4d0, 0xc42e, 0x5fd3, 0x475b, 0x1, 0x0);
        gbc.writeMem(0x2544, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa274, gbc.sp());
        EXPECT(0x2546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0238
        gbc.setState(0x6652, 0xc7a0, 0x6b10, 0x5f7d, 0x925f, 0xd374, 0x1, 0x0);
        gbc.writeMem(0x6652, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc7a0, gbc.sp());
        EXPECT(0x6654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0239
        gbc.setState(0x6cf2, 0xc757, 0x8680, 0x483a, 0x4192, 0x5bc8, 0x1, 0x0);
        gbc.writeMem(0x6cf2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc757, gbc.sp());
        EXPECT(0x6cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 023A
        gbc.setState(0x6031, 0x3186, 0x6590, 0xdf43, 0x2d07, 0x7116, 0x0, 0x1);
        gbc.writeMem(0x6031, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3186, gbc.sp());
        EXPECT(0x6033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 023B
        gbc.setState(0xb25e, 0xea60, 0x37f0, 0x5769, 0xc731, 0x4bbe, 0x0, 0x0);
        gbc.writeMem(0xb25e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xea60, gbc.sp());
        EXPECT(0xb260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb25e));
        EXPECT(0x13, gbc.readMem(0xb25f));
        // CB 13 023C
        gbc.setState(0x97a, 0x5c42, 0xb960, 0x3c76, 0xd724, 0x8b7d, 0x1, 0x0);
        gbc.writeMem(0x97a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5c42, gbc.sp());
        EXPECT(0x97c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 023D
        gbc.setState(0xac11, 0x7142, 0xe580, 0xe26b, 0x53b0, 0xef9f, 0x1, 0x0);
        gbc.writeMem(0xac11, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7142, gbc.sp());
        EXPECT(0xac13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac11));
        EXPECT(0x13, gbc.readMem(0xac12));
        // CB 13 023E
        gbc.setState(0x9eb8, 0xe360, 0xb540, 0xcb04, 0x8308, 0xcbd5, 0x0, 0x1);
        gbc.writeMem(0x9eb8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe360, gbc.sp());
        EXPECT(0x9eba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eb8));
        EXPECT(0x13, gbc.readMem(0x9eb9));
        // CB 13 023F
        gbc.setState(0x4bb2, 0x5bd4, 0xac0, 0x4ba2, 0x6f73, 0xd2b7, 0x0, 0x1);
        gbc.writeMem(0x4bb2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5bd4, gbc.sp());
        EXPECT(0x4bb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0240
        gbc.setState(0x95c8, 0x5c28, 0x4630, 0x4c4e, 0xdfd0, 0x1422, 0x0, 0x1);
        gbc.writeMem(0x95c8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5c28, gbc.sp());
        EXPECT(0x95ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95c8));
        EXPECT(0x13, gbc.readMem(0x95c9));
        // CB 13 0241
        gbc.setState(0xc420, 0x44ca, 0xde50, 0x1105, 0x9ad9, 0x13df, 0x1, 0x0);
        gbc.writeMem(0xc420, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x44ca, gbc.sp());
        EXPECT(0xc422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc420));
        EXPECT(0x13, gbc.readMem(0xc421));
        // CB 13 0242
        gbc.setState(0xee16, 0x22ad, 0x88f0, 0xabbd, 0x7a6f, 0xfe52, 0x0, 0x0);
        gbc.writeMem(0xee16, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x22ad, gbc.sp());
        EXPECT(0xee18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee16));
        EXPECT(0x13, gbc.readMem(0xee17));
        // CB 13 0243
        gbc.setState(0xc2bb, 0xe22d, 0x43d0, 0x58b1, 0xcdf3, 0xf5aa, 0x1, 0x0);
        gbc.writeMem(0xc2bb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe22d, gbc.sp());
        EXPECT(0xc2bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2bb));
        EXPECT(0x13, gbc.readMem(0xc2bc));
        // CB 13 0244
        gbc.setState(0x9cc1, 0x79ca, 0xdf0, 0xec00, 0x6ee2, 0x219e, 0x0, 0x0);
        gbc.writeMem(0x9cc1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x79ca, gbc.sp());
        EXPECT(0x9cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cc1));
        EXPECT(0x13, gbc.readMem(0x9cc2));
        // CB 13 0245
        gbc.setState(0x36b2, 0x4a22, 0xc470, 0x5c83, 0x6bad, 0x959, 0x0, 0x0);
        gbc.writeMem(0x36b2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4a22, gbc.sp());
        EXPECT(0x36b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0246
        gbc.setState(0x1b6a, 0x55a0, 0x6b70, 0x3262, 0x49fd, 0x60d1, 0x0, 0x0);
        gbc.writeMem(0x1b6a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x55a0, gbc.sp());
        EXPECT(0x1b6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0247
        gbc.setState(0xe351, 0x2e66, 0xdd0, 0x5396, 0xdce8, 0xd352, 0x0, 0x0);
        gbc.writeMem(0xe351, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2e66, gbc.sp());
        EXPECT(0xe353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe351));
        EXPECT(0x13, gbc.readMem(0xe352));
        // CB 13 0248
        gbc.setState(0xc89a, 0x7e56, 0xb7c0, 0xc8b0, 0xfb8d, 0x9df0, 0x0, 0x0);
        gbc.writeMem(0xc89a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7e56, gbc.sp());
        EXPECT(0xc89c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc89a));
        EXPECT(0x13, gbc.readMem(0xc89b));
        // CB 13 0249
        gbc.setState(0xefc8, 0xee64, 0xb430, 0x40c1, 0x6957, 0xe905, 0x1, 0x0);
        gbc.writeMem(0xefc8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xee64, gbc.sp());
        EXPECT(0xefca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc8));
        EXPECT(0x13, gbc.readMem(0xefc9));
        // CB 13 024A
        gbc.setState(0x37e0, 0xcb72, 0xb8d0, 0x866f, 0x787e, 0x69f0, 0x1, 0x1);
        gbc.writeMem(0x37e0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xcb72, gbc.sp());
        EXPECT(0x37e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 024B
        gbc.setState(0xbbe4, 0xbf06, 0x91a0, 0x49a1, 0xdd9f, 0x5e7a, 0x0, 0x1);
        gbc.writeMem(0xbbe4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbf06, gbc.sp());
        EXPECT(0xbbe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe4));
        EXPECT(0x13, gbc.readMem(0xbbe5));
        // CB 13 024C
        gbc.setState(0x1401, 0xfec5, 0xdd00, 0xf103, 0x57d2, 0x8475, 0x1, 0x0);
        gbc.writeMem(0x1401, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfec5, gbc.sp());
        EXPECT(0x1403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 024D
        gbc.setState(0x66f2, 0x4d6f, 0xad20, 0x20ed, 0xbb24, 0x10cf, 0x1, 0x1);
        gbc.writeMem(0x66f2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4d6f, gbc.sp());
        EXPECT(0x66f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 024E
        gbc.setState(0x201e, 0xade0, 0xfd60, 0xdb4b, 0xdbcd, 0x496f, 0x1, 0x0);
        gbc.writeMem(0x201e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xade0, gbc.sp());
        EXPECT(0x2020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 024F
        gbc.setState(0x47a7, 0xf3b3, 0xb0e0, 0x2ce7, 0x2dca, 0xe500, 0x1, 0x1);
        gbc.writeMem(0x47a7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf3b3, gbc.sp());
        EXPECT(0x47a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0251
        gbc.setState(0xb6c0, 0x2892, 0xfbe0, 0xc18e, 0xa8fe, 0x2b21, 0x0, 0x1);
        gbc.writeMem(0xb6c0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2892, gbc.sp());
        EXPECT(0xb6c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c0));
        EXPECT(0x13, gbc.readMem(0xb6c1));
        // CB 13 0252
        gbc.setState(0x8d7e, 0xb679, 0x48b0, 0xcd36, 0x6b18, 0x3ca, 0x1, 0x0);
        gbc.writeMem(0x8d7e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb679, gbc.sp());
        EXPECT(0x8d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d7e));
        EXPECT(0x13, gbc.readMem(0x8d7f));
        // CB 13 0253
        gbc.setState(0xb2e5, 0x61bc, 0x16d0, 0x2659, 0x5456, 0x6f4d, 0x0, 0x0);
        gbc.writeMem(0xb2e5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x61bc, gbc.sp());
        EXPECT(0xb2e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e5));
        EXPECT(0x13, gbc.readMem(0xb2e6));
        // CB 13 0254
        gbc.setState(0x3d5e, 0xf707, 0x4000, 0x9dbe, 0xf2d1, 0x3e72, 0x1, 0x1);
        gbc.writeMem(0x3d5e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf707, gbc.sp());
        EXPECT(0x3d60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0255
        gbc.setState(0xa91b, 0x708f, 0xcb80, 0x3b4e, 0xaf6f, 0xae1b, 0x0, 0x0);
        gbc.writeMem(0xa91b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x708f, gbc.sp());
        EXPECT(0xa91d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa91b));
        EXPECT(0x13, gbc.readMem(0xa91c));
        // CB 13 0256
        gbc.setState(0xcf23, 0x84c, 0xf710, 0x6c39, 0xe677, 0x357, 0x1, 0x1);
        gbc.writeMem(0xcf23, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x84c, gbc.sp());
        EXPECT(0xcf25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf23));
        EXPECT(0x13, gbc.readMem(0xcf24));
        // CB 13 0257
        gbc.setState(0xb7a7, 0x6c20, 0xe270, 0x7846, 0x998b, 0x5296, 0x1, 0x1);
        gbc.writeMem(0xb7a7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6c20, gbc.sp());
        EXPECT(0xb7a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7a7));
        EXPECT(0x13, gbc.readMem(0xb7a8));
        // CB 13 0258
        gbc.setState(0x6290, 0x9ae0, 0x4290, 0xbf5d, 0x6aca, 0x9be9, 0x0, 0x0);
        gbc.writeMem(0x6290, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9ae0, gbc.sp());
        EXPECT(0x6292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0259
        gbc.setState(0xa07, 0xe47d, 0x3920, 0xfea8, 0x2396, 0x821b, 0x1, 0x1);
        gbc.writeMem(0xa07, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe47d, gbc.sp());
        EXPECT(0xa09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 025A
        gbc.setState(0x5b10, 0x2f9d, 0x8cd0, 0x87d7, 0x3ed7, 0x13d2, 0x1, 0x0);
        gbc.writeMem(0x5b10, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2f9d, gbc.sp());
        EXPECT(0x5b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 025B
        gbc.setState(0x9f06, 0x18d7, 0x89a0, 0xcdeb, 0x67d, 0x969a, 0x1, 0x1);
        gbc.writeMem(0x9f06, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x18d7, gbc.sp());
        EXPECT(0x9f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f06));
        EXPECT(0x13, gbc.readMem(0x9f07));
        // CB 13 025C
        gbc.setState(0x3c1f, 0x9483, 0xdb60, 0x3e4c, 0x1bf2, 0xcc99, 0x0, 0x1);
        gbc.writeMem(0x3c1f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9483, gbc.sp());
        EXPECT(0x3c21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 025D
        gbc.setState(0x4ff2, 0x6ae2, 0xe70, 0x51e4, 0xef4a, 0x236e, 0x1, 0x0);
        gbc.writeMem(0x4ff2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6ae2, gbc.sp());
        EXPECT(0x4ff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 025E
        gbc.setState(0x38fa, 0x94a5, 0xf5c0, 0x4625, 0x7690, 0x7db1, 0x0, 0x0);
        gbc.writeMem(0x38fa, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x94a5, gbc.sp());
        EXPECT(0x38fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 025F
        gbc.setState(0x2721, 0xd4fc, 0x7f80, 0x2ab5, 0x1487, 0x1184, 0x1, 0x1);
        gbc.writeMem(0x2721, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd4fc, gbc.sp());
        EXPECT(0x2723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0260
        gbc.setState(0x8bdf, 0x702d, 0x8bc0, 0xca6f, 0x5b7f, 0xf00d, 0x0, 0x0);
        gbc.writeMem(0x8bdf, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x702d, gbc.sp());
        EXPECT(0x8be1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bdf));
        EXPECT(0x13, gbc.readMem(0x8be0));
        // CB 13 0261
        gbc.setState(0x858d, 0x7097, 0x2d50, 0x1cc, 0x59ef, 0x90f8, 0x0, 0x1);
        gbc.writeMem(0x858d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7097, gbc.sp());
        EXPECT(0x858f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x858d));
        EXPECT(0x13, gbc.readMem(0x858e));
        // CB 13 0262
        gbc.setState(0xe3bd, 0x12eb, 0x4d90, 0x695d, 0x8da6, 0x1bba, 0x1, 0x0);
        gbc.writeMem(0xe3bd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x12eb, gbc.sp());
        EXPECT(0xe3bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3bd));
        EXPECT(0x13, gbc.readMem(0xe3be));
        // CB 13 0263
        gbc.setState(0x1014, 0xe7ec, 0x36e0, 0x389c, 0xf029, 0x8c61, 0x1, 0x1);
        gbc.writeMem(0x1014, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe7ec, gbc.sp());
        EXPECT(0x1016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0264
        gbc.setState(0x5c09, 0xea9c, 0xaa40, 0x66ff, 0xe6c5, 0x9543, 0x0, 0x0);
        gbc.writeMem(0x5c09, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xea9c, gbc.sp());
        EXPECT(0x5c0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0265
        gbc.setState(0x70c, 0x1961, 0x1d20, 0x268a, 0x48df, 0xe0a0, 0x0, 0x0);
        gbc.writeMem(0x70c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1961, gbc.sp());
        EXPECT(0x70e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0266
        gbc.setState(0xe85a, 0xa2d4, 0x3580, 0x9420, 0x5fd2, 0xd4dc, 0x0, 0x0);
        gbc.writeMem(0xe85a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa2d4, gbc.sp());
        EXPECT(0xe85c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe85a));
        EXPECT(0x13, gbc.readMem(0xe85b));
        // CB 13 0267
        gbc.setState(0x7a69, 0x37d2, 0xa0f0, 0xa808, 0x2590, 0x2755, 0x0, 0x1);
        gbc.writeMem(0x7a69, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x37d2, gbc.sp());
        EXPECT(0x7a6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0268
        gbc.setState(0x8b23, 0x9d5c, 0x5150, 0xab0b, 0xb179, 0x7a13, 0x0, 0x0);
        gbc.writeMem(0x8b23, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9d5c, gbc.sp());
        EXPECT(0x8b25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b23));
        EXPECT(0x13, gbc.readMem(0x8b24));
        // CB 13 0269
        gbc.setState(0x40a5, 0x5f0, 0x8480, 0xf2d8, 0x7f14, 0xe046, 0x1, 0x0);
        gbc.writeMem(0x40a5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5f0, gbc.sp());
        EXPECT(0x40a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 026A
        gbc.setState(0x81d8, 0x9cd3, 0x3130, 0x7549, 0x1f30, 0xd2ad, 0x0, 0x1);
        gbc.writeMem(0x81d8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9cd3, gbc.sp());
        EXPECT(0x81da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81d8));
        EXPECT(0x13, gbc.readMem(0x81d9));
        // CB 13 026B
        gbc.setState(0xdae1, 0xcd1c, 0x8ab0, 0x5b46, 0xbdea, 0x734d, 0x0, 0x0);
        gbc.writeMem(0xdae1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xcd1c, gbc.sp());
        EXPECT(0xdae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae1));
        EXPECT(0x13, gbc.readMem(0xdae2));
        // CB 13 026C
        gbc.setState(0xce2d, 0xe5c7, 0x3770, 0xe843, 0xc2af, 0xf7cc, 0x1, 0x0);
        gbc.writeMem(0xce2d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe5c7, gbc.sp());
        EXPECT(0xce2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce2d));
        EXPECT(0x13, gbc.readMem(0xce2e));
        // CB 13 026D
        gbc.setState(0x4616, 0xf4cb, 0x1cd0, 0x93ff, 0xc3f, 0xfa37, 0x1, 0x0);
        gbc.writeMem(0x4616, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf4cb, gbc.sp());
        EXPECT(0x4618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 026E
        gbc.setState(0xc5cd, 0x706b, 0xc0c0, 0x80b0, 0xeae, 0x5989, 0x1, 0x1);
        gbc.writeMem(0xc5cd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x706b, gbc.sp());
        EXPECT(0xc5cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5cd));
        EXPECT(0x13, gbc.readMem(0xc5ce));
        // CB 13 026F
        gbc.setState(0x5dbc, 0x1fb5, 0x6160, 0x9fc3, 0xbf5c, 0x1580, 0x1, 0x0);
        gbc.writeMem(0x5dbc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1fb5, gbc.sp());
        EXPECT(0x5dbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0270
        gbc.setState(0xe626, 0xa59b, 0x4e10, 0x1905, 0xb36c, 0xb85c, 0x0, 0x0);
        gbc.writeMem(0xe626, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa59b, gbc.sp());
        EXPECT(0xe628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe626));
        EXPECT(0x13, gbc.readMem(0xe627));
        // CB 13 0272
        gbc.setState(0x34f2, 0x54cd, 0xb2e0, 0x14fc, 0x7f7d, 0xa65e, 0x1, 0x0);
        gbc.writeMem(0x34f2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x54cd, gbc.sp());
        EXPECT(0x34f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0273
        gbc.setState(0xc4d1, 0x1115, 0x8280, 0x7358, 0xd59f, 0x8f22, 0x0, 0x0);
        gbc.writeMem(0xc4d1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1115, gbc.sp());
        EXPECT(0xc4d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d1));
        EXPECT(0x13, gbc.readMem(0xc4d2));
        // CB 13 0274
        gbc.setState(0xc373, 0xc3f7, 0xe600, 0x8531, 0xa72f, 0x1299, 0x0, 0x1);
        gbc.writeMem(0xc373, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc3f7, gbc.sp());
        EXPECT(0xc375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc373));
        EXPECT(0x13, gbc.readMem(0xc374));
        // CB 13 0275
        gbc.setState(0x2762, 0xdf0c, 0xc3f0, 0xfd90, 0x8caf, 0x2ebd, 0x0, 0x1);
        gbc.writeMem(0x2762, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xdf0c, gbc.sp());
        EXPECT(0x2764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0276
        gbc.setState(0x3dd3, 0x7f6c, 0xd930, 0x6ab5, 0x724f, 0x5925, 0x1, 0x0);
        gbc.writeMem(0x3dd3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7f6c, gbc.sp());
        EXPECT(0x3dd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0277
        gbc.setState(0x84e2, 0x776b, 0xefa0, 0x50cc, 0x712e, 0xe10a, 0x1, 0x0);
        gbc.writeMem(0x84e2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x776b, gbc.sp());
        EXPECT(0x84e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e2));
        EXPECT(0x13, gbc.readMem(0x84e3));
        // CB 13 0278
        gbc.setState(0xafb7, 0x316f, 0x1dc0, 0xfbd5, 0x846f, 0x4773, 0x1, 0x0);
        gbc.writeMem(0xafb7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x316f, gbc.sp());
        EXPECT(0xafb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb7));
        EXPECT(0x13, gbc.readMem(0xafb8));
        // CB 13 0279
        gbc.setState(0x351e, 0x6217, 0xeea0, 0x444a, 0x9eb1, 0xa1aa, 0x0, 0x1);
        gbc.writeMem(0x351e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6217, gbc.sp());
        EXPECT(0x3520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 027A
        gbc.setState(0xc3da, 0xdb7c, 0xdbc0, 0x764f, 0x892c, 0x7d0b, 0x0, 0x0);
        gbc.writeMem(0xc3da, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xdb7c, gbc.sp());
        EXPECT(0xc3dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3da));
        EXPECT(0x13, gbc.readMem(0xc3db));
        // CB 13 027B
        gbc.setState(0xad38, 0x92ad, 0x5a00, 0x4191, 0x4b7f, 0x6276, 0x0, 0x1);
        gbc.writeMem(0xad38, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x92ad, gbc.sp());
        EXPECT(0xad3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad38));
        EXPECT(0x13, gbc.readMem(0xad39));
        // CB 13 027C
        gbc.setState(0x9fec, 0x45f1, 0xf6b0, 0xd171, 0x2ac3, 0xc4b, 0x1, 0x0);
        gbc.writeMem(0x9fec, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x45f1, gbc.sp());
        EXPECT(0x9fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fec));
        EXPECT(0x13, gbc.readMem(0x9fed));
        // CB 13 027D
        gbc.setState(0x5149, 0xdb82, 0xa0d0, 0x5320, 0x123e, 0xf6c9, 0x1, 0x0);
        gbc.writeMem(0x5149, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdb82, gbc.sp());
        EXPECT(0x514b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 027E
        gbc.setState(0x6e17, 0x3263, 0x7f0, 0x9274, 0x66d6, 0xcf30, 0x0, 0x0);
        gbc.writeMem(0x6e17, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3263, gbc.sp());
        EXPECT(0x6e19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 027F
        gbc.setState(0x8a43, 0x6817, 0xb400, 0xbafb, 0xd6eb, 0xf808, 0x0, 0x0);
        gbc.writeMem(0x8a43, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6817, gbc.sp());
        EXPECT(0x8a45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a43));
        EXPECT(0x13, gbc.readMem(0x8a44));
        // CB 13 0280
        gbc.setState(0xd8c4, 0x918a, 0x86d0, 0x19d6, 0x9169, 0x406b, 0x0, 0x1);
        gbc.writeMem(0xd8c4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x918a, gbc.sp());
        EXPECT(0xd8c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8c4));
        EXPECT(0x13, gbc.readMem(0xd8c5));
        // CB 13 0281
        gbc.setState(0x65cc, 0x142c, 0xae30, 0x110, 0x29fb, 0x39d9, 0x0, 0x0);
        gbc.writeMem(0x65cc, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x142c, gbc.sp());
        EXPECT(0x65ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0282
        gbc.setState(0xb145, 0xce21, 0xd8d0, 0xb81e, 0xc65, 0xe7c1, 0x1, 0x0);
        gbc.writeMem(0xb145, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xce21, gbc.sp());
        EXPECT(0xb147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb145));
        EXPECT(0x13, gbc.readMem(0xb146));
        // CB 13 0283
        gbc.setState(0xdd5e, 0x68ca, 0x6ff0, 0x749c, 0xb065, 0x11b6, 0x0, 0x0);
        gbc.writeMem(0xdd5e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x68ca, gbc.sp());
        EXPECT(0xdd60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd5e));
        EXPECT(0x13, gbc.readMem(0xdd5f));
        // CB 13 0284
        gbc.setState(0x89f2, 0x58bd, 0x8710, 0x6885, 0x2f04, 0xde5, 0x0, 0x1);
        gbc.writeMem(0x89f2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x58bd, gbc.sp());
        EXPECT(0x89f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89f2));
        EXPECT(0x13, gbc.readMem(0x89f3));
        // CB 13 0285
        gbc.setState(0x2d86, 0x75c7, 0x1490, 0x851e, 0x4cfc, 0xf19f, 0x1, 0x1);
        gbc.writeMem(0x2d86, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x75c7, gbc.sp());
        EXPECT(0x2d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0286
        gbc.setState(0x937c, 0xde6e, 0x57b0, 0xe7cb, 0x115b, 0xc42, 0x1, 0x0);
        gbc.writeMem(0x937c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xde6e, gbc.sp());
        EXPECT(0x937e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x937c));
        EXPECT(0x13, gbc.readMem(0x937d));
        // CB 13 0287
        gbc.setState(0xbeb7, 0x57ed, 0xd900, 0x4b23, 0xdd, 0xd8fb, 0x1, 0x1);
        gbc.writeMem(0xbeb7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x57ed, gbc.sp());
        EXPECT(0xbeb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeb7));
        EXPECT(0x13, gbc.readMem(0xbeb8));
        // CB 13 0288
        gbc.setState(0xbd81, 0x49e9, 0x1050, 0x4ef7, 0x9c8b, 0x6d19, 0x1, 0x0);
        gbc.writeMem(0xbd81, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x49e9, gbc.sp());
        EXPECT(0xbd83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd81));
        EXPECT(0x13, gbc.readMem(0xbd82));
        // CB 13 0289
        gbc.setState(0xa56e, 0x1fbc, 0xe900, 0xf129, 0x7605, 0x284d, 0x1, 0x0);
        gbc.writeMem(0xa56e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1fbc, gbc.sp());
        EXPECT(0xa570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa56e));
        EXPECT(0x13, gbc.readMem(0xa56f));
        // CB 13 028A
        gbc.setState(0xdae7, 0x4962, 0x4710, 0x4a14, 0x6557, 0x8960, 0x1, 0x1);
        gbc.writeMem(0xdae7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4962, gbc.sp());
        EXPECT(0xdae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae7));
        EXPECT(0x13, gbc.readMem(0xdae8));
        // CB 13 028B
        gbc.setState(0x86ae, 0xe7b5, 0xe530, 0x670e, 0xf279, 0x84e6, 0x0, 0x1);
        gbc.writeMem(0x86ae, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe7b5, gbc.sp());
        EXPECT(0x86b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ae));
        EXPECT(0x13, gbc.readMem(0x86af));
        // CB 13 028C
        gbc.setState(0x74a8, 0x5aa3, 0xee70, 0x3a9c, 0xcb56, 0xa70d, 0x1, 0x1);
        gbc.writeMem(0x74a8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5aa3, gbc.sp());
        EXPECT(0x74aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 028D
        gbc.setState(0x24c8, 0x5315, 0x3210, 0x75b7, 0x1c01, 0x88af, 0x0, 0x0);
        gbc.writeMem(0x24c8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5315, gbc.sp());
        EXPECT(0x24ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 028E
        gbc.setState(0x4514, 0x8f3d, 0x18e0, 0xe713, 0xb334, 0xf80a, 0x1, 0x1);
        gbc.writeMem(0x4514, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8f3d, gbc.sp());
        EXPECT(0x4516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 028F
        gbc.setState(0x49ad, 0x746b, 0x8930, 0x9cf8, 0x1273, 0x74d3, 0x1, 0x0);
        gbc.writeMem(0x49ad, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x746b, gbc.sp());
        EXPECT(0x49af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0290
        gbc.setState(0x8928, 0xba2b, 0x94a0, 0x6402, 0xfc5, 0xdff0, 0x0, 0x1);
        gbc.writeMem(0x8928, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xba2b, gbc.sp());
        EXPECT(0x892a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8928));
        EXPECT(0x13, gbc.readMem(0x8929));
        // CB 13 0291
        gbc.setState(0x12a9, 0x370c, 0xee90, 0x264e, 0xb8cf, 0xe816, 0x1, 0x1);
        gbc.writeMem(0x12a9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x370c, gbc.sp());
        EXPECT(0x12ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0292
        gbc.setState(0xd2f4, 0x1a84, 0xade0, 0x4477, 0xe5a6, 0xf8ba, 0x0, 0x1);
        gbc.writeMem(0xd2f4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1a84, gbc.sp());
        EXPECT(0xd2f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2f4));
        EXPECT(0x13, gbc.readMem(0xd2f5));
        // CB 13 0293
        gbc.setState(0x8135, 0x90b9, 0x93d0, 0x731, 0x9484, 0x649e, 0x0, 0x0);
        gbc.writeMem(0x8135, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x90b9, gbc.sp());
        EXPECT(0x8137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8135));
        EXPECT(0x13, gbc.readMem(0x8136));
        // CB 13 0294
        gbc.setState(0xcad4, 0x20b7, 0xd5d0, 0x939f, 0xc36c, 0x56c6, 0x1, 0x1);
        gbc.writeMem(0xcad4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x20b7, gbc.sp());
        EXPECT(0xcad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcad4));
        EXPECT(0x13, gbc.readMem(0xcad5));
        // CB 13 0295
        gbc.setState(0x6556, 0x3447, 0x98b0, 0x363, 0x5bf3, 0x172, 0x1, 0x0);
        gbc.writeMem(0x6556, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3447, gbc.sp());
        EXPECT(0x6558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0296
        gbc.setState(0xc449, 0x5bb6, 0x7d70, 0xa41f, 0xe857, 0x9227, 0x0, 0x0);
        gbc.writeMem(0xc449, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5bb6, gbc.sp());
        EXPECT(0xc44b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc449));
        EXPECT(0x13, gbc.readMem(0xc44a));
        // CB 13 0298
        gbc.setState(0xa646, 0xf46d, 0xc250, 0x39ba, 0x9f0a, 0x68f5, 0x0, 0x0);
        gbc.writeMem(0xa646, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf46d, gbc.sp());
        EXPECT(0xa648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa646));
        EXPECT(0x13, gbc.readMem(0xa647));
        // CB 13 0299
        gbc.setState(0xd59, 0xbc2a, 0xca00, 0x6b80, 0x730c, 0xd48a, 0x1, 0x0);
        gbc.writeMem(0xd59, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbc2a, gbc.sp());
        EXPECT(0xd5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 029B
        gbc.setState(0x4200, 0x2cd, 0x91b0, 0x9be1, 0x28cf, 0xbb22, 0x1, 0x0);
        gbc.writeMem(0x4200, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2cd, gbc.sp());
        EXPECT(0x4202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 029C
        gbc.setState(0xa29a, 0x4b3d, 0xf5a0, 0x1ec9, 0xc577, 0x88db, 0x0, 0x1);
        gbc.writeMem(0xa29a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4b3d, gbc.sp());
        EXPECT(0xa29c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa29a));
        EXPECT(0x13, gbc.readMem(0xa29b));
        // CB 13 029D
        gbc.setState(0xed50, 0xed17, 0xca10, 0xfca, 0x32de, 0xfc5d, 0x0, 0x0);
        gbc.writeMem(0xed50, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xed17, gbc.sp());
        EXPECT(0xed52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed50));
        EXPECT(0x13, gbc.readMem(0xed51));
        // CB 13 029E
        gbc.setState(0xcd17, 0xf96d, 0x9750, 0xf94c, 0x7979, 0xc15a, 0x1, 0x0);
        gbc.writeMem(0xcd17, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf96d, gbc.sp());
        EXPECT(0xcd19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd17));
        EXPECT(0x13, gbc.readMem(0xcd18));
        // CB 13 029F
        gbc.setState(0x2376, 0xa8e4, 0x4f0, 0x6e02, 0x8e5f, 0xcb40, 0x0, 0x1);
        gbc.writeMem(0x2376, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa8e4, gbc.sp());
        EXPECT(0x2378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02A0
        gbc.setState(0x1ca, 0x21f9, 0x5af0, 0x9e56, 0xa38d, 0xa6, 0x0, 0x0);
        gbc.writeMem(0x1ca, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x21f9, gbc.sp());
        EXPECT(0x1cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 02A1
        gbc.setState(0xd691, 0x779d, 0x2e20, 0xb961, 0x61bd, 0xfd16, 0x0, 0x0);
        gbc.writeMem(0xd691, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x779d, gbc.sp());
        EXPECT(0xd693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd691));
        EXPECT(0x13, gbc.readMem(0xd692));
        // CB 13 02A2
        gbc.setState(0x2a51, 0x253d, 0x5930, 0xe740, 0x545f, 0x2f1f, 0x1, 0x0);
        gbc.writeMem(0x2a51, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x253d, gbc.sp());
        EXPECT(0x2a53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02A3
        gbc.setState(0x8215, 0x6f12, 0x6230, 0x96e, 0xc47d, 0x2442, 0x0, 0x1);
        gbc.writeMem(0x8215, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6f12, gbc.sp());
        EXPECT(0x8217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8215));
        EXPECT(0x13, gbc.readMem(0x8216));
        // CB 13 02A4
        gbc.setState(0x529, 0x9ac7, 0x590, 0xbff3, 0x7dd9, 0xd497, 0x1, 0x1);
        gbc.writeMem(0x529, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9ac7, gbc.sp());
        EXPECT(0x52b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 02A5
        gbc.setState(0xe3eb, 0xd0bc, 0x6b10, 0xcefd, 0xd045, 0x77b8, 0x0, 0x0);
        gbc.writeMem(0xe3eb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd0bc, gbc.sp());
        EXPECT(0xe3ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3eb));
        EXPECT(0x13, gbc.readMem(0xe3ec));
        // CB 13 02A6
        gbc.setState(0x67bf, 0xc64c, 0x4a60, 0xa1c9, 0x7691, 0x42a, 0x0, 0x0);
        gbc.writeMem(0x67bf, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc64c, gbc.sp());
        EXPECT(0x67c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 02A7
        gbc.setState(0xabe9, 0x10d8, 0xb250, 0x4a23, 0xff61, 0x8377, 0x1, 0x0);
        gbc.writeMem(0xabe9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x10d8, gbc.sp());
        EXPECT(0xabeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabe9));
        EXPECT(0x13, gbc.readMem(0xabea));
        // CB 13 02A8
        gbc.setState(0xd8a8, 0xbcdc, 0xaad0, 0x90de, 0x4616, 0xcda3, 0x1, 0x1);
        gbc.writeMem(0xd8a8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbcdc, gbc.sp());
        EXPECT(0xd8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8a8));
        EXPECT(0x13, gbc.readMem(0xd8a9));
        // CB 13 02A9
        gbc.setState(0x1d87, 0xd6ff, 0xcfa0, 0x4d1b, 0xc260, 0x64c0, 0x1, 0x0);
        gbc.writeMem(0x1d87, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd6ff, gbc.sp());
        EXPECT(0x1d89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02AA
        gbc.setState(0x148b, 0x9fc7, 0xb240, 0x5adc, 0x1f47, 0xef6f, 0x1, 0x0);
        gbc.writeMem(0x148b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9fc7, gbc.sp());
        EXPECT(0x148d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02AB
        gbc.setState(0x7629, 0x8bae, 0xe6e0, 0x2200, 0xc81d, 0x372d, 0x0, 0x0);
        gbc.writeMem(0x7629, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8bae, gbc.sp());
        EXPECT(0x762b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02AC
        gbc.setState(0xad36, 0x8714, 0x2ac0, 0x732d, 0x310e, 0xba5d, 0x1, 0x1);
        gbc.writeMem(0xad36, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8714, gbc.sp());
        EXPECT(0xad38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad36));
        EXPECT(0x13, gbc.readMem(0xad37));
        // CB 13 02AD
        gbc.setState(0x86dd, 0x59a, 0x9ea0, 0x5d4b, 0x1f19, 0x8a46, 0x0, 0x1);
        gbc.writeMem(0x86dd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x59a, gbc.sp());
        EXPECT(0x86df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86dd));
        EXPECT(0x13, gbc.readMem(0x86de));
        // CB 13 02AE
        gbc.setState(0x9a2a, 0x594a, 0x8af0, 0x7a7d, 0x1694, 0xa2e3, 0x1, 0x1);
        gbc.writeMem(0x9a2a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x594a, gbc.sp());
        EXPECT(0x9a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a2a));
        EXPECT(0x13, gbc.readMem(0x9a2b));
        // CB 13 02AF
        gbc.setState(0x50ac, 0xa5, 0x3df0, 0x3c8c, 0x81e5, 0x48f9, 0x1, 0x0);
        gbc.writeMem(0x50ac, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa5, gbc.sp());
        EXPECT(0x50ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 02B0
        gbc.setState(0x174a, 0x9b2, 0x8d60, 0xc231, 0xe672, 0x4fb6, 0x1, 0x0);
        gbc.writeMem(0x174a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9b2, gbc.sp());
        EXPECT(0x174c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02B1
        gbc.setState(0x15a1, 0x7eca, 0x7640, 0xd1e8, 0x6b4f, 0x8035, 0x0, 0x1);
        gbc.writeMem(0x15a1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7eca, gbc.sp());
        EXPECT(0x15a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02B2
        gbc.setState(0x514d, 0xa73f, 0x9e30, 0x2a84, 0xdb75, 0xbf35, 0x0, 0x1);
        gbc.writeMem(0x514d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa73f, gbc.sp());
        EXPECT(0x514f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02B3
        gbc.setState(0x8123, 0x2c0b, 0x5660, 0xf8d7, 0x44f, 0x2a6c, 0x0, 0x1);
        gbc.writeMem(0x8123, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2c0b, gbc.sp());
        EXPECT(0x8125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8123));
        EXPECT(0x13, gbc.readMem(0x8124));
        // CB 13 02B4
        gbc.setState(0x39c, 0xa004, 0x8080, 0x5853, 0x4c38, 0xedcf, 0x1, 0x1);
        gbc.writeMem(0x39c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa004, gbc.sp());
        EXPECT(0x39e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02B5
        gbc.setState(0xd458, 0x5ac9, 0x7430, 0xd06e, 0x5aa9, 0x9d20, 0x0, 0x1);
        gbc.writeMem(0xd458, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5ac9, gbc.sp());
        EXPECT(0xd45a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd458));
        EXPECT(0x13, gbc.readMem(0xd459));
        // CB 13 02B6
        gbc.setState(0x6944, 0x84e2, 0xb030, 0xdaa8, 0x675f, 0xb14e, 0x0, 0x1);
        gbc.writeMem(0x6944, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x84e2, gbc.sp());
        EXPECT(0x6946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02B7
        gbc.setState(0x1baf, 0x27bf, 0x1ff0, 0x69f1, 0x41cf, 0x4b3f, 0x1, 0x0);
        gbc.writeMem(0x1baf, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x27bf, gbc.sp());
        EXPECT(0x1bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 02B8
        gbc.setState(0xeb8d, 0xcf20, 0xe040, 0x173b, 0x4a02, 0x5575, 0x1, 0x0);
        gbc.writeMem(0xeb8d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xcf20, gbc.sp());
        EXPECT(0xeb8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb8d));
        EXPECT(0x13, gbc.readMem(0xeb8e));
        // CB 13 02B9
        gbc.setState(0x4502, 0x3c93, 0x5d0, 0x88c7, 0x6ce3, 0x18ec, 0x0, 0x1);
        gbc.writeMem(0x4502, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3c93, gbc.sp());
        EXPECT(0x4504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 02BA
        gbc.setState(0x133b, 0xb4fb, 0xda60, 0x7c5e, 0xf31b, 0xb40, 0x0, 0x0);
        gbc.writeMem(0x133b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb4fb, gbc.sp());
        EXPECT(0x133d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02BB
        gbc.setState(0x7bef, 0xd99b, 0xba40, 0xdcc0, 0xdb83, 0x174d, 0x1, 0x1);
        gbc.writeMem(0x7bef, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd99b, gbc.sp());
        EXPECT(0x7bf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 02BC
        gbc.setState(0x4f5f, 0x8bd2, 0xa8a0, 0x6860, 0x2c6b, 0x1a2d, 0x0, 0x1);
        gbc.writeMem(0x4f5f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8bd2, gbc.sp());
        EXPECT(0x4f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02BD
        gbc.setState(0x8515, 0x7283, 0x7e70, 0x6bad, 0x612f, 0x2a2b, 0x0, 0x0);
        gbc.writeMem(0x8515, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7283, gbc.sp());
        EXPECT(0x8517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8515));
        EXPECT(0x13, gbc.readMem(0x8516));
        // CB 13 02BE
        gbc.setState(0x5574, 0x19ba, 0x56d0, 0xb88b, 0xbf91, 0x2040, 0x0, 0x1);
        gbc.writeMem(0x5574, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x19ba, gbc.sp());
        EXPECT(0x5576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 02C0
        gbc.setState(0x28e5, 0x29f2, 0xe9f0, 0x45d, 0x4694, 0xab90, 0x1, 0x1);
        gbc.writeMem(0x28e5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x29f2, gbc.sp());
        EXPECT(0x28e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 02C3
        gbc.setState(0x80b4, 0x129c, 0x32b0, 0x541a, 0x499e, 0x1a1d, 0x1, 0x0);
        gbc.writeMem(0x80b4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x129c, gbc.sp());
        EXPECT(0x80b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80b4));
        EXPECT(0x13, gbc.readMem(0x80b5));
        // CB 13 02C4
        gbc.setState(0x9593, 0xec01, 0x9950, 0x1ab8, 0xe07f, 0xe311, 0x1, 0x0);
        gbc.writeMem(0x9593, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xec01, gbc.sp());
        EXPECT(0x9595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9593));
        EXPECT(0x13, gbc.readMem(0x9594));
        // CB 13 02C5
        gbc.setState(0x435a, 0xff22, 0x70f0, 0xd477, 0xdbb2, 0x4315, 0x1, 0x1);
        gbc.writeMem(0x435a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xff22, gbc.sp());
        EXPECT(0x435c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 02C6
        gbc.setState(0x4925, 0x6329, 0x7140, 0xc07a, 0x18f3, 0x423, 0x0, 0x1);
        gbc.writeMem(0x4925, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6329, gbc.sp());
        EXPECT(0x4927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 02C7
        gbc.setState(0xc4d9, 0x1051, 0x9770, 0x5aaf, 0x52bf, 0x255c, 0x1, 0x1);
        gbc.writeMem(0xc4d9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1051, gbc.sp());
        EXPECT(0xc4db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d9));
        EXPECT(0x13, gbc.readMem(0xc4da));
        // CB 13 02C9
        gbc.setState(0xd0d8, 0x4eeb, 0x6fd0, 0x2ba, 0x6bd5, 0x6016, 0x0, 0x1);
        gbc.writeMem(0xd0d8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4eeb, gbc.sp());
        EXPECT(0xd0da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0d8));
        EXPECT(0x13, gbc.readMem(0xd0d9));
        // CB 13 02CA
        gbc.setState(0x1e07, 0x741d, 0x4f00, 0x23c0, 0x4e4e, 0x9f61, 0x0, 0x0);
        gbc.writeMem(0x1e07, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x741d, gbc.sp());
        EXPECT(0x1e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02CB
        gbc.setState(0xb2a, 0x740d, 0xa370, 0xf92c, 0xdce8, 0xf6b7, 0x1, 0x1);
        gbc.writeMem(0xb2a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x740d, gbc.sp());
        EXPECT(0xb2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 02CC
        gbc.setState(0xe7e6, 0xb78b, 0xca0, 0x132f, 0x5850, 0x8ef7, 0x1, 0x1);
        gbc.writeMem(0xe7e6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb78b, gbc.sp());
        EXPECT(0xe7e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7e6));
        EXPECT(0x13, gbc.readMem(0xe7e7));
        // CB 13 02CD
        gbc.setState(0x4c83, 0xeb09, 0x7560, 0x38dc, 0xd36a, 0xb417, 0x0, 0x0);
        gbc.writeMem(0x4c83, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xeb09, gbc.sp());
        EXPECT(0x4c85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02CE
        gbc.setState(0x6121, 0x2eba, 0x7140, 0xb6d3, 0xc646, 0x163f, 0x0, 0x0);
        gbc.writeMem(0x6121, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2eba, gbc.sp());
        EXPECT(0x6123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02D0
        gbc.setState(0x5ff0, 0x60d3, 0xaa80, 0x1617, 0x4695, 0xbd53, 0x0, 0x1);
        gbc.writeMem(0x5ff0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x60d3, gbc.sp());
        EXPECT(0x5ff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 02D1
        gbc.setState(0xd62e, 0xe350, 0x1260, 0xc6e, 0xef49, 0x3848, 0x0, 0x1);
        gbc.writeMem(0xd62e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe350, gbc.sp());
        EXPECT(0xd630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd62e));
        EXPECT(0x13, gbc.readMem(0xd62f));
        // CB 13 02D2
        gbc.setState(0x3166, 0x44f2, 0x7aa0, 0x7398, 0xed14, 0xe326, 0x0, 0x0);
        gbc.writeMem(0x3166, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x44f2, gbc.sp());
        EXPECT(0x3168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02D3
        gbc.setState(0x7b54, 0xf547, 0xd6e0, 0xc4df, 0x9f23, 0x7a39, 0x1, 0x1);
        gbc.writeMem(0x7b54, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf547, gbc.sp());
        EXPECT(0x7b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02D4
        gbc.setState(0x39d, 0x52b8, 0x3460, 0x1db8, 0x589a, 0x7c3d, 0x1, 0x1);
        gbc.writeMem(0x39d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x52b8, gbc.sp());
        EXPECT(0x39f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 02D5
        gbc.setState(0x1feb, 0xd8f3, 0xf920, 0x2de5, 0x2b1c, 0xe145, 0x1, 0x1);
        gbc.writeMem(0x1feb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd8f3, gbc.sp());
        EXPECT(0x1fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02D6
        gbc.setState(0x68e7, 0xa021, 0x1700, 0x3239, 0xc204, 0xb63e, 0x1, 0x1);
        gbc.writeMem(0x68e7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa021, gbc.sp());
        EXPECT(0x68e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02D7
        gbc.setState(0x54f5, 0xaf3f, 0xacf0, 0x187c, 0x387d, 0x4223, 0x1, 0x1);
        gbc.writeMem(0x54f5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xaf3f, gbc.sp());
        EXPECT(0x54f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02D8
        gbc.setState(0x35e2, 0x15de, 0xbef0, 0x5e2c, 0x7930, 0xbf64, 0x0, 0x1);
        gbc.writeMem(0x35e2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x15de, gbc.sp());
        EXPECT(0x35e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02D9
        gbc.setState(0x4449, 0xe1ec, 0xa900, 0x3ef2, 0xbc8d, 0x35dd, 0x0, 0x0);
        gbc.writeMem(0x4449, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe1ec, gbc.sp());
        EXPECT(0x444b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 02DA
        gbc.setState(0xca7a, 0xd72f, 0xa710, 0xb24f, 0x549, 0xe2b6, 0x0, 0x0);
        gbc.writeMem(0xca7a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd72f, gbc.sp());
        EXPECT(0xca7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca7a));
        EXPECT(0x13, gbc.readMem(0xca7b));
        // CB 13 02DB
        gbc.setState(0x186d, 0xb0f, 0xa7b0, 0x9c46, 0x4242, 0x8abf, 0x0, 0x1);
        gbc.writeMem(0x186d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb0f, gbc.sp());
        EXPECT(0x186f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02DC
        gbc.setState(0x71cd, 0x35cc, 0x85f0, 0x634, 0xd74f, 0x42a4, 0x1, 0x0);
        gbc.writeMem(0x71cd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x35cc, gbc.sp());
        EXPECT(0x71cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02DD
        gbc.setState(0x24e8, 0xe034, 0x7d0, 0x955, 0xe555, 0x1baa, 0x0, 0x0);
        gbc.writeMem(0x24e8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe034, gbc.sp());
        EXPECT(0x24ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02DE
        gbc.setState(0x873a, 0x9322, 0xcde0, 0xc245, 0x52f2, 0x7829, 0x0, 0x1);
        gbc.writeMem(0x873a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9322, gbc.sp());
        EXPECT(0x873c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x873a));
        EXPECT(0x13, gbc.readMem(0x873b));
        // CB 13 02DF
        gbc.setState(0xa4ba, 0x324, 0xc410, 0x32b, 0xc239, 0x1499, 0x1, 0x0);
        gbc.writeMem(0xa4ba, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x324, gbc.sp());
        EXPECT(0xa4bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ba));
        EXPECT(0x13, gbc.readMem(0xa4bb));
        // CB 13 02E0
        gbc.setState(0x369a, 0xaf96, 0xe900, 0x4d45, 0x272, 0xd89b, 0x0, 0x0);
        gbc.writeMem(0x369a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xaf96, gbc.sp());
        EXPECT(0x369c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02E1
        gbc.setState(0x4a90, 0xfc5d, 0x4210, 0x9dfa, 0x9aa, 0x195d, 0x0, 0x0);
        gbc.writeMem(0x4a90, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfc5d, gbc.sp());
        EXPECT(0x4a92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 02E2
        gbc.setState(0x816b, 0xbe88, 0x2120, 0xf060, 0x7344, 0x227d, 0x1, 0x1);
        gbc.writeMem(0x816b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbe88, gbc.sp());
        EXPECT(0x816d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x816b));
        EXPECT(0x13, gbc.readMem(0x816c));
        // CB 13 02E3
        gbc.setState(0x3a8b, 0x84c2, 0x8170, 0x3220, 0x250a, 0x73f3, 0x1, 0x0);
        gbc.writeMem(0x3a8b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x84c2, gbc.sp());
        EXPECT(0x3a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02E4
        gbc.setState(0xc151, 0xf219, 0xa2c0, 0x91fc, 0xe89d, 0xfe20, 0x0, 0x1);
        gbc.writeMem(0xc151, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf219, gbc.sp());
        EXPECT(0xc153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc151));
        EXPECT(0x13, gbc.readMem(0xc152));
        // CB 13 02E5
        gbc.setState(0xad05, 0x5f0e, 0x58c0, 0x363d, 0x3edf, 0x2f96, 0x0, 0x1);
        gbc.writeMem(0xad05, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5f0e, gbc.sp());
        EXPECT(0xad07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad05));
        EXPECT(0x13, gbc.readMem(0xad06));
        // CB 13 02E6
        gbc.setState(0x51aa, 0xd309, 0xab60, 0xc438, 0x2275, 0x1a85, 0x0, 0x0);
        gbc.writeMem(0x51aa, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd309, gbc.sp());
        EXPECT(0x51ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02E7
        gbc.setState(0x1742, 0x8a00, 0xd170, 0xe8af, 0x9d13, 0xc7ec, 0x0, 0x0);
        gbc.writeMem(0x1742, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8a00, gbc.sp());
        EXPECT(0x1744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02E8
        gbc.setState(0x8d1b, 0x5a57, 0xb1a0, 0x43db, 0x6110, 0x342e, 0x0, 0x0);
        gbc.writeMem(0x8d1b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5a57, gbc.sp());
        EXPECT(0x8d1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d1b));
        EXPECT(0x13, gbc.readMem(0x8d1c));
        // CB 13 02E9
        gbc.setState(0x10ea, 0x9d33, 0xb580, 0x3f01, 0x286d, 0xa765, 0x0, 0x0);
        gbc.writeMem(0x10ea, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9d33, gbc.sp());
        EXPECT(0x10ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02EA
        gbc.setState(0xe71e, 0x24f2, 0x1db0, 0xfd35, 0xdef6, 0xf4e8, 0x1, 0x0);
        gbc.writeMem(0xe71e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x24f2, gbc.sp());
        EXPECT(0xe720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe71e));
        EXPECT(0x13, gbc.readMem(0xe71f));
        // CB 13 02EB
        gbc.setState(0x9435, 0xd036, 0x8360, 0xb247, 0x6dc, 0x23f2, 0x0, 0x1);
        gbc.writeMem(0x9435, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd036, gbc.sp());
        EXPECT(0x9437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9435));
        EXPECT(0x13, gbc.readMem(0x9436));
        // CB 13 02EE
        gbc.setState(0x9035, 0x89de, 0xcb80, 0xbba2, 0x7b38, 0xfd99, 0x0, 0x1);
        gbc.writeMem(0x9035, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x89de, gbc.sp());
        EXPECT(0x9037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9035));
        EXPECT(0x13, gbc.readMem(0x9036));
        // CB 13 02EF
        gbc.setState(0xee24, 0x8ae2, 0x9860, 0xf925, 0x5903, 0x6f97, 0x1, 0x0);
        gbc.writeMem(0xee24, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8ae2, gbc.sp());
        EXPECT(0xee26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee24));
        EXPECT(0x13, gbc.readMem(0xee25));
        // CB 13 02F0
        gbc.setState(0x96bd, 0x7121, 0x3370, 0x6c62, 0xb59, 0x5e14, 0x1, 0x0);
        gbc.writeMem(0x96bd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7121, gbc.sp());
        EXPECT(0x96bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96bd));
        EXPECT(0x13, gbc.readMem(0x96be));
        // CB 13 02F1
        gbc.setState(0x928f, 0x8ec9, 0xfcc0, 0xbd53, 0x9939, 0xc22d, 0x0, 0x1);
        gbc.writeMem(0x928f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8ec9, gbc.sp());
        EXPECT(0x9291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x928f));
        EXPECT(0x13, gbc.readMem(0x9290));
        // CB 13 02F2
        gbc.setState(0xbe72, 0x531b, 0x15f0, 0xb98, 0x1b38, 0x8510, 0x1, 0x0);
        gbc.writeMem(0xbe72, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x531b, gbc.sp());
        EXPECT(0xbe74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe72));
        EXPECT(0x13, gbc.readMem(0xbe73));
        // CB 13 02F3
        gbc.setState(0x2100, 0x4ccb, 0xcee0, 0xfb39, 0x2640, 0x9e5e, 0x0, 0x0);
        gbc.writeMem(0x2100, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4ccb, gbc.sp());
        EXPECT(0x2102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02F4
        gbc.setState(0x72f6, 0xc0ba, 0x6b60, 0xba1c, 0xe639, 0x3b6c, 0x1, 0x0);
        gbc.writeMem(0x72f6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc0ba, gbc.sp());
        EXPECT(0x72f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02F5
        gbc.setState(0x7b55, 0x23e1, 0x1720, 0xadb9, 0xe96d, 0xb7b2, 0x1, 0x1);
        gbc.writeMem(0x7b55, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x23e1, gbc.sp());
        EXPECT(0x7b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02F6
        gbc.setState(0x9676, 0x4ad2, 0x5bc0, 0x9b62, 0xb56c, 0xac1d, 0x1, 0x0);
        gbc.writeMem(0x9676, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4ad2, gbc.sp());
        EXPECT(0x9678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9676));
        EXPECT(0x13, gbc.readMem(0x9677));
        // CB 13 02F7
        gbc.setState(0xbafe, 0x289, 0x9100, 0x6b20, 0x2bb6, 0xc64f, 0x0, 0x0);
        gbc.writeMem(0xbafe, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x289, gbc.sp());
        EXPECT(0xbb00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbafe));
        EXPECT(0x13, gbc.readMem(0xbaff));
        // CB 13 02F8
        gbc.setState(0x1028, 0x91eb, 0xe4f0, 0x3395, 0xc6c, 0xbc1f, 0x1, 0x1);
        gbc.writeMem(0x1028, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x91eb, gbc.sp());
        EXPECT(0x102a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 02F9
        gbc.setState(0xabae, 0xc546, 0xb310, 0x5de4, 0x67e9, 0x9875, 0x0, 0x1);
        gbc.writeMem(0xabae, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc546, gbc.sp());
        EXPECT(0xabb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabae));
        EXPECT(0x13, gbc.readMem(0xabaf));
        // CB 13 02FA
        gbc.setState(0xb54a, 0x2497, 0xb020, 0xd49a, 0x7848, 0x2979, 0x1, 0x0);
        gbc.writeMem(0xb54a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2497, gbc.sp());
        EXPECT(0xb54c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb54a));
        EXPECT(0x13, gbc.readMem(0xb54b));
        // CB 13 02FB
        gbc.setState(0x2b64, 0xec27, 0x4cd0, 0x33d3, 0x6e1, 0x8a6d, 0x1, 0x0);
        gbc.writeMem(0x2b64, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xec27, gbc.sp());
        EXPECT(0x2b66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 02FC
        gbc.setState(0x7727, 0xf029, 0xc150, 0xc6a5, 0x2eec, 0x7173, 0x0, 0x1);
        gbc.writeMem(0x7727, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf029, gbc.sp());
        EXPECT(0x7729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 02FD
        gbc.setState(0xe28c, 0x4b5f, 0x930, 0x1d20, 0x17bf, 0x2089, 0x0, 0x0);
        gbc.writeMem(0xe28c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4b5f, gbc.sp());
        EXPECT(0xe28e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe28c));
        EXPECT(0x13, gbc.readMem(0xe28d));
        // CB 13 02FF
        gbc.setState(0x2ae4, 0xd79e, 0xea80, 0xe715, 0x35b2, 0xd451, 0x0, 0x1);
        gbc.writeMem(0x2ae4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd79e, gbc.sp());
        EXPECT(0x2ae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0300
        gbc.setState(0x606d, 0x2757, 0x96b0, 0x5550, 0xc909, 0x5da9, 0x0, 0x0);
        gbc.writeMem(0x606d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2757, gbc.sp());
        EXPECT(0x606f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0301
        gbc.setState(0xc5be, 0xd934, 0xdce0, 0xfde, 0xa272, 0xcc20, 0x1, 0x1);
        gbc.writeMem(0xc5be, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd934, gbc.sp());
        EXPECT(0xc5c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5be));
        EXPECT(0x13, gbc.readMem(0xc5bf));
        // CB 13 0302
        gbc.setState(0xdfeb, 0xde66, 0xc050, 0x583e, 0x4177, 0x3540, 0x0, 0x0);
        gbc.writeMem(0xdfeb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xde66, gbc.sp());
        EXPECT(0xdfed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfeb));
        EXPECT(0x13, gbc.readMem(0xdfec));
        // CB 13 0303
        gbc.setState(0x8f85, 0xebe0, 0xc810, 0xc81b, 0x5de7, 0x55c7, 0x0, 0x0);
        gbc.writeMem(0x8f85, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xebe0, gbc.sp());
        EXPECT(0x8f87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f85));
        EXPECT(0x13, gbc.readMem(0x8f86));
        // CB 13 0304
        gbc.setState(0x98c1, 0xffab, 0x6620, 0x447d, 0x5511, 0xf1f0, 0x1, 0x0);
        gbc.writeMem(0x98c1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xffab, gbc.sp());
        EXPECT(0x98c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c1));
        EXPECT(0x13, gbc.readMem(0x98c2));
        // CB 13 0305
        gbc.setState(0xcc7f, 0xf478, 0x6000, 0x415d, 0xf589, 0x69f5, 0x0, 0x1);
        gbc.writeMem(0xcc7f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf478, gbc.sp());
        EXPECT(0xcc81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc7f));
        EXPECT(0x13, gbc.readMem(0xcc80));
        // CB 13 0306
        gbc.setState(0xa81e, 0xc571, 0xa200, 0x2648, 0x42f, 0x569c, 0x1, 0x0);
        gbc.writeMem(0xa81e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc571, gbc.sp());
        EXPECT(0xa820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa81e));
        EXPECT(0x13, gbc.readMem(0xa81f));
        // CB 13 0307
        gbc.setState(0x21a1, 0x1c0f, 0xa600, 0xf096, 0x7ea1, 0x8fa5, 0x1, 0x0);
        gbc.writeMem(0x21a1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1c0f, gbc.sp());
        EXPECT(0x21a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0309
        gbc.setState(0x7584, 0x82d2, 0x5110, 0x6d43, 0x3782, 0x1f54, 0x1, 0x1);
        gbc.writeMem(0x7584, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x82d2, gbc.sp());
        EXPECT(0x7586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 030A
        gbc.setState(0x94ab, 0xabcf, 0x3b0, 0xd3d3, 0x1c44, 0xf4f1, 0x1, 0x1);
        gbc.writeMem(0x94ab, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xabcf, gbc.sp());
        EXPECT(0x94ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ab));
        EXPECT(0x13, gbc.readMem(0x94ac));
        // CB 13 030B
        gbc.setState(0x416c, 0x2900, 0x1850, 0x9307, 0xe9dc, 0x6e3e, 0x1, 0x1);
        gbc.writeMem(0x416c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2900, gbc.sp());
        EXPECT(0x416e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 030C
        gbc.setState(0x18c2, 0x5fab, 0x45e0, 0x19cc, 0x11f2, 0xb0c2, 0x0, 0x1);
        gbc.writeMem(0x18c2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5fab, gbc.sp());
        EXPECT(0x18c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 030D
        gbc.setState(0xc737, 0x503d, 0xd500, 0x929, 0x78cf, 0xe0b5, 0x0, 0x1);
        gbc.writeMem(0xc737, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x503d, gbc.sp());
        EXPECT(0xc739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc737));
        EXPECT(0x13, gbc.readMem(0xc738));
        // CB 13 030E
        gbc.setState(0xaa97, 0x8b0c, 0x42f0, 0x3966, 0xc4ea, 0x9fe7, 0x0, 0x0);
        gbc.writeMem(0xaa97, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8b0c, gbc.sp());
        EXPECT(0xaa99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa97));
        EXPECT(0x13, gbc.readMem(0xaa98));
        // CB 13 030F
        gbc.setState(0xd6c1, 0x4daf, 0xe390, 0x78fa, 0x92aa, 0x34c0, 0x0, 0x0);
        gbc.writeMem(0xd6c1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4daf, gbc.sp());
        EXPECT(0xd6c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6c1));
        EXPECT(0x13, gbc.readMem(0xd6c2));
        // CB 13 0310
        gbc.setState(0x5fa6, 0x6c3b, 0x9fa0, 0x2a18, 0xf3, 0x65e4, 0x1, 0x1);
        gbc.writeMem(0x5fa6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6c3b, gbc.sp());
        EXPECT(0x5fa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0311
        gbc.setState(0x199e, 0xa92, 0x5d10, 0x93f5, 0x4c1d, 0xc34e, 0x1, 0x0);
        gbc.writeMem(0x199e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa92, gbc.sp());
        EXPECT(0x19a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0312
        gbc.setState(0xaf5a, 0x6d9b, 0x2e80, 0xafde, 0xdb9d, 0x380d, 0x0, 0x0);
        gbc.writeMem(0xaf5a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6d9b, gbc.sp());
        EXPECT(0xaf5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf5a));
        EXPECT(0x13, gbc.readMem(0xaf5b));
        // CB 13 0313
        gbc.setState(0x33ff, 0xa32b, 0x7fb0, 0x23fe, 0x6120, 0xc09a, 0x0, 0x1);
        gbc.writeMem(0x33ff, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa32b, gbc.sp());
        EXPECT(0x3401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0314
        gbc.setState(0xa99e, 0x9508, 0x2f10, 0xb2fe, 0x115f, 0xb027, 0x0, 0x1);
        gbc.writeMem(0xa99e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9508, gbc.sp());
        EXPECT(0xa9a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa99e));
        EXPECT(0x13, gbc.readMem(0xa99f));
        // CB 13 0315
        gbc.setState(0x14d1, 0xc176, 0x3320, 0xc3d6, 0xc1f7, 0x84b4, 0x1, 0x1);
        gbc.writeMem(0x14d1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc176, gbc.sp());
        EXPECT(0x14d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0316
        gbc.setState(0xc207, 0xfda1, 0x5a10, 0x399d, 0x3f71, 0xb7fd, 0x1, 0x1);
        gbc.writeMem(0xc207, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xfda1, gbc.sp());
        EXPECT(0xc209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc207));
        EXPECT(0x13, gbc.readMem(0xc208));
        // CB 13 0317
        gbc.setState(0x123e, 0xf20, 0xee50, 0x7c6a, 0x6433, 0x3c97, 0x0, 0x0);
        gbc.writeMem(0x123e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf20, gbc.sp());
        EXPECT(0x1240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0318
        gbc.setState(0x1594, 0x7d9a, 0x5af0, 0xf8c5, 0x25e1, 0x941a, 0x0, 0x1);
        gbc.writeMem(0x1594, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7d9a, gbc.sp());
        EXPECT(0x1596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 031A
        gbc.setState(0x5951, 0x923e, 0xeed0, 0x4407, 0xee1a, 0x56c4, 0x0, 0x1);
        gbc.writeMem(0x5951, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x923e, gbc.sp());
        EXPECT(0x5953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 031B
        gbc.setState(0x23a2, 0x94fd, 0x5830, 0x4f71, 0x496c, 0xb1c3, 0x1, 0x0);
        gbc.writeMem(0x23a2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x94fd, gbc.sp());
        EXPECT(0x23a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 031C
        gbc.setState(0x13b1, 0x6cb9, 0xcc0, 0x7475, 0xf011, 0xe720, 0x1, 0x1);
        gbc.writeMem(0x13b1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6cb9, gbc.sp());
        EXPECT(0x13b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 031D
        gbc.setState(0x249c, 0x777, 0x19c0, 0x4e46, 0xb2d6, 0x5f36, 0x1, 0x0);
        gbc.writeMem(0x249c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x777, gbc.sp());
        EXPECT(0x249e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 031F
        gbc.setState(0xd9a7, 0xae19, 0xa760, 0x41e7, 0x4681, 0x5266, 0x0, 0x1);
        gbc.writeMem(0xd9a7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xae19, gbc.sp());
        EXPECT(0xd9a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9a7));
        EXPECT(0x13, gbc.readMem(0xd9a8));
        // CB 13 0320
        gbc.setState(0x5f95, 0x2969, 0x2b20, 0x20a9, 0xed83, 0xbec7, 0x0, 0x1);
        gbc.writeMem(0x5f95, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2969, gbc.sp());
        EXPECT(0x5f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0321
        gbc.setState(0xc84, 0x33be, 0x6f10, 0xa934, 0x4fdb, 0x6d20, 0x0, 0x1);
        gbc.writeMem(0xc84, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x33be, gbc.sp());
        EXPECT(0xc86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0322
        gbc.setState(0x744e, 0x959b, 0x56c0, 0xbbe2, 0x60b8, 0x5e66, 0x0, 0x0);
        gbc.writeMem(0x744e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x959b, gbc.sp());
        EXPECT(0x7450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0323
        gbc.setState(0xe045, 0xe8ee, 0x7900, 0x8034, 0x3513, 0xde1b, 0x0, 0x0);
        gbc.writeMem(0xe045, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe8ee, gbc.sp());
        EXPECT(0xe047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe045));
        EXPECT(0x13, gbc.readMem(0xe046));
        // CB 13 0324
        gbc.setState(0x8cdd, 0x917b, 0xf650, 0x6720, 0x2e3a, 0x4aa9, 0x1, 0x1);
        gbc.writeMem(0x8cdd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x917b, gbc.sp());
        EXPECT(0x8cdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cdd));
        EXPECT(0x13, gbc.readMem(0x8cde));
        // CB 13 0326
        gbc.setState(0xc11, 0xec22, 0xc960, 0x23fd, 0xade2, 0x207c, 0x0, 0x0);
        gbc.writeMem(0xc11, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xec22, gbc.sp());
        EXPECT(0xc13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0327
        gbc.setState(0xe136, 0x6eab, 0xc340, 0x68d9, 0xee8, 0x7cd6, 0x1, 0x0);
        gbc.writeMem(0xe136, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6eab, gbc.sp());
        EXPECT(0xe138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe136));
        EXPECT(0x13, gbc.readMem(0xe137));
        // CB 13 0328
        gbc.setState(0x726d, 0x9192, 0x8e20, 0x51ae, 0xb780, 0x16d3, 0x0, 0x0);
        gbc.writeMem(0x726d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9192, gbc.sp());
        EXPECT(0x726f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0329
        gbc.setState(0xcebe, 0xd4ee, 0x28c0, 0x303f, 0x8be1, 0xc39d, 0x0, 0x1);
        gbc.writeMem(0xcebe, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd4ee, gbc.sp());
        EXPECT(0xcec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcebe));
        EXPECT(0x13, gbc.readMem(0xcebf));
        // CB 13 032A
        gbc.setState(0x7ce7, 0xfcbe, 0x1d00, 0x90df, 0xfe9, 0x8b4b, 0x1, 0x0);
        gbc.writeMem(0x7ce7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xfcbe, gbc.sp());
        EXPECT(0x7ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 032B
        gbc.setState(0xb76a, 0xcba2, 0x23d0, 0xc492, 0x9f29, 0xf831, 0x0, 0x1);
        gbc.writeMem(0xb76a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xcba2, gbc.sp());
        EXPECT(0xb76c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb76a));
        EXPECT(0x13, gbc.readMem(0xb76b));
        // CB 13 032C
        gbc.setState(0x14e3, 0x5172, 0xba60, 0xca2e, 0x1f48, 0x817e, 0x1, 0x0);
        gbc.writeMem(0x14e3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5172, gbc.sp());
        EXPECT(0x14e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 032D
        gbc.setState(0xd988, 0x6f50, 0x57e0, 0x52d9, 0xf70d, 0xf7c1, 0x1, 0x1);
        gbc.writeMem(0xd988, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6f50, gbc.sp());
        EXPECT(0xd98a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd988));
        EXPECT(0x13, gbc.readMem(0xd989));
        // CB 13 032E
        gbc.setState(0x23df, 0x10a, 0x2430, 0x41f1, 0x63e4, 0x638b, 0x0, 0x1);
        gbc.writeMem(0x23df, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x10a, gbc.sp());
        EXPECT(0x23e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 032F
        gbc.setState(0x979c, 0x1d82, 0x4e10, 0x3fce, 0x4fe5, 0x89b2, 0x1, 0x0);
        gbc.writeMem(0x979c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1d82, gbc.sp());
        EXPECT(0x979e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x979c));
        EXPECT(0x13, gbc.readMem(0x979d));
        // CB 13 0330
        gbc.setState(0xc6c6, 0x6a17, 0x4bb0, 0xfdfd, 0x4e8a, 0x7504, 0x1, 0x1);
        gbc.writeMem(0xc6c6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6a17, gbc.sp());
        EXPECT(0xc6c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c6));
        EXPECT(0x13, gbc.readMem(0xc6c7));
        // CB 13 0332
        gbc.setState(0xb1ef, 0x7527, 0xf1d0, 0xb127, 0x3c3c, 0x9975, 0x1, 0x1);
        gbc.writeMem(0xb1ef, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7527, gbc.sp());
        EXPECT(0xb1f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ef));
        EXPECT(0x13, gbc.readMem(0xb1f0));
        // CB 13 0334
        gbc.setState(0x9828, 0xf45d, 0xaaf0, 0x92ef, 0xf11c, 0xcdff, 0x0, 0x1);
        gbc.writeMem(0x9828, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf45d, gbc.sp());
        EXPECT(0x982a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9828));
        EXPECT(0x13, gbc.readMem(0x9829));
        // CB 13 0335
        gbc.setState(0x5328, 0x7b7, 0xa9b0, 0x2315, 0xcf7c, 0xf077, 0x1, 0x0);
        gbc.writeMem(0x5328, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7b7, gbc.sp());
        EXPECT(0x532a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0336
        gbc.setState(0x6943, 0xe32, 0x5590, 0x34a3, 0x1ba1, 0x7ca1, 0x1, 0x1);
        gbc.writeMem(0x6943, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe32, gbc.sp());
        EXPECT(0x6945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0337
        gbc.setState(0x5c67, 0xf0c7, 0x2900, 0x2e7e, 0xcd43, 0xbabf, 0x0, 0x0);
        gbc.writeMem(0x5c67, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf0c7, gbc.sp());
        EXPECT(0x5c69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0339
        gbc.setState(0xd67b, 0x55a6, 0x5a10, 0x26e9, 0xd308, 0xbbf7, 0x0, 0x1);
        gbc.writeMem(0xd67b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x55a6, gbc.sp());
        EXPECT(0xd67d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd67b));
        EXPECT(0x13, gbc.readMem(0xd67c));
        // CB 13 033A
        gbc.setState(0x20e5, 0x4580, 0x2fe0, 0x1a35, 0x84f, 0xf100, 0x1, 0x1);
        gbc.writeMem(0x20e5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4580, gbc.sp());
        EXPECT(0x20e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 033B
        gbc.setState(0x19fb, 0xf2c6, 0x1fc0, 0x75c8, 0x8d50, 0x139d, 0x0, 0x0);
        gbc.writeMem(0x19fb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf2c6, gbc.sp());
        EXPECT(0x19fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 033D
        gbc.setState(0x44d8, 0xe082, 0x4520, 0xfca, 0x3c8c, 0x8ba8, 0x1, 0x0);
        gbc.writeMem(0x44d8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe082, gbc.sp());
        EXPECT(0x44da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 033F
        gbc.setState(0x2ff2, 0x1f79, 0x430, 0xc16b, 0x9f41, 0x786f, 0x1, 0x0);
        gbc.writeMem(0x2ff2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1f79, gbc.sp());
        EXPECT(0x2ff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0340
        gbc.setState(0x9b64, 0x13b8, 0x91b0, 0xb29c, 0x7a4f, 0xf080, 0x0, 0x0);
        gbc.writeMem(0x9b64, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x13b8, gbc.sp());
        EXPECT(0x9b66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b64));
        EXPECT(0x13, gbc.readMem(0x9b65));
        // CB 13 0341
        gbc.setState(0xe8bd, 0xf702, 0x3eb0, 0xf755, 0x985d, 0xf034, 0x0, 0x1);
        gbc.writeMem(0xe8bd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf702, gbc.sp());
        EXPECT(0xe8bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8bd));
        EXPECT(0x13, gbc.readMem(0xe8be));
        // CB 13 0342
        gbc.setState(0xb3d7, 0xdee3, 0x22f0, 0x486f, 0x1fbd, 0x6562, 0x1, 0x0);
        gbc.writeMem(0xb3d7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xdee3, gbc.sp());
        EXPECT(0xb3d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d7));
        EXPECT(0x13, gbc.readMem(0xb3d8));
        // CB 13 0343
        gbc.setState(0x80a6, 0xd0e1, 0x1000, 0x9f1c, 0x849e, 0x79bb, 0x0, 0x1);
        gbc.writeMem(0x80a6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd0e1, gbc.sp());
        EXPECT(0x80a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a6));
        EXPECT(0x13, gbc.readMem(0x80a7));
        // CB 13 0344
        gbc.setState(0x4205, 0xd1a9, 0x35d0, 0xab5f, 0x61ec, 0x2f47, 0x1, 0x1);
        gbc.writeMem(0x4205, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd1a9, gbc.sp());
        EXPECT(0x4207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0345
        gbc.setState(0xe91b, 0xb750, 0x6da0, 0x6899, 0x6fc1, 0x8765, 0x0, 0x1);
        gbc.writeMem(0xe91b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb750, gbc.sp());
        EXPECT(0xe91d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe91b));
        EXPECT(0x13, gbc.readMem(0xe91c));
        // CB 13 0346
        gbc.setState(0xb21d, 0xf073, 0xf9a0, 0x250b, 0xcce, 0xadb4, 0x1, 0x1);
        gbc.writeMem(0xb21d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf073, gbc.sp());
        EXPECT(0xb21f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb21d));
        EXPECT(0x13, gbc.readMem(0xb21e));
        // CB 13 0347
        gbc.setState(0x30fe, 0xde0b, 0x49d0, 0x91b6, 0x6f1, 0x1189, 0x1, 0x0);
        gbc.writeMem(0x30fe, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xde0b, gbc.sp());
        EXPECT(0x3100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0348
        gbc.setState(0x9529, 0x3b1e, 0x460, 0xe5d2, 0xf05, 0xe304, 0x0, 0x0);
        gbc.writeMem(0x9529, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3b1e, gbc.sp());
        EXPECT(0x952b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9529));
        EXPECT(0x13, gbc.readMem(0x952a));
        // CB 13 0349
        gbc.setState(0xa130, 0x2f22, 0xffe0, 0x3aaf, 0x7dd7, 0x5c65, 0x0, 0x1);
        gbc.writeMem(0xa130, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2f22, gbc.sp());
        EXPECT(0xa132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa130));
        EXPECT(0x13, gbc.readMem(0xa131));
        // CB 13 034A
        gbc.setState(0x2632, 0xbffb, 0x2300, 0xb30f, 0xd765, 0x3e4c, 0x1, 0x1);
        gbc.writeMem(0x2632, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xbffb, gbc.sp());
        EXPECT(0x2634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 034B
        gbc.setState(0x4a7b, 0xb1ab, 0x9a20, 0x2e0c, 0xfb13, 0x56b9, 0x0, 0x1);
        gbc.writeMem(0x4a7b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb1ab, gbc.sp());
        EXPECT(0x4a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 034C
        gbc.setState(0x692a, 0x7e9e, 0x8bb0, 0xdbd4, 0x67c9, 0x5b8c, 0x1, 0x0);
        gbc.writeMem(0x692a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7e9e, gbc.sp());
        EXPECT(0x692c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 034D
        gbc.setState(0x403c, 0x3af6, 0x2240, 0x601a, 0x2e6e, 0xa450, 0x1, 0x1);
        gbc.writeMem(0x403c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3af6, gbc.sp());
        EXPECT(0x403e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 034F
        gbc.setState(0x47dd, 0xec8e, 0xd6b0, 0x83db, 0x6345, 0xa4ea, 0x1, 0x0);
        gbc.writeMem(0x47dd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xec8e, gbc.sp());
        EXPECT(0x47df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0350
        gbc.setState(0x479e, 0x40f, 0xa830, 0x1b03, 0x2f9a, 0x10b6, 0x0, 0x0);
        gbc.writeMem(0x479e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x40f, gbc.sp());
        EXPECT(0x47a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0351
        gbc.setState(0x1927, 0x5c0c, 0xd3a0, 0x938c, 0x733a, 0xfc29, 0x0, 0x1);
        gbc.writeMem(0x1927, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5c0c, gbc.sp());
        EXPECT(0x1929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0352
        gbc.setState(0x4e1, 0xb236, 0x9580, 0x68f, 0xf038, 0x254a, 0x0, 0x1);
        gbc.writeMem(0x4e1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb236, gbc.sp());
        EXPECT(0x4e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0353
        gbc.setState(0x8bb4, 0x5dd0, 0x1b60, 0x3af6, 0x6efa, 0x53ad, 0x0, 0x0);
        gbc.writeMem(0x8bb4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5dd0, gbc.sp());
        EXPECT(0x8bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bb4));
        EXPECT(0x13, gbc.readMem(0x8bb5));
        // CB 13 0354
        gbc.setState(0xccb9, 0x6c3a, 0x80e0, 0x5e9a, 0xec6e, 0x79d0, 0x1, 0x1);
        gbc.writeMem(0xccb9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6c3a, gbc.sp());
        EXPECT(0xccbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb9));
        EXPECT(0x13, gbc.readMem(0xccba));
        // CB 13 0355
        gbc.setState(0x2dda, 0xb6bf, 0xd190, 0xf935, 0x583, 0x393c, 0x0, 0x1);
        gbc.writeMem(0x2dda, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb6bf, gbc.sp());
        EXPECT(0x2ddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0356
        gbc.setState(0xb0fb, 0x9c92, 0xd2c0, 0xb42e, 0x6719, 0x313f, 0x0, 0x0);
        gbc.writeMem(0xb0fb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9c92, gbc.sp());
        EXPECT(0xb0fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0fb));
        EXPECT(0x13, gbc.readMem(0xb0fc));
        // CB 13 0357
        gbc.setState(0xe755, 0x63e5, 0x3190, 0xd875, 0x382c, 0xe9fa, 0x1, 0x1);
        gbc.writeMem(0xe755, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x63e5, gbc.sp());
        EXPECT(0xe757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe755));
        EXPECT(0x13, gbc.readMem(0xe756));
        // CB 13 0358
        gbc.setState(0x50f6, 0x2b79, 0x5d30, 0xffcc, 0x42d1, 0x2e05, 0x1, 0x0);
        gbc.writeMem(0x50f6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2b79, gbc.sp());
        EXPECT(0x50f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0359
        gbc.setState(0xb225, 0x40df, 0x5b00, 0x2904, 0xfd6d, 0x950c, 0x1, 0x0);
        gbc.writeMem(0xb225, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x40df, gbc.sp());
        EXPECT(0xb227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb225));
        EXPECT(0x13, gbc.readMem(0xb226));
        // CB 13 035A
        gbc.setState(0x95aa, 0x4710, 0x3a80, 0x9b01, 0x6a8d, 0x424, 0x1, 0x1);
        gbc.writeMem(0x95aa, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4710, gbc.sp());
        EXPECT(0x95ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95aa));
        EXPECT(0x13, gbc.readMem(0x95ab));
        // CB 13 035B
        gbc.setState(0x9b96, 0x1ae6, 0x8350, 0x8709, 0x7338, 0x64bb, 0x1, 0x0);
        gbc.writeMem(0x9b96, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1ae6, gbc.sp());
        EXPECT(0x9b98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b96));
        EXPECT(0x13, gbc.readMem(0x9b97));
        // CB 13 035C
        gbc.setState(0x40ba, 0x9c27, 0x7930, 0x3792, 0x846b, 0x13a1, 0x0, 0x1);
        gbc.writeMem(0x40ba, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9c27, gbc.sp());
        EXPECT(0x40bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 035D
        gbc.setState(0xe2a4, 0xee04, 0x5360, 0x78ca, 0x5c8b, 0xb6fa, 0x0, 0x0);
        gbc.writeMem(0xe2a4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xee04, gbc.sp());
        EXPECT(0xe2a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a4));
        EXPECT(0x13, gbc.readMem(0xe2a5));
        // CB 13 035E
        gbc.setState(0x33a5, 0x6c71, 0x8240, 0x5636, 0x7bad, 0xb9bf, 0x1, 0x1);
        gbc.writeMem(0x33a5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6c71, gbc.sp());
        EXPECT(0x33a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 035F
        gbc.setState(0xea24, 0x2fb7, 0x30f0, 0xd90f, 0x1912, 0xd542, 0x1, 0x0);
        gbc.writeMem(0xea24, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2fb7, gbc.sp());
        EXPECT(0xea26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea24));
        EXPECT(0x13, gbc.readMem(0xea25));
        // CB 13 0360
        gbc.setState(0xae39, 0xf068, 0xa0c0, 0xd750, 0xd832, 0xacde, 0x1, 0x1);
        gbc.writeMem(0xae39, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf068, gbc.sp());
        EXPECT(0xae3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae39));
        EXPECT(0x13, gbc.readMem(0xae3a));
        // CB 13 0361
        gbc.setState(0x9007, 0x577b, 0x7d00, 0xc5, 0xc537, 0x18bf, 0x1, 0x0);
        gbc.writeMem(0x9007, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x577b, gbc.sp());
        EXPECT(0x9009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9007));
        EXPECT(0x13, gbc.readMem(0x9008));
        // CB 13 0363
        gbc.setState(0x98e, 0x7130, 0xcf50, 0xe26f, 0xcb9a, 0xe5d0, 0x1, 0x1);
        gbc.writeMem(0x98e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7130, gbc.sp());
        EXPECT(0x990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0364
        gbc.setState(0x397f, 0xcdc3, 0x2060, 0x6fcb, 0x97d0, 0xe6d3, 0x1, 0x0);
        gbc.writeMem(0x397f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcdc3, gbc.sp());
        EXPECT(0x3981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0365
        gbc.setState(0xdff6, 0x9a81, 0x5b50, 0xaebd, 0x9174, 0x433b, 0x0, 0x0);
        gbc.writeMem(0xdff6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9a81, gbc.sp());
        EXPECT(0xdff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff6));
        EXPECT(0x13, gbc.readMem(0xdff7));
        // CB 13 0366
        gbc.setState(0x5cc0, 0x4703, 0xce30, 0xc07a, 0x5894, 0x51fc, 0x1, 0x1);
        gbc.writeMem(0x5cc0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4703, gbc.sp());
        EXPECT(0x5cc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0367
        gbc.setState(0x2ad4, 0xd2fe, 0x7650, 0xb350, 0x4e72, 0xd7cd, 0x1, 0x1);
        gbc.writeMem(0x2ad4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd2fe, gbc.sp());
        EXPECT(0x2ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0368
        gbc.setState(0x4e51, 0xbc12, 0x6850, 0xc110, 0x5646, 0x44ed, 0x1, 0x0);
        gbc.writeMem(0x4e51, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbc12, gbc.sp());
        EXPECT(0x4e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0369
        gbc.setState(0xb9b6, 0x8af8, 0xf4a0, 0x6ee9, 0x1ea6, 0xb65b, 0x1, 0x0);
        gbc.writeMem(0xb9b6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8af8, gbc.sp());
        EXPECT(0xb9b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b6));
        EXPECT(0x13, gbc.readMem(0xb9b7));
        // CB 13 036A
        gbc.setState(0xb5a, 0xbee8, 0xb4c0, 0x6bb3, 0xfc47, 0x85cf, 0x1, 0x1);
        gbc.writeMem(0xb5a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbee8, gbc.sp());
        EXPECT(0xb5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 036B
        gbc.setState(0x96aa, 0xa66c, 0x3c10, 0x4a95, 0xbbcc, 0xed69, 0x0, 0x1);
        gbc.writeMem(0x96aa, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa66c, gbc.sp());
        EXPECT(0x96ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96aa));
        EXPECT(0x13, gbc.readMem(0x96ab));
        // CB 13 036D
        gbc.setState(0x1918, 0x9ed8, 0x6c40, 0xb6ca, 0x3eb7, 0xef20, 0x0, 0x0);
        gbc.writeMem(0x1918, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9ed8, gbc.sp());
        EXPECT(0x191a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 036E
        gbc.setState(0xcb8d, 0x3d12, 0xa3d0, 0x8d45, 0x1269, 0xf1c0, 0x0, 0x1);
        gbc.writeMem(0xcb8d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3d12, gbc.sp());
        EXPECT(0xcb8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb8d));
        EXPECT(0x13, gbc.readMem(0xcb8e));
        // CB 13 036F
        gbc.setState(0x2267, 0x7c36, 0x2070, 0x2bfb, 0xd230, 0xcd24, 0x1, 0x0);
        gbc.writeMem(0x2267, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7c36, gbc.sp());
        EXPECT(0x2269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0370
        gbc.setState(0x9c6f, 0x70e4, 0xe590, 0xe5a9, 0xd168, 0xec15, 0x1, 0x0);
        gbc.writeMem(0x9c6f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x70e4, gbc.sp());
        EXPECT(0x9c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c6f));
        EXPECT(0x13, gbc.readMem(0x9c70));
        // CB 13 0371
        gbc.setState(0xaeaa, 0x9e3e, 0xda40, 0xc49b, 0x5b83, 0x1559, 0x1, 0x1);
        gbc.writeMem(0xaeaa, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9e3e, gbc.sp());
        EXPECT(0xaeac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeaa));
        EXPECT(0x13, gbc.readMem(0xaeab));
        // CB 13 0372
        gbc.setState(0xe9df, 0x38e8, 0xbf60, 0x3c91, 0xb2ea, 0x2235, 0x0, 0x0);
        gbc.writeMem(0xe9df, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x38e8, gbc.sp());
        EXPECT(0xe9e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9df));
        EXPECT(0x13, gbc.readMem(0xe9e0));
        // CB 13 0373
        gbc.setState(0x7716, 0x5187, 0xd3b0, 0x9b48, 0xcf76, 0xa4ae, 0x0, 0x1);
        gbc.writeMem(0x7716, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5187, gbc.sp());
        EXPECT(0x7718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0374
        gbc.setState(0xaac6, 0xfbd1, 0x6c00, 0x83fe, 0x2175, 0x1136, 0x0, 0x0);
        gbc.writeMem(0xaac6, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfbd1, gbc.sp());
        EXPECT(0xaac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaac6));
        EXPECT(0x13, gbc.readMem(0xaac7));
        // CB 13 0375
        gbc.setState(0xe7d9, 0xd484, 0x76e0, 0xdf29, 0x318e, 0x3751, 0x0, 0x0);
        gbc.writeMem(0xe7d9, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd484, gbc.sp());
        EXPECT(0xe7db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d9));
        EXPECT(0x13, gbc.readMem(0xe7da));
        // CB 13 0376
        gbc.setState(0x721, 0x8d8, 0xce80, 0xd32a, 0x73e8, 0xc182, 0x1, 0x0);
        gbc.writeMem(0x721, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8d8, gbc.sp());
        EXPECT(0x723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0377
        gbc.setState(0x9a1a, 0xf7a8, 0xb750, 0x2d81, 0x895e, 0x861a, 0x0, 0x0);
        gbc.writeMem(0x9a1a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf7a8, gbc.sp());
        EXPECT(0x9a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a1a));
        EXPECT(0x13, gbc.readMem(0x9a1b));
        // CB 13 0378
        gbc.setState(0x3d55, 0x7537, 0x96f0, 0xe630, 0x7a37, 0x6aad, 0x1, 0x1);
        gbc.writeMem(0x3d55, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7537, gbc.sp());
        EXPECT(0x3d57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0379
        gbc.setState(0x5519, 0xa48f, 0x90c0, 0x1512, 0xec5e, 0xab32, 0x1, 0x1);
        gbc.writeMem(0x5519, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa48f, gbc.sp());
        EXPECT(0x551b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 037A
        gbc.setState(0xb8c1, 0xd116, 0xc8f0, 0xf941, 0x6144, 0xdc2d, 0x1, 0x1);
        gbc.writeMem(0xb8c1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd116, gbc.sp());
        EXPECT(0xb8c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8c1));
        EXPECT(0x13, gbc.readMem(0xb8c2));
        // CB 13 037B
        gbc.setState(0xb602, 0x139d, 0xcb80, 0xa073, 0x980f, 0xf1e9, 0x0, 0x0);
        gbc.writeMem(0xb602, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x139d, gbc.sp());
        EXPECT(0xb604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb602));
        EXPECT(0x13, gbc.readMem(0xb603));
        // CB 13 037C
        gbc.setState(0xa24c, 0x2ccf, 0x3210, 0xe0bf, 0xca2c, 0x2878, 0x0, 0x0);
        gbc.writeMem(0xa24c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2ccf, gbc.sp());
        EXPECT(0xa24e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa24c));
        EXPECT(0x13, gbc.readMem(0xa24d));
        // CB 13 037D
        gbc.setState(0x4808, 0x8b1f, 0xdd60, 0x3010, 0xdcd2, 0xfde5, 0x0, 0x1);
        gbc.writeMem(0x4808, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8b1f, gbc.sp());
        EXPECT(0x480a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 037E
        gbc.setState(0xaf78, 0x672, 0x9ac0, 0x8478, 0xa87a, 0x4d46, 0x1, 0x0);
        gbc.writeMem(0xaf78, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x672, gbc.sp());
        EXPECT(0xaf7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf78));
        EXPECT(0x13, gbc.readMem(0xaf79));
        // CB 13 037F
        gbc.setState(0x337a, 0x4ada, 0x1b20, 0xa4ae, 0xd310, 0xd3c, 0x1, 0x1);
        gbc.writeMem(0x337a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4ada, gbc.sp());
        EXPECT(0x337c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0380
        gbc.setState(0x101c, 0x6174, 0xfb30, 0x4ee8, 0xf101, 0x42ae, 0x0, 0x0);
        gbc.writeMem(0x101c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6174, gbc.sp());
        EXPECT(0x101e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0381
        gbc.setState(0x79b, 0x18ef, 0x36d0, 0x523d, 0x6b43, 0x2310, 0x1, 0x1);
        gbc.writeMem(0x79b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x18ef, gbc.sp());
        EXPECT(0x79d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0382
        gbc.setState(0x9f78, 0x2c14, 0x6cc0, 0xf2c7, 0xafca, 0x11ae, 0x1, 0x0);
        gbc.writeMem(0x9f78, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2c14, gbc.sp());
        EXPECT(0x9f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f78));
        EXPECT(0x13, gbc.readMem(0x9f79));
        // CB 13 0383
        gbc.setState(0xc1be, 0x12c7, 0x6ca0, 0x3947, 0x511b, 0x9d11, 0x0, 0x1);
        gbc.writeMem(0xc1be, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x12c7, gbc.sp());
        EXPECT(0xc1c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1be));
        EXPECT(0x13, gbc.readMem(0xc1bf));
        // CB 13 0384
        gbc.setState(0x41da, 0x73aa, 0x37a0, 0xc60b, 0xc212, 0xd25, 0x0, 0x0);
        gbc.writeMem(0x41da, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x73aa, gbc.sp());
        EXPECT(0x41dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0385
        gbc.setState(0x667f, 0x184c, 0x3750, 0xc8bb, 0x4a2, 0x5e2c, 0x0, 0x0);
        gbc.writeMem(0x667f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x184c, gbc.sp());
        EXPECT(0x6681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0386
        gbc.setState(0xed7d, 0x48e2, 0x2ec0, 0xffa8, 0xa78e, 0x2ca, 0x1, 0x0);
        gbc.writeMem(0xed7d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x48e2, gbc.sp());
        EXPECT(0xed7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed7d));
        EXPECT(0x13, gbc.readMem(0xed7e));
        // CB 13 0387
        gbc.setState(0x3b3c, 0x3435, 0xa2b0, 0x86d1, 0xcb52, 0xaf5d, 0x0, 0x0);
        gbc.writeMem(0x3b3c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3435, gbc.sp());
        EXPECT(0x3b3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0388
        gbc.setState(0x5dd4, 0x91e3, 0x4e70, 0x5486, 0x91c, 0x210a, 0x0, 0x0);
        gbc.writeMem(0x5dd4, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x91e3, gbc.sp());
        EXPECT(0x5dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0389
        gbc.setState(0xda8b, 0xd9fb, 0x610, 0x4798, 0x104, 0x1e4d, 0x1, 0x0);
        gbc.writeMem(0xda8b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd9fb, gbc.sp());
        EXPECT(0xda8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda8b));
        EXPECT(0x13, gbc.readMem(0xda8c));
        // CB 13 038A
        gbc.setState(0x5346, 0xa20d, 0x3ae0, 0xeade, 0x9dbc, 0x4c8a, 0x0, 0x0);
        gbc.writeMem(0x5346, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa20d, gbc.sp());
        EXPECT(0x5348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 038B
        gbc.setState(0x1d82, 0xa65c, 0xe460, 0x9ae2, 0x9f5e, 0xc594, 0x1, 0x1);
        gbc.writeMem(0x1d82, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa65c, gbc.sp());
        EXPECT(0x1d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 038C
        gbc.setState(0xd19, 0xda4, 0x4950, 0xc055, 0x9b86, 0xa311, 0x1, 0x0);
        gbc.writeMem(0xd19, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xda4, gbc.sp());
        EXPECT(0xd1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 038D
        gbc.setState(0x7936, 0x421, 0xa9e0, 0x2c93, 0xc506, 0xafe, 0x0, 0x1);
        gbc.writeMem(0x7936, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x421, gbc.sp());
        EXPECT(0x7938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 038E
        gbc.setState(0x473c, 0x572e, 0xee10, 0x3731, 0xecf9, 0x6f67, 0x1, 0x0);
        gbc.writeMem(0x473c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x572e, gbc.sp());
        EXPECT(0x473e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 038F
        gbc.setState(0x762a, 0x2932, 0x3df0, 0xbebc, 0xadab, 0xb80b, 0x1, 0x0);
        gbc.writeMem(0x762a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2932, gbc.sp());
        EXPECT(0x762c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0390
        gbc.setState(0xd4f8, 0x9a3e, 0xee90, 0xd497, 0xe58a, 0x7d40, 0x0, 0x1);
        gbc.writeMem(0xd4f8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9a3e, gbc.sp());
        EXPECT(0xd4fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f8));
        EXPECT(0x13, gbc.readMem(0xd4f9));
        // CB 13 0391
        gbc.setState(0x9db1, 0xe64f, 0xf620, 0x2b9d, 0x8a54, 0x479a, 0x0, 0x1);
        gbc.writeMem(0x9db1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe64f, gbc.sp());
        EXPECT(0x9db3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db1));
        EXPECT(0x13, gbc.readMem(0x9db2));
        // CB 13 0393
        gbc.setState(0xc6f, 0x5c83, 0xbe20, 0x53a5, 0xfb46, 0xc1bb, 0x1, 0x0);
        gbc.writeMem(0xc6f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5c83, gbc.sp());
        EXPECT(0xc71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0394
        gbc.setState(0x1802, 0x4410, 0x8620, 0xee15, 0x363e, 0x7363, 0x0, 0x1);
        gbc.writeMem(0x1802, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4410, gbc.sp());
        EXPECT(0x1804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0395
        gbc.setState(0x38d5, 0x8a0e, 0xdc80, 0x7555, 0x7819, 0x5fd1, 0x1, 0x0);
        gbc.writeMem(0x38d5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8a0e, gbc.sp());
        EXPECT(0x38d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 0396
        gbc.setState(0xd45e, 0xc58a, 0x77f0, 0x9dd2, 0x4bd0, 0xf7d8, 0x0, 0x1);
        gbc.writeMem(0xd45e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc58a, gbc.sp());
        EXPECT(0xd460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd45e));
        EXPECT(0x13, gbc.readMem(0xd45f));
        // CB 13 0397
        gbc.setState(0x27, 0x3d2d, 0xd2c0, 0x1da1, 0xa6c6, 0x155a, 0x0, 0x0);
        gbc.writeMem(0x27, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3d2d, gbc.sp());
        EXPECT(0x29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0398
        gbc.setState(0x69c8, 0x5752, 0xda00, 0xb9d5, 0xc99c, 0xe2f9, 0x0, 0x0);
        gbc.writeMem(0x69c8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5752, gbc.sp());
        EXPECT(0x69ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 0399
        gbc.setState(0x6671, 0x8245, 0xb890, 0x8d12, 0x236c, 0x962c, 0x1, 0x1);
        gbc.writeMem(0x6671, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8245, gbc.sp());
        EXPECT(0x6673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 039A
        gbc.setState(0x35c5, 0x9d26, 0x63a0, 0x2264, 0xe1c4, 0xba54, 0x0, 0x0);
        gbc.writeMem(0x35c5, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9d26, gbc.sp());
        EXPECT(0x35c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 039B
        gbc.setState(0x2264, 0xbb08, 0xa3a0, 0x77d7, 0x353e, 0x9651, 0x1, 0x1);
        gbc.writeMem(0x2264, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbb08, gbc.sp());
        EXPECT(0x2266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 039C
        gbc.setState(0x242c, 0x78e7, 0x95d0, 0x43ed, 0x8bf4, 0x25b9, 0x1, 0x0);
        gbc.writeMem(0x242c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x78e7, gbc.sp());
        EXPECT(0x242e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 039D
        gbc.setState(0x214a, 0xdd35, 0xa0c0, 0x5def, 0xe370, 0xddd5, 0x0, 0x0);
        gbc.writeMem(0x214a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdd35, gbc.sp());
        EXPECT(0x214c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 039E
        gbc.setState(0x625b, 0xceb4, 0xab60, 0x5640, 0x154b, 0xdcbf, 0x1, 0x0);
        gbc.writeMem(0x625b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xceb4, gbc.sp());
        EXPECT(0x625d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 039F
        gbc.setState(0xc900, 0xb27e, 0x4090, 0xcf2f, 0x3bef, 0x7250, 0x0, 0x0);
        gbc.writeMem(0xc900, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb27e, gbc.sp());
        EXPECT(0xc902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc900));
        EXPECT(0x13, gbc.readMem(0xc901));
        // CB 13 03A0
        gbc.setState(0xaeff, 0x1c8a, 0xc410, 0x2c53, 0xe8e, 0x7304, 0x0, 0x0);
        gbc.writeMem(0xaeff, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1c8a, gbc.sp());
        EXPECT(0xaf01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeff));
        EXPECT(0x13, gbc.readMem(0xaf00));
        // CB 13 03A1
        gbc.setState(0xad50, 0x100c, 0xfa40, 0x8a41, 0x4d72, 0xa6c2, 0x0, 0x0);
        gbc.writeMem(0xad50, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x100c, gbc.sp());
        EXPECT(0xad52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad50));
        EXPECT(0x13, gbc.readMem(0xad51));
        // CB 13 03A3
        gbc.setState(0x1e52, 0x9eb6, 0xfcd0, 0xfe32, 0xd354, 0xe106, 0x1, 0x1);
        gbc.writeMem(0x1e52, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9eb6, gbc.sp());
        EXPECT(0x1e54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 03A5
        gbc.setState(0xe625, 0x2fe, 0x1d70, 0x5193, 0x9bb2, 0x3170, 0x1, 0x1);
        gbc.writeMem(0xe625, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2fe, gbc.sp());
        EXPECT(0xe627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe625));
        EXPECT(0x13, gbc.readMem(0xe626));
        // CB 13 03A6
        gbc.setState(0xe06f, 0xbf6e, 0xe870, 0x9a1, 0xb418, 0xc2d, 0x0, 0x1);
        gbc.writeMem(0xe06f, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbf6e, gbc.sp());
        EXPECT(0xe071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe06f));
        EXPECT(0x13, gbc.readMem(0xe070));
        // CB 13 03A8
        gbc.setState(0x92f3, 0x611b, 0x4d40, 0x19c9, 0x38b6, 0x5e3a, 0x1, 0x1);
        gbc.writeMem(0x92f3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x611b, gbc.sp());
        EXPECT(0x92f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92f3));
        EXPECT(0x13, gbc.readMem(0x92f4));
        // CB 13 03A9
        gbc.setState(0x5834, 0x9fb1, 0xc0c0, 0x26b0, 0x8fec, 0x3dc5, 0x0, 0x0);
        gbc.writeMem(0x5834, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9fb1, gbc.sp());
        EXPECT(0x5836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03AB
        gbc.setState(0x9fef, 0x11fc, 0x10d0, 0xa424, 0x6488, 0x80a3, 0x0, 0x0);
        gbc.writeMem(0x9fef, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x11fc, gbc.sp());
        EXPECT(0x9ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fef));
        EXPECT(0x13, gbc.readMem(0x9ff0));
        // CB 13 03AC
        gbc.setState(0x9fdd, 0x19ae, 0xc570, 0xa2, 0xa796, 0x4b58, 0x0, 0x1);
        gbc.writeMem(0x9fdd, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x19ae, gbc.sp());
        EXPECT(0x9fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fdd));
        EXPECT(0x13, gbc.readMem(0x9fde));
        // CB 13 03AD
        gbc.setState(0x5c88, 0xe6f7, 0x2fa0, 0xc6ad, 0x453e, 0x3bc8, 0x0, 0x1);
        gbc.writeMem(0x5c88, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe6f7, gbc.sp());
        EXPECT(0x5c8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 03AE
        gbc.setState(0xb5df, 0xf91d, 0x1640, 0x7987, 0xfe04, 0xe38c, 0x1, 0x0);
        gbc.writeMem(0xb5df, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf91d, gbc.sp());
        EXPECT(0xb5e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5df));
        EXPECT(0x13, gbc.readMem(0xb5e0));
        // CB 13 03AF
        gbc.setState(0x491, 0x4837, 0x7c40, 0xfef1, 0x83f6, 0xb188, 0x1, 0x1);
        gbc.writeMem(0x491, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4837, gbc.sp());
        EXPECT(0x493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03B0
        gbc.setState(0x22f8, 0x26a6, 0x4cb0, 0x2ff9, 0x5a8b, 0xd48a, 0x1, 0x1);
        gbc.writeMem(0x22f8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x26a6, gbc.sp());
        EXPECT(0x22fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03B1
        gbc.setState(0x8c, 0xb632, 0xbeb0, 0x4735, 0x8192, 0x9b5b, 0x1, 0x1);
        gbc.writeMem(0x8c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb632, gbc.sp());
        EXPECT(0x8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03B2
        gbc.setState(0xef62, 0x9858, 0x3250, 0xf91b, 0xa06f, 0xb1dc, 0x0, 0x0);
        gbc.writeMem(0xef62, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9858, gbc.sp());
        EXPECT(0xef64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef62));
        EXPECT(0x13, gbc.readMem(0xef63));
        // CB 13 03B3
        gbc.setState(0x9fcb, 0x8863, 0x59a0, 0xc2bb, 0x8610, 0x6c0, 0x1, 0x1);
        gbc.writeMem(0x9fcb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8863, gbc.sp());
        EXPECT(0x9fcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fcb));
        EXPECT(0x13, gbc.readMem(0x9fcc));
        // CB 13 03B4
        gbc.setState(0x5740, 0x5d5b, 0xd1c0, 0x5f57, 0x29b8, 0x3a2c, 0x1, 0x0);
        gbc.writeMem(0x5740, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5d5b, gbc.sp());
        EXPECT(0x5742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03B5
        gbc.setState(0x2d5e, 0xa731, 0x2d0, 0x26ea, 0x8157, 0x7a3b, 0x1, 0x1);
        gbc.writeMem(0x2d5e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa731, gbc.sp());
        EXPECT(0x2d60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 03B6
        gbc.setState(0x600e, 0x26fd, 0x9100, 0xf42b, 0x127b, 0x493, 0x0, 0x1);
        gbc.writeMem(0x600e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x26fd, gbc.sp());
        EXPECT(0x6010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 03B7
        gbc.setState(0xb34a, 0xbb34, 0xfd60, 0x9c3c, 0xb826, 0xbfb4, 0x1, 0x1);
        gbc.writeMem(0xb34a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbb34, gbc.sp());
        EXPECT(0xb34c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb34a));
        EXPECT(0x13, gbc.readMem(0xb34b));
        // CB 13 03B8
        gbc.setState(0xbf2e, 0xee97, 0x1840, 0xb5ab, 0x7b95, 0xf794, 0x1, 0x1);
        gbc.writeMem(0xbf2e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xee97, gbc.sp());
        EXPECT(0xbf30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf2e));
        EXPECT(0x13, gbc.readMem(0xbf2f));
        // CB 13 03B9
        gbc.setState(0xa3b, 0x5432, 0xeb20, 0x13ab, 0xcd89, 0x78e2, 0x0, 0x1);
        gbc.writeMem(0xa3b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5432, gbc.sp());
        EXPECT(0xa3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03BA
        gbc.setState(0xd3d2, 0xcf8, 0x7de0, 0xad0e, 0x9e, 0xa15c, 0x1, 0x1);
        gbc.writeMem(0xd3d2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xcf8, gbc.sp());
        EXPECT(0xd3d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3d2));
        EXPECT(0x13, gbc.readMem(0xd3d3));
        // CB 13 03BB
        gbc.setState(0x2717, 0x9274, 0x8e10, 0xe06c, 0xb22e, 0x27bb, 0x0, 0x0);
        gbc.writeMem(0x2717, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9274, gbc.sp());
        EXPECT(0x2719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 03BC
        gbc.setState(0x6e5a, 0x9b84, 0xfc40, 0x889, 0xdddb, 0x8982, 0x0, 0x1);
        gbc.writeMem(0x6e5a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9b84, gbc.sp());
        EXPECT(0x6e5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03BD
        gbc.setState(0x452b, 0x17ee, 0x330, 0x74ce, 0x79a, 0xf27a, 0x1, 0x0);
        gbc.writeMem(0x452b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x17ee, gbc.sp());
        EXPECT(0x452d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03BE
        gbc.setState(0x2b39, 0x9330, 0xc0c0, 0x1915, 0xee4d, 0x1842, 0x0, 0x0);
        gbc.writeMem(0x2b39, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9330, gbc.sp());
        EXPECT(0x2b3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 03BF
        gbc.setState(0x6b95, 0x6943, 0xa930, 0x6eea, 0x13be, 0x8dbd, 0x1, 0x0);
        gbc.writeMem(0x6b95, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6943, gbc.sp());
        EXPECT(0x6b97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03C0
        gbc.setState(0x48e2, 0x43bb, 0x9720, 0xb59e, 0x3e13, 0x4829, 0x1, 0x0);
        gbc.writeMem(0x48e2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x43bb, gbc.sp());
        EXPECT(0x48e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 03C1
        gbc.setState(0x1c11, 0xa640, 0xc630, 0x3eac, 0x3260, 0x8dce, 0x1, 0x1);
        gbc.writeMem(0x1c11, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa640, gbc.sp());
        EXPECT(0x1c13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 03C2
        gbc.setState(0xbbac, 0x1f74, 0xb590, 0x4809, 0x7cc4, 0xed55, 0x0, 0x1);
        gbc.writeMem(0xbbac, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1f74, gbc.sp());
        EXPECT(0xbbae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbac));
        EXPECT(0x13, gbc.readMem(0xbbad));
        // CB 13 03C3
        gbc.setState(0xa0f8, 0x7ede, 0x22e0, 0x1efd, 0x5f86, 0x95a5, 0x0, 0x0);
        gbc.writeMem(0xa0f8, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7ede, gbc.sp());
        EXPECT(0xa0fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f8));
        EXPECT(0x13, gbc.readMem(0xa0f9));
        // CB 13 03C4
        gbc.setState(0x710e, 0x6144, 0x7690, 0x27c5, 0xe20a, 0x9681, 0x0, 0x1);
        gbc.writeMem(0x710e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6144, gbc.sp());
        EXPECT(0x7110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 03C5
        gbc.setState(0x3173, 0xc2e8, 0x8330, 0x7c28, 0x82c9, 0x984, 0x0, 0x0);
        gbc.writeMem(0x3173, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc2e8, gbc.sp());
        EXPECT(0x3175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03C6
        gbc.setState(0x80d0, 0xcee6, 0x5760, 0x37b9, 0xaa13, 0x496, 0x1, 0x1);
        gbc.writeMem(0x80d0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xcee6, gbc.sp());
        EXPECT(0x80d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80d0));
        EXPECT(0x13, gbc.readMem(0x80d1));
        // CB 13 03C7
        gbc.setState(0x5b18, 0xb9a6, 0x5ad0, 0x1751, 0xd498, 0xa965, 0x1, 0x0);
        gbc.writeMem(0x5b18, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb9a6, gbc.sp());
        EXPECT(0x5b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03C8
        gbc.setState(0x2f4c, 0xad36, 0xcf60, 0x1def, 0xbccc, 0x375c, 0x0, 0x0);
        gbc.writeMem(0x2f4c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xad36, gbc.sp());
        EXPECT(0x2f4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03C9
        gbc.setState(0x2aa1, 0xa814, 0x8ba0, 0xec30, 0xb6dc, 0xf79d, 0x1, 0x1);
        gbc.writeMem(0x2aa1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa814, gbc.sp());
        EXPECT(0x2aa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03CC
        gbc.setState(0xae7, 0x5ea, 0xa480, 0x7c17, 0x69d7, 0x337d, 0x0, 0x1);
        gbc.writeMem(0xae7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5ea, gbc.sp());
        EXPECT(0xae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03CD
        gbc.setState(0xbe20, 0x973b, 0xd1b0, 0x8887, 0xa97c, 0xb2a7, 0x1, 0x1);
        gbc.writeMem(0xbe20, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x973b, gbc.sp());
        EXPECT(0xbe22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe20));
        EXPECT(0x13, gbc.readMem(0xbe21));
        // CB 13 03CE
        gbc.setState(0x3c45, 0xd9da, 0xd690, 0x3f73, 0xc782, 0x5c5b, 0x1, 0x0);
        gbc.writeMem(0x3c45, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd9da, gbc.sp());
        EXPECT(0x3c47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03CF
        gbc.setState(0x10f2, 0xc684, 0x70a0, 0x8537, 0xffba, 0xb500, 0x0, 0x0);
        gbc.writeMem(0x10f2, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc684, gbc.sp());
        EXPECT(0x10f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03D0
        gbc.setState(0xa445, 0xd877, 0x14a0, 0x3467, 0x9756, 0xa348, 0x1, 0x0);
        gbc.writeMem(0xa445, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd877, gbc.sp());
        EXPECT(0xa447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa445));
        EXPECT(0x13, gbc.readMem(0xa446));
        // CB 13 03D1
        gbc.setState(0x6b65, 0xc773, 0xa360, 0x7ae4, 0x62c1, 0x3cc9, 0x0, 0x1);
        gbc.writeMem(0x6b65, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc773, gbc.sp());
        EXPECT(0x6b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03D2
        gbc.setState(0x58e0, 0xf584, 0xd430, 0xb6f6, 0xe88f, 0xb02f, 0x0, 0x1);
        gbc.writeMem(0x58e0, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf584, gbc.sp());
        EXPECT(0x58e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03D3
        gbc.setState(0x359, 0x468a, 0x3e60, 0x126d, 0x16b7, 0x79ba, 0x1, 0x0);
        gbc.writeMem(0x359, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x468a, gbc.sp());
        EXPECT(0x35b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03D4
        gbc.setState(0x888a, 0xd81b, 0x380, 0xf898, 0x4007, 0xdb5, 0x1, 0x1);
        gbc.writeMem(0x888a, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd81b, gbc.sp());
        EXPECT(0x888c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x888a));
        EXPECT(0x13, gbc.readMem(0x888b));
        // CB 13 03D6
        gbc.setState(0x3e39, 0x5478, 0xc920, 0xc3a5, 0x92b2, 0xd4f2, 0x1, 0x1);
        gbc.writeMem(0x3e39, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5478, gbc.sp());
        EXPECT(0x3e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03D7
        gbc.setState(0x4670, 0x6759, 0x9a60, 0xf278, 0x1171, 0xce3, 0x1, 0x0);
        gbc.writeMem(0x4670, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6759, gbc.sp());
        EXPECT(0x4672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 13 03D8
        gbc.setState(0x42, 0xc181, 0x7860, 0x6b4a, 0xba9c, 0x104e, 0x0, 0x1);
        gbc.writeMem(0x42, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc181, gbc.sp());
        EXPECT(0x44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03D9
        gbc.setState(0x6d8d, 0x6109, 0x64d0, 0x6d50, 0x7d96, 0x2c91, 0x1, 0x0);
        gbc.writeMem(0x6d8d, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6109, gbc.sp());
        EXPECT(0x6d8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03DA
        gbc.setState(0xe344, 0x8d9a, 0xd660, 0x4428, 0xa788, 0x9d57, 0x1, 0x1);
        gbc.writeMem(0xe344, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8d9a, gbc.sp());
        EXPECT(0xe346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe344));
        EXPECT(0x13, gbc.readMem(0xe345));
        // CB 13 03DB
        gbc.setState(0x61e, 0x6e95, 0xdc50, 0x50c2, 0xbaf1, 0xfa62, 0x1, 0x0);
        gbc.writeMem(0x61e, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6e95, gbc.sp());
        EXPECT(0x620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03DC
        gbc.setState(0xda2c, 0x36dc, 0xa140, 0x283b, 0xaea1, 0x58b, 0x0, 0x0);
        gbc.writeMem(0xda2c, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x36dc, gbc.sp());
        EXPECT(0xda2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda2c));
        EXPECT(0x13, gbc.readMem(0xda2d));
        // CB 13 03DD
        gbc.setState(0xee45, 0x8912, 0xbad0, 0xa078, 0xaf29, 0x9823, 0x0, 0x0);
        gbc.writeMem(0xee45, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8912, gbc.sp());
        EXPECT(0xee47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee45));
        EXPECT(0x13, gbc.readMem(0xee46));
        // CB 13 03DE
        gbc.setState(0x5802, 0xff1d, 0xf280, 0x1515, 0xc08d, 0xe329, 0x0, 0x0);
        gbc.writeMem(0x5802, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xff1d, gbc.sp());
        EXPECT(0x5804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03DF
        gbc.setState(0x80d3, 0xaf0d, 0xbb60, 0x9f94, 0x98e0, 0xd84a, 0x0, 0x1);
        gbc.writeMem(0x80d3, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xaf0d, gbc.sp());
        EXPECT(0x80d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80d3));
        EXPECT(0x13, gbc.readMem(0x80d4));
        // CB 13 03E0
        gbc.setState(0xaaeb, 0xb985, 0x9e20, 0x6ba4, 0xa742, 0x65a2, 0x1, 0x1);
        gbc.writeMem(0xaaeb, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb985, gbc.sp());
        EXPECT(0xaaed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaeb));
        EXPECT(0x13, gbc.readMem(0xaaec));
        // CB 13 03E1
        gbc.setState(0x9512, 0x7ce, 0x44d0, 0xbd54, 0x7ae7, 0xc190, 0x0, 0x1);
        gbc.writeMem(0x9512, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7ce, gbc.sp());
        EXPECT(0x9514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9512));
        EXPECT(0x13, gbc.readMem(0x9513));
        // CB 13 03E2
        gbc.setState(0x1eb1, 0x2435, 0x6f40, 0x4665, 0x38d8, 0x62df, 0x0, 0x0);
        gbc.writeMem(0x1eb1, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2435, gbc.sp());
        EXPECT(0x1eb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03E3
        gbc.setState(0xd40b, 0x890a, 0xeba0, 0x42f8, 0x95a9, 0x86a1, 0x1, 0x1);
        gbc.writeMem(0xd40b, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x890a, gbc.sp());
        EXPECT(0xd40d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd40b));
        EXPECT(0x13, gbc.readMem(0xd40c));
        // CB 13 03E4
        gbc.setState(0x6003, 0xa697, 0x4db0, 0x206e, 0xc2f8, 0x5d24, 0x0, 0x0);
        gbc.writeMem(0x6003, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa697, gbc.sp());
        EXPECT(0x6005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 13 03E5
        gbc.setState(0xe5b7, 0xf2fb, 0xb6c0, 0x3c8, 0x53dc, 0xf7d7, 0x1, 0x1);
        gbc.writeMem(0xe5b7, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf2fb, gbc.sp());
        EXPECT(0xe5b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b7));
        EXPECT(0x13, gbc.readMem(0xe5b8));
        // CB 13 03E6
        gbc.setState(0x8431, 0x399, 0x2430, 0xb25e, 0xae58, 0x6605, 0x1, 0x1);
        gbc.writeMem(0x8431, { 0xcb, 0x13 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x399, gbc.sp());
        EXPECT(0x8433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8431));
        EXPECT(0x13, gbc.readMem(0x8432));
    }
