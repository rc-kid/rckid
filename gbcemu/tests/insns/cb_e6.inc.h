    TEST(gbcemu, opcode_cb_e6) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB E6 0000
        gbc.setState(0x59ff, 0x6b36, 0x3330, 0x4094, 0xe285, 0x31a2, 0x1, 0x0);
        gbc.writeMem(0x31a2, { 0x75 });
        gbc.writeMem(0x59ff, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6b36, gbc.sp());
        EXPECT(0x5a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0001
        gbc.setState(0x48f2, 0x6475, 0x7420, 0x90fd, 0x583f, 0x408a, 0x1, 0x1);
        gbc.writeMem(0x408a, { 0x5f });
        gbc.writeMem(0x48f2, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6475, gbc.sp());
        EXPECT(0x48f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0003
        gbc.setState(0xec9f, 0x4ad4, 0x2e70, 0x72d2, 0x62e6, 0x8d90, 0x1, 0x1);
        gbc.writeMem(0x8d90, { 0xd7 });
        gbc.writeMem(0xec9f, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4ad4, gbc.sp());
        EXPECT(0xeca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0x8d90));
        EXPECT(0xcb, gbc.readMem(0xec9f));
        EXPECT(0xe6, gbc.readMem(0xeca0));
        // CB E6 0004
        gbc.setState(0xb009, 0x5773, 0x9200, 0xa508, 0x6aae, 0xf25d, 0x1, 0x0);
        gbc.writeMem(0xb009, { 0xcb, 0xe6 });
        gbc.writeMem(0xf25d, { 0xa7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5773, gbc.sp());
        EXPECT(0xb00b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb009));
        EXPECT(0xe6, gbc.readMem(0xb00a));
        EXPECT(0xb7, gbc.readMem(0xf25d));
        // CB E6 0005
        gbc.setState(0xee8e, 0x1eb6, 0x5680, 0xfcac, 0xc484, 0x1417, 0x1, 0x0);
        gbc.writeMem(0x1417, { 0xd1 });
        gbc.writeMem(0xee8e, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1eb6, gbc.sp());
        EXPECT(0xee90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee8e));
        EXPECT(0xe6, gbc.readMem(0xee8f));
        // CB E6 0006
        gbc.setState(0x431b, 0xfced, 0xa180, 0x5b1a, 0xf9d, 0x821, 0x1, 0x0);
        gbc.writeMem(0x821, { 0xb2 });
        gbc.writeMem(0x431b, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfced, gbc.sp());
        EXPECT(0x431d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0007
        gbc.setState(0xbb10, 0xca9b, 0x24a0, 0x6890, 0xfd5, 0x8a6c, 0x0, 0x1);
        gbc.writeMem(0x8a6c, { 0x64 });
        gbc.writeMem(0xbb10, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xca9b, gbc.sp());
        EXPECT(0xbb12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8a6c));
        EXPECT(0xcb, gbc.readMem(0xbb10));
        EXPECT(0xe6, gbc.readMem(0xbb11));
        // CB E6 0009
        gbc.setState(0x708b, 0x96c4, 0xc5f0, 0xc509, 0x7add, 0x897f, 0x1, 0x0);
        gbc.writeMem(0x708b, { 0xcb, 0xe6 });
        gbc.writeMem(0x897f, { 0x86 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x96c4, gbc.sp());
        EXPECT(0x708d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x897f));
        // CB E6 000A
        gbc.setState(0x8995, 0xda95, 0x4a00, 0x2f36, 0x1ba4, 0xd301, 0x0, 0x0);
        gbc.writeMem(0x8995, { 0xcb, 0xe6 });
        gbc.writeMem(0xd301, { 0x56 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xda95, gbc.sp());
        EXPECT(0x8997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8995));
        EXPECT(0xe6, gbc.readMem(0x8996));
        EXPECT(0x56, gbc.readMem(0xd301));
        // CB E6 000B
        gbc.setState(0x67f4, 0xe4a9, 0xfbb0, 0xc1e3, 0x3f06, 0xd61c, 0x0, 0x1);
        gbc.writeMem(0x67f4, { 0xcb, 0xe6 });
        gbc.writeMem(0xd61c, { 0xef });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe4a9, gbc.sp());
        EXPECT(0x67f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xd61c));
        // CB E6 000C
        gbc.setState(0xe3bd, 0x8f48, 0x1080, 0x3956, 0xe3eb, 0xc83e, 0x1, 0x1);
        gbc.writeMem(0xc83e, { 0xc8 });
        gbc.writeMem(0xe3bd, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8f48, gbc.sp());
        EXPECT(0xe3bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xc83e));
        EXPECT(0xcb, gbc.readMem(0xe3bd));
        EXPECT(0xe6, gbc.readMem(0xe3be));
        // CB E6 000D
        gbc.setState(0x6bf1, 0x3e52, 0xdd90, 0xffe4, 0xd69c, 0x9105, 0x0, 0x0);
        gbc.writeMem(0x6bf1, { 0xcb, 0xe6 });
        gbc.writeMem(0x9105, { 0xc7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3e52, gbc.sp());
        EXPECT(0x6bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0x9105));
        // CB E6 000F
        gbc.setState(0xd164, 0x8c7c, 0xe240, 0x137, 0x5574, 0xe1b8, 0x1, 0x1);
        gbc.writeMem(0xd164, { 0xcb, 0xe6 });
        gbc.writeMem(0xe1b8, { 0x8b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8c7c, gbc.sp());
        EXPECT(0xd166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd164));
        EXPECT(0xe6, gbc.readMem(0xd165));
        EXPECT(0x9b, gbc.readMem(0xe1b8));
        // CB E6 0011
        gbc.setState(0xb8ba, 0x5edd, 0x9630, 0x3ac5, 0x9f, 0xa5cf, 0x1, 0x0);
        gbc.writeMem(0xa5cf, { 0xff });
        gbc.writeMem(0xb8ba, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5edd, gbc.sp());
        EXPECT(0xb8bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa5cf));
        EXPECT(0xcb, gbc.readMem(0xb8ba));
        EXPECT(0xe6, gbc.readMem(0xb8bb));
        // CB E6 0012
        gbc.setState(0x43a2, 0x9f0b, 0x73b0, 0x511b, 0xda8b, 0xaf84, 0x1, 0x0);
        gbc.writeMem(0x43a2, { 0xcb, 0xe6 });
        gbc.writeMem(0xaf84, { 0xf9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9f0b, gbc.sp());
        EXPECT(0x43a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xaf84));
        // CB E6 0014
        gbc.setState(0x93ef, 0x46b4, 0x5fe0, 0x5f07, 0x6a99, 0xeb8e, 0x1, 0x1);
        gbc.writeMem(0x93ef, { 0xcb, 0xe6 });
        gbc.writeMem(0xeb8e, { 0x30 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x46b4, gbc.sp());
        EXPECT(0x93f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ef));
        EXPECT(0xe6, gbc.readMem(0x93f0));
        EXPECT(0x30, gbc.readMem(0xeb8e));
        // CB E6 0015
        gbc.setState(0x5228, 0xf8ef, 0x6a50, 0x36d9, 0x50c4, 0x7d80, 0x0, 0x0);
        gbc.writeMem(0x5228, { 0xcb, 0xe6 });
        gbc.writeMem(0x7d80, { 0x14 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf8ef, gbc.sp());
        EXPECT(0x522a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0016
        gbc.setState(0x3d5d, 0x9432, 0xc480, 0x265b, 0x5bf1, 0xd7e6, 0x0, 0x1);
        gbc.writeMem(0x3d5d, { 0xcb, 0xe6 });
        gbc.writeMem(0xd7e6, { 0xce });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9432, gbc.sp());
        EXPECT(0x3d5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xd7e6));
        // CB E6 001A
        gbc.setState(0x626e, 0x51d5, 0x5f10, 0x9f33, 0x50c7, 0xb754, 0x0, 0x0);
        gbc.writeMem(0x626e, { 0xcb, 0xe6 });
        gbc.writeMem(0xb754, { 0x6e });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x51d5, gbc.sp());
        EXPECT(0x6270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb754));
        // CB E6 001B
        gbc.setState(0x7562, 0xf5b5, 0x9bf0, 0x1683, 0x3aee, 0x6e91, 0x0, 0x1);
        gbc.writeMem(0x6e91, { 0x36 });
        gbc.writeMem(0x7562, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf5b5, gbc.sp());
        EXPECT(0x7564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 001D
        gbc.setState(0x3f00, 0x36de, 0xda10, 0x492d, 0x63f9, 0xa047, 0x1, 0x1);
        gbc.writeMem(0x3f00, { 0xcb, 0xe6 });
        gbc.writeMem(0xa047, { 0x82 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x36de, gbc.sp());
        EXPECT(0x3f02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa047));
        // CB E6 0020
        gbc.setState(0x40a5, 0x7779, 0x1290, 0xad9, 0x262f, 0xe23d, 0x1, 0x1);
        gbc.writeMem(0x40a5, { 0xcb, 0xe6 });
        gbc.writeMem(0xe23d, { 0x6 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7779, gbc.sp());
        EXPECT(0x40a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe23d));
        // CB E6 0021
        gbc.setState(0xcd88, 0xf57c, 0x57c0, 0x8caa, 0x13b8, 0x57e5, 0x0, 0x1);
        gbc.writeMem(0x57e5, { 0xfc });
        gbc.writeMem(0xcd88, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf57c, gbc.sp());
        EXPECT(0xcd8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd88));
        EXPECT(0xe6, gbc.readMem(0xcd89));
        // CB E6 0023
        gbc.setState(0x246, 0x513, 0xaa40, 0x38b7, 0xb884, 0x7f50, 0x1, 0x0);
        gbc.writeMem(0x246, { 0xcb, 0xe6 });
        gbc.writeMem(0x7f50, { 0x30 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x513, gbc.sp());
        EXPECT(0x248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0024
        gbc.setState(0x9317, 0x1d67, 0x7010, 0x9521, 0x510f, 0xaea0, 0x1, 0x0);
        gbc.writeMem(0x9317, { 0xcb, 0xe6 });
        gbc.writeMem(0xaea0, { 0x79 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1d67, gbc.sp());
        EXPECT(0x9319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9317));
        EXPECT(0xe6, gbc.readMem(0x9318));
        EXPECT(0x79, gbc.readMem(0xaea0));
        // CB E6 0025
        gbc.setState(0x3674, 0x7eda, 0xb620, 0x9929, 0xd41d, 0xb797, 0x1, 0x1);
        gbc.writeMem(0x3674, { 0xcb, 0xe6 });
        gbc.writeMem(0xb797, { 0x1d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7eda, gbc.sp());
        EXPECT(0x3676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb797));
        // CB E6 0028
        gbc.setState(0x6b57, 0x12d3, 0xc090, 0x6dd1, 0x9369, 0x7227, 0x1, 0x1);
        gbc.writeMem(0x6b57, { 0xcb, 0xe6 });
        gbc.writeMem(0x7227, { 0xd3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x12d3, gbc.sp());
        EXPECT(0x6b59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0029
        gbc.setState(0x4594, 0x151b, 0x2a70, 0x90ee, 0x8c57, 0x752b, 0x0, 0x0);
        gbc.writeMem(0x4594, { 0xcb, 0xe6 });
        gbc.writeMem(0x752b, { 0xf6 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x151b, gbc.sp());
        EXPECT(0x4596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 002A
        gbc.setState(0x91b1, 0x1ed4, 0x5c80, 0x75c6, 0x5d63, 0x157c, 0x0, 0x0);
        gbc.writeMem(0x157c, { 0xd2 });
        gbc.writeMem(0x91b1, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1ed4, gbc.sp());
        EXPECT(0x91b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b1));
        EXPECT(0xe6, gbc.readMem(0x91b2));
        // CB E6 002B
        gbc.setState(0xcfe5, 0x6e28, 0xb4c0, 0x3595, 0x42b8, 0xc370, 0x0, 0x1);
        gbc.writeMem(0xc370, { 0xa7 });
        gbc.writeMem(0xcfe5, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6e28, gbc.sp());
        EXPECT(0xcfe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc370));
        EXPECT(0xcb, gbc.readMem(0xcfe5));
        EXPECT(0xe6, gbc.readMem(0xcfe6));
        // CB E6 002D
        gbc.setState(0x17a6, 0x77fb, 0x50a0, 0xbb3a, 0xdd2d, 0xad9e, 0x1, 0x1);
        gbc.writeMem(0x17a6, { 0xcb, 0xe6 });
        gbc.writeMem(0xad9e, { 0xd7 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x77fb, gbc.sp());
        EXPECT(0x17a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xad9e));
        // CB E6 002E
        gbc.setState(0xeaa1, 0xa1d7, 0xc1a0, 0xfcda, 0x33d8, 0xd05, 0x0, 0x0);
        gbc.writeMem(0xd05, { 0xb1 });
        gbc.writeMem(0xeaa1, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa1d7, gbc.sp());
        EXPECT(0xeaa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaa1));
        EXPECT(0xe6, gbc.readMem(0xeaa2));
        // CB E6 0030
        gbc.setState(0x606a, 0xec76, 0x2530, 0x3a7d, 0x626d, 0x8e48, 0x1, 0x1);
        gbc.writeMem(0x606a, { 0xcb, 0xe6 });
        gbc.writeMem(0x8e48, { 0x3a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xec76, gbc.sp());
        EXPECT(0x606c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x8e48));
        // CB E6 0031
        gbc.setState(0x41b4, 0xa2ad, 0x7030, 0xf914, 0xb79b, 0x9e8e, 0x0, 0x0);
        gbc.writeMem(0x41b4, { 0xcb, 0xe6 });
        gbc.writeMem(0x9e8e, { 0xed });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa2ad, gbc.sp());
        EXPECT(0x41b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x9e8e));
        // CB E6 0032
        gbc.setState(0x9f21, 0x4225, 0x17b0, 0xf8b1, 0x22ba, 0xb4a6, 0x1, 0x0);
        gbc.writeMem(0x9f21, { 0xcb, 0xe6 });
        gbc.writeMem(0xb4a6, { 0xe0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4225, gbc.sp());
        EXPECT(0x9f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f21));
        EXPECT(0xe6, gbc.readMem(0x9f22));
        EXPECT(0xf0, gbc.readMem(0xb4a6));
        // CB E6 0033
        gbc.setState(0x918d, 0x5ac7, 0x37d0, 0x3ed3, 0xd611, 0xa12e, 0x1, 0x1);
        gbc.writeMem(0x918d, { 0xcb, 0xe6 });
        gbc.writeMem(0xa12e, { 0xce });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5ac7, gbc.sp());
        EXPECT(0x918f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x918d));
        EXPECT(0xe6, gbc.readMem(0x918e));
        EXPECT(0xde, gbc.readMem(0xa12e));
        // CB E6 0034
        gbc.setState(0xeba8, 0x3d1b, 0x1e90, 0xd2ff, 0x971a, 0xdbf, 0x1, 0x0);
        gbc.writeMem(0xdbf, { 0x3b });
        gbc.writeMem(0xeba8, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3d1b, gbc.sp());
        EXPECT(0xebaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeba8));
        EXPECT(0xe6, gbc.readMem(0xeba9));
        // CB E6 0036
        gbc.setState(0x344, 0x86c5, 0xe7c0, 0xe9d7, 0x627f, 0xf2b6, 0x0, 0x1);
        gbc.writeMem(0x344, { 0xcb, 0xe6 });
        gbc.writeMem(0xf2b6, { 0xc1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x86c5, gbc.sp());
        EXPECT(0x346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xf2b6));
        // CB E6 0039
        gbc.setState(0x65d0, 0x43f, 0x5b70, 0x12b1, 0xdf9e, 0x5ddc, 0x1, 0x0);
        gbc.writeMem(0x5ddc, { 0xf0 });
        gbc.writeMem(0x65d0, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x43f, gbc.sp());
        EXPECT(0x65d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 003A
        gbc.setState(0x4b7b, 0x2be2, 0xe630, 0x592c, 0xf335, 0xb3c7, 0x1, 0x1);
        gbc.writeMem(0x4b7b, { 0xcb, 0xe6 });
        gbc.writeMem(0xb3c7, { 0x9a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2be2, gbc.sp());
        EXPECT(0x4b7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb3c7));
        // CB E6 003B
        gbc.setState(0x1f8d, 0x6a98, 0xd4c0, 0x4a7d, 0xcd6a, 0x7cc1, 0x0, 0x0);
        gbc.writeMem(0x1f8d, { 0xcb, 0xe6 });
        gbc.writeMem(0x7cc1, { 0x1c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6a98, gbc.sp());
        EXPECT(0x1f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 003C
        gbc.setState(0x8043, 0xe8ea, 0xbd40, 0xb2b7, 0xe167, 0xe7fb, 0x0, 0x0);
        gbc.writeMem(0x8043, { 0xcb, 0xe6 });
        gbc.writeMem(0xe7fb, { 0x5b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe8ea, gbc.sp());
        EXPECT(0x8045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8043));
        EXPECT(0xe6, gbc.readMem(0x8044));
        EXPECT(0x5b, gbc.readMem(0xe7fb));
        // CB E6 003F
        gbc.setState(0xe03a, 0xaf1, 0x2e0, 0x4c78, 0xf9e2, 0x88c0, 0x0, 0x0);
        gbc.writeMem(0x88c0, { 0x8c });
        gbc.writeMem(0xe03a, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xaf1, gbc.sp());
        EXPECT(0xe03c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x88c0));
        EXPECT(0xcb, gbc.readMem(0xe03a));
        EXPECT(0xe6, gbc.readMem(0xe03b));
        // CB E6 0040
        gbc.setState(0xa1cc, 0xd0eb, 0x7250, 0x804a, 0x3801, 0xcdc6, 0x1, 0x1);
        gbc.writeMem(0xa1cc, { 0xcb, 0xe6 });
        gbc.writeMem(0xcdc6, { 0x4c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd0eb, gbc.sp());
        EXPECT(0xa1ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1cc));
        EXPECT(0xe6, gbc.readMem(0xa1cd));
        EXPECT(0x5c, gbc.readMem(0xcdc6));
        // CB E6 0041
        gbc.setState(0xa5a6, 0x7527, 0xa6f0, 0xf473, 0xfd67, 0x8a99, 0x0, 0x1);
        gbc.writeMem(0x8a99, { 0xf7 });
        gbc.writeMem(0xa5a6, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7527, gbc.sp());
        EXPECT(0xa5a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8a99));
        EXPECT(0xcb, gbc.readMem(0xa5a6));
        EXPECT(0xe6, gbc.readMem(0xa5a7));
        // CB E6 0042
        gbc.setState(0xe65d, 0xab50, 0x1360, 0x9b6, 0xd5b7, 0xf065, 0x1, 0x0);
        gbc.writeMem(0xe65d, { 0xcb, 0xe6 });
        gbc.writeMem(0xf065, { 0x99 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xab50, gbc.sp());
        EXPECT(0xe65f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe65d));
        EXPECT(0xe6, gbc.readMem(0xe65e));
        EXPECT(0x99, gbc.readMem(0xf065));
        // CB E6 0043
        gbc.setState(0xe507, 0xa3a, 0x4b70, 0xbdd9, 0x8183, 0x4f1f, 0x0, 0x1);
        gbc.writeMem(0x4f1f, { 0x94 });
        gbc.writeMem(0xe507, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa3a, gbc.sp());
        EXPECT(0xe509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe507));
        EXPECT(0xe6, gbc.readMem(0xe508));
        // CB E6 0044
        gbc.setState(0x39a7, 0xa65b, 0x4f10, 0x531e, 0xab72, 0xae6b, 0x1, 0x0);
        gbc.writeMem(0x39a7, { 0xcb, 0xe6 });
        gbc.writeMem(0xae6b, { 0x7b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa65b, gbc.sp());
        EXPECT(0x39a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xae6b));
        // CB E6 0045
        gbc.setState(0xc7b, 0x8a1, 0xccf0, 0xe747, 0x9dce, 0xeb00, 0x0, 0x1);
        gbc.writeMem(0xc7b, { 0xcb, 0xe6 });
        gbc.writeMem(0xeb00, { 0xa8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8a1, gbc.sp());
        EXPECT(0xc7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xeb00));
        // CB E6 0046
        gbc.setState(0x32d, 0x3e89, 0x7fd0, 0x40a2, 0x8c9a, 0xd1db, 0x1, 0x1);
        gbc.writeMem(0x32d, { 0xcb, 0xe6 });
        gbc.writeMem(0xd1db, { 0xaf });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3e89, gbc.sp());
        EXPECT(0x32f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd1db));
        // CB E6 0047
        gbc.setState(0x3774, 0x7979, 0x98c0, 0xfc42, 0x59d4, 0x57bd, 0x1, 0x1);
        gbc.writeMem(0x3774, { 0xcb, 0xe6 });
        gbc.writeMem(0x57bd, { 0x73 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7979, gbc.sp());
        EXPECT(0x3776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0048
        gbc.setState(0x83fd, 0x6dc8, 0xf950, 0x5941, 0x6dae, 0x7422, 0x0, 0x0);
        gbc.writeMem(0x7422, { 0xbd });
        gbc.writeMem(0x83fd, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6dc8, gbc.sp());
        EXPECT(0x83ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83fd));
        EXPECT(0xe6, gbc.readMem(0x83fe));
        // CB E6 0049
        gbc.setState(0xb65d, 0x666a, 0x6ac0, 0x76b2, 0xd84d, 0x3814, 0x1, 0x1);
        gbc.writeMem(0x3814, { 0xba });
        gbc.writeMem(0xb65d, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x666a, gbc.sp());
        EXPECT(0xb65f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb65d));
        EXPECT(0xe6, gbc.readMem(0xb65e));
        // CB E6 004A
        gbc.setState(0x2072, 0x11ea, 0xd970, 0x80e2, 0x7a80, 0x9b90, 0x1, 0x0);
        gbc.writeMem(0x2072, { 0xcb, 0xe6 });
        gbc.writeMem(0x9b90, { 0xb8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x11ea, gbc.sp());
        EXPECT(0x2074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x9b90));
        // CB E6 004D
        gbc.setState(0x634b, 0x2d46, 0xc2c0, 0x7ec3, 0x3894, 0x7f3d, 0x0, 0x1);
        gbc.writeMem(0x634b, { 0xcb, 0xe6 });
        gbc.writeMem(0x7f3d, { 0xb3 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2d46, gbc.sp());
        EXPECT(0x634d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 004E
        gbc.setState(0x209b, 0x26d5, 0x91c0, 0x8e08, 0x6697, 0x8c3f, 0x0, 0x0);
        gbc.writeMem(0x209b, { 0xcb, 0xe6 });
        gbc.writeMem(0x8c3f, { 0xfe });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x26d5, gbc.sp());
        EXPECT(0x209d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8c3f));
        // CB E6 004F
        gbc.setState(0xe18f, 0x23de, 0x40d0, 0x1adf, 0xa6fb, 0xe292, 0x1, 0x1);
        gbc.writeMem(0xe18f, { 0xcb, 0xe6 });
        gbc.writeMem(0xe292, { 0x81 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x23de, gbc.sp());
        EXPECT(0xe191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe18f));
        EXPECT(0xe6, gbc.readMem(0xe190));
        EXPECT(0x91, gbc.readMem(0xe292));
        // CB E6 0050
        gbc.setState(0x3307, 0xcd9e, 0x54a0, 0xf28a, 0xa709, 0x58dc, 0x1, 0x1);
        gbc.writeMem(0x3307, { 0xcb, 0xe6 });
        gbc.writeMem(0x58dc, { 0x97 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcd9e, gbc.sp());
        EXPECT(0x3309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0051
        gbc.setState(0xc09f, 0x99b5, 0xc1d0, 0x7f2b, 0xac15, 0xe2c1, 0x1, 0x1);
        gbc.writeMem(0xc09f, { 0xcb, 0xe6 });
        gbc.writeMem(0xe2c1, { 0xf7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x99b5, gbc.sp());
        EXPECT(0xc0a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc09f));
        EXPECT(0xe6, gbc.readMem(0xc0a0));
        EXPECT(0xf7, gbc.readMem(0xe2c1));
        // CB E6 0052
        gbc.setState(0xa5c5, 0xd033, 0x6910, 0xaf29, 0xd3f, 0xd9eb, 0x0, 0x1);
        gbc.writeMem(0xa5c5, { 0xcb, 0xe6 });
        gbc.writeMem(0xd9eb, { 0x72 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd033, gbc.sp());
        EXPECT(0xa5c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5c5));
        EXPECT(0xe6, gbc.readMem(0xa5c6));
        EXPECT(0x72, gbc.readMem(0xd9eb));
        // CB E6 0053
        gbc.setState(0x3d07, 0xf050, 0x85f0, 0x6cee, 0xe02, 0x43bf, 0x1, 0x1);
        gbc.writeMem(0x3d07, { 0xcb, 0xe6 });
        gbc.writeMem(0x43bf, { 0x39 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf050, gbc.sp());
        EXPECT(0x3d09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0054
        gbc.setState(0xd8cb, 0x8535, 0x2700, 0x461, 0x9f7a, 0x99f8, 0x0, 0x1);
        gbc.writeMem(0x99f8, { 0x4d });
        gbc.writeMem(0xd8cb, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8535, gbc.sp());
        EXPECT(0xd8cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x99f8));
        EXPECT(0xcb, gbc.readMem(0xd8cb));
        EXPECT(0xe6, gbc.readMem(0xd8cc));
        // CB E6 0059
        gbc.setState(0x11c6, 0x349e, 0x8f10, 0x4339, 0x25da, 0xa4a2, 0x0, 0x1);
        gbc.writeMem(0x11c6, { 0xcb, 0xe6 });
        gbc.writeMem(0xa4a2, { 0x72 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x349e, gbc.sp());
        EXPECT(0x11c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa4a2));
        // CB E6 005A
        gbc.setState(0x1f2c, 0xb09c, 0x3b80, 0x1f47, 0x7eae, 0xb1db, 0x0, 0x1);
        gbc.writeMem(0x1f2c, { 0xcb, 0xe6 });
        gbc.writeMem(0xb1db, { 0xa0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb09c, gbc.sp());
        EXPECT(0x1f2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb1db));
        // CB E6 005B
        gbc.setState(0xed41, 0xdef8, 0x1750, 0x2a63, 0xc8cd, 0x5779, 0x1, 0x0);
        gbc.writeMem(0x5779, { 0x59 });
        gbc.writeMem(0xed41, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdef8, gbc.sp());
        EXPECT(0xed43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed41));
        EXPECT(0xe6, gbc.readMem(0xed42));
        // CB E6 0061
        gbc.setState(0xdef9, 0xe9f5, 0xaf70, 0xfbf4, 0xdd5b, 0xa4ea, 0x0, 0x0);
        gbc.writeMem(0xa4ea, { 0x94 });
        gbc.writeMem(0xdef9, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe9f5, gbc.sp());
        EXPECT(0xdefb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa4ea));
        EXPECT(0xcb, gbc.readMem(0xdef9));
        EXPECT(0xe6, gbc.readMem(0xdefa));
        // CB E6 0062
        gbc.setState(0x6048, 0xb2f3, 0x90a0, 0x2734, 0xf8dd, 0xb88, 0x1, 0x0);
        gbc.writeMem(0xb88, { 0xf1 });
        gbc.writeMem(0x6048, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb2f3, gbc.sp());
        EXPECT(0x604a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0063
        gbc.setState(0x806, 0xe73e, 0x5e40, 0x4f63, 0xea9d, 0xa4cf, 0x0, 0x0);
        gbc.writeMem(0x806, { 0xcb, 0xe6 });
        gbc.writeMem(0xa4cf, { 0x80 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe73e, gbc.sp());
        EXPECT(0x808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xa4cf));
        // CB E6 0064
        gbc.setState(0xe76e, 0xce58, 0xefd0, 0x7849, 0x90b2, 0x9882, 0x1, 0x1);
        gbc.writeMem(0x9882, { 0xe });
        gbc.writeMem(0xe76e, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xce58, gbc.sp());
        EXPECT(0xe770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x9882));
        EXPECT(0xcb, gbc.readMem(0xe76e));
        EXPECT(0xe6, gbc.readMem(0xe76f));
        // CB E6 0065
        gbc.setState(0x74ad, 0x5e90, 0xf7c0, 0x5263, 0x104d, 0xab02, 0x1, 0x0);
        gbc.writeMem(0x74ad, { 0xcb, 0xe6 });
        gbc.writeMem(0xab02, { 0x3a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5e90, gbc.sp());
        EXPECT(0x74af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xab02));
        // CB E6 0066
        gbc.setState(0x1340, 0xbcb9, 0x1190, 0xc5ab, 0xe7a6, 0xec4f, 0x1, 0x1);
        gbc.writeMem(0x1340, { 0xcb, 0xe6 });
        gbc.writeMem(0xec4f, { 0x4a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbcb9, gbc.sp());
        EXPECT(0x1342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xec4f));
        // CB E6 0067
        gbc.setState(0x209e, 0x87fd, 0xa9a0, 0x563f, 0xb39a, 0x96ed, 0x0, 0x0);
        gbc.writeMem(0x209e, { 0xcb, 0xe6 });
        gbc.writeMem(0x96ed, { 0x85 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x87fd, gbc.sp());
        EXPECT(0x20a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x96ed));
        // CB E6 0069
        gbc.setState(0x6d65, 0x3712, 0x6c30, 0x40f, 0x4f60, 0xae56, 0x0, 0x0);
        gbc.writeMem(0x6d65, { 0xcb, 0xe6 });
        gbc.writeMem(0xae56, { 0x78 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3712, gbc.sp());
        EXPECT(0x6d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xae56));
        // CB E6 006A
        gbc.setState(0xe16a, 0x7162, 0x30, 0x4b62, 0xf3f6, 0xae1c, 0x1, 0x0);
        gbc.writeMem(0xae1c, { 0x5f });
        gbc.writeMem(0xe16a, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7162, gbc.sp());
        EXPECT(0xe16c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xae1c));
        EXPECT(0xcb, gbc.readMem(0xe16a));
        EXPECT(0xe6, gbc.readMem(0xe16b));
        // CB E6 006B
        gbc.setState(0x110c, 0xa878, 0xad80, 0x635e, 0xb7df, 0xc83b, 0x1, 0x0);
        gbc.writeMem(0x110c, { 0xcb, 0xe6 });
        gbc.writeMem(0xc83b, { 0x8c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa878, gbc.sp());
        EXPECT(0x110e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc83b));
        // CB E6 006C
        gbc.setState(0x8251, 0x9c11, 0x1170, 0x19f3, 0xbb5d, 0xe99a, 0x1, 0x0);
        gbc.writeMem(0x8251, { 0xcb, 0xe6 });
        gbc.writeMem(0xe99a, { 0x74 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9c11, gbc.sp());
        EXPECT(0x8253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8251));
        EXPECT(0xe6, gbc.readMem(0x8252));
        EXPECT(0x74, gbc.readMem(0xe99a));
        // CB E6 006D
        gbc.setState(0xa34d, 0xe9e3, 0x2900, 0x2eb, 0x5f12, 0xafcf, 0x0, 0x0);
        gbc.writeMem(0xa34d, { 0xcb, 0xe6 });
        gbc.writeMem(0xafcf, { 0x10 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe9e3, gbc.sp());
        EXPECT(0xa34f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa34d));
        EXPECT(0xe6, gbc.readMem(0xa34e));
        EXPECT(0x10, gbc.readMem(0xafcf));
        // CB E6 006E
        gbc.setState(0x7fa9, 0x4000, 0xe060, 0x59a0, 0x15b6, 0xed2e, 0x0, 0x0);
        gbc.writeMem(0x7fa9, { 0xcb, 0xe6 });
        gbc.writeMem(0xed2e, { 0x60 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4000, gbc.sp());
        EXPECT(0x7fab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xed2e));
        // CB E6 006F
        gbc.setState(0x5f54, 0xdad, 0x9ab0, 0x39de, 0xe8d2, 0x8beb, 0x1, 0x0);
        gbc.writeMem(0x5f54, { 0xcb, 0xe6 });
        gbc.writeMem(0x8beb, { 0xb8 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xdad, gbc.sp());
        EXPECT(0x5f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x8beb));
        // CB E6 0070
        gbc.setState(0x42ee, 0x4000, 0x38d0, 0x36ef, 0xb5b8, 0x886a, 0x0, 0x0);
        gbc.writeMem(0x42ee, { 0xcb, 0xe6 });
        gbc.writeMem(0x886a, { 0xe9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4000, gbc.sp());
        EXPECT(0x42f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x886a));
        // CB E6 0071
        gbc.setState(0xb35, 0x59c1, 0x2590, 0x4e4c, 0x20af, 0x7b6b, 0x0, 0x0);
        gbc.writeMem(0xb35, { 0xcb, 0xe6 });
        gbc.writeMem(0x7b6b, { 0xfa });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x59c1, gbc.sp());
        EXPECT(0xb37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0072
        gbc.setState(0x2fa5, 0x6d1b, 0xb4b0, 0xa0d2, 0x494d, 0xa0e4, 0x1, 0x1);
        gbc.writeMem(0x2fa5, { 0xcb, 0xe6 });
        gbc.writeMem(0xa0e4, { 0x13 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6d1b, gbc.sp());
        EXPECT(0x2fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa0e4));
        // CB E6 0073
        gbc.setState(0xec30, 0xd368, 0x3390, 0xb72d, 0x23db, 0xf03, 0x0, 0x1);
        gbc.writeMem(0xf03, { 0x39 });
        gbc.writeMem(0xec30, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd368, gbc.sp());
        EXPECT(0xec32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec30));
        EXPECT(0xe6, gbc.readMem(0xec31));
        // CB E6 0074
        gbc.setState(0xd133, 0x9e16, 0x7ae0, 0x3b38, 0x85c, 0xe990, 0x1, 0x1);
        gbc.writeMem(0xd133, { 0xcb, 0xe6 });
        gbc.writeMem(0xe990, { 0xdc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9e16, gbc.sp());
        EXPECT(0xd135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd133));
        EXPECT(0xe6, gbc.readMem(0xd134));
        EXPECT(0xdc, gbc.readMem(0xe990));
        // CB E6 0075
        gbc.setState(0xe931, 0xcd4f, 0xdd40, 0x1c4d, 0xcffe, 0x325e, 0x1, 0x0);
        gbc.writeMem(0x325e, { 0x7c });
        gbc.writeMem(0xe931, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcd4f, gbc.sp());
        EXPECT(0xe933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe931));
        EXPECT(0xe6, gbc.readMem(0xe932));
        // CB E6 0077
        gbc.setState(0x9b1c, 0xc9fc, 0xb8d0, 0x1d8d, 0x5f3e, 0xe5c9, 0x0, 0x0);
        gbc.writeMem(0x9b1c, { 0xcb, 0xe6 });
        gbc.writeMem(0xe5c9, { 0x97 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc9fc, gbc.sp());
        EXPECT(0x9b1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b1c));
        EXPECT(0xe6, gbc.readMem(0x9b1d));
        EXPECT(0x97, gbc.readMem(0xe5c9));
        // CB E6 0079
        gbc.setState(0xb506, 0xaeaf, 0xff90, 0xb572, 0xae48, 0xda1c, 0x1, 0x0);
        gbc.writeMem(0xb506, { 0xcb, 0xe6 });
        gbc.writeMem(0xda1c, { 0xdf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xaeaf, gbc.sp());
        EXPECT(0xb508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb506));
        EXPECT(0xe6, gbc.readMem(0xb507));
        EXPECT(0xdf, gbc.readMem(0xda1c));
        // CB E6 007A
        gbc.setState(0x23d6, 0x1e1b, 0xda80, 0xd599, 0xc864, 0xf463, 0x1, 0x1);
        gbc.writeMem(0x23d6, { 0xcb, 0xe6 });
        gbc.writeMem(0xf463, { 0x1f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1e1b, gbc.sp());
        EXPECT(0x23d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xf463));
        // CB E6 007B
        gbc.setState(0x94fa, 0xb7d, 0xd460, 0x47b1, 0x961b, 0xd1f4, 0x0, 0x0);
        gbc.writeMem(0x94fa, { 0xcb, 0xe6 });
        gbc.writeMem(0xd1f4, { 0xf4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb7d, gbc.sp());
        EXPECT(0x94fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94fa));
        EXPECT(0xe6, gbc.readMem(0x94fb));
        EXPECT(0xf4, gbc.readMem(0xd1f4));
        // CB E6 007C
        gbc.setState(0x266a, 0x1abe, 0x7850, 0xbd68, 0x578b, 0xf275, 0x0, 0x0);
        gbc.writeMem(0x266a, { 0xcb, 0xe6 });
        gbc.writeMem(0xf275, { 0xce });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1abe, gbc.sp());
        EXPECT(0x266c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xf275));
        // CB E6 007D
        gbc.setState(0x9466, 0x9c94, 0xfd20, 0xfa3d, 0x500a, 0x9373, 0x0, 0x1);
        gbc.writeMem(0x9373, { 0xc0 });
        gbc.writeMem(0x9466, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9c94, gbc.sp());
        EXPECT(0x9468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9373));
        EXPECT(0xcb, gbc.readMem(0x9466));
        EXPECT(0xe6, gbc.readMem(0x9467));
        // CB E6 007F
        gbc.setState(0xe5e3, 0xb46e, 0x8bb0, 0x3db2, 0xfe87, 0x55b4, 0x0, 0x1);
        gbc.writeMem(0x55b4, { 0x31 });
        gbc.writeMem(0xe5e3, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb46e, gbc.sp());
        EXPECT(0xe5e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5e3));
        EXPECT(0xe6, gbc.readMem(0xe5e4));
        // CB E6 0080
        gbc.setState(0xe2c4, 0xd780, 0x2870, 0x6a8f, 0x613e, 0x1282, 0x0, 0x1);
        gbc.writeMem(0x1282, { 0xdb });
        gbc.writeMem(0xe2c4, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd780, gbc.sp());
        EXPECT(0xe2c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c4));
        EXPECT(0xe6, gbc.readMem(0xe2c5));
        // CB E6 0082
        gbc.setState(0xddd7, 0xf7cb, 0x3d60, 0xc472, 0xf782, 0xd325, 0x1, 0x0);
        gbc.writeMem(0xd325, { 0x16 });
        gbc.writeMem(0xddd7, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf7cb, gbc.sp());
        EXPECT(0xddd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd325));
        EXPECT(0xcb, gbc.readMem(0xddd7));
        EXPECT(0xe6, gbc.readMem(0xddd8));
        // CB E6 0083
        gbc.setState(0x4ee, 0x315f, 0xdf10, 0xd6e7, 0x3ac4, 0x9204, 0x1, 0x0);
        gbc.writeMem(0x4ee, { 0xcb, 0xe6 });
        gbc.writeMem(0x9204, { 0x14 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x315f, gbc.sp());
        EXPECT(0x4f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9204));
        // CB E6 0086
        gbc.setState(0x2482, 0xcb79, 0xf4d0, 0xd7be, 0xacfb, 0x9660, 0x1, 0x0);
        gbc.writeMem(0x2482, { 0xcb, 0xe6 });
        gbc.writeMem(0x9660, { 0xda });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcb79, gbc.sp());
        EXPECT(0x2484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9660));
        // CB E6 0087
        gbc.setState(0xad26, 0x6418, 0x2c0, 0x3f22, 0x3396, 0x5d46, 0x1, 0x0);
        gbc.writeMem(0x5d46, { 0x5d });
        gbc.writeMem(0xad26, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6418, gbc.sp());
        EXPECT(0xad28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad26));
        EXPECT(0xe6, gbc.readMem(0xad27));
        // CB E6 0088
        gbc.setState(0x5e8b, 0xa8de, 0x25f0, 0xc4bd, 0x5303, 0x4afb, 0x1, 0x1);
        gbc.writeMem(0x4afb, { 0x5d });
        gbc.writeMem(0x5e8b, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa8de, gbc.sp());
        EXPECT(0x5e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0089
        gbc.setState(0xb23c, 0xe5ff, 0x26f0, 0x1cc7, 0x4001, 0x264f, 0x1, 0x0);
        gbc.writeMem(0x264f, { 0x57 });
        gbc.writeMem(0xb23c, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe5ff, gbc.sp());
        EXPECT(0xb23e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb23c));
        EXPECT(0xe6, gbc.readMem(0xb23d));
        // CB E6 008E
        gbc.setState(0x9bb3, 0x569, 0xe7e0, 0x17fb, 0x9ce3, 0xa078, 0x1, 0x0);
        gbc.writeMem(0x9bb3, { 0xcb, 0xe6 });
        gbc.writeMem(0xa078, { 0x57 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x569, gbc.sp());
        EXPECT(0x9bb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb3));
        EXPECT(0xe6, gbc.readMem(0x9bb4));
        EXPECT(0x57, gbc.readMem(0xa078));
        // CB E6 008F
        gbc.setState(0x8432, 0xeb63, 0x4290, 0x9b50, 0x68e, 0xb7fa, 0x1, 0x0);
        gbc.writeMem(0x8432, { 0xcb, 0xe6 });
        gbc.writeMem(0xb7fa, { 0x1a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xeb63, gbc.sp());
        EXPECT(0x8434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8432));
        EXPECT(0xe6, gbc.readMem(0x8433));
        EXPECT(0x1a, gbc.readMem(0xb7fa));
        // CB E6 0090
        gbc.setState(0x5f8e, 0x795c, 0xbfc0, 0xc28d, 0x445e, 0xcbe0, 0x1, 0x0);
        gbc.writeMem(0x5f8e, { 0xcb, 0xe6 });
        gbc.writeMem(0xcbe0, { 0xa3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x795c, gbc.sp());
        EXPECT(0x5f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcbe0));
        // CB E6 0091
        gbc.setState(0x95eb, 0x501, 0x1fe0, 0x40f9, 0x74cd, 0x191, 0x1, 0x1);
        gbc.writeMem(0x191, { 0xb4 });
        gbc.writeMem(0x95eb, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x501, gbc.sp());
        EXPECT(0x95ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95eb));
        EXPECT(0xe6, gbc.readMem(0x95ec));
        // CB E6 0092
        gbc.setState(0x74cb, 0x32de, 0x6ec0, 0xd02b, 0xed3c, 0xc40a, 0x0, 0x1);
        gbc.writeMem(0x74cb, { 0xcb, 0xe6 });
        gbc.writeMem(0xc40a, { 0xf1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x32de, gbc.sp());
        EXPECT(0x74cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc40a));
        // CB E6 0094
        gbc.setState(0xe871, 0x1c, 0x5400, 0x5299, 0x65bd, 0x50d4, 0x1, 0x0);
        gbc.writeMem(0x50d4, { 0x39 });
        gbc.writeMem(0xe871, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1c, gbc.sp());
        EXPECT(0xe873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe871));
        EXPECT(0xe6, gbc.readMem(0xe872));
        // CB E6 0095
        gbc.setState(0x1dca, 0x5238, 0x2950, 0x543d, 0x175, 0xdd64, 0x1, 0x1);
        gbc.writeMem(0x1dca, { 0xcb, 0xe6 });
        gbc.writeMem(0xdd64, { 0x4c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5238, gbc.sp());
        EXPECT(0x1dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xdd64));
        // CB E6 0096
        gbc.setState(0xe94e, 0x47d1, 0x9ce0, 0xbc2c, 0xd548, 0xe4d8, 0x0, 0x0);
        gbc.writeMem(0xe4d8, { 0xa });
        gbc.writeMem(0xe94e, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x47d1, gbc.sp());
        EXPECT(0xe950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe4d8));
        EXPECT(0xcb, gbc.readMem(0xe94e));
        EXPECT(0xe6, gbc.readMem(0xe94f));
        // CB E6 009A
        gbc.setState(0xd25, 0xd7c9, 0x2610, 0x32b0, 0x2e26, 0xac17, 0x1, 0x0);
        gbc.writeMem(0xd25, { 0xcb, 0xe6 });
        gbc.writeMem(0xac17, { 0x8e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd7c9, gbc.sp());
        EXPECT(0xd27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xac17));
        // CB E6 009B
        gbc.setState(0x2b0e, 0xfb1d, 0xe520, 0x6559, 0xa9be, 0xb0bf, 0x0, 0x1);
        gbc.writeMem(0x2b0e, { 0xcb, 0xe6 });
        gbc.writeMem(0xb0bf, { 0x2c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfb1d, gbc.sp());
        EXPECT(0x2b10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb0bf));
        // CB E6 009C
        gbc.setState(0x8e1a, 0x884b, 0xc100, 0x6b09, 0x5611, 0x829c, 0x1, 0x0);
        gbc.writeMem(0x829c, { 0x78 });
        gbc.writeMem(0x8e1a, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x884b, gbc.sp());
        EXPECT(0x8e1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x829c));
        EXPECT(0xcb, gbc.readMem(0x8e1a));
        EXPECT(0xe6, gbc.readMem(0x8e1b));
        // CB E6 009D
        gbc.setState(0xd1d9, 0x76f9, 0x3d90, 0x7dde, 0xbfb0, 0xf31, 0x1, 0x1);
        gbc.writeMem(0xf31, { 0x3f });
        gbc.writeMem(0xd1d9, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x76f9, gbc.sp());
        EXPECT(0xd1db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d9));
        EXPECT(0xe6, gbc.readMem(0xd1da));
        // CB E6 009E
        gbc.setState(0xe65, 0xa927, 0xc8f0, 0xde28, 0x9338, 0xbce3, 0x1, 0x1);
        gbc.writeMem(0xe65, { 0xcb, 0xe6 });
        gbc.writeMem(0xbce3, { 0x18 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa927, gbc.sp());
        EXPECT(0xe67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xbce3));
        // CB E6 009F
        gbc.setState(0x84d8, 0xae6c, 0xf360, 0x50e, 0xff02, 0x6ddc, 0x1, 0x0);
        gbc.writeMem(0x6ddc, { 0x1b });
        gbc.writeMem(0x84d8, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xae6c, gbc.sp());
        EXPECT(0x84da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84d8));
        EXPECT(0xe6, gbc.readMem(0x84d9));
        // CB E6 00A1
        gbc.setState(0xed0d, 0x63e4, 0x9f50, 0x3b26, 0x51f7, 0xfcd8, 0x0, 0x1);
        gbc.writeMem(0xed0d, { 0xcb, 0xe6 });
        gbc.writeMem(0xfcd8, { 0x9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x63e4, gbc.sp());
        EXPECT(0xed0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed0d));
        EXPECT(0xe6, gbc.readMem(0xed0e));
        EXPECT(0x19, gbc.readMem(0xfcd8));
        // CB E6 00A2
        gbc.setState(0x719f, 0xcfbb, 0xb3d0, 0x81b4, 0x25f8, 0xf83d, 0x1, 0x0);
        gbc.writeMem(0x719f, { 0xcb, 0xe6 });
        gbc.writeMem(0xf83d, { 0xac });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xcfbb, gbc.sp());
        EXPECT(0x71a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xf83d));
        // CB E6 00A3
        gbc.setState(0x7deb, 0xc318, 0xa2d0, 0x5c02, 0x49c2, 0xf97f, 0x0, 0x1);
        gbc.writeMem(0x7deb, { 0xcb, 0xe6 });
        gbc.writeMem(0xf97f, { 0x91 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc318, gbc.sp());
        EXPECT(0x7ded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xf97f));
        // CB E6 00A4
        gbc.setState(0xda40, 0x8a0c, 0x7900, 0x9ecc, 0x1d3c, 0xca36, 0x1, 0x1);
        gbc.writeMem(0xca36, { 0xba });
        gbc.writeMem(0xda40, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8a0c, gbc.sp());
        EXPECT(0xda42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xca36));
        EXPECT(0xcb, gbc.readMem(0xda40));
        EXPECT(0xe6, gbc.readMem(0xda41));
        // CB E6 00A5
        gbc.setState(0xe433, 0xa36e, 0xc260, 0xc042, 0xf60d, 0x1255, 0x0, 0x0);
        gbc.writeMem(0x1255, { 0xf2 });
        gbc.writeMem(0xe433, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa36e, gbc.sp());
        EXPECT(0xe435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe433));
        EXPECT(0xe6, gbc.readMem(0xe434));
        // CB E6 00A7
        gbc.setState(0xa395, 0xf20c, 0x34f0, 0xfcbf, 0xdeee, 0x6c7c, 0x0, 0x0);
        gbc.writeMem(0x6c7c, { 0xbd });
        gbc.writeMem(0xa395, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf20c, gbc.sp());
        EXPECT(0xa397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa395));
        EXPECT(0xe6, gbc.readMem(0xa396));
        // CB E6 00A8
        gbc.setState(0x70ad, 0x98e0, 0x9dc0, 0x3789, 0xda2b, 0x2468, 0x1, 0x1);
        gbc.writeMem(0x2468, { 0xba });
        gbc.writeMem(0x70ad, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x98e0, gbc.sp());
        EXPECT(0x70af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 00A9
        gbc.setState(0x3e5b, 0xf3d6, 0xe380, 0x25d6, 0xca62, 0xd8cf, 0x0, 0x1);
        gbc.writeMem(0x3e5b, { 0xcb, 0xe6 });
        gbc.writeMem(0xd8cf, { 0xe1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf3d6, gbc.sp());
        EXPECT(0x3e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd8cf));
        // CB E6 00AA
        gbc.setState(0x4a0f, 0x69a4, 0xcfc0, 0x101a, 0x505e, 0xda06, 0x1, 0x0);
        gbc.writeMem(0x4a0f, { 0xcb, 0xe6 });
        gbc.writeMem(0xda06, { 0x36 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x69a4, gbc.sp());
        EXPECT(0x4a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xda06));
        // CB E6 00AB
        gbc.setState(0xdcae, 0x5744, 0x5700, 0xd89c, 0xfd7c, 0x8736, 0x1, 0x0);
        gbc.writeMem(0x8736, { 0xe });
        gbc.writeMem(0xdcae, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5744, gbc.sp());
        EXPECT(0xdcb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x8736));
        EXPECT(0xcb, gbc.readMem(0xdcae));
        EXPECT(0xe6, gbc.readMem(0xdcaf));
        // CB E6 00AC
        gbc.setState(0xaed5, 0x6e99, 0xb570, 0x4745, 0x979b, 0x77c, 0x1, 0x1);
        gbc.writeMem(0x77c, { 0x1c });
        gbc.writeMem(0xaed5, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6e99, gbc.sp());
        EXPECT(0xaed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed5));
        EXPECT(0xe6, gbc.readMem(0xaed6));
        // CB E6 00AD
        gbc.setState(0x9747, 0x1c9e, 0x49a0, 0xe057, 0x57b2, 0x96ad, 0x1, 0x0);
        gbc.writeMem(0x96ad, { 0xa4 });
        gbc.writeMem(0x9747, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1c9e, gbc.sp());
        EXPECT(0x9749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x96ad));
        EXPECT(0xcb, gbc.readMem(0x9747));
        EXPECT(0xe6, gbc.readMem(0x9748));
        // CB E6 00AE
        gbc.setState(0xe767, 0xb4df, 0xb4a0, 0xfd9c, 0xcae3, 0xd1e4, 0x0, 0x0);
        gbc.writeMem(0xd1e4, { 0xa6 });
        gbc.writeMem(0xe767, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb4df, gbc.sp());
        EXPECT(0xe769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd1e4));
        EXPECT(0xcb, gbc.readMem(0xe767));
        EXPECT(0xe6, gbc.readMem(0xe768));
        // CB E6 00AF
        gbc.setState(0xc852, 0xef24, 0x8360, 0xce54, 0x8663, 0x5305, 0x0, 0x0);
        gbc.writeMem(0x5305, { 0x51 });
        gbc.writeMem(0xc852, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xef24, gbc.sp());
        EXPECT(0xc854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc852));
        EXPECT(0xe6, gbc.readMem(0xc853));
        // CB E6 00B1
        gbc.setState(0xcac4, 0x50e9, 0x2920, 0x657e, 0x3159, 0xc18a, 0x0, 0x1);
        gbc.writeMem(0xc18a, { 0xf2 });
        gbc.writeMem(0xcac4, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x50e9, gbc.sp());
        EXPECT(0xcac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xc18a));
        EXPECT(0xcb, gbc.readMem(0xcac4));
        EXPECT(0xe6, gbc.readMem(0xcac5));
        // CB E6 00B2
        gbc.setState(0x51b6, 0xca2a, 0x8cd0, 0xa523, 0x9493, 0xd8a8, 0x0, 0x0);
        gbc.writeMem(0x51b6, { 0xcb, 0xe6 });
        gbc.writeMem(0xd8a8, { 0xa3 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xca2a, gbc.sp());
        EXPECT(0x51b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd8a8));
        // CB E6 00B4
        gbc.setState(0xb7bc, 0x49fd, 0x69f0, 0xbe9c, 0xcd90, 0x8838, 0x1, 0x0);
        gbc.writeMem(0x8838, { 0xba });
        gbc.writeMem(0xb7bc, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x49fd, gbc.sp());
        EXPECT(0xb7be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x8838));
        EXPECT(0xcb, gbc.readMem(0xb7bc));
        EXPECT(0xe6, gbc.readMem(0xb7bd));
        // CB E6 00B5
        gbc.setState(0x20a7, 0x2567, 0xacb0, 0xbde6, 0xbee0, 0xc3cc, 0x1, 0x1);
        gbc.writeMem(0x20a7, { 0xcb, 0xe6 });
        gbc.writeMem(0xc3cc, { 0x72 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2567, gbc.sp());
        EXPECT(0x20a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xc3cc));
        // CB E6 00B6
        gbc.setState(0x73a1, 0xd108, 0x8310, 0x5494, 0x6cc6, 0x8bfa, 0x1, 0x0);
        gbc.writeMem(0x73a1, { 0xcb, 0xe6 });
        gbc.writeMem(0x8bfa, { 0x23 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd108, gbc.sp());
        EXPECT(0x73a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8bfa));
        // CB E6 00B7
        gbc.setState(0x2562, 0x29a9, 0x8ef0, 0x25c2, 0x9696, 0x83ba, 0x0, 0x0);
        gbc.writeMem(0x2562, { 0xcb, 0xe6 });
        gbc.writeMem(0x83ba, { 0xa });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x29a9, gbc.sp());
        EXPECT(0x2564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x83ba));
        // CB E6 00B8
        gbc.setState(0x450f, 0xa03d, 0x2450, 0x3ee5, 0x12b, 0x821b, 0x1, 0x1);
        gbc.writeMem(0x450f, { 0xcb, 0xe6 });
        gbc.writeMem(0x821b, { 0xac });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa03d, gbc.sp());
        EXPECT(0x4511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x821b));
        // CB E6 00B9
        gbc.setState(0xc767, 0xd40c, 0x3190, 0xb3aa, 0xe5c0, 0xf43b, 0x1, 0x1);
        gbc.writeMem(0xc767, { 0xcb, 0xe6 });
        gbc.writeMem(0xf43b, { 0xbc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd40c, gbc.sp());
        EXPECT(0xc769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc767));
        EXPECT(0xe6, gbc.readMem(0xc768));
        EXPECT(0xbc, gbc.readMem(0xf43b));
        // CB E6 00BA
        gbc.setState(0xe6ee, 0x55fd, 0xf330, 0x3b8d, 0x3181, 0xb749, 0x0, 0x1);
        gbc.writeMem(0xb749, { 0x89 });
        gbc.writeMem(0xe6ee, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x55fd, gbc.sp());
        EXPECT(0xe6f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb749));
        EXPECT(0xcb, gbc.readMem(0xe6ee));
        EXPECT(0xe6, gbc.readMem(0xe6ef));
        // CB E6 00BB
        gbc.setState(0x5d19, 0x3ae3, 0x7780, 0x7442, 0xf8c, 0xba6e, 0x0, 0x0);
        gbc.writeMem(0x5d19, { 0xcb, 0xe6 });
        gbc.writeMem(0xba6e, { 0xfb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3ae3, gbc.sp());
        EXPECT(0x5d1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xba6e));
        // CB E6 00BC
        gbc.setState(0xd765, 0xb905, 0xec40, 0x879, 0x806, 0xca7c, 0x0, 0x0);
        gbc.writeMem(0xca7c, { 0xca });
        gbc.writeMem(0xd765, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb905, gbc.sp());
        EXPECT(0xd767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xca7c));
        EXPECT(0xcb, gbc.readMem(0xd765));
        EXPECT(0xe6, gbc.readMem(0xd766));
        // CB E6 00C0
        gbc.setState(0x3431, 0x724e, 0xbd20, 0xff58, 0x50ef, 0x4e15, 0x0, 0x1);
        gbc.writeMem(0x3431, { 0xcb, 0xe6 });
        gbc.writeMem(0x4e15, { 0x37 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x724e, gbc.sp());
        EXPECT(0x3433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 00C1
        gbc.setState(0x6e9a, 0xd05e, 0x7020, 0xff6a, 0xa3e, 0xe092, 0x0, 0x0);
        gbc.writeMem(0x6e9a, { 0xcb, 0xe6 });
        gbc.writeMem(0xe092, { 0x51 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd05e, gbc.sp());
        EXPECT(0x6e9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe092));
        // CB E6 00C2
        gbc.setState(0x319d, 0x680b, 0x4d90, 0x3fdf, 0xbc2f, 0x8680, 0x1, 0x0);
        gbc.writeMem(0x319d, { 0xcb, 0xe6 });
        gbc.writeMem(0x8680, { 0xf7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x680b, gbc.sp());
        EXPECT(0x319f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8680));
        // CB E6 00C3
        gbc.setState(0x111b, 0x5f95, 0x27d0, 0x15a5, 0x74c6, 0x5492, 0x0, 0x1);
        gbc.writeMem(0x111b, { 0xcb, 0xe6 });
        gbc.writeMem(0x5492, { 0x74 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5f95, gbc.sp());
        EXPECT(0x111d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 00C4
        gbc.setState(0x57e3, 0xd061, 0x6d0, 0x6746, 0x6edb, 0xb57c, 0x1, 0x0);
        gbc.writeMem(0x57e3, { 0xcb, 0xe6 });
        gbc.writeMem(0xb57c, { 0xa6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd061, gbc.sp());
        EXPECT(0x57e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb57c));
        // CB E6 00C5
        gbc.setState(0x1674, 0x622f, 0xd9a0, 0xee5, 0x4c66, 0x9900, 0x1, 0x0);
        gbc.writeMem(0x1674, { 0xcb, 0xe6 });
        gbc.writeMem(0x9900, { 0xff });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x622f, gbc.sp());
        EXPECT(0x1676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9900));
        // CB E6 00C8
        gbc.setState(0x255, 0x4cd3, 0x240, 0x5e5d, 0x403e, 0x8c56, 0x1, 0x0);
        gbc.writeMem(0x255, { 0xcb, 0xe6 });
        gbc.writeMem(0x8c56, { 0xdf });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4cd3, gbc.sp());
        EXPECT(0x257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x8c56));
        // CB E6 00CA
        gbc.setState(0xdfb8, 0x7a8d, 0xfe90, 0x7a9e, 0xb9f3, 0x9a47, 0x1, 0x1);
        gbc.writeMem(0x9a47, { 0xb1 });
        gbc.writeMem(0xdfb8, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7a8d, gbc.sp());
        EXPECT(0xdfba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x9a47));
        EXPECT(0xcb, gbc.readMem(0xdfb8));
        EXPECT(0xe6, gbc.readMem(0xdfb9));
        // CB E6 00CC
        gbc.setState(0xa23e, 0x6ff2, 0x1480, 0xdc0a, 0xcef6, 0x45d2, 0x0, 0x0);
        gbc.writeMem(0x45d2, { 0x54 });
        gbc.writeMem(0xa23e, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6ff2, gbc.sp());
        EXPECT(0xa240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa23e));
        EXPECT(0xe6, gbc.readMem(0xa23f));
        // CB E6 00CD
        gbc.setState(0xc50b, 0xc850, 0x2dd0, 0x66d2, 0x4ecd, 0x613e, 0x0, 0x0);
        gbc.writeMem(0x613e, { 0x71 });
        gbc.writeMem(0xc50b, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc850, gbc.sp());
        EXPECT(0xc50d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc50b));
        EXPECT(0xe6, gbc.readMem(0xc50c));
        // CB E6 00CE
        gbc.setState(0x7a81, 0x2f36, 0x95a0, 0x3f44, 0x7d8e, 0xab4b, 0x0, 0x0);
        gbc.writeMem(0x7a81, { 0xcb, 0xe6 });
        gbc.writeMem(0xab4b, { 0x77 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2f36, gbc.sp());
        EXPECT(0x7a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xab4b));
        // CB E6 00CF
        gbc.setState(0xb693, 0x7647, 0xd2e0, 0x8af, 0xd07a, 0x2ae1, 0x1, 0x0);
        gbc.writeMem(0x2ae1, { 0x95 });
        gbc.writeMem(0xb693, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7647, gbc.sp());
        EXPECT(0xb695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb693));
        EXPECT(0xe6, gbc.readMem(0xb694));
        // CB E6 00D0
        gbc.setState(0x8c17, 0xb39a, 0x9080, 0x2ddd, 0xcda2, 0x23f9, 0x0, 0x0);
        gbc.writeMem(0x23f9, { 0x9b });
        gbc.writeMem(0x8c17, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb39a, gbc.sp());
        EXPECT(0x8c19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c17));
        EXPECT(0xe6, gbc.readMem(0x8c18));
        // CB E6 00D1
        gbc.setState(0x2ec7, 0x9987, 0xd8b0, 0xc476, 0x8b2d, 0x8a0d, 0x0, 0x0);
        gbc.writeMem(0x2ec7, { 0xcb, 0xe6 });
        gbc.writeMem(0x8a0d, { 0xb1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9987, gbc.sp());
        EXPECT(0x2ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x8a0d));
        // CB E6 00D2
        gbc.setState(0xa5d3, 0x4c6b, 0xf390, 0x12b1, 0x9892, 0x6b04, 0x1, 0x0);
        gbc.writeMem(0x6b04, { 0xbe });
        gbc.writeMem(0xa5d3, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4c6b, gbc.sp());
        EXPECT(0xa5d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d3));
        EXPECT(0xe6, gbc.readMem(0xa5d4));
        // CB E6 00D3
        gbc.setState(0x6a76, 0x6837, 0xb590, 0xe0db, 0x4f57, 0xe404, 0x1, 0x1);
        gbc.writeMem(0x6a76, { 0xcb, 0xe6 });
        gbc.writeMem(0xe404, { 0x9d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6837, gbc.sp());
        EXPECT(0x6a78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe404));
        // CB E6 00D4
        gbc.setState(0x1d09, 0x9334, 0xf950, 0xc920, 0x301d, 0xe080, 0x1, 0x0);
        gbc.writeMem(0x1d09, { 0xcb, 0xe6 });
        gbc.writeMem(0xe080, { 0x5e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9334, gbc.sp());
        EXPECT(0x1d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe080));
        // CB E6 00D5
        gbc.setState(0x7739, 0xc9f4, 0x8330, 0x7e5b, 0x7cc8, 0x8600, 0x0, 0x0);
        gbc.writeMem(0x7739, { 0xcb, 0xe6 });
        gbc.writeMem(0x8600, { 0xb3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc9f4, gbc.sp());
        EXPECT(0x773b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8600));
        // CB E6 00D6
        gbc.setState(0xd67e, 0x974d, 0x230, 0xf3c6, 0xe534, 0x1a09, 0x0, 0x0);
        gbc.writeMem(0x1a09, { 0x35 });
        gbc.writeMem(0xd67e, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x974d, gbc.sp());
        EXPECT(0xd680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd67e));
        EXPECT(0xe6, gbc.readMem(0xd67f));
        // CB E6 00D7
        gbc.setState(0x4e49, 0x3aad, 0x1c0, 0xa9b9, 0x6207, 0x1e59, 0x1, 0x1);
        gbc.writeMem(0x1e59, { 0x5f });
        gbc.writeMem(0x4e49, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3aad, gbc.sp());
        EXPECT(0x4e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 00D8
        gbc.setState(0x813e, 0xddf0, 0x9210, 0x2e4f, 0x7efa, 0xfbf0, 0x1, 0x1);
        gbc.writeMem(0x813e, { 0xcb, 0xe6 });
        gbc.writeMem(0xfbf0, { 0x74 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xddf0, gbc.sp());
        EXPECT(0x8140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x813e));
        EXPECT(0xe6, gbc.readMem(0x813f));
        EXPECT(0x74, gbc.readMem(0xfbf0));
        // CB E6 00D9
        gbc.setState(0x10be, 0x2174, 0x85e0, 0x35fd, 0x3e32, 0xce16, 0x0, 0x0);
        gbc.writeMem(0x10be, { 0xcb, 0xe6 });
        gbc.writeMem(0xce16, { 0xa9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2174, gbc.sp());
        EXPECT(0x10c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xce16));
        // CB E6 00DA
        gbc.setState(0x98e1, 0xc908, 0x9a50, 0x60d1, 0x8cff, 0xa637, 0x0, 0x0);
        gbc.writeMem(0x98e1, { 0xcb, 0xe6 });
        gbc.writeMem(0xa637, { 0x2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc908, gbc.sp());
        EXPECT(0x98e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e1));
        EXPECT(0xe6, gbc.readMem(0x98e2));
        EXPECT(0x12, gbc.readMem(0xa637));
        // CB E6 00DC
        gbc.setState(0x7d77, 0xf6b4, 0x73c0, 0x3ddc, 0xfd3b, 0xbd71, 0x1, 0x1);
        gbc.writeMem(0x7d77, { 0xcb, 0xe6 });
        gbc.writeMem(0xbd71, { 0xf7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf6b4, gbc.sp());
        EXPECT(0x7d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xbd71));
        // CB E6 00DD
        gbc.setState(0xac6e, 0x19f9, 0xa6f0, 0xc1e2, 0x90c1, 0x9254, 0x0, 0x1);
        gbc.writeMem(0x9254, { 0xb8 });
        gbc.writeMem(0xac6e, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x19f9, gbc.sp());
        EXPECT(0xac70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x9254));
        EXPECT(0xcb, gbc.readMem(0xac6e));
        EXPECT(0xe6, gbc.readMem(0xac6f));
        // CB E6 00DE
        gbc.setState(0xb5b6, 0x4ee4, 0xe540, 0x4e0f, 0xb6b6, 0x810d, 0x0, 0x1);
        gbc.writeMem(0x810d, { 0x52 });
        gbc.writeMem(0xb5b6, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4ee4, gbc.sp());
        EXPECT(0xb5b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x810d));
        EXPECT(0xcb, gbc.readMem(0xb5b6));
        EXPECT(0xe6, gbc.readMem(0xb5b7));
        // CB E6 00DF
        gbc.setState(0x3e1a, 0xced6, 0x6ef0, 0xbe2d, 0x79f4, 0xd789, 0x1, 0x0);
        gbc.writeMem(0x3e1a, { 0xcb, 0xe6 });
        gbc.writeMem(0xd789, { 0xe1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xced6, gbc.sp());
        EXPECT(0x3e1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd789));
        // CB E6 00E0
        gbc.setState(0x5f07, 0x25e0, 0x2cd0, 0x8571, 0x72a7, 0xb0d, 0x0, 0x1);
        gbc.writeMem(0xb0d, { 0x12 });
        gbc.writeMem(0x5f07, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x25e0, gbc.sp());
        EXPECT(0x5f09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 00E2
        gbc.setState(0x38cb, 0x5e49, 0x7be0, 0x460d, 0x123c, 0x3ef2, 0x1, 0x1);
        gbc.writeMem(0x38cb, { 0xcb, 0xe6 });
        gbc.writeMem(0x3ef2, { 0xfe });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5e49, gbc.sp());
        EXPECT(0x38cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 00E3
        gbc.setState(0xe152, 0x836d, 0xdf80, 0x80c7, 0x8f7, 0xefa1, 0x1, 0x0);
        gbc.writeMem(0xe152, { 0xcb, 0xe6 });
        gbc.writeMem(0xefa1, { 0x23 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x836d, gbc.sp());
        EXPECT(0xe154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe152));
        EXPECT(0xe6, gbc.readMem(0xe153));
        EXPECT(0x33, gbc.readMem(0xefa1));
        // CB E6 00E5
        gbc.setState(0xa0a9, 0x7c1a, 0xd5c0, 0xdd3f, 0xced, 0xb891, 0x0, 0x1);
        gbc.writeMem(0xa0a9, { 0xcb, 0xe6 });
        gbc.writeMem(0xb891, { 0x66 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7c1a, gbc.sp());
        EXPECT(0xa0ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a9));
        EXPECT(0xe6, gbc.readMem(0xa0aa));
        EXPECT(0x76, gbc.readMem(0xb891));
        // CB E6 00E6
        gbc.setState(0x7977, 0x3069, 0x7c50, 0xf6d0, 0x347, 0xd498, 0x0, 0x0);
        gbc.writeMem(0x7977, { 0xcb, 0xe6 });
        gbc.writeMem(0xd498, { 0xa9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3069, gbc.sp());
        EXPECT(0x7979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd498));
        // CB E6 00E7
        gbc.setState(0x4dd8, 0x7a83, 0xf3c0, 0x2804, 0xed99, 0xa4d4, 0x0, 0x1);
        gbc.writeMem(0x4dd8, { 0xcb, 0xe6 });
        gbc.writeMem(0xa4d4, { 0x50 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7a83, gbc.sp());
        EXPECT(0x4dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa4d4));
        // CB E6 00EA
        gbc.setState(0x6d52, 0x8798, 0xadf0, 0x57df, 0x911c, 0xfbee, 0x0, 0x0);
        gbc.writeMem(0x6d52, { 0xcb, 0xe6 });
        gbc.writeMem(0xfbee, { 0x1d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8798, gbc.sp());
        EXPECT(0x6d54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xfbee));
        // CB E6 00EE
        gbc.setState(0x48e, 0xb171, 0xfff0, 0x7677, 0xb4ba, 0xb240, 0x0, 0x0);
        gbc.writeMem(0x48e, { 0xcb, 0xe6 });
        gbc.writeMem(0xb240, { 0xd9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb171, gbc.sp());
        EXPECT(0x490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb240));
        // CB E6 00EF
        gbc.setState(0xb580, 0xc756, 0xadd0, 0x8344, 0x2170, 0xaef4, 0x1, 0x0);
        gbc.writeMem(0xaef4, { 0xde });
        gbc.writeMem(0xb580, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc756, gbc.sp());
        EXPECT(0xb582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xaef4));
        EXPECT(0xcb, gbc.readMem(0xb580));
        EXPECT(0xe6, gbc.readMem(0xb581));
        // CB E6 00F0
        gbc.setState(0xe2b5, 0x1b7c, 0x3e80, 0xf9b8, 0x77bc, 0x3bbb, 0x0, 0x1);
        gbc.writeMem(0x3bbb, { 0xd7 });
        gbc.writeMem(0xe2b5, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1b7c, gbc.sp());
        EXPECT(0xe2b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b5));
        EXPECT(0xe6, gbc.readMem(0xe2b6));
        // CB E6 00F1
        gbc.setState(0xd5f7, 0xd665, 0xcd0, 0xcbca, 0xa9b4, 0xc565, 0x1, 0x1);
        gbc.writeMem(0xc565, { 0x29 });
        gbc.writeMem(0xd5f7, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd665, gbc.sp());
        EXPECT(0xd5f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xc565));
        EXPECT(0xcb, gbc.readMem(0xd5f7));
        EXPECT(0xe6, gbc.readMem(0xd5f8));
        // CB E6 00F3
        gbc.setState(0x887d, 0x12e2, 0x50b0, 0x6105, 0x3c1c, 0x1e13, 0x1, 0x1);
        gbc.writeMem(0x1e13, { 0x54 });
        gbc.writeMem(0x887d, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x12e2, gbc.sp());
        EXPECT(0x887f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x887d));
        EXPECT(0xe6, gbc.readMem(0x887e));
        // CB E6 00F4
        gbc.setState(0x64ab, 0x1881, 0x4910, 0x8ca4, 0x88d5, 0xd5e1, 0x0, 0x1);
        gbc.writeMem(0x64ab, { 0xcb, 0xe6 });
        gbc.writeMem(0xd5e1, { 0x9e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1881, gbc.sp());
        EXPECT(0x64ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd5e1));
        // CB E6 00F6
        gbc.setState(0xb28e, 0x49df, 0xfd80, 0xe538, 0x8339, 0x71f5, 0x1, 0x0);
        gbc.writeMem(0x71f5, { 0x39 });
        gbc.writeMem(0xb28e, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x49df, gbc.sp());
        EXPECT(0xb290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb28e));
        EXPECT(0xe6, gbc.readMem(0xb28f));
        // CB E6 00F7
        gbc.setState(0x3380, 0x2c60, 0x4fe0, 0xf414, 0x8a5f, 0xb262, 0x1, 0x0);
        gbc.writeMem(0x3380, { 0xcb, 0xe6 });
        gbc.writeMem(0xb262, { 0x10 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2c60, gbc.sp());
        EXPECT(0x3382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb262));
        // CB E6 00F8
        gbc.setState(0xec2e, 0xceb8, 0x5e40, 0xa0c3, 0xe5ab, 0x8483, 0x0, 0x1);
        gbc.writeMem(0x8483, { 0x7f });
        gbc.writeMem(0xec2e, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xceb8, gbc.sp());
        EXPECT(0xec30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x8483));
        EXPECT(0xcb, gbc.readMem(0xec2e));
        EXPECT(0xe6, gbc.readMem(0xec2f));
        // CB E6 00F9
        gbc.setState(0x2897, 0x1495, 0xbd90, 0x649a, 0x6cd5, 0x26ec, 0x0, 0x0);
        gbc.writeMem(0x26ec, { 0xf1 });
        gbc.writeMem(0x2897, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1495, gbc.sp());
        EXPECT(0x2899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 00FA
        gbc.setState(0xc91f, 0x7f21, 0x1cd0, 0x6fc7, 0xb2eb, 0x461f, 0x1, 0x0);
        gbc.writeMem(0x461f, { 0xd7 });
        gbc.writeMem(0xc91f, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7f21, gbc.sp());
        EXPECT(0xc921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc91f));
        EXPECT(0xe6, gbc.readMem(0xc920));
        // CB E6 00FF
        gbc.setState(0x57ae, 0x520e, 0x9a80, 0x5d1c, 0x80cc, 0x848b, 0x0, 0x1);
        gbc.writeMem(0x57ae, { 0xcb, 0xe6 });
        gbc.writeMem(0x848b, { 0xe3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x520e, gbc.sp());
        EXPECT(0x57b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x848b));
        // CB E6 0101
        gbc.setState(0xa2e3, 0xa277, 0x6bb0, 0xbd12, 0xbada, 0xe14f, 0x0, 0x1);
        gbc.writeMem(0xa2e3, { 0xcb, 0xe6 });
        gbc.writeMem(0xe14f, { 0xa7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa277, gbc.sp());
        EXPECT(0xa2e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e3));
        EXPECT(0xe6, gbc.readMem(0xa2e4));
        EXPECT(0xb7, gbc.readMem(0xe14f));
        // CB E6 0102
        gbc.setState(0x5007, 0xa34c, 0xca50, 0x292e, 0x3424, 0x5086, 0x1, 0x1);
        gbc.writeMem(0x5007, { 0xcb, 0xe6 });
        gbc.writeMem(0x5086, { 0x19 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa34c, gbc.sp());
        EXPECT(0x5009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0103
        gbc.setState(0xd47b, 0x3ab0, 0x250, 0x6f56, 0x64c6, 0xfba8, 0x0, 0x1);
        gbc.writeMem(0xd47b, { 0xcb, 0xe6 });
        gbc.writeMem(0xfba8, { 0x24 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3ab0, gbc.sp());
        EXPECT(0xd47d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd47b));
        EXPECT(0xe6, gbc.readMem(0xd47c));
        EXPECT(0x34, gbc.readMem(0xfba8));
        // CB E6 0104
        gbc.setState(0x7867, 0xe79a, 0x4480, 0xb929, 0xe21, 0x981e, 0x0, 0x0);
        gbc.writeMem(0x7867, { 0xcb, 0xe6 });
        gbc.writeMem(0x981e, { 0x56 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe79a, gbc.sp());
        EXPECT(0x7869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x981e));
        // CB E6 0105
        gbc.setState(0x2551, 0x5ba9, 0xc330, 0x5320, 0x1fd7, 0x3a31, 0x1, 0x1);
        gbc.writeMem(0x2551, { 0xcb, 0xe6 });
        gbc.writeMem(0x3a31, { 0x70 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5ba9, gbc.sp());
        EXPECT(0x2553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0106
        gbc.setState(0x6faf, 0xa01d, 0x8b30, 0x9f4a, 0xbeac, 0xf530, 0x0, 0x0);
        gbc.writeMem(0x6faf, { 0xcb, 0xe6 });
        gbc.writeMem(0xf530, { 0x6d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa01d, gbc.sp());
        EXPECT(0x6fb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xf530));
        // CB E6 0107
        gbc.setState(0x791d, 0xcb58, 0x52b0, 0x92d0, 0x4107, 0x1014, 0x1, 0x0);
        gbc.writeMem(0x1014, { 0x1f });
        gbc.writeMem(0x791d, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xcb58, gbc.sp());
        EXPECT(0x791f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0109
        gbc.setState(0xa65, 0xfc05, 0x6f70, 0xbf52, 0xf057, 0xb448, 0x0, 0x1);
        gbc.writeMem(0xa65, { 0xcb, 0xe6 });
        gbc.writeMem(0xb448, { 0xeb });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfc05, gbc.sp());
        EXPECT(0xa67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xb448));
        // CB E6 010B
        gbc.setState(0x741c, 0x8edc, 0xfa40, 0xa856, 0x6eae, 0xe04b, 0x1, 0x1);
        gbc.writeMem(0x741c, { 0xcb, 0xe6 });
        gbc.writeMem(0xe04b, { 0xe });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8edc, gbc.sp());
        EXPECT(0x741e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xe04b));
        // CB E6 010E
        gbc.setState(0xda2c, 0x5876, 0xa750, 0xf0bc, 0xd244, 0x5f37, 0x1, 0x0);
        gbc.writeMem(0x5f37, { 0x36 });
        gbc.writeMem(0xda2c, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5876, gbc.sp());
        EXPECT(0xda2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda2c));
        EXPECT(0xe6, gbc.readMem(0xda2d));
        // CB E6 0110
        gbc.setState(0x2a0f, 0x37f2, 0x6e0, 0x715d, 0x262a, 0x645e, 0x0, 0x1);
        gbc.writeMem(0x2a0f, { 0xcb, 0xe6 });
        gbc.writeMem(0x645e, { 0xd2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x37f2, gbc.sp());
        EXPECT(0x2a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0111
        gbc.setState(0x3e7e, 0xafab, 0xf8d0, 0x564e, 0x85ea, 0x9907, 0x0, 0x0);
        gbc.writeMem(0x3e7e, { 0xcb, 0xe6 });
        gbc.writeMem(0x9907, { 0x28 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xafab, gbc.sp());
        EXPECT(0x3e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9907));
        // CB E6 0112
        gbc.setState(0x31ca, 0xd72c, 0xf9f0, 0xbfb5, 0x5f60, 0x6e11, 0x1, 0x1);
        gbc.writeMem(0x31ca, { 0xcb, 0xe6 });
        gbc.writeMem(0x6e11, { 0xd5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd72c, gbc.sp());
        EXPECT(0x31cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0114
        gbc.setState(0x64b7, 0xe56, 0x8e20, 0x5dd9, 0xc4f2, 0xfa79, 0x1, 0x0);
        gbc.writeMem(0x64b7, { 0xcb, 0xe6 });
        gbc.writeMem(0xfa79, { 0x94 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe56, gbc.sp());
        EXPECT(0x64b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xfa79));
        // CB E6 0115
        gbc.setState(0x5420, 0x55f0, 0x3110, 0xbc89, 0x693c, 0xd98f, 0x1, 0x0);
        gbc.writeMem(0x5420, { 0xcb, 0xe6 });
        gbc.writeMem(0xd98f, { 0xbb });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x55f0, gbc.sp());
        EXPECT(0x5422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd98f));
        // CB E6 0118
        gbc.setState(0x9888, 0x1497, 0xb320, 0x9c3e, 0xaa5e, 0xf202, 0x1, 0x0);
        gbc.writeMem(0x9888, { 0xcb, 0xe6 });
        gbc.writeMem(0xf202, { 0xbd });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1497, gbc.sp());
        EXPECT(0x988a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9888));
        EXPECT(0xe6, gbc.readMem(0x9889));
        EXPECT(0xbd, gbc.readMem(0xf202));
        // CB E6 0119
        gbc.setState(0xa296, 0x4369, 0xf750, 0x18a4, 0x93d7, 0xe370, 0x1, 0x1);
        gbc.writeMem(0xa296, { 0xcb, 0xe6 });
        gbc.writeMem(0xe370, { 0xcc });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4369, gbc.sp());
        EXPECT(0xa298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa296));
        EXPECT(0xe6, gbc.readMem(0xa297));
        EXPECT(0xdc, gbc.readMem(0xe370));
        // CB E6 011A
        gbc.setState(0x9c12, 0x45dd, 0x9040, 0xcc84, 0xd917, 0xc4a9, 0x0, 0x1);
        gbc.writeMem(0x9c12, { 0xcb, 0xe6 });
        gbc.writeMem(0xc4a9, { 0x7d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x45dd, gbc.sp());
        EXPECT(0x9c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c12));
        EXPECT(0xe6, gbc.readMem(0x9c13));
        EXPECT(0x7d, gbc.readMem(0xc4a9));
        // CB E6 011B
        gbc.setState(0x6086, 0x98b0, 0xa860, 0x5b35, 0x15fb, 0xf032, 0x0, 0x1);
        gbc.writeMem(0x6086, { 0xcb, 0xe6 });
        gbc.writeMem(0xf032, { 0xe8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x98b0, gbc.sp());
        EXPECT(0x6088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xf032));
        // CB E6 011D
        gbc.setState(0x75a6, 0x6710, 0x7d0, 0x1e61, 0x5bce, 0xae19, 0x1, 0x1);
        gbc.writeMem(0x75a6, { 0xcb, 0xe6 });
        gbc.writeMem(0xae19, { 0xbf });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6710, gbc.sp());
        EXPECT(0x75a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xae19));
        // CB E6 011E
        gbc.setState(0x44c3, 0xa069, 0x3050, 0x8bdf, 0x143a, 0xa31d, 0x0, 0x1);
        gbc.writeMem(0x44c3, { 0xcb, 0xe6 });
        gbc.writeMem(0xa31d, { 0x7f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa069, gbc.sp());
        EXPECT(0x44c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xa31d));
        // CB E6 0120
        gbc.setState(0x8853, 0x86c1, 0x1820, 0x8fdd, 0xbce4, 0x184a, 0x0, 0x0);
        gbc.writeMem(0x184a, { 0xb8 });
        gbc.writeMem(0x8853, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x86c1, gbc.sp());
        EXPECT(0x8855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8853));
        EXPECT(0xe6, gbc.readMem(0x8854));
        // CB E6 0121
        gbc.setState(0x4cfa, 0xd3f2, 0x79f0, 0x5fa8, 0x7bd2, 0x4ae2, 0x1, 0x0);
        gbc.writeMem(0x4ae2, { 0xfb });
        gbc.writeMem(0x4cfa, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd3f2, gbc.sp());
        EXPECT(0x4cfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0123
        gbc.setState(0x8042, 0xe020, 0x18c0, 0x30c, 0x5ac, 0x9209, 0x0, 0x0);
        gbc.writeMem(0x8042, { 0xcb, 0xe6 });
        gbc.writeMem(0x9209, { 0x6c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe020, gbc.sp());
        EXPECT(0x8044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8042));
        EXPECT(0xe6, gbc.readMem(0x8043));
        EXPECT(0x7c, gbc.readMem(0x9209));
        // CB E6 0125
        gbc.setState(0xc2b6, 0xa944, 0xb020, 0xe6f, 0xe3fa, 0xcd1c, 0x0, 0x1);
        gbc.writeMem(0xc2b6, { 0xcb, 0xe6 });
        gbc.writeMem(0xcd1c, { 0xfc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa944, gbc.sp());
        EXPECT(0xc2b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b6));
        EXPECT(0xe6, gbc.readMem(0xc2b7));
        EXPECT(0xfc, gbc.readMem(0xcd1c));
        // CB E6 0126
        gbc.setState(0x390f, 0x10ec, 0x9b20, 0xd178, 0x991c, 0x9fd, 0x1, 0x1);
        gbc.writeMem(0x9fd, { 0x1d });
        gbc.writeMem(0x390f, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x10ec, gbc.sp());
        EXPECT(0x3911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0127
        gbc.setState(0x66ed, 0x7209, 0x4a0, 0x3b6, 0xb683, 0xc70a, 0x0, 0x0);
        gbc.writeMem(0x66ed, { 0xcb, 0xe6 });
        gbc.writeMem(0xc70a, { 0x7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7209, gbc.sp());
        EXPECT(0x66ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xc70a));
        // CB E6 0128
        gbc.setState(0x1489, 0x9717, 0xf470, 0xdb12, 0x6afd, 0x8839, 0x0, 0x0);
        gbc.writeMem(0x1489, { 0xcb, 0xe6 });
        gbc.writeMem(0x8839, { 0xfa });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9717, gbc.sp());
        EXPECT(0x148b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8839));
        // CB E6 0129
        gbc.setState(0x16a4, 0x9c7a, 0x8be0, 0x9b74, 0x2375, 0x5b03, 0x1, 0x0);
        gbc.writeMem(0x16a4, { 0xcb, 0xe6 });
        gbc.writeMem(0x5b03, { 0x5a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9c7a, gbc.sp());
        EXPECT(0x16a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 012A
        gbc.setState(0xafd9, 0x6f2b, 0xe1b0, 0x5603, 0xe71, 0xbd9, 0x1, 0x1);
        gbc.writeMem(0xbd9, { 0xf3 });
        gbc.writeMem(0xafd9, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6f2b, gbc.sp());
        EXPECT(0xafdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd9));
        EXPECT(0xe6, gbc.readMem(0xafda));
        // CB E6 012B
        gbc.setState(0x7979, 0x51c0, 0x97f0, 0x1e9e, 0x42cf, 0x44dc, 0x0, 0x1);
        gbc.writeMem(0x44dc, { 0x76 });
        gbc.writeMem(0x7979, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x51c0, gbc.sp());
        EXPECT(0x797b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 012D
        gbc.setState(0xb256, 0xb157, 0x1e90, 0x292b, 0x4a, 0x8e87, 0x1, 0x0);
        gbc.writeMem(0x8e87, { 0x27 });
        gbc.writeMem(0xb256, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb157, gbc.sp());
        EXPECT(0xb258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8e87));
        EXPECT(0xcb, gbc.readMem(0xb256));
        EXPECT(0xe6, gbc.readMem(0xb257));
        // CB E6 012E
        gbc.setState(0xaa58, 0xa85, 0xe560, 0x2b7d, 0x300c, 0xde7d, 0x1, 0x1);
        gbc.writeMem(0xaa58, { 0xcb, 0xe6 });
        gbc.writeMem(0xde7d, { 0xb3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa85, gbc.sp());
        EXPECT(0xaa5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa58));
        EXPECT(0xe6, gbc.readMem(0xaa59));
        EXPECT(0xb3, gbc.readMem(0xde7d));
        // CB E6 012F
        gbc.setState(0xb43a, 0x117, 0x8bb0, 0xc459, 0xf832, 0xd956, 0x1, 0x1);
        gbc.writeMem(0xb43a, { 0xcb, 0xe6 });
        gbc.writeMem(0xd956, { 0xdc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x117, gbc.sp());
        EXPECT(0xb43c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb43a));
        EXPECT(0xe6, gbc.readMem(0xb43b));
        EXPECT(0xdc, gbc.readMem(0xd956));
        // CB E6 0131
        gbc.setState(0xc281, 0xe21, 0xa990, 0xa0b, 0xfbef, 0x1b3f, 0x1, 0x0);
        gbc.writeMem(0x1b3f, { 0x7d });
        gbc.writeMem(0xc281, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe21, gbc.sp());
        EXPECT(0xc283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc281));
        EXPECT(0xe6, gbc.readMem(0xc282));
        // CB E6 0133
        gbc.setState(0xe834, 0xd804, 0x62d0, 0x48a1, 0x6b53, 0x2a65, 0x1, 0x1);
        gbc.writeMem(0x2a65, { 0x3d });
        gbc.writeMem(0xe834, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd804, gbc.sp());
        EXPECT(0xe836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe834));
        EXPECT(0xe6, gbc.readMem(0xe835));
        // CB E6 0134
        gbc.setState(0xa6f7, 0x23cb, 0x9a00, 0x7eeb, 0x50ce, 0xcb7b, 0x0, 0x0);
        gbc.writeMem(0xa6f7, { 0xcb, 0xe6 });
        gbc.writeMem(0xcb7b, { 0x49 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x23cb, gbc.sp());
        EXPECT(0xa6f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f7));
        EXPECT(0xe6, gbc.readMem(0xa6f8));
        EXPECT(0x59, gbc.readMem(0xcb7b));
        // CB E6 0135
        gbc.setState(0x644c, 0x168, 0x7120, 0xb089, 0x7beb, 0xc9e4, 0x1, 0x1);
        gbc.writeMem(0x644c, { 0xcb, 0xe6 });
        gbc.writeMem(0xc9e4, { 0xc2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x168, gbc.sp());
        EXPECT(0x644e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xc9e4));
        // CB E6 0136
        gbc.setState(0xa77e, 0x3d8e, 0xf7b0, 0xfbcf, 0x6ee7, 0x9f24, 0x1, 0x0);
        gbc.writeMem(0x9f24, { 0x2c });
        gbc.writeMem(0xa77e, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3d8e, gbc.sp());
        EXPECT(0xa780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9f24));
        EXPECT(0xcb, gbc.readMem(0xa77e));
        EXPECT(0xe6, gbc.readMem(0xa77f));
        // CB E6 0137
        gbc.setState(0xa191, 0x198e, 0x7c00, 0x3af5, 0xbb05, 0xeada, 0x1, 0x1);
        gbc.writeMem(0xa191, { 0xcb, 0xe6 });
        gbc.writeMem(0xeada, { 0xd });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x198e, gbc.sp());
        EXPECT(0xa193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa191));
        EXPECT(0xe6, gbc.readMem(0xa192));
        EXPECT(0x1d, gbc.readMem(0xeada));
        // CB E6 0139
        gbc.setState(0x8bb3, 0xc1af, 0x8110, 0xdb7d, 0x4458, 0xfae1, 0x0, 0x0);
        gbc.writeMem(0x8bb3, { 0xcb, 0xe6 });
        gbc.writeMem(0xfae1, { 0x80 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc1af, gbc.sp());
        EXPECT(0x8bb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bb3));
        EXPECT(0xe6, gbc.readMem(0x8bb4));
        EXPECT(0x90, gbc.readMem(0xfae1));
        // CB E6 013A
        gbc.setState(0xae2a, 0xd6ee, 0x6c20, 0x4bcd, 0xab03, 0xe8f5, 0x0, 0x0);
        gbc.writeMem(0xae2a, { 0xcb, 0xe6 });
        gbc.writeMem(0xe8f5, { 0xa6 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd6ee, gbc.sp());
        EXPECT(0xae2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae2a));
        EXPECT(0xe6, gbc.readMem(0xae2b));
        EXPECT(0xb6, gbc.readMem(0xe8f5));
        // CB E6 013C
        gbc.setState(0xdd2e, 0xb2b6, 0x7310, 0xc027, 0x5276, 0xd6ad, 0x0, 0x0);
        gbc.writeMem(0xd6ad, { 0x97 });
        gbc.writeMem(0xdd2e, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb2b6, gbc.sp());
        EXPECT(0xdd30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd6ad));
        EXPECT(0xcb, gbc.readMem(0xdd2e));
        EXPECT(0xe6, gbc.readMem(0xdd2f));
        // CB E6 013D
        gbc.setState(0x1471, 0xf599, 0x4820, 0x4eb4, 0x770c, 0x9ce, 0x0, 0x0);
        gbc.writeMem(0x9ce, { 0x3d });
        gbc.writeMem(0x1471, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf599, gbc.sp());
        EXPECT(0x1473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 013E
        gbc.setState(0xb624, 0xbee3, 0x4280, 0xd91, 0x4102, 0x946b, 0x1, 0x0);
        gbc.writeMem(0x946b, { 0x26 });
        gbc.writeMem(0xb624, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xbee3, gbc.sp());
        EXPECT(0xb626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x946b));
        EXPECT(0xcb, gbc.readMem(0xb624));
        EXPECT(0xe6, gbc.readMem(0xb625));
        // CB E6 0141
        gbc.setState(0x2b8f, 0x38c6, 0x14b0, 0xde9a, 0xd0c6, 0x140c, 0x0, 0x0);
        gbc.writeMem(0x140c, { 0x58 });
        gbc.writeMem(0x2b8f, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x38c6, gbc.sp());
        EXPECT(0x2b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0142
        gbc.setState(0xca, 0xba31, 0xe300, 0x1d17, 0xb7ca, 0x5f57, 0x0, 0x1);
        gbc.writeMem(0xca, { 0xcb, 0xe6 });
        gbc.writeMem(0x5f57, { 0xb3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xba31, gbc.sp());
        EXPECT(0xcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0144
        gbc.setState(0xe95d, 0x83ec, 0x7390, 0x8e5f, 0xb454, 0x8ed8, 0x1, 0x0);
        gbc.writeMem(0x8ed8, { 0xf });
        gbc.writeMem(0xe95d, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x83ec, gbc.sp());
        EXPECT(0xe95f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x8ed8));
        EXPECT(0xcb, gbc.readMem(0xe95d));
        EXPECT(0xe6, gbc.readMem(0xe95e));
        // CB E6 0145
        gbc.setState(0xc547, 0x6e8, 0xd9e0, 0x5238, 0xb47d, 0xef1d, 0x1, 0x1);
        gbc.writeMem(0xc547, { 0xcb, 0xe6 });
        gbc.writeMem(0xef1d, { 0xc7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6e8, gbc.sp());
        EXPECT(0xc549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc547));
        EXPECT(0xe6, gbc.readMem(0xc548));
        EXPECT(0xd7, gbc.readMem(0xef1d));
        // CB E6 0146
        gbc.setState(0xfc8, 0x8842, 0x2c30, 0x2aab, 0x13fa, 0xd8f5, 0x1, 0x0);
        gbc.writeMem(0xfc8, { 0xcb, 0xe6 });
        gbc.writeMem(0xd8f5, { 0x6d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8842, gbc.sp());
        EXPECT(0xfca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd8f5));
        // CB E6 0147
        gbc.setState(0x3690, 0x4364, 0xea20, 0xee9a, 0x3054, 0xb7a0, 0x1, 0x1);
        gbc.writeMem(0x3690, { 0xcb, 0xe6 });
        gbc.writeMem(0xb7a0, { 0x75 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4364, gbc.sp());
        EXPECT(0x3692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xb7a0));
        // CB E6 0148
        gbc.setState(0x15a5, 0xa2a8, 0x2680, 0x5b93, 0x6bf4, 0xc1a6, 0x0, 0x0);
        gbc.writeMem(0x15a5, { 0xcb, 0xe6 });
        gbc.writeMem(0xc1a6, { 0xd4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa2a8, gbc.sp());
        EXPECT(0x15a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xc1a6));
        // CB E6 0149
        gbc.setState(0x4eed, 0xeb60, 0x5380, 0x3bb, 0x3a83, 0xd82e, 0x0, 0x1);
        gbc.writeMem(0x4eed, { 0xcb, 0xe6 });
        gbc.writeMem(0xd82e, { 0xea });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xeb60, gbc.sp());
        EXPECT(0x4eef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd82e));
        // CB E6 014B
        gbc.setState(0xd9e9, 0x8fac, 0x6cf0, 0xa53a, 0xc573, 0x63fa, 0x0, 0x1);
        gbc.writeMem(0x63fa, { 0x96 });
        gbc.writeMem(0xd9e9, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8fac, gbc.sp());
        EXPECT(0xd9eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e9));
        EXPECT(0xe6, gbc.readMem(0xd9ea));
        // CB E6 014C
        gbc.setState(0xc38c, 0xebed, 0xc390, 0x8eea, 0xb5db, 0x4da2, 0x1, 0x0);
        gbc.writeMem(0x4da2, { 0xf2 });
        gbc.writeMem(0xc38c, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xebed, gbc.sp());
        EXPECT(0xc38e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc38c));
        EXPECT(0xe6, gbc.readMem(0xc38d));
        // CB E6 014D
        gbc.setState(0x730c, 0xb36d, 0x2350, 0x8373, 0xcf5d, 0x924b, 0x0, 0x1);
        gbc.writeMem(0x730c, { 0xcb, 0xe6 });
        gbc.writeMem(0x924b, { 0x9f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb36d, gbc.sp());
        EXPECT(0x730e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x924b));
        // CB E6 014E
        gbc.setState(0x14d4, 0xd576, 0x8f70, 0x22fb, 0x4a80, 0x1c0e, 0x1, 0x1);
        gbc.writeMem(0x14d4, { 0xcb, 0xe6 });
        gbc.writeMem(0x1c0e, { 0x39 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd576, gbc.sp());
        EXPECT(0x14d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 014F
        gbc.setState(0x54bd, 0x1a07, 0xd890, 0xc1da, 0xc280, 0x3500, 0x0, 0x1);
        gbc.writeMem(0x3500, { 0x33 });
        gbc.writeMem(0x54bd, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1a07, gbc.sp());
        EXPECT(0x54bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0151
        gbc.setState(0x282b, 0xeaa2, 0x3740, 0xf54a, 0x69a0, 0xb952, 0x0, 0x1);
        gbc.writeMem(0x282b, { 0xcb, 0xe6 });
        gbc.writeMem(0xb952, { 0x6c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xeaa2, gbc.sp());
        EXPECT(0x282d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xb952));
        // CB E6 0152
        gbc.setState(0x89d8, 0x22da, 0xa9e0, 0x3255, 0x355f, 0xa9dc, 0x0, 0x1);
        gbc.writeMem(0x89d8, { 0xcb, 0xe6 });
        gbc.writeMem(0xa9dc, { 0x4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x22da, gbc.sp());
        EXPECT(0x89da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d8));
        EXPECT(0xe6, gbc.readMem(0x89d9));
        EXPECT(0x14, gbc.readMem(0xa9dc));
        // CB E6 0153
        gbc.setState(0x7d58, 0x9bf5, 0xcd20, 0x57ef, 0xe24b, 0xca85, 0x1, 0x0);
        gbc.writeMem(0x7d58, { 0xcb, 0xe6 });
        gbc.writeMem(0xca85, { 0x8a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9bf5, gbc.sp());
        EXPECT(0x7d5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xca85));
        // CB E6 0154
        gbc.setState(0xacd0, 0x6457, 0x2310, 0x9c40, 0x2510, 0x63b0, 0x0, 0x0);
        gbc.writeMem(0x63b0, { 0xf6 });
        gbc.writeMem(0xacd0, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6457, gbc.sp());
        EXPECT(0xacd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacd0));
        EXPECT(0xe6, gbc.readMem(0xacd1));
        // CB E6 0155
        gbc.setState(0x1877, 0xdc1c, 0xccf0, 0x3fe3, 0x1e0, 0x1bc9, 0x1, 0x0);
        gbc.writeMem(0x1877, { 0xcb, 0xe6 });
        gbc.writeMem(0x1bc9, { 0xfc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdc1c, gbc.sp());
        EXPECT(0x1879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0157
        gbc.setState(0x1f04, 0x7a30, 0xfd0, 0xfdbb, 0x5aa0, 0x2bff, 0x1, 0x0);
        gbc.writeMem(0x1f04, { 0xcb, 0xe6 });
        gbc.writeMem(0x2bff, { 0xdc });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7a30, gbc.sp());
        EXPECT(0x1f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0158
        gbc.setState(0x5c43, 0x4cd8, 0x57e0, 0x5047, 0xc572, 0xd5c1, 0x0, 0x0);
        gbc.writeMem(0x5c43, { 0xcb, 0xe6 });
        gbc.writeMem(0xd5c1, { 0x91 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4cd8, gbc.sp());
        EXPECT(0x5c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd5c1));
        // CB E6 0159
        gbc.setState(0xda65, 0x67ab, 0x8b00, 0x3b58, 0xab94, 0xcd2d, 0x1, 0x1);
        gbc.writeMem(0xcd2d, { 0x6c });
        gbc.writeMem(0xda65, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x67ab, gbc.sp());
        EXPECT(0xda67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xcd2d));
        EXPECT(0xcb, gbc.readMem(0xda65));
        EXPECT(0xe6, gbc.readMem(0xda66));
        // CB E6 015A
        gbc.setState(0x3fbc, 0x7bfe, 0xd270, 0xc63, 0xd2e6, 0x708f, 0x1, 0x0);
        gbc.writeMem(0x3fbc, { 0xcb, 0xe6 });
        gbc.writeMem(0x708f, { 0xf9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7bfe, gbc.sp());
        EXPECT(0x3fbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 015E
        gbc.setState(0xe9a, 0x476b, 0xd470, 0x170, 0xef17, 0x7980, 0x0, 0x0);
        gbc.writeMem(0xe9a, { 0xcb, 0xe6 });
        gbc.writeMem(0x7980, { 0x76 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x476b, gbc.sp());
        EXPECT(0xe9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 015F
        gbc.setState(0xe1b2, 0xd749, 0xfcc0, 0xb0c9, 0xa96c, 0xc96e, 0x1, 0x0);
        gbc.writeMem(0xc96e, { 0x6b });
        gbc.writeMem(0xe1b2, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd749, gbc.sp());
        EXPECT(0xe1b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc96e));
        EXPECT(0xcb, gbc.readMem(0xe1b2));
        EXPECT(0xe6, gbc.readMem(0xe1b3));
        // CB E6 0161
        gbc.setState(0x6ab8, 0x3589, 0x23a0, 0x3133, 0xfdc7, 0xe2b9, 0x0, 0x1);
        gbc.writeMem(0x6ab8, { 0xcb, 0xe6 });
        gbc.writeMem(0xe2b9, { 0xf0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3589, gbc.sp());
        EXPECT(0x6aba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe2b9));
        // CB E6 0163
        gbc.setState(0xb7d7, 0xc864, 0x1760, 0xb357, 0x9f43, 0xd3f0, 0x1, 0x1);
        gbc.writeMem(0xb7d7, { 0xcb, 0xe6 });
        gbc.writeMem(0xd3f0, { 0x57 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc864, gbc.sp());
        EXPECT(0xb7d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d7));
        EXPECT(0xe6, gbc.readMem(0xb7d8));
        EXPECT(0x57, gbc.readMem(0xd3f0));
        // CB E6 0165
        gbc.setState(0x4b4c, 0xdc9f, 0x9710, 0x43f7, 0x3be4, 0xe7de, 0x0, 0x0);
        gbc.writeMem(0x4b4c, { 0xcb, 0xe6 });
        gbc.writeMem(0xe7de, { 0x5c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xdc9f, gbc.sp());
        EXPECT(0x4b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xe7de));
        // CB E6 0166
        gbc.setState(0x2d95, 0x95a, 0x2140, 0xfa24, 0x8cc9, 0x5167, 0x1, 0x1);
        gbc.writeMem(0x2d95, { 0xcb, 0xe6 });
        gbc.writeMem(0x5167, { 0x52 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x95a, gbc.sp());
        EXPECT(0x2d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0167
        gbc.setState(0x91cc, 0xa336, 0xc60, 0xbe3e, 0x9d3f, 0xec87, 0x1, 0x1);
        gbc.writeMem(0x91cc, { 0xcb, 0xe6 });
        gbc.writeMem(0xec87, { 0xb7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa336, gbc.sp());
        EXPECT(0x91ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91cc));
        EXPECT(0xe6, gbc.readMem(0x91cd));
        EXPECT(0xb7, gbc.readMem(0xec87));
        // CB E6 0168
        gbc.setState(0xb17, 0xa7ae, 0x26f0, 0x3253, 0x2c18, 0xfff7, 0x1, 0x1);
        gbc.writeMem(0xb17, { 0xcb, 0xe6 });
        gbc.writeMem(0xfff7, { 0x2a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa7ae, gbc.sp());
        EXPECT(0xb19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xfff7));
        // CB E6 016A
        gbc.setState(0xbaf7, 0xb93a, 0x31e0, 0xb187, 0x1d21, 0xf79c, 0x1, 0x1);
        gbc.writeMem(0xbaf7, { 0xcb, 0xe6 });
        gbc.writeMem(0xf79c, { 0x89 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb93a, gbc.sp());
        EXPECT(0xbaf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaf7));
        EXPECT(0xe6, gbc.readMem(0xbaf8));
        EXPECT(0x99, gbc.readMem(0xf79c));
        // CB E6 016B
        gbc.setState(0x1a0a, 0x27c8, 0xc00, 0x2015, 0xd531, 0x14b9, 0x1, 0x1);
        gbc.writeMem(0x14b9, { 0x99 });
        gbc.writeMem(0x1a0a, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x27c8, gbc.sp());
        EXPECT(0x1a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 016C
        gbc.setState(0x4b8d, 0xe1cb, 0xd7c0, 0xefaa, 0xad78, 0x8825, 0x0, 0x1);
        gbc.writeMem(0x4b8d, { 0xcb, 0xe6 });
        gbc.writeMem(0x8825, { 0x1e });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe1cb, gbc.sp());
        EXPECT(0x4b8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x8825));
        // CB E6 016D
        gbc.setState(0x5fca, 0x1c5, 0xc150, 0xe26d, 0xcf4b, 0x76b6, 0x0, 0x1);
        gbc.writeMem(0x5fca, { 0xcb, 0xe6 });
        gbc.writeMem(0x76b6, { 0x7e });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1c5, gbc.sp());
        EXPECT(0x5fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 016E
        gbc.setState(0x5813, 0xc180, 0x40f0, 0xa681, 0x343f, 0xc781, 0x0, 0x0);
        gbc.writeMem(0x5813, { 0xcb, 0xe6 });
        gbc.writeMem(0xc781, { 0x26 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc180, gbc.sp());
        EXPECT(0x5815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xc781));
        // CB E6 016F
        gbc.setState(0x3b92, 0xb021, 0x7ad0, 0xcd33, 0xc85a, 0x51e2, 0x1, 0x0);
        gbc.writeMem(0x3b92, { 0xcb, 0xe6 });
        gbc.writeMem(0x51e2, { 0xb8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb021, gbc.sp());
        EXPECT(0x3b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0170
        gbc.setState(0x89c1, 0x76d2, 0x5410, 0x7042, 0xd6fa, 0x9bc0, 0x0, 0x1);
        gbc.writeMem(0x89c1, { 0xcb, 0xe6 });
        gbc.writeMem(0x9bc0, { 0x4a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x76d2, gbc.sp());
        EXPECT(0x89c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89c1));
        EXPECT(0xe6, gbc.readMem(0x89c2));
        EXPECT(0x5a, gbc.readMem(0x9bc0));
        // CB E6 0171
        gbc.setState(0x1b7f, 0xddc0, 0xab70, 0xb20d, 0xc866, 0x9c42, 0x1, 0x0);
        gbc.writeMem(0x1b7f, { 0xcb, 0xe6 });
        gbc.writeMem(0x9c42, { 0x99 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xddc0, gbc.sp());
        EXPECT(0x1b81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9c42));
        // CB E6 0175
        gbc.setState(0x89a0, 0xdcb5, 0xe5e0, 0xa0bb, 0xabb, 0xfd55, 0x0, 0x1);
        gbc.writeMem(0x89a0, { 0xcb, 0xe6 });
        gbc.writeMem(0xfd55, { 0xc7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xdcb5, gbc.sp());
        EXPECT(0x89a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a0));
        EXPECT(0xe6, gbc.readMem(0x89a1));
        EXPECT(0xd7, gbc.readMem(0xfd55));
        // CB E6 0176
        gbc.setState(0xdb6f, 0x5ed2, 0x1860, 0x66d4, 0x7896, 0x834d, 0x1, 0x1);
        gbc.writeMem(0x834d, { 0x7c });
        gbc.writeMem(0xdb6f, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5ed2, gbc.sp());
        EXPECT(0xdb71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x834d));
        EXPECT(0xcb, gbc.readMem(0xdb6f));
        EXPECT(0xe6, gbc.readMem(0xdb70));
        // CB E6 0177
        gbc.setState(0x3dc8, 0xc626, 0x260, 0xf23b, 0xb8fb, 0x70da, 0x1, 0x0);
        gbc.writeMem(0x3dc8, { 0xcb, 0xe6 });
        gbc.writeMem(0x70da, { 0x35 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc626, gbc.sp());
        EXPECT(0x3dca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0178
        gbc.setState(0x1d8, 0xc580, 0x1630, 0xa8e4, 0xdf1, 0x6e62, 0x0, 0x1);
        gbc.writeMem(0x1d8, { 0xcb, 0xe6 });
        gbc.writeMem(0x6e62, { 0x7c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc580, gbc.sp());
        EXPECT(0x1da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 017B
        gbc.setState(0x9978, 0x85f7, 0x2120, 0xce2c, 0x4b9, 0x1bf1, 0x1, 0x1);
        gbc.writeMem(0x1bf1, { 0xb8 });
        gbc.writeMem(0x9978, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x85f7, gbc.sp());
        EXPECT(0x997a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9978));
        EXPECT(0xe6, gbc.readMem(0x9979));
        // CB E6 017C
        gbc.setState(0x9727, 0x3ff5, 0x3260, 0x2783, 0x3fe9, 0xa432, 0x0, 0x0);
        gbc.writeMem(0x9727, { 0xcb, 0xe6 });
        gbc.writeMem(0xa432, { 0xf4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3ff5, gbc.sp());
        EXPECT(0x9729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9727));
        EXPECT(0xe6, gbc.readMem(0x9728));
        EXPECT(0xf4, gbc.readMem(0xa432));
        // CB E6 017D
        gbc.setState(0x1249, 0x4178, 0xa870, 0xe524, 0x69ce, 0x1a43, 0x0, 0x1);
        gbc.writeMem(0x1249, { 0xcb, 0xe6 });
        gbc.writeMem(0x1a43, { 0xb1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4178, gbc.sp());
        EXPECT(0x124b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0181
        gbc.setState(0x2bcf, 0x8ed7, 0xe3c0, 0x7a4d, 0x4169, 0xd085, 0x0, 0x0);
        gbc.writeMem(0x2bcf, { 0xcb, 0xe6 });
        gbc.writeMem(0xd085, { 0x36 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8ed7, gbc.sp());
        EXPECT(0x2bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xd085));
        // CB E6 0182
        gbc.setState(0xb0eb, 0x5c0c, 0xffd0, 0x7fd4, 0x1471, 0xd13f, 0x0, 0x0);
        gbc.writeMem(0xb0eb, { 0xcb, 0xe6 });
        gbc.writeMem(0xd13f, { 0x8d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5c0c, gbc.sp());
        EXPECT(0xb0ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0eb));
        EXPECT(0xe6, gbc.readMem(0xb0ec));
        EXPECT(0x9d, gbc.readMem(0xd13f));
        // CB E6 0183
        gbc.setState(0x6b66, 0x634e, 0xfb40, 0x184b, 0xc870, 0xfff0, 0x0, 0x0);
        gbc.writeMem(0x6b66, { 0xcb, 0xe6 });
        gbc.writeMem(0xfff0, { 0xc0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x634e, gbc.sp());
        EXPECT(0x6b68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xfff0));
        // CB E6 0184
        gbc.setState(0x5658, 0x29a3, 0x2690, 0xed4e, 0x3121, 0xc5ab, 0x1, 0x1);
        gbc.writeMem(0x5658, { 0xcb, 0xe6 });
        gbc.writeMem(0xc5ab, { 0xc6 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x29a3, gbc.sp());
        EXPECT(0x565a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc5ab));
        // CB E6 0185
        gbc.setState(0x9e98, 0x5541, 0xcb60, 0xf31a, 0xc678, 0x13ce, 0x1, 0x1);
        gbc.writeMem(0x13ce, { 0xf6 });
        gbc.writeMem(0x9e98, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5541, gbc.sp());
        EXPECT(0x9e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e98));
        EXPECT(0xe6, gbc.readMem(0x9e99));
        // CB E6 0186
        gbc.setState(0x87ea, 0xf45c, 0x81a0, 0x3154, 0x6ee6, 0xde29, 0x0, 0x1);
        gbc.writeMem(0x87ea, { 0xcb, 0xe6 });
        gbc.writeMem(0xde29, { 0x79 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf45c, gbc.sp());
        EXPECT(0x87ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ea));
        EXPECT(0xe6, gbc.readMem(0x87eb));
        EXPECT(0x79, gbc.readMem(0xde29));
        // CB E6 0187
        gbc.setState(0x8319, 0x5e6a, 0x9680, 0x1ac, 0x441, 0x8250, 0x1, 0x1);
        gbc.writeMem(0x8250, { 0x39 });
        gbc.writeMem(0x8319, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5e6a, gbc.sp());
        EXPECT(0x831b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x8250));
        EXPECT(0xcb, gbc.readMem(0x8319));
        EXPECT(0xe6, gbc.readMem(0x831a));
        // CB E6 0188
        gbc.setState(0xc5f5, 0xad33, 0x2f10, 0xf3e5, 0xec42, 0x9756, 0x1, 0x0);
        gbc.writeMem(0x9756, { 0xf5 });
        gbc.writeMem(0xc5f5, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xad33, gbc.sp());
        EXPECT(0xc5f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x9756));
        EXPECT(0xcb, gbc.readMem(0xc5f5));
        EXPECT(0xe6, gbc.readMem(0xc5f6));
        // CB E6 0189
        gbc.setState(0x92c0, 0x536f, 0xcc0, 0x3982, 0x2168, 0xc58b, 0x0, 0x0);
        gbc.writeMem(0x92c0, { 0xcb, 0xe6 });
        gbc.writeMem(0xc58b, { 0x44 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x536f, gbc.sp());
        EXPECT(0x92c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c0));
        EXPECT(0xe6, gbc.readMem(0x92c1));
        EXPECT(0x54, gbc.readMem(0xc58b));
        // CB E6 018A
        gbc.setState(0x646c, 0x7ac3, 0xc630, 0xb919, 0x88, 0x502a, 0x0, 0x0);
        gbc.writeMem(0x502a, { 0x96 });
        gbc.writeMem(0x646c, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7ac3, gbc.sp());
        EXPECT(0x646e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 018B
        gbc.setState(0xe5c2, 0x62b1, 0xbcb0, 0x4e0d, 0xfcc, 0x9633, 0x0, 0x1);
        gbc.writeMem(0x9633, { 0x69 });
        gbc.writeMem(0xe5c2, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x62b1, gbc.sp());
        EXPECT(0xe5c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9633));
        EXPECT(0xcb, gbc.readMem(0xe5c2));
        EXPECT(0xe6, gbc.readMem(0xe5c3));
        // CB E6 018C
        gbc.setState(0x5d2c, 0x97cd, 0xe7b0, 0x4ebe, 0x185c, 0xfc0f, 0x1, 0x0);
        gbc.writeMem(0x5d2c, { 0xcb, 0xe6 });
        gbc.writeMem(0xfc0f, { 0x34 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x97cd, gbc.sp());
        EXPECT(0x5d2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xfc0f));
        // CB E6 018D
        gbc.setState(0x6967, 0x8089, 0x9500, 0xc26b, 0xbb7f, 0xd0c1, 0x0, 0x1);
        gbc.writeMem(0x6967, { 0xcb, 0xe6 });
        gbc.writeMem(0xd0c1, { 0x88 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8089, gbc.sp());
        EXPECT(0x6969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd0c1));
        // CB E6 0190
        gbc.setState(0x40b9, 0x4745, 0x1fc0, 0x939e, 0x72ab, 0x8321, 0x1, 0x0);
        gbc.writeMem(0x40b9, { 0xcb, 0xe6 });
        gbc.writeMem(0x8321, { 0x16 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4745, gbc.sp());
        EXPECT(0x40bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8321));
        // CB E6 0191
        gbc.setState(0x5f68, 0x599, 0xb220, 0xda40, 0x8a58, 0xcbff, 0x0, 0x0);
        gbc.writeMem(0x5f68, { 0xcb, 0xe6 });
        gbc.writeMem(0xcbff, { 0x65 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x599, gbc.sp());
        EXPECT(0x5f6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xcbff));
        // CB E6 0192
        gbc.setState(0x3cb5, 0x650f, 0x5730, 0xa39f, 0x958e, 0xb208, 0x1, 0x0);
        gbc.writeMem(0x3cb5, { 0xcb, 0xe6 });
        gbc.writeMem(0xb208, { 0x71 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x650f, gbc.sp());
        EXPECT(0x3cb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xb208));
        // CB E6 0193
        gbc.setState(0x3fb3, 0x706e, 0x3810, 0xc908, 0x3f79, 0xbca4, 0x0, 0x0);
        gbc.writeMem(0x3fb3, { 0xcb, 0xe6 });
        gbc.writeMem(0xbca4, { 0x71 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x706e, gbc.sp());
        EXPECT(0x3fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xbca4));
        // CB E6 0194
        gbc.setState(0x257f, 0xefca, 0xae10, 0x3fdc, 0xf569, 0x817e, 0x0, 0x0);
        gbc.writeMem(0x257f, { 0xcb, 0xe6 });
        gbc.writeMem(0x817e, { 0xc9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xefca, gbc.sp());
        EXPECT(0x2581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x817e));
        // CB E6 0195
        gbc.setState(0xb7b4, 0x6746, 0x1cd0, 0xc9b0, 0x8bc5, 0xfba4, 0x1, 0x0);
        gbc.writeMem(0xb7b4, { 0xcb, 0xe6 });
        gbc.writeMem(0xfba4, { 0xf9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6746, gbc.sp());
        EXPECT(0xb7b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b4));
        EXPECT(0xe6, gbc.readMem(0xb7b5));
        EXPECT(0xf9, gbc.readMem(0xfba4));
        // CB E6 0196
        gbc.setState(0xc5cb, 0x64f9, 0x8db0, 0xd69, 0xc4e7, 0xd911, 0x1, 0x1);
        gbc.writeMem(0xc5cb, { 0xcb, 0xe6 });
        gbc.writeMem(0xd911, { 0x1f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x64f9, gbc.sp());
        EXPECT(0xc5cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5cb));
        EXPECT(0xe6, gbc.readMem(0xc5cc));
        EXPECT(0x1f, gbc.readMem(0xd911));
        // CB E6 0197
        gbc.setState(0x4638, 0xe851, 0x3f10, 0xcc26, 0x3e27, 0xf9a7, 0x0, 0x0);
        gbc.writeMem(0x4638, { 0xcb, 0xe6 });
        gbc.writeMem(0xf9a7, { 0xc9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe851, gbc.sp());
        EXPECT(0x463a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xf9a7));
        // CB E6 019A
        gbc.setState(0x7867, 0x7872, 0xde10, 0x4005, 0x66a1, 0xdcd5, 0x1, 0x0);
        gbc.writeMem(0x7867, { 0xcb, 0xe6 });
        gbc.writeMem(0xdcd5, { 0x37 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7872, gbc.sp());
        EXPECT(0x7869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xdcd5));
        // CB E6 019B
        gbc.setState(0xc927, 0xac52, 0xf790, 0xa432, 0x48dc, 0x8eed, 0x0, 0x1);
        gbc.writeMem(0x8eed, { 0x38 });
        gbc.writeMem(0xc927, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xac52, gbc.sp());
        EXPECT(0xc929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8eed));
        EXPECT(0xcb, gbc.readMem(0xc927));
        EXPECT(0xe6, gbc.readMem(0xc928));
        // CB E6 019C
        gbc.setState(0x757, 0xd424, 0x1b80, 0x1207, 0xff30, 0xbea7, 0x0, 0x1);
        gbc.writeMem(0x757, { 0xcb, 0xe6 });
        gbc.writeMem(0xbea7, { 0xe6 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd424, gbc.sp());
        EXPECT(0x759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xbea7));
        // CB E6 019D
        gbc.setState(0x8a8c, 0x6077, 0x1ac0, 0x677a, 0x325f, 0xfd4e, 0x0, 0x1);
        gbc.writeMem(0x8a8c, { 0xcb, 0xe6 });
        gbc.writeMem(0xfd4e, { 0x75 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6077, gbc.sp());
        EXPECT(0x8a8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a8c));
        EXPECT(0xe6, gbc.readMem(0x8a8d));
        EXPECT(0x75, gbc.readMem(0xfd4e));
        // CB E6 019F
        gbc.setState(0x7578, 0xb36, 0xab30, 0x8e68, 0xc1d5, 0xa386, 0x0, 0x0);
        gbc.writeMem(0x7578, { 0xcb, 0xe6 });
        gbc.writeMem(0xa386, { 0x8c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb36, gbc.sp());
        EXPECT(0x757a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa386));
        // CB E6 01A0
        gbc.setState(0xb167, 0x9457, 0x6410, 0xbd2, 0xdf68, 0xf3d7, 0x1, 0x1);
        gbc.writeMem(0xb167, { 0xcb, 0xe6 });
        gbc.writeMem(0xf3d7, { 0xda });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9457, gbc.sp());
        EXPECT(0xb169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb167));
        EXPECT(0xe6, gbc.readMem(0xb168));
        EXPECT(0xda, gbc.readMem(0xf3d7));
        // CB E6 01A1
        gbc.setState(0xd302, 0x51a7, 0x7ce0, 0xb7e8, 0x6a37, 0xe2d5, 0x0, 0x1);
        gbc.writeMem(0xd302, { 0xcb, 0xe6 });
        gbc.writeMem(0xe2d5, { 0x95 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x51a7, gbc.sp());
        EXPECT(0xd304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd302));
        EXPECT(0xe6, gbc.readMem(0xd303));
        EXPECT(0x95, gbc.readMem(0xe2d5));
        // CB E6 01A2
        gbc.setState(0x5fbf, 0x747c, 0x2ff0, 0x38c8, 0x3aa3, 0x843b, 0x1, 0x1);
        gbc.writeMem(0x5fbf, { 0xcb, 0xe6 });
        gbc.writeMem(0x843b, { 0xe8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x747c, gbc.sp());
        EXPECT(0x5fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x843b));
        // CB E6 01A3
        gbc.setState(0x73a, 0xe77f, 0x7e20, 0x9c31, 0x172, 0x2764, 0x0, 0x1);
        gbc.writeMem(0x73a, { 0xcb, 0xe6 });
        gbc.writeMem(0x2764, { 0xb1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe77f, gbc.sp());
        EXPECT(0x73c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 01A4
        gbc.setState(0xb319, 0x4186, 0xec0, 0x1e24, 0x53a7, 0xa64e, 0x1, 0x0);
        gbc.writeMem(0xa64e, { 0x1a });
        gbc.writeMem(0xb319, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4186, gbc.sp());
        EXPECT(0xb31b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa64e));
        EXPECT(0xcb, gbc.readMem(0xb319));
        EXPECT(0xe6, gbc.readMem(0xb31a));
        // CB E6 01A5
        gbc.setState(0x248e, 0x4d4, 0x6cd0, 0xcc41, 0xe646, 0xfc3a, 0x1, 0x0);
        gbc.writeMem(0x248e, { 0xcb, 0xe6 });
        gbc.writeMem(0xfc3a, { 0x42 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4d4, gbc.sp());
        EXPECT(0x2490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xfc3a));
        // CB E6 01A6
        gbc.setState(0xa93, 0x4145, 0x7690, 0x27d0, 0x897b, 0xfd46, 0x0, 0x0);
        gbc.writeMem(0xa93, { 0xcb, 0xe6 });
        gbc.writeMem(0xfd46, { 0xfa });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4145, gbc.sp());
        EXPECT(0xa95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xfd46));
        // CB E6 01A7
        gbc.setState(0xa092, 0x9fcc, 0x2d50, 0xf91, 0x34d, 0xfc46, 0x1, 0x1);
        gbc.writeMem(0xa092, { 0xcb, 0xe6 });
        gbc.writeMem(0xfc46, { 0xc7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9fcc, gbc.sp());
        EXPECT(0xa094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa092));
        EXPECT(0xe6, gbc.readMem(0xa093));
        EXPECT(0xd7, gbc.readMem(0xfc46));
        // CB E6 01A8
        gbc.setState(0x8afe, 0x4ae5, 0x8150, 0xaad5, 0xcc29, 0x1b47, 0x1, 0x1);
        gbc.writeMem(0x1b47, { 0x16 });
        gbc.writeMem(0x8afe, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4ae5, gbc.sp());
        EXPECT(0x8b00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8afe));
        EXPECT(0xe6, gbc.readMem(0x8aff));
        // CB E6 01A9
        gbc.setState(0x616, 0x9104, 0xa100, 0x2fdf, 0xd598, 0xd307, 0x1, 0x0);
        gbc.writeMem(0x616, { 0xcb, 0xe6 });
        gbc.writeMem(0xd307, { 0x4c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9104, gbc.sp());
        EXPECT(0x618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xd307));
        // CB E6 01AA
        gbc.setState(0x9fb1, 0x2cbd, 0x5f80, 0x1f8b, 0xc041, 0x55be, 0x1, 0x1);
        gbc.writeMem(0x55be, { 0x11 });
        gbc.writeMem(0x9fb1, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2cbd, gbc.sp());
        EXPECT(0x9fb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb1));
        EXPECT(0xe6, gbc.readMem(0x9fb2));
        // CB E6 01AB
        gbc.setState(0x3b9, 0xe4bb, 0xe550, 0x4073, 0xbaef, 0x8cb2, 0x1, 0x0);
        gbc.writeMem(0x3b9, { 0xcb, 0xe6 });
        gbc.writeMem(0x8cb2, { 0xb7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe4bb, gbc.sp());
        EXPECT(0x3bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8cb2));
        // CB E6 01AC
        gbc.setState(0xe631, 0x46fc, 0x9ec0, 0xd36b, 0x7c86, 0x8a4f, 0x0, 0x0);
        gbc.writeMem(0x8a4f, { 0x9e });
        gbc.writeMem(0xe631, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x46fc, gbc.sp());
        EXPECT(0xe633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8a4f));
        EXPECT(0xcb, gbc.readMem(0xe631));
        EXPECT(0xe6, gbc.readMem(0xe632));
        // CB E6 01AD
        gbc.setState(0x3168, 0x2acc, 0x8fb0, 0x1ca1, 0xf44e, 0x8977, 0x0, 0x0);
        gbc.writeMem(0x3168, { 0xcb, 0xe6 });
        gbc.writeMem(0x8977, { 0x47 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2acc, gbc.sp());
        EXPECT(0x316a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8977));
        // CB E6 01AE
        gbc.setState(0xaf99, 0xf6ce, 0x90d0, 0x7f98, 0xa853, 0xa17d, 0x1, 0x1);
        gbc.writeMem(0xa17d, { 0x62 });
        gbc.writeMem(0xaf99, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf6ce, gbc.sp());
        EXPECT(0xaf9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa17d));
        EXPECT(0xcb, gbc.readMem(0xaf99));
        EXPECT(0xe6, gbc.readMem(0xaf9a));
        // CB E6 01B1
        gbc.setState(0x3b36, 0x1a5, 0x27e0, 0x5b2, 0x53a0, 0xb293, 0x1, 0x0);
        gbc.writeMem(0x3b36, { 0xcb, 0xe6 });
        gbc.writeMem(0xb293, { 0x94 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1a5, gbc.sp());
        EXPECT(0x3b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb293));
        // CB E6 01B4
        gbc.setState(0xddfc, 0x7b5e, 0x28a0, 0xe3b8, 0x2a01, 0xbf69, 0x0, 0x0);
        gbc.writeMem(0xbf69, { 0x75 });
        gbc.writeMem(0xddfc, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7b5e, gbc.sp());
        EXPECT(0xddfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xbf69));
        EXPECT(0xcb, gbc.readMem(0xddfc));
        EXPECT(0xe6, gbc.readMem(0xddfd));
        // CB E6 01B5
        gbc.setState(0xbaaa, 0x4b31, 0xd7d0, 0x6754, 0xd547, 0xbdb8, 0x1, 0x1);
        gbc.writeMem(0xbaaa, { 0xcb, 0xe6 });
        gbc.writeMem(0xbdb8, { 0x23 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4b31, gbc.sp());
        EXPECT(0xbaac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaaa));
        EXPECT(0xe6, gbc.readMem(0xbaab));
        EXPECT(0x33, gbc.readMem(0xbdb8));
        // CB E6 01B6
        gbc.setState(0xc322, 0x713d, 0x870, 0x7c55, 0xa551, 0x3f2e, 0x0, 0x1);
        gbc.writeMem(0x3f2e, { 0x79 });
        gbc.writeMem(0xc322, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x713d, gbc.sp());
        EXPECT(0xc324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc322));
        EXPECT(0xe6, gbc.readMem(0xc323));
        // CB E6 01B7
        gbc.setState(0x7fe, 0x2b83, 0xfec0, 0x5de, 0x29e1, 0xfdc8, 0x1, 0x0);
        gbc.writeMem(0x7fe, { 0xcb, 0xe6 });
        gbc.writeMem(0xfdc8, { 0x19 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2b83, gbc.sp());
        EXPECT(0x800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xfdc8));
        // CB E6 01B8
        gbc.setState(0xe606, 0xac84, 0x31c0, 0xd8c2, 0x8f07, 0x7778, 0x1, 0x1);
        gbc.writeMem(0x7778, { 0xd1 });
        gbc.writeMem(0xe606, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xac84, gbc.sp());
        EXPECT(0xe608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe606));
        EXPECT(0xe6, gbc.readMem(0xe607));
        // CB E6 01B9
        gbc.setState(0x5996, 0x56cd, 0xbf90, 0x8c17, 0xc187, 0xa5d7, 0x0, 0x0);
        gbc.writeMem(0x5996, { 0xcb, 0xe6 });
        gbc.writeMem(0xa5d7, { 0x9c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x56cd, gbc.sp());
        EXPECT(0x5998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa5d7));
        // CB E6 01BA
        gbc.setState(0x4722, 0x5e38, 0x8d60, 0x156c, 0xe9a6, 0x680f, 0x0, 0x0);
        gbc.writeMem(0x4722, { 0xcb, 0xe6 });
        gbc.writeMem(0x680f, { 0x97 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5e38, gbc.sp());
        EXPECT(0x4724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 01BB
        gbc.setState(0x270a, 0xd50c, 0x6be0, 0xbcf8, 0x1950, 0xc14a, 0x0, 0x1);
        gbc.writeMem(0x270a, { 0xcb, 0xe6 });
        gbc.writeMem(0xc14a, { 0xc1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd50c, gbc.sp());
        EXPECT(0x270c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xc14a));
        // CB E6 01BC
        gbc.setState(0xc21f, 0xb784, 0xa3d0, 0x710b, 0x18ee, 0x9c1d, 0x0, 0x0);
        gbc.writeMem(0x9c1d, { 0x73 });
        gbc.writeMem(0xc21f, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb784, gbc.sp());
        EXPECT(0xc221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x9c1d));
        EXPECT(0xcb, gbc.readMem(0xc21f));
        EXPECT(0xe6, gbc.readMem(0xc220));
        // CB E6 01BE
        gbc.setState(0x38d5, 0xfe31, 0x8370, 0xee11, 0x4032, 0x3106, 0x1, 0x0);
        gbc.writeMem(0x3106, { 0x12 });
        gbc.writeMem(0x38d5, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfe31, gbc.sp());
        EXPECT(0x38d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 01BF
        gbc.setState(0x6f4d, 0xb7b4, 0x4200, 0x1ae3, 0xe2d6, 0x88d0, 0x0, 0x1);
        gbc.writeMem(0x6f4d, { 0xcb, 0xe6 });
        gbc.writeMem(0x88d0, { 0x94 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb7b4, gbc.sp());
        EXPECT(0x6f4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x88d0));
        // CB E6 01C0
        gbc.setState(0xb1dd, 0x6a85, 0xb6b0, 0xebca, 0x6c80, 0x1be5, 0x1, 0x1);
        gbc.writeMem(0x1be5, { 0xda });
        gbc.writeMem(0xb1dd, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6a85, gbc.sp());
        EXPECT(0xb1df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1dd));
        EXPECT(0xe6, gbc.readMem(0xb1de));
        // CB E6 01C1
        gbc.setState(0x9aed, 0x502d, 0x9f10, 0x3db2, 0xbd41, 0x9bd9, 0x1, 0x1);
        gbc.writeMem(0x9aed, { 0xcb, 0xe6 });
        gbc.writeMem(0x9bd9, { 0xda });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x502d, gbc.sp());
        EXPECT(0x9aef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aed));
        EXPECT(0xe6, gbc.readMem(0x9aee));
        EXPECT(0xda, gbc.readMem(0x9bd9));
        // CB E6 01C2
        gbc.setState(0xa6a8, 0x599e, 0x320, 0x5799, 0xbd29, 0x93e0, 0x0, 0x0);
        gbc.writeMem(0x93e0, { 0x6c });
        gbc.writeMem(0xa6a8, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x599e, gbc.sp());
        EXPECT(0xa6aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x93e0));
        EXPECT(0xcb, gbc.readMem(0xa6a8));
        EXPECT(0xe6, gbc.readMem(0xa6a9));
        // CB E6 01C3
        gbc.setState(0xd327, 0x3716, 0x8b60, 0xc771, 0x11d9, 0x3f2d, 0x0, 0x0);
        gbc.writeMem(0x3f2d, { 0x32 });
        gbc.writeMem(0xd327, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3716, gbc.sp());
        EXPECT(0xd329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd327));
        EXPECT(0xe6, gbc.readMem(0xd328));
        // CB E6 01C5
        gbc.setState(0x7814, 0xa62, 0x48d0, 0xd565, 0xc85a, 0xabe1, 0x0, 0x0);
        gbc.writeMem(0x7814, { 0xcb, 0xe6 });
        gbc.writeMem(0xabe1, { 0x4d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa62, gbc.sp());
        EXPECT(0x7816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xabe1));
        // CB E6 01C7
        gbc.setState(0x83a0, 0x73c1, 0x50f0, 0xe1e9, 0x9390, 0x8f1c, 0x1, 0x1);
        gbc.writeMem(0x83a0, { 0xcb, 0xe6 });
        gbc.writeMem(0x8f1c, { 0xed });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x73c1, gbc.sp());
        EXPECT(0x83a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83a0));
        EXPECT(0xe6, gbc.readMem(0x83a1));
        EXPECT(0xfd, gbc.readMem(0x8f1c));
        // CB E6 01C8
        gbc.setState(0x69d1, 0xf5ce, 0x9df0, 0x1360, 0x84f4, 0x8d02, 0x0, 0x1);
        gbc.writeMem(0x69d1, { 0xcb, 0xe6 });
        gbc.writeMem(0x8d02, { 0xaa });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf5ce, gbc.sp());
        EXPECT(0x69d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x8d02));
        // CB E6 01C9
        gbc.setState(0xd5f4, 0x528b, 0x8ae0, 0x3b4a, 0xece, 0xaf5, 0x0, 0x1);
        gbc.writeMem(0xaf5, { 0xb4 });
        gbc.writeMem(0xd5f4, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x528b, gbc.sp());
        EXPECT(0xd5f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5f4));
        EXPECT(0xe6, gbc.readMem(0xd5f5));
        // CB E6 01CB
        gbc.setState(0x3a83, 0xdf88, 0x3c0, 0x3f39, 0x9e78, 0x8e13, 0x1, 0x0);
        gbc.writeMem(0x3a83, { 0xcb, 0xe6 });
        gbc.writeMem(0x8e13, { 0x38 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xdf88, gbc.sp());
        EXPECT(0x3a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8e13));
        // CB E6 01CD
        gbc.setState(0x9e60, 0x92f4, 0xf0b0, 0xec94, 0xa2c5, 0x1828, 0x1, 0x1);
        gbc.writeMem(0x1828, { 0x5e });
        gbc.writeMem(0x9e60, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x92f4, gbc.sp());
        EXPECT(0x9e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e60));
        EXPECT(0xe6, gbc.readMem(0x9e61));
        // CB E6 01CE
        gbc.setState(0x3dd9, 0xe2e1, 0xed10, 0x8848, 0x4281, 0x6177, 0x0, 0x1);
        gbc.writeMem(0x3dd9, { 0xcb, 0xe6 });
        gbc.writeMem(0x6177, { 0xb9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe2e1, gbc.sp());
        EXPECT(0x3ddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 01CF
        gbc.setState(0x83c3, 0x8e87, 0x980, 0x59d2, 0x372d, 0x747f, 0x0, 0x0);
        gbc.writeMem(0x747f, { 0x14 });
        gbc.writeMem(0x83c3, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8e87, gbc.sp());
        EXPECT(0x83c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83c3));
        EXPECT(0xe6, gbc.readMem(0x83c4));
        // CB E6 01D0
        gbc.setState(0x5e96, 0x95b8, 0x9b70, 0xc384, 0xbf02, 0x864e, 0x1, 0x1);
        gbc.writeMem(0x5e96, { 0xcb, 0xe6 });
        gbc.writeMem(0x864e, { 0xb6 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x95b8, gbc.sp());
        EXPECT(0x5e98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x864e));
        // CB E6 01D2
        gbc.setState(0x51e7, 0x9618, 0x7a30, 0x63dc, 0x7c6c, 0xface, 0x0, 0x1);
        gbc.writeMem(0x51e7, { 0xcb, 0xe6 });
        gbc.writeMem(0xface, { 0xe4 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9618, gbc.sp());
        EXPECT(0x51e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xface));
        // CB E6 01D4
        gbc.setState(0x5afe, 0x2ecf, 0x69d0, 0x661, 0x7be7, 0xf7e7, 0x0, 0x1);
        gbc.writeMem(0x5afe, { 0xcb, 0xe6 });
        gbc.writeMem(0xf7e7, { 0x2e });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2ecf, gbc.sp());
        EXPECT(0x5b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xf7e7));
        // CB E6 01D6
        gbc.setState(0x9392, 0x6c0a, 0x1d70, 0xecdc, 0xe784, 0x6760, 0x0, 0x0);
        gbc.writeMem(0x6760, { 0x75 });
        gbc.writeMem(0x9392, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6c0a, gbc.sp());
        EXPECT(0x9394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9392));
        EXPECT(0xe6, gbc.readMem(0x9393));
        // CB E6 01D7
        gbc.setState(0x5595, 0x7b65, 0xd290, 0x54d8, 0x2ee8, 0x96ee, 0x0, 0x1);
        gbc.writeMem(0x5595, { 0xcb, 0xe6 });
        gbc.writeMem(0x96ee, { 0x62 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7b65, gbc.sp());
        EXPECT(0x5597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x96ee));
        // CB E6 01D8
        gbc.setState(0x411d, 0xc8b2, 0xd6b0, 0x79ed, 0x4507, 0x9f5, 0x0, 0x0);
        gbc.writeMem(0x9f5, { 0x15 });
        gbc.writeMem(0x411d, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc8b2, gbc.sp());
        EXPECT(0x411f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 01D9
        gbc.setState(0x6c57, 0x3d97, 0xfa10, 0x16c, 0xe89f, 0xb3e7, 0x0, 0x0);
        gbc.writeMem(0x6c57, { 0xcb, 0xe6 });
        gbc.writeMem(0xb3e7, { 0xe0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3d97, gbc.sp());
        EXPECT(0x6c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb3e7));
        // CB E6 01DB
        gbc.setState(0xd726, 0xeb7d, 0xbbb0, 0xfb48, 0xb77f, 0x7455, 0x0, 0x1);
        gbc.writeMem(0x7455, { 0x19 });
        gbc.writeMem(0xd726, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xeb7d, gbc.sp());
        EXPECT(0xd728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd726));
        EXPECT(0xe6, gbc.readMem(0xd727));
        // CB E6 01DC
        gbc.setState(0xdc2e, 0x48c0, 0x4070, 0x987a, 0x782a, 0xc012, 0x1, 0x1);
        gbc.writeMem(0xc012, { 0xe5 });
        gbc.writeMem(0xdc2e, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x48c0, gbc.sp());
        EXPECT(0xdc30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xc012));
        EXPECT(0xcb, gbc.readMem(0xdc2e));
        EXPECT(0xe6, gbc.readMem(0xdc2f));
        // CB E6 01DE
        gbc.setState(0xbb92, 0xc827, 0x15a0, 0xaee8, 0xf71e, 0xa6df, 0x1, 0x0);
        gbc.writeMem(0xa6df, { 0xc7 });
        gbc.writeMem(0xbb92, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc827, gbc.sp());
        EXPECT(0xbb94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xa6df));
        EXPECT(0xcb, gbc.readMem(0xbb92));
        EXPECT(0xe6, gbc.readMem(0xbb93));
        // CB E6 01DF
        gbc.setState(0x6e5, 0xbea3, 0x2ba0, 0xc912, 0x866e, 0x9a31, 0x0, 0x1);
        gbc.writeMem(0x6e5, { 0xcb, 0xe6 });
        gbc.writeMem(0x9a31, { 0xfe });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbea3, gbc.sp());
        EXPECT(0x6e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9a31));
        // CB E6 01E0
        gbc.setState(0x13b3, 0xac5, 0x35f0, 0xf353, 0xdf18, 0x9d6c, 0x0, 0x0);
        gbc.writeMem(0x13b3, { 0xcb, 0xe6 });
        gbc.writeMem(0x9d6c, { 0x8b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xac5, gbc.sp());
        EXPECT(0x13b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9d6c));
        // CB E6 01E1
        gbc.setState(0x509, 0x9572, 0x3650, 0x7c14, 0x51af, 0x895b, 0x1, 0x1);
        gbc.writeMem(0x509, { 0xcb, 0xe6 });
        gbc.writeMem(0x895b, { 0x2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9572, gbc.sp());
        EXPECT(0x50b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x895b));
        // CB E6 01E3
        gbc.setState(0xa4e7, 0xc864, 0x3d00, 0x41b9, 0x2ccb, 0xddc5, 0x1, 0x0);
        gbc.writeMem(0xa4e7, { 0xcb, 0xe6 });
        gbc.writeMem(0xddc5, { 0x2b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc864, gbc.sp());
        EXPECT(0xa4e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e7));
        EXPECT(0xe6, gbc.readMem(0xa4e8));
        EXPECT(0x3b, gbc.readMem(0xddc5));
        // CB E6 01E4
        gbc.setState(0x8cff, 0x45d9, 0x500, 0x327b, 0xee92, 0x8d78, 0x0, 0x0);
        gbc.writeMem(0x8cff, { 0xcb, 0xe6 });
        gbc.writeMem(0x8d78, { 0x68 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x45d9, gbc.sp());
        EXPECT(0x8d01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cff));
        EXPECT(0xe6, gbc.readMem(0x8d00));
        EXPECT(0x78, gbc.readMem(0x8d78));
        // CB E6 01E5
        gbc.setState(0x2543, 0xad9a, 0x2290, 0xb287, 0x3067, 0xdfcd, 0x1, 0x0);
        gbc.writeMem(0x2543, { 0xcb, 0xe6 });
        gbc.writeMem(0xdfcd, { 0xf4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xad9a, gbc.sp());
        EXPECT(0x2545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xdfcd));
        // CB E6 01E6
        gbc.setState(0xbf1b, 0xcab, 0x1e60, 0x7903, 0x25b1, 0xfca0, 0x1, 0x0);
        gbc.writeMem(0xbf1b, { 0xcb, 0xe6 });
        gbc.writeMem(0xfca0, { 0xee });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcab, gbc.sp());
        EXPECT(0xbf1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf1b));
        EXPECT(0xe6, gbc.readMem(0xbf1c));
        EXPECT(0xfe, gbc.readMem(0xfca0));
        // CB E6 01E7
        gbc.setState(0x4ac2, 0xae0f, 0x7e80, 0xa9d6, 0xaf7b, 0x7c89, 0x0, 0x0);
        gbc.writeMem(0x4ac2, { 0xcb, 0xe6 });
        gbc.writeMem(0x7c89, { 0x1d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xae0f, gbc.sp());
        EXPECT(0x4ac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 01E8
        gbc.setState(0xc92, 0x9289, 0xb10, 0x141a, 0xa9d2, 0x5993, 0x0, 0x0);
        gbc.writeMem(0xc92, { 0xcb, 0xe6 });
        gbc.writeMem(0x5993, { 0x1b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9289, gbc.sp());
        EXPECT(0xc94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 01E9
        gbc.setState(0x348, 0xce00, 0xf310, 0x651, 0x98f2, 0xccec, 0x0, 0x1);
        gbc.writeMem(0x348, { 0xcb, 0xe6 });
        gbc.writeMem(0xccec, { 0x4b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xce00, gbc.sp());
        EXPECT(0x34a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xccec));
        // CB E6 01EA
        gbc.setState(0x91c0, 0x9ee1, 0xe8f0, 0xbab7, 0xc119, 0xf4f0, 0x1, 0x1);
        gbc.writeMem(0x91c0, { 0xcb, 0xe6 });
        gbc.writeMem(0xf4f0, { 0xa4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9ee1, gbc.sp());
        EXPECT(0x91c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c0));
        EXPECT(0xe6, gbc.readMem(0x91c1));
        EXPECT(0xb4, gbc.readMem(0xf4f0));
        // CB E6 01EC
        gbc.setState(0x83dd, 0xddc3, 0xed30, 0xd105, 0x5297, 0x1c10, 0x1, 0x0);
        gbc.writeMem(0x1c10, { 0xf5 });
        gbc.writeMem(0x83dd, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xddc3, gbc.sp());
        EXPECT(0x83df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83dd));
        EXPECT(0xe6, gbc.readMem(0x83de));
        // CB E6 01EF
        gbc.setState(0xd9e9, 0x18f5, 0xdcc0, 0xdb24, 0x26e2, 0xf627, 0x0, 0x1);
        gbc.writeMem(0xd9e9, { 0xcb, 0xe6 });
        gbc.writeMem(0xf627, { 0xa9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x18f5, gbc.sp());
        EXPECT(0xd9eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e9));
        EXPECT(0xe6, gbc.readMem(0xd9ea));
        EXPECT(0xb9, gbc.readMem(0xf627));
        // CB E6 01F1
        gbc.setState(0xaaef, 0x6831, 0x7150, 0xbf55, 0x67a4, 0xd009, 0x0, 0x0);
        gbc.writeMem(0xaaef, { 0xcb, 0xe6 });
        gbc.writeMem(0xd009, { 0x1d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6831, gbc.sp());
        EXPECT(0xaaf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaef));
        EXPECT(0xe6, gbc.readMem(0xaaf0));
        EXPECT(0x1d, gbc.readMem(0xd009));
        // CB E6 01F2
        gbc.setState(0x5d97, 0xeb48, 0x3240, 0x9c10, 0xc201, 0xc8eb, 0x1, 0x1);
        gbc.writeMem(0x5d97, { 0xcb, 0xe6 });
        gbc.writeMem(0xc8eb, { 0x63 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xeb48, gbc.sp());
        EXPECT(0x5d99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xc8eb));
        // CB E6 01F3
        gbc.setState(0xbc06, 0xae69, 0x9180, 0x593a, 0x9614, 0x35ed, 0x0, 0x0);
        gbc.writeMem(0x35ed, { 0x95 });
        gbc.writeMem(0xbc06, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xae69, gbc.sp());
        EXPECT(0xbc08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc06));
        EXPECT(0xe6, gbc.readMem(0xbc07));
        // CB E6 01F4
        gbc.setState(0x930a, 0xfd85, 0xa350, 0x2d89, 0xedd6, 0xb2db, 0x1, 0x1);
        gbc.writeMem(0x930a, { 0xcb, 0xe6 });
        gbc.writeMem(0xb2db, { 0xbb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xfd85, gbc.sp());
        EXPECT(0x930c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x930a));
        EXPECT(0xe6, gbc.readMem(0x930b));
        EXPECT(0xbb, gbc.readMem(0xb2db));
        // CB E6 01F5
        gbc.setState(0xf66, 0x248c, 0xfa20, 0x4280, 0x6ce2, 0xc178, 0x0, 0x0);
        gbc.writeMem(0xf66, { 0xcb, 0xe6 });
        gbc.writeMem(0xc178, { 0x1a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x248c, gbc.sp());
        EXPECT(0xf68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc178));
        // CB E6 01F6
        gbc.setState(0x2d73, 0xbb9, 0xa830, 0x2ba0, 0xe8e6, 0xc77, 0x0, 0x1);
        gbc.writeMem(0xc77, { 0x75 });
        gbc.writeMem(0x2d73, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xbb9, gbc.sp());
        EXPECT(0x2d75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 01F8
        gbc.setState(0xe9cb, 0xb7c1, 0x6480, 0xbd1a, 0x4c59, 0x697f, 0x0, 0x1);
        gbc.writeMem(0x697f, { 0x5b });
        gbc.writeMem(0xe9cb, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb7c1, gbc.sp());
        EXPECT(0xe9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9cb));
        EXPECT(0xe6, gbc.readMem(0xe9cc));
        // CB E6 01F9
        gbc.setState(0x8952, 0x9cbc, 0xad60, 0xdb78, 0xf892, 0x7ffd, 0x0, 0x0);
        gbc.writeMem(0x7ffd, { 0x74 });
        gbc.writeMem(0x8952, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9cbc, gbc.sp());
        EXPECT(0x8954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8952));
        EXPECT(0xe6, gbc.readMem(0x8953));
        // CB E6 01FB
        gbc.setState(0xa23, 0x72f2, 0x6b90, 0xe89c, 0x6d87, 0xa97f, 0x1, 0x1);
        gbc.writeMem(0xa23, { 0xcb, 0xe6 });
        gbc.writeMem(0xa97f, { 0x4d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x72f2, gbc.sp());
        EXPECT(0xa25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa97f));
        // CB E6 01FC
        gbc.setState(0x301a, 0x2c27, 0x5d40, 0x965c, 0x2410, 0xe410, 0x1, 0x0);
        gbc.writeMem(0x301a, { 0xcb, 0xe6 });
        gbc.writeMem(0xe410, { 0x55 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2c27, gbc.sp());
        EXPECT(0x301c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe410));
        // CB E6 01FD
        gbc.setState(0xcd54, 0xd0bb, 0x20b0, 0x63cb, 0x266f, 0x875e, 0x0, 0x1);
        gbc.writeMem(0x875e, { 0xbd });
        gbc.writeMem(0xcd54, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd0bb, gbc.sp());
        EXPECT(0xcd56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x875e));
        EXPECT(0xcb, gbc.readMem(0xcd54));
        EXPECT(0xe6, gbc.readMem(0xcd55));
        // CB E6 01FE
        gbc.setState(0x8613, 0x2d76, 0xbce0, 0xae7c, 0x4b91, 0xad28, 0x1, 0x0);
        gbc.writeMem(0x8613, { 0xcb, 0xe6 });
        gbc.writeMem(0xad28, { 0xaf });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2d76, gbc.sp());
        EXPECT(0x8615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8613));
        EXPECT(0xe6, gbc.readMem(0x8614));
        EXPECT(0xbf, gbc.readMem(0xad28));
        // CB E6 01FF
        gbc.setState(0x7682, 0x15e4, 0xdb90, 0xb0be, 0xf7d9, 0x864f, 0x1, 0x0);
        gbc.writeMem(0x7682, { 0xcb, 0xe6 });
        gbc.writeMem(0x864f, { 0x1f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x15e4, gbc.sp());
        EXPECT(0x7684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x864f));
        // CB E6 0200
        gbc.setState(0x7b62, 0x3127, 0x45a0, 0x39e6, 0xe0ad, 0xf700, 0x0, 0x1);
        gbc.writeMem(0x7b62, { 0xcb, 0xe6 });
        gbc.writeMem(0xf700, { 0x61 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3127, gbc.sp());
        EXPECT(0x7b64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xf700));
        // CB E6 0201
        gbc.setState(0x357b, 0x344c, 0x7a0, 0x73ed, 0xb8a6, 0x61f7, 0x0, 0x0);
        gbc.writeMem(0x357b, { 0xcb, 0xe6 });
        gbc.writeMem(0x61f7, { 0x1a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x344c, gbc.sp());
        EXPECT(0x357d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0202
        gbc.setState(0x43d, 0x72ee, 0x1db0, 0x153b, 0x82bc, 0x9e62, 0x1, 0x0);
        gbc.writeMem(0x43d, { 0xcb, 0xe6 });
        gbc.writeMem(0x9e62, { 0xe0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x72ee, gbc.sp());
        EXPECT(0x43f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9e62));
        // CB E6 0204
        gbc.setState(0x74fb, 0xe353, 0xab50, 0xd4c0, 0x1f69, 0xf528, 0x0, 0x0);
        gbc.writeMem(0x74fb, { 0xcb, 0xe6 });
        gbc.writeMem(0xf528, { 0x6d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe353, gbc.sp());
        EXPECT(0x74fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xf528));
        // CB E6 0205
        gbc.setState(0x7add, 0xd8ea, 0x7220, 0x2171, 0xb010, 0xd781, 0x1, 0x0);
        gbc.writeMem(0x7add, { 0xcb, 0xe6 });
        gbc.writeMem(0xd781, { 0x69 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd8ea, gbc.sp());
        EXPECT(0x7adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd781));
        // CB E6 0206
        gbc.setState(0x18f9, 0x8b61, 0x3860, 0xdbc2, 0x89d0, 0x250d, 0x0, 0x0);
        gbc.writeMem(0x18f9, { 0xcb, 0xe6 });
        gbc.writeMem(0x250d, { 0xf5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8b61, gbc.sp());
        EXPECT(0x18fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0207
        gbc.setState(0xd3c, 0xfc7b, 0x9540, 0xdb9e, 0xdf6, 0xd853, 0x0, 0x0);
        gbc.writeMem(0xd3c, { 0xcb, 0xe6 });
        gbc.writeMem(0xd853, { 0x6f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xfc7b, gbc.sp());
        EXPECT(0xd3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xd853));
        // CB E6 0208
        gbc.setState(0x77fd, 0x41b9, 0xf720, 0x7e77, 0x2643, 0xcca1, 0x0, 0x0);
        gbc.writeMem(0x77fd, { 0xcb, 0xe6 });
        gbc.writeMem(0xcca1, { 0xd0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x41b9, gbc.sp());
        EXPECT(0x77ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcca1));
        // CB E6 0209
        gbc.setState(0x58a9, 0x87bf, 0x1550, 0x4366, 0x9560, 0x4398, 0x0, 0x0);
        gbc.writeMem(0x4398, { 0x71 });
        gbc.writeMem(0x58a9, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x87bf, gbc.sp());
        EXPECT(0x58ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 020B
        gbc.setState(0x39a8, 0x9294, 0x4790, 0xc4ef, 0x9555, 0xd9b2, 0x0, 0x1);
        gbc.writeMem(0x39a8, { 0xcb, 0xe6 });
        gbc.writeMem(0xd9b2, { 0x41 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9294, gbc.sp());
        EXPECT(0x39aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd9b2));
        // CB E6 020C
        gbc.setState(0x3b76, 0x6b16, 0xdf0, 0xc4fe, 0x5450, 0x828b, 0x1, 0x0);
        gbc.writeMem(0x3b76, { 0xcb, 0xe6 });
        gbc.writeMem(0x828b, { 0xac });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6b16, gbc.sp());
        EXPECT(0x3b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x828b));
        // CB E6 020D
        gbc.setState(0x460c, 0x128d, 0x3eb0, 0x5c80, 0x738b, 0x8280, 0x0, 0x0);
        gbc.writeMem(0x460c, { 0xcb, 0xe6 });
        gbc.writeMem(0x8280, { 0x13 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x128d, gbc.sp());
        EXPECT(0x460e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8280));
        // CB E6 0210
        gbc.setState(0x5dd3, 0x5f7, 0x8830, 0xbdf8, 0x8146, 0x95f6, 0x0, 0x1);
        gbc.writeMem(0x5dd3, { 0xcb, 0xe6 });
        gbc.writeMem(0x95f6, { 0x92 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5f7, gbc.sp());
        EXPECT(0x5dd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x95f6));
        // CB E6 0212
        gbc.setState(0x201, 0xc65, 0x4ce0, 0xc972, 0xeec7, 0x979d, 0x1, 0x1);
        gbc.writeMem(0x201, { 0xcb, 0xe6 });
        gbc.writeMem(0x979d, { 0x3c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc65, gbc.sp());
        EXPECT(0x203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x979d));
        // CB E6 0213
        gbc.setState(0xe5d9, 0x4c54, 0x1cd0, 0x26b, 0x59bb, 0xb2a6, 0x0, 0x1);
        gbc.writeMem(0xb2a6, { 0x62 });
        gbc.writeMem(0xe5d9, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4c54, gbc.sp());
        EXPECT(0xe5db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xb2a6));
        EXPECT(0xcb, gbc.readMem(0xe5d9));
        EXPECT(0xe6, gbc.readMem(0xe5da));
        // CB E6 0216
        gbc.setState(0x5895, 0x9cb7, 0xdff0, 0x856d, 0xc814, 0xf97e, 0x1, 0x1);
        gbc.writeMem(0x5895, { 0xcb, 0xe6 });
        gbc.writeMem(0xf97e, { 0xb4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9cb7, gbc.sp());
        EXPECT(0x5897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xf97e));
        // CB E6 0217
        gbc.setState(0xb7b8, 0x81d5, 0xfc70, 0x9d65, 0x38a9, 0xea21, 0x0, 0x1);
        gbc.writeMem(0xb7b8, { 0xcb, 0xe6 });
        gbc.writeMem(0xea21, { 0x57 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x81d5, gbc.sp());
        EXPECT(0xb7ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b8));
        EXPECT(0xe6, gbc.readMem(0xb7b9));
        EXPECT(0x57, gbc.readMem(0xea21));
        // CB E6 0219
        gbc.setState(0x15f7, 0x94a9, 0xb410, 0xd62e, 0x5663, 0xfe20, 0x0, 0x0);
        gbc.writeMem(0x15f7, { 0xcb, 0xe6 });
        gbc.writeMem(0xfe20, { 0xba });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x94a9, gbc.sp());
        EXPECT(0x15f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xfe20));
        // CB E6 021A
        gbc.setState(0x9d7b, 0x7bd0, 0x9b30, 0x48bc, 0xcbdc, 0x851e, 0x0, 0x0);
        gbc.writeMem(0x851e, { 0x66 });
        gbc.writeMem(0x9d7b, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7bd0, gbc.sp());
        EXPECT(0x9d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x851e));
        EXPECT(0xcb, gbc.readMem(0x9d7b));
        EXPECT(0xe6, gbc.readMem(0x9d7c));
        // CB E6 021B
        gbc.setState(0xabd9, 0xe927, 0xed70, 0x2a97, 0xffac, 0x8dcc, 0x0, 0x1);
        gbc.writeMem(0x8dcc, { 0x4 });
        gbc.writeMem(0xabd9, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe927, gbc.sp());
        EXPECT(0xabdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8dcc));
        EXPECT(0xcb, gbc.readMem(0xabd9));
        EXPECT(0xe6, gbc.readMem(0xabda));
        // CB E6 021C
        gbc.setState(0x518c, 0xd178, 0xb020, 0xb2f9, 0xf120, 0x80af, 0x0, 0x0);
        gbc.writeMem(0x518c, { 0xcb, 0xe6 });
        gbc.writeMem(0x80af, { 0x1e });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd178, gbc.sp());
        EXPECT(0x518e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x80af));
        // CB E6 021D
        gbc.setState(0xe079, 0xbaa7, 0xc5e0, 0x5846, 0xe9d3, 0xd324, 0x1, 0x0);
        gbc.writeMem(0xd324, { 0xec });
        gbc.writeMem(0xe079, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbaa7, gbc.sp());
        EXPECT(0xe07b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xd324));
        EXPECT(0xcb, gbc.readMem(0xe079));
        EXPECT(0xe6, gbc.readMem(0xe07a));
        // CB E6 021E
        gbc.setState(0x9c66, 0xbf25, 0xcb10, 0x703b, 0x1a8a, 0x8248, 0x0, 0x0);
        gbc.writeMem(0x8248, { 0x4e });
        gbc.writeMem(0x9c66, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbf25, gbc.sp());
        EXPECT(0x9c68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8248));
        EXPECT(0xcb, gbc.readMem(0x9c66));
        EXPECT(0xe6, gbc.readMem(0x9c67));
        // CB E6 021F
        gbc.setState(0x3426, 0x8c70, 0xd950, 0xbf70, 0xba23, 0x4468, 0x0, 0x1);
        gbc.writeMem(0x3426, { 0xcb, 0xe6 });
        gbc.writeMem(0x4468, { 0x12 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8c70, gbc.sp());
        EXPECT(0x3428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0220
        gbc.setState(0x3032, 0xcd34, 0x7080, 0xa82c, 0x3d72, 0x9c32, 0x1, 0x0);
        gbc.writeMem(0x3032, { 0xcb, 0xe6 });
        gbc.writeMem(0x9c32, { 0x18 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xcd34, gbc.sp());
        EXPECT(0x3034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x9c32));
        // CB E6 0221
        gbc.setState(0x5ec6, 0x6d0e, 0xa1e0, 0xa6cb, 0x47e0, 0xfb53, 0x1, 0x0);
        gbc.writeMem(0x5ec6, { 0xcb, 0xe6 });
        gbc.writeMem(0xfb53, { 0xe3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6d0e, gbc.sp());
        EXPECT(0x5ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xfb53));
        // CB E6 0222
        gbc.setState(0xbc8a, 0x85cc, 0xf4c0, 0x9340, 0x216a, 0xe7e4, 0x1, 0x1);
        gbc.writeMem(0xbc8a, { 0xcb, 0xe6 });
        gbc.writeMem(0xe7e4, { 0xf6 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x85cc, gbc.sp());
        EXPECT(0xbc8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8a));
        EXPECT(0xe6, gbc.readMem(0xbc8b));
        EXPECT(0xf6, gbc.readMem(0xe7e4));
        // CB E6 0224
        gbc.setState(0xdc06, 0x4749, 0xe2e0, 0x1238, 0x5555, 0x85a7, 0x1, 0x0);
        gbc.writeMem(0x85a7, { 0xcf });
        gbc.writeMem(0xdc06, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4749, gbc.sp());
        EXPECT(0xdc08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x85a7));
        EXPECT(0xcb, gbc.readMem(0xdc06));
        EXPECT(0xe6, gbc.readMem(0xdc07));
        // CB E6 0225
        gbc.setState(0xb6b5, 0x2f4f, 0x28a0, 0x9856, 0xb0d1, 0x876e, 0x0, 0x0);
        gbc.writeMem(0x876e, { 0x24 });
        gbc.writeMem(0xb6b5, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2f4f, gbc.sp());
        EXPECT(0xb6b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x876e));
        EXPECT(0xcb, gbc.readMem(0xb6b5));
        EXPECT(0xe6, gbc.readMem(0xb6b6));
        // CB E6 0226
        gbc.setState(0xa9a1, 0xc400, 0xb330, 0xd1a5, 0xcbcd, 0x1736, 0x1, 0x0);
        gbc.writeMem(0x1736, { 0xdb });
        gbc.writeMem(0xa9a1, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc400, gbc.sp());
        EXPECT(0xa9a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9a1));
        EXPECT(0xe6, gbc.readMem(0xa9a2));
        // CB E6 0227
        gbc.setState(0x171a, 0xa372, 0xae40, 0xc76e, 0xeb43, 0x7a72, 0x0, 0x1);
        gbc.writeMem(0x171a, { 0xcb, 0xe6 });
        gbc.writeMem(0x7a72, { 0x54 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa372, gbc.sp());
        EXPECT(0x171c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0228
        gbc.setState(0x69f1, 0x66ef, 0x99c0, 0x2ec1, 0x1e3c, 0x7d3f, 0x1, 0x0);
        gbc.writeMem(0x69f1, { 0xcb, 0xe6 });
        gbc.writeMem(0x7d3f, { 0x7f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x66ef, gbc.sp());
        EXPECT(0x69f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0229
        gbc.setState(0x1f50, 0x68ac, 0x7760, 0x4c73, 0xf30d, 0xaa62, 0x1, 0x0);
        gbc.writeMem(0x1f50, { 0xcb, 0xe6 });
        gbc.writeMem(0xaa62, { 0x73 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x68ac, gbc.sp());
        EXPECT(0x1f52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xaa62));
        // CB E6 022A
        gbc.setState(0x425c, 0x8566, 0x52a0, 0xc25c, 0x61ba, 0xe0ad, 0x0, 0x0);
        gbc.writeMem(0x425c, { 0xcb, 0xe6 });
        gbc.writeMem(0xe0ad, { 0x4c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8566, gbc.sp());
        EXPECT(0x425e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xe0ad));
        // CB E6 022C
        gbc.setState(0x151e, 0xdb0f, 0x29d0, 0xef8, 0xa1f4, 0x162a, 0x0, 0x0);
        gbc.writeMem(0x151e, { 0xcb, 0xe6 });
        gbc.writeMem(0x162a, { 0xd8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xdb0f, gbc.sp());
        EXPECT(0x1520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 022D
        gbc.setState(0x747f, 0x7059, 0xbe50, 0x835b, 0x2a4b, 0xcc8a, 0x1, 0x0);
        gbc.writeMem(0x747f, { 0xcb, 0xe6 });
        gbc.writeMem(0xcc8a, { 0x2a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7059, gbc.sp());
        EXPECT(0x7481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xcc8a));
        // CB E6 022E
        gbc.setState(0x7119, 0xbe7b, 0xb860, 0xe147, 0x31b3, 0x34ff, 0x0, 0x0);
        gbc.writeMem(0x34ff, { 0xda });
        gbc.writeMem(0x7119, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbe7b, gbc.sp());
        EXPECT(0x711b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0230
        gbc.setState(0x304e, 0x3e54, 0xb610, 0xe21c, 0x1015, 0xe8e9, 0x0, 0x0);
        gbc.writeMem(0x304e, { 0xcb, 0xe6 });
        gbc.writeMem(0xe8e9, { 0x56 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3e54, gbc.sp());
        EXPECT(0x3050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xe8e9));
        // CB E6 0231
        gbc.setState(0xd52, 0x1ece, 0xf680, 0xf36, 0x4620, 0x9c7e, 0x1, 0x0);
        gbc.writeMem(0xd52, { 0xcb, 0xe6 });
        gbc.writeMem(0x9c7e, { 0x3e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1ece, gbc.sp());
        EXPECT(0xd54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9c7e));
        // CB E6 0233
        gbc.setState(0xb1cd, 0x63fe, 0x2e90, 0x569d, 0x8a4d, 0x9338, 0x1, 0x0);
        gbc.writeMem(0x9338, { 0x16 });
        gbc.writeMem(0xb1cd, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x63fe, gbc.sp());
        EXPECT(0xb1cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9338));
        EXPECT(0xcb, gbc.readMem(0xb1cd));
        EXPECT(0xe6, gbc.readMem(0xb1ce));
        // CB E6 0234
        gbc.setState(0x2761, 0xa926, 0x3bf0, 0x19f6, 0xb805, 0x7e95, 0x0, 0x1);
        gbc.writeMem(0x2761, { 0xcb, 0xe6 });
        gbc.writeMem(0x7e95, { 0x76 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa926, gbc.sp());
        EXPECT(0x2763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0235
        gbc.setState(0xc00a, 0x323c, 0x3760, 0xc424, 0x6b00, 0xc9a7, 0x0, 0x1);
        gbc.writeMem(0xc00a, { 0xcb, 0xe6 });
        gbc.writeMem(0xc9a7, { 0xbc });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x323c, gbc.sp());
        EXPECT(0xc00c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc00a));
        EXPECT(0xe6, gbc.readMem(0xc00b));
        EXPECT(0xbc, gbc.readMem(0xc9a7));
        // CB E6 0236
        gbc.setState(0x9c7c, 0xb358, 0x1490, 0xfeb0, 0x39c3, 0x9057, 0x0, 0x1);
        gbc.writeMem(0x9057, { 0x79 });
        gbc.writeMem(0x9c7c, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb358, gbc.sp());
        EXPECT(0x9c7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9057));
        EXPECT(0xcb, gbc.readMem(0x9c7c));
        EXPECT(0xe6, gbc.readMem(0x9c7d));
        // CB E6 0237
        gbc.setState(0x7af9, 0x3442, 0xe590, 0x55e4, 0x561d, 0xcf05, 0x1, 0x1);
        gbc.writeMem(0x7af9, { 0xcb, 0xe6 });
        gbc.writeMem(0xcf05, { 0xe9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3442, gbc.sp());
        EXPECT(0x7afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xcf05));
        // CB E6 0238
        gbc.setState(0x49fd, 0xe385, 0xd5c0, 0x3c09, 0x1bfe, 0xc71d, 0x1, 0x0);
        gbc.writeMem(0x49fd, { 0xcb, 0xe6 });
        gbc.writeMem(0xc71d, { 0x54 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe385, gbc.sp());
        EXPECT(0x49ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xc71d));
        // CB E6 023A
        gbc.setState(0xc21a, 0x365c, 0x5ff0, 0x5b67, 0x4611, 0x9652, 0x0, 0x1);
        gbc.writeMem(0x9652, { 0x59 });
        gbc.writeMem(0xc21a, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x365c, gbc.sp());
        EXPECT(0xc21c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x9652));
        EXPECT(0xcb, gbc.readMem(0xc21a));
        EXPECT(0xe6, gbc.readMem(0xc21b));
        // CB E6 023B
        gbc.setState(0x916a, 0xca20, 0xbd50, 0xe2bb, 0xb69d, 0x1aea, 0x0, 0x0);
        gbc.writeMem(0x1aea, { 0x1e });
        gbc.writeMem(0x916a, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xca20, gbc.sp());
        EXPECT(0x916c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x916a));
        EXPECT(0xe6, gbc.readMem(0x916b));
        // CB E6 023C
        gbc.setState(0x214e, 0x20c4, 0x49b0, 0x356d, 0x44e1, 0xc535, 0x0, 0x1);
        gbc.writeMem(0x214e, { 0xcb, 0xe6 });
        gbc.writeMem(0xc535, { 0xa3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x20c4, gbc.sp());
        EXPECT(0x2150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc535));
        // CB E6 023E
        gbc.setState(0x231, 0x8874, 0xa2b0, 0x8722, 0x2431, 0x1ad3, 0x0, 0x1);
        gbc.writeMem(0x231, { 0xcb, 0xe6 });
        gbc.writeMem(0x1ad3, { 0xb6 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8874, gbc.sp());
        EXPECT(0x233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0240
        gbc.setState(0xe0b2, 0xb999, 0x7b30, 0xd43c, 0x83e6, 0x3fd9, 0x0, 0x1);
        gbc.writeMem(0x3fd9, { 0xb9 });
        gbc.writeMem(0xe0b2, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb999, gbc.sp());
        EXPECT(0xe0b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b2));
        EXPECT(0xe6, gbc.readMem(0xe0b3));
        // CB E6 0241
        gbc.setState(0x994, 0x1ade, 0x7f40, 0x90d6, 0x69b4, 0x6317, 0x1, 0x1);
        gbc.writeMem(0x994, { 0xcb, 0xe6 });
        gbc.writeMem(0x6317, { 0x5d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1ade, gbc.sp());
        EXPECT(0x996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0243
        gbc.setState(0x4421, 0x8d18, 0xf8d0, 0x84c9, 0xd017, 0x60bf, 0x0, 0x0);
        gbc.writeMem(0x4421, { 0xcb, 0xe6 });
        gbc.writeMem(0x60bf, { 0x95 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8d18, gbc.sp());
        EXPECT(0x4423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0244
        gbc.setState(0xa2be, 0xf10c, 0x1b20, 0xb442, 0x75d8, 0xeff8, 0x0, 0x0);
        gbc.writeMem(0xa2be, { 0xcb, 0xe6 });
        gbc.writeMem(0xeff8, { 0x3d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf10c, gbc.sp());
        EXPECT(0xa2c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2be));
        EXPECT(0xe6, gbc.readMem(0xa2bf));
        EXPECT(0x3d, gbc.readMem(0xeff8));
        // CB E6 0245
        gbc.setState(0xcae8, 0xa798, 0xa930, 0x131f, 0x33c5, 0x4719, 0x1, 0x0);
        gbc.writeMem(0x4719, { 0xbb });
        gbc.writeMem(0xcae8, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa798, gbc.sp());
        EXPECT(0xcaea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae8));
        EXPECT(0xe6, gbc.readMem(0xcae9));
        // CB E6 0246
        gbc.setState(0xe9a0, 0xabd3, 0xca70, 0x42a8, 0x3027, 0x3ec, 0x0, 0x1);
        gbc.writeMem(0x3ec, { 0x52 });
        gbc.writeMem(0xe9a0, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xabd3, gbc.sp());
        EXPECT(0xe9a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9a0));
        EXPECT(0xe6, gbc.readMem(0xe9a1));
        // CB E6 0249
        gbc.setState(0x62b1, 0x4a27, 0x2ca0, 0xf4c7, 0xf3f9, 0x4da5, 0x1, 0x1);
        gbc.writeMem(0x4da5, { 0x55 });
        gbc.writeMem(0x62b1, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4a27, gbc.sp());
        EXPECT(0x62b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 024A
        gbc.setState(0xefc4, 0x4aca, 0x9140, 0x5dd1, 0xbfa3, 0x566f, 0x1, 0x1);
        gbc.writeMem(0x566f, { 0xf8 });
        gbc.writeMem(0xefc4, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4aca, gbc.sp());
        EXPECT(0xefc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc4));
        EXPECT(0xe6, gbc.readMem(0xefc5));
        // CB E6 024B
        gbc.setState(0xe988, 0xc3ba, 0xac60, 0x43d8, 0x756a, 0xb874, 0x0, 0x1);
        gbc.writeMem(0xb874, { 0x28 });
        gbc.writeMem(0xe988, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc3ba, gbc.sp());
        EXPECT(0xe98a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb874));
        EXPECT(0xcb, gbc.readMem(0xe988));
        EXPECT(0xe6, gbc.readMem(0xe989));
        // CB E6 024C
        gbc.setState(0xad34, 0x8a48, 0x7ec0, 0xfbd9, 0x9eb0, 0xc631, 0x1, 0x0);
        gbc.writeMem(0xad34, { 0xcb, 0xe6 });
        gbc.writeMem(0xc631, { 0x64 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8a48, gbc.sp());
        EXPECT(0xad36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad34));
        EXPECT(0xe6, gbc.readMem(0xad35));
        EXPECT(0x74, gbc.readMem(0xc631));
        // CB E6 024F
        gbc.setState(0xe7f3, 0x6fa9, 0x22f0, 0xf08f, 0xc845, 0xb8db, 0x0, 0x0);
        gbc.writeMem(0xb8db, { 0xef });
        gbc.writeMem(0xe7f3, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6fa9, gbc.sp());
        EXPECT(0xe7f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xb8db));
        EXPECT(0xcb, gbc.readMem(0xe7f3));
        EXPECT(0xe6, gbc.readMem(0xe7f4));
        // CB E6 0250
        gbc.setState(0x22e, 0xddac, 0x11e0, 0x98ab, 0xbb6, 0x6123, 0x0, 0x1);
        gbc.writeMem(0x22e, { 0xcb, 0xe6 });
        gbc.writeMem(0x6123, { 0x52 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xddac, gbc.sp());
        EXPECT(0x230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0251
        gbc.setState(0x6f4e, 0xef7, 0x5310, 0xc834, 0x30c2, 0x940b, 0x0, 0x0);
        gbc.writeMem(0x6f4e, { 0xcb, 0xe6 });
        gbc.writeMem(0x940b, { 0x67 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xef7, gbc.sp());
        EXPECT(0x6f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x940b));
        // CB E6 0252
        gbc.setState(0x7a9a, 0x589a, 0x3ce0, 0xbb90, 0x856c, 0xdab3, 0x1, 0x1);
        gbc.writeMem(0x7a9a, { 0xcb, 0xe6 });
        gbc.writeMem(0xdab3, { 0xe2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x589a, gbc.sp());
        EXPECT(0x7a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xdab3));
        // CB E6 0253
        gbc.setState(0x9f1, 0x2ca2, 0xd3a0, 0xe6fc, 0x35df, 0xce36, 0x0, 0x1);
        gbc.writeMem(0x9f1, { 0xcb, 0xe6 });
        gbc.writeMem(0xce36, { 0xd6 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2ca2, gbc.sp());
        EXPECT(0x9f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xce36));
        // CB E6 0254
        gbc.setState(0x2eea, 0xd4f2, 0x8170, 0x4a95, 0x528e, 0x9205, 0x1, 0x0);
        gbc.writeMem(0x2eea, { 0xcb, 0xe6 });
        gbc.writeMem(0x9205, { 0x6e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd4f2, gbc.sp());
        EXPECT(0x2eec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9205));
        // CB E6 0255
        gbc.setState(0xc50d, 0x4663, 0xad0, 0xe767, 0xf01f, 0xf2c7, 0x1, 0x1);
        gbc.writeMem(0xc50d, { 0xcb, 0xe6 });
        gbc.writeMem(0xf2c7, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4663, gbc.sp());
        EXPECT(0xc50f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc50d));
        EXPECT(0xe6, gbc.readMem(0xc50e));
        EXPECT(0x10, gbc.readMem(0xf2c7));
        // CB E6 0256
        gbc.setState(0x8a4b, 0x410d, 0xaf10, 0xcb34, 0x8006, 0x4d3f, 0x0, 0x0);
        gbc.writeMem(0x4d3f, { 0x9c });
        gbc.writeMem(0x8a4b, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x410d, gbc.sp());
        EXPECT(0x8a4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a4b));
        EXPECT(0xe6, gbc.readMem(0x8a4c));
        // CB E6 0258
        gbc.setState(0xcfc0, 0x1bab, 0xa1c0, 0xf379, 0x9048, 0x73ea, 0x0, 0x0);
        gbc.writeMem(0x73ea, { 0xfc });
        gbc.writeMem(0xcfc0, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1bab, gbc.sp());
        EXPECT(0xcfc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfc0));
        EXPECT(0xe6, gbc.readMem(0xcfc1));
        // CB E6 0259
        gbc.setState(0x4434, 0x4f9c, 0xb8a0, 0x9b43, 0xa29b, 0x68b4, 0x0, 0x1);
        gbc.writeMem(0x4434, { 0xcb, 0xe6 });
        gbc.writeMem(0x68b4, { 0xd5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4f9c, gbc.sp());
        EXPECT(0x4436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 025A
        gbc.setState(0x9bf0, 0x40ee, 0x73a0, 0xd8c8, 0x4a31, 0xa723, 0x1, 0x0);
        gbc.writeMem(0x9bf0, { 0xcb, 0xe6 });
        gbc.writeMem(0xa723, { 0xb2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x40ee, gbc.sp());
        EXPECT(0x9bf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf0));
        EXPECT(0xe6, gbc.readMem(0x9bf1));
        EXPECT(0xb2, gbc.readMem(0xa723));
        // CB E6 025B
        gbc.setState(0x1e3e, 0x4bf8, 0xf540, 0x828c, 0xa15b, 0xe434, 0x1, 0x1);
        gbc.writeMem(0x1e3e, { 0xcb, 0xe6 });
        gbc.writeMem(0xe434, { 0x1b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4bf8, gbc.sp());
        EXPECT(0x1e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xe434));
        // CB E6 025C
        gbc.setState(0x61da, 0x4102, 0xeec0, 0xc63c, 0xd40f, 0xfe81, 0x0, 0x1);
        gbc.writeMem(0x61da, { 0xcb, 0xe6 });
        gbc.writeMem(0xfe81, { 0x86 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4102, gbc.sp());
        EXPECT(0x61dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xfe81));
        // CB E6 025D
        gbc.setState(0xc6ec, 0x13fc, 0xcfa0, 0x9704, 0xd445, 0x5f68, 0x1, 0x0);
        gbc.writeMem(0x5f68, { 0xd1 });
        gbc.writeMem(0xc6ec, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x13fc, gbc.sp());
        EXPECT(0xc6ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ec));
        EXPECT(0xe6, gbc.readMem(0xc6ed));
        // CB E6 025E
        gbc.setState(0xcbff, 0xd195, 0x2e00, 0x1d44, 0x4006, 0xe67b, 0x0, 0x0);
        gbc.writeMem(0xcbff, { 0xcb, 0xe6 });
        gbc.writeMem(0xe67b, { 0xd4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd195, gbc.sp());
        EXPECT(0xcc01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbff));
        EXPECT(0xe6, gbc.readMem(0xcc00));
        EXPECT(0xd4, gbc.readMem(0xe67b));
        // CB E6 025F
        gbc.setState(0xe0a1, 0x36e8, 0xb10, 0x5880, 0xce1d, 0x6de0, 0x1, 0x1);
        gbc.writeMem(0x6de0, { 0x94 });
        gbc.writeMem(0xe0a1, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x36e8, gbc.sp());
        EXPECT(0xe0a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a1));
        EXPECT(0xe6, gbc.readMem(0xe0a2));
        // CB E6 0262
        gbc.setState(0x1c89, 0x1c04, 0x5ec0, 0x55f, 0x4971, 0x4bb3, 0x0, 0x1);
        gbc.writeMem(0x1c89, { 0xcb, 0xe6 });
        gbc.writeMem(0x4bb3, { 0x7b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1c04, gbc.sp());
        EXPECT(0x1c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0264
        gbc.setState(0x4941, 0x17a, 0xfce0, 0x344, 0xcbb9, 0x8de2, 0x0, 0x1);
        gbc.writeMem(0x4941, { 0xcb, 0xe6 });
        gbc.writeMem(0x8de2, { 0x2a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x17a, gbc.sp());
        EXPECT(0x4943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x8de2));
        // CB E6 0265
        gbc.setState(0xb9ef, 0x7966, 0xc240, 0xb7bb, 0xdb3, 0x175d, 0x1, 0x0);
        gbc.writeMem(0x175d, { 0xf1 });
        gbc.writeMem(0xb9ef, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7966, gbc.sp());
        EXPECT(0xb9f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9ef));
        EXPECT(0xe6, gbc.readMem(0xb9f0));
        // CB E6 0266
        gbc.setState(0x992b, 0xa09e, 0xcec0, 0x8e19, 0xa7ba, 0xb4e9, 0x0, 0x1);
        gbc.writeMem(0x992b, { 0xcb, 0xe6 });
        gbc.writeMem(0xb4e9, { 0x89 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa09e, gbc.sp());
        EXPECT(0x992d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x992b));
        EXPECT(0xe6, gbc.readMem(0x992c));
        EXPECT(0x99, gbc.readMem(0xb4e9));
        // CB E6 026A
        gbc.setState(0xe0ba, 0x670f, 0x62c0, 0xbf62, 0x44f3, 0x9fd0, 0x1, 0x1);
        gbc.writeMem(0x9fd0, { 0xfe });
        gbc.writeMem(0xe0ba, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x670f, gbc.sp());
        EXPECT(0xe0bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9fd0));
        EXPECT(0xcb, gbc.readMem(0xe0ba));
        EXPECT(0xe6, gbc.readMem(0xe0bb));
        // CB E6 026B
        gbc.setState(0xbb38, 0xcab2, 0x1ee0, 0xe407, 0x9769, 0x523a, 0x0, 0x1);
        gbc.writeMem(0x523a, { 0xde });
        gbc.writeMem(0xbb38, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcab2, gbc.sp());
        EXPECT(0xbb3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb38));
        EXPECT(0xe6, gbc.readMem(0xbb39));
        // CB E6 026D
        gbc.setState(0x80f5, 0xb244, 0x9940, 0xf69, 0x8293, 0x9caf, 0x1, 0x0);
        gbc.writeMem(0x80f5, { 0xcb, 0xe6 });
        gbc.writeMem(0x9caf, { 0xa3 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb244, gbc.sp());
        EXPECT(0x80f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80f5));
        EXPECT(0xe6, gbc.readMem(0x80f6));
        EXPECT(0xb3, gbc.readMem(0x9caf));
        // CB E6 026E
        gbc.setState(0xd22d, 0xa7b9, 0x27b0, 0x4a30, 0xfb41, 0x732e, 0x0, 0x1);
        gbc.writeMem(0x732e, { 0xd2 });
        gbc.writeMem(0xd22d, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa7b9, gbc.sp());
        EXPECT(0xd22f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd22d));
        EXPECT(0xe6, gbc.readMem(0xd22e));
        // CB E6 026F
        gbc.setState(0xade7, 0xadb7, 0x79a0, 0x2b78, 0x1a5d, 0xbab9, 0x0, 0x0);
        gbc.writeMem(0xade7, { 0xcb, 0xe6 });
        gbc.writeMem(0xbab9, { 0x54 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xadb7, gbc.sp());
        EXPECT(0xade9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xade7));
        EXPECT(0xe6, gbc.readMem(0xade8));
        EXPECT(0x54, gbc.readMem(0xbab9));
        // CB E6 0271
        gbc.setState(0x5ed, 0x3e0b, 0xd620, 0xc2f5, 0x688, 0xdccf, 0x0, 0x1);
        gbc.writeMem(0x5ed, { 0xcb, 0xe6 });
        gbc.writeMem(0xdccf, { 0x5a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3e0b, gbc.sp());
        EXPECT(0x5ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xdccf));
        // CB E6 0272
        gbc.setState(0x544c, 0x6d04, 0x93e0, 0x2b32, 0x8139, 0xfdf3, 0x0, 0x0);
        gbc.writeMem(0x544c, { 0xcb, 0xe6 });
        gbc.writeMem(0xfdf3, { 0xa6 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6d04, gbc.sp());
        EXPECT(0x544e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xfdf3));
        // CB E6 0273
        gbc.setState(0x69d6, 0x42fb, 0x4630, 0x1579, 0x6ea2, 0xa76d, 0x0, 0x1);
        gbc.writeMem(0x69d6, { 0xcb, 0xe6 });
        gbc.writeMem(0xa76d, { 0x2c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x42fb, gbc.sp());
        EXPECT(0x69d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa76d));
        // CB E6 0274
        gbc.setState(0x6799, 0x2f81, 0x62e0, 0xd059, 0xdd62, 0xafd3, 0x1, 0x1);
        gbc.writeMem(0x6799, { 0xcb, 0xe6 });
        gbc.writeMem(0xafd3, { 0xb2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2f81, gbc.sp());
        EXPECT(0x679b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xafd3));
        // CB E6 0276
        gbc.setState(0x7866, 0x3a7d, 0x1c70, 0xcd7c, 0xbc7e, 0x22a1, 0x0, 0x0);
        gbc.writeMem(0x22a1, { 0x74 });
        gbc.writeMem(0x7866, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3a7d, gbc.sp());
        EXPECT(0x7868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0277
        gbc.setState(0x3c4, 0x7c06, 0x3da0, 0xf0ae, 0xfdc, 0x46e2, 0x1, 0x1);
        gbc.writeMem(0x3c4, { 0xcb, 0xe6 });
        gbc.writeMem(0x46e2, { 0xfa });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7c06, gbc.sp());
        EXPECT(0x3c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0279
        gbc.setState(0x8d45, 0xa562, 0xc400, 0xc03d, 0x348c, 0x4bfc, 0x0, 0x1);
        gbc.writeMem(0x4bfc, { 0xb5 });
        gbc.writeMem(0x8d45, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa562, gbc.sp());
        EXPECT(0x8d47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d45));
        EXPECT(0xe6, gbc.readMem(0x8d46));
        // CB E6 027A
        gbc.setState(0x8e76, 0x1126, 0x7d60, 0xa9cb, 0xf9e1, 0x871c, 0x1, 0x1);
        gbc.writeMem(0x871c, { 0x69 });
        gbc.writeMem(0x8e76, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1126, gbc.sp());
        EXPECT(0x8e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x871c));
        EXPECT(0xcb, gbc.readMem(0x8e76));
        EXPECT(0xe6, gbc.readMem(0x8e77));
        // CB E6 027B
        gbc.setState(0x8ebb, 0xf0b7, 0xe9c0, 0x6c92, 0x42ea, 0xf69b, 0x0, 0x1);
        gbc.writeMem(0x8ebb, { 0xcb, 0xe6 });
        gbc.writeMem(0xf69b, { 0x31 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf0b7, gbc.sp());
        EXPECT(0x8ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ebb));
        EXPECT(0xe6, gbc.readMem(0x8ebc));
        EXPECT(0x31, gbc.readMem(0xf69b));
        // CB E6 027C
        gbc.setState(0x1197, 0xf5e7, 0x3f70, 0x343e, 0x8966, 0xf4fe, 0x0, 0x1);
        gbc.writeMem(0x1197, { 0xcb, 0xe6 });
        gbc.writeMem(0xf4fe, { 0x30 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf5e7, gbc.sp());
        EXPECT(0x1199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xf4fe));
        // CB E6 027D
        gbc.setState(0x69ee, 0x9566, 0x2a30, 0xb2a, 0x306a, 0xd417, 0x0, 0x1);
        gbc.writeMem(0x69ee, { 0xcb, 0xe6 });
        gbc.writeMem(0xd417, { 0xa });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9566, gbc.sp());
        EXPECT(0x69f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd417));
        // CB E6 027E
        gbc.setState(0xb007, 0x2bf4, 0x2f40, 0xc9d8, 0x20c6, 0x8073, 0x0, 0x0);
        gbc.writeMem(0x8073, { 0x5c });
        gbc.writeMem(0xb007, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2bf4, gbc.sp());
        EXPECT(0xb009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x8073));
        EXPECT(0xcb, gbc.readMem(0xb007));
        EXPECT(0xe6, gbc.readMem(0xb008));
        // CB E6 027F
        gbc.setState(0x7ca, 0xa993, 0x8890, 0x35da, 0x21be, 0xe6a5, 0x0, 0x1);
        gbc.writeMem(0x7ca, { 0xcb, 0xe6 });
        gbc.writeMem(0xe6a5, { 0xff });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa993, gbc.sp());
        EXPECT(0x7cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xe6a5));
        // CB E6 0281
        gbc.setState(0xdafe, 0x2f86, 0xa7b0, 0x17f2, 0x9ee2, 0x9dda, 0x0, 0x0);
        gbc.writeMem(0x9dda, { 0x1c });
        gbc.writeMem(0xdafe, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2f86, gbc.sp());
        EXPECT(0xdb00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x9dda));
        EXPECT(0xcb, gbc.readMem(0xdafe));
        EXPECT(0xe6, gbc.readMem(0xdaff));
        // CB E6 0282
        gbc.setState(0x21b5, 0xcb21, 0x7190, 0x3b65, 0xe385, 0x6f4f, 0x0, 0x1);
        gbc.writeMem(0x21b5, { 0xcb, 0xe6 });
        gbc.writeMem(0x6f4f, { 0x52 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcb21, gbc.sp());
        EXPECT(0x21b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0283
        gbc.setState(0x66b3, 0x4468, 0x8d0, 0xbbcd, 0x3d68, 0x8832, 0x0, 0x1);
        gbc.writeMem(0x66b3, { 0xcb, 0xe6 });
        gbc.writeMem(0x8832, { 0x5a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4468, gbc.sp());
        EXPECT(0x66b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x8832));
        // CB E6 0284
        gbc.setState(0xe57e, 0x5bcf, 0x24b0, 0xd3c3, 0xc39e, 0xf707, 0x0, 0x0);
        gbc.writeMem(0xe57e, { 0xcb, 0xe6 });
        gbc.writeMem(0xf707, { 0xc5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5bcf, gbc.sp());
        EXPECT(0xe580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe57e));
        EXPECT(0xe6, gbc.readMem(0xe57f));
        EXPECT(0xd5, gbc.readMem(0xf707));
        // CB E6 0285
        gbc.setState(0x32c2, 0x2768, 0xc40, 0x9c14, 0x8517, 0x6bb9, 0x0, 0x1);
        gbc.writeMem(0x32c2, { 0xcb, 0xe6 });
        gbc.writeMem(0x6bb9, { 0x14 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2768, gbc.sp());
        EXPECT(0x32c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0286
        gbc.setState(0x8f6d, 0x30bc, 0x6090, 0x2ecb, 0xb5db, 0x15c0, 0x1, 0x1);
        gbc.writeMem(0x15c0, { 0xf8 });
        gbc.writeMem(0x8f6d, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x30bc, gbc.sp());
        EXPECT(0x8f6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f6d));
        EXPECT(0xe6, gbc.readMem(0x8f6e));
        // CB E6 0287
        gbc.setState(0x1394, 0x32f9, 0x8bb0, 0x8db4, 0x5777, 0xc042, 0x0, 0x0);
        gbc.writeMem(0x1394, { 0xcb, 0xe6 });
        gbc.writeMem(0xc042, { 0xb7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x32f9, gbc.sp());
        EXPECT(0x1396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc042));
        // CB E6 0289
        gbc.setState(0xa74f, 0x8bcc, 0x12c0, 0xdd2f, 0x931f, 0xf3c8, 0x0, 0x1);
        gbc.writeMem(0xa74f, { 0xcb, 0xe6 });
        gbc.writeMem(0xf3c8, { 0x7c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8bcc, gbc.sp());
        EXPECT(0xa751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa74f));
        EXPECT(0xe6, gbc.readMem(0xa750));
        EXPECT(0x7c, gbc.readMem(0xf3c8));
        // CB E6 028B
        gbc.setState(0xb939, 0x31f1, 0x2890, 0xd924, 0x679f, 0x27cd, 0x0, 0x0);
        gbc.writeMem(0x27cd, { 0xf0 });
        gbc.writeMem(0xb939, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x31f1, gbc.sp());
        EXPECT(0xb93b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb939));
        EXPECT(0xe6, gbc.readMem(0xb93a));
        // CB E6 028C
        gbc.setState(0x71e7, 0x2f42, 0x6ac0, 0xe627, 0xa01d, 0x17a3, 0x1, 0x0);
        gbc.writeMem(0x17a3, { 0x73 });
        gbc.writeMem(0x71e7, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2f42, gbc.sp());
        EXPECT(0x71e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 028E
        gbc.setState(0x4e4b, 0xc327, 0xecc0, 0x3ecd, 0x4405, 0x58ec, 0x1, 0x1);
        gbc.writeMem(0x4e4b, { 0xcb, 0xe6 });
        gbc.writeMem(0x58ec, { 0x10 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc327, gbc.sp());
        EXPECT(0x4e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 028F
        gbc.setState(0x9ce3, 0x577c, 0xe150, 0x3ca1, 0xd8fa, 0x4b09, 0x1, 0x1);
        gbc.writeMem(0x4b09, { 0xfd });
        gbc.writeMem(0x9ce3, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x577c, gbc.sp());
        EXPECT(0x9ce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ce3));
        EXPECT(0xe6, gbc.readMem(0x9ce4));
        // CB E6 0290
        gbc.setState(0x3324, 0x2435, 0x1db0, 0xb4e, 0xa386, 0x46fe, 0x1, 0x1);
        gbc.writeMem(0x3324, { 0xcb, 0xe6 });
        gbc.writeMem(0x46fe, { 0x35 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2435, gbc.sp());
        EXPECT(0x3326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0291
        gbc.setState(0x8edc, 0x24a3, 0xe180, 0xc8ca, 0x44ee, 0xd7e9, 0x0, 0x1);
        gbc.writeMem(0x8edc, { 0xcb, 0xe6 });
        gbc.writeMem(0xd7e9, { 0x8d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x24a3, gbc.sp());
        EXPECT(0x8ede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8edc));
        EXPECT(0xe6, gbc.readMem(0x8edd));
        EXPECT(0x9d, gbc.readMem(0xd7e9));
        // CB E6 0292
        gbc.setState(0x1957, 0xa6dc, 0x4990, 0x821d, 0x9323, 0xaf07, 0x1, 0x0);
        gbc.writeMem(0x1957, { 0xcb, 0xe6 });
        gbc.writeMem(0xaf07, { 0x5e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa6dc, gbc.sp());
        EXPECT(0x1959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xaf07));
        // CB E6 0293
        gbc.setState(0x5976, 0x4559, 0x6d90, 0x9bab, 0x333b, 0x11de, 0x0, 0x1);
        gbc.writeMem(0x11de, { 0xb0 });
        gbc.writeMem(0x5976, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4559, gbc.sp());
        EXPECT(0x5978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0295
        gbc.setState(0xecee, 0xe320, 0xab0, 0x2d92, 0x3fbe, 0x436e, 0x0, 0x1);
        gbc.writeMem(0x436e, { 0xbf });
        gbc.writeMem(0xecee, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe320, gbc.sp());
        EXPECT(0xecf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecee));
        EXPECT(0xe6, gbc.readMem(0xecef));
        // CB E6 0296
        gbc.setState(0xd86d, 0x97dc, 0x6b10, 0xca9f, 0xe2b9, 0x84bb, 0x1, 0x0);
        gbc.writeMem(0x84bb, { 0x87 });
        gbc.writeMem(0xd86d, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x97dc, gbc.sp());
        EXPECT(0xd86f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x84bb));
        EXPECT(0xcb, gbc.readMem(0xd86d));
        EXPECT(0xe6, gbc.readMem(0xd86e));
        // CB E6 0298
        gbc.setState(0xb2c3, 0x1fb0, 0xc2b0, 0xf363, 0x6cc, 0x7457, 0x0, 0x0);
        gbc.writeMem(0x7457, { 0x31 });
        gbc.writeMem(0xb2c3, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1fb0, gbc.sp());
        EXPECT(0xb2c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2c3));
        EXPECT(0xe6, gbc.readMem(0xb2c4));
        // CB E6 029A
        gbc.setState(0x5e89, 0x1e2d, 0xa340, 0xb35f, 0x88b2, 0x2f77, 0x1, 0x0);
        gbc.writeMem(0x2f77, { 0x39 });
        gbc.writeMem(0x5e89, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1e2d, gbc.sp());
        EXPECT(0x5e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 029B
        gbc.setState(0x4218, 0x56ed, 0x2230, 0x7455, 0x3443, 0x3eb7, 0x1, 0x1);
        gbc.writeMem(0x3eb7, { 0xb2 });
        gbc.writeMem(0x4218, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x56ed, gbc.sp());
        EXPECT(0x421a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 029C
        gbc.setState(0x183a, 0x3567, 0x43c0, 0xb0b8, 0xca47, 0x3985, 0x1, 0x1);
        gbc.writeMem(0x183a, { 0xcb, 0xe6 });
        gbc.writeMem(0x3985, { 0xff });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3567, gbc.sp());
        EXPECT(0x183c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 029D
        gbc.setState(0x2335, 0x955d, 0x2fa0, 0x3f47, 0x5510, 0x7a, 0x0, 0x1);
        gbc.writeMem(0x7a, { 0x5e });
        gbc.writeMem(0x2335, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x955d, gbc.sp());
        EXPECT(0x2337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 029E
        gbc.setState(0x7ab, 0x6b63, 0x61b0, 0x5c88, 0xd490, 0xefb4, 0x1, 0x0);
        gbc.writeMem(0x7ab, { 0xcb, 0xe6 });
        gbc.writeMem(0xefb4, { 0xaa });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6b63, gbc.sp());
        EXPECT(0x7ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xefb4));
        // CB E6 029F
        gbc.setState(0x3162, 0x5dcb, 0x1e20, 0x387f, 0xe8f9, 0xaa77, 0x1, 0x0);
        gbc.writeMem(0x3162, { 0xcb, 0xe6 });
        gbc.writeMem(0xaa77, { 0x70 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5dcb, gbc.sp());
        EXPECT(0x3164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xaa77));
        // CB E6 02A1
        gbc.setState(0x38ef, 0x9ac6, 0xcaa0, 0x6c0d, 0x4f6e, 0x256c, 0x0, 0x1);
        gbc.writeMem(0x256c, { 0x3a });
        gbc.writeMem(0x38ef, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9ac6, gbc.sp());
        EXPECT(0x38f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 02A4
        gbc.setState(0x711e, 0x2cbb, 0x93d0, 0x4a49, 0x24b1, 0x2eb, 0x1, 0x1);
        gbc.writeMem(0x2eb, { 0xf5 });
        gbc.writeMem(0x711e, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2cbb, gbc.sp());
        EXPECT(0x7120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 02A7
        gbc.setState(0x3c81, 0x88d0, 0x22a0, 0x1553, 0xb274, 0xd7b5, 0x0, 0x1);
        gbc.writeMem(0x3c81, { 0xcb, 0xe6 });
        gbc.writeMem(0xd7b5, { 0x8d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x88d0, gbc.sp());
        EXPECT(0x3c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd7b5));
        // CB E6 02A9
        gbc.setState(0xa417, 0x149e, 0x88a0, 0xb7fe, 0x8c35, 0x869f, 0x1, 0x1);
        gbc.writeMem(0x869f, { 0x49 });
        gbc.writeMem(0xa417, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x149e, gbc.sp());
        EXPECT(0xa419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x869f));
        EXPECT(0xcb, gbc.readMem(0xa417));
        EXPECT(0xe6, gbc.readMem(0xa418));
        // CB E6 02AB
        gbc.setState(0x6cb8, 0xe07, 0x40e0, 0x80fb, 0xa1, 0x81b3, 0x0, 0x0);
        gbc.writeMem(0x6cb8, { 0xcb, 0xe6 });
        gbc.writeMem(0x81b3, { 0x96 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe07, gbc.sp());
        EXPECT(0x6cba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x81b3));
        // CB E6 02AC
        gbc.setState(0xe0b6, 0x5c93, 0xeda0, 0x6cc, 0x364e, 0x2cb7, 0x0, 0x0);
        gbc.writeMem(0x2cb7, { 0x9f });
        gbc.writeMem(0xe0b6, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5c93, gbc.sp());
        EXPECT(0xe0b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b6));
        EXPECT(0xe6, gbc.readMem(0xe0b7));
        // CB E6 02AE
        gbc.setState(0xe2d9, 0xcba6, 0x7d60, 0x5644, 0x75bc, 0xc108, 0x0, 0x0);
        gbc.writeMem(0xc108, { 0xda });
        gbc.writeMem(0xe2d9, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcba6, gbc.sp());
        EXPECT(0xe2db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc108));
        EXPECT(0xcb, gbc.readMem(0xe2d9));
        EXPECT(0xe6, gbc.readMem(0xe2da));
        // CB E6 02AF
        gbc.setState(0xeea5, 0x75d4, 0xdb70, 0xfb8f, 0xd019, 0xc248, 0x1, 0x1);
        gbc.writeMem(0xc248, { 0x4d });
        gbc.writeMem(0xeea5, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x75d4, gbc.sp());
        EXPECT(0xeea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc248));
        EXPECT(0xcb, gbc.readMem(0xeea5));
        EXPECT(0xe6, gbc.readMem(0xeea6));
        // CB E6 02B0
        gbc.setState(0x5d8e, 0xbf69, 0xe170, 0x8a09, 0xe139, 0x8184, 0x0, 0x1);
        gbc.writeMem(0x5d8e, { 0xcb, 0xe6 });
        gbc.writeMem(0x8184, { 0xbe });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbf69, gbc.sp());
        EXPECT(0x5d90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x8184));
        // CB E6 02B2
        gbc.setState(0x3863, 0x97be, 0x9500, 0x7826, 0xfbb2, 0x9e28, 0x0, 0x0);
        gbc.writeMem(0x3863, { 0xcb, 0xe6 });
        gbc.writeMem(0x9e28, { 0x84 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x97be, gbc.sp());
        EXPECT(0x3865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9e28));
        // CB E6 02B3
        gbc.setState(0x5ac9, 0xa798, 0x12a0, 0xa2eb, 0x3190, 0xfddf, 0x0, 0x0);
        gbc.writeMem(0x5ac9, { 0xcb, 0xe6 });
        gbc.writeMem(0xfddf, { 0x13 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa798, gbc.sp());
        EXPECT(0x5acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xfddf));
        // CB E6 02B4
        gbc.setState(0xe3c0, 0x5cdb, 0xe4d0, 0xa58e, 0x5af, 0xbf27, 0x1, 0x1);
        gbc.writeMem(0xbf27, { 0xce });
        gbc.writeMem(0xe3c0, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5cdb, gbc.sp());
        EXPECT(0xe3c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xbf27));
        EXPECT(0xcb, gbc.readMem(0xe3c0));
        EXPECT(0xe6, gbc.readMem(0xe3c1));
        // CB E6 02B5
        gbc.setState(0x6ee4, 0xab9f, 0x9350, 0x74ea, 0x6be9, 0xd89f, 0x0, 0x0);
        gbc.writeMem(0x6ee4, { 0xcb, 0xe6 });
        gbc.writeMem(0xd89f, { 0x70 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xab9f, gbc.sp());
        EXPECT(0x6ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xd89f));
        // CB E6 02B6
        gbc.setState(0x5c1b, 0x50dd, 0x1460, 0xba53, 0x1f98, 0x863c, 0x1, 0x1);
        gbc.writeMem(0x5c1b, { 0xcb, 0xe6 });
        gbc.writeMem(0x863c, { 0x58 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x50dd, gbc.sp());
        EXPECT(0x5c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x863c));
        // CB E6 02B8
        gbc.setState(0x9671, 0xf46e, 0x9cc0, 0x3051, 0xd541, 0x60bf, 0x1, 0x1);
        gbc.writeMem(0x60bf, { 0x95 });
        gbc.writeMem(0x9671, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf46e, gbc.sp());
        EXPECT(0x9673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9671));
        EXPECT(0xe6, gbc.readMem(0x9672));
        // CB E6 02B9
        gbc.setState(0x49b2, 0xd2d2, 0x4a90, 0x2ed7, 0xa92c, 0xf47e, 0x1, 0x0);
        gbc.writeMem(0x49b2, { 0xcb, 0xe6 });
        gbc.writeMem(0xf47e, { 0xae });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd2d2, gbc.sp());
        EXPECT(0x49b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xf47e));
        // CB E6 02BA
        gbc.setState(0x5041, 0x24d1, 0xad20, 0xb259, 0xd554, 0x4b9f, 0x1, 0x1);
        gbc.writeMem(0x4b9f, { 0x93 });
        gbc.writeMem(0x5041, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x24d1, gbc.sp());
        EXPECT(0x5043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 02BB
        gbc.setState(0x769e, 0xb83b, 0x45b0, 0xd5de, 0x9b89, 0xb4f8, 0x1, 0x0);
        gbc.writeMem(0x769e, { 0xcb, 0xe6 });
        gbc.writeMem(0xb4f8, { 0x57 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb83b, gbc.sp());
        EXPECT(0x76a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb4f8));
        // CB E6 02BC
        gbc.setState(0x8e80, 0x6244, 0x3130, 0x5cf8, 0x31d1, 0x5dc0, 0x0, 0x1);
        gbc.writeMem(0x5dc0, { 0x1f });
        gbc.writeMem(0x8e80, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6244, gbc.sp());
        EXPECT(0x8e82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e80));
        EXPECT(0xe6, gbc.readMem(0x8e81));
        // CB E6 02BD
        gbc.setState(0xde00, 0x83f0, 0x4ed0, 0x9241, 0x3628, 0xb440, 0x0, 0x1);
        gbc.writeMem(0xb440, { 0xf2 });
        gbc.writeMem(0xde00, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x83f0, gbc.sp());
        EXPECT(0xde02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xb440));
        EXPECT(0xcb, gbc.readMem(0xde00));
        EXPECT(0xe6, gbc.readMem(0xde01));
        // CB E6 02C0
        gbc.setState(0x68ac, 0x2287, 0x420, 0x81a3, 0xc912, 0xaf25, 0x1, 0x0);
        gbc.writeMem(0x68ac, { 0xcb, 0xe6 });
        gbc.writeMem(0xaf25, { 0x28 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2287, gbc.sp());
        EXPECT(0x68ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xaf25));
        // CB E6 02C1
        gbc.setState(0xefd0, 0xffc9, 0x3370, 0x3e99, 0x9009, 0x40d4, 0x0, 0x1);
        gbc.writeMem(0x40d4, { 0xb7 });
        gbc.writeMem(0xefd0, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xffc9, gbc.sp());
        EXPECT(0xefd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd0));
        EXPECT(0xe6, gbc.readMem(0xefd1));
        // CB E6 02C4
        gbc.setState(0x1eb2, 0x58fd, 0x8470, 0x43e6, 0x567c, 0xf800, 0x0, 0x1);
        gbc.writeMem(0x1eb2, { 0xcb, 0xe6 });
        gbc.writeMem(0xf800, { 0x72 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x58fd, gbc.sp());
        EXPECT(0x1eb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xf800));
        // CB E6 02C6
        gbc.setState(0xba8, 0x1509, 0x9750, 0x1e3a, 0x5e11, 0xbf79, 0x0, 0x0);
        gbc.writeMem(0xba8, { 0xcb, 0xe6 });
        gbc.writeMem(0xbf79, { 0xd7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1509, gbc.sp());
        EXPECT(0xbaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xbf79));
        // CB E6 02C8
        gbc.setState(0xc166, 0xc3e9, 0x2330, 0x342e, 0xed1a, 0x2cdb, 0x1, 0x0);
        gbc.writeMem(0x2cdb, { 0x10 });
        gbc.writeMem(0xc166, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc3e9, gbc.sp());
        EXPECT(0xc168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc166));
        EXPECT(0xe6, gbc.readMem(0xc167));
        // CB E6 02CC
        gbc.setState(0xeaa0, 0x6859, 0x6c0, 0xba1d, 0x6c5b, 0x3666, 0x1, 0x1);
        gbc.writeMem(0x3666, { 0xde });
        gbc.writeMem(0xeaa0, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6859, gbc.sp());
        EXPECT(0xeaa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaa0));
        EXPECT(0xe6, gbc.readMem(0xeaa1));
        // CB E6 02CD
        gbc.setState(0x885b, 0x58f6, 0x5970, 0x9ee3, 0xf918, 0xe04e, 0x1, 0x0);
        gbc.writeMem(0x885b, { 0xcb, 0xe6 });
        gbc.writeMem(0xe04e, { 0xf2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x58f6, gbc.sp());
        EXPECT(0x885d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x885b));
        EXPECT(0xe6, gbc.readMem(0x885c));
        EXPECT(0xf2, gbc.readMem(0xe04e));
        // CB E6 02CE
        gbc.setState(0x761a, 0xb704, 0x9e0, 0x5af4, 0x8847, 0xaa57, 0x0, 0x1);
        gbc.writeMem(0x761a, { 0xcb, 0xe6 });
        gbc.writeMem(0xaa57, { 0x26 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb704, gbc.sp());
        EXPECT(0x761c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xaa57));
        // CB E6 02CF
        gbc.setState(0xda8, 0x54cc, 0x1900, 0xbe57, 0x43f8, 0x8502, 0x0, 0x0);
        gbc.writeMem(0xda8, { 0xcb, 0xe6 });
        gbc.writeMem(0x8502, { 0xa8 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x54cc, gbc.sp());
        EXPECT(0xdaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x8502));
        // CB E6 02D1
        gbc.setState(0x4c78, 0x3bd4, 0xf510, 0xeaf5, 0xd8bc, 0x46b8, 0x1, 0x0);
        gbc.writeMem(0x46b8, { 0x9b });
        gbc.writeMem(0x4c78, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3bd4, gbc.sp());
        EXPECT(0x4c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 02D6
        gbc.setState(0x9800, 0xaab8, 0xbc70, 0x3ad7, 0xa34e, 0xfcf3, 0x0, 0x1);
        gbc.writeMem(0x9800, { 0xcb, 0xe6 });
        gbc.writeMem(0xfcf3, { 0xd8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xaab8, gbc.sp());
        EXPECT(0x9802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9800));
        EXPECT(0xe6, gbc.readMem(0x9801));
        EXPECT(0xd8, gbc.readMem(0xfcf3));
        // CB E6 02D7
        gbc.setState(0x516d, 0x51fd, 0x8d40, 0xa4fa, 0x4314, 0xde04, 0x1, 0x1);
        gbc.writeMem(0x516d, { 0xcb, 0xe6 });
        gbc.writeMem(0xde04, { 0x1a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x51fd, gbc.sp());
        EXPECT(0x516f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xde04));
        // CB E6 02D9
        gbc.setState(0x56c6, 0xa1a3, 0xc9b0, 0x5c89, 0x7e41, 0xeb95, 0x1, 0x0);
        gbc.writeMem(0x56c6, { 0xcb, 0xe6 });
        gbc.writeMem(0xeb95, { 0xd2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa1a3, gbc.sp());
        EXPECT(0x56c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xeb95));
        // CB E6 02DB
        gbc.setState(0x61a9, 0xab11, 0xa520, 0x5b86, 0x2ba2, 0xa831, 0x0, 0x0);
        gbc.writeMem(0x61a9, { 0xcb, 0xe6 });
        gbc.writeMem(0xa831, { 0xd8 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xab11, gbc.sp());
        EXPECT(0x61ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xa831));
        // CB E6 02DC
        gbc.setState(0x6e1e, 0xd32b, 0x88e0, 0x9e5b, 0xebc0, 0xdc77, 0x1, 0x0);
        gbc.writeMem(0x6e1e, { 0xcb, 0xe6 });
        gbc.writeMem(0xdc77, { 0x30 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd32b, gbc.sp());
        EXPECT(0x6e20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xdc77));
        // CB E6 02DD
        gbc.setState(0xccf4, 0xf92d, 0xef90, 0x8d7e, 0x5096, 0xe766, 0x0, 0x0);
        gbc.writeMem(0xccf4, { 0xcb, 0xe6 });
        gbc.writeMem(0xe766, { 0xf });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf92d, gbc.sp());
        EXPECT(0xccf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf4));
        EXPECT(0xe6, gbc.readMem(0xccf5));
        EXPECT(0x1f, gbc.readMem(0xe766));
        // CB E6 02DE
        gbc.setState(0x270a, 0x51f3, 0x6350, 0x18e4, 0x9b6a, 0xdd89, 0x1, 0x0);
        gbc.writeMem(0x270a, { 0xcb, 0xe6 });
        gbc.writeMem(0xdd89, { 0x25 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x51f3, gbc.sp());
        EXPECT(0x270c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xdd89));
        // CB E6 02E1
        gbc.setState(0xcd1a, 0x4b73, 0x7be0, 0xc8fc, 0xa4fe, 0x9e69, 0x1, 0x1);
        gbc.writeMem(0x9e69, { 0xf7 });
        gbc.writeMem(0xcd1a, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4b73, gbc.sp());
        EXPECT(0xcd1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x9e69));
        EXPECT(0xcb, gbc.readMem(0xcd1a));
        EXPECT(0xe6, gbc.readMem(0xcd1b));
        // CB E6 02E2
        gbc.setState(0x95aa, 0xf925, 0xe0e0, 0x1db0, 0xd7e9, 0xf5fa, 0x0, 0x1);
        gbc.writeMem(0x95aa, { 0xcb, 0xe6 });
        gbc.writeMem(0xf5fa, { 0x3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf925, gbc.sp());
        EXPECT(0x95ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95aa));
        EXPECT(0xe6, gbc.readMem(0x95ab));
        EXPECT(0x13, gbc.readMem(0xf5fa));
        // CB E6 02E3
        gbc.setState(0x16ac, 0x60d9, 0xd9b0, 0xe74f, 0xa1fb, 0x2bc1, 0x0, 0x1);
        gbc.writeMem(0x16ac, { 0xcb, 0xe6 });
        gbc.writeMem(0x2bc1, { 0xf9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x60d9, gbc.sp());
        EXPECT(0x16ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 02E5
        gbc.setState(0x722f, 0xbb2f, 0xc380, 0x864a, 0x42c8, 0xd44, 0x0, 0x1);
        gbc.writeMem(0xd44, { 0x32 });
        gbc.writeMem(0x722f, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbb2f, gbc.sp());
        EXPECT(0x7231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 02E8
        gbc.setState(0x640c, 0x8288, 0xbc20, 0xf1cb, 0xeb43, 0xa1fc, 0x0, 0x0);
        gbc.writeMem(0x640c, { 0xcb, 0xe6 });
        gbc.writeMem(0xa1fc, { 0x14 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8288, gbc.sp());
        EXPECT(0x640e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa1fc));
        // CB E6 02EA
        gbc.setState(0xcbdf, 0xef02, 0x3d20, 0xaf3a, 0x4e75, 0x9000, 0x0, 0x1);
        gbc.writeMem(0x9000, { 0x7 });
        gbc.writeMem(0xcbdf, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xef02, gbc.sp());
        EXPECT(0xcbe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x9000));
        EXPECT(0xcb, gbc.readMem(0xcbdf));
        EXPECT(0xe6, gbc.readMem(0xcbe0));
        // CB E6 02EB
        gbc.setState(0xb12f, 0x533d, 0x4fb0, 0xace4, 0x43f0, 0xa5ab, 0x1, 0x1);
        gbc.writeMem(0xa5ab, { 0xa2 });
        gbc.writeMem(0xb12f, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x533d, gbc.sp());
        EXPECT(0xb131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa5ab));
        EXPECT(0xcb, gbc.readMem(0xb12f));
        EXPECT(0xe6, gbc.readMem(0xb130));
        // CB E6 02EC
        gbc.setState(0x56b1, 0x761b, 0x3fc0, 0x1b8f, 0xbd42, 0xcf3c, 0x0, 0x1);
        gbc.writeMem(0x56b1, { 0xcb, 0xe6 });
        gbc.writeMem(0xcf3c, { 0x22 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x761b, gbc.sp());
        EXPECT(0x56b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xcf3c));
        // CB E6 02EE
        gbc.setState(0xcb59, 0x69f1, 0x26b0, 0xe89b, 0x22ef, 0xf208, 0x1, 0x0);
        gbc.writeMem(0xcb59, { 0xcb, 0xe6 });
        gbc.writeMem(0xf208, { 0x16 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x69f1, gbc.sp());
        EXPECT(0xcb5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb59));
        EXPECT(0xe6, gbc.readMem(0xcb5a));
        EXPECT(0x16, gbc.readMem(0xf208));
        // CB E6 02EF
        gbc.setState(0x2035, 0x9e0, 0x900, 0x8f57, 0xc6d4, 0x9b5b, 0x1, 0x1);
        gbc.writeMem(0x2035, { 0xcb, 0xe6 });
        gbc.writeMem(0x9b5b, { 0xc1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9e0, gbc.sp());
        EXPECT(0x2037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0x9b5b));
        // CB E6 02F0
        gbc.setState(0xc8be, 0xeb83, 0xabd0, 0x6c9b, 0x4e31, 0xfd73, 0x1, 0x1);
        gbc.writeMem(0xc8be, { 0xcb, 0xe6 });
        gbc.writeMem(0xfd73, { 0xbd });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xeb83, gbc.sp());
        EXPECT(0xc8c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8be));
        EXPECT(0xe6, gbc.readMem(0xc8bf));
        EXPECT(0xbd, gbc.readMem(0xfd73));
        // CB E6 02F1
        gbc.setState(0x6643, 0x76de, 0xb7c0, 0xe85a, 0x9bcd, 0x1648, 0x1, 0x0);
        gbc.writeMem(0x1648, { 0x72 });
        gbc.writeMem(0x6643, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x76de, gbc.sp());
        EXPECT(0x6645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 02F3
        gbc.setState(0x34a4, 0x6dd2, 0xfdf0, 0x34ad, 0xcef3, 0x55df, 0x0, 0x0);
        gbc.writeMem(0x34a4, { 0xcb, 0xe6 });
        gbc.writeMem(0x55df, { 0xf9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6dd2, gbc.sp());
        EXPECT(0x34a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 02F5
        gbc.setState(0x3c4a, 0xdca3, 0xe6e0, 0x567a, 0x417e, 0xf219, 0x0, 0x0);
        gbc.writeMem(0x3c4a, { 0xcb, 0xe6 });
        gbc.writeMem(0xf219, { 0x98 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdca3, gbc.sp());
        EXPECT(0x3c4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xf219));
        // CB E6 02F6
        gbc.setState(0xbcb, 0x262, 0x8f0, 0x7d20, 0x33d4, 0xede5, 0x0, 0x0);
        gbc.writeMem(0xbcb, { 0xcb, 0xe6 });
        gbc.writeMem(0xede5, { 0x4d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x262, gbc.sp());
        EXPECT(0xbcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xede5));
        // CB E6 02F7
        gbc.setState(0x3fe3, 0xc758, 0x2ee0, 0x156f, 0xb30c, 0xa996, 0x1, 0x0);
        gbc.writeMem(0x3fe3, { 0xcb, 0xe6 });
        gbc.writeMem(0xa996, { 0x92 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc758, gbc.sp());
        EXPECT(0x3fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa996));
        // CB E6 02F8
        gbc.setState(0xd038, 0x555c, 0xf260, 0x2212, 0xf477, 0xccf2, 0x0, 0x0);
        gbc.writeMem(0xccf2, { 0xec });
        gbc.writeMem(0xd038, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x555c, gbc.sp());
        EXPECT(0xd03a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xccf2));
        EXPECT(0xcb, gbc.readMem(0xd038));
        EXPECT(0xe6, gbc.readMem(0xd039));
        // CB E6 02FB
        gbc.setState(0x9a7a, 0xc4a4, 0x79f0, 0x8de6, 0x77f5, 0xdaf7, 0x1, 0x0);
        gbc.writeMem(0x9a7a, { 0xcb, 0xe6 });
        gbc.writeMem(0xdaf7, { 0xed });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc4a4, gbc.sp());
        EXPECT(0x9a7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a7a));
        EXPECT(0xe6, gbc.readMem(0x9a7b));
        EXPECT(0xfd, gbc.readMem(0xdaf7));
        // CB E6 02FC
        gbc.setState(0x8e3c, 0xe8f1, 0x5290, 0xd07, 0x95da, 0x3800, 0x0, 0x0);
        gbc.writeMem(0x3800, { 0x72 });
        gbc.writeMem(0x8e3c, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe8f1, gbc.sp());
        EXPECT(0x8e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e3c));
        EXPECT(0xe6, gbc.readMem(0x8e3d));
        // CB E6 02FD
        gbc.setState(0xcaac, 0x8832, 0xdd10, 0xedad, 0xa9b5, 0x7f3, 0x1, 0x0);
        gbc.writeMem(0x7f3, { 0x9a });
        gbc.writeMem(0xcaac, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8832, gbc.sp());
        EXPECT(0xcaae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaac));
        EXPECT(0xe6, gbc.readMem(0xcaad));
        // CB E6 02FE
        gbc.setState(0x1685, 0xc39a, 0xfac0, 0x8613, 0x709b, 0xfa7f, 0x0, 0x0);
        gbc.writeMem(0x1685, { 0xcb, 0xe6 });
        gbc.writeMem(0xfa7f, { 0x4 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc39a, gbc.sp());
        EXPECT(0x1687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xfa7f));
        // CB E6 02FF
        gbc.setState(0x4ce8, 0x448e, 0x8a20, 0x38d, 0x2ec0, 0xcafa, 0x0, 0x1);
        gbc.writeMem(0x4ce8, { 0xcb, 0xe6 });
        gbc.writeMem(0xcafa, { 0x9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x448e, gbc.sp());
        EXPECT(0x4cea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xcafa));
        // CB E6 0300
        gbc.setState(0x1853, 0xd55b, 0x53f0, 0x540a, 0xb90c, 0xce2b, 0x1, 0x0);
        gbc.writeMem(0x1853, { 0xcb, 0xe6 });
        gbc.writeMem(0xce2b, { 0x2b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd55b, gbc.sp());
        EXPECT(0x1855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xce2b));
        // CB E6 0301
        gbc.setState(0xdf80, 0xed72, 0xa2d0, 0x124a, 0x3eb4, 0xde3b, 0x0, 0x1);
        gbc.writeMem(0xde3b, { 0x4e });
        gbc.writeMem(0xdf80, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xed72, gbc.sp());
        EXPECT(0xdf82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xde3b));
        EXPECT(0xcb, gbc.readMem(0xdf80));
        EXPECT(0xe6, gbc.readMem(0xdf81));
        // CB E6 0302
        gbc.setState(0xdd58, 0x54bc, 0xf660, 0x580d, 0xaf51, 0x82b9, 0x0, 0x1);
        gbc.writeMem(0x82b9, { 0xc9 });
        gbc.writeMem(0xdd58, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x54bc, gbc.sp());
        EXPECT(0xdd5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x82b9));
        EXPECT(0xcb, gbc.readMem(0xdd58));
        EXPECT(0xe6, gbc.readMem(0xdd59));
        // CB E6 0304
        gbc.setState(0x47e4, 0xf0da, 0xe3c0, 0xfa52, 0x6223, 0xda47, 0x0, 0x0);
        gbc.writeMem(0x47e4, { 0xcb, 0xe6 });
        gbc.writeMem(0xda47, { 0xe9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf0da, gbc.sp());
        EXPECT(0x47e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xda47));
        // CB E6 0305
        gbc.setState(0xbfd1, 0x3f9d, 0x54d0, 0x73e5, 0x43cf, 0xa564, 0x0, 0x0);
        gbc.writeMem(0xa564, { 0x79 });
        gbc.writeMem(0xbfd1, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3f9d, gbc.sp());
        EXPECT(0xbfd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa564));
        EXPECT(0xcb, gbc.readMem(0xbfd1));
        EXPECT(0xe6, gbc.readMem(0xbfd2));
        // CB E6 0306
        gbc.setState(0x69fd, 0xf9ab, 0x6dd0, 0x13f3, 0x2c7, 0x588d, 0x1, 0x1);
        gbc.writeMem(0x588d, { 0x1e });
        gbc.writeMem(0x69fd, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf9ab, gbc.sp());
        EXPECT(0x69ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0307
        gbc.setState(0xc45a, 0x706b, 0x92b0, 0x9470, 0x184d, 0x2dd8, 0x1, 0x0);
        gbc.writeMem(0x2dd8, { 0x55 });
        gbc.writeMem(0xc45a, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x706b, gbc.sp());
        EXPECT(0xc45c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45a));
        EXPECT(0xe6, gbc.readMem(0xc45b));
        // CB E6 0308
        gbc.setState(0x391d, 0x959f, 0x62e0, 0x99ad, 0x2433, 0x50ef, 0x0, 0x1);
        gbc.writeMem(0x391d, { 0xcb, 0xe6 });
        gbc.writeMem(0x50ef, { 0x7d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x959f, gbc.sp());
        EXPECT(0x391f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 030A
        gbc.setState(0x837e, 0x7b14, 0xe9f0, 0x86aa, 0xb820, 0xcf4a, 0x0, 0x1);
        gbc.writeMem(0x837e, { 0xcb, 0xe6 });
        gbc.writeMem(0xcf4a, { 0x21 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7b14, gbc.sp());
        EXPECT(0x8380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x837e));
        EXPECT(0xe6, gbc.readMem(0x837f));
        EXPECT(0x31, gbc.readMem(0xcf4a));
        // CB E6 030B
        gbc.setState(0x182b, 0x8359, 0x6160, 0x3a91, 0x1e02, 0x81f0, 0x1, 0x0);
        gbc.writeMem(0x182b, { 0xcb, 0xe6 });
        gbc.writeMem(0x81f0, { 0x4c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8359, gbc.sp());
        EXPECT(0x182d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x81f0));
        // CB E6 0310
        gbc.setState(0xb89c, 0x2d11, 0xc290, 0x5bfb, 0x4436, 0xee9f, 0x1, 0x1);
        gbc.writeMem(0xb89c, { 0xcb, 0xe6 });
        gbc.writeMem(0xee9f, { 0xa7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2d11, gbc.sp());
        EXPECT(0xb89e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb89c));
        EXPECT(0xe6, gbc.readMem(0xb89d));
        EXPECT(0xb7, gbc.readMem(0xee9f));
        // CB E6 0311
        gbc.setState(0x30f3, 0x433e, 0xd6e0, 0x3133, 0x8b30, 0x7a7b, 0x1, 0x0);
        gbc.writeMem(0x30f3, { 0xcb, 0xe6 });
        gbc.writeMem(0x7a7b, { 0x72 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x433e, gbc.sp());
        EXPECT(0x30f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0312
        gbc.setState(0x9168, 0xa064, 0x7630, 0x9a79, 0x5248, 0xc04b, 0x1, 0x1);
        gbc.writeMem(0x9168, { 0xcb, 0xe6 });
        gbc.writeMem(0xc04b, { 0x10 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa064, gbc.sp());
        EXPECT(0x916a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9168));
        EXPECT(0xe6, gbc.readMem(0x9169));
        EXPECT(0x10, gbc.readMem(0xc04b));
        // CB E6 0315
        gbc.setState(0xa2cb, 0x7168, 0x1e60, 0xd2c6, 0xc807, 0x30a7, 0x0, 0x0);
        gbc.writeMem(0x30a7, { 0x70 });
        gbc.writeMem(0xa2cb, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7168, gbc.sp());
        EXPECT(0xa2cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2cb));
        EXPECT(0xe6, gbc.readMem(0xa2cc));
        // CB E6 0316
        gbc.setState(0x57d0, 0x1926, 0x4460, 0x608f, 0x65fd, 0xfa89, 0x1, 0x1);
        gbc.writeMem(0x57d0, { 0xcb, 0xe6 });
        gbc.writeMem(0xfa89, { 0x61 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1926, gbc.sp());
        EXPECT(0x57d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xfa89));
        // CB E6 0318
        gbc.setState(0x9b59, 0x8de3, 0x9a90, 0x3c82, 0x5971, 0x6857, 0x1, 0x0);
        gbc.writeMem(0x6857, { 0xba });
        gbc.writeMem(0x9b59, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8de3, gbc.sp());
        EXPECT(0x9b5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b59));
        EXPECT(0xe6, gbc.readMem(0x9b5a));
        // CB E6 0319
        gbc.setState(0x20f0, 0x43c6, 0xf430, 0x9f4f, 0x72d5, 0x9d8f, 0x1, 0x0);
        gbc.writeMem(0x20f0, { 0xcb, 0xe6 });
        gbc.writeMem(0x9d8f, { 0x8b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x43c6, gbc.sp());
        EXPECT(0x20f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9d8f));
        // CB E6 031A
        gbc.setState(0xbfd9, 0x29f3, 0x4870, 0x2e22, 0x9bbb, 0xd97b, 0x1, 0x0);
        gbc.writeMem(0xbfd9, { 0xcb, 0xe6 });
        gbc.writeMem(0xd97b, { 0xec });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x29f3, gbc.sp());
        EXPECT(0xbfdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfd9));
        EXPECT(0xe6, gbc.readMem(0xbfda));
        EXPECT(0xfc, gbc.readMem(0xd97b));
        // CB E6 031B
        gbc.setState(0x19c7, 0x95c0, 0xa350, 0xded6, 0x8531, 0xd2b5, 0x0, 0x1);
        gbc.writeMem(0x19c7, { 0xcb, 0xe6 });
        gbc.writeMem(0xd2b5, { 0xee });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x95c0, gbc.sp());
        EXPECT(0x19c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd2b5));
        // CB E6 031C
        gbc.setState(0x2439, 0x4500, 0x250, 0x1ab5, 0xa452, 0xbc4a, 0x1, 0x1);
        gbc.writeMem(0x2439, { 0xcb, 0xe6 });
        gbc.writeMem(0xbc4a, { 0x7d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4500, gbc.sp());
        EXPECT(0x243b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbc4a));
        // CB E6 031D
        gbc.setState(0x698d, 0x7e0c, 0xb280, 0x94f1, 0x78ad, 0x2d09, 0x1, 0x1);
        gbc.writeMem(0x2d09, { 0xf9 });
        gbc.writeMem(0x698d, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7e0c, gbc.sp());
        EXPECT(0x698f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 031E
        gbc.setState(0x8ecd, 0x2855, 0xf7d0, 0x56fa, 0x5f3d, 0x30ed, 0x1, 0x1);
        gbc.writeMem(0x30ed, { 0x9f });
        gbc.writeMem(0x8ecd, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2855, gbc.sp());
        EXPECT(0x8ecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ecd));
        EXPECT(0xe6, gbc.readMem(0x8ece));
        // CB E6 0321
        gbc.setState(0xb292, 0x80ad, 0x3780, 0x7e3d, 0x46c3, 0xd324, 0x0, 0x1);
        gbc.writeMem(0xb292, { 0xcb, 0xe6 });
        gbc.writeMem(0xd324, { 0xec });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x80ad, gbc.sp());
        EXPECT(0xb294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb292));
        EXPECT(0xe6, gbc.readMem(0xb293));
        EXPECT(0xfc, gbc.readMem(0xd324));
        // CB E6 0322
        gbc.setState(0x6ac6, 0x232c, 0x22c0, 0xe776, 0xacc, 0x73c2, 0x0, 0x0);
        gbc.writeMem(0x6ac6, { 0xcb, 0xe6 });
        gbc.writeMem(0x73c2, { 0xd8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x232c, gbc.sp());
        EXPECT(0x6ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0325
        gbc.setState(0xdf55, 0x53b5, 0x7950, 0x38d0, 0xfe03, 0xf72b, 0x1, 0x1);
        gbc.writeMem(0xdf55, { 0xcb, 0xe6 });
        gbc.writeMem(0xf72b, { 0x5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x53b5, gbc.sp());
        EXPECT(0xdf57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf55));
        EXPECT(0xe6, gbc.readMem(0xdf56));
        EXPECT(0x15, gbc.readMem(0xf72b));
        // CB E6 0326
        gbc.setState(0xe75, 0xaa0b, 0x2c00, 0x9370, 0x918b, 0x56b0, 0x1, 0x0);
        gbc.writeMem(0xe75, { 0xcb, 0xe6 });
        gbc.writeMem(0x56b0, { 0xf3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xaa0b, gbc.sp());
        EXPECT(0xe77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0328
        gbc.setState(0x3da, 0x6eef, 0xd3b0, 0xad6a, 0x902d, 0xab0f, 0x1, 0x1);
        gbc.writeMem(0x3da, { 0xcb, 0xe6 });
        gbc.writeMem(0xab0f, { 0xf });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6eef, gbc.sp());
        EXPECT(0x3dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xab0f));
        // CB E6 0329
        gbc.setState(0x78b3, 0xc6c3, 0xb1f0, 0xc5ff, 0xab38, 0xcf1c, 0x1, 0x1);
        gbc.writeMem(0x78b3, { 0xcb, 0xe6 });
        gbc.writeMem(0xcf1c, { 0x4c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc6c3, gbc.sp());
        EXPECT(0x78b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xcf1c));
        // CB E6 032A
        gbc.setState(0xbbd0, 0xa1d6, 0x9680, 0x4e5a, 0x4fac, 0xe1a7, 0x1, 0x0);
        gbc.writeMem(0xbbd0, { 0xcb, 0xe6 });
        gbc.writeMem(0xe1a7, { 0x73 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa1d6, gbc.sp());
        EXPECT(0xbbd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd0));
        EXPECT(0xe6, gbc.readMem(0xbbd1));
        EXPECT(0x73, gbc.readMem(0xe1a7));
        // CB E6 032C
        gbc.setState(0x252b, 0x484a, 0xcda0, 0xb13b, 0xabce, 0xad9a, 0x1, 0x1);
        gbc.writeMem(0x252b, { 0xcb, 0xe6 });
        gbc.writeMem(0xad9a, { 0x70 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x484a, gbc.sp());
        EXPECT(0x252d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xad9a));
        // CB E6 032E
        gbc.setState(0xbdea, 0x29ee, 0xe520, 0xb540, 0x735e, 0x52ab, 0x1, 0x1);
        gbc.writeMem(0x52ab, { 0x11 });
        gbc.writeMem(0xbdea, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x29ee, gbc.sp());
        EXPECT(0xbdec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdea));
        EXPECT(0xe6, gbc.readMem(0xbdeb));
        // CB E6 032F
        gbc.setState(0x9c02, 0x4356, 0xb110, 0xc59, 0xf005, 0x49b3, 0x1, 0x0);
        gbc.writeMem(0x49b3, { 0x5c });
        gbc.writeMem(0x9c02, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4356, gbc.sp());
        EXPECT(0x9c04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c02));
        EXPECT(0xe6, gbc.readMem(0x9c03));
        // CB E6 0331
        gbc.setState(0xe74e, 0xd031, 0x4f0, 0xa0f, 0xc262, 0x341d, 0x0, 0x1);
        gbc.writeMem(0x341d, { 0xb4 });
        gbc.writeMem(0xe74e, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd031, gbc.sp());
        EXPECT(0xe750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe74e));
        EXPECT(0xe6, gbc.readMem(0xe74f));
        // CB E6 0332
        gbc.setState(0x3e4d, 0x8515, 0x87e0, 0x71ab, 0xe305, 0x8a44, 0x0, 0x1);
        gbc.writeMem(0x3e4d, { 0xcb, 0xe6 });
        gbc.writeMem(0x8a44, { 0x79 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8515, gbc.sp());
        EXPECT(0x3e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8a44));
        // CB E6 0339
        gbc.setState(0x70b6, 0x40e5, 0x64a0, 0xe946, 0x7915, 0x1bdb, 0x1, 0x1);
        gbc.writeMem(0x1bdb, { 0xd2 });
        gbc.writeMem(0x70b6, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x40e5, gbc.sp());
        EXPECT(0x70b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 033C
        gbc.setState(0x3b0d, 0xabc3, 0x1690, 0x4a08, 0x544c, 0xb2c5, 0x0, 0x1);
        gbc.writeMem(0x3b0d, { 0xcb, 0xe6 });
        gbc.writeMem(0xb2c5, { 0x86 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xabc3, gbc.sp());
        EXPECT(0x3b0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xb2c5));
        // CB E6 033D
        gbc.setState(0x834c, 0x7ecb, 0x4840, 0xa3f2, 0x779, 0xa4ea, 0x0, 0x0);
        gbc.writeMem(0x834c, { 0xcb, 0xe6 });
        gbc.writeMem(0xa4ea, { 0x94 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7ecb, gbc.sp());
        EXPECT(0x834e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x834c));
        EXPECT(0xe6, gbc.readMem(0x834d));
        EXPECT(0x94, gbc.readMem(0xa4ea));
        // CB E6 033E
        gbc.setState(0xb5c7, 0x43d3, 0x71c0, 0x5f73, 0x90b, 0xb52b, 0x0, 0x1);
        gbc.writeMem(0xb52b, { 0x69 });
        gbc.writeMem(0xb5c7, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x43d3, gbc.sp());
        EXPECT(0xb5c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb52b));
        EXPECT(0xcb, gbc.readMem(0xb5c7));
        EXPECT(0xe6, gbc.readMem(0xb5c8));
        // CB E6 0341
        gbc.setState(0x7a74, 0x3df5, 0x1e20, 0x64de, 0xc288, 0xec97, 0x0, 0x0);
        gbc.writeMem(0x7a74, { 0xcb, 0xe6 });
        gbc.writeMem(0xec97, { 0x67 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3df5, gbc.sp());
        EXPECT(0x7a76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xec97));
        // CB E6 0342
        gbc.setState(0x76a6, 0x5cf0, 0x1e20, 0x4233, 0x77a6, 0xa5a9, 0x0, 0x0);
        gbc.writeMem(0x76a6, { 0xcb, 0xe6 });
        gbc.writeMem(0xa5a9, { 0xc4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5cf0, gbc.sp());
        EXPECT(0x76a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa5a9));
        // CB E6 0343
        gbc.setState(0x6fec, 0xe1f3, 0xdad0, 0x57bc, 0x212, 0xaf1d, 0x1, 0x1);
        gbc.writeMem(0x6fec, { 0xcb, 0xe6 });
        gbc.writeMem(0xaf1d, { 0x78 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe1f3, gbc.sp());
        EXPECT(0x6fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xaf1d));
        // CB E6 0344
        gbc.setState(0x60e6, 0x39f1, 0x7280, 0xab2, 0x3bc8, 0xdbad, 0x1, 0x0);
        gbc.writeMem(0x60e6, { 0xcb, 0xe6 });
        gbc.writeMem(0xdbad, { 0x22 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x39f1, gbc.sp());
        EXPECT(0x60e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xdbad));
        // CB E6 0345
        gbc.setState(0x2301, 0x17db, 0x5580, 0x9736, 0xf08f, 0xa14e, 0x1, 0x0);
        gbc.writeMem(0x2301, { 0xcb, 0xe6 });
        gbc.writeMem(0xa14e, { 0x53 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x17db, gbc.sp());
        EXPECT(0x2303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa14e));
        // CB E6 0347
        gbc.setState(0x958b, 0xdfd2, 0x48c0, 0xc137, 0x59bf, 0xe664, 0x0, 0x1);
        gbc.writeMem(0x958b, { 0xcb, 0xe6 });
        gbc.writeMem(0xe664, { 0x74 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xdfd2, gbc.sp());
        EXPECT(0x958d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x958b));
        EXPECT(0xe6, gbc.readMem(0x958c));
        EXPECT(0x74, gbc.readMem(0xe664));
        // CB E6 0349
        gbc.setState(0x9f64, 0xb781, 0xc150, 0x2b61, 0x2a34, 0xb21a, 0x0, 0x0);
        gbc.writeMem(0x9f64, { 0xcb, 0xe6 });
        gbc.writeMem(0xb21a, { 0xf5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb781, gbc.sp());
        EXPECT(0x9f66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f64));
        EXPECT(0xe6, gbc.readMem(0x9f65));
        EXPECT(0xf5, gbc.readMem(0xb21a));
        // CB E6 034F
        gbc.setState(0x75a3, 0x7980, 0xe40, 0xd361, 0x6726, 0xa7af, 0x0, 0x0);
        gbc.writeMem(0x75a3, { 0xcb, 0xe6 });
        gbc.writeMem(0xa7af, { 0x6c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7980, gbc.sp());
        EXPECT(0x75a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xa7af));
        // CB E6 0350
        gbc.setState(0x4447, 0xf8a5, 0x8960, 0x5f29, 0xcf7, 0xfde7, 0x0, 0x1);
        gbc.writeMem(0x4447, { 0xcb, 0xe6 });
        gbc.writeMem(0xfde7, { 0x69 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf8a5, gbc.sp());
        EXPECT(0x4449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xfde7));
        // CB E6 0351
        gbc.setState(0xc65a, 0xedd5, 0x80c0, 0x6b15, 0x3fcc, 0xcf8e, 0x0, 0x0);
        gbc.writeMem(0xc65a, { 0xcb, 0xe6 });
        gbc.writeMem(0xcf8e, { 0xf8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xedd5, gbc.sp());
        EXPECT(0xc65c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc65a));
        EXPECT(0xe6, gbc.readMem(0xc65b));
        EXPECT(0xf8, gbc.readMem(0xcf8e));
        // CB E6 0352
        gbc.setState(0x4c7e, 0xf84e, 0x560, 0x295d, 0x2440, 0x3564, 0x1, 0x1);
        gbc.writeMem(0x3564, { 0x52 });
        gbc.writeMem(0x4c7e, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf84e, gbc.sp());
        EXPECT(0x4c80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0354
        gbc.setState(0xbce1, 0x8afe, 0xded0, 0x1087, 0xe67f, 0x9144, 0x1, 0x1);
        gbc.writeMem(0x9144, { 0xe });
        gbc.writeMem(0xbce1, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8afe, gbc.sp());
        EXPECT(0xbce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x9144));
        EXPECT(0xcb, gbc.readMem(0xbce1));
        EXPECT(0xe6, gbc.readMem(0xbce2));
        // CB E6 0355
        gbc.setState(0xe3d1, 0xb079, 0x69e0, 0xa483, 0xc540, 0x3bb6, 0x1, 0x1);
        gbc.writeMem(0x3bb6, { 0xde });
        gbc.writeMem(0xe3d1, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb079, gbc.sp());
        EXPECT(0xe3d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3d1));
        EXPECT(0xe6, gbc.readMem(0xe3d2));
        // CB E6 0356
        gbc.setState(0x67ff, 0x5c19, 0x8460, 0x452e, 0x916e, 0x9f6c, 0x0, 0x0);
        gbc.writeMem(0x67ff, { 0xcb, 0xe6 });
        gbc.writeMem(0x9f6c, { 0xb4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5c19, gbc.sp());
        EXPECT(0x6801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x9f6c));
        // CB E6 0357
        gbc.setState(0x4222, 0xb352, 0x1320, 0xa4c, 0x8815, 0x96f5, 0x0, 0x1);
        gbc.writeMem(0x4222, { 0xcb, 0xe6 });
        gbc.writeMem(0x96f5, { 0xa4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb352, gbc.sp());
        EXPECT(0x4224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x96f5));
        // CB E6 035A
        gbc.setState(0x24a5, 0xbe81, 0x2990, 0x6df1, 0xbab6, 0x1c6c, 0x0, 0x0);
        gbc.writeMem(0x1c6c, { 0x9d });
        gbc.writeMem(0x24a5, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbe81, gbc.sp());
        EXPECT(0x24a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 035B
        gbc.setState(0x9ace, 0x32db, 0xfdb0, 0x33d8, 0x63c1, 0x7a8, 0x0, 0x1);
        gbc.writeMem(0x7a8, { 0xd2 });
        gbc.writeMem(0x9ace, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x32db, gbc.sp());
        EXPECT(0x9ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ace));
        EXPECT(0xe6, gbc.readMem(0x9acf));
        // CB E6 035C
        gbc.setState(0xcd2d, 0xb52c, 0xf360, 0xb26, 0xd263, 0xab45, 0x1, 0x0);
        gbc.writeMem(0xab45, { 0xa1 });
        gbc.writeMem(0xcd2d, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb52c, gbc.sp());
        EXPECT(0xcd2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xab45));
        EXPECT(0xcb, gbc.readMem(0xcd2d));
        EXPECT(0xe6, gbc.readMem(0xcd2e));
        // CB E6 035E
        gbc.setState(0x85f8, 0xbd97, 0x9e70, 0x577d, 0x3827, 0xbd51, 0x0, 0x1);
        gbc.writeMem(0x85f8, { 0xcb, 0xe6 });
        gbc.writeMem(0xbd51, { 0xeb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbd97, gbc.sp());
        EXPECT(0x85fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85f8));
        EXPECT(0xe6, gbc.readMem(0x85f9));
        EXPECT(0xfb, gbc.readMem(0xbd51));
        // CB E6 0360
        gbc.setState(0x5d3d, 0xe5ef, 0x480, 0xfaa5, 0xff8a, 0xbe20, 0x1, 0x0);
        gbc.writeMem(0x5d3d, { 0xcb, 0xe6 });
        gbc.writeMem(0xbe20, { 0xac });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe5ef, gbc.sp());
        EXPECT(0x5d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbe20));
        // CB E6 0362
        gbc.setState(0x6e93, 0xb6a1, 0x4c90, 0x55c5, 0x8e56, 0x9ac6, 0x1, 0x0);
        gbc.writeMem(0x6e93, { 0xcb, 0xe6 });
        gbc.writeMem(0x9ac6, { 0x41 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb6a1, gbc.sp());
        EXPECT(0x6e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9ac6));
        // CB E6 0363
        gbc.setState(0x9182, 0x5cd9, 0x8400, 0x7bde, 0x19bc, 0x8ea0, 0x1, 0x0);
        gbc.writeMem(0x8ea0, { 0x87 });
        gbc.writeMem(0x9182, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5cd9, gbc.sp());
        EXPECT(0x9184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8ea0));
        EXPECT(0xcb, gbc.readMem(0x9182));
        EXPECT(0xe6, gbc.readMem(0x9183));
        // CB E6 0364
        gbc.setState(0x373c, 0x1341, 0x54b0, 0x7d39, 0x1782, 0xbd2e, 0x0, 0x1);
        gbc.writeMem(0x373c, { 0xcb, 0xe6 });
        gbc.writeMem(0xbd2e, { 0x7a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1341, gbc.sp());
        EXPECT(0x373e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbd2e));
        // CB E6 0365
        gbc.setState(0x2cf1, 0x9ef4, 0x29d0, 0x1454, 0xf294, 0xd6b2, 0x1, 0x1);
        gbc.writeMem(0x2cf1, { 0xcb, 0xe6 });
        gbc.writeMem(0xd6b2, { 0x9a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9ef4, gbc.sp());
        EXPECT(0x2cf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xd6b2));
        // CB E6 0366
        gbc.setState(0xc8d8, 0xcd88, 0x3aa0, 0x2eeb, 0x8f96, 0xa11, 0x0, 0x1);
        gbc.writeMem(0xa11, { 0x36 });
        gbc.writeMem(0xc8d8, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xcd88, gbc.sp());
        EXPECT(0xc8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8d8));
        EXPECT(0xe6, gbc.readMem(0xc8d9));
        // CB E6 0368
        gbc.setState(0x84e3, 0x3234, 0xffe0, 0xe648, 0x4473, 0x8004, 0x1, 0x1);
        gbc.writeMem(0x8004, { 0xba });
        gbc.writeMem(0x84e3, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3234, gbc.sp());
        EXPECT(0x84e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x8004));
        EXPECT(0xcb, gbc.readMem(0x84e3));
        EXPECT(0xe6, gbc.readMem(0x84e4));
        // CB E6 0369
        gbc.setState(0xd8f6, 0xbeba, 0xbc00, 0x7336, 0x5fdb, 0xea69, 0x1, 0x1);
        gbc.writeMem(0xd8f6, { 0xcb, 0xe6 });
        gbc.writeMem(0xea69, { 0xe9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbeba, gbc.sp());
        EXPECT(0xd8f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8f6));
        EXPECT(0xe6, gbc.readMem(0xd8f7));
        EXPECT(0xf9, gbc.readMem(0xea69));
        // CB E6 036A
        gbc.setState(0x4976, 0x8b94, 0x8aa0, 0x9cae, 0x3ae7, 0xab6e, 0x1, 0x1);
        gbc.writeMem(0x4976, { 0xcb, 0xe6 });
        gbc.writeMem(0xab6e, { 0xff });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8b94, gbc.sp());
        EXPECT(0x4978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xab6e));
        // CB E6 036B
        gbc.setState(0x7018, 0xe4e7, 0xcb70, 0x940, 0x6e9e, 0x5f9a, 0x0, 0x1);
        gbc.writeMem(0x5f9a, { 0x5a });
        gbc.writeMem(0x7018, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe4e7, gbc.sp());
        EXPECT(0x701a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 036C
        gbc.setState(0x3e15, 0x1115, 0xbf80, 0xa00e, 0x38d, 0xfdf5, 0x1, 0x0);
        gbc.writeMem(0x3e15, { 0xcb, 0xe6 });
        gbc.writeMem(0xfdf5, { 0xe5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1115, gbc.sp());
        EXPECT(0x3e17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xfdf5));
        // CB E6 0371
        gbc.setState(0x68c4, 0xfdfd, 0xcfb0, 0xa6a6, 0x9ee7, 0x9ec, 0x1, 0x0);
        gbc.writeMem(0x9ec, { 0xb9 });
        gbc.writeMem(0x68c4, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfdfd, gbc.sp());
        EXPECT(0x68c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 0372
        gbc.setState(0x2e12, 0x7674, 0x5140, 0xabab, 0xa529, 0x598c, 0x1, 0x1);
        gbc.writeMem(0x2e12, { 0xcb, 0xe6 });
        gbc.writeMem(0x598c, { 0x5e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7674, gbc.sp());
        EXPECT(0x2e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0373
        gbc.setState(0xd649, 0x3f51, 0xc540, 0x12a4, 0x6a50, 0x6e50, 0x1, 0x0);
        gbc.writeMem(0x6e50, { 0xd4 });
        gbc.writeMem(0xd649, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3f51, gbc.sp());
        EXPECT(0xd64b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd649));
        EXPECT(0xe6, gbc.readMem(0xd64a));
        // CB E6 0376
        gbc.setState(0x4d2a, 0xa771, 0x1c10, 0xf612, 0x37d9, 0xdaa1, 0x0, 0x1);
        gbc.writeMem(0x4d2a, { 0xcb, 0xe6 });
        gbc.writeMem(0xdaa1, { 0x68 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa771, gbc.sp());
        EXPECT(0x4d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdaa1));
        // CB E6 0378
        gbc.setState(0x6f48, 0xf4a, 0x7530, 0xcd7e, 0x1b67, 0xf69e, 0x1, 0x0);
        gbc.writeMem(0x6f48, { 0xcb, 0xe6 });
        gbc.writeMem(0xf69e, { 0xdb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf4a, gbc.sp());
        EXPECT(0x6f4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xf69e));
        // CB E6 0379
        gbc.setState(0xde8, 0x7b4d, 0x4ba0, 0x8fe7, 0x84ad, 0xbb87, 0x0, 0x1);
        gbc.writeMem(0xde8, { 0xcb, 0xe6 });
        gbc.writeMem(0xbb87, { 0xe1 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7b4d, gbc.sp());
        EXPECT(0xdea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbb87));
        // CB E6 037A
        gbc.setState(0x3002, 0xe4e6, 0x5a20, 0x25b7, 0xd25b, 0xf78f, 0x0, 0x1);
        gbc.writeMem(0x3002, { 0xcb, 0xe6 });
        gbc.writeMem(0xf78f, { 0xc5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe4e6, gbc.sp());
        EXPECT(0x3004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xf78f));
        // CB E6 037C
        gbc.setState(0x294c, 0x6c75, 0x9c0, 0x487a, 0xa02e, 0xf6f1, 0x1, 0x1);
        gbc.writeMem(0x294c, { 0xcb, 0xe6 });
        gbc.writeMem(0xf6f1, { 0x9b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6c75, gbc.sp());
        EXPECT(0x294e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xf6f1));
        // CB E6 037D
        gbc.setState(0x6584, 0x3d9d, 0xa8a0, 0xed4a, 0xdf11, 0xab35, 0x1, 0x0);
        gbc.writeMem(0x6584, { 0xcb, 0xe6 });
        gbc.writeMem(0xab35, { 0x20 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3d9d, gbc.sp());
        EXPECT(0x6586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xab35));
        // CB E6 037E
        gbc.setState(0x1b15, 0xe300, 0xc550, 0xd763, 0x42ff, 0x98c1, 0x0, 0x1);
        gbc.writeMem(0x1b15, { 0xcb, 0xe6 });
        gbc.writeMem(0x98c1, { 0xbc });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe300, gbc.sp());
        EXPECT(0x1b17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x98c1));
        // CB E6 0380
        gbc.setState(0x5834, 0xc83f, 0xc910, 0x2b8f, 0x4ab3, 0xe5c6, 0x1, 0x0);
        gbc.writeMem(0x5834, { 0xcb, 0xe6 });
        gbc.writeMem(0xe5c6, { 0x35 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc83f, gbc.sp());
        EXPECT(0x5836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xe5c6));
        // CB E6 0381
        gbc.setState(0x9679, 0x7e1d, 0x9b50, 0xa589, 0xc179, 0x37c9, 0x1, 0x0);
        gbc.writeMem(0x37c9, { 0xd8 });
        gbc.writeMem(0x9679, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7e1d, gbc.sp());
        EXPECT(0x967b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9679));
        EXPECT(0xe6, gbc.readMem(0x967a));
        // CB E6 0384
        gbc.setState(0x6f23, 0x5575, 0x9010, 0x4671, 0xc114, 0xcd1e, 0x0, 0x1);
        gbc.writeMem(0x6f23, { 0xcb, 0xe6 });
        gbc.writeMem(0xcd1e, { 0xbe });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5575, gbc.sp());
        EXPECT(0x6f25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xcd1e));
        // CB E6 0385
        gbc.setState(0xba48, 0xa387, 0x60b0, 0x4aa9, 0xf3c, 0xd7e7, 0x0, 0x0);
        gbc.writeMem(0xba48, { 0xcb, 0xe6 });
        gbc.writeMem(0xd7e7, { 0xe9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa387, gbc.sp());
        EXPECT(0xba4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba48));
        EXPECT(0xe6, gbc.readMem(0xba49));
        EXPECT(0xf9, gbc.readMem(0xd7e7));
        // CB E6 0386
        gbc.setState(0xd11a, 0xd2b0, 0x4f80, 0x734b, 0xa5b4, 0x9479, 0x1, 0x0);
        gbc.writeMem(0x9479, { 0x59 });
        gbc.writeMem(0xd11a, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd2b0, gbc.sp());
        EXPECT(0xd11c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x9479));
        EXPECT(0xcb, gbc.readMem(0xd11a));
        EXPECT(0xe6, gbc.readMem(0xd11b));
        // CB E6 0387
        gbc.setState(0x8b29, 0xa2d6, 0xc130, 0x5ac, 0x7a83, 0xc1da, 0x0, 0x1);
        gbc.writeMem(0x8b29, { 0xcb, 0xe6 });
        gbc.writeMem(0xc1da, { 0x7c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa2d6, gbc.sp());
        EXPECT(0x8b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b29));
        EXPECT(0xe6, gbc.readMem(0x8b2a));
        EXPECT(0x7c, gbc.readMem(0xc1da));
        // CB E6 0389
        gbc.setState(0x1127, 0xe0c3, 0x5c30, 0x3206, 0xf650, 0x422d, 0x0, 0x1);
        gbc.writeMem(0x1127, { 0xcb, 0xe6 });
        gbc.writeMem(0x422d, { 0x55 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe0c3, gbc.sp());
        EXPECT(0x1129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 038B
        gbc.setState(0x5a52, 0x93d8, 0xbcf0, 0xbd7b, 0xb025, 0x7c98, 0x1, 0x0);
        gbc.writeMem(0x5a52, { 0xcb, 0xe6 });
        gbc.writeMem(0x7c98, { 0xd6 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x93d8, gbc.sp());
        EXPECT(0x5a54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 038C
        gbc.setState(0x95f1, 0xa0b8, 0x9e10, 0x797f, 0xad93, 0xfebe, 0x0, 0x1);
        gbc.writeMem(0x95f1, { 0xcb, 0xe6 });
        gbc.writeMem(0xfebe, { 0xc0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa0b8, gbc.sp());
        EXPECT(0x95f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f1));
        EXPECT(0xe6, gbc.readMem(0x95f2));
        EXPECT(0xd0, gbc.readMem(0xfebe));
        // CB E6 038D
        gbc.setState(0xb16b, 0x2d3d, 0x8a70, 0xedfe, 0xa177, 0x4b63, 0x0, 0x1);
        gbc.writeMem(0x4b63, { 0x13 });
        gbc.writeMem(0xb16b, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2d3d, gbc.sp());
        EXPECT(0xb16d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb16b));
        EXPECT(0xe6, gbc.readMem(0xb16c));
        // CB E6 038F
        gbc.setState(0x3bbd, 0x17a9, 0x1e80, 0xd7ea, 0x4132, 0x19f0, 0x0, 0x0);
        gbc.writeMem(0x19f0, { 0xd4 });
        gbc.writeMem(0x3bbd, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x17a9, gbc.sp());
        EXPECT(0x3bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 0390
        gbc.setState(0x8c75, 0xc4fc, 0xa9b0, 0x1719, 0xe6ab, 0x6ab, 0x0, 0x1);
        gbc.writeMem(0x6ab, { 0x93 });
        gbc.writeMem(0x8c75, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc4fc, gbc.sp());
        EXPECT(0x8c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c75));
        EXPECT(0xe6, gbc.readMem(0x8c76));
        // CB E6 0393
        gbc.setState(0x578e, 0xa7a9, 0xda40, 0xed7f, 0x6b1b, 0xb611, 0x1, 0x1);
        gbc.writeMem(0x578e, { 0xcb, 0xe6 });
        gbc.writeMem(0xb611, { 0xe4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa7a9, gbc.sp());
        EXPECT(0x5790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xb611));
        // CB E6 0394
        gbc.setState(0xd8e9, 0x8934, 0xa620, 0x60ec, 0x7074, 0xf128, 0x1, 0x1);
        gbc.writeMem(0xd8e9, { 0xcb, 0xe6 });
        gbc.writeMem(0xf128, { 0xee });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8934, gbc.sp());
        EXPECT(0xd8eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e9));
        EXPECT(0xe6, gbc.readMem(0xd8ea));
        EXPECT(0xfe, gbc.readMem(0xf128));
        // CB E6 0397
        gbc.setState(0x1907, 0x79e6, 0x2ec0, 0x12ac, 0x28c1, 0x3b12, 0x0, 0x0);
        gbc.writeMem(0x1907, { 0xcb, 0xe6 });
        gbc.writeMem(0x3b12, { 0x94 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x79e6, gbc.sp());
        EXPECT(0x1909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 039A
        gbc.setState(0x3d2f, 0xbb85, 0x5b90, 0xb0d2, 0xffd7, 0xc3e2, 0x0, 0x1);
        gbc.writeMem(0x3d2f, { 0xcb, 0xe6 });
        gbc.writeMem(0xc3e2, { 0x59 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xbb85, gbc.sp());
        EXPECT(0x3d31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xc3e2));
        // CB E6 039B
        gbc.setState(0x2d16, 0xb72b, 0x13b0, 0x196b, 0x6805, 0xf36e, 0x1, 0x0);
        gbc.writeMem(0x2d16, { 0xcb, 0xe6 });
        gbc.writeMem(0xf36e, { 0x5e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb72b, gbc.sp());
        EXPECT(0x2d18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xf36e));
        // CB E6 039C
        gbc.setState(0x8efe, 0x5e6d, 0xd9f0, 0xcbde, 0x3d5d, 0x5c0d, 0x1, 0x1);
        gbc.writeMem(0x5c0d, { 0xbd });
        gbc.writeMem(0x8efe, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5e6d, gbc.sp());
        EXPECT(0x8f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8efe));
        EXPECT(0xe6, gbc.readMem(0x8eff));
        // CB E6 039E
        gbc.setState(0x5660, 0xe969, 0x80c0, 0x97c, 0x4c82, 0xd347, 0x0, 0x0);
        gbc.writeMem(0x5660, { 0xcb, 0xe6 });
        gbc.writeMem(0xd347, { 0xf3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe969, gbc.sp());
        EXPECT(0x5662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xd347));
        // CB E6 03A1
        gbc.setState(0x5cb7, 0x63f5, 0xd7c0, 0xc015, 0x38e8, 0xb32a, 0x0, 0x1);
        gbc.writeMem(0x5cb7, { 0xcb, 0xe6 });
        gbc.writeMem(0xb32a, { 0xbc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x63f5, gbc.sp());
        EXPECT(0x5cb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb32a));
        // CB E6 03A3
        gbc.setState(0xd672, 0xcbd5, 0xd6c0, 0xc45d, 0x62d, 0xc472, 0x0, 0x0);
        gbc.writeMem(0xc472, { 0x36 });
        gbc.writeMem(0xd672, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xcbd5, gbc.sp());
        EXPECT(0xd674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xc472));
        EXPECT(0xcb, gbc.readMem(0xd672));
        EXPECT(0xe6, gbc.readMem(0xd673));
        // CB E6 03A5
        gbc.setState(0xdc60, 0x4564, 0x6d70, 0x8e76, 0xe1bf, 0x50bd, 0x1, 0x1);
        gbc.writeMem(0x50bd, { 0xf4 });
        gbc.writeMem(0xdc60, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4564, gbc.sp());
        EXPECT(0xdc62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc60));
        EXPECT(0xe6, gbc.readMem(0xdc61));
        // CB E6 03A6
        gbc.setState(0xe28, 0xa669, 0xe510, 0xd1f4, 0xb879, 0x8e57, 0x0, 0x0);
        gbc.writeMem(0xe28, { 0xcb, 0xe6 });
        gbc.writeMem(0x8e57, { 0x5b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa669, gbc.sp());
        EXPECT(0xe2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8e57));
        // CB E6 03A8
        gbc.setState(0x2726, 0x7e5a, 0x60e0, 0x6dcb, 0x6ccd, 0xde03, 0x1, 0x1);
        gbc.writeMem(0x2726, { 0xcb, 0xe6 });
        gbc.writeMem(0xde03, { 0xe5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7e5a, gbc.sp());
        EXPECT(0x2728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xde03));
        // CB E6 03A9
        gbc.setState(0x93b3, 0x13d4, 0x1430, 0xfe43, 0x9ec, 0xc5a6, 0x1, 0x0);
        gbc.writeMem(0x93b3, { 0xcb, 0xe6 });
        gbc.writeMem(0xc5a6, { 0xd4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x13d4, gbc.sp());
        EXPECT(0x93b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93b3));
        EXPECT(0xe6, gbc.readMem(0x93b4));
        EXPECT(0xd4, gbc.readMem(0xc5a6));
        // CB E6 03AA
        gbc.setState(0xef81, 0x1424, 0xe3d0, 0x9c56, 0x8dc5, 0xf0be, 0x0, 0x0);
        gbc.writeMem(0xef81, { 0xcb, 0xe6 });
        gbc.writeMem(0xf0be, { 0xe0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1424, gbc.sp());
        EXPECT(0xef83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef81));
        EXPECT(0xe6, gbc.readMem(0xef82));
        EXPECT(0xf0, gbc.readMem(0xf0be));
        // CB E6 03AB
        gbc.setState(0xed49, 0xba88, 0x31f0, 0x369c, 0xe754, 0xb017, 0x1, 0x1);
        gbc.writeMem(0xb017, { 0x37 });
        gbc.writeMem(0xed49, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xba88, gbc.sp());
        EXPECT(0xed4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb017));
        EXPECT(0xcb, gbc.readMem(0xed49));
        EXPECT(0xe6, gbc.readMem(0xed4a));
        // CB E6 03AD
        gbc.setState(0xa0cd, 0xa55c, 0x84b0, 0xbe6, 0xf08, 0xb404, 0x0, 0x0);
        gbc.writeMem(0xa0cd, { 0xcb, 0xe6 });
        gbc.writeMem(0xb404, { 0x4e });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa55c, gbc.sp());
        EXPECT(0xa0cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0cd));
        EXPECT(0xe6, gbc.readMem(0xa0ce));
        EXPECT(0x5e, gbc.readMem(0xb404));
        // CB E6 03AE
        gbc.setState(0xe79e, 0x3b22, 0xa200, 0xf9bc, 0xc608, 0xbf87, 0x1, 0x0);
        gbc.writeMem(0xbf87, { 0x86 });
        gbc.writeMem(0xe79e, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3b22, gbc.sp());
        EXPECT(0xe7a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xbf87));
        EXPECT(0xcb, gbc.readMem(0xe79e));
        EXPECT(0xe6, gbc.readMem(0xe79f));
        // CB E6 03AF
        gbc.setState(0x4f14, 0xb89c, 0xaa50, 0x55b7, 0x9911, 0x895d, 0x1, 0x1);
        gbc.writeMem(0x4f14, { 0xcb, 0xe6 });
        gbc.writeMem(0x895d, { 0x1b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb89c, gbc.sp());
        EXPECT(0x4f16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x895d));
        // CB E6 03B1
        gbc.setState(0x8ade, 0xdcdd, 0x2a60, 0xb904, 0x4bc8, 0xe614, 0x1, 0x1);
        gbc.writeMem(0x8ade, { 0xcb, 0xe6 });
        gbc.writeMem(0xe614, { 0xdb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdcdd, gbc.sp());
        EXPECT(0x8ae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ade));
        EXPECT(0xe6, gbc.readMem(0x8adf));
        EXPECT(0xdb, gbc.readMem(0xe614));
        // CB E6 03B2
        gbc.setState(0xd58f, 0xd10b, 0x6e10, 0x8966, 0xd428, 0xf0f, 0x1, 0x0);
        gbc.writeMem(0xf0f, { 0xba });
        gbc.writeMem(0xd58f, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd10b, gbc.sp());
        EXPECT(0xd591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd58f));
        EXPECT(0xe6, gbc.readMem(0xd590));
        // CB E6 03B5
        gbc.setState(0x278f, 0xdfdd, 0x9450, 0xa81f, 0x7cea, 0x7fc5, 0x1, 0x1);
        gbc.writeMem(0x278f, { 0xcb, 0xe6 });
        gbc.writeMem(0x7fc5, { 0x97 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdfdd, gbc.sp());
        EXPECT(0x2791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 03B7
        gbc.setState(0x1d26, 0x50a7, 0xf7b0, 0xbbf3, 0x726d, 0x3e99, 0x0, 0x0);
        gbc.writeMem(0x1d26, { 0xcb, 0xe6 });
        gbc.writeMem(0x3e99, { 0xd6 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x50a7, gbc.sp());
        EXPECT(0x1d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 03B8
        gbc.setState(0xd9, 0x814f, 0x3e90, 0x20dc, 0x200d, 0x2f58, 0x0, 0x1);
        gbc.writeMem(0xd9, { 0xcb, 0xe6 });
        gbc.writeMem(0x2f58, { 0x9a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x814f, gbc.sp());
        EXPECT(0xdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 03B9
        gbc.setState(0xe659, 0x4d39, 0x4ba0, 0x2959, 0xb8c6, 0x29c4, 0x1, 0x1);
        gbc.writeMem(0x29c4, { 0x97 });
        gbc.writeMem(0xe659, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4d39, gbc.sp());
        EXPECT(0xe65b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe659));
        EXPECT(0xe6, gbc.readMem(0xe65a));
        // CB E6 03BB
        gbc.setState(0x98b8, 0x2442, 0x4880, 0xa999, 0xad15, 0x8e8e, 0x0, 0x0);
        gbc.writeMem(0x8e8e, { 0x72 });
        gbc.writeMem(0x98b8, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2442, gbc.sp());
        EXPECT(0x98ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8e8e));
        EXPECT(0xcb, gbc.readMem(0x98b8));
        EXPECT(0xe6, gbc.readMem(0x98b9));
        // CB E6 03BC
        gbc.setState(0xc9b4, 0x872b, 0xb440, 0xd2d, 0xffc4, 0xb1ac, 0x0, 0x1);
        gbc.writeMem(0xb1ac, { 0x88 });
        gbc.writeMem(0xc9b4, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x872b, gbc.sp());
        EXPECT(0xc9b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb1ac));
        EXPECT(0xcb, gbc.readMem(0xc9b4));
        EXPECT(0xe6, gbc.readMem(0xc9b5));
        // CB E6 03BD
        gbc.setState(0xa7d1, 0xc133, 0x29d0, 0xef70, 0x7b2f, 0x889, 0x0, 0x0);
        gbc.writeMem(0x889, { 0x36 });
        gbc.writeMem(0xa7d1, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc133, gbc.sp());
        EXPECT(0xa7d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d1));
        EXPECT(0xe6, gbc.readMem(0xa7d2));
        // CB E6 03BE
        gbc.setState(0x1f75, 0x615d, 0xf3e0, 0x43b7, 0x2d5a, 0xd5de, 0x0, 0x1);
        gbc.writeMem(0x1f75, { 0xcb, 0xe6 });
        gbc.writeMem(0xd5de, { 0xde });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x615d, gbc.sp());
        EXPECT(0x1f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xd5de));
        // CB E6 03BF
        gbc.setState(0x1f02, 0xe580, 0xc990, 0xe752, 0x49a3, 0x9db1, 0x1, 0x1);
        gbc.writeMem(0x1f02, { 0xcb, 0xe6 });
        gbc.writeMem(0x9db1, { 0xf2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe580, gbc.sp());
        EXPECT(0x1f04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x9db1));
        // CB E6 03C0
        gbc.setState(0x6762, 0x531f, 0xd630, 0xb9a0, 0xd0b0, 0x8413, 0x1, 0x0);
        gbc.writeMem(0x6762, { 0xcb, 0xe6 });
        gbc.writeMem(0x8413, { 0xb7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x531f, gbc.sp());
        EXPECT(0x6764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8413));
        // CB E6 03C1
        gbc.setState(0xc3ff, 0xda75, 0x50c0, 0xe070, 0x63db, 0x3f2, 0x0, 0x0);
        gbc.writeMem(0x3f2, { 0x77 });
        gbc.writeMem(0xc3ff, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xda75, gbc.sp());
        EXPECT(0xc401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ff));
        EXPECT(0xe6, gbc.readMem(0xc400));
        // CB E6 03C2
        gbc.setState(0x15eb, 0x3800, 0x1b60, 0xb2ce, 0xf049, 0x1a17, 0x0, 0x1);
        gbc.writeMem(0x15eb, { 0xcb, 0xe6 });
        gbc.writeMem(0x1a17, { 0x32 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3800, gbc.sp());
        EXPECT(0x15ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 03C3
        gbc.setState(0xc5c4, 0xcee7, 0xa8d0, 0x1481, 0x6580, 0xabed, 0x1, 0x1);
        gbc.writeMem(0xabed, { 0x4a });
        gbc.writeMem(0xc5c4, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcee7, gbc.sp());
        EXPECT(0xc5c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xabed));
        EXPECT(0xcb, gbc.readMem(0xc5c4));
        EXPECT(0xe6, gbc.readMem(0xc5c5));
        // CB E6 03C4
        gbc.setState(0xab65, 0x50b2, 0xd60, 0x968f, 0x198, 0x8757, 0x0, 0x0);
        gbc.writeMem(0x8757, { 0xc9 });
        gbc.writeMem(0xab65, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x50b2, gbc.sp());
        EXPECT(0xab67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8757));
        EXPECT(0xcb, gbc.readMem(0xab65));
        EXPECT(0xe6, gbc.readMem(0xab66));
        // CB E6 03C7
        gbc.setState(0x22c0, 0xf6b3, 0x1bf0, 0xc968, 0xcca5, 0x6157, 0x1, 0x1);
        gbc.writeMem(0x22c0, { 0xcb, 0xe6 });
        gbc.writeMem(0x6157, { 0x14 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf6b3, gbc.sp());
        EXPECT(0x22c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 03C9
        gbc.setState(0x28a8, 0xaef5, 0xb140, 0xb0b3, 0xb1c, 0x3635, 0x0, 0x1);
        gbc.writeMem(0x28a8, { 0xcb, 0xe6 });
        gbc.writeMem(0x3635, { 0xdb });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xaef5, gbc.sp());
        EXPECT(0x28aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 03CB
        gbc.setState(0x6f87, 0x649e, 0xd780, 0xfc13, 0x8dd6, 0xa091, 0x1, 0x1);
        gbc.writeMem(0x6f87, { 0xcb, 0xe6 });
        gbc.writeMem(0xa091, { 0xc4 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x649e, gbc.sp());
        EXPECT(0x6f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa091));
        // CB E6 03CC
        gbc.setState(0x198a, 0x4c5, 0x6940, 0x8c42, 0x1167, 0xd5cb, 0x0, 0x1);
        gbc.writeMem(0x198a, { 0xcb, 0xe6 });
        gbc.writeMem(0xd5cb, { 0x8d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4c5, gbc.sp());
        EXPECT(0x198c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd5cb));
        // CB E6 03D1
        gbc.setState(0xeca6, 0xb099, 0x750, 0x7039, 0xf4ba, 0xed8f, 0x0, 0x1);
        gbc.writeMem(0xeca6, { 0xcb, 0xe6 });
        gbc.writeMem(0xed8f, { 0xb0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb099, gbc.sp());
        EXPECT(0xeca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeca6));
        EXPECT(0xe6, gbc.readMem(0xeca7));
        EXPECT(0xb0, gbc.readMem(0xed8f));
        // CB E6 03D2
        gbc.setState(0x59e0, 0xc08f, 0xfe0, 0xef19, 0x5c26, 0x1ee4, 0x0, 0x0);
        gbc.writeMem(0x1ee4, { 0xde });
        gbc.writeMem(0x59e0, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc08f, gbc.sp());
        EXPECT(0x59e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 03D3
        gbc.setState(0x77d2, 0xbdfa, 0xd990, 0x44ea, 0x0, 0xd55f, 0x1, 0x0);
        gbc.writeMem(0x77d2, { 0xcb, 0xe6 });
        gbc.writeMem(0xd55f, { 0x5a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbdfa, gbc.sp());
        EXPECT(0x77d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xd55f));
        // CB E6 03D6
        gbc.setState(0x7540, 0x269d, 0x8190, 0x2868, 0x5e93, 0x3655, 0x1, 0x1);
        gbc.writeMem(0x3655, { 0x12 });
        gbc.writeMem(0x7540, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x269d, gbc.sp());
        EXPECT(0x7542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 03D7
        gbc.setState(0x1455, 0xa35d, 0xaf80, 0x9247, 0xff06, 0xe0a1, 0x0, 0x1);
        gbc.writeMem(0x1455, { 0xcb, 0xe6 });
        gbc.writeMem(0xe0a1, { 0xc9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa35d, gbc.sp());
        EXPECT(0x1457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe0a1));
        // CB E6 03DA
        gbc.setState(0x50bf, 0x660d, 0x2900, 0xa9c0, 0xf3c, 0x1278, 0x0, 0x1);
        gbc.writeMem(0x1278, { 0xfe });
        gbc.writeMem(0x50bf, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x660d, gbc.sp());
        EXPECT(0x50c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E6 03DB
        gbc.setState(0xdcd1, 0x18a9, 0x9300, 0x59b8, 0x5af8, 0xe9ed, 0x1, 0x1);
        gbc.writeMem(0xdcd1, { 0xcb, 0xe6 });
        gbc.writeMem(0xe9ed, { 0x9b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x18a9, gbc.sp());
        EXPECT(0xdcd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcd1));
        EXPECT(0xe6, gbc.readMem(0xdcd2));
        EXPECT(0x9b, gbc.readMem(0xe9ed));
        // CB E6 03DC
        gbc.setState(0x1254, 0xfd28, 0x9f0, 0x2367, 0x751, 0x6e52, 0x1, 0x0);
        gbc.writeMem(0x1254, { 0xcb, 0xe6 });
        gbc.writeMem(0x6e52, { 0xb1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xfd28, gbc.sp());
        EXPECT(0x1256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E6 03DF
        gbc.setState(0x99a2, 0x9379, 0x5840, 0x5ffd, 0x4afc, 0xbde9, 0x0, 0x1);
        gbc.writeMem(0x99a2, { 0xcb, 0xe6 });
        gbc.writeMem(0xbde9, { 0xac });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9379, gbc.sp());
        EXPECT(0x99a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99a2));
        EXPECT(0xe6, gbc.readMem(0x99a3));
        EXPECT(0xbc, gbc.readMem(0xbde9));
        // CB E6 03E0
        gbc.setState(0xd4b1, 0x23bb, 0xbd50, 0x4076, 0xdf89, 0xff47, 0x1, 0x1);
        gbc.writeMem(0xd4b1, { 0xcb, 0xe6 });
        gbc.writeMem(0xff47, { 0x98 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x23bb, gbc.sp());
        EXPECT(0xd4b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4b1));
        EXPECT(0xe6, gbc.readMem(0xd4b2));
        EXPECT(0x98, gbc.readMem(0xff47));
        // CB E6 03E1
        gbc.setState(0xd4a8, 0x952a, 0x7bf0, 0x5465, 0x9586, 0xb79d, 0x1, 0x1);
        gbc.writeMem(0xb79d, { 0xcf });
        gbc.writeMem(0xd4a8, { 0xcb, 0xe6 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x952a, gbc.sp());
        EXPECT(0xd4aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xb79d));
        EXPECT(0xcb, gbc.readMem(0xd4a8));
        EXPECT(0xe6, gbc.readMem(0xd4a9));
        // CB E6 03E4
        gbc.setState(0x8c4f, 0xae87, 0x6420, 0x6291, 0xb2c5, 0xa9ea, 0x0, 0x0);
        gbc.writeMem(0x8c4f, { 0xcb, 0xe6 });
        gbc.writeMem(0xa9ea, { 0x56 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xae87, gbc.sp());
        EXPECT(0x8c51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c4f));
        EXPECT(0xe6, gbc.readMem(0x8c50));
        EXPECT(0x56, gbc.readMem(0xa9ea));
        // CB E6 03E5
        gbc.setState(0xc43c, 0xc2f6, 0x46a0, 0x5f2e, 0xb37b, 0xc4d1, 0x1, 0x1);
        gbc.writeMem(0xc43c, { 0xcb, 0xe6 });
        gbc.writeMem(0xc4d1, { 0x33 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc2f6, gbc.sp());
        EXPECT(0xc43e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc43c));
        EXPECT(0xe6, gbc.readMem(0xc43d));
        EXPECT(0x33, gbc.readMem(0xc4d1));
        // CB E6 03E7
        gbc.setState(0xa120, 0x6c74, 0x4440, 0xbb7a, 0x93c3, 0xb471, 0x0, 0x1);
        gbc.writeMem(0xa120, { 0xcb, 0xe6 });
        gbc.writeMem(0xb471, { 0x15 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6c74, gbc.sp());
        EXPECT(0xa122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa120));
        EXPECT(0xe6, gbc.readMem(0xa121));
        EXPECT(0x15, gbc.readMem(0xb471));
    }
