    TEST(gbcemu, opcode_26) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 26 0000
        gbc.setState(0xcb0e, 0x3d9f, 0x53b0, 0x969b, 0xa63d, 0xd225, 0x1, 0x0);
        gbc.writeMem(0xcb0e, { 0x26, 0xd });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3d9f, gbc.sp());
        EXPECT(0xcb10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xcb0e));
        EXPECT(0xd, gbc.readMem(0xcb0f));
        // 26 0001
        gbc.setState(0x5643, 0xe4d6, 0x42e0, 0x946a, 0x465, 0xbbee, 0x0, 0x1);
        gbc.writeMem(0x5643, { 0x26, 0xc3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe4d6, gbc.sp());
        EXPECT(0x5645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0002
        gbc.setState(0xd08e, 0xb9c8, 0xdf30, 0x6ed2, 0x1189, 0xad81, 0x0, 0x0);
        gbc.writeMem(0xd08e, { 0x26, 0x9b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb9c8, gbc.sp());
        EXPECT(0xd090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd08e));
        EXPECT(0x9b, gbc.readMem(0xd08f));
        // 26 0003
        gbc.setState(0xbb94, 0x30b0, 0x6e10, 0x8ac5, 0x243e, 0x9840, 0x0, 0x0);
        gbc.writeMem(0xbb94, { 0x26, 0x8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x30b0, gbc.sp());
        EXPECT(0xbb96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbb94));
        EXPECT(0x8, gbc.readMem(0xbb95));
        // 26 0004
        gbc.setState(0xd78c, 0xc0ae, 0xb330, 0x3d18, 0xfe60, 0x74d3, 0x0, 0x0);
        gbc.writeMem(0xd78c, { 0x26, 0x63 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc0ae, gbc.sp());
        EXPECT(0xd78e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd78c));
        EXPECT(0x63, gbc.readMem(0xd78d));
        // 26 0005
        gbc.setState(0xa42d, 0xf5fa, 0x4550, 0x345b, 0x746, 0x2bf9, 0x0, 0x1);
        gbc.writeMem(0xa42d, { 0x26, 0xda });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf5fa, gbc.sp());
        EXPECT(0xa42f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa42d));
        EXPECT(0xda, gbc.readMem(0xa42e));
        // 26 0006
        gbc.setState(0x2c1e, 0xf33c, 0xe000, 0x1b88, 0xdfbf, 0x5180, 0x1, 0x0);
        gbc.writeMem(0x2c1e, { 0x26, 0x18 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf33c, gbc.sp());
        EXPECT(0x2c20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0007
        gbc.setState(0x30fc, 0xe433, 0xc6c0, 0x48a0, 0xf127, 0xf30f, 0x1, 0x1);
        gbc.writeMem(0x30fc, { 0x26, 0x5f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe433, gbc.sp());
        EXPECT(0x30fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0008
        gbc.setState(0x8f70, 0xf948, 0xec00, 0x9431, 0xbece, 0x81d8, 0x1, 0x1);
        gbc.writeMem(0x8f70, { 0x26, 0xff });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf948, gbc.sp());
        EXPECT(0x8f72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8f70));
        EXPECT(0xff, gbc.readMem(0x8f71));
        // 26 0009
        gbc.setState(0x7848, 0x11c0, 0xe100, 0x2ee8, 0xbe24, 0x8155, 0x1, 0x1);
        gbc.writeMem(0x7848, { 0x26, 0x8d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x11c0, gbc.sp());
        EXPECT(0x784a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 000A
        gbc.setState(0x61e8, 0x914, 0x87b0, 0x2d22, 0x4e18, 0x8f7b, 0x1, 0x1);
        gbc.writeMem(0x61e8, { 0x26, 0xd8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x914, gbc.sp());
        EXPECT(0x61ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 000B
        gbc.setState(0x1bf, 0x8a16, 0x27e0, 0xa540, 0xa177, 0x1c53, 0x0, 0x0);
        gbc.writeMem(0x1bf, { 0x26, 0x57 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8a16, gbc.sp());
        EXPECT(0x1c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 000C
        gbc.setState(0x608f, 0xe112, 0xbec0, 0x577d, 0xaf20, 0xb197, 0x1, 0x1);
        gbc.writeMem(0x608f, { 0x26, 0xfc });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe112, gbc.sp());
        EXPECT(0x6091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 000E
        gbc.setState(0x3b3c, 0x4788, 0xe870, 0x6037, 0xa8e6, 0x9156, 0x1, 0x0);
        gbc.writeMem(0x3b3c, { 0x26, 0x8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4788, gbc.sp());
        EXPECT(0x3b3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 000F
        gbc.setState(0x23c3, 0xfa1a, 0x6760, 0x5e30, 0x534b, 0x1546, 0x1, 0x1);
        gbc.writeMem(0x23c3, { 0x26, 0x6e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xfa1a, gbc.sp());
        EXPECT(0x23c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0010
        gbc.setState(0xc826, 0x8587, 0xa750, 0x6e50, 0xecc1, 0x8d9d, 0x0, 0x1);
        gbc.writeMem(0xc826, { 0x26, 0xd0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8587, gbc.sp());
        EXPECT(0xc828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc826));
        EXPECT(0xd0, gbc.readMem(0xc827));
        // 26 0011
        gbc.setState(0x7e7, 0x13a, 0xd9d0, 0x9e1e, 0x7070, 0x1571, 0x1, 0x1);
        gbc.writeMem(0x7e7, { 0x26, 0x58 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x13a, gbc.sp());
        EXPECT(0x7e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0012
        gbc.setState(0x8089, 0x4505, 0xef90, 0x14f5, 0x5ee0, 0x533a, 0x0, 0x1);
        gbc.writeMem(0x8089, { 0x26, 0xba });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4505, gbc.sp());
        EXPECT(0x808b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8089));
        EXPECT(0xba, gbc.readMem(0x808a));
        // 26 0013
        gbc.setState(0x4c50, 0x8e7, 0x9100, 0xaa0b, 0x47b7, 0x13fb, 0x1, 0x0);
        gbc.writeMem(0x4c50, { 0x26, 0xdd });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8e7, gbc.sp());
        EXPECT(0x4c52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0014
        gbc.setState(0x8c5b, 0xa7a1, 0xbef0, 0xc54f, 0xe42a, 0xa9d3, 0x1, 0x0);
        gbc.writeMem(0x8c5b, { 0x26, 0xd8 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa7a1, gbc.sp());
        EXPECT(0x8c5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8c5b));
        EXPECT(0xd8, gbc.readMem(0x8c5c));
        // 26 0016
        gbc.setState(0x97dc, 0x6991, 0x8ec0, 0xc677, 0xbf4c, 0xb7cf, 0x0, 0x1);
        gbc.writeMem(0x97dc, { 0x26, 0x30 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6991, gbc.sp());
        EXPECT(0x97de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x97dc));
        EXPECT(0x30, gbc.readMem(0x97dd));
        // 26 0017
        gbc.setState(0x635f, 0xa921, 0xcb00, 0x3841, 0x95b0, 0x1316, 0x0, 0x1);
        gbc.writeMem(0x635f, { 0x26, 0xbd });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa921, gbc.sp());
        EXPECT(0x6361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0018
        gbc.setState(0x81d3, 0x4932, 0x68a0, 0xd7bf, 0x3e46, 0x9109, 0x1, 0x1);
        gbc.writeMem(0x81d3, { 0x26, 0x6a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4932, gbc.sp());
        EXPECT(0x81d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x81d3));
        EXPECT(0x6a, gbc.readMem(0x81d4));
        // 26 0019
        gbc.setState(0xa06d, 0xece4, 0xe030, 0x76ff, 0x3eb6, 0xeb72, 0x0, 0x0);
        gbc.writeMem(0xa06d, { 0x26, 0xd5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xece4, gbc.sp());
        EXPECT(0xa06f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa06d));
        EXPECT(0xd5, gbc.readMem(0xa06e));
        // 26 001A
        gbc.setState(0x8025, 0x1bf4, 0x75d0, 0x251c, 0x3a70, 0xa1a2, 0x1, 0x0);
        gbc.writeMem(0x8025, { 0x26, 0x4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1bf4, gbc.sp());
        EXPECT(0x8027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8025));
        EXPECT(0x4, gbc.readMem(0x8026));
        // 26 001B
        gbc.setState(0x79c2, 0xbe0a, 0xd8c0, 0xd8b3, 0xf3c7, 0xbb82, 0x0, 0x0);
        gbc.writeMem(0x79c2, { 0x26, 0xc1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbe0a, gbc.sp());
        EXPECT(0x79c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 001C
        gbc.setState(0xd679, 0xd850, 0xd0c0, 0x657b, 0x2c44, 0xb6a6, 0x0, 0x0);
        gbc.writeMem(0xd679, { 0x26, 0x64 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd850, gbc.sp());
        EXPECT(0xd67b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd679));
        EXPECT(0x64, gbc.readMem(0xd67a));
        // 26 001D
        gbc.setState(0x10b, 0x94a5, 0xd3c0, 0x9133, 0xb3f4, 0x441, 0x1, 0x1);
        gbc.writeMem(0x10b, { 0x26, 0xea });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x94a5, gbc.sp());
        EXPECT(0x10d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 001E
        gbc.setState(0x2af6, 0x8c76, 0x2700, 0x129c, 0x9f89, 0xc753, 0x0, 0x0);
        gbc.writeMem(0x2af6, { 0x26, 0x8e });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8c76, gbc.sp());
        EXPECT(0x2af8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 001F
        gbc.setState(0x289e, 0x1d84, 0x91d0, 0x843a, 0x1dea, 0x6b98, 0x0, 0x1);
        gbc.writeMem(0x289e, { 0x26, 0x85 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1d84, gbc.sp());
        EXPECT(0x28a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0020
        gbc.setState(0x62e1, 0xbd5d, 0xdc80, 0x1ca7, 0x72e5, 0x2f26, 0x0, 0x1);
        gbc.writeMem(0x62e1, { 0x26, 0xd2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbd5d, gbc.sp());
        EXPECT(0x62e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0021
        gbc.setState(0x3dc3, 0x65d1, 0xe900, 0x6efe, 0x529a, 0xf9, 0x1, 0x0);
        gbc.writeMem(0x3dc3, { 0x26, 0x76 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x65d1, gbc.sp());
        EXPECT(0x3dc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0022
        gbc.setState(0x81d8, 0xe633, 0x7a00, 0xef48, 0x6324, 0xd338, 0x1, 0x1);
        gbc.writeMem(0x81d8, { 0x26, 0xb7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe633, gbc.sp());
        EXPECT(0x81da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x81d8));
        EXPECT(0xb7, gbc.readMem(0x81d9));
        // 26 0023
        gbc.setState(0x617d, 0xb930, 0xb630, 0x41fa, 0xcbd8, 0x2577, 0x0, 0x0);
        gbc.writeMem(0x617d, { 0x26, 0x6d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb930, gbc.sp());
        EXPECT(0x617f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0024
        gbc.setState(0x3ade, 0x9ced, 0x9a10, 0x6d64, 0x3189, 0x5e1f, 0x1, 0x1);
        gbc.writeMem(0x3ade, { 0x26, 0xdb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9ced, gbc.sp());
        EXPECT(0x3ae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0025
        gbc.setState(0x680b, 0x652f, 0x2810, 0x89a5, 0x66ef, 0xd02, 0x0, 0x0);
        gbc.writeMem(0x680b, { 0x26, 0x3b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x652f, gbc.sp());
        EXPECT(0x680d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0027
        gbc.setState(0xbf44, 0x6857, 0xd1e0, 0x2d44, 0x796f, 0x5cab, 0x0, 0x1);
        gbc.writeMem(0xbf44, { 0x26, 0x77 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6857, gbc.sp());
        EXPECT(0xbf46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbf44));
        EXPECT(0x77, gbc.readMem(0xbf45));
        // 26 0028
        gbc.setState(0x3e95, 0x765e, 0x4b60, 0x4477, 0xf110, 0xbbca, 0x1, 0x0);
        gbc.writeMem(0x3e95, { 0x26, 0x28 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x765e, gbc.sp());
        EXPECT(0x3e97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0029
        gbc.setState(0x8d01, 0x1b1e, 0x8090, 0xb7b1, 0xeab2, 0xd43, 0x1, 0x1);
        gbc.writeMem(0x8d01, { 0x26, 0xaa });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1b1e, gbc.sp());
        EXPECT(0x8d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8d01));
        EXPECT(0xaa, gbc.readMem(0x8d02));
        // 26 002A
        gbc.setState(0x3964, 0xd878, 0x30c0, 0x7e0c, 0xb3e0, 0x690c, 0x1, 0x1);
        gbc.writeMem(0x3964, { 0x26, 0x15 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd878, gbc.sp());
        EXPECT(0x3966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 002B
        gbc.setState(0x6361, 0x3234, 0x6d60, 0x87f8, 0x6f1f, 0x3ae2, 0x0, 0x1);
        gbc.writeMem(0x6361, { 0x26, 0xcf });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3234, gbc.sp());
        EXPECT(0x6363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 002C
        gbc.setState(0x67aa, 0xa98a, 0xa150, 0xe977, 0x3683, 0x7d65, 0x0, 0x1);
        gbc.writeMem(0x67aa, { 0x26, 0x9d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa98a, gbc.sp());
        EXPECT(0x67ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 002D
        gbc.setState(0xb74d, 0x32fa, 0x76e0, 0xe4a0, 0xdf8c, 0x268b, 0x1, 0x1);
        gbc.writeMem(0xb74d, { 0x26, 0x63 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x32fa, gbc.sp());
        EXPECT(0xb74f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb74d));
        EXPECT(0x63, gbc.readMem(0xb74e));
        // 26 002E
        gbc.setState(0x6b1d, 0xa06b, 0x9470, 0xfd12, 0x7913, 0x6365, 0x0, 0x0);
        gbc.writeMem(0x6b1d, { 0x26, 0xd });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa06b, gbc.sp());
        EXPECT(0x6b1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 002F
        gbc.setState(0x84a3, 0x74c8, 0xdec0, 0x3488, 0x2ccf, 0x6173, 0x0, 0x0);
        gbc.writeMem(0x84a3, { 0x26, 0x75 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x74c8, gbc.sp());
        EXPECT(0x84a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x84a3));
        EXPECT(0x75, gbc.readMem(0x84a4));
        // 26 0030
        gbc.setState(0x68ee, 0x25ed, 0x4660, 0x85d7, 0x112e, 0x5fa5, 0x0, 0x0);
        gbc.writeMem(0x68ee, { 0x26, 0xcb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x25ed, gbc.sp());
        EXPECT(0x68f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0031
        gbc.setState(0x35b7, 0xbd9d, 0xc630, 0x49de, 0xc913, 0x8db6, 0x1, 0x1);
        gbc.writeMem(0x35b7, { 0x26, 0x82 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xbd9d, gbc.sp());
        EXPECT(0x35b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0032
        gbc.setState(0x560, 0x8c59, 0x730, 0xdc7f, 0x41f7, 0x8fdb, 0x0, 0x0);
        gbc.writeMem(0x560, { 0x26, 0xd3 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8c59, gbc.sp());
        EXPECT(0x562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0033
        gbc.setState(0xc5fd, 0x22fb, 0x2d20, 0x42fc, 0x368f, 0x8dd9, 0x0, 0x1);
        gbc.writeMem(0xc5fd, { 0x26, 0x26 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x22fb, gbc.sp());
        EXPECT(0xc5ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc5fd));
        EXPECT(0x26, gbc.readMem(0xc5fe));
        // 26 0034
        gbc.setState(0x2a27, 0xfc8f, 0xa2d0, 0x510, 0xe25b, 0x4000, 0x1, 0x0);
        gbc.writeMem(0x2a27, { 0x26, 0x14 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfc8f, gbc.sp());
        EXPECT(0x2a29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0035
        gbc.setState(0xe06b, 0x3529, 0xbd70, 0x69ef, 0x2b4d, 0x3861, 0x0, 0x0);
        gbc.writeMem(0xe06b, { 0x26, 0xbb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3529, gbc.sp());
        EXPECT(0xe06d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe06b));
        EXPECT(0xbb, gbc.readMem(0xe06c));
        // 26 0036
        gbc.setState(0xa50e, 0x7c0b, 0x6a30, 0x29c4, 0xa213, 0xa0c3, 0x1, 0x1);
        gbc.writeMem(0xa50e, { 0x26, 0xb4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7c0b, gbc.sp());
        EXPECT(0xa510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa50e));
        EXPECT(0xb4, gbc.readMem(0xa50f));
        // 26 0037
        gbc.setState(0xbc61, 0xcb4d, 0x2530, 0xe3bb, 0x76f, 0xea44, 0x0, 0x0);
        gbc.writeMem(0xbc61, { 0x26, 0x62 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcb4d, gbc.sp());
        EXPECT(0xbc63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbc61));
        EXPECT(0x62, gbc.readMem(0xbc62));
        // 26 0038
        gbc.setState(0x37ee, 0x4117, 0x4e20, 0x6aa7, 0x198, 0x297b, 0x1, 0x0);
        gbc.writeMem(0x37ee, { 0x26, 0x50 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4117, gbc.sp());
        EXPECT(0x37f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0039
        gbc.setState(0x7f3a, 0x399a, 0xc760, 0x1ac7, 0x5294, 0x418a, 0x1, 0x1);
        gbc.writeMem(0x7f3a, { 0x26, 0xbf });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x399a, gbc.sp());
        EXPECT(0x7f3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 003A
        gbc.setState(0x3ea9, 0xe5c6, 0x6080, 0x6c0a, 0xf8ac, 0x59fd, 0x0, 0x1);
        gbc.writeMem(0x3ea9, { 0x26, 0xd });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe5c6, gbc.sp());
        EXPECT(0x3eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 003B
        gbc.setState(0xaf95, 0x2b34, 0x3dc0, 0x2a7c, 0xfb45, 0x8533, 0x0, 0x0);
        gbc.writeMem(0xaf95, { 0x26, 0x26 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2b34, gbc.sp());
        EXPECT(0xaf97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xaf95));
        EXPECT(0x26, gbc.readMem(0xaf96));
        // 26 003C
        gbc.setState(0x87f1, 0xc4c7, 0x9950, 0xf98b, 0x5d32, 0xdc26, 0x1, 0x0);
        gbc.writeMem(0x87f1, { 0x26, 0xb8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc4c7, gbc.sp());
        EXPECT(0x87f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x87f1));
        EXPECT(0xb8, gbc.readMem(0x87f2));
        // 26 003D
        gbc.setState(0xcee9, 0x61, 0x11d0, 0x5d7, 0xc2cd, 0xcda, 0x1, 0x1);
        gbc.writeMem(0xcee9, { 0x26, 0xcf });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x61, gbc.sp());
        EXPECT(0xceeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xcee9));
        EXPECT(0xcf, gbc.readMem(0xceea));
        // 26 003E
        gbc.setState(0x1866, 0x910d, 0xf9c0, 0x181a, 0x6063, 0x62a9, 0x1, 0x0);
        gbc.writeMem(0x1866, { 0x26, 0x16 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x910d, gbc.sp());
        EXPECT(0x1868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 003F
        gbc.setState(0xb6bd, 0xc3e9, 0x75e0, 0xf8a9, 0xb8ef, 0x9b49, 0x1, 0x1);
        gbc.writeMem(0xb6bd, { 0x26, 0xfb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc3e9, gbc.sp());
        EXPECT(0xb6bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb6bd));
        EXPECT(0xfb, gbc.readMem(0xb6be));
        // 26 0040
        gbc.setState(0x8cfe, 0xdb0c, 0x2fd0, 0x518, 0x3afb, 0xce19, 0x0, 0x0);
        gbc.writeMem(0x8cfe, { 0x26, 0x58 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdb0c, gbc.sp());
        EXPECT(0x8d00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8cfe));
        EXPECT(0x58, gbc.readMem(0x8cff));
        // 26 0041
        gbc.setState(0xe6f6, 0xb17f, 0xd140, 0xcd07, 0xa871, 0x412a, 0x0, 0x0);
        gbc.writeMem(0xe6f6, { 0x26, 0x9e });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb17f, gbc.sp());
        EXPECT(0xe6f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe6f6));
        EXPECT(0x9e, gbc.readMem(0xe6f7));
        // 26 0042
        gbc.setState(0x9596, 0x8e42, 0x9310, 0x6437, 0x6819, 0x1862, 0x1, 0x0);
        gbc.writeMem(0x9596, { 0x26, 0x95 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8e42, gbc.sp());
        EXPECT(0x9598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9596));
        EXPECT(0x95, gbc.readMem(0x9597));
        // 26 0043
        gbc.setState(0xc2ec, 0xbd17, 0x94e0, 0x1cef, 0x903, 0xd81, 0x1, 0x1);
        gbc.writeMem(0xc2ec, { 0x26, 0xca });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbd17, gbc.sp());
        EXPECT(0xc2ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc2ec));
        EXPECT(0xca, gbc.readMem(0xc2ed));
        // 26 0044
        gbc.setState(0xa898, 0x9858, 0x6bd0, 0xc726, 0x1ee4, 0x14a1, 0x1, 0x0);
        gbc.writeMem(0xa898, { 0x26, 0x25 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9858, gbc.sp());
        EXPECT(0xa89a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa898));
        EXPECT(0x25, gbc.readMem(0xa899));
        // 26 0045
        gbc.setState(0xea63, 0x2d4f, 0xcf90, 0x2ed8, 0xaa9f, 0xd2bc, 0x1, 0x1);
        gbc.writeMem(0xea63, { 0x26, 0x47 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2d4f, gbc.sp());
        EXPECT(0xea65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xea63));
        EXPECT(0x47, gbc.readMem(0xea64));
        // 26 0046
        gbc.setState(0xdfe4, 0xcfcb, 0x6440, 0x71bd, 0xd70b, 0xeb6f, 0x1, 0x1);
        gbc.writeMem(0xdfe4, { 0x26, 0xbf });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcfcb, gbc.sp());
        EXPECT(0xdfe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xdfe4));
        EXPECT(0xbf, gbc.readMem(0xdfe5));
        // 26 0047
        gbc.setState(0x39c5, 0x6173, 0xdd80, 0xa7b1, 0xf8e, 0x2046, 0x0, 0x0);
        gbc.writeMem(0x39c5, { 0x26, 0x5d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6173, gbc.sp());
        EXPECT(0x39c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0048
        gbc.setState(0x7bdb, 0x9b54, 0x7980, 0x5a70, 0x8480, 0xf5db, 0x0, 0x0);
        gbc.writeMem(0x7bdb, { 0x26, 0x2d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9b54, gbc.sp());
        EXPECT(0x7bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0049
        gbc.setState(0xbcb7, 0x7a08, 0x75c0, 0xec38, 0xd88c, 0x18a9, 0x0, 0x1);
        gbc.writeMem(0xbcb7, { 0x26, 0x99 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7a08, gbc.sp());
        EXPECT(0xbcb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbcb7));
        EXPECT(0x99, gbc.readMem(0xbcb8));
        // 26 004A
        gbc.setState(0xd3e0, 0x55dd, 0x2320, 0x5ac4, 0x2b98, 0x96f7, 0x1, 0x0);
        gbc.writeMem(0xd3e0, { 0x26, 0xac });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x55dd, gbc.sp());
        EXPECT(0xd3e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd3e0));
        EXPECT(0xac, gbc.readMem(0xd3e1));
        // 26 004B
        gbc.setState(0x8093, 0x743e, 0x1a0, 0x15e4, 0xf042, 0xf3b7, 0x0, 0x1);
        gbc.writeMem(0x8093, { 0x26, 0x68 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x743e, gbc.sp());
        EXPECT(0x8095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8093));
        EXPECT(0x68, gbc.readMem(0x8094));
        // 26 004C
        gbc.setState(0x97a8, 0x98fd, 0xac70, 0x9b22, 0x3de4, 0xc43b, 0x0, 0x0);
        gbc.writeMem(0x97a8, { 0x26, 0xde });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x98fd, gbc.sp());
        EXPECT(0x97aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x97a8));
        EXPECT(0xde, gbc.readMem(0x97a9));
        // 26 004D
        gbc.setState(0x6597, 0xfb78, 0x6ab0, 0x8495, 0xfbe, 0x854b, 0x1, 0x0);
        gbc.writeMem(0x6597, { 0x26, 0x66 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xfb78, gbc.sp());
        EXPECT(0x6599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 004E
        gbc.setState(0x3535, 0xec0c, 0x8aa0, 0x9f38, 0x29b9, 0x3ccd, 0x1, 0x1);
        gbc.writeMem(0x3535, { 0x26, 0xea });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xec0c, gbc.sp());
        EXPECT(0x3537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 004F
        gbc.setState(0x261b, 0xaaba, 0x1e20, 0x9c7b, 0xfee5, 0xee21, 0x0, 0x1);
        gbc.writeMem(0x261b, { 0x26, 0x75 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xaaba, gbc.sp());
        EXPECT(0x261d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0050
        gbc.setState(0x7a1b, 0x9012, 0x4890, 0x8bbf, 0xae93, 0x1e2c, 0x1, 0x1);
        gbc.writeMem(0x7a1b, { 0x26, 0x10 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9012, gbc.sp());
        EXPECT(0x7a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0051
        gbc.setState(0x654b, 0xc550, 0xc90, 0x368a, 0x2f52, 0xb792, 0x0, 0x1);
        gbc.writeMem(0x654b, { 0x26, 0x94 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc550, gbc.sp());
        EXPECT(0x654d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0052
        gbc.setState(0x13b0, 0x659b, 0xeca0, 0x4d9c, 0xbec4, 0x55df, 0x1, 0x1);
        gbc.writeMem(0x13b0, { 0x26, 0x35 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x659b, gbc.sp());
        EXPECT(0x13b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0053
        gbc.setState(0xdbfc, 0x9ee6, 0x7ae0, 0x2bb8, 0x7145, 0x265f, 0x0, 0x1);
        gbc.writeMem(0xdbfc, { 0x26, 0x64 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9ee6, gbc.sp());
        EXPECT(0xdbfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xdbfc));
        EXPECT(0x64, gbc.readMem(0xdbfd));
        // 26 0054
        gbc.setState(0x661f, 0xd83c, 0xb980, 0xc4e5, 0xfdb7, 0xd9e2, 0x0, 0x0);
        gbc.writeMem(0x661f, { 0x26, 0x6d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd83c, gbc.sp());
        EXPECT(0x6621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0055
        gbc.setState(0x5ca4, 0x6720, 0x2170, 0xa6bb, 0x96ae, 0x97fc, 0x1, 0x0);
        gbc.writeMem(0x5ca4, { 0x26, 0xaf });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6720, gbc.sp());
        EXPECT(0x5ca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0056
        gbc.setState(0x94b1, 0x5532, 0x8660, 0x2e3, 0x8ad5, 0x3fa5, 0x0, 0x1);
        gbc.writeMem(0x94b1, { 0x26, 0x57 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5532, gbc.sp());
        EXPECT(0x94b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x94b1));
        EXPECT(0x57, gbc.readMem(0x94b2));
        // 26 0057
        gbc.setState(0xa95, 0x28ae, 0x3bc0, 0x9548, 0xf3c3, 0x544c, 0x1, 0x0);
        gbc.writeMem(0xa95, { 0x26, 0x3f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x28ae, gbc.sp());
        EXPECT(0xa97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0058
        gbc.setState(0x955c, 0x1044, 0x9030, 0xfe0f, 0x60bc, 0x1281, 0x0, 0x0);
        gbc.writeMem(0x955c, { 0x26, 0x22 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1044, gbc.sp());
        EXPECT(0x955e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x955c));
        EXPECT(0x22, gbc.readMem(0x955d));
        // 26 0059
        gbc.setState(0x7663, 0xf2, 0xc7f0, 0xcb9b, 0xa319, 0xac2b, 0x1, 0x0);
        gbc.writeMem(0x7663, { 0x26, 0x81 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf2, gbc.sp());
        EXPECT(0x7665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 005A
        gbc.setState(0x7b7, 0x5d2b, 0x9db0, 0x8c05, 0x4f79, 0x956e, 0x0, 0x0);
        gbc.writeMem(0x7b7, { 0x26, 0x2a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5d2b, gbc.sp());
        EXPECT(0x7b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 005B
        gbc.setState(0x5be9, 0xc36, 0x8b30, 0x2e16, 0xd0a6, 0xc91b, 0x1, 0x0);
        gbc.writeMem(0x5be9, { 0x26, 0x74 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc36, gbc.sp());
        EXPECT(0x5beb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 005D
        gbc.setState(0x3f51, 0xa5b7, 0x41a0, 0xd630, 0xd4fb, 0x84c6, 0x1, 0x0);
        gbc.writeMem(0x3f51, { 0x26, 0x21 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa5b7, gbc.sp());
        EXPECT(0x3f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 005E
        gbc.setState(0x76cb, 0xf952, 0x7c40, 0xe5bf, 0x5d17, 0x434, 0x0, 0x0);
        gbc.writeMem(0x76cb, { 0x26, 0xad });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf952, gbc.sp());
        EXPECT(0x76cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 005F
        gbc.setState(0xbbb5, 0x140f, 0x98e0, 0x3acd, 0xc5e6, 0xd467, 0x0, 0x0);
        gbc.writeMem(0xbbb5, { 0x26, 0x3e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x140f, gbc.sp());
        EXPECT(0xbbb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbbb5));
        EXPECT(0x3e, gbc.readMem(0xbbb6));
        // 26 0060
        gbc.setState(0xca9d, 0xa161, 0x4500, 0x5a0b, 0x3c3, 0xe4a1, 0x0, 0x0);
        gbc.writeMem(0xca9d, { 0x26, 0xe });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa161, gbc.sp());
        EXPECT(0xca9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xca9d));
        EXPECT(0xe, gbc.readMem(0xca9e));
        // 26 0061
        gbc.setState(0x68a5, 0xeb3, 0x7290, 0x1932, 0xdffa, 0x44e4, 0x1, 0x1);
        gbc.writeMem(0x68a5, { 0x26, 0x5f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xeb3, gbc.sp());
        EXPECT(0x68a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0062
        gbc.setState(0xddb8, 0x184a, 0x6ea0, 0xeb22, 0xa1e5, 0x9879, 0x0, 0x0);
        gbc.writeMem(0xddb8, { 0x26, 0xd9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x184a, gbc.sp());
        EXPECT(0xddba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xddb8));
        EXPECT(0xd9, gbc.readMem(0xddb9));
        // 26 0063
        gbc.setState(0x2eed, 0x4696, 0x1f00, 0x116a, 0xe399, 0x625e, 0x0, 0x1);
        gbc.writeMem(0x2eed, { 0x26, 0xf6 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4696, gbc.sp());
        EXPECT(0x2eef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0064
        gbc.setState(0xde87, 0xd367, 0xa40, 0xddbe, 0x718a, 0x8e61, 0x1, 0x0);
        gbc.writeMem(0xde87, { 0x26, 0x83 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd367, gbc.sp());
        EXPECT(0xde89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xde87));
        EXPECT(0x83, gbc.readMem(0xde88));
        // 26 0065
        gbc.setState(0x1a1b, 0x1ee8, 0x220, 0xd31a, 0xcfc1, 0x2792, 0x0, 0x1);
        gbc.writeMem(0x1a1b, { 0x26, 0x40 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1ee8, gbc.sp());
        EXPECT(0x1a1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0066
        gbc.setState(0x6937, 0xa2c8, 0xa4c0, 0x220d, 0x29, 0xadb4, 0x1, 0x0);
        gbc.writeMem(0x6937, { 0x26, 0x45 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa2c8, gbc.sp());
        EXPECT(0x6939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0067
        gbc.setState(0x6554, 0x757d, 0x9620, 0x6e4a, 0xcfd8, 0xa2e, 0x1, 0x0);
        gbc.writeMem(0x6554, { 0x26, 0x71 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x757d, gbc.sp());
        EXPECT(0x6556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0068
        gbc.setState(0x272e, 0xcc4c, 0xd4d0, 0x3fc5, 0x2cba, 0x81d1, 0x0, 0x1);
        gbc.writeMem(0x272e, { 0x26, 0x86 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xcc4c, gbc.sp());
        EXPECT(0x2730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 006B
        gbc.setState(0x6fbb, 0x7bd9, 0x27e0, 0x989f, 0xf030, 0xac38, 0x0, 0x1);
        gbc.writeMem(0x6fbb, { 0x26, 0x68 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7bd9, gbc.sp());
        EXPECT(0x6fbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 006C
        gbc.setState(0xccba, 0x998f, 0x3740, 0x3333, 0x6edb, 0x8fc4, 0x0, 0x1);
        gbc.writeMem(0xccba, { 0x26, 0xd1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x998f, gbc.sp());
        EXPECT(0xccbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xccba));
        EXPECT(0xd1, gbc.readMem(0xccbb));
        // 26 006D
        gbc.setState(0xa9f2, 0x82b6, 0x9910, 0x9ade, 0xe34e, 0xe84a, 0x1, 0x0);
        gbc.writeMem(0xa9f2, { 0x26, 0x98 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x82b6, gbc.sp());
        EXPECT(0xa9f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa9f2));
        EXPECT(0x98, gbc.readMem(0xa9f3));
        // 26 006E
        gbc.setState(0x339a, 0x72b, 0x6b10, 0xdd36, 0x8d44, 0x2463, 0x0, 0x1);
        gbc.writeMem(0x339a, { 0x26, 0x42 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x72b, gbc.sp());
        EXPECT(0x339c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 006F
        gbc.setState(0xeab9, 0xb0b6, 0xb650, 0x9eca, 0xe859, 0x3f13, 0x0, 0x0);
        gbc.writeMem(0xeab9, { 0x26, 0x17 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb0b6, gbc.sp());
        EXPECT(0xeabb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xeab9));
        EXPECT(0x17, gbc.readMem(0xeaba));
        // 26 0070
        gbc.setState(0x6e6f, 0x6a49, 0xae0, 0x35be, 0x1ef2, 0x4446, 0x1, 0x1);
        gbc.writeMem(0x6e6f, { 0x26, 0xd3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6a49, gbc.sp());
        EXPECT(0x6e71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0071
        gbc.setState(0x1f4d, 0x8be9, 0xa9b0, 0xd44e, 0x57af, 0xaac7, 0x0, 0x1);
        gbc.writeMem(0x1f4d, { 0x26, 0x91 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8be9, gbc.sp());
        EXPECT(0x1f4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0072
        gbc.setState(0xb46, 0x43a6, 0xf780, 0xb684, 0xff2, 0x2d93, 0x0, 0x0);
        gbc.writeMem(0xb46, { 0x26, 0x29 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x43a6, gbc.sp());
        EXPECT(0xb48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0073
        gbc.setState(0x2408, 0xdeff, 0x4550, 0x102e, 0xece3, 0x7d19, 0x0, 0x0);
        gbc.writeMem(0x2408, { 0x26, 0xe8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdeff, gbc.sp());
        EXPECT(0x240a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0074
        gbc.setState(0x1edf, 0xcef2, 0xe390, 0xcb75, 0x8250, 0xca, 0x1, 0x0);
        gbc.writeMem(0x1edf, { 0x26, 0xa2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xcef2, gbc.sp());
        EXPECT(0x1ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0076
        gbc.setState(0xdfae, 0xf079, 0x6930, 0x83a6, 0xf2d5, 0xad39, 0x0, 0x1);
        gbc.writeMem(0xdfae, { 0x26, 0x8b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf079, gbc.sp());
        EXPECT(0xdfb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xdfae));
        EXPECT(0x8b, gbc.readMem(0xdfaf));
        // 26 0077
        gbc.setState(0xced6, 0x66cf, 0xe520, 0xc0ee, 0x9bed, 0x5e7f, 0x1, 0x0);
        gbc.writeMem(0xced6, { 0x26, 0x60 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x66cf, gbc.sp());
        EXPECT(0xced8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xced6));
        EXPECT(0x60, gbc.readMem(0xced7));
        // 26 0078
        gbc.setState(0xeef5, 0x5087, 0x7e20, 0x2e22, 0x4b84, 0xf675, 0x1, 0x0);
        gbc.writeMem(0xeef5, { 0x26, 0x39 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5087, gbc.sp());
        EXPECT(0xeef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xeef5));
        EXPECT(0x39, gbc.readMem(0xeef6));
        // 26 0079
        gbc.setState(0x3cfd, 0x9b2f, 0x6d40, 0x4e44, 0x54cc, 0x500c, 0x1, 0x1);
        gbc.writeMem(0x3cfd, { 0x26, 0x30 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9b2f, gbc.sp());
        EXPECT(0x3cff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 007A
        gbc.setState(0x1efa, 0x31b, 0x38e0, 0xe624, 0xe3c6, 0xbbaa, 0x1, 0x0);
        gbc.writeMem(0x1efa, { 0x26, 0x15 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x31b, gbc.sp());
        EXPECT(0x1efc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 007B
        gbc.setState(0xb60f, 0x665b, 0xd800, 0xb973, 0xde71, 0xe4a9, 0x1, 0x0);
        gbc.writeMem(0xb60f, { 0x26, 0xd4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x665b, gbc.sp());
        EXPECT(0xb611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb60f));
        EXPECT(0xd4, gbc.readMem(0xb610));
        // 26 007C
        gbc.setState(0xa93d, 0xb96b, 0x67e0, 0xa6c0, 0x49de, 0x1399, 0x0, 0x1);
        gbc.writeMem(0xa93d, { 0x26, 0x3a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb96b, gbc.sp());
        EXPECT(0xa93f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa93d));
        EXPECT(0x3a, gbc.readMem(0xa93e));
        // 26 007D
        gbc.setState(0x13ab, 0x7b30, 0xbe20, 0x7b7a, 0x3199, 0x4a3d, 0x1, 0x0);
        gbc.writeMem(0x13ab, { 0x26, 0x58 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7b30, gbc.sp());
        EXPECT(0x13ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 007E
        gbc.setState(0x16ae, 0xc631, 0x330, 0x606e, 0x6ed6, 0x5b6d, 0x1, 0x0);
        gbc.writeMem(0x16ae, { 0x26, 0xc5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc631, gbc.sp());
        EXPECT(0x16b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 007F
        gbc.setState(0x2e21, 0x7cc5, 0xf8c0, 0xe13d, 0x7552, 0x173c, 0x0, 0x0);
        gbc.writeMem(0x2e21, { 0x26, 0x1d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7cc5, gbc.sp());
        EXPECT(0x2e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0080
        gbc.setState(0x9737, 0xb5b5, 0xfaf0, 0xd90f, 0x108e, 0x86ba, 0x0, 0x0);
        gbc.writeMem(0x9737, { 0x26, 0x53 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb5b5, gbc.sp());
        EXPECT(0x9739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9737));
        EXPECT(0x53, gbc.readMem(0x9738));
        // 26 0081
        gbc.setState(0xb8fb, 0xe45c, 0x27e0, 0xe8af, 0x711e, 0xd9e4, 0x1, 0x1);
        gbc.writeMem(0xb8fb, { 0x26, 0xe7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe45c, gbc.sp());
        EXPECT(0xb8fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb8fb));
        EXPECT(0xe7, gbc.readMem(0xb8fc));
        // 26 0082
        gbc.setState(0x7f21, 0xdcba, 0x2e70, 0x181c, 0x2874, 0x644a, 0x1, 0x0);
        gbc.writeMem(0x7f21, { 0x26, 0x29 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xdcba, gbc.sp());
        EXPECT(0x7f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0083
        gbc.setState(0x912d, 0x1a45, 0x1550, 0xa5a2, 0x3a78, 0xbdc6, 0x1, 0x0);
        gbc.writeMem(0x912d, { 0x26, 0x7f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1a45, gbc.sp());
        EXPECT(0x912f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x912d));
        EXPECT(0x7f, gbc.readMem(0x912e));
        // 26 0086
        gbc.setState(0x7464, 0xc76e, 0x1050, 0x3946, 0xe50a, 0xae14, 0x1, 0x1);
        gbc.writeMem(0x7464, { 0x26, 0xc6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc76e, gbc.sp());
        EXPECT(0x7466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0087
        gbc.setState(0xa0d7, 0x81b4, 0x5010, 0x5c5e, 0x412c, 0xa19f, 0x1, 0x0);
        gbc.writeMem(0xa0d7, { 0x26, 0xcf });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x81b4, gbc.sp());
        EXPECT(0xa0d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa0d7));
        EXPECT(0xcf, gbc.readMem(0xa0d8));
        // 26 0088
        gbc.setState(0xbfc3, 0xff38, 0xf920, 0x49ad, 0xc97e, 0xe1ea, 0x0, 0x1);
        gbc.writeMem(0xbfc3, { 0x26, 0x89 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xff38, gbc.sp());
        EXPECT(0xbfc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbfc3));
        EXPECT(0x89, gbc.readMem(0xbfc4));
        // 26 008A
        gbc.setState(0x88c1, 0x380e, 0x96a0, 0xc453, 0x9315, 0x8cad, 0x0, 0x0);
        gbc.writeMem(0x88c1, { 0x26, 0xe9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x380e, gbc.sp());
        EXPECT(0x88c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x88c1));
        EXPECT(0xe9, gbc.readMem(0x88c2));
        // 26 008B
        gbc.setState(0x52fb, 0x775a, 0x6250, 0xca3, 0xe925, 0x6382, 0x1, 0x0);
        gbc.writeMem(0x52fb, { 0x26, 0x82 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x775a, gbc.sp());
        EXPECT(0x52fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 008C
        gbc.setState(0x9277, 0xf6bc, 0x8db0, 0x95a8, 0x19bf, 0x5da0, 0x0, 0x1);
        gbc.writeMem(0x9277, { 0x26, 0xb0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf6bc, gbc.sp());
        EXPECT(0x9279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9277));
        EXPECT(0xb0, gbc.readMem(0x9278));
        // 26 008D
        gbc.setState(0x4327, 0x5b7f, 0xdaa0, 0xf3a, 0x49b5, 0xfbf5, 0x1, 0x1);
        gbc.writeMem(0x4327, { 0x26, 0x76 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5b7f, gbc.sp());
        EXPECT(0x4329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 008E
        gbc.setState(0xcdce, 0x37fd, 0xda80, 0x8b79, 0xbcc, 0xeaf3, 0x0, 0x1);
        gbc.writeMem(0xcdce, { 0x26, 0xb9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x37fd, gbc.sp());
        EXPECT(0xcdd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xcdce));
        EXPECT(0xb9, gbc.readMem(0xcdcf));
        // 26 008F
        gbc.setState(0x1cde, 0x428a, 0xa0f0, 0x13d, 0x57f9, 0x94dd, 0x1, 0x0);
        gbc.writeMem(0x1cde, { 0x26, 0x29 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x428a, gbc.sp());
        EXPECT(0x1ce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0090
        gbc.setState(0xb9d1, 0x1455, 0xac80, 0x1614, 0xb441, 0xcf01, 0x1, 0x0);
        gbc.writeMem(0xb9d1, { 0x26, 0x8f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1455, gbc.sp());
        EXPECT(0xb9d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb9d1));
        EXPECT(0x8f, gbc.readMem(0xb9d2));
        // 26 0091
        gbc.setState(0x1f47, 0x7bb6, 0x1e60, 0x3d93, 0x9c9f, 0x511d, 0x1, 0x0);
        gbc.writeMem(0x1f47, { 0x26, 0xc5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7bb6, gbc.sp());
        EXPECT(0x1f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0092
        gbc.setState(0x653e, 0x722, 0xe590, 0xcc0e, 0xc5a2, 0x451e, 0x1, 0x0);
        gbc.writeMem(0x653e, { 0x26, 0x58 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x722, gbc.sp());
        EXPECT(0x6540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0093
        gbc.setState(0x34f4, 0xd5fe, 0x3ec0, 0x9356, 0x908e, 0xe6f3, 0x0, 0x1);
        gbc.writeMem(0x34f4, { 0x26, 0xc9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd5fe, gbc.sp());
        EXPECT(0x34f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0094
        gbc.setState(0x3f8, 0x278, 0xded0, 0x3761, 0x48a9, 0x4669, 0x1, 0x1);
        gbc.writeMem(0x3f8, { 0x26, 0x66 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x278, gbc.sp());
        EXPECT(0x3fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0095
        gbc.setState(0xb3fc, 0x9d8a, 0x97a0, 0x3233, 0x8080, 0x897c, 0x1, 0x0);
        gbc.writeMem(0xb3fc, { 0x26, 0x38 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9d8a, gbc.sp());
        EXPECT(0xb3fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb3fc));
        EXPECT(0x38, gbc.readMem(0xb3fd));
        // 26 0096
        gbc.setState(0xda1c, 0x2ef7, 0x4b80, 0xe74a, 0x8c6f, 0xd9b8, 0x0, 0x0);
        gbc.writeMem(0xda1c, { 0x26, 0x47 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2ef7, gbc.sp());
        EXPECT(0xda1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xda1c));
        EXPECT(0x47, gbc.readMem(0xda1d));
        // 26 0097
        gbc.setState(0x5cac, 0xe935, 0x6990, 0x32e5, 0x1516, 0x7ee0, 0x0, 0x1);
        gbc.writeMem(0x5cac, { 0x26, 0x81 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe935, gbc.sp());
        EXPECT(0x5cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0098
        gbc.setState(0xe5d, 0xf794, 0x7630, 0x9a05, 0x9faa, 0xb848, 0x1, 0x1);
        gbc.writeMem(0xe5d, { 0x26, 0x9d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf794, gbc.sp());
        EXPECT(0xe5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0099
        gbc.setState(0x288b, 0xe52b, 0x7810, 0x4ff7, 0x5bd5, 0xb32d, 0x0, 0x0);
        gbc.writeMem(0x288b, { 0x26, 0xb5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe52b, gbc.sp());
        EXPECT(0x288d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 009A
        gbc.setState(0x70ff, 0x9004, 0xb00, 0x90a2, 0x3bbf, 0x583b, 0x0, 0x1);
        gbc.writeMem(0x70ff, { 0x26, 0x3b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9004, gbc.sp());
        EXPECT(0x7101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 009C
        gbc.setState(0xdc5a, 0x267c, 0xb540, 0x7e67, 0x47e1, 0xb850, 0x0, 0x0);
        gbc.writeMem(0xdc5a, { 0x26, 0x8e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x267c, gbc.sp());
        EXPECT(0xdc5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xdc5a));
        EXPECT(0x8e, gbc.readMem(0xdc5b));
        // 26 009D
        gbc.setState(0x243, 0x5382, 0xdbc0, 0x4413, 0x2227, 0xda6d, 0x0, 0x0);
        gbc.writeMem(0x243, { 0x26, 0x63 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5382, gbc.sp());
        EXPECT(0x245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 009F
        gbc.setState(0x27fa, 0xaf25, 0x9340, 0x84c5, 0x1944, 0x6b7f, 0x1, 0x1);
        gbc.writeMem(0x27fa, { 0x26, 0xff });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xaf25, gbc.sp());
        EXPECT(0x27fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00A0
        gbc.setState(0x8e8, 0x6fa, 0x5fc0, 0x71e6, 0x9d68, 0xdf0b, 0x1, 0x0);
        gbc.writeMem(0x8e8, { 0x26, 0xa1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6fa, gbc.sp());
        EXPECT(0x8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00A1
        gbc.setState(0xce83, 0x6c6d, 0x33f0, 0xbea9, 0x63b2, 0xc272, 0x1, 0x0);
        gbc.writeMem(0xce83, { 0x26, 0xc });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6c6d, gbc.sp());
        EXPECT(0xce85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xce83));
        EXPECT(0xc, gbc.readMem(0xce84));
        // 26 00A2
        gbc.setState(0xbaa, 0x9fcb, 0xc000, 0xd680, 0x670e, 0xdeb0, 0x0, 0x1);
        gbc.writeMem(0xbaa, { 0x26, 0x59 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9fcb, gbc.sp());
        EXPECT(0xbac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00A3
        gbc.setState(0xa112, 0x7cf4, 0xac30, 0x219e, 0xf3b3, 0x8164, 0x1, 0x0);
        gbc.writeMem(0xa112, { 0x26, 0x73 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7cf4, gbc.sp());
        EXPECT(0xa114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa112));
        EXPECT(0x73, gbc.readMem(0xa113));
        // 26 00A4
        gbc.setState(0xe83d, 0xdd96, 0x2300, 0xbdd0, 0x503c, 0xcd6e, 0x1, 0x1);
        gbc.writeMem(0xe83d, { 0x26, 0xc8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdd96, gbc.sp());
        EXPECT(0xe83f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe83d));
        EXPECT(0xc8, gbc.readMem(0xe83e));
        // 26 00A5
        gbc.setState(0x732d, 0x13fe, 0xb990, 0xcf64, 0x397d, 0xebac, 0x1, 0x1);
        gbc.writeMem(0x732d, { 0x26, 0xd2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x13fe, gbc.sp());
        EXPECT(0x732f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00A6
        gbc.setState(0xbeca, 0x3da1, 0x18c0, 0x31a6, 0xd9a6, 0x3d9b, 0x0, 0x1);
        gbc.writeMem(0xbeca, { 0x26, 0x9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3da1, gbc.sp());
        EXPECT(0xbecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbeca));
        EXPECT(0x9, gbc.readMem(0xbecb));
        // 26 00A7
        gbc.setState(0x495a, 0xd43c, 0xdac0, 0x7b29, 0xbd40, 0xbc38, 0x1, 0x0);
        gbc.writeMem(0x495a, { 0x26, 0xc0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd43c, gbc.sp());
        EXPECT(0x495c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00A8
        gbc.setState(0xab5d, 0xec4e, 0x3680, 0xd69f, 0xa9cd, 0xddfb, 0x1, 0x1);
        gbc.writeMem(0xab5d, { 0x26, 0x4e });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xec4e, gbc.sp());
        EXPECT(0xab5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xab5d));
        EXPECT(0x4e, gbc.readMem(0xab5e));
        // 26 00A9
        gbc.setState(0xa7d7, 0x883c, 0xf8f0, 0x877, 0x8f77, 0x2074, 0x0, 0x0);
        gbc.writeMem(0xa7d7, { 0x26, 0xb5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x883c, gbc.sp());
        EXPECT(0xa7d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa7d7));
        EXPECT(0xb5, gbc.readMem(0xa7d8));
        // 26 00AA
        gbc.setState(0x446f, 0xad77, 0x8370, 0x8882, 0xeeaa, 0x2823, 0x1, 0x0);
        gbc.writeMem(0x446f, { 0x26, 0x52 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xad77, gbc.sp());
        EXPECT(0x4471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00AB
        gbc.setState(0x110d, 0xf9b5, 0xdc80, 0x42f, 0x9842, 0xe145, 0x0, 0x1);
        gbc.writeMem(0x110d, { 0x26, 0xdc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf9b5, gbc.sp());
        EXPECT(0x110f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00AD
        gbc.setState(0xbbc4, 0x4226, 0xfdb0, 0x86e4, 0xa5b4, 0x91d6, 0x0, 0x0);
        gbc.writeMem(0xbbc4, { 0x26, 0x34 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4226, gbc.sp());
        EXPECT(0xbbc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbbc4));
        EXPECT(0x34, gbc.readMem(0xbbc5));
        // 26 00AE
        gbc.setState(0x986e, 0xae58, 0xf940, 0x471b, 0x3657, 0x3fb9, 0x0, 0x0);
        gbc.writeMem(0x986e, { 0x26, 0x50 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xae58, gbc.sp());
        EXPECT(0x9870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x986e));
        EXPECT(0x50, gbc.readMem(0x986f));
        // 26 00AF
        gbc.setState(0x4755, 0xd5f5, 0x2d0, 0x645b, 0x3434, 0xf04f, 0x0, 0x0);
        gbc.writeMem(0x4755, { 0x26, 0x29 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd5f5, gbc.sp());
        EXPECT(0x4757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00B0
        gbc.setState(0xde40, 0x6dcb, 0x9180, 0xc16d, 0x9b7, 0xc55a, 0x0, 0x1);
        gbc.writeMem(0xde40, { 0x26, 0x6c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6dcb, gbc.sp());
        EXPECT(0xde42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xde40));
        EXPECT(0x6c, gbc.readMem(0xde41));
        // 26 00B1
        gbc.setState(0x2651, 0x9c1, 0x390, 0x981f, 0xb959, 0x2811, 0x0, 0x1);
        gbc.writeMem(0x2651, { 0x26, 0x81 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9c1, gbc.sp());
        EXPECT(0x2653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00B2
        gbc.setState(0xc658, 0xf380, 0x4350, 0x52c2, 0xf994, 0xe583, 0x0, 0x1);
        gbc.writeMem(0xc658, { 0x26, 0x4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf380, gbc.sp());
        EXPECT(0xc65a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc658));
        EXPECT(0x4, gbc.readMem(0xc659));
        // 26 00B3
        gbc.setState(0xaa6b, 0x9c2, 0xf740, 0xf9a6, 0x2dea, 0xef0, 0x0, 0x1);
        gbc.writeMem(0xaa6b, { 0x26, 0x48 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9c2, gbc.sp());
        EXPECT(0xaa6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xaa6b));
        EXPECT(0x48, gbc.readMem(0xaa6c));
        // 26 00B4
        gbc.setState(0x4926, 0x3371, 0x37a0, 0x8f09, 0x558b, 0xb994, 0x1, 0x1);
        gbc.writeMem(0x4926, { 0x26, 0x72 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3371, gbc.sp());
        EXPECT(0x4928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00B5
        gbc.setState(0x15be, 0x4854, 0x87e0, 0x358d, 0xeec5, 0x9589, 0x1, 0x0);
        gbc.writeMem(0x15be, { 0x26, 0xe2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4854, gbc.sp());
        EXPECT(0x15c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00B6
        gbc.setState(0x4c09, 0x30ec, 0x99b0, 0xceac, 0xd36a, 0x2c00, 0x0, 0x1);
        gbc.writeMem(0x4c09, { 0x26, 0x68 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x30ec, gbc.sp());
        EXPECT(0x4c0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00B7
        gbc.setState(0xbd56, 0xf9d, 0x3260, 0x1fa7, 0xa2b1, 0x9703, 0x0, 0x1);
        gbc.writeMem(0xbd56, { 0x26, 0x36 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf9d, gbc.sp());
        EXPECT(0xbd58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbd56));
        EXPECT(0x36, gbc.readMem(0xbd57));
        // 26 00B8
        gbc.setState(0xd9eb, 0x634f, 0xc3c0, 0x15c5, 0x9ef1, 0x316d, 0x0, 0x1);
        gbc.writeMem(0xd9eb, { 0x26, 0x28 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x634f, gbc.sp());
        EXPECT(0xd9ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd9eb));
        EXPECT(0x28, gbc.readMem(0xd9ec));
        // 26 00BA
        gbc.setState(0x2381, 0xfab6, 0x7e40, 0x5aa8, 0xde3b, 0xf253, 0x1, 0x0);
        gbc.writeMem(0x2381, { 0x26, 0x43 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xfab6, gbc.sp());
        EXPECT(0x2383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00BB
        gbc.setState(0xbe44, 0x3488, 0x6320, 0xe70b, 0xc4a3, 0x984e, 0x1, 0x0);
        gbc.writeMem(0xbe44, { 0x26, 0x79 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3488, gbc.sp());
        EXPECT(0xbe46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbe44));
        EXPECT(0x79, gbc.readMem(0xbe45));
        // 26 00BC
        gbc.setState(0x923f, 0x8f9f, 0x1ff0, 0xaa26, 0x6a2f, 0x2179, 0x1, 0x1);
        gbc.writeMem(0x923f, { 0x26, 0xe4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8f9f, gbc.sp());
        EXPECT(0x9241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x923f));
        EXPECT(0xe4, gbc.readMem(0x9240));
        // 26 00BD
        gbc.setState(0xc6cc, 0x72e4, 0x7000, 0xe032, 0x9632, 0x3e3b, 0x0, 0x0);
        gbc.writeMem(0xc6cc, { 0x26, 0xe8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x72e4, gbc.sp());
        EXPECT(0xc6ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc6cc));
        EXPECT(0xe8, gbc.readMem(0xc6cd));
        // 26 00BE
        gbc.setState(0x66f6, 0x66bd, 0x3360, 0x799d, 0x31a1, 0x928f, 0x1, 0x0);
        gbc.writeMem(0x66f6, { 0x26, 0x41 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x66bd, gbc.sp());
        EXPECT(0x66f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00BF
        gbc.setState(0x396, 0x87fa, 0x62e0, 0x7502, 0xdd8a, 0xa965, 0x0, 0x0);
        gbc.writeMem(0x396, { 0x26, 0x9c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x87fa, gbc.sp());
        EXPECT(0x398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00C0
        gbc.setState(0x3068, 0x73da, 0xf370, 0xa87b, 0x42dc, 0xbe96, 0x1, 0x1);
        gbc.writeMem(0x3068, { 0x26, 0xb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x73da, gbc.sp());
        EXPECT(0x306a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00C1
        gbc.setState(0x2775, 0xdc83, 0x86f0, 0xe8b2, 0xaa35, 0x7e31, 0x1, 0x0);
        gbc.writeMem(0x2775, { 0x26, 0x67 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xdc83, gbc.sp());
        EXPECT(0x2777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00C2
        gbc.setState(0x60cf, 0x29b5, 0x7d60, 0xef86, 0xb19d, 0x8162, 0x0, 0x1);
        gbc.writeMem(0x60cf, { 0x26, 0x78 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x29b5, gbc.sp());
        EXPECT(0x60d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00C3
        gbc.setState(0xb4d3, 0x68a0, 0x4cc0, 0x7e22, 0xce9c, 0x5846, 0x0, 0x1);
        gbc.writeMem(0xb4d3, { 0x26, 0x3f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x68a0, gbc.sp());
        EXPECT(0xb4d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb4d3));
        EXPECT(0x3f, gbc.readMem(0xb4d4));
        // 26 00C4
        gbc.setState(0xe38a, 0x79a0, 0xaeb0, 0x865, 0xb4e8, 0x631c, 0x1, 0x1);
        gbc.writeMem(0xe38a, { 0x26, 0x38 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x79a0, gbc.sp());
        EXPECT(0xe38c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe38a));
        EXPECT(0x38, gbc.readMem(0xe38b));
        // 26 00C5
        gbc.setState(0x9c85, 0x1364, 0xbb10, 0x9757, 0x88e4, 0x216, 0x0, 0x0);
        gbc.writeMem(0x9c85, { 0x26, 0xef });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1364, gbc.sp());
        EXPECT(0x9c87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9c85));
        EXPECT(0xef, gbc.readMem(0x9c86));
        // 26 00C6
        gbc.setState(0x639a, 0xcaa4, 0x28f0, 0x53ce, 0xd7b9, 0xab56, 0x1, 0x0);
        gbc.writeMem(0x639a, { 0x26, 0xbe });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcaa4, gbc.sp());
        EXPECT(0x639c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00C7
        gbc.setState(0x4c3a, 0xacdc, 0xb3d0, 0xd239, 0xb403, 0xc6e6, 0x1, 0x1);
        gbc.writeMem(0x4c3a, { 0x26, 0x65 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xacdc, gbc.sp());
        EXPECT(0x4c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00C8
        gbc.setState(0xa23c, 0x5a05, 0xac30, 0xf22f, 0x5dd8, 0x1ded, 0x1, 0x0);
        gbc.writeMem(0xa23c, { 0x26, 0xfe });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5a05, gbc.sp());
        EXPECT(0xa23e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa23c));
        EXPECT(0xfe, gbc.readMem(0xa23d));
        // 26 00C9
        gbc.setState(0xab02, 0x95e5, 0x2890, 0x507b, 0x433f, 0x66de, 0x1, 0x0);
        gbc.writeMem(0xab02, { 0x26, 0xf4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x95e5, gbc.sp());
        EXPECT(0xab04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xab02));
        EXPECT(0xf4, gbc.readMem(0xab03));
        // 26 00CA
        gbc.setState(0xb22f, 0x2d91, 0xb20, 0xf231, 0x9ce8, 0x726, 0x1, 0x1);
        gbc.writeMem(0xb22f, { 0x26, 0x80 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2d91, gbc.sp());
        EXPECT(0xb231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb22f));
        EXPECT(0x80, gbc.readMem(0xb230));
        // 26 00CB
        gbc.setState(0x31c3, 0xb178, 0xad80, 0x81c3, 0xf4c8, 0x521, 0x1, 0x0);
        gbc.writeMem(0x31c3, { 0x26, 0xa });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb178, gbc.sp());
        EXPECT(0x31c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00CC
        gbc.setState(0x2f5c, 0x2be5, 0x8f0, 0x75f2, 0x8570, 0x1970, 0x0, 0x0);
        gbc.writeMem(0x2f5c, { 0x26, 0x1c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2be5, gbc.sp());
        EXPECT(0x2f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00CD
        gbc.setState(0x93cf, 0xf166, 0x7400, 0x9fc5, 0xb7cb, 0x6909, 0x0, 0x1);
        gbc.writeMem(0x93cf, { 0x26, 0x81 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf166, gbc.sp());
        EXPECT(0x93d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x93cf));
        EXPECT(0x81, gbc.readMem(0x93d0));
        // 26 00CE
        gbc.setState(0x7e7d, 0x65d3, 0x21c0, 0x5b26, 0xa6bf, 0x3ca, 0x0, 0x1);
        gbc.writeMem(0x7e7d, { 0x26, 0x7f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x65d3, gbc.sp());
        EXPECT(0x7e7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00CF
        gbc.setState(0x1fda, 0xb4b2, 0x9410, 0xef96, 0x995a, 0x7a46, 0x0, 0x0);
        gbc.writeMem(0x1fda, { 0x26, 0xd5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb4b2, gbc.sp());
        EXPECT(0x1fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00D0
        gbc.setState(0xe183, 0x2a7, 0xc4e0, 0xe230, 0xaf52, 0xcc7c, 0x1, 0x1);
        gbc.writeMem(0xe183, { 0x26, 0x1a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2a7, gbc.sp());
        EXPECT(0xe185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe183));
        EXPECT(0x1a, gbc.readMem(0xe184));
        // 26 00D1
        gbc.setState(0xe96c, 0xe413, 0xaa10, 0x82f4, 0xa3cf, 0x7529, 0x0, 0x0);
        gbc.writeMem(0xe96c, { 0x26, 0x61 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe413, gbc.sp());
        EXPECT(0xe96e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe96c));
        EXPECT(0x61, gbc.readMem(0xe96d));
        // 26 00D2
        gbc.setState(0xdee6, 0x5115, 0xcf0, 0xd7d0, 0xd266, 0x9e5c, 0x0, 0x0);
        gbc.writeMem(0xdee6, { 0x26, 0xb2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5115, gbc.sp());
        EXPECT(0xdee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xdee6));
        EXPECT(0xb2, gbc.readMem(0xdee7));
        // 26 00D3
        gbc.setState(0x84d3, 0xad32, 0x69d0, 0x687e, 0xf171, 0x482d, 0x0, 0x0);
        gbc.writeMem(0x84d3, { 0x26, 0x7d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xad32, gbc.sp());
        EXPECT(0x84d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x84d3));
        EXPECT(0x7d, gbc.readMem(0x84d4));
        // 26 00D4
        gbc.setState(0x8f1b, 0x15d1, 0x2e80, 0x53e6, 0x9abd, 0x412f, 0x0, 0x1);
        gbc.writeMem(0x8f1b, { 0x26, 0xed });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x15d1, gbc.sp());
        EXPECT(0x8f1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8f1b));
        EXPECT(0xed, gbc.readMem(0x8f1c));
        // 26 00D5
        gbc.setState(0xb77, 0x7f1f, 0x2c80, 0xf8d1, 0xd0a1, 0x7670, 0x0, 0x1);
        gbc.writeMem(0xb77, { 0x26, 0xcf });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7f1f, gbc.sp());
        EXPECT(0xb79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00D6
        gbc.setState(0x9fbb, 0x522d, 0x4510, 0xc383, 0xbabb, 0x8203, 0x1, 0x1);
        gbc.writeMem(0x9fbb, { 0x26, 0x8a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x522d, gbc.sp());
        EXPECT(0x9fbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9fbb));
        EXPECT(0x8a, gbc.readMem(0x9fbc));
        // 26 00D7
        gbc.setState(0x4cfe, 0xf431, 0xe210, 0xb310, 0x4d0d, 0xf73a, 0x1, 0x0);
        gbc.writeMem(0x4cfe, { 0x26, 0xc5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf431, gbc.sp());
        EXPECT(0x4d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00D8
        gbc.setState(0x2c4e, 0x8af8, 0x160, 0x1144, 0xade3, 0xf048, 0x0, 0x1);
        gbc.writeMem(0x2c4e, { 0x26, 0xc9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8af8, gbc.sp());
        EXPECT(0x2c50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00D9
        gbc.setState(0x6ca6, 0xc4c2, 0x790, 0x92e0, 0xb41c, 0x56e4, 0x1, 0x0);
        gbc.writeMem(0x6ca6, { 0x26, 0xe4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc4c2, gbc.sp());
        EXPECT(0x6ca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00DA
        gbc.setState(0x2655, 0xa291, 0xcf0, 0xbba8, 0x4fce, 0xfcfd, 0x0, 0x1);
        gbc.writeMem(0x2655, { 0x26, 0x56 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa291, gbc.sp());
        EXPECT(0x2657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00DB
        gbc.setState(0xdb44, 0xe785, 0x4090, 0xdefd, 0xedb0, 0xedd9, 0x0, 0x1);
        gbc.writeMem(0xdb44, { 0x26, 0x50 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe785, gbc.sp());
        EXPECT(0xdb46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xdb44));
        EXPECT(0x50, gbc.readMem(0xdb45));
        // 26 00DC
        gbc.setState(0xb1b3, 0xf844, 0xb860, 0x1e2d, 0xeb61, 0x4412, 0x0, 0x1);
        gbc.writeMem(0xb1b3, { 0x26, 0xd2 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf844, gbc.sp());
        EXPECT(0xb1b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb1b3));
        EXPECT(0xd2, gbc.readMem(0xb1b4));
        // 26 00DE
        gbc.setState(0x589a, 0x825c, 0xd4d0, 0x66fb, 0xa58e, 0x2846, 0x0, 0x1);
        gbc.writeMem(0x589a, { 0x26, 0xdb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x825c, gbc.sp());
        EXPECT(0x589c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00DF
        gbc.setState(0x37c2, 0x687d, 0x6310, 0xb33b, 0x25c8, 0xeea2, 0x0, 0x0);
        gbc.writeMem(0x37c2, { 0x26, 0xb3 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x687d, gbc.sp());
        EXPECT(0x37c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00E0
        gbc.setState(0xdc38, 0xf04, 0xa70, 0x180f, 0x32be, 0x89d1, 0x1, 0x0);
        gbc.writeMem(0xdc38, { 0x26, 0x31 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf04, gbc.sp());
        EXPECT(0xdc3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xdc38));
        EXPECT(0x31, gbc.readMem(0xdc39));
        // 26 00E1
        gbc.setState(0x75b, 0x44, 0x7fd0, 0xd381, 0x6017, 0x1c0c, 0x0, 0x1);
        gbc.writeMem(0x75b, { 0x26, 0xde });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x44, gbc.sp());
        EXPECT(0x75d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00E2
        gbc.setState(0x4852, 0xa270, 0x84f0, 0x2d2d, 0xa0f9, 0xd3eb, 0x0, 0x0);
        gbc.writeMem(0x4852, { 0x26, 0xce });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa270, gbc.sp());
        EXPECT(0x4854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00E3
        gbc.setState(0x8547, 0xc7ad, 0x93e0, 0xe0c3, 0x7939, 0x8eb1, 0x1, 0x1);
        gbc.writeMem(0x8547, { 0x26, 0x79 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc7ad, gbc.sp());
        EXPECT(0x8549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8547));
        EXPECT(0x79, gbc.readMem(0x8548));
        // 26 00E4
        gbc.setState(0x4c24, 0x6dfa, 0xa700, 0x5c0c, 0xe614, 0xae67, 0x0, 0x0);
        gbc.writeMem(0x4c24, { 0x26, 0x1a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6dfa, gbc.sp());
        EXPECT(0x4c26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00E5
        gbc.setState(0xddd6, 0xdd70, 0x3960, 0x38c2, 0xfd9e, 0x4b26, 0x0, 0x0);
        gbc.writeMem(0xddd6, { 0x26, 0x58 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xdd70, gbc.sp());
        EXPECT(0xddd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xddd6));
        EXPECT(0x58, gbc.readMem(0xddd7));
        // 26 00E6
        gbc.setState(0x3f28, 0xf802, 0x6620, 0x60b1, 0xe091, 0xc0ae, 0x0, 0x1);
        gbc.writeMem(0x3f28, { 0x26, 0xa7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf802, gbc.sp());
        EXPECT(0x3f2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00E7
        gbc.setState(0x4035, 0x4d82, 0x34f0, 0x69d, 0x8265, 0xb605, 0x1, 0x1);
        gbc.writeMem(0x4035, { 0x26, 0x7c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4d82, gbc.sp());
        EXPECT(0x4037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00E8
        gbc.setState(0x48ac, 0x7fa1, 0x6e50, 0xfb8d, 0x4818, 0x5dd0, 0x1, 0x0);
        gbc.writeMem(0x48ac, { 0x26, 0xa });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7fa1, gbc.sp());
        EXPECT(0x48ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00E9
        gbc.setState(0x7170, 0x4f02, 0x6540, 0x5fe1, 0x59ec, 0x924, 0x1, 0x1);
        gbc.writeMem(0x7170, { 0x26, 0x6d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4f02, gbc.sp());
        EXPECT(0x7172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00EA
        gbc.setState(0xd6e5, 0xcb05, 0x4d80, 0xd14d, 0x4cae, 0x524e, 0x1, 0x0);
        gbc.writeMem(0xd6e5, { 0x26, 0x23 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcb05, gbc.sp());
        EXPECT(0xd6e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd6e5));
        EXPECT(0x23, gbc.readMem(0xd6e6));
        // 26 00EB
        gbc.setState(0x3385, 0x4941, 0xa8d0, 0xb201, 0x23c7, 0x54f2, 0x1, 0x0);
        gbc.writeMem(0x3385, { 0x26, 0x71 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4941, gbc.sp());
        EXPECT(0x3387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00EC
        gbc.setState(0x8db4, 0xed2b, 0xe0b0, 0x249e, 0x6606, 0x10b2, 0x1, 0x1);
        gbc.writeMem(0x8db4, { 0x26, 0x68 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xed2b, gbc.sp());
        EXPECT(0x8db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8db4));
        EXPECT(0x68, gbc.readMem(0x8db5));
        // 26 00ED
        gbc.setState(0xd4d0, 0xaa00, 0xd6a0, 0xaaac, 0x7a25, 0xa21f, 0x1, 0x1);
        gbc.writeMem(0xd4d0, { 0x26, 0x3f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xaa00, gbc.sp());
        EXPECT(0xd4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd4d0));
        EXPECT(0x3f, gbc.readMem(0xd4d1));
        // 26 00EE
        gbc.setState(0x78f6, 0xa95c, 0x4bc0, 0x32d2, 0xd4b0, 0x3403, 0x1, 0x0);
        gbc.writeMem(0x78f6, { 0x26, 0x82 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa95c, gbc.sp());
        EXPECT(0x78f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00EF
        gbc.setState(0x3208, 0xfb4a, 0x5bd0, 0xcd1e, 0xda56, 0xc493, 0x0, 0x0);
        gbc.writeMem(0x3208, { 0x26, 0x9e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xfb4a, gbc.sp());
        EXPECT(0x320a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00F0
        gbc.setState(0x20f8, 0xa18d, 0xe9c0, 0x7348, 0xba5f, 0x95aa, 0x1, 0x1);
        gbc.writeMem(0x20f8, { 0x26, 0xa9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa18d, gbc.sp());
        EXPECT(0x20fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00F1
        gbc.setState(0xbf46, 0xcfcc, 0x68a0, 0xf473, 0xf3f, 0x49, 0x1, 0x0);
        gbc.writeMem(0xbf46, { 0x26, 0xe0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcfcc, gbc.sp());
        EXPECT(0xbf48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbf46));
        EXPECT(0xe0, gbc.readMem(0xbf47));
        // 26 00F2
        gbc.setState(0x48ea, 0xecfe, 0x9d0, 0xde0d, 0xa8bc, 0x2848, 0x0, 0x0);
        gbc.writeMem(0x48ea, { 0x26, 0xbb });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xecfe, gbc.sp());
        EXPECT(0x48ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00F3
        gbc.setState(0xcfa2, 0x3555, 0x1ce0, 0x2ca5, 0x97be, 0x4f93, 0x0, 0x1);
        gbc.writeMem(0xcfa2, { 0x26, 0x8c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3555, gbc.sp());
        EXPECT(0xcfa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xcfa2));
        EXPECT(0x8c, gbc.readMem(0xcfa3));
        // 26 00F4
        gbc.setState(0x2a8f, 0x6372, 0x9940, 0xf4a8, 0x6fcb, 0x36af, 0x1, 0x0);
        gbc.writeMem(0x2a8f, { 0x26, 0x61 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6372, gbc.sp());
        EXPECT(0x2a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00F5
        gbc.setState(0x10b7, 0x2740, 0x700, 0x5c04, 0xeb04, 0x4f90, 0x1, 0x1);
        gbc.writeMem(0x10b7, { 0x26, 0xf8 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2740, gbc.sp());
        EXPECT(0x10b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00F6
        gbc.setState(0xbc89, 0x2688, 0x3300, 0x492b, 0x81d9, 0xcaf8, 0x1, 0x1);
        gbc.writeMem(0xbc89, { 0x26, 0xd2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2688, gbc.sp());
        EXPECT(0xbc8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbc89));
        EXPECT(0xd2, gbc.readMem(0xbc8a));
        // 26 00F7
        gbc.setState(0x47c0, 0x4e27, 0xd8b0, 0x5dbb, 0xdd8, 0x9518, 0x1, 0x1);
        gbc.writeMem(0x47c0, { 0x26, 0xbd });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4e27, gbc.sp());
        EXPECT(0x47c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00F8
        gbc.setState(0x7311, 0x8c00, 0x4ac0, 0x493a, 0xfaa3, 0x2932, 0x1, 0x0);
        gbc.writeMem(0x7311, { 0x26, 0x48 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8c00, gbc.sp());
        EXPECT(0x7313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 00F9
        gbc.setState(0x90e1, 0x5ff1, 0xdef0, 0xa97a, 0x197d, 0x78b8, 0x0, 0x1);
        gbc.writeMem(0x90e1, { 0x26, 0x15 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5ff1, gbc.sp());
        EXPECT(0x90e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x90e1));
        EXPECT(0x15, gbc.readMem(0x90e2));
        // 26 00FB
        gbc.setState(0xafa6, 0xb557, 0xab30, 0x830f, 0xc95d, 0x439a, 0x1, 0x0);
        gbc.writeMem(0xafa6, { 0x26, 0x23 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb557, gbc.sp());
        EXPECT(0xafa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xafa6));
        EXPECT(0x23, gbc.readMem(0xafa7));
        // 26 00FC
        gbc.setState(0xaa57, 0x525c, 0x1ad0, 0x63e2, 0x1c3c, 0x8cde, 0x0, 0x1);
        gbc.writeMem(0xaa57, { 0x26, 0xc1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x525c, gbc.sp());
        EXPECT(0xaa59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xaa57));
        EXPECT(0xc1, gbc.readMem(0xaa58));
        // 26 00FD
        gbc.setState(0xd6f, 0x5b84, 0x3c30, 0x4fa0, 0x8240, 0xe820, 0x0, 0x0);
        gbc.writeMem(0xd6f, { 0x26, 0xa6 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5b84, gbc.sp());
        EXPECT(0xd71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 00FE
        gbc.setState(0x96c0, 0x24f8, 0x63d0, 0x2ec0, 0x39e8, 0xb2d7, 0x1, 0x1);
        gbc.writeMem(0x96c0, { 0x26, 0x9d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x24f8, gbc.sp());
        EXPECT(0x96c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x96c0));
        EXPECT(0x9d, gbc.readMem(0x96c1));
        // 26 00FF
        gbc.setState(0x3c0b, 0x1f8c, 0xbc60, 0xc703, 0xc7fe, 0xa449, 0x0, 0x0);
        gbc.writeMem(0x3c0b, { 0x26, 0xcd });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1f8c, gbc.sp());
        EXPECT(0x3c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0100
        gbc.setState(0xa8cf, 0x4e04, 0xbe10, 0xe542, 0x1023, 0x76f9, 0x0, 0x0);
        gbc.writeMem(0xa8cf, { 0x26, 0xa3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4e04, gbc.sp());
        EXPECT(0xa8d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa8cf));
        EXPECT(0xa3, gbc.readMem(0xa8d0));
        // 26 0101
        gbc.setState(0x278b, 0xf6bc, 0x7830, 0xefff, 0xfc14, 0xdbbc, 0x1, 0x0);
        gbc.writeMem(0x278b, { 0x26, 0x71 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf6bc, gbc.sp());
        EXPECT(0x278d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0102
        gbc.setState(0x710d, 0x22a3, 0x9630, 0x449c, 0xdb64, 0x33f4, 0x1, 0x0);
        gbc.writeMem(0x710d, { 0x26, 0xf6 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x22a3, gbc.sp());
        EXPECT(0x710f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0103
        gbc.setState(0x3b99, 0xa2a2, 0x5350, 0x91d4, 0x7bed, 0xaa42, 0x0, 0x0);
        gbc.writeMem(0x3b99, { 0x26, 0xad });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa2a2, gbc.sp());
        EXPECT(0x3b9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0104
        gbc.setState(0x100f, 0xeec6, 0xba70, 0xf70d, 0x667b, 0x4667, 0x0, 0x0);
        gbc.writeMem(0x100f, { 0x26, 0xea });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xeec6, gbc.sp());
        EXPECT(0x1011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0105
        gbc.setState(0x97e, 0x3eea, 0x3d20, 0xee5e, 0xe90a, 0xabd5, 0x0, 0x1);
        gbc.writeMem(0x97e, { 0x26, 0xd9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3eea, gbc.sp());
        EXPECT(0x980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0106
        gbc.setState(0xb772, 0x5046, 0xcbb0, 0x8b11, 0x4980, 0x5d5b, 0x0, 0x0);
        gbc.writeMem(0xb772, { 0x26, 0x12 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5046, gbc.sp());
        EXPECT(0xb774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb772));
        EXPECT(0x12, gbc.readMem(0xb773));
        // 26 0107
        gbc.setState(0x8e4e, 0x7988, 0x2cb0, 0x7695, 0x9559, 0x1d04, 0x0, 0x1);
        gbc.writeMem(0x8e4e, { 0x26, 0x8e });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7988, gbc.sp());
        EXPECT(0x8e50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8e4e));
        EXPECT(0x8e, gbc.readMem(0x8e4f));
        // 26 0108
        gbc.setState(0xe78c, 0xf78e, 0x2780, 0xc649, 0xb4bc, 0xda6a, 0x0, 0x1);
        gbc.writeMem(0xe78c, { 0x26, 0xe0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf78e, gbc.sp());
        EXPECT(0xe78e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe78c));
        EXPECT(0xe0, gbc.readMem(0xe78d));
        // 26 0109
        gbc.setState(0xc408, 0x8277, 0xdba0, 0x590c, 0x2777, 0x7b26, 0x0, 0x1);
        gbc.writeMem(0xc408, { 0x26, 0x59 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8277, gbc.sp());
        EXPECT(0xc40a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc408));
        EXPECT(0x59, gbc.readMem(0xc409));
        // 26 010A
        gbc.setState(0xb97a, 0x7546, 0x8f00, 0x6dc0, 0xd141, 0x2fb8, 0x1, 0x0);
        gbc.writeMem(0xb97a, { 0x26, 0x90 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7546, gbc.sp());
        EXPECT(0xb97c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb97a));
        EXPECT(0x90, gbc.readMem(0xb97b));
        // 26 010B
        gbc.setState(0x5a62, 0x979c, 0x8ef0, 0x748c, 0xfca5, 0xb5e6, 0x1, 0x0);
        gbc.writeMem(0x5a62, { 0x26, 0xbb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x979c, gbc.sp());
        EXPECT(0x5a64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 010C
        gbc.setState(0xe0ee, 0xe12f, 0xccd0, 0x5246, 0x9c5e, 0x3ffc, 0x1, 0x1);
        gbc.writeMem(0xe0ee, { 0x26, 0xab });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe12f, gbc.sp());
        EXPECT(0xe0f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe0ee));
        EXPECT(0xab, gbc.readMem(0xe0ef));
        // 26 010D
        gbc.setState(0x451a, 0x6e7, 0x2f40, 0xde4a, 0xf11, 0xbae1, 0x1, 0x1);
        gbc.writeMem(0x451a, { 0x26, 0xd2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6e7, gbc.sp());
        EXPECT(0x451c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 010E
        gbc.setState(0x7bc5, 0x4ba1, 0x9460, 0x306c, 0x6c1b, 0x3095, 0x1, 0x1);
        gbc.writeMem(0x7bc5, { 0x26, 0xe7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4ba1, gbc.sp());
        EXPECT(0x7bc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 010F
        gbc.setState(0xeb05, 0x328a, 0xcb40, 0x1eda, 0x4725, 0x2fd9, 0x1, 0x0);
        gbc.writeMem(0xeb05, { 0x26, 0x85 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x328a, gbc.sp());
        EXPECT(0xeb07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xeb05));
        EXPECT(0x85, gbc.readMem(0xeb06));
        // 26 0110
        gbc.setState(0x6f12, 0xa5e, 0xbfa0, 0x6507, 0xd698, 0x85b4, 0x0, 0x0);
        gbc.writeMem(0x6f12, { 0x26, 0xb6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa5e, gbc.sp());
        EXPECT(0x6f14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0111
        gbc.setState(0x3f1a, 0x10e2, 0x2960, 0x6288, 0xc679, 0xbe79, 0x1, 0x1);
        gbc.writeMem(0x3f1a, { 0x26, 0xe7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x10e2, gbc.sp());
        EXPECT(0x3f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0112
        gbc.setState(0xbebd, 0x9be2, 0xccc0, 0x23c4, 0x9761, 0x7220, 0x0, 0x1);
        gbc.writeMem(0xbebd, { 0x26, 0x9d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9be2, gbc.sp());
        EXPECT(0xbebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbebd));
        EXPECT(0x9d, gbc.readMem(0xbebe));
        // 26 0113
        gbc.setState(0x2cf9, 0xad47, 0x5d90, 0xd62c, 0x48d0, 0x856d, 0x1, 0x1);
        gbc.writeMem(0x2cf9, { 0x26, 0x20 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xad47, gbc.sp());
        EXPECT(0x2cfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0114
        gbc.setState(0x24b, 0xf2a4, 0xabc0, 0xda5a, 0x857, 0x4901, 0x1, 0x0);
        gbc.writeMem(0x24b, { 0x26, 0x79 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf2a4, gbc.sp());
        EXPECT(0x24d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0115
        gbc.setState(0xc1d7, 0x8618, 0xcf0, 0xbcba, 0xebb, 0xd620, 0x1, 0x1);
        gbc.writeMem(0xc1d7, { 0x26, 0xd6 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8618, gbc.sp());
        EXPECT(0xc1d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc1d7));
        EXPECT(0xd6, gbc.readMem(0xc1d8));
        // 26 0116
        gbc.setState(0x6a58, 0x67d4, 0xca60, 0x7454, 0x81b1, 0x6101, 0x1, 0x0);
        gbc.writeMem(0x6a58, { 0x26, 0x6b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x67d4, gbc.sp());
        EXPECT(0x6a5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0117
        gbc.setState(0x9412, 0xe70b, 0xcec0, 0x8d37, 0x4f96, 0x7347, 0x0, 0x1);
        gbc.writeMem(0x9412, { 0x26, 0xbd });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe70b, gbc.sp());
        EXPECT(0x9414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9412));
        EXPECT(0xbd, gbc.readMem(0x9413));
        // 26 0118
        gbc.setState(0xba08, 0xd9c8, 0x90a0, 0x12a7, 0xcf48, 0xece9, 0x1, 0x1);
        gbc.writeMem(0xba08, { 0x26, 0x15 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd9c8, gbc.sp());
        EXPECT(0xba0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xba08));
        EXPECT(0x15, gbc.readMem(0xba09));
        // 26 0119
        gbc.setState(0xce84, 0x38c, 0x1950, 0x12db, 0x4245, 0x8f5b, 0x0, 0x0);
        gbc.writeMem(0xce84, { 0x26, 0x2d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x38c, gbc.sp());
        EXPECT(0xce86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xce84));
        EXPECT(0x2d, gbc.readMem(0xce85));
        // 26 011A
        gbc.setState(0x44f1, 0xc09f, 0x9190, 0x6ee4, 0x7ae0, 0xba82, 0x1, 0x0);
        gbc.writeMem(0x44f1, { 0x26, 0x71 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc09f, gbc.sp());
        EXPECT(0x44f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 011B
        gbc.setState(0xe60a, 0xc035, 0xbf60, 0x5af1, 0x7160, 0x5113, 0x1, 0x1);
        gbc.writeMem(0xe60a, { 0x26, 0x12 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc035, gbc.sp());
        EXPECT(0xe60c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe60a));
        EXPECT(0x12, gbc.readMem(0xe60b));
        // 26 011C
        gbc.setState(0xdc3e, 0x503b, 0x3e30, 0x2d74, 0xc54f, 0xf39f, 0x1, 0x0);
        gbc.writeMem(0xdc3e, { 0x26, 0xc2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x503b, gbc.sp());
        EXPECT(0xdc40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xdc3e));
        EXPECT(0xc2, gbc.readMem(0xdc3f));
        // 26 011D
        gbc.setState(0xc3d2, 0x9e36, 0xdd20, 0x1a4a, 0x99db, 0x69ca, 0x0, 0x1);
        gbc.writeMem(0xc3d2, { 0x26, 0xb2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9e36, gbc.sp());
        EXPECT(0xc3d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc3d2));
        EXPECT(0xb2, gbc.readMem(0xc3d3));
        // 26 011E
        gbc.setState(0xcdf5, 0x9789, 0xb9f0, 0xda7f, 0x6a2b, 0x222a, 0x1, 0x1);
        gbc.writeMem(0xcdf5, { 0x26, 0x17 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9789, gbc.sp());
        EXPECT(0xcdf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xcdf5));
        EXPECT(0x17, gbc.readMem(0xcdf6));
        // 26 011F
        gbc.setState(0x7362, 0xaec9, 0x7e40, 0xd427, 0x1184, 0x9eae, 0x0, 0x1);
        gbc.writeMem(0x7362, { 0x26, 0xe4 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xaec9, gbc.sp());
        EXPECT(0x7364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0120
        gbc.setState(0x3504, 0x1e4, 0xa1b0, 0x4c85, 0x1eed, 0x3325, 0x1, 0x1);
        gbc.writeMem(0x3504, { 0x26, 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1e4, gbc.sp());
        EXPECT(0x3506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0121
        gbc.setState(0xae12, 0xbd9a, 0x6cc0, 0xc5f6, 0x79b, 0x3b22, 0x0, 0x0);
        gbc.writeMem(0xae12, { 0x26, 0x98 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbd9a, gbc.sp());
        EXPECT(0xae14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xae12));
        EXPECT(0x98, gbc.readMem(0xae13));
        // 26 0123
        gbc.setState(0xdac8, 0xd227, 0xd560, 0xb22e, 0x7dd6, 0x75e4, 0x0, 0x0);
        gbc.writeMem(0xdac8, { 0x26, 0x93 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd227, gbc.sp());
        EXPECT(0xdaca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xdac8));
        EXPECT(0x93, gbc.readMem(0xdac9));
        // 26 0124
        gbc.setState(0x19c1, 0xb777, 0x4080, 0xd694, 0x78ca, 0x5f97, 0x0, 0x0);
        gbc.writeMem(0x19c1, { 0x26, 0x85 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb777, gbc.sp());
        EXPECT(0x19c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0125
        gbc.setState(0x75ca, 0xe013, 0x7d30, 0x8510, 0x8916, 0xed6c, 0x1, 0x1);
        gbc.writeMem(0x75ca, { 0x26, 0x6b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe013, gbc.sp());
        EXPECT(0x75cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0126
        gbc.setState(0xdd39, 0xf367, 0xabc0, 0xede1, 0x207e, 0x3443, 0x0, 0x1);
        gbc.writeMem(0xdd39, { 0x26, 0x56 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf367, gbc.sp());
        EXPECT(0xdd3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xdd39));
        EXPECT(0x56, gbc.readMem(0xdd3a));
        // 26 0127
        gbc.setState(0x801d, 0x4c32, 0x0, 0x4c3a, 0x7112, 0xdc40, 0x0, 0x0);
        gbc.writeMem(0x801d, { 0x26, 0x6d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4c32, gbc.sp());
        EXPECT(0x801f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x801d));
        EXPECT(0x6d, gbc.readMem(0x801e));
        // 26 0128
        gbc.setState(0x6446, 0x4cda, 0x45a0, 0x88e5, 0x2b3e, 0x69cd, 0x0, 0x0);
        gbc.writeMem(0x6446, { 0x26, 0x4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4cda, gbc.sp());
        EXPECT(0x6448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0129
        gbc.setState(0x6678, 0x29a5, 0x15f0, 0x7fa9, 0x3bba, 0x1255, 0x1, 0x0);
        gbc.writeMem(0x6678, { 0x26, 0xad });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x29a5, gbc.sp());
        EXPECT(0x667a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 012A
        gbc.setState(0x507f, 0xdd99, 0x3430, 0xf810, 0x3cbf, 0xc5f, 0x0, 0x0);
        gbc.writeMem(0x507f, { 0x26, 0xfa });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xdd99, gbc.sp());
        EXPECT(0x5081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 012B
        gbc.setState(0xe48c, 0x9c5c, 0x9890, 0x83f5, 0x5a28, 0xa7f4, 0x1, 0x1);
        gbc.writeMem(0xe48c, { 0x26, 0x10 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9c5c, gbc.sp());
        EXPECT(0xe48e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe48c));
        EXPECT(0x10, gbc.readMem(0xe48d));
        // 26 012C
        gbc.setState(0x555b, 0x661d, 0x4930, 0x5d1c, 0xf7f4, 0x4132, 0x1, 0x1);
        gbc.writeMem(0x555b, { 0x26, 0x8f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x661d, gbc.sp());
        EXPECT(0x555d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 012D
        gbc.setState(0x3b2d, 0x3d8c, 0x6610, 0x90cf, 0x8874, 0xc76d, 0x0, 0x1);
        gbc.writeMem(0x3b2d, { 0x26, 0xeb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3d8c, gbc.sp());
        EXPECT(0x3b2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 012E
        gbc.setState(0x9012, 0xd8c, 0xc9d0, 0x36bc, 0x593, 0x9124, 0x0, 0x0);
        gbc.writeMem(0x9012, { 0x26, 0x1f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd8c, gbc.sp());
        EXPECT(0x9014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9012));
        EXPECT(0x1f, gbc.readMem(0x9013));
        // 26 012F
        gbc.setState(0x62da, 0x4fc0, 0x9840, 0xa59a, 0xb1db, 0x6853, 0x0, 0x1);
        gbc.writeMem(0x62da, { 0x26, 0xb0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4fc0, gbc.sp());
        EXPECT(0x62dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0130
        gbc.setState(0x1020, 0x426a, 0xbee0, 0x1a73, 0x1554, 0x78ec, 0x0, 0x0);
        gbc.writeMem(0x1020, { 0x26, 0xfb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x426a, gbc.sp());
        EXPECT(0x1022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0131
        gbc.setState(0x76fc, 0xe485, 0x3fd0, 0x9e05, 0x867c, 0xd519, 0x1, 0x1);
        gbc.writeMem(0x76fc, { 0x26, 0x3c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe485, gbc.sp());
        EXPECT(0x76fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0132
        gbc.setState(0x7dbe, 0xb956, 0x30e0, 0xe7f4, 0x4671, 0x37d5, 0x0, 0x0);
        gbc.writeMem(0x7dbe, { 0x26, 0x4a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb956, gbc.sp());
        EXPECT(0x7dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0133
        gbc.setState(0x7c05, 0x6c88, 0x3860, 0xbe01, 0xa51d, 0x17a2, 0x1, 0x1);
        gbc.writeMem(0x7c05, { 0x26, 0xa6 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6c88, gbc.sp());
        EXPECT(0x7c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0134
        gbc.setState(0x887, 0x5cde, 0x3ff0, 0xb029, 0x252e, 0xd324, 0x1, 0x0);
        gbc.writeMem(0x887, { 0x26, 0x94 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5cde, gbc.sp());
        EXPECT(0x889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0135
        gbc.setState(0x6828, 0x27a7, 0xd850, 0x27ee, 0xedca, 0xb647, 0x0, 0x1);
        gbc.writeMem(0x6828, { 0x26, 0xde });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x27a7, gbc.sp());
        EXPECT(0x682a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0136
        gbc.setState(0x3a1f, 0x9dac, 0xe630, 0x507a, 0xdd69, 0x2982, 0x0, 0x0);
        gbc.writeMem(0x3a1f, { 0x26, 0x9c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9dac, gbc.sp());
        EXPECT(0x3a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0137
        gbc.setState(0x643f, 0x17b5, 0xa0b0, 0xfac3, 0xede0, 0xb7b3, 0x1, 0x0);
        gbc.writeMem(0x643f, { 0x26, 0x5d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x17b5, gbc.sp());
        EXPECT(0x6441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0138
        gbc.setState(0x6a85, 0xe562, 0x3070, 0x8042, 0x5879, 0xed40, 0x1, 0x1);
        gbc.writeMem(0x6a85, { 0x26, 0x76 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe562, gbc.sp());
        EXPECT(0x6a87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0139
        gbc.setState(0x648f, 0xa00c, 0x6390, 0xc741, 0xc7d7, 0xff3a, 0x1, 0x1);
        gbc.writeMem(0x648f, { 0x26, 0x9b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa00c, gbc.sp());
        EXPECT(0x6491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 013A
        gbc.setState(0x50c3, 0x174a, 0x20e0, 0x1076, 0x72bd, 0x2a59, 0x0, 0x0);
        gbc.writeMem(0x50c3, { 0x26, 0x99 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x174a, gbc.sp());
        EXPECT(0x50c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 013B
        gbc.setState(0x92fd, 0x3938, 0xaaa0, 0x9467, 0x699e, 0x4d50, 0x0, 0x1);
        gbc.writeMem(0x92fd, { 0x26, 0x2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3938, gbc.sp());
        EXPECT(0x92ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x92fd));
        EXPECT(0x2, gbc.readMem(0x92fe));
        // 26 013C
        gbc.setState(0xeec0, 0x3aec, 0x95b0, 0xe32f, 0xb949, 0xcea3, 0x1, 0x0);
        gbc.writeMem(0xeec0, { 0x26, 0x28 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3aec, gbc.sp());
        EXPECT(0xeec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xeec0));
        EXPECT(0x28, gbc.readMem(0xeec1));
        // 26 013D
        gbc.setState(0xdff4, 0x48c5, 0xec90, 0xf5ab, 0x905d, 0x415a, 0x0, 0x0);
        gbc.writeMem(0xdff4, { 0x26, 0x86 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x48c5, gbc.sp());
        EXPECT(0xdff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xdff4));
        EXPECT(0x86, gbc.readMem(0xdff5));
        // 26 013E
        gbc.setState(0x5f1f, 0x5d34, 0x8280, 0x4f8a, 0x2adf, 0x9a9c, 0x1, 0x0);
        gbc.writeMem(0x5f1f, { 0x26, 0x73 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5d34, gbc.sp());
        EXPECT(0x5f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 013F
        gbc.setState(0x1638, 0x4896, 0x27e0, 0x3cd4, 0xf916, 0x1d7, 0x0, 0x1);
        gbc.writeMem(0x1638, { 0x26, 0x2f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4896, gbc.sp());
        EXPECT(0x163a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0140
        gbc.setState(0x881, 0xa325, 0x7c90, 0x6e03, 0xba75, 0xca21, 0x0, 0x1);
        gbc.writeMem(0x881, { 0x26, 0x25 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa325, gbc.sp());
        EXPECT(0x883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0141
        gbc.setState(0x95ae, 0x315d, 0x66c0, 0xd26, 0x182d, 0xa60e, 0x1, 0x1);
        gbc.writeMem(0x95ae, { 0x26, 0xc3 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x315d, gbc.sp());
        EXPECT(0x95b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x95ae));
        EXPECT(0xc3, gbc.readMem(0x95af));
        // 26 0142
        gbc.setState(0xabe8, 0x3cb6, 0x8010, 0x1281, 0xd544, 0xb305, 0x0, 0x1);
        gbc.writeMem(0xabe8, { 0x26, 0xab });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3cb6, gbc.sp());
        EXPECT(0xabea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xabe8));
        EXPECT(0xab, gbc.readMem(0xabe9));
        // 26 0143
        gbc.setState(0x91b7, 0xdc19, 0x3240, 0x5975, 0x508f, 0x886c, 0x1, 0x0);
        gbc.writeMem(0x91b7, { 0x26, 0xa0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdc19, gbc.sp());
        EXPECT(0x91b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x91b7));
        EXPECT(0xa0, gbc.readMem(0x91b8));
        // 26 0144
        gbc.setState(0x9d42, 0x3a5f, 0x1f30, 0xa5fa, 0xf6f9, 0x69cf, 0x0, 0x1);
        gbc.writeMem(0x9d42, { 0x26, 0xd4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3a5f, gbc.sp());
        EXPECT(0x9d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9d42));
        EXPECT(0xd4, gbc.readMem(0x9d43));
        // 26 0145
        gbc.setState(0x1c83, 0x37ce, 0x260, 0xcbbf, 0x1b92, 0xda80, 0x0, 0x1);
        gbc.writeMem(0x1c83, { 0x26, 0x28 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x37ce, gbc.sp());
        EXPECT(0x1c85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0146
        gbc.setState(0x9a07, 0xcf36, 0x69e0, 0x7b50, 0xa8aa, 0x5785, 0x1, 0x0);
        gbc.writeMem(0x9a07, { 0x26, 0x2b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xcf36, gbc.sp());
        EXPECT(0x9a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9a07));
        EXPECT(0x2b, gbc.readMem(0x9a08));
        // 26 0147
        gbc.setState(0x8f, 0xa8dd, 0xe0d0, 0x8ecc, 0x1ee4, 0x52cc, 0x1, 0x1);
        gbc.writeMem(0x8f, { 0x26, 0xd });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa8dd, gbc.sp());
        EXPECT(0x91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0149
        gbc.setState(0x3f3, 0x2700, 0x9ff0, 0x275c, 0xa31c, 0x5ffe, 0x0, 0x1);
        gbc.writeMem(0x3f3, { 0x26, 0xee });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2700, gbc.sp());
        EXPECT(0x3f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 014A
        gbc.setState(0xc5e5, 0x981, 0x6280, 0xf551, 0xd16b, 0x2376, 0x0, 0x0);
        gbc.writeMem(0xc5e5, { 0x26, 0x66 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x981, gbc.sp());
        EXPECT(0xc5e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc5e5));
        EXPECT(0x66, gbc.readMem(0xc5e6));
        // 26 014B
        gbc.setState(0xc011, 0x111e, 0x2450, 0x272a, 0xd24e, 0xbbfc, 0x0, 0x0);
        gbc.writeMem(0xc011, { 0x26, 0xe5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x111e, gbc.sp());
        EXPECT(0xc013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc011));
        EXPECT(0xe5, gbc.readMem(0xc012));
        // 26 014C
        gbc.setState(0x69f0, 0x8f0b, 0xb870, 0xeb99, 0x1495, 0x612d, 0x0, 0x1);
        gbc.writeMem(0x69f0, { 0x26, 0x15 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8f0b, gbc.sp());
        EXPECT(0x69f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 014D
        gbc.setState(0x87d8, 0x5491, 0x1280, 0x1424, 0xa9be, 0x78e9, 0x1, 0x0);
        gbc.writeMem(0x87d8, { 0x26, 0x60 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5491, gbc.sp());
        EXPECT(0x87da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x87d8));
        EXPECT(0x60, gbc.readMem(0x87d9));
        // 26 014E
        gbc.setState(0x974f, 0x19dc, 0x5a30, 0xfeb2, 0xe059, 0x2ed6, 0x1, 0x1);
        gbc.writeMem(0x974f, { 0x26, 0xf2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x19dc, gbc.sp());
        EXPECT(0x9751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x974f));
        EXPECT(0xf2, gbc.readMem(0x9750));
        // 26 0151
        gbc.setState(0xc646, 0xeed0, 0xb740, 0xc44, 0x92a6, 0xdfaa, 0x1, 0x1);
        gbc.writeMem(0xc646, { 0x26, 0xc3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xeed0, gbc.sp());
        EXPECT(0xc648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc646));
        EXPECT(0xc3, gbc.readMem(0xc647));
        // 26 0152
        gbc.setState(0x7b87, 0x6bc8, 0xbe80, 0x951d, 0x8ada, 0x60ac, 0x1, 0x0);
        gbc.writeMem(0x7b87, { 0x26, 0xad });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6bc8, gbc.sp());
        EXPECT(0x7b89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0154
        gbc.setState(0xc0f9, 0x4c3e, 0x4160, 0x2f35, 0x86f0, 0x1727, 0x0, 0x1);
        gbc.writeMem(0xc0f9, { 0x26, 0xbe });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4c3e, gbc.sp());
        EXPECT(0xc0fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc0f9));
        EXPECT(0xbe, gbc.readMem(0xc0fa));
        // 26 0155
        gbc.setState(0xaf19, 0xd702, 0x9c30, 0x48f6, 0x89df, 0xd4c1, 0x1, 0x1);
        gbc.writeMem(0xaf19, { 0x26, 0x65 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd702, gbc.sp());
        EXPECT(0xaf1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xaf19));
        EXPECT(0x65, gbc.readMem(0xaf1a));
        // 26 0156
        gbc.setState(0xb57f, 0x11a2, 0x49b0, 0x13b8, 0x6bd1, 0x4bfc, 0x1, 0x1);
        gbc.writeMem(0xb57f, { 0x26, 0xd8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x11a2, gbc.sp());
        EXPECT(0xb581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb57f));
        EXPECT(0xd8, gbc.readMem(0xb580));
        // 26 0157
        gbc.setState(0x796f, 0x957a, 0x9b00, 0xda3c, 0x5372, 0xcc69, 0x1, 0x1);
        gbc.writeMem(0x796f, { 0x26, 0x35 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x957a, gbc.sp());
        EXPECT(0x7971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0158
        gbc.setState(0x8821, 0x5daf, 0xe4e0, 0x6d5b, 0x97ff, 0x243d, 0x1, 0x1);
        gbc.writeMem(0x8821, { 0x26, 0xea });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5daf, gbc.sp());
        EXPECT(0x8823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8821));
        EXPECT(0xea, gbc.readMem(0x8822));
        // 26 0159
        gbc.setState(0x48b2, 0x1f49, 0x780, 0xab18, 0xa13c, 0xd6af, 0x0, 0x1);
        gbc.writeMem(0x48b2, { 0x26, 0x3d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1f49, gbc.sp());
        EXPECT(0x48b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 015A
        gbc.setState(0xc951, 0x9e40, 0x4310, 0x6408, 0xcbc5, 0xd6cb, 0x1, 0x0);
        gbc.writeMem(0xc951, { 0x26, 0x4c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9e40, gbc.sp());
        EXPECT(0xc953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc951));
        EXPECT(0x4c, gbc.readMem(0xc952));
        // 26 015B
        gbc.setState(0x560d, 0x8f80, 0x5140, 0x6391, 0x9756, 0x20fd, 0x1, 0x1);
        gbc.writeMem(0x560d, { 0x26, 0x91 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8f80, gbc.sp());
        EXPECT(0x560f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 015C
        gbc.setState(0x7137, 0xed65, 0x4df0, 0x9168, 0xe6fa, 0x5775, 0x0, 0x0);
        gbc.writeMem(0x7137, { 0x26, 0xce });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xed65, gbc.sp());
        EXPECT(0x7139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 015D
        gbc.setState(0xa599, 0xd1a6, 0x2230, 0xcdcd, 0xbe79, 0x8dd9, 0x1, 0x1);
        gbc.writeMem(0xa599, { 0x26, 0x4b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd1a6, gbc.sp());
        EXPECT(0xa59b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa599));
        EXPECT(0x4b, gbc.readMem(0xa59a));
        // 26 015E
        gbc.setState(0x31ca, 0xa081, 0xe0b0, 0x5ac1, 0xdf3d, 0x1a8c, 0x0, 0x0);
        gbc.writeMem(0x31ca, { 0x26, 0x80 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa081, gbc.sp());
        EXPECT(0x31cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 015F
        gbc.setState(0xb6b4, 0x616a, 0xc0e0, 0x2eeb, 0xbdae, 0xedc7, 0x0, 0x1);
        gbc.writeMem(0xb6b4, { 0x26, 0xa3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x616a, gbc.sp());
        EXPECT(0xb6b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb6b4));
        EXPECT(0xa3, gbc.readMem(0xb6b5));
        // 26 0160
        gbc.setState(0xb5f, 0xc8d, 0xa750, 0xb95d, 0x2626, 0x7126, 0x1, 0x0);
        gbc.writeMem(0xb5f, { 0x26, 0x51 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc8d, gbc.sp());
        EXPECT(0xb61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0161
        gbc.setState(0xe3ba, 0x28be, 0x8e60, 0xe33c, 0xc351, 0x73a1, 0x1, 0x0);
        gbc.writeMem(0xe3ba, { 0x26, 0xeb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x28be, gbc.sp());
        EXPECT(0xe3bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe3ba));
        EXPECT(0xeb, gbc.readMem(0xe3bb));
        // 26 0162
        gbc.setState(0x1b63, 0x4071, 0x1020, 0x3047, 0x301c, 0x2fa7, 0x1, 0x1);
        gbc.writeMem(0x1b63, { 0x26, 0x4a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4071, gbc.sp());
        EXPECT(0x1b65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0163
        gbc.setState(0x5ef8, 0x8b1c, 0xa710, 0x1b75, 0xd797, 0x7bc8, 0x1, 0x0);
        gbc.writeMem(0x5ef8, { 0x26, 0x30 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8b1c, gbc.sp());
        EXPECT(0x5efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0164
        gbc.setState(0x2312, 0xca25, 0xa40, 0xcd92, 0x49ea, 0x9a81, 0x0, 0x1);
        gbc.writeMem(0x2312, { 0x26, 0x5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xca25, gbc.sp());
        EXPECT(0x2314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0166
        gbc.setState(0x12e1, 0x7f8a, 0x3640, 0x11ed, 0x39e3, 0xceea, 0x0, 0x1);
        gbc.writeMem(0x12e1, { 0x26, 0x69 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7f8a, gbc.sp());
        EXPECT(0x12e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0167
        gbc.setState(0x8178, 0xc8cb, 0x56b0, 0xaf8, 0x3f81, 0x7419, 0x1, 0x1);
        gbc.writeMem(0x8178, { 0x26, 0xd8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc8cb, gbc.sp());
        EXPECT(0x817a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8178));
        EXPECT(0xd8, gbc.readMem(0x8179));
        // 26 0168
        gbc.setState(0xab8, 0xdfce, 0x64c0, 0x8596, 0x97b1, 0x983a, 0x0, 0x1);
        gbc.writeMem(0xab8, { 0x26, 0x9b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdfce, gbc.sp());
        EXPECT(0xaba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0169
        gbc.setState(0xc704, 0xe367, 0x8e40, 0xdfac, 0x3189, 0x3b1d, 0x0, 0x0);
        gbc.writeMem(0xc704, { 0x26, 0x8e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe367, gbc.sp());
        EXPECT(0xc706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc704));
        EXPECT(0x8e, gbc.readMem(0xc705));
        // 26 016A
        gbc.setState(0x9dee, 0x91a7, 0xa6e0, 0xb76a, 0xabdd, 0x6848, 0x1, 0x1);
        gbc.writeMem(0x9dee, { 0x26, 0x19 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x91a7, gbc.sp());
        EXPECT(0x9df0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9dee));
        EXPECT(0x19, gbc.readMem(0x9def));
        // 26 016B
        gbc.setState(0x8283, 0x28f6, 0x60a0, 0x10e4, 0x30b4, 0x4fe9, 0x0, 0x1);
        gbc.writeMem(0x8283, { 0x26, 0xd4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x28f6, gbc.sp());
        EXPECT(0x8285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8283));
        EXPECT(0xd4, gbc.readMem(0x8284));
        // 26 016C
        gbc.setState(0x9bec, 0xb216, 0x9940, 0x242b, 0xc29b, 0x2d8f, 0x0, 0x1);
        gbc.writeMem(0x9bec, { 0x26, 0xe2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb216, gbc.sp());
        EXPECT(0x9bee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9bec));
        EXPECT(0xe2, gbc.readMem(0x9bed));
        // 26 016D
        gbc.setState(0x44a7, 0xe0ef, 0x2a0, 0x41e2, 0xe1ce, 0x97f, 0x1, 0x1);
        gbc.writeMem(0x44a7, { 0x26, 0x84 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe0ef, gbc.sp());
        EXPECT(0x44a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 016E
        gbc.setState(0x6e44, 0xf4ca, 0x29b0, 0x9e70, 0xc10d, 0xa664, 0x0, 0x0);
        gbc.writeMem(0x6e44, { 0x26, 0xa4 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf4ca, gbc.sp());
        EXPECT(0x6e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 016F
        gbc.setState(0x78e5, 0x75b6, 0x8bc0, 0x49c2, 0x4be7, 0x401, 0x0, 0x1);
        gbc.writeMem(0x78e5, { 0x26, 0xe0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x75b6, gbc.sp());
        EXPECT(0x78e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0170
        gbc.setState(0x786b, 0xd552, 0xa740, 0xbe87, 0xa2cd, 0x9f68, 0x0, 0x0);
        gbc.writeMem(0x786b, { 0x26, 0x8f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd552, gbc.sp());
        EXPECT(0x786d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0171
        gbc.setState(0x7e36, 0x9e74, 0x3e50, 0x3fa2, 0xc7d9, 0x7e57, 0x0, 0x1);
        gbc.writeMem(0x7e36, { 0x26, 0xc2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9e74, gbc.sp());
        EXPECT(0x7e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0172
        gbc.setState(0xc459, 0x2e1d, 0x43c0, 0xd746, 0x1e7d, 0xca63, 0x1, 0x0);
        gbc.writeMem(0xc459, { 0x26, 0xb9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2e1d, gbc.sp());
        EXPECT(0xc45b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc459));
        EXPECT(0xb9, gbc.readMem(0xc45a));
        // 26 0173
        gbc.setState(0xe59, 0x5ddb, 0x5fe0, 0x6a8d, 0xd6bf, 0xf6c9, 0x0, 0x0);
        gbc.writeMem(0xe59, { 0x26, 0xa6 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5ddb, gbc.sp());
        EXPECT(0xe5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0174
        gbc.setState(0x7512, 0x529c, 0xe220, 0x41d4, 0x94de, 0xf05e, 0x0, 0x0);
        gbc.writeMem(0x7512, { 0x26, 0xc3 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x529c, gbc.sp());
        EXPECT(0x7514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0175
        gbc.setState(0x8fbc, 0xf745, 0xb550, 0x566d, 0xcec7, 0xb5a0, 0x1, 0x0);
        gbc.writeMem(0x8fbc, { 0x26, 0x15 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf745, gbc.sp());
        EXPECT(0x8fbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8fbc));
        EXPECT(0x15, gbc.readMem(0x8fbd));
        // 26 0176
        gbc.setState(0x6a22, 0x1aee, 0x5d10, 0xbaf2, 0xadbf, 0x1097, 0x0, 0x1);
        gbc.writeMem(0x6a22, { 0x26, 0x6b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1aee, gbc.sp());
        EXPECT(0x6a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0177
        gbc.setState(0x8c96, 0x58d3, 0x9a40, 0x1d02, 0xc246, 0xd1a3, 0x0, 0x1);
        gbc.writeMem(0x8c96, { 0x26, 0xb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x58d3, gbc.sp());
        EXPECT(0x8c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8c96));
        EXPECT(0xb, gbc.readMem(0x8c97));
        // 26 0178
        gbc.setState(0x6839, 0xee82, 0x3c30, 0xd2ce, 0xb6f8, 0x1600, 0x0, 0x0);
        gbc.writeMem(0x6839, { 0x26, 0x1a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xee82, gbc.sp());
        EXPECT(0x683b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0179
        gbc.setState(0x2f96, 0xf08d, 0x9a50, 0xa813, 0xe3a3, 0x760d, 0x0, 0x0);
        gbc.writeMem(0x2f96, { 0x26, 0x3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf08d, gbc.sp());
        EXPECT(0x2f98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 017A
        gbc.setState(0x9f6d, 0xe787, 0x6620, 0x6fdf, 0x85e, 0xe021, 0x1, 0x1);
        gbc.writeMem(0x9f6d, { 0x26, 0xe0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe787, gbc.sp());
        EXPECT(0x9f6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9f6d));
        EXPECT(0xe0, gbc.readMem(0x9f6e));
        // 26 017C
        gbc.setState(0xa65f, 0x7bf2, 0x90, 0x21b3, 0x7661, 0xe511, 0x1, 0x1);
        gbc.writeMem(0xa65f, { 0x26, 0x4d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7bf2, gbc.sp());
        EXPECT(0xa661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa65f));
        EXPECT(0x4d, gbc.readMem(0xa660));
        // 26 017D
        gbc.setState(0xd277, 0xc097, 0x6a40, 0x8e07, 0xeab6, 0x6553, 0x1, 0x1);
        gbc.writeMem(0xd277, { 0x26, 0x56 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc097, gbc.sp());
        EXPECT(0xd279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd277));
        EXPECT(0x56, gbc.readMem(0xd278));
        // 26 017E
        gbc.setState(0xebfe, 0xfbe0, 0x6b60, 0xe698, 0x6131, 0x1263, 0x1, 0x0);
        gbc.writeMem(0xebfe, { 0x26, 0x6e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfbe0, gbc.sp());
        EXPECT(0xec00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xebfe));
        EXPECT(0x6e, gbc.readMem(0xebff));
        // 26 0180
        gbc.setState(0x21f6, 0xa8fc, 0xc960, 0xd778, 0xe42a, 0x6cad, 0x1, 0x1);
        gbc.writeMem(0x21f6, { 0x26, 0x7f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa8fc, gbc.sp());
        EXPECT(0x21f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0181
        gbc.setState(0x2447, 0x9190, 0x2fe0, 0xad56, 0x1322, 0xb9e6, 0x1, 0x1);
        gbc.writeMem(0x2447, { 0x26, 0x21 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9190, gbc.sp());
        EXPECT(0x2449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0182
        gbc.setState(0x9abe, 0xc4d2, 0xccc0, 0x23b9, 0x7595, 0x47d3, 0x0, 0x1);
        gbc.writeMem(0x9abe, { 0x26, 0x27 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc4d2, gbc.sp());
        EXPECT(0x9ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9abe));
        EXPECT(0x27, gbc.readMem(0x9abf));
        // 26 0183
        gbc.setState(0x8ce3, 0x16b2, 0x3f0, 0x513d, 0x64f6, 0x413d, 0x1, 0x0);
        gbc.writeMem(0x8ce3, { 0x26, 0x69 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x16b2, gbc.sp());
        EXPECT(0x8ce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8ce3));
        EXPECT(0x69, gbc.readMem(0x8ce4));
        // 26 0184
        gbc.setState(0xeaa8, 0x8458, 0x6800, 0x5429, 0x8912, 0xf8b0, 0x0, 0x1);
        gbc.writeMem(0xeaa8, { 0x26, 0x84 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8458, gbc.sp());
        EXPECT(0xeaaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xeaa8));
        EXPECT(0x84, gbc.readMem(0xeaa9));
        // 26 0185
        gbc.setState(0x6e55, 0xf048, 0x8840, 0x3708, 0x6bd5, 0x1409, 0x0, 0x0);
        gbc.writeMem(0x6e55, { 0x26, 0x44 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf048, gbc.sp());
        EXPECT(0x6e57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0186
        gbc.setState(0x8176, 0x6362, 0x41b0, 0xa415, 0x9221, 0xcf9d, 0x1, 0x0);
        gbc.writeMem(0x8176, { 0x26, 0x16 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6362, gbc.sp());
        EXPECT(0x8178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8176));
        EXPECT(0x16, gbc.readMem(0x8177));
        // 26 0187
        gbc.setState(0x96ef, 0x2afa, 0x1290, 0x4b4b, 0x376c, 0x9b2b, 0x1, 0x1);
        gbc.writeMem(0x96ef, { 0x26, 0xcc });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2afa, gbc.sp());
        EXPECT(0x96f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x96ef));
        EXPECT(0xcc, gbc.readMem(0x96f0));
        // 26 0188
        gbc.setState(0xe696, 0x23cf, 0x7960, 0x4eab, 0xacaa, 0x6a62, 0x1, 0x0);
        gbc.writeMem(0xe696, { 0x26, 0x36 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x23cf, gbc.sp());
        EXPECT(0xe698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe696));
        EXPECT(0x36, gbc.readMem(0xe697));
        // 26 0189
        gbc.setState(0x4d7a, 0xe745, 0x3160, 0x4bd9, 0x4271, 0xd247, 0x0, 0x0);
        gbc.writeMem(0x4d7a, { 0x26, 0x88 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe745, gbc.sp());
        EXPECT(0x4d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 018A
        gbc.setState(0xa735, 0x56a6, 0xdbf0, 0x55eb, 0xd0db, 0x976f, 0x0, 0x1);
        gbc.writeMem(0xa735, { 0x26, 0xd3 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x56a6, gbc.sp());
        EXPECT(0xa737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa735));
        EXPECT(0xd3, gbc.readMem(0xa736));
        // 26 018B
        gbc.setState(0xa209, 0xc370, 0x5070, 0x53c8, 0xc7ff, 0x3648, 0x1, 0x1);
        gbc.writeMem(0xa209, { 0x26, 0x3a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc370, gbc.sp());
        EXPECT(0xa20b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa209));
        EXPECT(0x3a, gbc.readMem(0xa20a));
        // 26 018C
        gbc.setState(0xc5ed, 0xaf7e, 0xf200, 0xabba, 0xda9e, 0x27e8, 0x0, 0x1);
        gbc.writeMem(0xc5ed, { 0x26, 0xb8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xaf7e, gbc.sp());
        EXPECT(0xc5ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc5ed));
        EXPECT(0xb8, gbc.readMem(0xc5ee));
        // 26 018D
        gbc.setState(0xce48, 0x4f2f, 0x2940, 0xe572, 0xc7ac, 0x2443, 0x1, 0x1);
        gbc.writeMem(0xce48, { 0x26, 0x99 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4f2f, gbc.sp());
        EXPECT(0xce4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xce48));
        EXPECT(0x99, gbc.readMem(0xce49));
        // 26 018E
        gbc.setState(0xcebd, 0xe030, 0xa020, 0xb54, 0xbb47, 0x798b, 0x1, 0x1);
        gbc.writeMem(0xcebd, { 0x26, 0x4f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe030, gbc.sp());
        EXPECT(0xcebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xcebd));
        EXPECT(0x4f, gbc.readMem(0xcebe));
        // 26 018F
        gbc.setState(0x1eed, 0xf11b, 0xf080, 0x4a3, 0xef0a, 0x57ff, 0x0, 0x1);
        gbc.writeMem(0x1eed, { 0x26, 0x6e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf11b, gbc.sp());
        EXPECT(0x1eef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0190
        gbc.setState(0x9ecc, 0x2c01, 0x36a0, 0x51f8, 0xf4a1, 0x8dde, 0x1, 0x0);
        gbc.writeMem(0x9ecc, { 0x26, 0xaf });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2c01, gbc.sp());
        EXPECT(0x9ece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9ecc));
        EXPECT(0xaf, gbc.readMem(0x9ecd));
        // 26 0192
        gbc.setState(0xf71, 0xb85b, 0x4740, 0x8c72, 0x7330, 0x9a10, 0x1, 0x0);
        gbc.writeMem(0xf71, { 0x26, 0x5c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb85b, gbc.sp());
        EXPECT(0xf73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0193
        gbc.setState(0x3760, 0x83cd, 0x7880, 0x4b65, 0xc71b, 0x50c4, 0x0, 0x1);
        gbc.writeMem(0x3760, { 0x26, 0x15 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x83cd, gbc.sp());
        EXPECT(0x3762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0194
        gbc.setState(0xe0aa, 0x27e5, 0xa540, 0xd226, 0x8260, 0xa942, 0x1, 0x0);
        gbc.writeMem(0xe0aa, { 0x26, 0x6 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x27e5, gbc.sp());
        EXPECT(0xe0ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe0aa));
        EXPECT(0x6, gbc.readMem(0xe0ab));
        // 26 0195
        gbc.setState(0x8ca, 0xc1ea, 0xf5a0, 0xde18, 0xdde3, 0xfb39, 0x1, 0x0);
        gbc.writeMem(0x8ca, { 0x26, 0x1 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc1ea, gbc.sp());
        EXPECT(0x8cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0196
        gbc.setState(0xb18f, 0x3d64, 0x8480, 0x7c05, 0x43fa, 0x2df1, 0x1, 0x0);
        gbc.writeMem(0xb18f, { 0x26, 0xc3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3d64, gbc.sp());
        EXPECT(0xb191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb18f));
        EXPECT(0xc3, gbc.readMem(0xb190));
        // 26 0197
        gbc.setState(0x11f9, 0xbe09, 0x780, 0x3c38, 0x8b3c, 0xa71d, 0x0, 0x0);
        gbc.writeMem(0x11f9, { 0x26, 0xe6 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xbe09, gbc.sp());
        EXPECT(0x11fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0198
        gbc.setState(0x1c14, 0x8296, 0x3e40, 0x6bd6, 0xb36c, 0xca9b, 0x1, 0x1);
        gbc.writeMem(0x1c14, { 0x26, 0xe3 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8296, gbc.sp());
        EXPECT(0x1c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0199
        gbc.setState(0x5be7, 0x72d7, 0x1eb0, 0x96e0, 0x9ca6, 0xd8fe, 0x0, 0x1);
        gbc.writeMem(0x5be7, { 0x26, 0x15 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x72d7, gbc.sp());
        EXPECT(0x5be9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 019A
        gbc.setState(0x8d83, 0x1347, 0xd610, 0x8a17, 0xbc02, 0x8727, 0x0, 0x1);
        gbc.writeMem(0x8d83, { 0x26, 0xfb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1347, gbc.sp());
        EXPECT(0x8d85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8d83));
        EXPECT(0xfb, gbc.readMem(0x8d84));
        // 26 019B
        gbc.setState(0x9dd8, 0x511, 0xc550, 0xcfa, 0x4300, 0x1777, 0x0, 0x0);
        gbc.writeMem(0x9dd8, { 0x26, 0xce });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x511, gbc.sp());
        EXPECT(0x9dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9dd8));
        EXPECT(0xce, gbc.readMem(0x9dd9));
        // 26 019C
        gbc.setState(0x715f, 0x652e, 0x7cf0, 0x4182, 0xcc3, 0x57a, 0x1, 0x0);
        gbc.writeMem(0x715f, { 0x26, 0x7c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x652e, gbc.sp());
        EXPECT(0x7161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 019E
        gbc.setState(0x933, 0x671f, 0x85c0, 0xe44d, 0xa380, 0x31d8, 0x0, 0x1);
        gbc.writeMem(0x933, { 0x26, 0x7d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x671f, gbc.sp());
        EXPECT(0x935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 019F
        gbc.setState(0x3e48, 0x7d0a, 0xe9f0, 0x96a3, 0x1bd8, 0xb729, 0x1, 0x0);
        gbc.writeMem(0x3e48, { 0x26, 0x28 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7d0a, gbc.sp());
        EXPECT(0x3e4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01A0
        gbc.setState(0xc93f, 0x2a03, 0x2fa0, 0xf500, 0x6194, 0x44dc, 0x0, 0x0);
        gbc.writeMem(0xc93f, { 0x26, 0xea });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2a03, gbc.sp());
        EXPECT(0xc941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc93f));
        EXPECT(0xea, gbc.readMem(0xc940));
        // 26 01A1
        gbc.setState(0x1a29, 0xe803, 0x9450, 0xa03a, 0x4a94, 0x6845, 0x1, 0x1);
        gbc.writeMem(0x1a29, { 0x26, 0x91 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe803, gbc.sp());
        EXPECT(0x1a2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01A2
        gbc.setState(0x287b, 0x3fcb, 0x2000, 0x7a8f, 0xe0e5, 0xce1, 0x1, 0x0);
        gbc.writeMem(0x287b, { 0x26, 0x69 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3fcb, gbc.sp());
        EXPECT(0x287d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01A3
        gbc.setState(0x60ad, 0xa888, 0xd560, 0x1af7, 0xd5c0, 0xd4e6, 0x1, 0x1);
        gbc.writeMem(0x60ad, { 0x26, 0x96 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa888, gbc.sp());
        EXPECT(0x60af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01A4
        gbc.setState(0xabfc, 0x2405, 0x3a70, 0xbd18, 0x6da4, 0xd1b, 0x1, 0x1);
        gbc.writeMem(0xabfc, { 0x26, 0xd3 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2405, gbc.sp());
        EXPECT(0xabfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xabfc));
        EXPECT(0xd3, gbc.readMem(0xabfd));
        // 26 01A5
        gbc.setState(0x3cd9, 0xdf93, 0xd610, 0x9266, 0x6b0a, 0x6a4f, 0x0, 0x1);
        gbc.writeMem(0x3cd9, { 0x26, 0x1c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdf93, gbc.sp());
        EXPECT(0x3cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01A6
        gbc.setState(0x708b, 0x51d6, 0x43e0, 0xfe60, 0x919d, 0x6389, 0x1, 0x0);
        gbc.writeMem(0x708b, { 0x26, 0x1c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x51d6, gbc.sp());
        EXPECT(0x708d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01A7
        gbc.setState(0x6d11, 0x4eb0, 0x81b0, 0x68fe, 0x1529, 0xe843, 0x0, 0x1);
        gbc.writeMem(0x6d11, { 0x26, 0xca });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4eb0, gbc.sp());
        EXPECT(0x6d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01A9
        gbc.setState(0xb20b, 0x85f5, 0x31e0, 0x6ad9, 0xab4d, 0x7e83, 0x0, 0x1);
        gbc.writeMem(0xb20b, { 0x26, 0x76 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x85f5, gbc.sp());
        EXPECT(0xb20d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb20b));
        EXPECT(0x76, gbc.readMem(0xb20c));
        // 26 01AA
        gbc.setState(0x8570, 0xa8de, 0x1030, 0x341a, 0xeaa8, 0x871c, 0x0, 0x1);
        gbc.writeMem(0x8570, { 0x26, 0x12 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa8de, gbc.sp());
        EXPECT(0x8572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8570));
        EXPECT(0x12, gbc.readMem(0x8571));
        // 26 01AB
        gbc.setState(0x8682, 0x8360, 0xd380, 0xd536, 0xf7a5, 0x9711, 0x0, 0x1);
        gbc.writeMem(0x8682, { 0x26, 0x81 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8360, gbc.sp());
        EXPECT(0x8684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8682));
        EXPECT(0x81, gbc.readMem(0x8683));
        // 26 01AC
        gbc.setState(0x486e, 0x381b, 0x2c30, 0x966, 0x6fa0, 0xab9a, 0x0, 0x0);
        gbc.writeMem(0x486e, { 0x26, 0x8c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x381b, gbc.sp());
        EXPECT(0x4870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01AD
        gbc.setState(0x577c, 0x959b, 0x3d20, 0x5809, 0x4bc5, 0x8d66, 0x0, 0x0);
        gbc.writeMem(0x577c, { 0x26, 0xef });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x959b, gbc.sp());
        EXPECT(0x577e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01AE
        gbc.setState(0xed41, 0x730e, 0x9cd0, 0x93c7, 0xb2e, 0x26f9, 0x0, 0x1);
        gbc.writeMem(0xed41, { 0x26, 0xbf });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x730e, gbc.sp());
        EXPECT(0xed43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xed41));
        EXPECT(0xbf, gbc.readMem(0xed42));
        // 26 01AF
        gbc.setState(0xa0a6, 0x78d7, 0x8010, 0xf71b, 0xe50e, 0x5fea, 0x1, 0x1);
        gbc.writeMem(0xa0a6, { 0x26, 0x3a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x78d7, gbc.sp());
        EXPECT(0xa0a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa0a6));
        EXPECT(0x3a, gbc.readMem(0xa0a7));
        // 26 01B0
        gbc.setState(0xe02d, 0x4738, 0xcf40, 0x4846, 0x1014, 0x5884, 0x0, 0x1);
        gbc.writeMem(0xe02d, { 0x26, 0x64 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4738, gbc.sp());
        EXPECT(0xe02f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe02d));
        EXPECT(0x64, gbc.readMem(0xe02e));
        // 26 01B1
        gbc.setState(0xc2e0, 0x863b, 0x3180, 0xa48, 0x93ad, 0x20cf, 0x0, 0x1);
        gbc.writeMem(0xc2e0, { 0x26, 0x8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x863b, gbc.sp());
        EXPECT(0xc2e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc2e0));
        EXPECT(0x8, gbc.readMem(0xc2e1));
        // 26 01B2
        gbc.setState(0x1270, 0x38ec, 0x6360, 0xf24a, 0x25f2, 0x5a92, 0x0, 0x0);
        gbc.writeMem(0x1270, { 0x26, 0x52 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x38ec, gbc.sp());
        EXPECT(0x1272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01B3
        gbc.setState(0xa5a2, 0x9c85, 0x5940, 0x36a8, 0x2805, 0x150e, 0x1, 0x1);
        gbc.writeMem(0xa5a2, { 0x26, 0xee });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9c85, gbc.sp());
        EXPECT(0xa5a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa5a2));
        EXPECT(0xee, gbc.readMem(0xa5a3));
        // 26 01B4
        gbc.setState(0x4bf8, 0x50cb, 0x35b0, 0x6a09, 0xbb49, 0xb050, 0x0, 0x0);
        gbc.writeMem(0x4bf8, { 0x26, 0x7c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x50cb, gbc.sp());
        EXPECT(0x4bfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01B5
        gbc.setState(0xd75b, 0xa9d6, 0x6f50, 0x9624, 0xc168, 0x56be, 0x0, 0x1);
        gbc.writeMem(0xd75b, { 0x26, 0xda });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa9d6, gbc.sp());
        EXPECT(0xd75d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd75b));
        EXPECT(0xda, gbc.readMem(0xd75c));
        // 26 01B6
        gbc.setState(0x7256, 0x8fe3, 0x8390, 0xe739, 0xeaf0, 0x94a4, 0x1, 0x1);
        gbc.writeMem(0x7256, { 0x26, 0xff });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8fe3, gbc.sp());
        EXPECT(0x7258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01B8
        gbc.setState(0x18aa, 0x78bd, 0x6b90, 0x4dbd, 0x8f0, 0x66a9, 0x0, 0x1);
        gbc.writeMem(0x18aa, { 0x26, 0x29 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x78bd, gbc.sp());
        EXPECT(0x18ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01B9
        gbc.setState(0xae96, 0xb900, 0x9260, 0x8701, 0x1e76, 0x116, 0x1, 0x0);
        gbc.writeMem(0xae96, { 0x26, 0x53 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb900, gbc.sp());
        EXPECT(0xae98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xae96));
        EXPECT(0x53, gbc.readMem(0xae97));
        // 26 01BA
        gbc.setState(0x5fbd, 0x291e, 0xaef0, 0x863b, 0x9e69, 0x47a, 0x1, 0x1);
        gbc.writeMem(0x5fbd, { 0x26, 0x15 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x291e, gbc.sp());
        EXPECT(0x5fbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01BB
        gbc.setState(0x58b7, 0xf6e9, 0x6ec0, 0x2902, 0x1ab3, 0xbcc1, 0x0, 0x1);
        gbc.writeMem(0x58b7, { 0x26, 0x54 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf6e9, gbc.sp());
        EXPECT(0x58b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01BC
        gbc.setState(0xc775, 0x5fe4, 0x1d80, 0xeae5, 0x5a8, 0xd8f9, 0x1, 0x0);
        gbc.writeMem(0xc775, { 0x26, 0x2d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5fe4, gbc.sp());
        EXPECT(0xc777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc775));
        EXPECT(0x2d, gbc.readMem(0xc776));
        // 26 01BD
        gbc.setState(0x838a, 0x9129, 0x6a90, 0xbe1a, 0x8491, 0x7411, 0x0, 0x1);
        gbc.writeMem(0x838a, { 0x26, 0xf0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9129, gbc.sp());
        EXPECT(0x838c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x838a));
        EXPECT(0xf0, gbc.readMem(0x838b));
        // 26 01BE
        gbc.setState(0xe9e7, 0x670d, 0x8e20, 0x7c, 0x3c41, 0x25b9, 0x0, 0x0);
        gbc.writeMem(0xe9e7, { 0x26, 0x76 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x670d, gbc.sp());
        EXPECT(0xe9e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe9e7));
        EXPECT(0x76, gbc.readMem(0xe9e8));
        // 26 01BF
        gbc.setState(0xa2d2, 0xd954, 0xeb20, 0xf41, 0x1020, 0xd27f, 0x0, 0x0);
        gbc.writeMem(0xa2d2, { 0x26, 0xef });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd954, gbc.sp());
        EXPECT(0xa2d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa2d2));
        EXPECT(0xef, gbc.readMem(0xa2d3));
        // 26 01C0
        gbc.setState(0xaa21, 0x1714, 0x4e90, 0x66f2, 0xce9, 0xbb04, 0x1, 0x0);
        gbc.writeMem(0xaa21, { 0x26, 0xa8 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1714, gbc.sp());
        EXPECT(0xaa23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xaa21));
        EXPECT(0xa8, gbc.readMem(0xaa22));
        // 26 01C1
        gbc.setState(0x2f8d, 0x5498, 0xe390, 0xc1fe, 0x3ca7, 0xebb3, 0x1, 0x1);
        gbc.writeMem(0x2f8d, { 0x26, 0xb6 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5498, gbc.sp());
        EXPECT(0x2f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01C2
        gbc.setState(0xef5, 0x83e6, 0x8010, 0xf6a5, 0xcec2, 0x1780, 0x1, 0x0);
        gbc.writeMem(0xef5, { 0x26, 0x8e });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x83e6, gbc.sp());
        EXPECT(0xef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01C3
        gbc.setState(0xbdb5, 0xaa42, 0x2c40, 0xa02d, 0x4f1d, 0x9924, 0x0, 0x0);
        gbc.writeMem(0xbdb5, { 0x26, 0x12 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xaa42, gbc.sp());
        EXPECT(0xbdb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbdb5));
        EXPECT(0x12, gbc.readMem(0xbdb6));
        // 26 01C4
        gbc.setState(0x7189, 0x48c5, 0x88a0, 0x68ab, 0x7554, 0x6c7d, 0x1, 0x1);
        gbc.writeMem(0x7189, { 0x26, 0x2a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x48c5, gbc.sp());
        EXPECT(0x718b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01C5
        gbc.setState(0x58ec, 0x8fe1, 0xc030, 0x175d, 0xd78a, 0xecdf, 0x1, 0x1);
        gbc.writeMem(0x58ec, { 0x26, 0xa3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8fe1, gbc.sp());
        EXPECT(0x58ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01C6
        gbc.setState(0xb725, 0xa6a1, 0xfa70, 0x5cd6, 0x30c2, 0xbcee, 0x1, 0x1);
        gbc.writeMem(0xb725, { 0x26, 0xb7 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa6a1, gbc.sp());
        EXPECT(0xb727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb725));
        EXPECT(0xb7, gbc.readMem(0xb726));
        // 26 01C7
        gbc.setState(0x3e8e, 0x42c7, 0x1110, 0x85c8, 0x7eef, 0x7a7c, 0x1, 0x0);
        gbc.writeMem(0x3e8e, { 0x26, 0x65 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x42c7, gbc.sp());
        EXPECT(0x3e90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01C8
        gbc.setState(0x5d22, 0x8c15, 0x1f10, 0xc4c0, 0xf2d7, 0xfe25, 0x0, 0x0);
        gbc.writeMem(0x5d22, { 0x26, 0x6 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8c15, gbc.sp());
        EXPECT(0x5d24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01C9
        gbc.setState(0x26c7, 0x479e, 0xbf70, 0x62b9, 0x6d03, 0xc35e, 0x0, 0x1);
        gbc.writeMem(0x26c7, { 0x26, 0xcc });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x479e, gbc.sp());
        EXPECT(0x26c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01CA
        gbc.setState(0x45d5, 0x52e0, 0x3280, 0x1d81, 0x4ea7, 0x55a2, 0x0, 0x0);
        gbc.writeMem(0x45d5, { 0x26, 0xf });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x52e0, gbc.sp());
        EXPECT(0x45d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01CC
        gbc.setState(0x6954, 0xb2aa, 0xa1c0, 0xb5a0, 0xedec, 0x5c99, 0x1, 0x0);
        gbc.writeMem(0x6954, { 0x26, 0x96 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb2aa, gbc.sp());
        EXPECT(0x6956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01CD
        gbc.setState(0xaf43, 0x7e33, 0xdf40, 0x48c4, 0xfcb8, 0x3b59, 0x1, 0x1);
        gbc.writeMem(0xaf43, { 0x26, 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7e33, gbc.sp());
        EXPECT(0xaf45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xaf43));
        EXPECT(0xdf, gbc.readMem(0xaf44));
        // 26 01CE
        gbc.setState(0xb4b6, 0x1f4b, 0x6e80, 0xf639, 0x1319, 0x2c7b, 0x1, 0x0);
        gbc.writeMem(0xb4b6, { 0x26, 0x5d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1f4b, gbc.sp());
        EXPECT(0xb4b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb4b6));
        EXPECT(0x5d, gbc.readMem(0xb4b7));
        // 26 01CF
        gbc.setState(0xa685, 0x7e66, 0xa230, 0x6a81, 0x3f49, 0x8849, 0x1, 0x1);
        gbc.writeMem(0xa685, { 0x26, 0x89 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7e66, gbc.sp());
        EXPECT(0xa687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa685));
        EXPECT(0x89, gbc.readMem(0xa686));
        // 26 01D0
        gbc.setState(0x2b1b, 0xd19c, 0x80, 0xe479, 0x7a05, 0xe63a, 0x1, 0x0);
        gbc.writeMem(0x2b1b, { 0x26, 0x43 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd19c, gbc.sp());
        EXPECT(0x2b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01D1
        gbc.setState(0x65d0, 0xd642, 0x620, 0xf4d0, 0x4964, 0x4925, 0x0, 0x0);
        gbc.writeMem(0x65d0, { 0x26, 0x9c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd642, gbc.sp());
        EXPECT(0x65d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01D2
        gbc.setState(0xca8c, 0x9fd9, 0x30, 0x9c8b, 0x1b52, 0xcb83, 0x0, 0x0);
        gbc.writeMem(0xca8c, { 0x26, 0x60 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9fd9, gbc.sp());
        EXPECT(0xca8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xca8c));
        EXPECT(0x60, gbc.readMem(0xca8d));
        // 26 01D3
        gbc.setState(0x1a03, 0xcd9d, 0x8490, 0x9ec6, 0x50f3, 0xf1f8, 0x1, 0x0);
        gbc.writeMem(0x1a03, { 0x26, 0x5b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xcd9d, gbc.sp());
        EXPECT(0x1a05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01D4
        gbc.setState(0x6b87, 0x2542, 0x52b0, 0xb692, 0x4a5a, 0xb7fd, 0x1, 0x1);
        gbc.writeMem(0x6b87, { 0x26, 0xb5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2542, gbc.sp());
        EXPECT(0x6b89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01D5
        gbc.setState(0x705f, 0x9416, 0x2c70, 0x846a, 0x58f5, 0xdcc8, 0x1, 0x0);
        gbc.writeMem(0x705f, { 0x26, 0x30 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9416, gbc.sp());
        EXPECT(0x7061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01D6
        gbc.setState(0x61e3, 0xa608, 0x1940, 0xc15a, 0x6e95, 0x3081, 0x1, 0x0);
        gbc.writeMem(0x61e3, { 0x26, 0x8b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa608, gbc.sp());
        EXPECT(0x61e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01D7
        gbc.setState(0x5a5d, 0x9c96, 0x4060, 0xa0d1, 0xb00, 0x4ced, 0x1, 0x0);
        gbc.writeMem(0x5a5d, { 0x26, 0x8a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9c96, gbc.sp());
        EXPECT(0x5a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01D8
        gbc.setState(0x3d28, 0x41a3, 0xf770, 0x92ea, 0x9457, 0xb8cb, 0x1, 0x1);
        gbc.writeMem(0x3d28, { 0x26, 0x46 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x41a3, gbc.sp());
        EXPECT(0x3d2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01D9
        gbc.setState(0x84dc, 0x3a2, 0xa480, 0xba5, 0x15d5, 0x7e74, 0x0, 0x1);
        gbc.writeMem(0x84dc, { 0x26, 0xe7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3a2, gbc.sp());
        EXPECT(0x84de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x84dc));
        EXPECT(0xe7, gbc.readMem(0x84dd));
        // 26 01DB
        gbc.setState(0xd7f5, 0x45d6, 0xa680, 0x50d6, 0xce3b, 0x4139, 0x1, 0x0);
        gbc.writeMem(0xd7f5, { 0x26, 0x4 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x45d6, gbc.sp());
        EXPECT(0xd7f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd7f5));
        EXPECT(0x4, gbc.readMem(0xd7f6));
        // 26 01DC
        gbc.setState(0x2197, 0x7117, 0xdf90, 0x9e8f, 0x8d38, 0x23c, 0x1, 0x1);
        gbc.writeMem(0x2197, { 0x26, 0x86 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7117, gbc.sp());
        EXPECT(0x2199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01DD
        gbc.setState(0xd438, 0xc01e, 0x7830, 0xe988, 0xf89f, 0xa365, 0x0, 0x1);
        gbc.writeMem(0xd438, { 0x26, 0xef });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc01e, gbc.sp());
        EXPECT(0xd43a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd438));
        EXPECT(0xef, gbc.readMem(0xd439));
        // 26 01DE
        gbc.setState(0xcaa0, 0xbb69, 0xf690, 0x6880, 0x88ad, 0xf991, 0x1, 0x0);
        gbc.writeMem(0xcaa0, { 0x26, 0xb9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbb69, gbc.sp());
        EXPECT(0xcaa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xcaa0));
        EXPECT(0xb9, gbc.readMem(0xcaa1));
        // 26 01E0
        gbc.setState(0x64d9, 0x41a9, 0x1a60, 0x57f4, 0xa421, 0x87d0, 0x0, 0x1);
        gbc.writeMem(0x64d9, { 0x26, 0x71 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x41a9, gbc.sp());
        EXPECT(0x64db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01E1
        gbc.setState(0x9c41, 0xe3b8, 0x8dc0, 0x6dfd, 0x35d0, 0x29d0, 0x1, 0x1);
        gbc.writeMem(0x9c41, { 0x26, 0x99 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe3b8, gbc.sp());
        EXPECT(0x9c43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9c41));
        EXPECT(0x99, gbc.readMem(0x9c42));
        // 26 01E2
        gbc.setState(0x7c86, 0x3860, 0x37d0, 0x95de, 0xf991, 0x5640, 0x1, 0x1);
        gbc.writeMem(0x7c86, { 0x26, 0xfc });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3860, gbc.sp());
        EXPECT(0x7c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01E3
        gbc.setState(0xd39c, 0x2906, 0x1d90, 0xdaa9, 0xd151, 0xd9e8, 0x1, 0x1);
        gbc.writeMem(0xd39c, { 0x26, 0x4b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2906, gbc.sp());
        EXPECT(0xd39e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd39c));
        EXPECT(0x4b, gbc.readMem(0xd39d));
        // 26 01E4
        gbc.setState(0x2c86, 0x92c0, 0xf4e0, 0x5765, 0xbac7, 0xc69, 0x1, 0x1);
        gbc.writeMem(0x2c86, { 0x26, 0x57 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x92c0, gbc.sp());
        EXPECT(0x2c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01E5
        gbc.setState(0xdfab, 0x447e, 0xb70, 0x528c, 0x6374, 0x4cc6, 0x1, 0x0);
        gbc.writeMem(0xdfab, { 0x26, 0x87 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x447e, gbc.sp());
        EXPECT(0xdfad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xdfab));
        EXPECT(0x87, gbc.readMem(0xdfac));
        // 26 01E6
        gbc.setState(0x1b55, 0xdec1, 0x5a00, 0x7150, 0x89fe, 0xa0fd, 0x1, 0x1);
        gbc.writeMem(0x1b55, { 0x26, 0x97 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xdec1, gbc.sp());
        EXPECT(0x1b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01E7
        gbc.setState(0xd046, 0xe6fb, 0x3590, 0x9bb7, 0xa2a6, 0x1f03, 0x1, 0x0);
        gbc.writeMem(0xd046, { 0x26, 0x31 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe6fb, gbc.sp());
        EXPECT(0xd048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd046));
        EXPECT(0x31, gbc.readMem(0xd047));
        // 26 01E8
        gbc.setState(0x91e4, 0xf0d3, 0xd670, 0x5506, 0x5e3, 0xbe44, 0x0, 0x0);
        gbc.writeMem(0x91e4, { 0x26, 0xe1 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf0d3, gbc.sp());
        EXPECT(0x91e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x91e4));
        EXPECT(0xe1, gbc.readMem(0x91e5));
        // 26 01E9
        gbc.setState(0x9940, 0x465a, 0x3d50, 0xfce2, 0x90c4, 0x9126, 0x0, 0x1);
        gbc.writeMem(0x9940, { 0x26, 0xc5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x465a, gbc.sp());
        EXPECT(0x9942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9940));
        EXPECT(0xc5, gbc.readMem(0x9941));
        // 26 01EA
        gbc.setState(0x6d63, 0x9aff, 0xb1a0, 0x9720, 0x2bbd, 0x771c, 0x0, 0x1);
        gbc.writeMem(0x6d63, { 0x26, 0xb2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9aff, gbc.sp());
        EXPECT(0x6d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01EB
        gbc.setState(0x4194, 0xdfda, 0x8500, 0x7786, 0x5ac9, 0xd7a, 0x0, 0x1);
        gbc.writeMem(0x4194, { 0x26, 0xff });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdfda, gbc.sp());
        EXPECT(0x4196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01EC
        gbc.setState(0x9c6, 0xab0b, 0xd620, 0x212a, 0xa808, 0xe34b, 0x0, 0x1);
        gbc.writeMem(0x9c6, { 0x26, 0x7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xab0b, gbc.sp());
        EXPECT(0x9c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01ED
        gbc.setState(0x1209, 0x19b8, 0xc7d0, 0x3559, 0xde16, 0x26bc, 0x0, 0x1);
        gbc.writeMem(0x1209, { 0x26, 0x67 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x19b8, gbc.sp());
        EXPECT(0x120b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01EE
        gbc.setState(0xaeb9, 0xa6d2, 0x2600, 0xd1bb, 0xc827, 0x8bf3, 0x1, 0x0);
        gbc.writeMem(0xaeb9, { 0x26, 0xc6 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa6d2, gbc.sp());
        EXPECT(0xaebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xaeb9));
        EXPECT(0xc6, gbc.readMem(0xaeba));
        // 26 01EF
        gbc.setState(0x73e0, 0xb129, 0xc030, 0x3592, 0xad1e, 0x6061, 0x1, 0x0);
        gbc.writeMem(0x73e0, { 0x26, 0x40 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb129, gbc.sp());
        EXPECT(0x73e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01F0
        gbc.setState(0xd592, 0xaa2e, 0x190, 0x6824, 0xf06a, 0x7560, 0x1, 0x0);
        gbc.writeMem(0xd592, { 0x26, 0xe3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xaa2e, gbc.sp());
        EXPECT(0xd594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd592));
        EXPECT(0xe3, gbc.readMem(0xd593));
        // 26 01F1
        gbc.setState(0xaf62, 0x1733, 0x6770, 0xfa60, 0x4920, 0x4c58, 0x1, 0x1);
        gbc.writeMem(0xaf62, { 0x26, 0xb2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1733, gbc.sp());
        EXPECT(0xaf64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xaf62));
        EXPECT(0xb2, gbc.readMem(0xaf63));
        // 26 01F2
        gbc.setState(0xb4e2, 0x7be7, 0x7e70, 0xb8d5, 0xf5fb, 0x34c, 0x0, 0x0);
        gbc.writeMem(0xb4e2, { 0x26, 0x82 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7be7, gbc.sp());
        EXPECT(0xb4e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb4e2));
        EXPECT(0x82, gbc.readMem(0xb4e3));
        // 26 01F3
        gbc.setState(0x490e, 0xec2a, 0xbee0, 0xc9c9, 0xc956, 0x90fc, 0x0, 0x1);
        gbc.writeMem(0x490e, { 0x26, 0x4a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xec2a, gbc.sp());
        EXPECT(0x4910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01F4
        gbc.setState(0xb073, 0x9c7f, 0x2320, 0xfd13, 0x1469, 0x8591, 0x1, 0x0);
        gbc.writeMem(0xb073, { 0x26, 0x15 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9c7f, gbc.sp());
        EXPECT(0xb075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb073));
        EXPECT(0x15, gbc.readMem(0xb074));
        // 26 01F5
        gbc.setState(0x81c2, 0x5308, 0xa850, 0xf7dc, 0x930d, 0xf32f, 0x0, 0x1);
        gbc.writeMem(0x81c2, { 0x26, 0x51 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5308, gbc.sp());
        EXPECT(0x81c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x81c2));
        EXPECT(0x51, gbc.readMem(0x81c3));
        // 26 01F6
        gbc.setState(0xa142, 0x8336, 0xac10, 0xaaa9, 0xef2e, 0xcd60, 0x1, 0x1);
        gbc.writeMem(0xa142, { 0x26, 0x97 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8336, gbc.sp());
        EXPECT(0xa144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa142));
        EXPECT(0x97, gbc.readMem(0xa143));
        // 26 01F7
        gbc.setState(0x13c2, 0x7334, 0x9300, 0xf378, 0xb71a, 0xd2f6, 0x0, 0x0);
        gbc.writeMem(0x13c2, { 0x26, 0x90 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7334, gbc.sp());
        EXPECT(0x13c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01F8
        gbc.setState(0xbedd, 0xd42d, 0x1780, 0xedb, 0x1798, 0xf104, 0x0, 0x0);
        gbc.writeMem(0xbedd, { 0x26, 0x5f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd42d, gbc.sp());
        EXPECT(0xbedf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbedd));
        EXPECT(0x5f, gbc.readMem(0xbede));
        // 26 01F9
        gbc.setState(0x6593, 0x50b8, 0x8e20, 0xf3ab, 0xa639, 0xad49, 0x1, 0x0);
        gbc.writeMem(0x6593, { 0x26, 0xac });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x50b8, gbc.sp());
        EXPECT(0x6595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01FA
        gbc.setState(0x2b8f, 0xf1d7, 0x4860, 0xb794, 0x36c6, 0x56c1, 0x1, 0x0);
        gbc.writeMem(0x2b8f, { 0x26, 0x6d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf1d7, gbc.sp());
        EXPECT(0x2b91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01FB
        gbc.setState(0x75e8, 0x962e, 0xa040, 0x8421, 0xf06d, 0x71e0, 0x0, 0x1);
        gbc.writeMem(0x75e8, { 0x26, 0x27 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x962e, gbc.sp());
        EXPECT(0x75ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01FC
        gbc.setState(0xc3ef, 0x52de, 0xc590, 0xedb6, 0x3610, 0xe5d, 0x0, 0x1);
        gbc.writeMem(0xc3ef, { 0x26, 0xe3 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x52de, gbc.sp());
        EXPECT(0xc3f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc3ef));
        EXPECT(0xe3, gbc.readMem(0xc3f0));
        // 26 01FD
        gbc.setState(0x522b, 0x3c1e, 0xbc00, 0x7c9f, 0x554c, 0x45c1, 0x1, 0x1);
        gbc.writeMem(0x522b, { 0x26, 0xfe });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3c1e, gbc.sp());
        EXPECT(0x522d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 01FE
        gbc.setState(0x2c3b, 0xf88b, 0x9910, 0xd0c6, 0x1393, 0x7b36, 0x0, 0x0);
        gbc.writeMem(0x2c3b, { 0x26, 0xad });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf88b, gbc.sp());
        EXPECT(0x2c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 01FF
        gbc.setState(0x9e23, 0xfdfd, 0x6570, 0x211c, 0x51af, 0x9203, 0x1, 0x1);
        gbc.writeMem(0x9e23, { 0x26, 0xf3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xfdfd, gbc.sp());
        EXPECT(0x9e25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9e23));
        EXPECT(0xf3, gbc.readMem(0x9e24));
        // 26 0200
        gbc.setState(0xb4af, 0x39ff, 0xbfc0, 0x4e82, 0x4672, 0x5769, 0x0, 0x0);
        gbc.writeMem(0xb4af, { 0x26, 0xa5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x39ff, gbc.sp());
        EXPECT(0xb4b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb4af));
        EXPECT(0xa5, gbc.readMem(0xb4b0));
        // 26 0201
        gbc.setState(0x9e97, 0x58b0, 0x3fe0, 0xff39, 0x6d7c, 0xadc3, 0x1, 0x1);
        gbc.writeMem(0x9e97, { 0x26, 0x42 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x58b0, gbc.sp());
        EXPECT(0x9e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9e97));
        EXPECT(0x42, gbc.readMem(0x9e98));
        // 26 0202
        gbc.setState(0xe2b7, 0xc1bc, 0x7be0, 0xb36d, 0x8eae, 0x7118, 0x1, 0x0);
        gbc.writeMem(0xe2b7, { 0x26, 0xd1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc1bc, gbc.sp());
        EXPECT(0xe2b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe2b7));
        EXPECT(0xd1, gbc.readMem(0xe2b8));
        // 26 0203
        gbc.setState(0x3bb6, 0xd236, 0x8870, 0x5306, 0xf48f, 0x56d4, 0x1, 0x0);
        gbc.writeMem(0x3bb6, { 0x26, 0xd7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd236, gbc.sp());
        EXPECT(0x3bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0204
        gbc.setState(0x3a72, 0xa273, 0x4a80, 0xaad7, 0x1d01, 0x5010, 0x0, 0x0);
        gbc.writeMem(0x3a72, { 0x26, 0xd1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa273, gbc.sp());
        EXPECT(0x3a74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0205
        gbc.setState(0x9e27, 0x28d9, 0x8b20, 0x5f20, 0xd0ec, 0xd813, 0x1, 0x1);
        gbc.writeMem(0x9e27, { 0x26, 0x84 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x28d9, gbc.sp());
        EXPECT(0x9e29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9e27));
        EXPECT(0x84, gbc.readMem(0x9e28));
        // 26 0206
        gbc.setState(0x656a, 0x8cb6, 0xd180, 0xc369, 0x4d6d, 0xc853, 0x1, 0x0);
        gbc.writeMem(0x656a, { 0x26, 0x1d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8cb6, gbc.sp());
        EXPECT(0x656c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0207
        gbc.setState(0xc61c, 0x5652, 0x1f0, 0x6e34, 0x85fe, 0xbb39, 0x1, 0x1);
        gbc.writeMem(0xc61c, { 0x26, 0x14 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5652, gbc.sp());
        EXPECT(0xc61e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc61c));
        EXPECT(0x14, gbc.readMem(0xc61d));
        // 26 0208
        gbc.setState(0xbd44, 0x7724, 0x99d0, 0x6191, 0x5706, 0x396e, 0x0, 0x1);
        gbc.writeMem(0xbd44, { 0x26, 0x74 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7724, gbc.sp());
        EXPECT(0xbd46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbd44));
        EXPECT(0x74, gbc.readMem(0xbd45));
        // 26 0209
        gbc.setState(0xbdba, 0x752b, 0xef00, 0xe683, 0xc45, 0xc364, 0x0, 0x1);
        gbc.writeMem(0xbdba, { 0x26, 0xfc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x752b, gbc.sp());
        EXPECT(0xbdbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbdba));
        EXPECT(0xfc, gbc.readMem(0xbdbb));
        // 26 020A
        gbc.setState(0x5b09, 0x70bd, 0xd3c0, 0xeedd, 0xdb0d, 0xcacd, 0x0, 0x1);
        gbc.writeMem(0x5b09, { 0x26, 0xf2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x70bd, gbc.sp());
        EXPECT(0x5b0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 020B
        gbc.setState(0xd5ea, 0xa00b, 0x8d40, 0xe56a, 0x7a9f, 0xdb18, 0x0, 0x1);
        gbc.writeMem(0xd5ea, { 0x26, 0x5c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa00b, gbc.sp());
        EXPECT(0xd5ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd5ea));
        EXPECT(0x5c, gbc.readMem(0xd5eb));
        // 26 020C
        gbc.setState(0x186a, 0xdad6, 0xd160, 0x63bc, 0x533c, 0xfdd2, 0x1, 0x1);
        gbc.writeMem(0x186a, { 0x26, 0xac });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdad6, gbc.sp());
        EXPECT(0x186c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 020D
        gbc.setState(0x3562, 0xa18c, 0xf050, 0x61bb, 0xac4b, 0xca1, 0x1, 0x1);
        gbc.writeMem(0x3562, { 0x26, 0xe4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa18c, gbc.sp());
        EXPECT(0x3564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 020E
        gbc.setState(0xe060, 0x9d56, 0x16f0, 0xb520, 0x96af, 0x5210, 0x0, 0x1);
        gbc.writeMem(0xe060, { 0x26, 0xd1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9d56, gbc.sp());
        EXPECT(0xe062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe060));
        EXPECT(0xd1, gbc.readMem(0xe061));
        // 26 020F
        gbc.setState(0x13e6, 0x70e6, 0xb340, 0x7910, 0x408d, 0x5df2, 0x0, 0x0);
        gbc.writeMem(0x13e6, { 0x26, 0xce });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x70e6, gbc.sp());
        EXPECT(0x13e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0210
        gbc.setState(0x1a96, 0x8569, 0x6830, 0x1cf5, 0x1d4e, 0x69eb, 0x1, 0x0);
        gbc.writeMem(0x1a96, { 0x26, 0xa3 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8569, gbc.sp());
        EXPECT(0x1a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0211
        gbc.setState(0x73b9, 0xb2d, 0x2910, 0xefcf, 0xcafd, 0x2ff9, 0x0, 0x1);
        gbc.writeMem(0x73b9, { 0x26, 0x85 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb2d, gbc.sp());
        EXPECT(0x73bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0212
        gbc.setState(0x19a, 0x7a8a, 0xfee0, 0xc67a, 0xe96d, 0x2afc, 0x0, 0x1);
        gbc.writeMem(0x19a, { 0x26, 0x40 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7a8a, gbc.sp());
        EXPECT(0x19c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0213
        gbc.setState(0xd661, 0xf002, 0x7970, 0xfe27, 0x56c, 0x4a95, 0x1, 0x1);
        gbc.writeMem(0xd661, { 0x26, 0xe });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf002, gbc.sp());
        EXPECT(0xd663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd661));
        EXPECT(0xe, gbc.readMem(0xd662));
        // 26 0214
        gbc.setState(0x1cb6, 0xba4a, 0xf450, 0x6ce6, 0xb654, 0x296a, 0x0, 0x0);
        gbc.writeMem(0x1cb6, { 0x26, 0x4e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xba4a, gbc.sp());
        EXPECT(0x1cb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0215
        gbc.setState(0x3081, 0xcc10, 0xc700, 0xeeab, 0xb5aa, 0xa6c2, 0x0, 0x1);
        gbc.writeMem(0x3081, { 0x26, 0x60 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xcc10, gbc.sp());
        EXPECT(0x3083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0216
        gbc.setState(0xe058, 0x9f16, 0x3ab0, 0x6273, 0x94c2, 0x9785, 0x1, 0x0);
        gbc.writeMem(0xe058, { 0x26, 0xe3 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9f16, gbc.sp());
        EXPECT(0xe05a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe058));
        EXPECT(0xe3, gbc.readMem(0xe059));
        // 26 0217
        gbc.setState(0x7f8e, 0x321a, 0xed90, 0xfe4b, 0xaa43, 0xb0d2, 0x1, 0x0);
        gbc.writeMem(0x7f8e, { 0x26, 0xce });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x321a, gbc.sp());
        EXPECT(0x7f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0218
        gbc.setState(0xa3db, 0x5b28, 0x5120, 0xb349, 0x60e5, 0xcc2b, 0x1, 0x1);
        gbc.writeMem(0xa3db, { 0x26, 0x6 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5b28, gbc.sp());
        EXPECT(0xa3dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa3db));
        EXPECT(0x6, gbc.readMem(0xa3dc));
        // 26 0219
        gbc.setState(0x1939, 0x4908, 0xa7a0, 0x294d, 0x9f47, 0x129c, 0x1, 0x1);
        gbc.writeMem(0x1939, { 0x26, 0x18 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4908, gbc.sp());
        EXPECT(0x193b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 021A
        gbc.setState(0x33c0, 0x3c95, 0xa530, 0x9c2e, 0x6e70, 0x630, 0x0, 0x1);
        gbc.writeMem(0x33c0, { 0x26, 0xa4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3c95, gbc.sp());
        EXPECT(0x33c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 021B
        gbc.setState(0xc2e6, 0x1698, 0x3da0, 0xf38f, 0x657, 0x6098, 0x0, 0x0);
        gbc.writeMem(0xc2e6, { 0x26, 0xf3 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1698, gbc.sp());
        EXPECT(0xc2e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc2e6));
        EXPECT(0xf3, gbc.readMem(0xc2e7));
        // 26 021C
        gbc.setState(0x7401, 0x1ddc, 0x69b0, 0x19c1, 0xd5ad, 0xd9d, 0x0, 0x0);
        gbc.writeMem(0x7401, { 0x26, 0x52 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1ddc, gbc.sp());
        EXPECT(0x7403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 021D
        gbc.setState(0x8ad8, 0x648c, 0x2180, 0xd52c, 0x89ea, 0x9150, 0x0, 0x1);
        gbc.writeMem(0x8ad8, { 0x26, 0x7a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x648c, gbc.sp());
        EXPECT(0x8ada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8ad8));
        EXPECT(0x7a, gbc.readMem(0x8ad9));
        // 26 021E
        gbc.setState(0x8f73, 0xd682, 0x2a10, 0x3fe0, 0xa784, 0xb307, 0x0, 0x1);
        gbc.writeMem(0x8f73, { 0x26, 0xab });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd682, gbc.sp());
        EXPECT(0x8f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8f73));
        EXPECT(0xab, gbc.readMem(0x8f74));
        // 26 021F
        gbc.setState(0x9c8c, 0x90e6, 0xbc90, 0x65c1, 0x32ab, 0x8515, 0x1, 0x0);
        gbc.writeMem(0x9c8c, { 0x26, 0xd0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x90e6, gbc.sp());
        EXPECT(0x9c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9c8c));
        EXPECT(0xd0, gbc.readMem(0x9c8d));
        // 26 0220
        gbc.setState(0x3c17, 0x7fd3, 0x440, 0xa809, 0x3d6, 0x30ca, 0x0, 0x0);
        gbc.writeMem(0x3c17, { 0x26, 0xf8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7fd3, gbc.sp());
        EXPECT(0x3c19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0222
        gbc.setState(0xde56, 0xbfcb, 0x8010, 0x8ced, 0x25f3, 0xa97c, 0x1, 0x1);
        gbc.writeMem(0xde56, { 0x26, 0xa1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbfcb, gbc.sp());
        EXPECT(0xde58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xde56));
        EXPECT(0xa1, gbc.readMem(0xde57));
        // 26 0223
        gbc.setState(0x22b9, 0x9fc4, 0xeb80, 0x37ba, 0x3f85, 0x52be, 0x1, 0x0);
        gbc.writeMem(0x22b9, { 0x26, 0x91 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9fc4, gbc.sp());
        EXPECT(0x22bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0224
        gbc.setState(0x2da1, 0xd9db, 0x50b0, 0xfdbe, 0x623d, 0x584e, 0x0, 0x1);
        gbc.writeMem(0x2da1, { 0x26, 0x4a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd9db, gbc.sp());
        EXPECT(0x2da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0225
        gbc.setState(0xc3bf, 0x5ced, 0xe690, 0x89dd, 0x3d6e, 0x3335, 0x0, 0x1);
        gbc.writeMem(0xc3bf, { 0x26, 0x75 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5ced, gbc.sp());
        EXPECT(0xc3c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc3bf));
        EXPECT(0x75, gbc.readMem(0xc3c0));
        // 26 0226
        gbc.setState(0x91fd, 0xe4ce, 0x5860, 0x294e, 0x9772, 0x661e, 0x0, 0x0);
        gbc.writeMem(0x91fd, { 0x26, 0x21 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe4ce, gbc.sp());
        EXPECT(0x91ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x91fd));
        EXPECT(0x21, gbc.readMem(0x91fe));
        // 26 0227
        gbc.setState(0x9087, 0xf684, 0xecf0, 0xd488, 0x5468, 0xe734, 0x0, 0x0);
        gbc.writeMem(0x9087, { 0x26, 0xdb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf684, gbc.sp());
        EXPECT(0x9089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9087));
        EXPECT(0xdb, gbc.readMem(0x9088));
        // 26 0228
        gbc.setState(0xacd, 0x1c4c, 0xa230, 0x950a, 0x24b3, 0x4456, 0x0, 0x0);
        gbc.writeMem(0xacd, { 0x26, 0xfb });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1c4c, gbc.sp());
        EXPECT(0xacf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0229
        gbc.setState(0xcb41, 0x10db, 0x2f20, 0xfca4, 0x61c2, 0xa320, 0x1, 0x0);
        gbc.writeMem(0xcb41, { 0x26, 0x86 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x10db, gbc.sp());
        EXPECT(0xcb43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xcb41));
        EXPECT(0x86, gbc.readMem(0xcb42));
        // 26 022A
        gbc.setState(0x2a4b, 0x25ea, 0x1590, 0x1a5d, 0x8317, 0xa7b8, 0x1, 0x0);
        gbc.writeMem(0x2a4b, { 0x26, 0x63 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x25ea, gbc.sp());
        EXPECT(0x2a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 022B
        gbc.setState(0x2ea9, 0xb3d6, 0x110, 0xe67b, 0x1a72, 0xaf06, 0x1, 0x1);
        gbc.writeMem(0x2ea9, { 0x26, 0xf2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb3d6, gbc.sp());
        EXPECT(0x2eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 022C
        gbc.setState(0xb62, 0xcb48, 0x3e40, 0x6bc6, 0x24cb, 0x7583, 0x0, 0x1);
        gbc.writeMem(0xb62, { 0x26, 0x90 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xcb48, gbc.sp());
        EXPECT(0xb64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 022D
        gbc.setState(0xe999, 0x6329, 0xd8a0, 0x93b0, 0x404f, 0x7bda, 0x1, 0x0);
        gbc.writeMem(0xe999, { 0x26, 0x74 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6329, gbc.sp());
        EXPECT(0xe99b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe999));
        EXPECT(0x74, gbc.readMem(0xe99a));
        // 26 022E
        gbc.setState(0x3055, 0xe70a, 0xec20, 0x70bf, 0xc641, 0xdb48, 0x1, 0x0);
        gbc.writeMem(0x3055, { 0x26, 0x3c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe70a, gbc.sp());
        EXPECT(0x3057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 022F
        gbc.setState(0x5ab8, 0x55a6, 0xaae0, 0x1608, 0xd2b5, 0x15e, 0x1, 0x0);
        gbc.writeMem(0x5ab8, { 0x26, 0x2b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x55a6, gbc.sp());
        EXPECT(0x5aba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0230
        gbc.setState(0xd05c, 0x832c, 0xed20, 0xf672, 0xe06d, 0x2ffd, 0x0, 0x0);
        gbc.writeMem(0xd05c, { 0x26, 0xa2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x832c, gbc.sp());
        EXPECT(0xd05e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd05c));
        EXPECT(0xa2, gbc.readMem(0xd05d));
        // 26 0231
        gbc.setState(0x51d1, 0x7617, 0xa750, 0xecae, 0x1433, 0xd71f, 0x0, 0x0);
        gbc.writeMem(0x51d1, { 0x26, 0x31 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7617, gbc.sp());
        EXPECT(0x51d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0232
        gbc.setState(0x7c3a, 0x3b14, 0xa330, 0xb9f0, 0x2f11, 0xaaa2, 0x0, 0x0);
        gbc.writeMem(0x7c3a, { 0x26, 0x46 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3b14, gbc.sp());
        EXPECT(0x7c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0233
        gbc.setState(0xbce3, 0x3273, 0xfa50, 0x6d45, 0xca39, 0x9da6, 0x1, 0x0);
        gbc.writeMem(0xbce3, { 0x26, 0xb4 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3273, gbc.sp());
        EXPECT(0xbce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbce3));
        EXPECT(0xb4, gbc.readMem(0xbce4));
        // 26 0234
        gbc.setState(0xa7a4, 0xca34, 0x3130, 0x2fe7, 0x4470, 0xcd2a, 0x1, 0x1);
        gbc.writeMem(0xa7a4, { 0x26, 0x8f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xca34, gbc.sp());
        EXPECT(0xa7a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa7a4));
        EXPECT(0x8f, gbc.readMem(0xa7a5));
        // 26 0235
        gbc.setState(0x718d, 0x4e69, 0x9160, 0xeb96, 0x3188, 0x6e6f, 0x1, 0x1);
        gbc.writeMem(0x718d, { 0x26, 0x74 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4e69, gbc.sp());
        EXPECT(0x718f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0236
        gbc.setState(0xa314, 0x5a2b, 0xb690, 0x5c98, 0x385c, 0xd98b, 0x0, 0x1);
        gbc.writeMem(0xa314, { 0x26, 0xb0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5a2b, gbc.sp());
        EXPECT(0xa316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa314));
        EXPECT(0xb0, gbc.readMem(0xa315));
        // 26 0237
        gbc.setState(0x5bf1, 0x9b91, 0x1840, 0x3521, 0xecf0, 0x8d4a, 0x1, 0x0);
        gbc.writeMem(0x5bf1, { 0x26, 0x4b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9b91, gbc.sp());
        EXPECT(0x5bf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0238
        gbc.setState(0xad56, 0x8095, 0x8ed0, 0xc33d, 0x7bb5, 0xfa7, 0x0, 0x0);
        gbc.writeMem(0xad56, { 0x26, 0x3 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8095, gbc.sp());
        EXPECT(0xad58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xad56));
        EXPECT(0x3, gbc.readMem(0xad57));
        // 26 0239
        gbc.setState(0x6d70, 0xd752, 0x8920, 0xdc5e, 0x375, 0x1cca, 0x0, 0x1);
        gbc.writeMem(0x6d70, { 0x26, 0xb1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd752, gbc.sp());
        EXPECT(0x6d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 023A
        gbc.setState(0xd14, 0x3a73, 0xcec0, 0xea10, 0xbde6, 0x562f, 0x0, 0x0);
        gbc.writeMem(0xd14, { 0x26, 0xe7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3a73, gbc.sp());
        EXPECT(0xd16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 023B
        gbc.setState(0x6ec1, 0xb6c8, 0x3cf0, 0x4290, 0x28ee, 0xdc27, 0x0, 0x1);
        gbc.writeMem(0x6ec1, { 0x26, 0xcc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb6c8, gbc.sp());
        EXPECT(0x6ec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 023C
        gbc.setState(0xdee, 0x151e, 0xf040, 0x8863, 0xb591, 0x6d85, 0x0, 0x1);
        gbc.writeMem(0xdee, { 0x26, 0x9c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x151e, gbc.sp());
        EXPECT(0xdf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 023D
        gbc.setState(0x9efa, 0xb279, 0x3d00, 0xc1f7, 0x73c4, 0xd129, 0x0, 0x1);
        gbc.writeMem(0x9efa, { 0x26, 0xea });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb279, gbc.sp());
        EXPECT(0x9efc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9efa));
        EXPECT(0xea, gbc.readMem(0x9efb));
        // 26 023E
        gbc.setState(0x8799, 0xe0a7, 0x9780, 0x980f, 0x1dcd, 0x6608, 0x0, 0x1);
        gbc.writeMem(0x8799, { 0x26, 0x80 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe0a7, gbc.sp());
        EXPECT(0x879b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8799));
        EXPECT(0x80, gbc.readMem(0x879a));
        // 26 023F
        gbc.setState(0xb00c, 0x19ea, 0xe920, 0xf4f3, 0x276, 0xba8e, 0x0, 0x1);
        gbc.writeMem(0xb00c, { 0x26, 0x47 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x19ea, gbc.sp());
        EXPECT(0xb00e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb00c));
        EXPECT(0x47, gbc.readMem(0xb00d));
        // 26 0240
        gbc.setState(0x6a86, 0xb682, 0x6930, 0xa594, 0xd835, 0x17bb, 0x1, 0x1);
        gbc.writeMem(0x6a86, { 0x26, 0x69 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb682, gbc.sp());
        EXPECT(0x6a88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0241
        gbc.setState(0x81ee, 0xa6a, 0x6c90, 0xa16f, 0x22cb, 0xf654, 0x1, 0x1);
        gbc.writeMem(0x81ee, { 0x26, 0x3f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa6a, gbc.sp());
        EXPECT(0x81f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x81ee));
        EXPECT(0x3f, gbc.readMem(0x81ef));
        // 26 0242
        gbc.setState(0x3f17, 0x542d, 0x7e70, 0x883b, 0xc808, 0x3f18, 0x0, 0x0);
        gbc.writeMem(0x3f17, { 0x26, 0x4a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x542d, gbc.sp());
        EXPECT(0x3f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0243
        gbc.setState(0x301c, 0x7af2, 0x6a10, 0xfbce, 0x7eab, 0x1134, 0x1, 0x0);
        gbc.writeMem(0x301c, { 0x26, 0x19 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7af2, gbc.sp());
        EXPECT(0x301e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0244
        gbc.setState(0xcd47, 0x1dc, 0x29c0, 0x8f2d, 0xf733, 0xb869, 0x0, 0x1);
        gbc.writeMem(0xcd47, { 0x26, 0xb1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1dc, gbc.sp());
        EXPECT(0xcd49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xcd47));
        EXPECT(0xb1, gbc.readMem(0xcd48));
        // 26 0245
        gbc.setState(0x7b9b, 0x8825, 0x36f0, 0x235, 0xb949, 0x527d, 0x0, 0x1);
        gbc.writeMem(0x7b9b, { 0x26, 0xc1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8825, gbc.sp());
        EXPECT(0x7b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0246
        gbc.setState(0xc11d, 0xa3c, 0x9de0, 0xe9bd, 0x505, 0x54f2, 0x0, 0x0);
        gbc.writeMem(0xc11d, { 0x26, 0x6d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa3c, gbc.sp());
        EXPECT(0xc11f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc11d));
        EXPECT(0x6d, gbc.readMem(0xc11e));
        // 26 0247
        gbc.setState(0x810b, 0x1736, 0xd580, 0xe323, 0xa23f, 0x51ab, 0x0, 0x0);
        gbc.writeMem(0x810b, { 0x26, 0x70 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1736, gbc.sp());
        EXPECT(0x810d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x810b));
        EXPECT(0x70, gbc.readMem(0x810c));
        // 26 0249
        gbc.setState(0x882e, 0x24f5, 0x6850, 0x3629, 0xbc0, 0x8f5e, 0x0, 0x1);
        gbc.writeMem(0x882e, { 0x26, 0x37 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x24f5, gbc.sp());
        EXPECT(0x8830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x882e));
        EXPECT(0x37, gbc.readMem(0x882f));
        // 26 024A
        gbc.setState(0x8e76, 0xa118, 0x9d40, 0x9e8e, 0x5f5f, 0x4dac, 0x1, 0x1);
        gbc.writeMem(0x8e76, { 0x26, 0x3d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa118, gbc.sp());
        EXPECT(0x8e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8e76));
        EXPECT(0x3d, gbc.readMem(0x8e77));
        // 26 024B
        gbc.setState(0x9c0a, 0x428f, 0x96c0, 0xc52e, 0x41fe, 0x99df, 0x1, 0x0);
        gbc.writeMem(0x9c0a, { 0x26, 0x1d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x428f, gbc.sp());
        EXPECT(0x9c0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9c0a));
        EXPECT(0x1d, gbc.readMem(0x9c0b));
        // 26 024C
        gbc.setState(0x1cb4, 0x5df2, 0x9590, 0xd525, 0xca31, 0x4eb, 0x0, 0x0);
        gbc.writeMem(0x1cb4, { 0x26, 0x61 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5df2, gbc.sp());
        EXPECT(0x1cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 024D
        gbc.setState(0x9ebf, 0xf38c, 0x51d0, 0x3b78, 0xbe8d, 0xddfb, 0x0, 0x1);
        gbc.writeMem(0x9ebf, { 0x26, 0x4a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf38c, gbc.sp());
        EXPECT(0x9ec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9ebf));
        EXPECT(0x4a, gbc.readMem(0x9ec0));
        // 26 024E
        gbc.setState(0xa3e3, 0x29bc, 0x90a0, 0x5ed4, 0x87c9, 0xe891, 0x0, 0x0);
        gbc.writeMem(0xa3e3, { 0x26, 0x41 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x29bc, gbc.sp());
        EXPECT(0xa3e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa3e3));
        EXPECT(0x41, gbc.readMem(0xa3e4));
        // 26 024F
        gbc.setState(0x2bdd, 0x69f0, 0x8d20, 0x4376, 0xb577, 0x2891, 0x0, 0x0);
        gbc.writeMem(0x2bdd, { 0x26, 0xbf });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x69f0, gbc.sp());
        EXPECT(0x2bdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0250
        gbc.setState(0x3deb, 0xa907, 0x1d20, 0x115f, 0x7183, 0x82b9, 0x0, 0x1);
        gbc.writeMem(0x3deb, { 0x26, 0x4f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa907, gbc.sp());
        EXPECT(0x3ded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0251
        gbc.setState(0x3b32, 0x9991, 0xa1a0, 0xcb84, 0x6a19, 0x50e6, 0x1, 0x0);
        gbc.writeMem(0x3b32, { 0x26, 0x92 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9991, gbc.sp());
        EXPECT(0x3b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0252
        gbc.setState(0x66be, 0xc559, 0x52d0, 0x3353, 0x6ce8, 0x8d3a, 0x1, 0x1);
        gbc.writeMem(0x66be, { 0x26, 0x3e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc559, gbc.sp());
        EXPECT(0x66c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0253
        gbc.setState(0xce4e, 0xb25, 0x3b0, 0x824c, 0x8e67, 0x930, 0x0, 0x0);
        gbc.writeMem(0xce4e, { 0x26, 0xbc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb25, gbc.sp());
        EXPECT(0xce50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xce4e));
        EXPECT(0xbc, gbc.readMem(0xce4f));
        // 26 0254
        gbc.setState(0xaec5, 0xd402, 0x78a0, 0x9e82, 0xb708, 0xf3a2, 0x0, 0x1);
        gbc.writeMem(0xaec5, { 0x26, 0x59 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd402, gbc.sp());
        EXPECT(0xaec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xaec5));
        EXPECT(0x59, gbc.readMem(0xaec6));
        // 26 0255
        gbc.setState(0x79c1, 0xf9be, 0xb350, 0x91f5, 0x6757, 0x2973, 0x0, 0x1);
        gbc.writeMem(0x79c1, { 0x26, 0x54 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf9be, gbc.sp());
        EXPECT(0x79c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0256
        gbc.setState(0xc893, 0xe838, 0xfa60, 0x278b, 0xe730, 0x7f32, 0x1, 0x0);
        gbc.writeMem(0xc893, { 0x26, 0xa3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe838, gbc.sp());
        EXPECT(0xc895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc893));
        EXPECT(0xa3, gbc.readMem(0xc894));
        // 26 0257
        gbc.setState(0xe3d9, 0xf602, 0x28b0, 0x3e0d, 0x846, 0xb27a, 0x0, 0x0);
        gbc.writeMem(0xe3d9, { 0x26, 0xe9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf602, gbc.sp());
        EXPECT(0xe3db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe3d9));
        EXPECT(0xe9, gbc.readMem(0xe3da));
        // 26 0258
        gbc.setState(0xde66, 0xcf16, 0x9ad0, 0xea8e, 0xfbe, 0x79bb, 0x0, 0x0);
        gbc.writeMem(0xde66, { 0x26, 0x2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcf16, gbc.sp());
        EXPECT(0xde68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xde66));
        EXPECT(0x2, gbc.readMem(0xde67));
        // 26 0259
        gbc.setState(0x862, 0x90df, 0x57c0, 0xe9ff, 0xcbcc, 0xb5df, 0x1, 0x1);
        gbc.writeMem(0x862, { 0x26, 0x25 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x90df, gbc.sp());
        EXPECT(0x864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 025B
        gbc.setState(0x82b9, 0xcf10, 0x64b0, 0x6e5, 0x90b7, 0xa073, 0x0, 0x1);
        gbc.writeMem(0x82b9, { 0x26, 0x88 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xcf10, gbc.sp());
        EXPECT(0x82bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x82b9));
        EXPECT(0x88, gbc.readMem(0x82ba));
        // 26 025C
        gbc.setState(0x8c10, 0xdb0b, 0x6370, 0x4e0a, 0x27d5, 0x9b93, 0x0, 0x1);
        gbc.writeMem(0x8c10, { 0x26, 0xd8 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdb0b, gbc.sp());
        EXPECT(0x8c12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8c10));
        EXPECT(0xd8, gbc.readMem(0x8c11));
        // 26 025D
        gbc.setState(0xabbe, 0x428, 0xc3f0, 0xadaa, 0xe21f, 0xebb8, 0x0, 0x1);
        gbc.writeMem(0xabbe, { 0x26, 0x65 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x428, gbc.sp());
        EXPECT(0xabc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xabbe));
        EXPECT(0x65, gbc.readMem(0xabbf));
        // 26 025E
        gbc.setState(0x8846, 0xa370, 0x4d60, 0xcf97, 0xe485, 0x9074, 0x1, 0x0);
        gbc.writeMem(0x8846, { 0x26, 0x74 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa370, gbc.sp());
        EXPECT(0x8848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8846));
        EXPECT(0x74, gbc.readMem(0x8847));
        // 26 025F
        gbc.setState(0x278b, 0xc1ae, 0xb7c0, 0xda3f, 0x1bb5, 0x6402, 0x1, 0x0);
        gbc.writeMem(0x278b, { 0x26, 0x71 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc1ae, gbc.sp());
        EXPECT(0x278d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0260
        gbc.setState(0xe4dd, 0xedcc, 0x8700, 0x1f72, 0x1b50, 0x833d, 0x0, 0x0);
        gbc.writeMem(0xe4dd, { 0x26, 0x62 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xedcc, gbc.sp());
        EXPECT(0xe4df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe4dd));
        EXPECT(0x62, gbc.readMem(0xe4de));
        // 26 0261
        gbc.setState(0x60bc, 0xf23b, 0xd560, 0xc709, 0xbac7, 0xf754, 0x0, 0x0);
        gbc.writeMem(0x60bc, { 0x26, 0xe });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf23b, gbc.sp());
        EXPECT(0x60be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0262
        gbc.setState(0xe767, 0x1854, 0xeaa0, 0x1d22, 0x4eda, 0x8341, 0x1, 0x0);
        gbc.writeMem(0xe767, { 0x26, 0xf1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1854, gbc.sp());
        EXPECT(0xe769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe767));
        EXPECT(0xf1, gbc.readMem(0xe768));
        // 26 0263
        gbc.setState(0xdd69, 0x3b4e, 0x7e50, 0xbb5e, 0x3771, 0xa67b, 0x0, 0x0);
        gbc.writeMem(0xdd69, { 0x26, 0x11 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3b4e, gbc.sp());
        EXPECT(0xdd6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xdd69));
        EXPECT(0x11, gbc.readMem(0xdd6a));
        // 26 0264
        gbc.setState(0xc054, 0xfabe, 0x4100, 0x3d21, 0xe10b, 0xdcd4, 0x1, 0x0);
        gbc.writeMem(0xc054, { 0x26, 0x9f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfabe, gbc.sp());
        EXPECT(0xc056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc054));
        EXPECT(0x9f, gbc.readMem(0xc055));
        // 26 0266
        gbc.setState(0x371e, 0xa064, 0x5010, 0x12c4, 0xcc71, 0x7df4, 0x1, 0x1);
        gbc.writeMem(0x371e, { 0x26, 0xe5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa064, gbc.sp());
        EXPECT(0x3720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0267
        gbc.setState(0x6154, 0x8d98, 0x1140, 0x6d8f, 0x96a2, 0x674b, 0x1, 0x0);
        gbc.writeMem(0x6154, { 0x26, 0x8e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8d98, gbc.sp());
        EXPECT(0x6156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0268
        gbc.setState(0xebb, 0x7150, 0xafe0, 0xed20, 0xbe34, 0x42a7, 0x1, 0x0);
        gbc.writeMem(0xebb, { 0x26, 0x6 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7150, gbc.sp());
        EXPECT(0xebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0269
        gbc.setState(0x9b6a, 0xec5d, 0xc40, 0x9b20, 0xb16d, 0xa5b2, 0x0, 0x1);
        gbc.writeMem(0x9b6a, { 0x26, 0xa });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xec5d, gbc.sp());
        EXPECT(0x9b6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9b6a));
        EXPECT(0xa, gbc.readMem(0x9b6b));
        // 26 026A
        gbc.setState(0xe05, 0xfb81, 0xf000, 0x9c6, 0xfe5f, 0xe660, 0x0, 0x1);
        gbc.writeMem(0xe05, { 0x26, 0xed });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfb81, gbc.sp());
        EXPECT(0xe07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 026B
        gbc.setState(0xb93, 0x6551, 0x6830, 0x7cd6, 0x575, 0xb660, 0x0, 0x0);
        gbc.writeMem(0xb93, { 0x26, 0x25 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6551, gbc.sp());
        EXPECT(0xb95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 026C
        gbc.setState(0x4254, 0xb796, 0x25d0, 0x5cb6, 0x5ef, 0xf48, 0x1, 0x1);
        gbc.writeMem(0x4254, { 0x26, 0xac });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb796, gbc.sp());
        EXPECT(0x4256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 026D
        gbc.setState(0x19ab, 0x6c01, 0xd100, 0x97fe, 0xe9b8, 0x7ada, 0x0, 0x1);
        gbc.writeMem(0x19ab, { 0x26, 0x78 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6c01, gbc.sp());
        EXPECT(0x19ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 026E
        gbc.setState(0xa649, 0x2544, 0x13e0, 0x1c15, 0x77be, 0x26f0, 0x1, 0x0);
        gbc.writeMem(0xa649, { 0x26, 0xff });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2544, gbc.sp());
        EXPECT(0xa64b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa649));
        EXPECT(0xff, gbc.readMem(0xa64a));
        // 26 026F
        gbc.setState(0xa91b, 0x8602, 0xa080, 0x835b, 0xd862, 0x7876, 0x0, 0x0);
        gbc.writeMem(0xa91b, { 0x26, 0xb5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8602, gbc.sp());
        EXPECT(0xa91d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa91b));
        EXPECT(0xb5, gbc.readMem(0xa91c));
        // 26 0270
        gbc.setState(0x3fdd, 0x2322, 0x8320, 0xfc95, 0xdb23, 0xd11c, 0x1, 0x0);
        gbc.writeMem(0x3fdd, { 0x26, 0xac });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2322, gbc.sp());
        EXPECT(0x3fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0271
        gbc.setState(0xdd18, 0xce95, 0x3cc0, 0xb6e0, 0xae1b, 0x8559, 0x0, 0x0);
        gbc.writeMem(0xdd18, { 0x26, 0x44 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xce95, gbc.sp());
        EXPECT(0xdd1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xdd18));
        EXPECT(0x44, gbc.readMem(0xdd19));
        // 26 0272
        gbc.setState(0x6dfc, 0xbd0f, 0x7cd0, 0x481e, 0x7c3b, 0x3939, 0x0, 0x1);
        gbc.writeMem(0x6dfc, { 0x26, 0xc1 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbd0f, gbc.sp());
        EXPECT(0x6dfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0273
        gbc.setState(0x94fb, 0xd451, 0x42a0, 0x6336, 0x4c35, 0x2998, 0x1, 0x0);
        gbc.writeMem(0x94fb, { 0x26, 0x18 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd451, gbc.sp());
        EXPECT(0x94fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x94fb));
        EXPECT(0x18, gbc.readMem(0x94fc));
        // 26 0274
        gbc.setState(0x1f89, 0x92ef, 0xfb0, 0xde18, 0xb0df, 0xd1fa, 0x1, 0x1);
        gbc.writeMem(0x1f89, { 0x26, 0x71 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x92ef, gbc.sp());
        EXPECT(0x1f8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0275
        gbc.setState(0x85cf, 0x966f, 0x9a20, 0xcb1b, 0x550d, 0xd0ec, 0x0, 0x0);
        gbc.writeMem(0x85cf, { 0x26, 0x3b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x966f, gbc.sp());
        EXPECT(0x85d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x85cf));
        EXPECT(0x3b, gbc.readMem(0x85d0));
        // 26 0276
        gbc.setState(0xb59, 0x4f7e, 0x5590, 0x31b, 0xff4, 0xfa70, 0x0, 0x1);
        gbc.writeMem(0xb59, { 0x26, 0xe7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4f7e, gbc.sp());
        EXPECT(0xb5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0277
        gbc.setState(0xaa0b, 0x5aed, 0xc590, 0x63ef, 0xb4dc, 0x6f88, 0x0, 0x0);
        gbc.writeMem(0xaa0b, { 0x26, 0xc8 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5aed, gbc.sp());
        EXPECT(0xaa0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xaa0b));
        EXPECT(0xc8, gbc.readMem(0xaa0c));
        // 26 0278
        gbc.setState(0xabad, 0xad98, 0xd670, 0xcbaf, 0x74b4, 0xeb99, 0x1, 0x0);
        gbc.writeMem(0xabad, { 0x26, 0xd6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xad98, gbc.sp());
        EXPECT(0xabaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xabad));
        EXPECT(0xd6, gbc.readMem(0xabae));
        // 26 0279
        gbc.setState(0xc05c, 0xd9d6, 0xae20, 0xd962, 0xc2df, 0x1a7f, 0x0, 0x0);
        gbc.writeMem(0xc05c, { 0x26, 0x42 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd9d6, gbc.sp());
        EXPECT(0xc05e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc05c));
        EXPECT(0x42, gbc.readMem(0xc05d));
        // 26 027A
        gbc.setState(0x34f0, 0xeabb, 0x5350, 0x7c09, 0x8c25, 0x2556, 0x1, 0x0);
        gbc.writeMem(0x34f0, { 0x26, 0xaa });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xeabb, gbc.sp());
        EXPECT(0x34f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 027B
        gbc.setState(0x48ef, 0xbae0, 0x92b0, 0xb722, 0xce82, 0xa726, 0x1, 0x0);
        gbc.writeMem(0x48ef, { 0x26, 0x7a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbae0, gbc.sp());
        EXPECT(0x48f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 027C
        gbc.setState(0xdb2c, 0x1e82, 0x4fd0, 0x276b, 0x924c, 0xf372, 0x1, 0x1);
        gbc.writeMem(0xdb2c, { 0x26, 0x77 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1e82, gbc.sp());
        EXPECT(0xdb2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xdb2c));
        EXPECT(0x77, gbc.readMem(0xdb2d));
        // 26 027D
        gbc.setState(0xe4ac, 0x2cd0, 0x1460, 0x2214, 0xee99, 0x99fb, 0x0, 0x1);
        gbc.writeMem(0xe4ac, { 0x26, 0x68 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2cd0, gbc.sp());
        EXPECT(0xe4ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe4ac));
        EXPECT(0x68, gbc.readMem(0xe4ad));
        // 26 027E
        gbc.setState(0x298b, 0x3ac8, 0x4300, 0x9c5d, 0xdd76, 0x69cf, 0x1, 0x1);
        gbc.writeMem(0x298b, { 0x26, 0xc7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3ac8, gbc.sp());
        EXPECT(0x298d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 027F
        gbc.setState(0xb36a, 0x22f7, 0x600, 0x3656, 0xeae5, 0xb198, 0x1, 0x0);
        gbc.writeMem(0xb36a, { 0x26, 0x71 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x22f7, gbc.sp());
        EXPECT(0xb36c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb36a));
        EXPECT(0x71, gbc.readMem(0xb36b));
        // 26 0280
        gbc.setState(0x28d8, 0xadc2, 0x3920, 0x915a, 0xb5e8, 0x7b7, 0x1, 0x0);
        gbc.writeMem(0x28d8, { 0x26, 0xbc });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xadc2, gbc.sp());
        EXPECT(0x28da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0281
        gbc.setState(0x16ee, 0xb538, 0xad70, 0x32, 0xedcd, 0xf215, 0x1, 0x1);
        gbc.writeMem(0x16ee, { 0x26, 0x4c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb538, gbc.sp());
        EXPECT(0x16f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0282
        gbc.setState(0xa8c4, 0x3be6, 0x5cd0, 0x5836, 0xbe45, 0x75a8, 0x0, 0x0);
        gbc.writeMem(0xa8c4, { 0x26, 0xb2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3be6, gbc.sp());
        EXPECT(0xa8c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa8c4));
        EXPECT(0xb2, gbc.readMem(0xa8c5));
        // 26 0283
        gbc.setState(0xecc9, 0x5cf8, 0x6050, 0x1a3d, 0xf202, 0x35c9, 0x1, 0x0);
        gbc.writeMem(0xecc9, { 0x26, 0xf9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5cf8, gbc.sp());
        EXPECT(0xeccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xecc9));
        EXPECT(0xf9, gbc.readMem(0xecca));
        // 26 0284
        gbc.setState(0x8f99, 0x7b54, 0x8240, 0xfc41, 0x976, 0x339e, 0x1, 0x0);
        gbc.writeMem(0x8f99, { 0x26, 0x6e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7b54, gbc.sp());
        EXPECT(0x8f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8f99));
        EXPECT(0x6e, gbc.readMem(0x8f9a));
        // 26 0285
        gbc.setState(0x3259, 0x153d, 0xf800, 0x61dc, 0x3518, 0x4646, 0x0, 0x0);
        gbc.writeMem(0x3259, { 0x26, 0xff });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x153d, gbc.sp());
        EXPECT(0x325b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0286
        gbc.setState(0xc9a3, 0xcbce, 0xafd0, 0xa4bb, 0x56e7, 0xcbba, 0x1, 0x1);
        gbc.writeMem(0xc9a3, { 0x26, 0x7b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcbce, gbc.sp());
        EXPECT(0xc9a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc9a3));
        EXPECT(0x7b, gbc.readMem(0xc9a4));
        // 26 0287
        gbc.setState(0xad63, 0x69cc, 0xb220, 0xd948, 0xc8c6, 0x4913, 0x0, 0x0);
        gbc.writeMem(0xad63, { 0x26, 0x7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x69cc, gbc.sp());
        EXPECT(0xad65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xad63));
        EXPECT(0x7, gbc.readMem(0xad64));
        // 26 0288
        gbc.setState(0x363d, 0x2954, 0x3540, 0xff33, 0xc28a, 0x9720, 0x1, 0x0);
        gbc.writeMem(0x363d, { 0x26, 0xd });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2954, gbc.sp());
        EXPECT(0x363f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0289
        gbc.setState(0x6cb1, 0xa601, 0xa470, 0xd05a, 0x29a4, 0xb75c, 0x0, 0x0);
        gbc.writeMem(0x6cb1, { 0x26, 0xd6 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa601, gbc.sp());
        EXPECT(0x6cb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 028A
        gbc.setState(0x7f28, 0x2938, 0xbb50, 0x5f72, 0xbbf9, 0x7647, 0x1, 0x1);
        gbc.writeMem(0x7f28, { 0x26, 0x59 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2938, gbc.sp());
        EXPECT(0x7f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 028B
        gbc.setState(0x3b3a, 0x3ed9, 0xdb90, 0xb83f, 0x1fb4, 0x6f93, 0x0, 0x1);
        gbc.writeMem(0x3b3a, { 0x26, 0x2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3ed9, gbc.sp());
        EXPECT(0x3b3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 028C
        gbc.setState(0xa21f, 0x4e58, 0x2b0, 0xa4f, 0xc0fa, 0x2aff, 0x0, 0x0);
        gbc.writeMem(0xa21f, { 0x26, 0x45 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4e58, gbc.sp());
        EXPECT(0xa221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa21f));
        EXPECT(0x45, gbc.readMem(0xa220));
        // 26 028D
        gbc.setState(0xb07, 0xb775, 0xc570, 0x373c, 0xc09e, 0xa74f, 0x1, 0x1);
        gbc.writeMem(0xb07, { 0x26, 0x3c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb775, gbc.sp());
        EXPECT(0xb09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 028E
        gbc.setState(0x29a4, 0x7d5b, 0x4b00, 0x3681, 0x8cb7, 0x13a7, 0x1, 0x1);
        gbc.writeMem(0x29a4, { 0x26, 0x86 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7d5b, gbc.sp());
        EXPECT(0x29a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 028F
        gbc.setState(0xd80, 0x2cd, 0xe160, 0x42e7, 0x4231, 0x7e0f, 0x0, 0x1);
        gbc.writeMem(0xd80, { 0x26, 0x1f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2cd, gbc.sp());
        EXPECT(0xd82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0290
        gbc.setState(0x2761, 0xc575, 0xcdb0, 0xb336, 0x9442, 0xbd3e, 0x1, 0x1);
        gbc.writeMem(0x2761, { 0x26, 0x22 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc575, gbc.sp());
        EXPECT(0x2763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0291
        gbc.setState(0xc54d, 0xaad7, 0x10a0, 0xc722, 0xefa8, 0x48b6, 0x1, 0x1);
        gbc.writeMem(0xc54d, { 0x26, 0x43 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xaad7, gbc.sp());
        EXPECT(0xc54f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc54d));
        EXPECT(0x43, gbc.readMem(0xc54e));
        // 26 0292
        gbc.setState(0xd5fb, 0xf5f0, 0xf2d0, 0x5c32, 0xf90c, 0xdf22, 0x0, 0x0);
        gbc.writeMem(0xd5fb, { 0x26, 0x34 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf5f0, gbc.sp());
        EXPECT(0xd5fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd5fb));
        EXPECT(0x34, gbc.readMem(0xd5fc));
        // 26 0293
        gbc.setState(0x39f2, 0x6e6f, 0x3ff0, 0xe662, 0xadeb, 0xd24c, 0x0, 0x0);
        gbc.writeMem(0x39f2, { 0x26, 0x62 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6e6f, gbc.sp());
        EXPECT(0x39f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0294
        gbc.setState(0x2190, 0xefaf, 0x4bd0, 0xf48d, 0xc58f, 0xc395, 0x1, 0x1);
        gbc.writeMem(0x2190, { 0x26, 0x79 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xefaf, gbc.sp());
        EXPECT(0x2192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0295
        gbc.setState(0xa217, 0x3139, 0x6a90, 0x8d4e, 0x5f5a, 0x7ab2, 0x0, 0x0);
        gbc.writeMem(0xa217, { 0x26, 0xf4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3139, gbc.sp());
        EXPECT(0xa219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa217));
        EXPECT(0xf4, gbc.readMem(0xa218));
        // 26 0296
        gbc.setState(0xd277, 0x1ec1, 0x5920, 0xa152, 0x4352, 0xd0e, 0x1, 0x0);
        gbc.writeMem(0xd277, { 0x26, 0x56 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1ec1, gbc.sp());
        EXPECT(0xd279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd277));
        EXPECT(0x56, gbc.readMem(0xd278));
        // 26 0297
        gbc.setState(0x28a3, 0x6093, 0x2920, 0xcf, 0xb93d, 0x7278, 0x0, 0x0);
        gbc.writeMem(0x28a3, { 0x26, 0x54 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6093, gbc.sp());
        EXPECT(0x28a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0298
        gbc.setState(0x55a3, 0x5a4f, 0x8f00, 0x6e92, 0x9960, 0x304d, 0x1, 0x1);
        gbc.writeMem(0x55a3, { 0x26, 0x32 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5a4f, gbc.sp());
        EXPECT(0x55a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0299
        gbc.setState(0x699d, 0x5787, 0x2180, 0xcfee, 0x90c0, 0x303e, 0x1, 0x1);
        gbc.writeMem(0x699d, { 0x26, 0x1a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5787, gbc.sp());
        EXPECT(0x699f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 029A
        gbc.setState(0x7483, 0xc25a, 0x3170, 0xfe29, 0x5d9a, 0xe85c, 0x1, 0x0);
        gbc.writeMem(0x7483, { 0x26, 0x5e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc25a, gbc.sp());
        EXPECT(0x7485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 029B
        gbc.setState(0x885b, 0x1663, 0xd3d0, 0x4b6a, 0x4abf, 0x9bc0, 0x1, 0x0);
        gbc.writeMem(0x885b, { 0x26, 0x6 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1663, gbc.sp());
        EXPECT(0x885d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x885b));
        EXPECT(0x6, gbc.readMem(0x885c));
        // 26 029C
        gbc.setState(0x4637, 0x4e86, 0xbc40, 0xc8e, 0xf5ec, 0xec80, 0x1, 0x1);
        gbc.writeMem(0x4637, { 0x26, 0xae });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4e86, gbc.sp());
        EXPECT(0x4639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 029D
        gbc.setState(0x6def, 0x4fa8, 0x3b10, 0xaf6c, 0x7563, 0x537c, 0x0, 0x1);
        gbc.writeMem(0x6def, { 0x26, 0x53 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4fa8, gbc.sp());
        EXPECT(0x6df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 029E
        gbc.setState(0x74c8, 0x8d97, 0xb2e0, 0xba6d, 0x256d, 0xc554, 0x1, 0x0);
        gbc.writeMem(0x74c8, { 0x26, 0xe });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8d97, gbc.sp());
        EXPECT(0x74ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 029F
        gbc.setState(0x6c67, 0x4514, 0x3b50, 0x7cbd, 0x5907, 0xd79a, 0x0, 0x0);
        gbc.writeMem(0x6c67, { 0x26, 0x42 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4514, gbc.sp());
        EXPECT(0x6c69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02A0
        gbc.setState(0xc5a2, 0x189f, 0x9a90, 0x27cc, 0x1d57, 0xc22d, 0x1, 0x0);
        gbc.writeMem(0xc5a2, { 0x26, 0x4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x189f, gbc.sp());
        EXPECT(0xc5a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc5a2));
        EXPECT(0x4, gbc.readMem(0xc5a3));
        // 26 02A1
        gbc.setState(0x8369, 0x12c4, 0x1da0, 0x4fb8, 0xc523, 0x1fdc, 0x0, 0x1);
        gbc.writeMem(0x8369, { 0x26, 0x26 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x12c4, gbc.sp());
        EXPECT(0x836b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8369));
        EXPECT(0x26, gbc.readMem(0x836a));
        // 26 02A2
        gbc.setState(0x9321, 0x649, 0x7fb0, 0x5d39, 0x1e59, 0x1ff8, 0x1, 0x0);
        gbc.writeMem(0x9321, { 0x26, 0xa0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x649, gbc.sp());
        EXPECT(0x9323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9321));
        EXPECT(0xa0, gbc.readMem(0x9322));
        // 26 02A3
        gbc.setState(0x48fb, 0x2d33, 0x41c0, 0x5254, 0x305e, 0x3ae6, 0x0, 0x0);
        gbc.writeMem(0x48fb, { 0x26, 0x52 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2d33, gbc.sp());
        EXPECT(0x48fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 02A4
        gbc.setState(0xc1e8, 0x5ce8, 0xdd10, 0x1fd0, 0x7427, 0x81d5, 0x0, 0x1);
        gbc.writeMem(0xc1e8, { 0x26, 0xdf });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5ce8, gbc.sp());
        EXPECT(0xc1ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc1e8));
        EXPECT(0xdf, gbc.readMem(0xc1e9));
        // 26 02A5
        gbc.setState(0x94a4, 0x5e92, 0x9e70, 0x7cb5, 0x6874, 0x30b7, 0x1, 0x0);
        gbc.writeMem(0x94a4, { 0x26, 0x20 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5e92, gbc.sp());
        EXPECT(0x94a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x94a4));
        EXPECT(0x20, gbc.readMem(0x94a5));
        // 26 02A6
        gbc.setState(0xc1bb, 0xdb45, 0xa6f0, 0x343f, 0xfedf, 0x312b, 0x1, 0x1);
        gbc.writeMem(0xc1bb, { 0x26, 0x24 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xdb45, gbc.sp());
        EXPECT(0xc1bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc1bb));
        EXPECT(0x24, gbc.readMem(0xc1bc));
        // 26 02A7
        gbc.setState(0xace5, 0xd88d, 0x1d50, 0x120c, 0x70b7, 0xebc2, 0x1, 0x0);
        gbc.writeMem(0xace5, { 0x26, 0xb8 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd88d, gbc.sp());
        EXPECT(0xace7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xace5));
        EXPECT(0xb8, gbc.readMem(0xace6));
        // 26 02A8
        gbc.setState(0xb31d, 0x9c63, 0x9510, 0xca59, 0x8b60, 0xabb7, 0x0, 0x1);
        gbc.writeMem(0xb31d, { 0x26, 0xda });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9c63, gbc.sp());
        EXPECT(0xb31f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb31d));
        EXPECT(0xda, gbc.readMem(0xb31e));
        // 26 02A9
        gbc.setState(0x67f5, 0xb377, 0xa130, 0x69cd, 0xa318, 0x6174, 0x1, 0x1);
        gbc.writeMem(0x67f5, { 0x26, 0x70 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb377, gbc.sp());
        EXPECT(0x67f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02AA
        gbc.setState(0xd55, 0x6806, 0x1480, 0x153b, 0xd69a, 0x67bd, 0x1, 0x0);
        gbc.writeMem(0xd55, { 0x26, 0xe1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6806, gbc.sp());
        EXPECT(0xd57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 02AB
        gbc.setState(0xbb2c, 0x22a, 0x4200, 0x56e9, 0xbf04, 0x1879, 0x0, 0x1);
        gbc.writeMem(0xbb2c, { 0x26, 0x17 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x22a, gbc.sp());
        EXPECT(0xbb2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbb2c));
        EXPECT(0x17, gbc.readMem(0xbb2d));
        // 26 02AC
        gbc.setState(0x9533, 0x6a4f, 0x7ce0, 0xc38c, 0x8108, 0xb0fd, 0x0, 0x1);
        gbc.writeMem(0x9533, { 0x26, 0xe });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6a4f, gbc.sp());
        EXPECT(0x9535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9533));
        EXPECT(0xe, gbc.readMem(0x9534));
        // 26 02AD
        gbc.setState(0x3d98, 0x7072, 0xa770, 0xb16a, 0xf5f4, 0x92f8, 0x0, 0x1);
        gbc.writeMem(0x3d98, { 0x26, 0x24 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7072, gbc.sp());
        EXPECT(0x3d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02AE
        gbc.setState(0x2314, 0x9dc2, 0x6e50, 0xdca0, 0x4832, 0x56cf, 0x0, 0x1);
        gbc.writeMem(0x2314, { 0x26, 0x5b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9dc2, gbc.sp());
        EXPECT(0x2316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02AF
        gbc.setState(0xc49a, 0xf0c4, 0xabd0, 0x9e02, 0x2dc2, 0x7614, 0x0, 0x1);
        gbc.writeMem(0xc49a, { 0x26, 0xaf });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf0c4, gbc.sp());
        EXPECT(0xc49c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc49a));
        EXPECT(0xaf, gbc.readMem(0xc49b));
        // 26 02B2
        gbc.setState(0x53f4, 0x47e7, 0x9c90, 0x3941, 0x305f, 0x7917, 0x1, 0x1);
        gbc.writeMem(0x53f4, { 0x26, 0xc2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x47e7, gbc.sp());
        EXPECT(0x53f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02B3
        gbc.setState(0x9611, 0x88bb, 0xd5d0, 0x6af8, 0xf4ee, 0xf4f1, 0x0, 0x0);
        gbc.writeMem(0x9611, { 0x26, 0x40 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x88bb, gbc.sp());
        EXPECT(0x9613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9611));
        EXPECT(0x40, gbc.readMem(0x9612));
        // 26 02B4
        gbc.setState(0x1a3d, 0x39f9, 0x2ef0, 0x7459, 0x9c12, 0x5db8, 0x0, 0x0);
        gbc.writeMem(0x1a3d, { 0x26, 0x90 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x39f9, gbc.sp());
        EXPECT(0x1a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02B5
        gbc.setState(0x9904, 0xed97, 0xc220, 0xa1e, 0x6f02, 0x3a1c, 0x0, 0x1);
        gbc.writeMem(0x9904, { 0x26, 0x80 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xed97, gbc.sp());
        EXPECT(0x9906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9904));
        EXPECT(0x80, gbc.readMem(0x9905));
        // 26 02B6
        gbc.setState(0xbe71, 0x5415, 0x6530, 0x3f19, 0x4c9a, 0x31a, 0x0, 0x0);
        gbc.writeMem(0xbe71, { 0x26, 0xea });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5415, gbc.sp());
        EXPECT(0xbe73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbe71));
        EXPECT(0xea, gbc.readMem(0xbe72));
        // 26 02B7
        gbc.setState(0x701a, 0x1ce8, 0x27c0, 0x7f0e, 0x70ee, 0xc234, 0x1, 0x1);
        gbc.writeMem(0x701a, { 0x26, 0x8b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1ce8, gbc.sp());
        EXPECT(0x701c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 02B9
        gbc.setState(0x8dec, 0x4486, 0x7440, 0x4da5, 0x2028, 0x69b9, 0x0, 0x0);
        gbc.writeMem(0x8dec, { 0x26, 0xa0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4486, gbc.sp());
        EXPECT(0x8dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8dec));
        EXPECT(0xa0, gbc.readMem(0x8ded));
        // 26 02BA
        gbc.setState(0x89b9, 0xabd5, 0x5600, 0xfbd3, 0x203d, 0x5e07, 0x0, 0x0);
        gbc.writeMem(0x89b9, { 0x26, 0xd2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xabd5, gbc.sp());
        EXPECT(0x89bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x89b9));
        EXPECT(0xd2, gbc.readMem(0x89ba));
        // 26 02BB
        gbc.setState(0x9f93, 0xdc85, 0x4cd0, 0x39d3, 0x8f48, 0x7038, 0x1, 0x1);
        gbc.writeMem(0x9f93, { 0x26, 0xa6 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdc85, gbc.sp());
        EXPECT(0x9f95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9f93));
        EXPECT(0xa6, gbc.readMem(0x9f94));
        // 26 02BC
        gbc.setState(0x51e9, 0x47d, 0x2450, 0x2e23, 0xd8bd, 0x9cca, 0x1, 0x1);
        gbc.writeMem(0x51e9, { 0x26, 0x28 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x47d, gbc.sp());
        EXPECT(0x51eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02BD
        gbc.setState(0x8790, 0x3dec, 0xef70, 0x1794, 0xefe1, 0x9869, 0x0, 0x1);
        gbc.writeMem(0x8790, { 0x26, 0xdf });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3dec, gbc.sp());
        EXPECT(0x8792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8790));
        EXPECT(0xdf, gbc.readMem(0x8791));
        // 26 02BE
        gbc.setState(0x3467, 0xf384, 0xf520, 0x5692, 0x4b5e, 0x23b5, 0x0, 0x1);
        gbc.writeMem(0x3467, { 0x26, 0x5a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf384, gbc.sp());
        EXPECT(0x3469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 02BF
        gbc.setState(0x6eb3, 0x5009, 0x7a20, 0x712c, 0x914a, 0x1767, 0x0, 0x1);
        gbc.writeMem(0x6eb3, { 0x26, 0xc1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5009, gbc.sp());
        EXPECT(0x6eb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 02C0
        gbc.setState(0x150a, 0xd148, 0xc020, 0x62fd, 0xd50c, 0xe867, 0x1, 0x0);
        gbc.writeMem(0x150a, { 0x26, 0xc2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd148, gbc.sp());
        EXPECT(0x150c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 02C1
        gbc.setState(0x28c1, 0x8416, 0xa6b0, 0x4faa, 0x9360, 0x2db3, 0x0, 0x0);
        gbc.writeMem(0x28c1, { 0x26, 0x84 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8416, gbc.sp());
        EXPECT(0x28c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02C2
        gbc.setState(0x963a, 0x4f61, 0x5120, 0x168e, 0x4eb8, 0x6008, 0x1, 0x1);
        gbc.writeMem(0x963a, { 0x26, 0xbb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4f61, gbc.sp());
        EXPECT(0x963c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x963a));
        EXPECT(0xbb, gbc.readMem(0x963b));
        // 26 02C3
        gbc.setState(0x443f, 0xf4aa, 0x5790, 0xb3d7, 0xa50f, 0xcd16, 0x0, 0x1);
        gbc.writeMem(0x443f, { 0x26, 0x50 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf4aa, gbc.sp());
        EXPECT(0x4441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02C4
        gbc.setState(0x1a37, 0xe6c4, 0x54c0, 0x2f0d, 0x7422, 0x84c6, 0x0, 0x0);
        gbc.writeMem(0x1a37, { 0x26, 0x45 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe6c4, gbc.sp());
        EXPECT(0x1a39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 02C5
        gbc.setState(0x52b2, 0xbaec, 0x18c0, 0xf6ac, 0xd92f, 0xd4e5, 0x1, 0x1);
        gbc.writeMem(0x52b2, { 0x26, 0x5f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbaec, gbc.sp());
        EXPECT(0x52b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 02C6
        gbc.setState(0xaa71, 0x6dd3, 0x9730, 0xf332, 0xde91, 0x6bd6, 0x1, 0x0);
        gbc.writeMem(0xaa71, { 0x26, 0xc8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6dd3, gbc.sp());
        EXPECT(0xaa73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xaa71));
        EXPECT(0xc8, gbc.readMem(0xaa72));
        // 26 02C7
        gbc.setState(0x4fab, 0x7605, 0xc9a0, 0x9448, 0x2705, 0x5a74, 0x0, 0x0);
        gbc.writeMem(0x4fab, { 0x26, 0xd3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7605, gbc.sp());
        EXPECT(0x4fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 02C8
        gbc.setState(0x6a51, 0x1bfe, 0xfa30, 0xe51c, 0xeeea, 0x7e3c, 0x1, 0x0);
        gbc.writeMem(0x6a51, { 0x26, 0xda });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1bfe, gbc.sp());
        EXPECT(0x6a53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02C9
        gbc.setState(0x10d0, 0x9e4a, 0x8a90, 0x62cd, 0x4307, 0xd611, 0x1, 0x1);
        gbc.writeMem(0x10d0, { 0x26, 0x6d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9e4a, gbc.sp());
        EXPECT(0x10d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02CA
        gbc.setState(0x1832, 0x23ee, 0xdeb0, 0xb7a8, 0xa202, 0xd0d4, 0x1, 0x1);
        gbc.writeMem(0x1832, { 0x26, 0xd8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x23ee, gbc.sp());
        EXPECT(0x1834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02CB
        gbc.setState(0xd8f7, 0x82cb, 0x3200, 0xa988, 0x7121, 0x4c7c, 0x1, 0x1);
        gbc.writeMem(0xd8f7, { 0x26, 0xd9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x82cb, gbc.sp());
        EXPECT(0xd8f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd8f7));
        EXPECT(0xd9, gbc.readMem(0xd8f8));
        // 26 02CC
        gbc.setState(0x3271, 0xb58f, 0xd0, 0x7368, 0xe855, 0x5c8f, 0x0, 0x0);
        gbc.writeMem(0x3271, { 0x26, 0x19 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb58f, gbc.sp());
        EXPECT(0x3273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02CD
        gbc.setState(0xcf13, 0xd807, 0x5fb0, 0x5097, 0x3ac3, 0x5b65, 0x0, 0x1);
        gbc.writeMem(0xcf13, { 0x26, 0x4b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd807, gbc.sp());
        EXPECT(0xcf15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xcf13));
        EXPECT(0x4b, gbc.readMem(0xcf14));
        // 26 02CE
        gbc.setState(0xef5b, 0x844b, 0x1ef0, 0xb3f7, 0x75be, 0x206b, 0x1, 0x1);
        gbc.writeMem(0xef5b, { 0x26, 0x6a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x844b, gbc.sp());
        EXPECT(0xef5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xef5b));
        EXPECT(0x6a, gbc.readMem(0xef5c));
        // 26 02CF
        gbc.setState(0x5dd8, 0xf6c3, 0x6860, 0xf45, 0x9e38, 0x5596, 0x1, 0x1);
        gbc.writeMem(0x5dd8, { 0x26, 0x97 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf6c3, gbc.sp());
        EXPECT(0x5dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 02D0
        gbc.setState(0x612a, 0x66d1, 0x9010, 0x4294, 0xec28, 0x66f3, 0x1, 0x0);
        gbc.writeMem(0x612a, { 0x26, 0x1b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x66d1, gbc.sp());
        EXPECT(0x612c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02D1
        gbc.setState(0x8b75, 0xdfc6, 0xeb80, 0xce0c, 0xe172, 0xc21c, 0x0, 0x1);
        gbc.writeMem(0x8b75, { 0x26, 0xd2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdfc6, gbc.sp());
        EXPECT(0x8b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8b75));
        EXPECT(0xd2, gbc.readMem(0x8b76));
        // 26 02D2
        gbc.setState(0x8b56, 0x9ef6, 0x3bd0, 0xff7e, 0x8f93, 0xee85, 0x1, 0x0);
        gbc.writeMem(0x8b56, { 0x26, 0x50 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9ef6, gbc.sp());
        EXPECT(0x8b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8b56));
        EXPECT(0x50, gbc.readMem(0x8b57));
        // 26 02D3
        gbc.setState(0x29a4, 0xe6ab, 0xe5d0, 0x471b, 0x32a8, 0xfeab, 0x0, 0x1);
        gbc.writeMem(0x29a4, { 0x26, 0x86 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe6ab, gbc.sp());
        EXPECT(0x29a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02D4
        gbc.setState(0x9d3, 0xa5ea, 0x85f0, 0x2559, 0x1393, 0xb2b3, 0x0, 0x0);
        gbc.writeMem(0x9d3, { 0x26, 0x5c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa5ea, gbc.sp());
        EXPECT(0x9d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02D6
        gbc.setState(0x980e, 0x64cd, 0x4420, 0x3806, 0x8cb5, 0x54cc, 0x1, 0x0);
        gbc.writeMem(0x980e, { 0x26, 0xb8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x64cd, gbc.sp());
        EXPECT(0x9810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x980e));
        EXPECT(0xb8, gbc.readMem(0x980f));
        // 26 02D7
        gbc.setState(0xd2c6, 0x9709, 0xaa40, 0x7e92, 0xd4b8, 0x890b, 0x1, 0x0);
        gbc.writeMem(0xd2c6, { 0x26, 0x35 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9709, gbc.sp());
        EXPECT(0xd2c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd2c6));
        EXPECT(0x35, gbc.readMem(0xd2c7));
        // 26 02D8
        gbc.setState(0x8312, 0xc06b, 0x2210, 0x3921, 0x5f82, 0x6091, 0x0, 0x0);
        gbc.writeMem(0x8312, { 0x26, 0xf3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc06b, gbc.sp());
        EXPECT(0x8314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8312));
        EXPECT(0xf3, gbc.readMem(0x8313));
        // 26 02D9
        gbc.setState(0x354e, 0xbc0a, 0xb020, 0x9e3e, 0x7466, 0x9c08, 0x1, 0x1);
        gbc.writeMem(0x354e, { 0x26, 0xbd });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbc0a, gbc.sp());
        EXPECT(0x3550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 02DA
        gbc.setState(0x8c88, 0x711f, 0x8630, 0x8792, 0xbcad, 0xf303, 0x0, 0x0);
        gbc.writeMem(0x8c88, { 0x26, 0x50 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x711f, gbc.sp());
        EXPECT(0x8c8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8c88));
        EXPECT(0x50, gbc.readMem(0x8c89));
        // 26 02DB
        gbc.setState(0xd02, 0x1086, 0xe2d0, 0x9f42, 0x8124, 0xc72a, 0x1, 0x0);
        gbc.writeMem(0xd02, { 0x26, 0x28 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1086, gbc.sp());
        EXPECT(0xd04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02DC
        gbc.setState(0xc6d4, 0xaa41, 0x6c80, 0xd038, 0x8319, 0x8ebd, 0x0, 0x1);
        gbc.writeMem(0xc6d4, { 0x26, 0xed });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xaa41, gbc.sp());
        EXPECT(0xc6d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc6d4));
        EXPECT(0xed, gbc.readMem(0xc6d5));
        // 26 02DD
        gbc.setState(0x65ee, 0xf228, 0x3c40, 0x71c6, 0x9312, 0x8a87, 0x0, 0x0);
        gbc.writeMem(0x65ee, { 0x26, 0x60 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf228, gbc.sp());
        EXPECT(0x65f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 02DE
        gbc.setState(0xae29, 0x372c, 0x260, 0x6a8b, 0xd82c, 0x5341, 0x0, 0x0);
        gbc.writeMem(0xae29, { 0x26, 0xe8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x372c, gbc.sp());
        EXPECT(0xae2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xae29));
        EXPECT(0xe8, gbc.readMem(0xae2a));
        // 26 02DF
        gbc.setState(0x6f2a, 0x855d, 0xc8a0, 0x49fc, 0xc9f3, 0x5334, 0x1, 0x1);
        gbc.writeMem(0x6f2a, { 0x26, 0xaa });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x855d, gbc.sp());
        EXPECT(0x6f2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 02E0
        gbc.setState(0x145c, 0xefae, 0x3ef0, 0xfe0c, 0xe736, 0x8f0d, 0x0, 0x0);
        gbc.writeMem(0x145c, { 0x26, 0x45 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xefae, gbc.sp());
        EXPECT(0x145e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02E1
        gbc.setState(0x314e, 0x54bd, 0x530, 0xfecd, 0x2347, 0x4de4, 0x0, 0x0);
        gbc.writeMem(0x314e, { 0x26, 0x54 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x54bd, gbc.sp());
        EXPECT(0x3150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02E2
        gbc.setState(0xc25c, 0x9355, 0xcf0, 0xba1a, 0xab6, 0xc2ee, 0x1, 0x0);
        gbc.writeMem(0xc25c, { 0x26, 0xb7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9355, gbc.sp());
        EXPECT(0xc25e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc25c));
        EXPECT(0xb7, gbc.readMem(0xc25d));
        // 26 02E3
        gbc.setState(0xe0ee, 0x49ee, 0x20e0, 0xf918, 0x4c55, 0x8578, 0x0, 0x0);
        gbc.writeMem(0xe0ee, { 0x26, 0xab });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x49ee, gbc.sp());
        EXPECT(0xe0f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe0ee));
        EXPECT(0xab, gbc.readMem(0xe0ef));
        // 26 02E4
        gbc.setState(0x6e79, 0x8e10, 0xd660, 0x919f, 0x2703, 0xe77b, 0x1, 0x1);
        gbc.writeMem(0x6e79, { 0x26, 0x9f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8e10, gbc.sp());
        EXPECT(0x6e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 02E5
        gbc.setState(0x89b4, 0xb556, 0xed90, 0xbf89, 0xbd1c, 0x57fd, 0x0, 0x0);
        gbc.writeMem(0x89b4, { 0x26, 0x8b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb556, gbc.sp());
        EXPECT(0x89b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x89b4));
        EXPECT(0x8b, gbc.readMem(0x89b5));
        // 26 02E6
        gbc.setState(0x405c, 0x561, 0xae90, 0xf881, 0x6278, 0xe0ad, 0x1, 0x1);
        gbc.writeMem(0x405c, { 0x26, 0x6d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x561, gbc.sp());
        EXPECT(0x405e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02E7
        gbc.setState(0x19e3, 0x9649, 0xad90, 0x236, 0x633b, 0x8005, 0x1, 0x0);
        gbc.writeMem(0x19e3, { 0x26, 0x47 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9649, gbc.sp());
        EXPECT(0x19e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02E8
        gbc.setState(0x97e9, 0xd82f, 0x47f0, 0x9350, 0xeec, 0x7ef5, 0x1, 0x1);
        gbc.writeMem(0x97e9, { 0x26, 0xd4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd82f, gbc.sp());
        EXPECT(0x97eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x97e9));
        EXPECT(0xd4, gbc.readMem(0x97ea));
        // 26 02E9
        gbc.setState(0xb60d, 0xb250, 0x4fd0, 0xc216, 0x1b1a, 0x3573, 0x1, 0x0);
        gbc.writeMem(0xb60d, { 0x26, 0xac });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb250, gbc.sp());
        EXPECT(0xb60f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb60d));
        EXPECT(0xac, gbc.readMem(0xb60e));
        // 26 02EA
        gbc.setState(0xc3d6, 0xd29c, 0x44f0, 0xa77b, 0xb02b, 0xda29, 0x1, 0x0);
        gbc.writeMem(0xc3d6, { 0x26, 0xdd });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd29c, gbc.sp());
        EXPECT(0xc3d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc3d6));
        EXPECT(0xdd, gbc.readMem(0xc3d7));
        // 26 02EB
        gbc.setState(0xc58, 0x5377, 0x5710, 0xebb9, 0xd661, 0x2e7e, 0x1, 0x0);
        gbc.writeMem(0xc58, { 0x26, 0x79 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5377, gbc.sp());
        EXPECT(0xc5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02EC
        gbc.setState(0xa0c, 0xa8ab, 0xeb00, 0x1060, 0x94d8, 0x844e, 0x1, 0x1);
        gbc.writeMem(0xa0c, { 0x26, 0x51 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa8ab, gbc.sp());
        EXPECT(0xa0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 02ED
        gbc.setState(0x97e0, 0x961a, 0x7740, 0x8172, 0x4e57, 0x3f9d, 0x1, 0x1);
        gbc.writeMem(0x97e0, { 0x26, 0xc5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x961a, gbc.sp());
        EXPECT(0x97e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x97e0));
        EXPECT(0xc5, gbc.readMem(0x97e1));
        // 26 02EE
        gbc.setState(0xa842, 0x78b9, 0xf550, 0xe4fc, 0xaf92, 0xc2df, 0x0, 0x0);
        gbc.writeMem(0xa842, { 0x26, 0x57 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x78b9, gbc.sp());
        EXPECT(0xa844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa842));
        EXPECT(0x57, gbc.readMem(0xa843));
        // 26 02EF
        gbc.setState(0x2eb1, 0x367, 0xf930, 0x8c0e, 0x265, 0xab85, 0x1, 0x0);
        gbc.writeMem(0x2eb1, { 0x26, 0x4c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x367, gbc.sp());
        EXPECT(0x2eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02F1
        gbc.setState(0x11d3, 0xd74d, 0xa8a0, 0x6b5c, 0xb52a, 0xe45c, 0x0, 0x1);
        gbc.writeMem(0x11d3, { 0x26, 0x35 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd74d, gbc.sp());
        EXPECT(0x11d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 02F2
        gbc.setState(0x3aff, 0x6a2c, 0x7cd0, 0xa87f, 0xf271, 0x5ca6, 0x0, 0x1);
        gbc.writeMem(0x3aff, { 0x26, 0x7f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6a2c, gbc.sp());
        EXPECT(0x3b01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02F3
        gbc.setState(0xa061, 0xf8a8, 0x7e60, 0x9b2f, 0xc564, 0xdf14, 0x0, 0x1);
        gbc.writeMem(0xa061, { 0x26, 0xba });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf8a8, gbc.sp());
        EXPECT(0xa063, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa061));
        EXPECT(0xba, gbc.readMem(0xa062));
        // 26 02F4
        gbc.setState(0x76ec, 0x366, 0x1100, 0xad23, 0xccb4, 0xe788, 0x0, 0x1);
        gbc.writeMem(0x76ec, { 0x26, 0x52 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x366, gbc.sp());
        EXPECT(0x76ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 02F5
        gbc.setState(0xd170, 0x9768, 0x2d0, 0xfc4d, 0xf1dc, 0x8b02, 0x0, 0x1);
        gbc.writeMem(0xd170, { 0x26, 0x16 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9768, gbc.sp());
        EXPECT(0xd172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd170));
        EXPECT(0x16, gbc.readMem(0xd171));
        // 26 02F6
        gbc.setState(0x89c8, 0xfe06, 0xb4f0, 0x303, 0xd58f, 0x5656, 0x0, 0x1);
        gbc.writeMem(0x89c8, { 0x26, 0x48 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfe06, gbc.sp());
        EXPECT(0x89ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x89c8));
        EXPECT(0x48, gbc.readMem(0x89c9));
        // 26 02F7
        gbc.setState(0xde60, 0xdd0e, 0xe5d0, 0xf786, 0x111d, 0xc132, 0x0, 0x1);
        gbc.writeMem(0xde60, { 0x26, 0x8b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdd0e, gbc.sp());
        EXPECT(0xde62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xde60));
        EXPECT(0x8b, gbc.readMem(0xde61));
        // 26 02F8
        gbc.setState(0x891, 0xa9d0, 0xc7d0, 0x8f8e, 0x3c3, 0x2033, 0x1, 0x1);
        gbc.writeMem(0x891, { 0x26, 0x24 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa9d0, gbc.sp());
        EXPECT(0x893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02F9
        gbc.setState(0x4388, 0xa81b, 0xc520, 0xe090, 0x5b60, 0x2767, 0x1, 0x0);
        gbc.writeMem(0x4388, { 0x26, 0x6e });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa81b, gbc.sp());
        EXPECT(0x438a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 02FA
        gbc.setState(0xe68b, 0xaf98, 0xc040, 0xec66, 0x375c, 0x2234, 0x0, 0x0);
        gbc.writeMem(0xe68b, { 0x26, 0xd4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xaf98, gbc.sp());
        EXPECT(0xe68d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe68b));
        EXPECT(0xd4, gbc.readMem(0xe68c));
        // 26 02FB
        gbc.setState(0x6855, 0x86f5, 0x5fa0, 0x19e0, 0x6dfb, 0x4e9f, 0x0, 0x0);
        gbc.writeMem(0x6855, { 0x26, 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x86f5, gbc.sp());
        EXPECT(0x6857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 02FC
        gbc.setState(0xcae0, 0xd2bd, 0xe6d0, 0x2e4f, 0xd37e, 0xb4e7, 0x0, 0x1);
        gbc.writeMem(0xcae0, { 0x26, 0xbc });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd2bd, gbc.sp());
        EXPECT(0xcae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xcae0));
        EXPECT(0xbc, gbc.readMem(0xcae1));
        // 26 02FD
        gbc.setState(0xb75a, 0x7d94, 0xa500, 0x1c44, 0xd801, 0xd7d3, 0x0, 0x0);
        gbc.writeMem(0xb75a, { 0x26, 0x17 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7d94, gbc.sp());
        EXPECT(0xb75c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb75a));
        EXPECT(0x17, gbc.readMem(0xb75b));
        // 26 02FE
        gbc.setState(0x421b, 0xea9e, 0xe030, 0x1935, 0x885d, 0x233d, 0x0, 0x0);
        gbc.writeMem(0x421b, { 0x26, 0xb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xea9e, gbc.sp());
        EXPECT(0x421d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 02FF
        gbc.setState(0x4b0d, 0x12aa, 0xd870, 0xacf3, 0xf7e5, 0x5739, 0x0, 0x0);
        gbc.writeMem(0x4b0d, { 0x26, 0xd8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x12aa, gbc.sp());
        EXPECT(0x4b0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0300
        gbc.setState(0x251, 0xe04e, 0xa510, 0xa07, 0xae67, 0xbede, 0x0, 0x1);
        gbc.writeMem(0x251, { 0x26, 0x6e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe04e, gbc.sp());
        EXPECT(0x253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0301
        gbc.setState(0x4eb, 0xf564, 0xf120, 0x7f06, 0xd0b1, 0xd13c, 0x0, 0x0);
        gbc.writeMem(0x4eb, { 0x26, 0x51 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf564, gbc.sp());
        EXPECT(0x4ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0302
        gbc.setState(0xd78, 0xf8b7, 0x7f0, 0x7120, 0x85aa, 0x4145, 0x0, 0x1);
        gbc.writeMem(0xd78, { 0x26, 0x9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf8b7, gbc.sp());
        EXPECT(0xd7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0303
        gbc.setState(0xaae, 0xdbbe, 0x2670, 0xa017, 0x4f9b, 0x1c91, 0x1, 0x1);
        gbc.writeMem(0xaae, { 0x26, 0x12 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdbbe, gbc.sp());
        EXPECT(0xab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0304
        gbc.setState(0x5bac, 0x4eb2, 0x38b0, 0xa15c, 0x28a8, 0xa544, 0x1, 0x1);
        gbc.writeMem(0x5bac, { 0x26, 0x3e });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4eb2, gbc.sp());
        EXPECT(0x5bae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0307
        gbc.setState(0xa3f6, 0x97, 0xba10, 0x53cb, 0x3d34, 0x18d, 0x1, 0x1);
        gbc.writeMem(0xa3f6, { 0x26, 0xea });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x97, gbc.sp());
        EXPECT(0xa3f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa3f6));
        EXPECT(0xea, gbc.readMem(0xa3f7));
        // 26 0308
        gbc.setState(0x5645, 0xf444, 0x5c0, 0x4f63, 0x2f66, 0x5a07, 0x0, 0x1);
        gbc.writeMem(0x5645, { 0x26, 0xf9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf444, gbc.sp());
        EXPECT(0x5647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0309
        gbc.setState(0x49d1, 0x5fe, 0x19d0, 0x6b9b, 0x11a6, 0xb8d3, 0x0, 0x1);
        gbc.writeMem(0x49d1, { 0x26, 0xb8 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5fe, gbc.sp());
        EXPECT(0x49d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 030A
        gbc.setState(0x75f9, 0xe926, 0x690, 0x1cf6, 0x36d4, 0x27b1, 0x0, 0x0);
        gbc.writeMem(0x75f9, { 0x26, 0x14 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe926, gbc.sp());
        EXPECT(0x75fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 030B
        gbc.setState(0x5ff2, 0x4f40, 0x49d0, 0x7458, 0x1a20, 0x4169, 0x1, 0x1);
        gbc.writeMem(0x5ff2, { 0x26, 0x3c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4f40, gbc.sp());
        EXPECT(0x5ff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 030C
        gbc.setState(0x30c, 0x275f, 0xf860, 0x1eee, 0x59cb, 0x28a7, 0x0, 0x0);
        gbc.writeMem(0x30c, { 0x26, 0x32 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x275f, gbc.sp());
        EXPECT(0x30e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 030D
        gbc.setState(0x3cc, 0x6109, 0x3210, 0xf243, 0x32c9, 0x4304, 0x0, 0x0);
        gbc.writeMem(0x3cc, { 0x26, 0xb4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6109, gbc.sp());
        EXPECT(0x3ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 030E
        gbc.setState(0x2d6c, 0xf0df, 0x3ee0, 0x2ec0, 0x4eec, 0x3af2, 0x1, 0x1);
        gbc.writeMem(0x2d6c, { 0x26, 0x21 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf0df, gbc.sp());
        EXPECT(0x2d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 030F
        gbc.setState(0x431d, 0x9b57, 0xa900, 0x8840, 0xa97d, 0xe2d6, 0x0, 0x0);
        gbc.writeMem(0x431d, { 0x26, 0x33 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9b57, gbc.sp());
        EXPECT(0x431f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0310
        gbc.setState(0xede9, 0xdd84, 0x9200, 0x9b80, 0xea96, 0x1f6b, 0x0, 0x1);
        gbc.writeMem(0xede9, { 0x26, 0xb2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xdd84, gbc.sp());
        EXPECT(0xedeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xede9));
        EXPECT(0xb2, gbc.readMem(0xedea));
        // 26 0311
        gbc.setState(0x4bee, 0x7d83, 0x4130, 0x4db1, 0x5e9c, 0xccae, 0x0, 0x0);
        gbc.writeMem(0x4bee, { 0x26, 0x71 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7d83, gbc.sp());
        EXPECT(0x4bf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0312
        gbc.setState(0x87a9, 0x178d, 0x77d0, 0xee6d, 0xba17, 0xaae3, 0x0, 0x1);
        gbc.writeMem(0x87a9, { 0x26, 0x6d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x178d, gbc.sp());
        EXPECT(0x87ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x87a9));
        EXPECT(0x6d, gbc.readMem(0x87aa));
        // 26 0313
        gbc.setState(0x8b54, 0xe9f7, 0xdd80, 0x59fd, 0x6d87, 0x3294, 0x0, 0x1);
        gbc.writeMem(0x8b54, { 0x26, 0xaa });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe9f7, gbc.sp());
        EXPECT(0x8b56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8b54));
        EXPECT(0xaa, gbc.readMem(0x8b55));
        // 26 0314
        gbc.setState(0xd197, 0x26d8, 0x1bd0, 0x5ee7, 0xd10, 0x36fd, 0x1, 0x1);
        gbc.writeMem(0xd197, { 0x26, 0x55 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x26d8, gbc.sp());
        EXPECT(0xd199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd197));
        EXPECT(0x55, gbc.readMem(0xd198));
        // 26 0315
        gbc.setState(0x7e27, 0x19a1, 0xec50, 0xb550, 0x5cc5, 0xbe3c, 0x0, 0x1);
        gbc.writeMem(0x7e27, { 0x26, 0xa5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x19a1, gbc.sp());
        EXPECT(0x7e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0316
        gbc.setState(0x4466, 0xbf18, 0xfe30, 0xc93e, 0xa312, 0x833, 0x0, 0x1);
        gbc.writeMem(0x4466, { 0x26, 0xa8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xbf18, gbc.sp());
        EXPECT(0x4468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0317
        gbc.setState(0x8beb, 0xd7ac, 0x7a90, 0xffef, 0x3808, 0x3f83, 0x1, 0x1);
        gbc.writeMem(0x8beb, { 0x26, 0xba });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd7ac, gbc.sp());
        EXPECT(0x8bed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8beb));
        EXPECT(0xba, gbc.readMem(0x8bec));
        // 26 0318
        gbc.setState(0x4744, 0xcde5, 0x390, 0x7e6, 0xa9a, 0xd63d, 0x1, 0x0);
        gbc.writeMem(0x4744, { 0x26, 0x78 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xcde5, gbc.sp());
        EXPECT(0x4746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0319
        gbc.setState(0x3bbb, 0xc319, 0x3740, 0x9b30, 0x6198, 0x7cd6, 0x1, 0x1);
        gbc.writeMem(0x3bbb, { 0x26, 0x4a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc319, gbc.sp());
        EXPECT(0x3bbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 031A
        gbc.setState(0xd80, 0xf6b4, 0xf570, 0x1de9, 0x467b, 0x59be, 0x1, 0x0);
        gbc.writeMem(0xd80, { 0x26, 0x1f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf6b4, gbc.sp());
        EXPECT(0xd82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 031B
        gbc.setState(0x1db3, 0xb94, 0xb80, 0x3300, 0x5d03, 0x6786, 0x0, 0x1);
        gbc.writeMem(0x1db3, { 0x26, 0xcc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb94, gbc.sp());
        EXPECT(0x1db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 031C
        gbc.setState(0x72f6, 0x2ba4, 0xbc80, 0xc403, 0x3aa3, 0x2934, 0x0, 0x1);
        gbc.writeMem(0x72f6, { 0x26, 0xd9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2ba4, gbc.sp());
        EXPECT(0x72f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 031D
        gbc.setState(0xe42, 0xe985, 0xb680, 0xe1a9, 0x6a6f, 0x4aa9, 0x1, 0x1);
        gbc.writeMem(0xe42, { 0x26, 0xa5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe985, gbc.sp());
        EXPECT(0xe44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 031E
        gbc.setState(0xbd1, 0x3694, 0x5f0, 0x8c87, 0x1314, 0x2f17, 0x1, 0x0);
        gbc.writeMem(0xbd1, { 0x26, 0x76 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3694, gbc.sp());
        EXPECT(0xbd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0320
        gbc.setState(0x7680, 0xd79, 0x3a0, 0xb333, 0x4a82, 0x7882, 0x1, 0x0);
        gbc.writeMem(0x7680, { 0x26, 0xb0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd79, gbc.sp());
        EXPECT(0x7682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0321
        gbc.setState(0xaab9, 0x28b0, 0x7a30, 0x1d21, 0x21cd, 0xbf8f, 0x0, 0x1);
        gbc.writeMem(0xaab9, { 0x26, 0x56 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x28b0, gbc.sp());
        EXPECT(0xaabb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xaab9));
        EXPECT(0x56, gbc.readMem(0xaaba));
        // 26 0322
        gbc.setState(0x8857, 0x705, 0xd9e0, 0xa18b, 0x8dd4, 0xca14, 0x0, 0x0);
        gbc.writeMem(0x8857, { 0x26, 0xb6 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x705, gbc.sp());
        EXPECT(0x8859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8857));
        EXPECT(0xb6, gbc.readMem(0x8858));
        // 26 0323
        gbc.setState(0x92a, 0xce9e, 0x5460, 0x56cc, 0x692d, 0x98d8, 0x0, 0x0);
        gbc.writeMem(0x92a, { 0x26, 0xb9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xce9e, gbc.sp());
        EXPECT(0x92c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0324
        gbc.setState(0xb3cc, 0xf52a, 0x7320, 0xb08f, 0x7365, 0x34c1, 0x1, 0x1);
        gbc.writeMem(0xb3cc, { 0x26, 0xd6 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf52a, gbc.sp());
        EXPECT(0xb3ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb3cc));
        EXPECT(0xd6, gbc.readMem(0xb3cd));
        // 26 0325
        gbc.setState(0xcf29, 0xd869, 0xcf70, 0xba56, 0x9a1b, 0x8150, 0x0, 0x0);
        gbc.writeMem(0xcf29, { 0x26, 0x21 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd869, gbc.sp());
        EXPECT(0xcf2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xcf29));
        EXPECT(0x21, gbc.readMem(0xcf2a));
        // 26 0327
        gbc.setState(0xabc2, 0x38c7, 0x2170, 0x6584, 0x5f2f, 0x1adf, 0x0, 0x1);
        gbc.writeMem(0xabc2, { 0x26, 0x6f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x38c7, gbc.sp());
        EXPECT(0xabc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xabc2));
        EXPECT(0x6f, gbc.readMem(0xabc3));
        // 26 0328
        gbc.setState(0xc231, 0xa72, 0xc4a0, 0x3a44, 0x7612, 0x53fa, 0x0, 0x0);
        gbc.writeMem(0xc231, { 0x26, 0x8c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa72, gbc.sp());
        EXPECT(0xc233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc231));
        EXPECT(0x8c, gbc.readMem(0xc232));
        // 26 0329
        gbc.setState(0x2ace, 0x527b, 0x51d0, 0xe518, 0xf12a, 0x3325, 0x1, 0x1);
        gbc.writeMem(0x2ace, { 0x26, 0xb2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x527b, gbc.sp());
        EXPECT(0x2ad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 032A
        gbc.setState(0x2e04, 0x546b, 0xb7e0, 0x27f1, 0x9882, 0x4459, 0x0, 0x0);
        gbc.writeMem(0x2e04, { 0x26, 0x8a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x546b, gbc.sp());
        EXPECT(0x2e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 032B
        gbc.setState(0x87d0, 0xc170, 0xf790, 0x4043, 0x72cd, 0xbf4f, 0x1, 0x1);
        gbc.writeMem(0x87d0, { 0x26, 0x32 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc170, gbc.sp());
        EXPECT(0x87d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x87d0));
        EXPECT(0x32, gbc.readMem(0x87d1));
        // 26 032C
        gbc.setState(0x4597, 0x19e0, 0x8f90, 0xbfeb, 0x26d7, 0x61a0, 0x0, 0x0);
        gbc.writeMem(0x4597, { 0x26, 0x97 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x19e0, gbc.sp());
        EXPECT(0x4599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 032D
        gbc.setState(0xb412, 0x528, 0x17b0, 0x339c, 0x5342, 0xe0ce, 0x1, 0x1);
        gbc.writeMem(0xb412, { 0x26, 0x92 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x528, gbc.sp());
        EXPECT(0xb414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb412));
        EXPECT(0x92, gbc.readMem(0xb413));
        // 26 032E
        gbc.setState(0x90e8, 0xad6f, 0xc1f0, 0x5dcb, 0x302c, 0xc430, 0x0, 0x1);
        gbc.writeMem(0x90e8, { 0x26, 0xc7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xad6f, gbc.sp());
        EXPECT(0x90ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x90e8));
        EXPECT(0xc7, gbc.readMem(0x90e9));
        // 26 032F
        gbc.setState(0x3bd1, 0x4b1a, 0xd600, 0xf294, 0x1589, 0xfe86, 0x1, 0x0);
        gbc.writeMem(0x3bd1, { 0x26, 0xe });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4b1a, gbc.sp());
        EXPECT(0x3bd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0330
        gbc.setState(0x90e3, 0x5bb9, 0x72e0, 0x55b7, 0xc39a, 0xf1cb, 0x1, 0x1);
        gbc.writeMem(0x90e3, { 0x26, 0x7b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5bb9, gbc.sp());
        EXPECT(0x90e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x90e3));
        EXPECT(0x7b, gbc.readMem(0x90e4));
        // 26 0331
        gbc.setState(0x9f2f, 0xbd1f, 0x5800, 0xdb77, 0xaf32, 0x833d, 0x0, 0x0);
        gbc.writeMem(0x9f2f, { 0x26, 0x71 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbd1f, gbc.sp());
        EXPECT(0x9f31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9f2f));
        EXPECT(0x71, gbc.readMem(0x9f30));
        // 26 0332
        gbc.setState(0x665a, 0x93aa, 0xc660, 0xeb6, 0xcb5f, 0x9ddf, 0x0, 0x1);
        gbc.writeMem(0x665a, { 0x26, 0x92 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x93aa, gbc.sp());
        EXPECT(0x665c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0333
        gbc.setState(0x12e2, 0x2299, 0xa240, 0x7d85, 0xde0, 0x21f9, 0x0, 0x1);
        gbc.writeMem(0x12e2, { 0x26, 0x43 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2299, gbc.sp());
        EXPECT(0x12e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0334
        gbc.setState(0xa828, 0xb0b8, 0xb890, 0xd151, 0x5875, 0x7d6d, 0x1, 0x1);
        gbc.writeMem(0xa828, { 0x26, 0x64 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb0b8, gbc.sp());
        EXPECT(0xa82a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa828));
        EXPECT(0x64, gbc.readMem(0xa829));
        // 26 0335
        gbc.setState(0xdec4, 0x73ca, 0xace0, 0xe0dd, 0x8c04, 0x3c2a, 0x0, 0x0);
        gbc.writeMem(0xdec4, { 0x26, 0xb9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x73ca, gbc.sp());
        EXPECT(0xdec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xdec4));
        EXPECT(0xb9, gbc.readMem(0xdec5));
        // 26 0336
        gbc.setState(0x523b, 0x2761, 0xddf0, 0xd17b, 0x1415, 0x4d91, 0x1, 0x0);
        gbc.writeMem(0x523b, { 0x26, 0xb9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2761, gbc.sp());
        EXPECT(0x523d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0337
        gbc.setState(0x7a63, 0x7035, 0xd5a0, 0xf113, 0x1732, 0x22ae, 0x0, 0x0);
        gbc.writeMem(0x7a63, { 0x26, 0xbe });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7035, gbc.sp());
        EXPECT(0x7a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0338
        gbc.setState(0x90ec, 0x41c2, 0x5830, 0x919e, 0xb78f, 0xa478, 0x1, 0x0);
        gbc.writeMem(0x90ec, { 0x26, 0xca });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x41c2, gbc.sp());
        EXPECT(0x90ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x90ec));
        EXPECT(0xca, gbc.readMem(0x90ed));
        // 26 0339
        gbc.setState(0x97b3, 0x1aeb, 0x7a20, 0x1d38, 0x686, 0xc131, 0x0, 0x1);
        gbc.writeMem(0x97b3, { 0x26, 0x3b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1aeb, gbc.sp());
        EXPECT(0x97b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x97b3));
        EXPECT(0x3b, gbc.readMem(0x97b4));
        // 26 033A
        gbc.setState(0xbe11, 0xf801, 0xc680, 0xf709, 0xca71, 0x489a, 0x1, 0x0);
        gbc.writeMem(0xbe11, { 0x26, 0x71 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf801, gbc.sp());
        EXPECT(0xbe13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbe11));
        EXPECT(0x71, gbc.readMem(0xbe12));
        // 26 033B
        gbc.setState(0xccf, 0x3761, 0xe830, 0xe191, 0xaafa, 0x154a, 0x1, 0x0);
        gbc.writeMem(0xccf, { 0x26, 0xa3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3761, gbc.sp());
        EXPECT(0xcd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 033C
        gbc.setState(0xd540, 0xeb30, 0x33a0, 0x920f, 0xf302, 0xb663, 0x0, 0x0);
        gbc.writeMem(0xd540, { 0x26, 0x7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xeb30, gbc.sp());
        EXPECT(0xd542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd540));
        EXPECT(0x7, gbc.readMem(0xd541));
        // 26 033D
        gbc.setState(0x4d3e, 0x697c, 0xfc80, 0x7a4e, 0x3944, 0xbe2c, 0x0, 0x0);
        gbc.writeMem(0x4d3e, { 0x26, 0x9c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x697c, gbc.sp());
        EXPECT(0x4d40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 033E
        gbc.setState(0x826a, 0xb160, 0x6990, 0xbb45, 0x82a9, 0x5389, 0x0, 0x0);
        gbc.writeMem(0x826a, { 0x26, 0xa9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb160, gbc.sp());
        EXPECT(0x826c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x826a));
        EXPECT(0xa9, gbc.readMem(0x826b));
        // 26 0340
        gbc.setState(0x1a08, 0x74f, 0xae20, 0xf865, 0x749, 0xf7d9, 0x0, 0x0);
        gbc.writeMem(0x1a08, { 0x26, 0x35 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x74f, gbc.sp());
        EXPECT(0x1a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0341
        gbc.setState(0xc74f, 0x2cb7, 0xf840, 0xa5eb, 0x7cf1, 0xba53, 0x0, 0x1);
        gbc.writeMem(0xc74f, { 0x26, 0xb5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2cb7, gbc.sp());
        EXPECT(0xc751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc74f));
        EXPECT(0xb5, gbc.readMem(0xc750));
        // 26 0342
        gbc.setState(0x22ea, 0x3abe, 0xff00, 0x903c, 0xf8b4, 0xf52a, 0x0, 0x0);
        gbc.writeMem(0x22ea, { 0x26, 0x40 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3abe, gbc.sp());
        EXPECT(0x22ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0343
        gbc.setState(0x3d3b, 0x2dd4, 0x89d0, 0x1b2e, 0x953d, 0xf05c, 0x1, 0x1);
        gbc.writeMem(0x3d3b, { 0x26, 0xad });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2dd4, gbc.sp());
        EXPECT(0x3d3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0344
        gbc.setState(0x276, 0x4659, 0xa920, 0x95b1, 0x11e7, 0x7bce, 0x0, 0x1);
        gbc.writeMem(0x276, { 0x26, 0x45 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4659, gbc.sp());
        EXPECT(0x278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0345
        gbc.setState(0xb3a4, 0xac31, 0x7120, 0x5b66, 0x8391, 0xb6d3, 0x0, 0x1);
        gbc.writeMem(0xb3a4, { 0x26, 0xbe });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xac31, gbc.sp());
        EXPECT(0xb3a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb3a4));
        EXPECT(0xbe, gbc.readMem(0xb3a5));
        // 26 0346
        gbc.setState(0x6eaa, 0x851e, 0x9c40, 0x83f8, 0xa61d, 0x3854, 0x1, 0x0);
        gbc.writeMem(0x6eaa, { 0x26, 0xa9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x851e, gbc.sp());
        EXPECT(0x6eac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0347
        gbc.setState(0x470a, 0x77e3, 0xe5f0, 0x3aa5, 0x59c7, 0xda06, 0x0, 0x1);
        gbc.writeMem(0x470a, { 0x26, 0x3d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x77e3, gbc.sp());
        EXPECT(0x470c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0348
        gbc.setState(0x3fa7, 0x7319, 0x5d00, 0xd952, 0x8a38, 0x6339, 0x0, 0x0);
        gbc.writeMem(0x3fa7, { 0x26, 0x7b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7319, gbc.sp());
        EXPECT(0x3fa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0349
        gbc.setState(0x16d6, 0x765f, 0xdbb0, 0x11a2, 0xac7e, 0x781d, 0x0, 0x1);
        gbc.writeMem(0x16d6, { 0x26, 0xb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x765f, gbc.sp());
        EXPECT(0x16d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 034A
        gbc.setState(0x485f, 0xdb8c, 0xc390, 0x6082, 0x73ef, 0x3d08, 0x0, 0x1);
        gbc.writeMem(0x485f, { 0x26, 0xf0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xdb8c, gbc.sp());
        EXPECT(0x4861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 034B
        gbc.setState(0xe1ea, 0xa5a3, 0xbb80, 0xd1ca, 0x1c56, 0xfdb0, 0x1, 0x0);
        gbc.writeMem(0xe1ea, { 0x26, 0xfe });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa5a3, gbc.sp());
        EXPECT(0xe1ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe1ea));
        EXPECT(0xfe, gbc.readMem(0xe1eb));
        // 26 034C
        gbc.setState(0xed27, 0xeb78, 0xb620, 0xbda, 0x2fb3, 0xd6cf, 0x1, 0x1);
        gbc.writeMem(0xed27, { 0x26, 0x38 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xeb78, gbc.sp());
        EXPECT(0xed29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xed27));
        EXPECT(0x38, gbc.readMem(0xed28));
        // 26 034D
        gbc.setState(0x2441, 0x119e, 0x3d70, 0x63ed, 0x7779, 0xa17e, 0x0, 0x1);
        gbc.writeMem(0x2441, { 0x26, 0x5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x119e, gbc.sp());
        EXPECT(0x2443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 034E
        gbc.setState(0x7d29, 0x7e9c, 0x6410, 0x2b22, 0x2776, 0x16b7, 0x0, 0x1);
        gbc.writeMem(0x7d29, { 0x26, 0xd2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7e9c, gbc.sp());
        EXPECT(0x7d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 034F
        gbc.setState(0x8344, 0xbe35, 0x13c0, 0xc217, 0x544d, 0x6902, 0x0, 0x1);
        gbc.writeMem(0x8344, { 0x26, 0x90 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbe35, gbc.sp());
        EXPECT(0x8346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8344));
        EXPECT(0x90, gbc.readMem(0x8345));
        // 26 0350
        gbc.setState(0x2d8, 0x74e2, 0xb2e0, 0xd501, 0x94f3, 0xffee, 0x1, 0x1);
        gbc.writeMem(0x2d8, { 0x26, 0x10 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x74e2, gbc.sp());
        EXPECT(0x2da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0351
        gbc.setState(0x2bd5, 0x44d7, 0xa380, 0x16af, 0x1d57, 0x97ac, 0x0, 0x1);
        gbc.writeMem(0x2bd5, { 0x26, 0xa3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x44d7, gbc.sp());
        EXPECT(0x2bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0352
        gbc.setState(0x786c, 0x5d56, 0x7210, 0x1165, 0xefc1, 0x467b, 0x0, 0x0);
        gbc.writeMem(0x786c, { 0x26, 0xa4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5d56, gbc.sp());
        EXPECT(0x786e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0354
        gbc.setState(0xcd14, 0xbd8b, 0x6500, 0xe9b1, 0xa7fb, 0xf0cd, 0x0, 0x0);
        gbc.writeMem(0xcd14, { 0x26, 0x66 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbd8b, gbc.sp());
        EXPECT(0xcd16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xcd14));
        EXPECT(0x66, gbc.readMem(0xcd15));
        // 26 0355
        gbc.setState(0x4d66, 0x454a, 0xd330, 0xf28a, 0x1585, 0xa32a, 0x1, 0x1);
        gbc.writeMem(0x4d66, { 0x26, 0xf5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x454a, gbc.sp());
        EXPECT(0x4d68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0356
        gbc.setState(0x7d2e, 0xe884, 0xaca0, 0xe9ad, 0x59d9, 0x5fc, 0x0, 0x0);
        gbc.writeMem(0x7d2e, { 0x26, 0xa0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe884, gbc.sp());
        EXPECT(0x7d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0357
        gbc.setState(0x9fab, 0xbd1d, 0xeb40, 0xf435, 0x81f6, 0x3c14, 0x1, 0x0);
        gbc.writeMem(0x9fab, { 0x26, 0x48 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbd1d, gbc.sp());
        EXPECT(0x9fad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9fab));
        EXPECT(0x48, gbc.readMem(0x9fac));
        // 26 0358
        gbc.setState(0x124f, 0x9d2c, 0xb4b0, 0x82f8, 0x23b6, 0x2e6, 0x0, 0x0);
        gbc.writeMem(0x124f, { 0x26, 0x2b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9d2c, gbc.sp());
        EXPECT(0x1251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0359
        gbc.setState(0x37e2, 0x686c, 0x8d70, 0x23b5, 0x5c95, 0xab8c, 0x1, 0x1);
        gbc.writeMem(0x37e2, { 0x26, 0x2c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x686c, gbc.sp());
        EXPECT(0x37e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 035A
        gbc.setState(0x1c59, 0x4838, 0xf920, 0x5076, 0x3edc, 0xf5d4, 0x0, 0x0);
        gbc.writeMem(0x1c59, { 0x26, 0x9e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4838, gbc.sp());
        EXPECT(0x1c5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 035B
        gbc.setState(0xd279, 0x9586, 0x7400, 0x4622, 0xda8c, 0x67dd, 0x1, 0x1);
        gbc.writeMem(0xd279, { 0x26, 0x48 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9586, gbc.sp());
        EXPECT(0xd27b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd279));
        EXPECT(0x48, gbc.readMem(0xd27a));
        // 26 035C
        gbc.setState(0x43d1, 0x9bc, 0x2de0, 0x3c13, 0x4722, 0xdbab, 0x1, 0x1);
        gbc.writeMem(0x43d1, { 0x26, 0x25 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9bc, gbc.sp());
        EXPECT(0x43d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 035E
        gbc.setState(0x1d98, 0x5b5e, 0xd7d0, 0x7669, 0x6a6c, 0xa23c, 0x0, 0x1);
        gbc.writeMem(0x1d98, { 0x26, 0xe4 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5b5e, gbc.sp());
        EXPECT(0x1d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0360
        gbc.setState(0x6ad6, 0x1dd2, 0x2c0, 0x602a, 0x3d9a, 0x5854, 0x1, 0x1);
        gbc.writeMem(0x6ad6, { 0x26, 0xb5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1dd2, gbc.sp());
        EXPECT(0x6ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0361
        gbc.setState(0x8cf, 0x98bf, 0x15d0, 0xe0ac, 0x9dcf, 0xaa3b, 0x1, 0x0);
        gbc.writeMem(0x8cf, { 0x26, 0x51 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x98bf, gbc.sp());
        EXPECT(0x8d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0362
        gbc.setState(0x64de, 0xf03a, 0x3f60, 0x91ed, 0x4f6d, 0x5713, 0x0, 0x1);
        gbc.writeMem(0x64de, { 0x26, 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf03a, gbc.sp());
        EXPECT(0x64e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0363
        gbc.setState(0x3866, 0xfba9, 0x8670, 0x4c78, 0xdbd4, 0xda36, 0x1, 0x1);
        gbc.writeMem(0x3866, { 0x26, 0x91 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfba9, gbc.sp());
        EXPECT(0x3868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0364
        gbc.setState(0x78ca, 0x2e72, 0xb480, 0xe34f, 0x1994, 0x61bb, 0x1, 0x0);
        gbc.writeMem(0x78ca, { 0x26, 0x17 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2e72, gbc.sp());
        EXPECT(0x78cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0365
        gbc.setState(0x8096, 0x6367, 0xbd80, 0xa868, 0xabbc, 0xa35, 0x1, 0x1);
        gbc.writeMem(0x8096, { 0x26, 0x2c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6367, gbc.sp());
        EXPECT(0x8098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8096));
        EXPECT(0x2c, gbc.readMem(0x8097));
        // 26 0367
        gbc.setState(0x4613, 0xf069, 0x1e10, 0xe80c, 0xfaa3, 0xfce, 0x1, 0x0);
        gbc.writeMem(0x4613, { 0x26, 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf069, gbc.sp());
        EXPECT(0x4615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0368
        gbc.setState(0xe973, 0x7903, 0x1360, 0xc65e, 0x404e, 0xbd3d, 0x1, 0x1);
        gbc.writeMem(0xe973, { 0x26, 0x63 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7903, gbc.sp());
        EXPECT(0xe975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe973));
        EXPECT(0x63, gbc.readMem(0xe974));
        // 26 0369
        gbc.setState(0x9592, 0xcfad, 0x6b00, 0x648e, 0x9514, 0xd0bf, 0x0, 0x1);
        gbc.writeMem(0x9592, { 0x26, 0xda });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcfad, gbc.sp());
        EXPECT(0x9594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9592));
        EXPECT(0xda, gbc.readMem(0x9593));
        // 26 036A
        gbc.setState(0xce9e, 0xa6aa, 0x8c60, 0x6ae3, 0xd0ef, 0xa3a1, 0x0, 0x1);
        gbc.writeMem(0xce9e, { 0x26, 0x7e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa6aa, gbc.sp());
        EXPECT(0xcea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xce9e));
        EXPECT(0x7e, gbc.readMem(0xce9f));
        // 26 036B
        gbc.setState(0xe260, 0xa94f, 0xc3c0, 0x2e61, 0x2361, 0xd3f6, 0x0, 0x0);
        gbc.writeMem(0xe260, { 0x26, 0x46 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa94f, gbc.sp());
        EXPECT(0xe262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe260));
        EXPECT(0x46, gbc.readMem(0xe261));
        // 26 036C
        gbc.setState(0x5819, 0x348e, 0xfce0, 0x7d35, 0x5ca1, 0xa512, 0x0, 0x1);
        gbc.writeMem(0x5819, { 0x26, 0x7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x348e, gbc.sp());
        EXPECT(0x581b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 036D
        gbc.setState(0xbc17, 0xfef5, 0x5950, 0x794f, 0x4f27, 0x9c65, 0x1, 0x1);
        gbc.writeMem(0xbc17, { 0x26, 0x8b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfef5, gbc.sp());
        EXPECT(0xbc19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbc17));
        EXPECT(0x8b, gbc.readMem(0xbc18));
        // 26 036E
        gbc.setState(0x36ab, 0x814e, 0xbe60, 0x3f39, 0x624a, 0x7e75, 0x0, 0x0);
        gbc.writeMem(0x36ab, { 0x26, 0x94 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x814e, gbc.sp());
        EXPECT(0x36ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0370
        gbc.setState(0x625f, 0xf7e3, 0x1f0, 0x5568, 0x971, 0xe9d8, 0x1, 0x1);
        gbc.writeMem(0x625f, { 0x26, 0xdf });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf7e3, gbc.sp());
        EXPECT(0x6261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0371
        gbc.setState(0x1d7c, 0x94ff, 0x75d0, 0x6a0f, 0xfe04, 0xa0f4, 0x1, 0x0);
        gbc.writeMem(0x1d7c, { 0x26, 0xc0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x94ff, gbc.sp());
        EXPECT(0x1d7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0372
        gbc.setState(0xcb70, 0xc8, 0x420, 0xa95a, 0x761d, 0xa950, 0x1, 0x1);
        gbc.writeMem(0xcb70, { 0x26, 0x5c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc8, gbc.sp());
        EXPECT(0xcb72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xcb70));
        EXPECT(0x5c, gbc.readMem(0xcb71));
        // 26 0373
        gbc.setState(0x3136, 0x2ac2, 0x5080, 0x957e, 0xdc86, 0x44fd, 0x1, 0x1);
        gbc.writeMem(0x3136, { 0x26, 0x65 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2ac2, gbc.sp());
        EXPECT(0x3138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0374
        gbc.setState(0xa6c8, 0xb3bf, 0x41a0, 0xc828, 0x6d7f, 0x566a, 0x0, 0x1);
        gbc.writeMem(0xa6c8, { 0x26, 0x29 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb3bf, gbc.sp());
        EXPECT(0xa6ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa6c8));
        EXPECT(0x29, gbc.readMem(0xa6c9));
        // 26 0375
        gbc.setState(0x9bd7, 0xcb64, 0xc540, 0xa39, 0xaa87, 0x82ec, 0x1, 0x0);
        gbc.writeMem(0x9bd7, { 0x26, 0xe1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xcb64, gbc.sp());
        EXPECT(0x9bd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9bd7));
        EXPECT(0xe1, gbc.readMem(0x9bd8));
        // 26 0376
        gbc.setState(0xb58, 0x9566, 0x2f30, 0xce61, 0x9f98, 0x581e, 0x1, 0x0);
        gbc.writeMem(0xb58, { 0x26, 0x3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9566, gbc.sp());
        EXPECT(0xb5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0377
        gbc.setState(0xb237, 0x7ec0, 0xdf40, 0x7dd7, 0xd479, 0x939b, 0x0, 0x0);
        gbc.writeMem(0xb237, { 0x26, 0x84 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7ec0, gbc.sp());
        EXPECT(0xb239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb237));
        EXPECT(0x84, gbc.readMem(0xb238));
        // 26 0378
        gbc.setState(0x60a4, 0x6b83, 0xa620, 0xd485, 0xb2a1, 0xce90, 0x0, 0x0);
        gbc.writeMem(0x60a4, { 0x26, 0x4d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6b83, gbc.sp());
        EXPECT(0x60a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0379
        gbc.setState(0xd6c8, 0x6389, 0xdb60, 0x5b34, 0xef68, 0xa25e, 0x1, 0x1);
        gbc.writeMem(0xd6c8, { 0x26, 0xa7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6389, gbc.sp());
        EXPECT(0xd6ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd6c8));
        EXPECT(0xa7, gbc.readMem(0xd6c9));
        // 26 037A
        gbc.setState(0xe6f2, 0xf16, 0x3010, 0x8c68, 0x2352, 0xd880, 0x0, 0x0);
        gbc.writeMem(0xe6f2, { 0x26, 0xf7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf16, gbc.sp());
        EXPECT(0xe6f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe6f2));
        EXPECT(0xf7, gbc.readMem(0xe6f3));
        // 26 037B
        gbc.setState(0xcae1, 0xcc61, 0x8ce0, 0xa854, 0xf507, 0xcfb1, 0x0, 0x1);
        gbc.writeMem(0xcae1, { 0x26, 0xcf });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcc61, gbc.sp());
        EXPECT(0xcae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xcae1));
        EXPECT(0xcf, gbc.readMem(0xcae2));
        // 26 037C
        gbc.setState(0x14ab, 0xf51d, 0x5c80, 0x8bb4, 0x869d, 0x26c0, 0x0, 0x0);
        gbc.writeMem(0x14ab, { 0x26, 0x49 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf51d, gbc.sp());
        EXPECT(0x14ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 037D
        gbc.setState(0x8ea6, 0x9a9b, 0xfe30, 0x9a25, 0x498e, 0x6bb2, 0x0, 0x1);
        gbc.writeMem(0x8ea6, { 0x26, 0xfb });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9a9b, gbc.sp());
        EXPECT(0x8ea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8ea6));
        EXPECT(0xfb, gbc.readMem(0x8ea7));
        // 26 037E
        gbc.setState(0x4218, 0xf67c, 0x1710, 0x9a21, 0x7de0, 0xe0d8, 0x0, 0x0);
        gbc.writeMem(0x4218, { 0x26, 0x57 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf67c, gbc.sp());
        EXPECT(0x421a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 037F
        gbc.setState(0x1630, 0x6269, 0xc830, 0xead4, 0x9d9, 0x5d65, 0x0, 0x0);
        gbc.writeMem(0x1630, { 0x26, 0x4d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6269, gbc.sp());
        EXPECT(0x1632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0380
        gbc.setState(0x472b, 0x9362, 0x4590, 0x1d17, 0xfd68, 0x37c4, 0x1, 0x0);
        gbc.writeMem(0x472b, { 0x26, 0xed });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9362, gbc.sp());
        EXPECT(0x472d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0381
        gbc.setState(0xa01, 0xaa0d, 0xdac0, 0xebef, 0x846b, 0x7549, 0x1, 0x1);
        gbc.writeMem(0xa01, { 0x26, 0xef });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xaa0d, gbc.sp());
        EXPECT(0xa03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0382
        gbc.setState(0xde4d, 0x6ca3, 0x8db0, 0x9d8c, 0xaada, 0x8447, 0x1, 0x0);
        gbc.writeMem(0xde4d, { 0x26, 0x49 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6ca3, gbc.sp());
        EXPECT(0xde4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xde4d));
        EXPECT(0x49, gbc.readMem(0xde4e));
        // 26 0383
        gbc.setState(0x3c78, 0xf04d, 0x9350, 0x6dd4, 0x1a0, 0x4755, 0x1, 0x1);
        gbc.writeMem(0x3c78, { 0x26, 0xd2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf04d, gbc.sp());
        EXPECT(0x3c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0384
        gbc.setState(0x6e27, 0x59ff, 0x5610, 0xac06, 0x14ef, 0x6b76, 0x0, 0x1);
        gbc.writeMem(0x6e27, { 0x26, 0xf });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x59ff, gbc.sp());
        EXPECT(0x6e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0385
        gbc.setState(0x9932, 0x85d6, 0x9660, 0x1ac7, 0xf4c3, 0x9093, 0x0, 0x1);
        gbc.writeMem(0x9932, { 0x26, 0xd3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x85d6, gbc.sp());
        EXPECT(0x9934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9932));
        EXPECT(0xd3, gbc.readMem(0x9933));
        // 26 0386
        gbc.setState(0x1e69, 0xc6f3, 0xf680, 0x4647, 0xdb2b, 0x37f2, 0x0, 0x0);
        gbc.writeMem(0x1e69, { 0x26, 0xeb });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc6f3, gbc.sp());
        EXPECT(0x1e6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0387
        gbc.setState(0x80d4, 0x4cce, 0x7aa0, 0xdde8, 0x43cf, 0x3ecf, 0x1, 0x0);
        gbc.writeMem(0x80d4, { 0x26, 0x4c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4cce, gbc.sp());
        EXPECT(0x80d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x80d4));
        EXPECT(0x4c, gbc.readMem(0x80d5));
        // 26 0389
        gbc.setState(0x3a33, 0x5d1, 0xd850, 0xa1cd, 0x80e4, 0x658b, 0x1, 0x1);
        gbc.writeMem(0x3a33, { 0x26, 0xb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5d1, gbc.sp());
        EXPECT(0x3a35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 038A
        gbc.setState(0x3b59, 0x36b2, 0xa550, 0xf0f5, 0x8d53, 0x4dac, 0x1, 0x1);
        gbc.writeMem(0x3b59, { 0x26, 0x68 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x36b2, gbc.sp());
        EXPECT(0x3b5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 038B
        gbc.setState(0x27f8, 0x4736, 0xa8a0, 0xd951, 0xc345, 0x5c49, 0x1, 0x0);
        gbc.writeMem(0x27f8, { 0x26, 0xfe });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4736, gbc.sp());
        EXPECT(0x27fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 038C
        gbc.setState(0xb335, 0x529, 0x1c80, 0x3cac, 0x4fb6, 0x9063, 0x0, 0x1);
        gbc.writeMem(0xb335, { 0x26, 0x7f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x529, gbc.sp());
        EXPECT(0xb337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb335));
        EXPECT(0x7f, gbc.readMem(0xb336));
        // 26 038E
        gbc.setState(0x53e3, 0x29c4, 0x9760, 0x499a, 0x799a, 0x7f83, 0x1, 0x1);
        gbc.writeMem(0x53e3, { 0x26, 0x40 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x29c4, gbc.sp());
        EXPECT(0x53e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0390
        gbc.setState(0x2d65, 0x331c, 0x3a30, 0x713b, 0x5b5, 0x6a62, 0x1, 0x0);
        gbc.writeMem(0x2d65, { 0x26, 0x2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x331c, gbc.sp());
        EXPECT(0x2d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0391
        gbc.setState(0xaab0, 0x7b9f, 0xe360, 0xb7be, 0x4fd6, 0x6599, 0x0, 0x1);
        gbc.writeMem(0xaab0, { 0x26, 0xb6 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7b9f, gbc.sp());
        EXPECT(0xaab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xaab0));
        EXPECT(0xb6, gbc.readMem(0xaab1));
        // 26 0393
        gbc.setState(0x12a5, 0x2b47, 0x8eb0, 0x831f, 0xfd37, 0x255, 0x1, 0x0);
        gbc.writeMem(0x12a5, { 0x26, 0x88 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2b47, gbc.sp());
        EXPECT(0x12a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0394
        gbc.setState(0x1369, 0x660c, 0xa0c0, 0xf358, 0x2387, 0xab5e, 0x0, 0x0);
        gbc.writeMem(0x1369, { 0x26, 0x67 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x660c, gbc.sp());
        EXPECT(0x136b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0395
        gbc.setState(0x4f2d, 0xda03, 0xa130, 0xb491, 0x8539, 0x1185, 0x0, 0x1);
        gbc.writeMem(0x4f2d, { 0x26, 0xde });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xda03, gbc.sp());
        EXPECT(0x4f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 0396
        gbc.setState(0x8faa, 0x8067, 0x5170, 0xd641, 0xbd7d, 0x2644, 0x0, 0x1);
        gbc.writeMem(0x8faa, { 0x26, 0x72 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8067, gbc.sp());
        EXPECT(0x8fac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8faa));
        EXPECT(0x72, gbc.readMem(0x8fab));
        // 26 0397
        gbc.setState(0x2ea5, 0x40b5, 0xadc0, 0xfaa5, 0x39f, 0xd5a4, 0x0, 0x0);
        gbc.writeMem(0x2ea5, { 0x26, 0x14 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x40b5, gbc.sp());
        EXPECT(0x2ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0398
        gbc.setState(0x582c, 0x2e59, 0x100, 0xf1e8, 0x2133, 0x6caf, 0x0, 0x1);
        gbc.writeMem(0x582c, { 0x26, 0xc0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2e59, gbc.sp());
        EXPECT(0x582e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 0399
        gbc.setState(0xb538, 0xf32c, 0x8050, 0x2caa, 0x1c6e, 0xa44d, 0x0, 0x0);
        gbc.writeMem(0xb538, { 0x26, 0x14 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf32c, gbc.sp());
        EXPECT(0xb53a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb538));
        EXPECT(0x14, gbc.readMem(0xb539));
        // 26 039A
        gbc.setState(0x9a8b, 0x4981, 0xeff0, 0xe50f, 0x9a1b, 0x74f3, 0x1, 0x1);
        gbc.writeMem(0x9a8b, { 0x26, 0xa });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4981, gbc.sp());
        EXPECT(0x9a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9a8b));
        EXPECT(0xa, gbc.readMem(0x9a8c));
        // 26 039B
        gbc.setState(0xa107, 0xd725, 0x6610, 0xac02, 0xd85a, 0x6a41, 0x1, 0x1);
        gbc.writeMem(0xa107, { 0x26, 0x2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd725, gbc.sp());
        EXPECT(0xa109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa107));
        EXPECT(0x2, gbc.readMem(0xa108));
        // 26 039C
        gbc.setState(0xe67, 0xf110, 0x8b80, 0x2748, 0xb300, 0x9f65, 0x0, 0x0);
        gbc.writeMem(0xe67, { 0x26, 0x5a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf110, gbc.sp());
        EXPECT(0xe69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 039D
        gbc.setState(0xa29d, 0x136f, 0x980, 0x8617, 0xf9d9, 0x5e38, 0x1, 0x1);
        gbc.writeMem(0xa29d, { 0x26, 0xe4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x136f, gbc.sp());
        EXPECT(0xa29f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa29d));
        EXPECT(0xe4, gbc.readMem(0xa29e));
        // 26 039E
        gbc.setState(0x3aa4, 0x70b, 0x82d0, 0xdd7a, 0xbd02, 0xbaf8, 0x0, 0x0);
        gbc.writeMem(0x3aa4, { 0x26, 0x53 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x70b, gbc.sp());
        EXPECT(0x3aa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 039F
        gbc.setState(0x5418, 0xa094, 0xe6e0, 0xcf9b, 0xec7a, 0x83b1, 0x0, 0x0);
        gbc.writeMem(0x5418, { 0x26, 0xb9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa094, gbc.sp());
        EXPECT(0x541a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 03A0
        gbc.setState(0xbec6, 0x6e3c, 0x5580, 0x20f4, 0x70d8, 0x9d42, 0x0, 0x0);
        gbc.writeMem(0xbec6, { 0x26, 0xb6 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6e3c, gbc.sp());
        EXPECT(0xbec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbec6));
        EXPECT(0xb6, gbc.readMem(0xbec7));
        // 26 03A1
        gbc.setState(0x88f0, 0xcc36, 0x1d10, 0x48b1, 0xb3f9, 0x6904, 0x1, 0x1);
        gbc.writeMem(0x88f0, { 0x26, 0x73 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xcc36, gbc.sp());
        EXPECT(0x88f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x88f0));
        EXPECT(0x73, gbc.readMem(0x88f1));
        // 26 03A2
        gbc.setState(0x2749, 0xfd31, 0x73e0, 0x6276, 0xcf5f, 0xb06f, 0x0, 0x0);
        gbc.writeMem(0x2749, { 0x26, 0x89 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xfd31, gbc.sp());
        EXPECT(0x274b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 03A4
        gbc.setState(0x7fe5, 0x5906, 0x95d0, 0xddba, 0xf54e, 0xb0c0, 0x1, 0x1);
        gbc.writeMem(0x7fe5, { 0x26, 0x61 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5906, gbc.sp());
        EXPECT(0x7fe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 03A5
        gbc.setState(0xbd5b, 0x44b8, 0x7280, 0xd958, 0x9354, 0x403e, 0x1, 0x1);
        gbc.writeMem(0xbd5b, { 0x26, 0x82 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x44b8, gbc.sp());
        EXPECT(0xbd5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbd5b));
        EXPECT(0x82, gbc.readMem(0xbd5c));
        // 26 03A6
        gbc.setState(0x1f71, 0x2ff9, 0x3a10, 0x1043, 0x941f, 0x5a50, 0x1, 0x0);
        gbc.writeMem(0x1f71, { 0x26, 0x65 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2ff9, gbc.sp());
        EXPECT(0x1f73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 03A7
        gbc.setState(0x55b3, 0x10af, 0x1c00, 0x2455, 0x8a0a, 0x94e4, 0x0, 0x0);
        gbc.writeMem(0x55b3, { 0x26, 0x31 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x10af, gbc.sp());
        EXPECT(0x55b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 03A8
        gbc.setState(0xd59b, 0xb810, 0x1aa0, 0x8fa7, 0x88cb, 0x842e, 0x0, 0x1);
        gbc.writeMem(0xd59b, { 0x26, 0x19 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb810, gbc.sp());
        EXPECT(0xd59d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd59b));
        EXPECT(0x19, gbc.readMem(0xd59c));
        // 26 03A9
        gbc.setState(0x5746, 0xe9e9, 0x76c0, 0xd421, 0x16fd, 0x69e3, 0x0, 0x0);
        gbc.writeMem(0x5746, { 0x26, 0x10 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe9e9, gbc.sp());
        EXPECT(0x5748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 03AA
        gbc.setState(0xc8d5, 0x8216, 0x710, 0x5f5f, 0x1fba, 0x1511, 0x0, 0x1);
        gbc.writeMem(0xc8d5, { 0x26, 0x24 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8216, gbc.sp());
        EXPECT(0xc8d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc8d5));
        EXPECT(0x24, gbc.readMem(0xc8d6));
        // 26 03AB
        gbc.setState(0x1d06, 0x6058, 0x9fa0, 0xf80f, 0xdc72, 0xe118, 0x1, 0x1);
        gbc.writeMem(0x1d06, { 0x26, 0xc9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6058, gbc.sp());
        EXPECT(0x1d08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 03AC
        gbc.setState(0x9c8f, 0xd80, 0xcb20, 0x3245, 0x43, 0x17f6, 0x0, 0x0);
        gbc.writeMem(0x9c8f, { 0x26, 0x78 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd80, gbc.sp());
        EXPECT(0x9c91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9c8f));
        EXPECT(0x78, gbc.readMem(0x9c90));
        // 26 03AE
        gbc.setState(0x3f2b, 0x2722, 0xe840, 0x7437, 0x7ae5, 0xaedd, 0x1, 0x1);
        gbc.writeMem(0x3f2b, { 0x26, 0xa4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2722, gbc.sp());
        EXPECT(0x3f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 03AF
        gbc.setState(0x909f, 0x2847, 0xef90, 0x892b, 0xa4c9, 0xd340, 0x0, 0x1);
        gbc.writeMem(0x909f, { 0x26, 0x28 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2847, gbc.sp());
        EXPECT(0x90a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x909f));
        EXPECT(0x28, gbc.readMem(0x90a0));
        // 26 03B0
        gbc.setState(0x1d24, 0x2c22, 0xc070, 0x768e, 0x8508, 0x9c3c, 0x1, 0x1);
        gbc.writeMem(0x1d24, { 0x26, 0xf8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2c22, gbc.sp());
        EXPECT(0x1d26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 03B1
        gbc.setState(0x8458, 0x4dff, 0x20a0, 0x4102, 0x29cc, 0x2a9e, 0x1, 0x0);
        gbc.writeMem(0x8458, { 0x26, 0x37 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4dff, gbc.sp());
        EXPECT(0x845a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8458));
        EXPECT(0x37, gbc.readMem(0x8459));
        // 26 03B2
        gbc.setState(0x12fa, 0xfce0, 0x750, 0xe63e, 0x1777, 0x3313, 0x1, 0x0);
        gbc.writeMem(0x12fa, { 0x26, 0xcd });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfce0, gbc.sp());
        EXPECT(0x12fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 03B3
        gbc.setState(0x5e47, 0x1acd, 0xcf90, 0x3ce8, 0x678b, 0x7012, 0x1, 0x0);
        gbc.writeMem(0x5e47, { 0x26, 0x24 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1acd, gbc.sp());
        EXPECT(0x5e49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 03B4
        gbc.setState(0x6ff8, 0x57f0, 0x9650, 0x18a0, 0x4de7, 0xa239, 0x1, 0x0);
        gbc.writeMem(0x6ff8, { 0x26, 0x11 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x57f0, gbc.sp());
        EXPECT(0x6ffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 03B5
        gbc.setState(0x99df, 0x14b8, 0xb310, 0xf03d, 0xb4c5, 0x3b00, 0x1, 0x1);
        gbc.writeMem(0x99df, { 0x26, 0x3a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x14b8, gbc.sp());
        EXPECT(0x99e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x99df));
        EXPECT(0x3a, gbc.readMem(0x99e0));
        // 26 03B6
        gbc.setState(0xee48, 0x3dc, 0xc980, 0x4095, 0xdb66, 0xba6c, 0x1, 0x1);
        gbc.writeMem(0xee48, { 0x26, 0x3c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3dc, gbc.sp());
        EXPECT(0xee4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xee48));
        EXPECT(0x3c, gbc.readMem(0xee49));
        // 26 03B7
        gbc.setState(0x2929, 0x19b9, 0x4900, 0x6961, 0xe675, 0x52cd, 0x1, 0x1);
        gbc.writeMem(0x2929, { 0x26, 0x36 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x19b9, gbc.sp());
        EXPECT(0x292b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 03B8
        gbc.setState(0x7450, 0xf31b, 0x37b0, 0x2f10, 0xf401, 0xaa5c, 0x0, 0x0);
        gbc.writeMem(0x7450, { 0x26, 0xfd });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf31b, gbc.sp());
        EXPECT(0x7452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 03B9
        gbc.setState(0x7fbf, 0x19b, 0xcb30, 0xbf7f, 0x85de, 0xe2d5, 0x0, 0x0);
        gbc.writeMem(0x7fbf, { 0x26, 0x2a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x19b, gbc.sp());
        EXPECT(0x7fc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 03BA
        gbc.setState(0x3199, 0x6842, 0x5cc0, 0x6799, 0xafff, 0xc0ef, 0x1, 0x0);
        gbc.writeMem(0x3199, { 0x26, 0xa3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6842, gbc.sp());
        EXPECT(0x319b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 03BB
        gbc.setState(0x29d4, 0xc6fa, 0x5ae0, 0x6af0, 0x3381, 0x3c34, 0x1, 0x0);
        gbc.writeMem(0x29d4, { 0x26, 0x6 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc6fa, gbc.sp());
        EXPECT(0x29d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 03BC
        gbc.setState(0x3c7c, 0x3a3b, 0xd970, 0xbeff, 0xba4b, 0xb082, 0x0, 0x1);
        gbc.writeMem(0x3c7c, { 0x26, 0x3c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3a3b, gbc.sp());
        EXPECT(0x3c7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 03BE
        gbc.setState(0xbe6a, 0x8236, 0xef80, 0x1082, 0xc205, 0xc2fe, 0x0, 0x1);
        gbc.writeMem(0xbe6a, { 0x26, 0x73 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8236, gbc.sp());
        EXPECT(0xbe6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbe6a));
        EXPECT(0x73, gbc.readMem(0xbe6b));
        // 26 03BF
        gbc.setState(0xb9e9, 0x877e, 0x74d0, 0xbe29, 0xbb94, 0xb38e, 0x0, 0x0);
        gbc.writeMem(0xb9e9, { 0x26, 0xda });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x877e, gbc.sp());
        EXPECT(0xb9eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb9e9));
        EXPECT(0xda, gbc.readMem(0xb9ea));
        // 26 03C0
        gbc.setState(0x4a74, 0xdb24, 0x7a60, 0x53fc, 0x4cd8, 0x7a03, 0x1, 0x0);
        gbc.writeMem(0x4a74, { 0x26, 0x76 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdb24, gbc.sp());
        EXPECT(0x4a76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 03C1
        gbc.setState(0xa5f, 0x8482, 0xcf00, 0x1bd6, 0x1848, 0x92c5, 0x0, 0x1);
        gbc.writeMem(0xa5f, { 0x26, 0x23 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8482, gbc.sp());
        EXPECT(0xa61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 03C2
        gbc.setState(0xe894, 0x551c, 0x760, 0x3ba5, 0x57ad, 0x41c7, 0x0, 0x1);
        gbc.writeMem(0xe894, { 0x26, 0xbe });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x551c, gbc.sp());
        EXPECT(0xe896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe894));
        EXPECT(0xbe, gbc.readMem(0xe895));
        // 26 03C3
        gbc.setState(0x2cd5, 0xfe85, 0xe90, 0x1126, 0x2af2, 0x982f, 0x0, 0x1);
        gbc.writeMem(0x2cd5, { 0x26, 0x86 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfe85, gbc.sp());
        EXPECT(0x2cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 03C4
        gbc.setState(0xccfa, 0x2397, 0xaa50, 0xa7bb, 0x12a3, 0x5c06, 0x1, 0x0);
        gbc.writeMem(0xccfa, { 0x26, 0x31 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2397, gbc.sp());
        EXPECT(0xccfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xccfa));
        EXPECT(0x31, gbc.readMem(0xccfb));
        // 26 03C5
        gbc.setState(0x2347, 0xde8, 0x7fa0, 0xdf99, 0x5e2d, 0x50ca, 0x1, 0x0);
        gbc.writeMem(0x2347, { 0x26, 0xe1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xde8, gbc.sp());
        EXPECT(0x2349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 03C6
        gbc.setState(0x5e1f, 0x34bc, 0xcaa0, 0x2c8c, 0x327d, 0xa0a5, 0x1, 0x1);
        gbc.writeMem(0x5e1f, { 0x26, 0x84 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x34bc, gbc.sp());
        EXPECT(0x5e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 03C7
        gbc.setState(0xec96, 0xda5d, 0x8b70, 0xa0a9, 0x6bc2, 0x1f2b, 0x1, 0x0);
        gbc.writeMem(0xec96, { 0x26, 0x67 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xda5d, gbc.sp());
        EXPECT(0xec98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xec96));
        EXPECT(0x67, gbc.readMem(0xec97));
        // 26 03C8
        gbc.setState(0x9eac, 0x11c7, 0x7390, 0x78b5, 0x1e9f, 0xb853, 0x0, 0x0);
        gbc.writeMem(0x9eac, { 0x26, 0x5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x11c7, gbc.sp());
        EXPECT(0x9eae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9eac));
        EXPECT(0x5, gbc.readMem(0x9ead));
        // 26 03C9
        gbc.setState(0x588c, 0x2ef5, 0x8e00, 0xa1d, 0xe2c5, 0x2dd4, 0x0, 0x1);
        gbc.writeMem(0x588c, { 0x26, 0x1e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2ef5, gbc.sp());
        EXPECT(0x588e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 03CA
        gbc.setState(0xd7a, 0xa2b7, 0x1450, 0x1d2d, 0xa34c, 0x4110, 0x1, 0x1);
        gbc.writeMem(0xd7a, { 0x26, 0x94 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa2b7, gbc.sp());
        EXPECT(0xd7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 03CB
        gbc.setState(0xaeea, 0xe601, 0x43f0, 0xc581, 0x7e1, 0x3363, 0x0, 0x0);
        gbc.writeMem(0xaeea, { 0x26, 0x16 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe601, gbc.sp());
        EXPECT(0xaeec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xaeea));
        EXPECT(0x16, gbc.readMem(0xaeeb));
        // 26 03CC
        gbc.setState(0xdc4e, 0xea8, 0xc230, 0x9846, 0xf1cc, 0xe5a, 0x0, 0x0);
        gbc.writeMem(0xdc4e, { 0x26, 0x5a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xea8, gbc.sp());
        EXPECT(0xdc50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xdc4e));
        EXPECT(0x5a, gbc.readMem(0xdc4f));
        // 26 03CE
        gbc.setState(0xa4c1, 0x49f7, 0xd530, 0xd4da, 0x3a11, 0xf61, 0x1, 0x1);
        gbc.writeMem(0xa4c1, { 0x26, 0xe5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x49f7, gbc.sp());
        EXPECT(0xa4c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa4c1));
        EXPECT(0xe5, gbc.readMem(0xa4c2));
        // 26 03CF
        gbc.setState(0x7941, 0xe46e, 0x4a40, 0xb21, 0xd482, 0x47f, 0x0, 0x0);
        gbc.writeMem(0x7941, { 0x26, 0x27 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe46e, gbc.sp());
        EXPECT(0x7943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 03D2
        gbc.setState(0x4718, 0x8e75, 0x9490, 0x5928, 0xd225, 0x208, 0x0, 0x1);
        gbc.writeMem(0x4718, { 0x26, 0xbb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8e75, gbc.sp());
        EXPECT(0x471a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 03D3
        gbc.setState(0x1a1a, 0x61f9, 0x7d60, 0xad7a, 0x66a1, 0xe61b, 0x0, 0x1);
        gbc.writeMem(0x1a1a, { 0x26, 0x7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x61f9, gbc.sp());
        EXPECT(0x1a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 03D4
        gbc.setState(0xd64, 0xb6c0, 0x49a0, 0xeb1f, 0x1541, 0xcf33, 0x1, 0x0);
        gbc.writeMem(0xd64, { 0x26, 0x4b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb6c0, gbc.sp());
        EXPECT(0xd66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 03D5
        gbc.setState(0xa79e, 0xaeee, 0x5900, 0x2c5, 0x2155, 0x3e31, 0x0, 0x0);
        gbc.writeMem(0xa79e, { 0x26, 0x86 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xaeee, gbc.sp());
        EXPECT(0xa7a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa79e));
        EXPECT(0x86, gbc.readMem(0xa79f));
        // 26 03D6
        gbc.setState(0x9fb8, 0x3e3c, 0x3780, 0xff67, 0x25b3, 0xdf55, 0x0, 0x1);
        gbc.writeMem(0x9fb8, { 0x26, 0xbe });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3e3c, gbc.sp());
        EXPECT(0x9fba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9fb8));
        EXPECT(0xbe, gbc.readMem(0x9fb9));
        // 26 03D7
        gbc.setState(0xad32, 0x6853, 0xb420, 0x2974, 0xb576, 0x32b6, 0x0, 0x1);
        gbc.writeMem(0xad32, { 0x26, 0xe });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6853, gbc.sp());
        EXPECT(0xad34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xad32));
        EXPECT(0xe, gbc.readMem(0xad33));
        // 26 03D8
        gbc.setState(0x5d1c, 0xadc4, 0xc7b0, 0xad71, 0xced7, 0xb4d6, 0x0, 0x1);
        gbc.writeMem(0x5d1c, { 0x26, 0xcf });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xadc4, gbc.sp());
        EXPECT(0x5d1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 03D9
        gbc.setState(0x6e08, 0xabf6, 0x2ff0, 0xadc5, 0x3482, 0x770, 0x0, 0x0);
        gbc.writeMem(0x6e08, { 0x26, 0xc });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xabf6, gbc.sp());
        EXPECT(0x6e0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 03DA
        gbc.setState(0xd718, 0xf203, 0x77f0, 0x2af8, 0xfa51, 0x3717, 0x1, 0x0);
        gbc.writeMem(0xd718, { 0x26, 0x1b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf203, gbc.sp());
        EXPECT(0xd71a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd718));
        EXPECT(0x1b, gbc.readMem(0xd719));
        // 26 03DB
        gbc.setState(0xae35, 0x1ff2, 0xee90, 0xa9c, 0xd84c, 0x663d, 0x0, 0x0);
        gbc.writeMem(0xae35, { 0x26, 0x32 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1ff2, gbc.sp());
        EXPECT(0xae37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xae35));
        EXPECT(0x32, gbc.readMem(0xae36));
        // 26 03DD
        gbc.setState(0x2eed, 0x9a26, 0xcfd0, 0x9638, 0x4ce8, 0xea00, 0x1, 0x0);
        gbc.writeMem(0x2eed, { 0x26, 0xf6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9a26, gbc.sp());
        EXPECT(0x2eef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 03DE
        gbc.setState(0xe4b6, 0x7f79, 0xa820, 0x8b6e, 0xc298, 0xedca, 0x0, 0x1);
        gbc.writeMem(0xe4b6, { 0x26, 0x46 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7f79, gbc.sp());
        EXPECT(0xe4b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe4b6));
        EXPECT(0x46, gbc.readMem(0xe4b7));
        // 26 03DF
        gbc.setState(0x2c01, 0x167c, 0x4070, 0xc68a, 0xd0b9, 0xa92c, 0x0, 0x1);
        gbc.writeMem(0x2c01, { 0x26, 0x7a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x167c, gbc.sp());
        EXPECT(0x2c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 03E0
        gbc.setState(0xcfe2, 0x1a1c, 0xfff0, 0xe2b4, 0xc589, 0x8b80, 0x0, 0x0);
        gbc.writeMem(0xcfe2, { 0x26, 0xfa });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1a1c, gbc.sp());
        EXPECT(0xcfe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xcfe2));
        EXPECT(0xfa, gbc.readMem(0xcfe3));
        // 26 03E1
        gbc.setState(0x2efe, 0xe702, 0xf260, 0xf3f7, 0x9d5f, 0x4c6c, 0x1, 0x1);
        gbc.writeMem(0x2efe, { 0x26, 0x39 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe702, gbc.sp());
        EXPECT(0x2f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 03E2
        gbc.setState(0x5471, 0x87e4, 0xdb40, 0x4f21, 0x9d4b, 0x3fff, 0x0, 0x1);
        gbc.writeMem(0x5471, { 0x26, 0x9f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x87e4, gbc.sp());
        EXPECT(0x5473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 03E3
        gbc.setState(0x79c5, 0x9186, 0x2a80, 0x7eb1, 0xc490, 0x90a3, 0x1, 0x1);
        gbc.writeMem(0x79c5, { 0x26, 0x9f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9186, gbc.sp());
        EXPECT(0x79c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 26 03E4
        gbc.setState(0x7553, 0x30d7, 0x8bb0, 0x7fd0, 0xe2c2, 0x6d05, 0x1, 0x1);
        gbc.writeMem(0x7553, { 0x26, 0x27 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x30d7, gbc.sp());
        EXPECT(0x7555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 03E5
        gbc.setState(0x6bdf, 0x4251, 0x3d70, 0xe6a, 0x32a9, 0x1fb1, 0x1, 0x1);
        gbc.writeMem(0x6bdf, { 0x26, 0xe });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4251, gbc.sp());
        EXPECT(0x6be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 26 03E6
        gbc.setState(0xa9ee, 0xd7dc, 0x24d0, 0x96a1, 0xbe8, 0xd337, 0x1, 0x0);
        gbc.writeMem(0xa9ee, { 0x26, 0xf1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd7dc, gbc.sp());
        EXPECT(0xa9f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa9ee));
        EXPECT(0xf1, gbc.readMem(0xa9ef));
        // 26 03E7
        gbc.setState(0x97d5, 0x8ee7, 0x5400, 0xf0f1, 0xf5c8, 0x65b9, 0x1, 0x1);
        gbc.writeMem(0x97d5, { 0x26, 0xfd });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8ee7, gbc.sp());
        EXPECT(0x97d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x97d5));
        EXPECT(0xfd, gbc.readMem(0x97d6));
    }
