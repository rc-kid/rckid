    TEST(gbcemu, opcode_64) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 64 0000
        gbc.setState(0xe48d, 0x461e, 0x5ec0, 0x8f8e, 0x2f3d, 0xf314, 0x1, 0x1);
        gbc.writeMem(0xe48d, { 0x64 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x461e, gbc.sp());
        EXPECT(0xe48e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe48d));
        // 64 0001
        gbc.setState(0x8d1, 0x8354, 0x6100, 0x9fc9, 0x1195, 0x1088, 0x0, 0x0);
        gbc.writeMem(0x8d1, { 0x64 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8354, gbc.sp());
        EXPECT(0x8d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0002
        gbc.setState(0x1c6c, 0x13f9, 0xbcd0, 0xdb03, 0xc01c, 0x3586, 0x0, 0x1);
        gbc.writeMem(0x1c6c, { 0x64 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x13f9, gbc.sp());
        EXPECT(0x1c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0003
        gbc.setState(0x39ab, 0x89ce, 0xf250, 0xa88b, 0xd63a, 0x4ed5, 0x0, 0x0);
        gbc.writeMem(0x39ab, { 0x64 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x89ce, gbc.sp());
        EXPECT(0x39ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0004
        gbc.setState(0xdd76, 0xc9f4, 0x3c90, 0xef17, 0xbc0b, 0x19e0, 0x1, 0x0);
        gbc.writeMem(0xdd76, { 0x64 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc9f4, gbc.sp());
        EXPECT(0xdd77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xdd76));
        // 64 0005
        gbc.setState(0x261a, 0x76cc, 0xbfa0, 0xede7, 0x9c60, 0xe892, 0x0, 0x0);
        gbc.writeMem(0x261a, { 0x64 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x76cc, gbc.sp());
        EXPECT(0x261b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0006
        gbc.setState(0xb227, 0x2bbb, 0xe360, 0xc97c, 0xd5c1, 0x5182, 0x1, 0x1);
        gbc.writeMem(0xb227, { 0x64 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2bbb, gbc.sp());
        EXPECT(0xb228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb227));
        // 64 0007
        gbc.setState(0x26f7, 0xd07, 0xddb0, 0x8ead, 0xa95a, 0xdc6a, 0x0, 0x0);
        gbc.writeMem(0x26f7, { 0x64 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd07, gbc.sp());
        EXPECT(0x26f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0009
        gbc.setState(0xd7fb, 0xbce0, 0xa200, 0x20b2, 0x7097, 0x7a63, 0x0, 0x1);
        gbc.writeMem(0xd7fb, { 0x64 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbce0, gbc.sp());
        EXPECT(0xd7fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd7fb));
        // 64 000A
        gbc.setState(0x5af6, 0xf230, 0x8640, 0x984d, 0x5f37, 0x68cd, 0x0, 0x1);
        gbc.writeMem(0x5af6, { 0x64 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf230, gbc.sp());
        EXPECT(0x5af7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 000B
        gbc.setState(0xeaf7, 0x1f70, 0x2790, 0x267c, 0xff36, 0x5dcc, 0x1, 0x0);
        gbc.writeMem(0xeaf7, { 0x64 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1f70, gbc.sp());
        EXPECT(0xeaf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xeaf7));
        // 64 000C
        gbc.setState(0x86a7, 0xaceb, 0x1030, 0x2117, 0xb17d, 0xa1dc, 0x1, 0x0);
        gbc.writeMem(0x86a7, { 0x64 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xaceb, gbc.sp());
        EXPECT(0x86a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x86a7));
        // 64 000D
        gbc.setState(0xd928, 0x8d12, 0xc950, 0xa93a, 0x88d9, 0xb2a7, 0x0, 0x1);
        gbc.writeMem(0xd928, { 0x64 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8d12, gbc.sp());
        EXPECT(0xd929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd928));
        // 64 000E
        gbc.setState(0xb281, 0xbc23, 0x9cf0, 0xc6f3, 0x974a, 0x368b, 0x0, 0x1);
        gbc.writeMem(0xb281, { 0x64 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbc23, gbc.sp());
        EXPECT(0xb282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb281));
        // 64 000F
        gbc.setState(0xcfdf, 0x864a, 0x56d0, 0x4cc4, 0x6a00, 0xf01, 0x1, 0x1);
        gbc.writeMem(0xcfdf, { 0x64 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x864a, gbc.sp());
        EXPECT(0xcfe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xcfdf));
        // 64 0010
        gbc.setState(0x4b2b, 0x23f8, 0x9be0, 0x6b15, 0xc9f4, 0x3866, 0x0, 0x1);
        gbc.writeMem(0x4b2b, { 0x64 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x23f8, gbc.sp());
        EXPECT(0x4b2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0011
        gbc.setState(0x8079, 0x240c, 0xa520, 0x7a64, 0x24c2, 0x9393, 0x1, 0x0);
        gbc.writeMem(0x8079, { 0x64 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x240c, gbc.sp());
        EXPECT(0x807a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8079));
        // 64 0012
        gbc.setState(0x615e, 0xbc06, 0xf1f0, 0x3e84, 0xb0ce, 0x97c0, 0x1, 0x0);
        gbc.writeMem(0x615e, { 0x64 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbc06, gbc.sp());
        EXPECT(0x615f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0013
        gbc.setState(0xe890, 0x86c7, 0x370, 0x47fa, 0x888c, 0xbe3d, 0x0, 0x0);
        gbc.writeMem(0xe890, { 0x64 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x86c7, gbc.sp());
        EXPECT(0xe891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe890));
        // 64 0014
        gbc.setState(0xab64, 0x47ed, 0xe090, 0x3af3, 0x5baa, 0x4cf1, 0x0, 0x1);
        gbc.writeMem(0xab64, { 0x64 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x47ed, gbc.sp());
        EXPECT(0xab65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xab64));
        // 64 0015
        gbc.setState(0xcdd0, 0xe77b, 0x3e50, 0x53c8, 0xdd71, 0xb98, 0x0, 0x1);
        gbc.writeMem(0xcdd0, { 0x64 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe77b, gbc.sp());
        EXPECT(0xcdd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xcdd0));
        // 64 0016
        gbc.setState(0x587a, 0x395f, 0xab30, 0x79a3, 0xa0c2, 0x24fe, 0x0, 0x1);
        gbc.writeMem(0x587a, { 0x64 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x395f, gbc.sp());
        EXPECT(0x587b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0017
        gbc.setState(0x9ab5, 0xda93, 0x1930, 0x1376, 0x975d, 0xe08b, 0x1, 0x0);
        gbc.writeMem(0x9ab5, { 0x64 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xda93, gbc.sp());
        EXPECT(0x9ab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9ab5));
        // 64 0018
        gbc.setState(0x662a, 0x9e8f, 0xbee0, 0xfd90, 0x9a88, 0x7185, 0x0, 0x0);
        gbc.writeMem(0x662a, { 0x64 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9e8f, gbc.sp());
        EXPECT(0x662b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0019
        gbc.setState(0x7690, 0x68cd, 0xc320, 0xc077, 0x13c0, 0xbb5f, 0x1, 0x0);
        gbc.writeMem(0x7690, { 0x64 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x68cd, gbc.sp());
        EXPECT(0x7691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 001A
        gbc.setState(0xae43, 0xaac, 0xd910, 0x4600, 0x14d6, 0xcb87, 0x0, 0x0);
        gbc.writeMem(0xae43, { 0x64 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xaac, gbc.sp());
        EXPECT(0xae44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xae43));
        // 64 001B
        gbc.setState(0xb83a, 0xc652, 0x4260, 0x5979, 0xcfd9, 0x5b64, 0x0, 0x0);
        gbc.writeMem(0xb83a, { 0x64 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc652, gbc.sp());
        EXPECT(0xb83b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb83a));
        // 64 001C
        gbc.setState(0xaaeb, 0x6231, 0x8c80, 0x9357, 0xcb7, 0x6a02, 0x1, 0x1);
        gbc.writeMem(0xaaeb, { 0x64 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6231, gbc.sp());
        EXPECT(0xaaec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xaaeb));
        // 64 001D
        gbc.setState(0xc8fe, 0xc017, 0xc0b0, 0xbc06, 0x6272, 0x46e0, 0x0, 0x0);
        gbc.writeMem(0xc8fe, { 0x64 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc017, gbc.sp());
        EXPECT(0xc8ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc8fe));
        // 64 001E
        gbc.setState(0x289c, 0x8fe0, 0x4380, 0xccb1, 0x8de6, 0xc1e6, 0x1, 0x1);
        gbc.writeMem(0x289c, { 0x64 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8fe0, gbc.sp());
        EXPECT(0x289d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 001F
        gbc.setState(0x19f8, 0x4583, 0xd650, 0x7aac, 0x95e3, 0xe62, 0x0, 0x0);
        gbc.writeMem(0x19f8, { 0x64 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4583, gbc.sp());
        EXPECT(0x19f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0020
        gbc.setState(0xd410, 0x3272, 0x6c60, 0xa30f, 0xf931, 0x3545, 0x0, 0x1);
        gbc.writeMem(0xd410, { 0x64 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3272, gbc.sp());
        EXPECT(0xd411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd410));
        // 64 0021
        gbc.setState(0x667c, 0xe527, 0x8450, 0x3a16, 0x7b1f, 0x3f8c, 0x1, 0x1);
        gbc.writeMem(0x667c, { 0x64 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe527, gbc.sp());
        EXPECT(0x667d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0022
        gbc.setState(0xc3d1, 0xc7d0, 0xca60, 0x25bc, 0xb7b8, 0x1474, 0x1, 0x0);
        gbc.writeMem(0xc3d1, { 0x64 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc7d0, gbc.sp());
        EXPECT(0xc3d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc3d1));
        // 64 0023
        gbc.setState(0xec47, 0xc9d0, 0xbcb0, 0xff48, 0x13a, 0x2992, 0x1, 0x0);
        gbc.writeMem(0xec47, { 0x64 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc9d0, gbc.sp());
        EXPECT(0xec48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xec47));
        // 64 0024
        gbc.setState(0x76b5, 0x69e, 0x58f0, 0x163b, 0x4592, 0xf13, 0x0, 0x1);
        gbc.writeMem(0x76b5, { 0x64 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x69e, gbc.sp());
        EXPECT(0x76b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0025
        gbc.setState(0x6a10, 0xf1e4, 0x6560, 0xfc88, 0x73e0, 0xf97a, 0x1, 0x1);
        gbc.writeMem(0x6a10, { 0x64 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf1e4, gbc.sp());
        EXPECT(0x6a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0027
        gbc.setState(0x627c, 0x891e, 0xd040, 0x292e, 0x6a66, 0x448d, 0x1, 0x0);
        gbc.writeMem(0x627c, { 0x64 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x891e, gbc.sp());
        EXPECT(0x627d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0028
        gbc.setState(0xa09b, 0x9238, 0x3e70, 0x64ee, 0x6325, 0x25a1, 0x0, 0x0);
        gbc.writeMem(0xa09b, { 0x64 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9238, gbc.sp());
        EXPECT(0xa09c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa09b));
        // 64 0029
        gbc.setState(0xc78e, 0xf3b2, 0x3090, 0xf65e, 0x7919, 0x3a34, 0x0, 0x0);
        gbc.writeMem(0xc78e, { 0x64 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf3b2, gbc.sp());
        EXPECT(0xc78f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc78e));
        // 64 002A
        gbc.setState(0xc33b, 0x2361, 0x1050, 0x8f35, 0x3ab7, 0x80ca, 0x0, 0x1);
        gbc.writeMem(0xc33b, { 0x64 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2361, gbc.sp());
        EXPECT(0xc33c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc33b));
        // 64 002B
        gbc.setState(0xcf8e, 0x2e2b, 0x23f0, 0x3cd7, 0x9eb8, 0x3b6b, 0x1, 0x0);
        gbc.writeMem(0xcf8e, { 0x64 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2e2b, gbc.sp());
        EXPECT(0xcf8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xcf8e));
        // 64 002C
        gbc.setState(0x98e5, 0xe661, 0x1e50, 0x7fb9, 0x50e5, 0x2633, 0x0, 0x1);
        gbc.writeMem(0x98e5, { 0x64 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe661, gbc.sp());
        EXPECT(0x98e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x98e5));
        // 64 002D
        gbc.setState(0x2018, 0x35cd, 0x84e0, 0x9c07, 0xa5ee, 0xab0e, 0x0, 0x0);
        gbc.writeMem(0x2018, { 0x64 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x35cd, gbc.sp());
        EXPECT(0x2019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 002E
        gbc.setState(0x64a5, 0x7546, 0xc580, 0x1d2b, 0x18fa, 0x1a92, 0x1, 0x0);
        gbc.writeMem(0x64a5, { 0x64 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7546, gbc.sp());
        EXPECT(0x64a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 002F
        gbc.setState(0xd72c, 0x8508, 0xd8b0, 0x54f4, 0x9266, 0xdd59, 0x0, 0x0);
        gbc.writeMem(0xd72c, { 0x64 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8508, gbc.sp());
        EXPECT(0xd72d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd72c));
        // 64 0030
        gbc.setState(0xa0dd, 0x4f9f, 0x3a80, 0xa670, 0x70ca, 0x188c, 0x1, 0x0);
        gbc.writeMem(0xa0dd, { 0x64 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4f9f, gbc.sp());
        EXPECT(0xa0de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa0dd));
        // 64 0031
        gbc.setState(0x8b09, 0x7501, 0xb860, 0xdaca, 0x278e, 0xd9ec, 0x1, 0x1);
        gbc.writeMem(0x8b09, { 0x64 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7501, gbc.sp());
        EXPECT(0x8b0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8b09));
        // 64 0032
        gbc.setState(0xbaac, 0x5b45, 0xf360, 0x6113, 0x1ca5, 0x456a, 0x0, 0x0);
        gbc.writeMem(0xbaac, { 0x64 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5b45, gbc.sp());
        EXPECT(0xbaad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xbaac));
        // 64 0033
        gbc.setState(0xc16d, 0x9909, 0x9a50, 0xe70e, 0xe84e, 0xb8f2, 0x1, 0x0);
        gbc.writeMem(0xc16d, { 0x64 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9909, gbc.sp());
        EXPECT(0xc16e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc16d));
        // 64 0034
        gbc.setState(0xaea6, 0xf9c3, 0x2310, 0xe17, 0xa9fa, 0x7641, 0x1, 0x1);
        gbc.writeMem(0xaea6, { 0x64 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf9c3, gbc.sp());
        EXPECT(0xaea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xaea6));
        // 64 0035
        gbc.setState(0x4167, 0xf48a, 0x91d0, 0xfc03, 0x8fd6, 0x2e4a, 0x0, 0x1);
        gbc.writeMem(0x4167, { 0x64 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf48a, gbc.sp());
        EXPECT(0x4168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0036
        gbc.setState(0x82b2, 0xf4b, 0xa600, 0xf72a, 0x67a, 0x9f4c, 0x1, 0x0);
        gbc.writeMem(0x82b2, { 0x64 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf4b, gbc.sp());
        EXPECT(0x82b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x82b2));
        // 64 0037
        gbc.setState(0x55d6, 0x5225, 0x7ab0, 0x27cb, 0x6da6, 0x6e8f, 0x0, 0x0);
        gbc.writeMem(0x55d6, { 0x64 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5225, gbc.sp());
        EXPECT(0x55d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0038
        gbc.setState(0x5347, 0x10e3, 0xb1f0, 0x8899, 0x255a, 0x7d1e, 0x1, 0x1);
        gbc.writeMem(0x5347, { 0x64 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x10e3, gbc.sp());
        EXPECT(0x5348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0039
        gbc.setState(0x7b2d, 0xc649, 0xa250, 0x508e, 0xbc5d, 0xf9ef, 0x1, 0x0);
        gbc.writeMem(0x7b2d, { 0x64 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc649, gbc.sp());
        EXPECT(0x7b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 003A
        gbc.setState(0x5915, 0x2778, 0x9cd0, 0x34a3, 0x7da1, 0xcf3b, 0x1, 0x0);
        gbc.writeMem(0x5915, { 0x64 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2778, gbc.sp());
        EXPECT(0x5916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 003B
        gbc.setState(0xe4bb, 0xd23a, 0x32d0, 0xe678, 0xee22, 0xc523, 0x1, 0x0);
        gbc.writeMem(0xe4bb, { 0x64 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd23a, gbc.sp());
        EXPECT(0xe4bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe4bb));
        // 64 003C
        gbc.setState(0xda2d, 0x61ea, 0xcc0, 0x8224, 0xbe5b, 0xab6b, 0x1, 0x0);
        gbc.writeMem(0xda2d, { 0x64 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x61ea, gbc.sp());
        EXPECT(0xda2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xda2d));
        // 64 003D
        gbc.setState(0x389d, 0x27, 0x8490, 0x7768, 0xd403, 0xfb23, 0x0, 0x1);
        gbc.writeMem(0x389d, { 0x64 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x27, gbc.sp());
        EXPECT(0x389e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 003E
        gbc.setState(0x923d, 0x35d6, 0x9210, 0xcc15, 0xc706, 0x3967, 0x1, 0x1);
        gbc.writeMem(0x923d, { 0x64 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x35d6, gbc.sp());
        EXPECT(0x923e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x923d));
        // 64 003F
        gbc.setState(0xed5c, 0x5325, 0xe6c0, 0xd41a, 0x8d42, 0x328b, 0x1, 0x0);
        gbc.writeMem(0xed5c, { 0x64 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5325, gbc.sp());
        EXPECT(0xed5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xed5c));
        // 64 0040
        gbc.setState(0x8964, 0xaf73, 0x5d80, 0x16f2, 0x7994, 0x5b3, 0x1, 0x1);
        gbc.writeMem(0x8964, { 0x64 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xaf73, gbc.sp());
        EXPECT(0x8965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8964));
        // 64 0041
        gbc.setState(0x8f0a, 0xf5e6, 0xcab0, 0xf456, 0x461d, 0x81cf, 0x1, 0x1);
        gbc.writeMem(0x8f0a, { 0x64 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf5e6, gbc.sp());
        EXPECT(0x8f0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8f0a));
        // 64 0042
        gbc.setState(0x5c9c, 0xd96f, 0xc3e0, 0xc80e, 0x28c1, 0x5438, 0x0, 0x0);
        gbc.writeMem(0x5c9c, { 0x64 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd96f, gbc.sp());
        EXPECT(0x5c9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0043
        gbc.setState(0xa4f2, 0x8943, 0x6620, 0xd628, 0x974, 0xadfb, 0x1, 0x0);
        gbc.writeMem(0xa4f2, { 0x64 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8943, gbc.sp());
        EXPECT(0xa4f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa4f2));
        // 64 0045
        gbc.setState(0x6240, 0xd318, 0x5f80, 0xbb70, 0xcb19, 0x7fb9, 0x1, 0x1);
        gbc.writeMem(0x6240, { 0x64 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd318, gbc.sp());
        EXPECT(0x6241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0046
        gbc.setState(0x494f, 0xe80a, 0x2540, 0x990c, 0x903b, 0x8e7e, 0x1, 0x1);
        gbc.writeMem(0x494f, { 0x64 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe80a, gbc.sp());
        EXPECT(0x4950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0047
        gbc.setState(0x7543, 0x34bc, 0xcc00, 0x9272, 0xf0dc, 0xdb, 0x0, 0x0);
        gbc.writeMem(0x7543, { 0x64 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x34bc, gbc.sp());
        EXPECT(0x7544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0048
        gbc.setState(0x48b7, 0x2e39, 0x3bb0, 0x3a6e, 0xea48, 0x5c4f, 0x0, 0x0);
        gbc.writeMem(0x48b7, { 0x64 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2e39, gbc.sp());
        EXPECT(0x48b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0049
        gbc.setState(0x535b, 0x2e9f, 0x4420, 0xe026, 0xf378, 0x2714, 0x0, 0x0);
        gbc.writeMem(0x535b, { 0x64 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2e9f, gbc.sp());
        EXPECT(0x535c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 004A
        gbc.setState(0x6c6b, 0x24f6, 0x34f0, 0x1334, 0xfec1, 0x489d, 0x0, 0x0);
        gbc.writeMem(0x6c6b, { 0x64 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x24f6, gbc.sp());
        EXPECT(0x6c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 004B
        gbc.setState(0xa1cf, 0x57d5, 0x6010, 0x66b4, 0x1369, 0xef0c, 0x0, 0x0);
        gbc.writeMem(0xa1cf, { 0x64 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x57d5, gbc.sp());
        EXPECT(0xa1d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa1cf));
        // 64 004C
        gbc.setState(0x150, 0xc43b, 0xd7f0, 0x540d, 0xbe89, 0xb0c1, 0x1, 0x0);
        gbc.writeMem(0x150, { 0x64 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc43b, gbc.sp());
        EXPECT(0x151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 004D
        gbc.setState(0xcbdf, 0x5849, 0xf2e0, 0xb902, 0x6e22, 0xf020, 0x1, 0x1);
        gbc.writeMem(0xcbdf, { 0x64 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5849, gbc.sp());
        EXPECT(0xcbe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xcbdf));
        // 64 004F
        gbc.setState(0x91cd, 0xd554, 0x8c00, 0x3a60, 0x2a35, 0x6309, 0x1, 0x1);
        gbc.writeMem(0x91cd, { 0x64 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd554, gbc.sp());
        EXPECT(0x91ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x91cd));
        // 64 0050
        gbc.setState(0x2c43, 0x878, 0x93a0, 0x8a24, 0x1d70, 0x3120, 0x1, 0x0);
        gbc.writeMem(0x2c43, { 0x64 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x878, gbc.sp());
        EXPECT(0x2c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0051
        gbc.setState(0x69c4, 0xfe69, 0x5290, 0xa323, 0x1d26, 0xb94, 0x1, 0x1);
        gbc.writeMem(0x69c4, { 0x64 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfe69, gbc.sp());
        EXPECT(0x69c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0052
        gbc.setState(0x7fd4, 0x53d8, 0xe140, 0x90f4, 0xfdba, 0x511b, 0x1, 0x0);
        gbc.writeMem(0x7fd4, { 0x64 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x53d8, gbc.sp());
        EXPECT(0x7fd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0053
        gbc.setState(0x694e, 0x62e3, 0xe600, 0xafab, 0x7af3, 0x6c6b, 0x0, 0x1);
        gbc.writeMem(0x694e, { 0x64 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x62e3, gbc.sp());
        EXPECT(0x694f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0054
        gbc.setState(0x8d14, 0x3c49, 0xe1a0, 0x42f3, 0x5b29, 0x2d87, 0x1, 0x0);
        gbc.writeMem(0x8d14, { 0x64 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3c49, gbc.sp());
        EXPECT(0x8d15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8d14));
        // 64 0055
        gbc.setState(0x21a9, 0x5627, 0xc040, 0x5073, 0xef77, 0xdc42, 0x0, 0x1);
        gbc.writeMem(0x21a9, { 0x64 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5627, gbc.sp());
        EXPECT(0x21aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0057
        gbc.setState(0x970d, 0x9f1d, 0xc730, 0x43ba, 0x8426, 0xf95a, 0x0, 0x0);
        gbc.writeMem(0x970d, { 0x64 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9f1d, gbc.sp());
        EXPECT(0x970e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x970d));
        // 64 0058
        gbc.setState(0xc016, 0x3d25, 0x23f0, 0xccd1, 0x50b8, 0x9505, 0x1, 0x1);
        gbc.writeMem(0xc016, { 0x64 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3d25, gbc.sp());
        EXPECT(0xc017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc016));
        // 64 0059
        gbc.setState(0x2046, 0xaa17, 0xf8c0, 0x573f, 0x88d4, 0xdc18, 0x1, 0x0);
        gbc.writeMem(0x2046, { 0x64 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xaa17, gbc.sp());
        EXPECT(0x2047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 005A
        gbc.setState(0x902, 0x43d6, 0x7970, 0x49c8, 0x91c, 0xf7c3, 0x0, 0x1);
        gbc.writeMem(0x902, { 0x64 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x43d6, gbc.sp());
        EXPECT(0x903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 005B
        gbc.setState(0xc479, 0x3a4b, 0xa220, 0x5dce, 0x79e6, 0x8a6b, 0x0, 0x1);
        gbc.writeMem(0xc479, { 0x64 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3a4b, gbc.sp());
        EXPECT(0xc47a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc479));
        // 64 005C
        gbc.setState(0xdcba, 0x1a3f, 0xb2d0, 0xc149, 0x8d65, 0xf57b, 0x1, 0x0);
        gbc.writeMem(0xdcba, { 0x64 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1a3f, gbc.sp());
        EXPECT(0xdcbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xdcba));
        // 64 005D
        gbc.setState(0x4980, 0xe1c9, 0xdaf0, 0x5dd1, 0x9322, 0x80eb, 0x0, 0x0);
        gbc.writeMem(0x4980, { 0x64 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe1c9, gbc.sp());
        EXPECT(0x4981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 005E
        gbc.setState(0xc3cd, 0x7a78, 0x7240, 0xd168, 0x4cd2, 0x8769, 0x1, 0x0);
        gbc.writeMem(0xc3cd, { 0x64 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7a78, gbc.sp());
        EXPECT(0xc3ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc3cd));
        // 64 005F
        gbc.setState(0x29db, 0x76a8, 0xc6a0, 0xf5b7, 0x6c81, 0x37e2, 0x1, 0x0);
        gbc.writeMem(0x29db, { 0x64 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x76a8, gbc.sp());
        EXPECT(0x29dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0060
        gbc.setState(0x860c, 0xdcc, 0xeda0, 0x39fc, 0x4b3f, 0x2546, 0x0, 0x0);
        gbc.writeMem(0x860c, { 0x64 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdcc, gbc.sp());
        EXPECT(0x860d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x860c));
        // 64 0061
        gbc.setState(0xaead, 0x9485, 0xe820, 0x1fc8, 0x4a32, 0x5411, 0x0, 0x1);
        gbc.writeMem(0xaead, { 0x64 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9485, gbc.sp());
        EXPECT(0xaeae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xaead));
        // 64 0062
        gbc.setState(0xbfda, 0x56ab, 0x5030, 0x5a28, 0x3373, 0xfa82, 0x1, 0x0);
        gbc.writeMem(0xbfda, { 0x64 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x56ab, gbc.sp());
        EXPECT(0xbfdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xbfda));
        // 64 0063
        gbc.setState(0x8720, 0xf244, 0xff60, 0x5112, 0x6137, 0xccc8, 0x0, 0x1);
        gbc.writeMem(0x8720, { 0x64 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf244, gbc.sp());
        EXPECT(0x8721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8720));
        // 64 0064
        gbc.setState(0x3256, 0x628, 0xbb30, 0x86f9, 0x6155, 0x7be, 0x1, 0x0);
        gbc.writeMem(0x3256, { 0x64 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x628, gbc.sp());
        EXPECT(0x3257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0065
        gbc.setState(0x3fea, 0x30ac, 0xe350, 0x2825, 0x7d6e, 0x590, 0x1, 0x1);
        gbc.writeMem(0x3fea, { 0x64 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x30ac, gbc.sp());
        EXPECT(0x3feb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0066
        gbc.setState(0x793b, 0x8cf8, 0xc6f0, 0x1ef, 0x43b7, 0x5ef8, 0x0, 0x1);
        gbc.writeMem(0x793b, { 0x64 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8cf8, gbc.sp());
        EXPECT(0x793c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0067
        gbc.setState(0xb180, 0x4a27, 0xda40, 0x82e7, 0xb600, 0xa65c, 0x0, 0x1);
        gbc.writeMem(0xb180, { 0x64 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4a27, gbc.sp());
        EXPECT(0xb181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb180));
        // 64 0068
        gbc.setState(0xc5, 0x19c5, 0xd550, 0x2467, 0x53af, 0xfdbe, 0x0, 0x0);
        gbc.writeMem(0xc5, { 0x64 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x19c5, gbc.sp());
        EXPECT(0xc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0069
        gbc.setState(0xc371, 0xa8aa, 0xb660, 0x56de, 0x9653, 0x6e7c, 0x1, 0x1);
        gbc.writeMem(0xc371, { 0x64 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa8aa, gbc.sp());
        EXPECT(0xc372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc371));
        // 64 006A
        gbc.setState(0x349d, 0xfb6e, 0xc7e0, 0xb300, 0xc3f4, 0xd4ba, 0x0, 0x0);
        gbc.writeMem(0x349d, { 0x64 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfb6e, gbc.sp());
        EXPECT(0x349e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 006B
        gbc.setState(0xdf8d, 0xb594, 0x3c00, 0x1ea5, 0xe901, 0xd386, 0x0, 0x1);
        gbc.writeMem(0xdf8d, { 0x64 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb594, gbc.sp());
        EXPECT(0xdf8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xdf8d));
        // 64 006C
        gbc.setState(0xe2ac, 0x844a, 0x6640, 0x1919, 0x5e32, 0xeb68, 0x0, 0x1);
        gbc.writeMem(0xe2ac, { 0x64 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x844a, gbc.sp());
        EXPECT(0xe2ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe2ac));
        // 64 006E
        gbc.setState(0xc5be, 0xbcab, 0xe880, 0xc23f, 0x912e, 0xfb0c, 0x1, 0x1);
        gbc.writeMem(0xc5be, { 0x64 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbcab, gbc.sp());
        EXPECT(0xc5bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc5be));
        // 64 006F
        gbc.setState(0xeadf, 0x8a86, 0xeaa0, 0x59d, 0xa5c7, 0xa21e, 0x1, 0x0);
        gbc.writeMem(0xeadf, { 0x64 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8a86, gbc.sp());
        EXPECT(0xeae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xeadf));
        // 64 0070
        gbc.setState(0xb981, 0x5b05, 0x1510, 0x9d4a, 0xfa92, 0x1990, 0x0, 0x0);
        gbc.writeMem(0xb981, { 0x64 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5b05, gbc.sp());
        EXPECT(0xb982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb981));
        // 64 0071
        gbc.setState(0x111c, 0x1622, 0xb4e0, 0x3fad, 0x5057, 0xeeb3, 0x1, 0x0);
        gbc.writeMem(0x111c, { 0x64 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1622, gbc.sp());
        EXPECT(0x111d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0073
        gbc.setState(0xdeb1, 0xfb94, 0x18b0, 0x1628, 0x535b, 0xa07f, 0x0, 0x0);
        gbc.writeMem(0xdeb1, { 0x64 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xfb94, gbc.sp());
        EXPECT(0xdeb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xdeb1));
        // 64 0074
        gbc.setState(0x8f21, 0x5fc5, 0x20f0, 0x1d5e, 0x51ae, 0x278a, 0x0, 0x1);
        gbc.writeMem(0x8f21, { 0x64 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5fc5, gbc.sp());
        EXPECT(0x8f22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8f21));
        // 64 0075
        gbc.setState(0xa97, 0x2d04, 0x9bb0, 0xe32c, 0x74ba, 0xe2f3, 0x0, 0x0);
        gbc.writeMem(0xa97, { 0x64 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2d04, gbc.sp());
        EXPECT(0xa98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0076
        gbc.setState(0x28c7, 0xb78f, 0xf0b0, 0xe171, 0xe331, 0x9f78, 0x1, 0x0);
        gbc.writeMem(0x28c7, { 0x64 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb78f, gbc.sp());
        EXPECT(0x28c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0077
        gbc.setState(0x5e68, 0x2836, 0x6530, 0xc550, 0x95d7, 0x968d, 0x0, 0x1);
        gbc.writeMem(0x5e68, { 0x64 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2836, gbc.sp());
        EXPECT(0x5e69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0078
        gbc.setState(0x760b, 0xfef0, 0x57c0, 0x65d5, 0x5d54, 0x3e8a, 0x1, 0x0);
        gbc.writeMem(0x760b, { 0x64 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfef0, gbc.sp());
        EXPECT(0x760c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0079
        gbc.setState(0x64e9, 0x52fb, 0x8b60, 0x3dc3, 0xa19a, 0xbc28, 0x0, 0x1);
        gbc.writeMem(0x64e9, { 0x64 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x52fb, gbc.sp());
        EXPECT(0x64ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 007A
        gbc.setState(0x4f58, 0x774, 0x46f0, 0xe38a, 0x2235, 0xb6de, 0x1, 0x1);
        gbc.writeMem(0x4f58, { 0x64 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x774, gbc.sp());
        EXPECT(0x4f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 007B
        gbc.setState(0xc3bc, 0x2b23, 0x4f00, 0xa854, 0x5e6c, 0xfbc9, 0x0, 0x1);
        gbc.writeMem(0xc3bc, { 0x64 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2b23, gbc.sp());
        EXPECT(0xc3bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc3bc));
        // 64 007C
        gbc.setState(0xa9c2, 0x4594, 0xbd30, 0x1731, 0x88ee, 0xb92c, 0x0, 0x1);
        gbc.writeMem(0xa9c2, { 0x64 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4594, gbc.sp());
        EXPECT(0xa9c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa9c2));
        // 64 007D
        gbc.setState(0x735, 0xff77, 0xe300, 0x29fe, 0x4ec8, 0x9a7e, 0x1, 0x0);
        gbc.writeMem(0x735, { 0x64 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xff77, gbc.sp());
        EXPECT(0x736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 007E
        gbc.setState(0xaa7c, 0xe004, 0xeb10, 0xc623, 0x7024, 0xd193, 0x1, 0x1);
        gbc.writeMem(0xaa7c, { 0x64 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe004, gbc.sp());
        EXPECT(0xaa7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xaa7c));
        // 64 007F
        gbc.setState(0x3b09, 0x6c3c, 0x71d0, 0xf914, 0xf8f6, 0xf5b2, 0x0, 0x0);
        gbc.writeMem(0x3b09, { 0x64 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6c3c, gbc.sp());
        EXPECT(0x3b0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0080
        gbc.setState(0x329a, 0x3a76, 0x50a0, 0x175e, 0x44e, 0x6bde, 0x0, 0x0);
        gbc.writeMem(0x329a, { 0x64 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3a76, gbc.sp());
        EXPECT(0x329b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0081
        gbc.setState(0x42fb, 0x4663, 0x2fa0, 0x259f, 0x45d9, 0xdfc4, 0x0, 0x0);
        gbc.writeMem(0x42fb, { 0x64 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4663, gbc.sp());
        EXPECT(0x42fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0082
        gbc.setState(0x932f, 0x16ec, 0x9490, 0x5ef3, 0x5ce4, 0xf058, 0x0, 0x0);
        gbc.writeMem(0x932f, { 0x64 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x16ec, gbc.sp());
        EXPECT(0x9330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x932f));
        // 64 0083
        gbc.setState(0x933c, 0x6745, 0x1d20, 0xa7ec, 0x299a, 0x9867, 0x1, 0x1);
        gbc.writeMem(0x933c, { 0x64 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6745, gbc.sp());
        EXPECT(0x933d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x933c));
        // 64 0084
        gbc.setState(0xe7df, 0x971, 0x96e0, 0x8bd9, 0x318, 0xb15c, 0x0, 0x1);
        gbc.writeMem(0xe7df, { 0x64 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x971, gbc.sp());
        EXPECT(0xe7e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe7df));
        // 64 0085
        gbc.setState(0xe231, 0xdda4, 0xbfb0, 0x8e81, 0xd348, 0x9167, 0x0, 0x1);
        gbc.writeMem(0xe231, { 0x64 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdda4, gbc.sp());
        EXPECT(0xe232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe231));
        // 64 0086
        gbc.setState(0x6d3d, 0x4456, 0x9ac0, 0x6459, 0xa102, 0xf0a7, 0x1, 0x1);
        gbc.writeMem(0x6d3d, { 0x64 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4456, gbc.sp());
        EXPECT(0x6d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0087
        gbc.setState(0x3841, 0x726e, 0x27c0, 0x44e8, 0x9b5, 0xa3d4, 0x0, 0x0);
        gbc.writeMem(0x3841, { 0x64 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x726e, gbc.sp());
        EXPECT(0x3842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0088
        gbc.setState(0x2163, 0x8463, 0xcab0, 0x8013, 0xf6e9, 0x1e34, 0x1, 0x1);
        gbc.writeMem(0x2163, { 0x64 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8463, gbc.sp());
        EXPECT(0x2164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0089
        gbc.setState(0xee6a, 0x4d98, 0x70d0, 0xc543, 0xc46a, 0xb47d, 0x1, 0x1);
        gbc.writeMem(0xee6a, { 0x64 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4d98, gbc.sp());
        EXPECT(0xee6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xee6a));
        // 64 008A
        gbc.setState(0x5499, 0xb85, 0x8560, 0xed13, 0x2204, 0x20f5, 0x1, 0x1);
        gbc.writeMem(0x5499, { 0x64 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb85, gbc.sp());
        EXPECT(0x549a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 008B
        gbc.setState(0xc05c, 0x3df4, 0x2bf0, 0x1c9f, 0x3bf8, 0x543e, 0x1, 0x0);
        gbc.writeMem(0xc05c, { 0x64 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3df4, gbc.sp());
        EXPECT(0xc05d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc05c));
        // 64 008C
        gbc.setState(0x3409, 0x2af3, 0x960, 0x3c2c, 0xe816, 0xf359, 0x0, 0x0);
        gbc.writeMem(0x3409, { 0x64 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2af3, gbc.sp());
        EXPECT(0x340a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 008D
        gbc.setState(0xbb54, 0xa9c3, 0x4f80, 0x4925, 0xa185, 0x1e15, 0x1, 0x1);
        gbc.writeMem(0xbb54, { 0x64 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa9c3, gbc.sp());
        EXPECT(0xbb55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xbb54));
        // 64 008E
        gbc.setState(0xa5f3, 0x580, 0x7bd0, 0x1c39, 0x595, 0x5a48, 0x1, 0x0);
        gbc.writeMem(0xa5f3, { 0x64 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x580, gbc.sp());
        EXPECT(0xa5f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa5f3));
        // 64 008F
        gbc.setState(0xcaf6, 0x2ddb, 0x57d0, 0x1bc8, 0xffd7, 0x3a6b, 0x1, 0x1);
        gbc.writeMem(0xcaf6, { 0x64 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2ddb, gbc.sp());
        EXPECT(0xcaf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xcaf6));
        // 64 0090
        gbc.setState(0x1823, 0xf471, 0xdb40, 0xf248, 0x6666, 0x664, 0x1, 0x0);
        gbc.writeMem(0x1823, { 0x64 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf471, gbc.sp());
        EXPECT(0x1824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0091
        gbc.setState(0xb1e7, 0xef0a, 0x5c00, 0xe624, 0x69e0, 0xc6f3, 0x1, 0x0);
        gbc.writeMem(0xb1e7, { 0x64 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xef0a, gbc.sp());
        EXPECT(0xb1e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb1e7));
        // 64 0092
        gbc.setState(0xeb50, 0x4b75, 0xe720, 0x5f00, 0xe2f8, 0x9dfd, 0x0, 0x1);
        gbc.writeMem(0xeb50, { 0x64 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4b75, gbc.sp());
        EXPECT(0xeb51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xeb50));
        // 64 0093
        gbc.setState(0x825d, 0xca22, 0xff20, 0xb5ea, 0x818, 0xaede, 0x1, 0x1);
        gbc.writeMem(0x825d, { 0x64 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xca22, gbc.sp());
        EXPECT(0x825e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x825d));
        // 64 0094
        gbc.setState(0xb28b, 0x692e, 0x2a20, 0x2cee, 0x53ac, 0x4c91, 0x1, 0x1);
        gbc.writeMem(0xb28b, { 0x64 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x692e, gbc.sp());
        EXPECT(0xb28c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb28b));
        // 64 0095
        gbc.setState(0xaee, 0x5d6f, 0x10b0, 0xc372, 0x9860, 0xf48c, 0x1, 0x1);
        gbc.writeMem(0xaee, { 0x64 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5d6f, gbc.sp());
        EXPECT(0xaef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0096
        gbc.setState(0xa25d, 0x2d46, 0x9980, 0x631d, 0x14ac, 0xa95, 0x1, 0x0);
        gbc.writeMem(0xa25d, { 0x64 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2d46, gbc.sp());
        EXPECT(0xa25e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa25d));
        // 64 0097
        gbc.setState(0x37db, 0x2853, 0xcee0, 0x1948, 0x87c5, 0xf80d, 0x1, 0x0);
        gbc.writeMem(0x37db, { 0x64 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2853, gbc.sp());
        EXPECT(0x37dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0098
        gbc.setState(0x8046, 0xe513, 0xd4f0, 0xe583, 0x20d5, 0x78ee, 0x1, 0x0);
        gbc.writeMem(0x8046, { 0x64 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe513, gbc.sp());
        EXPECT(0x8047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8046));
        // 64 0099
        gbc.setState(0x251, 0x8617, 0x8eb0, 0xc38d, 0x53ad, 0xdbb0, 0x1, 0x1);
        gbc.writeMem(0x251, { 0x64 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8617, gbc.sp());
        EXPECT(0x252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 009A
        gbc.setState(0x8b5d, 0x2a12, 0x6f30, 0x4f44, 0xf95a, 0xe5ca, 0x1, 0x0);
        gbc.writeMem(0x8b5d, { 0x64 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2a12, gbc.sp());
        EXPECT(0x8b5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8b5d));
        // 64 009B
        gbc.setState(0x3ed, 0x3fae, 0x26e0, 0xe893, 0x61de, 0xf06c, 0x0, 0x1);
        gbc.writeMem(0x3ed, { 0x64 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3fae, gbc.sp());
        EXPECT(0x3ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 009C
        gbc.setState(0x8e06, 0x6465, 0xe830, 0xcafc, 0xe499, 0xba71, 0x1, 0x1);
        gbc.writeMem(0x8e06, { 0x64 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6465, gbc.sp());
        EXPECT(0x8e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8e06));
        // 64 009D
        gbc.setState(0xf97, 0x1fe8, 0x35f0, 0xc227, 0x8a48, 0x4375, 0x0, 0x1);
        gbc.writeMem(0xf97, { 0x64 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1fe8, gbc.sp());
        EXPECT(0xf98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 009E
        gbc.setState(0x1b4b, 0x98c7, 0x96a0, 0xafaa, 0x5a36, 0xbfd3, 0x1, 0x0);
        gbc.writeMem(0x1b4b, { 0x64 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x98c7, gbc.sp());
        EXPECT(0x1b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 009F
        gbc.setState(0x9ec7, 0xe96a, 0xba00, 0x7897, 0xb454, 0x2828, 0x0, 0x0);
        gbc.writeMem(0x9ec7, { 0x64 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe96a, gbc.sp());
        EXPECT(0x9ec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9ec7));
        // 64 00A0
        gbc.setState(0x2b60, 0xce25, 0x6790, 0x2147, 0x9963, 0xd7f9, 0x1, 0x0);
        gbc.writeMem(0x2b60, { 0x64 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xce25, gbc.sp());
        EXPECT(0x2b61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 00A1
        gbc.setState(0xebf2, 0x464, 0x40a0, 0xdc6, 0xc8fb, 0x35ab, 0x1, 0x0);
        gbc.writeMem(0xebf2, { 0x64 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x464, gbc.sp());
        EXPECT(0xebf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xebf2));
        // 64 00A2
        gbc.setState(0x93d9, 0x3369, 0xa60, 0xfc7b, 0x2aec, 0x1905, 0x0, 0x0);
        gbc.writeMem(0x93d9, { 0x64 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3369, gbc.sp());
        EXPECT(0x93da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x93d9));
        // 64 00A4
        gbc.setState(0x7ac7, 0x75cc, 0xaae0, 0xff5, 0x22ea, 0xfca2, 0x0, 0x0);
        gbc.writeMem(0x7ac7, { 0x64 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x75cc, gbc.sp());
        EXPECT(0x7ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00A5
        gbc.setState(0x1974, 0xe686, 0xe350, 0x64cb, 0x1503, 0x22c1, 0x1, 0x0);
        gbc.writeMem(0x1974, { 0x64 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe686, gbc.sp());
        EXPECT(0x1975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 00A6
        gbc.setState(0x96e1, 0x2bf, 0xcad0, 0xaed6, 0x1bb4, 0x4dde, 0x0, 0x1);
        gbc.writeMem(0x96e1, { 0x64 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2bf, gbc.sp());
        EXPECT(0x96e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x96e1));
        // 64 00A7
        gbc.setState(0x1433, 0x8ef4, 0x74e0, 0x7655, 0xc00a, 0x5bcd, 0x1, 0x1);
        gbc.writeMem(0x1433, { 0x64 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8ef4, gbc.sp());
        EXPECT(0x1434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00A8
        gbc.setState(0x977d, 0x67fb, 0xf3a0, 0x1886, 0xecaa, 0xa1f0, 0x1, 0x0);
        gbc.writeMem(0x977d, { 0x64 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x67fb, gbc.sp());
        EXPECT(0x977e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x977d));
        // 64 00A9
        gbc.setState(0xe061, 0xf49c, 0xe9e0, 0xb8a4, 0xebe, 0x38bb, 0x0, 0x0);
        gbc.writeMem(0xe061, { 0x64 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf49c, gbc.sp());
        EXPECT(0xe062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe061));
        // 64 00AA
        gbc.setState(0x666, 0x76cb, 0xa480, 0xe77e, 0xbf13, 0x7208, 0x1, 0x1);
        gbc.writeMem(0x666, { 0x64 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x76cb, gbc.sp());
        EXPECT(0x667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00AB
        gbc.setState(0xe81f, 0x7731, 0x2130, 0x196a, 0xafbc, 0x972b, 0x1, 0x1);
        gbc.writeMem(0xe81f, { 0x64 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7731, gbc.sp());
        EXPECT(0xe820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe81f));
        // 64 00AC
        gbc.setState(0xd338, 0x9773, 0x6ef0, 0x643e, 0x4596, 0x4377, 0x1, 0x0);
        gbc.writeMem(0xd338, { 0x64 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9773, gbc.sp());
        EXPECT(0xd339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd338));
        // 64 00AD
        gbc.setState(0x9611, 0xed4d, 0xdf0, 0xb44, 0x6b5a, 0x2bbd, 0x1, 0x1);
        gbc.writeMem(0x9611, { 0x64 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xed4d, gbc.sp());
        EXPECT(0x9612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9611));
        // 64 00AE
        gbc.setState(0x7429, 0xecd4, 0x9fc0, 0x233, 0x580f, 0xd286, 0x1, 0x1);
        gbc.writeMem(0x7429, { 0x64 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xecd4, gbc.sp());
        EXPECT(0x742a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00AF
        gbc.setState(0xb2d8, 0x9080, 0xff00, 0x59d7, 0x60eb, 0x637b, 0x1, 0x1);
        gbc.writeMem(0xb2d8, { 0x64 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9080, gbc.sp());
        EXPECT(0xb2d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb2d8));
        // 64 00B0
        gbc.setState(0x6e28, 0xb53f, 0x68b0, 0x63ae, 0x3826, 0x5f92, 0x0, 0x0);
        gbc.writeMem(0x6e28, { 0x64 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb53f, gbc.sp());
        EXPECT(0x6e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 00B1
        gbc.setState(0x4149, 0x4ee1, 0x3420, 0x95bc, 0x4c1c, 0xa209, 0x0, 0x1);
        gbc.writeMem(0x4149, { 0x64 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4ee1, gbc.sp());
        EXPECT(0x414a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00B2
        gbc.setState(0x8717, 0x1e31, 0x7e40, 0x163f, 0xc570, 0x8e78, 0x0, 0x1);
        gbc.writeMem(0x8717, { 0x64 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1e31, gbc.sp());
        EXPECT(0x8718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8717));
        // 64 00B3
        gbc.setState(0xc771, 0xbf3a, 0x1760, 0xaece, 0x330, 0xb897, 0x1, 0x1);
        gbc.writeMem(0xc771, { 0x64 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbf3a, gbc.sp());
        EXPECT(0xc772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc771));
        // 64 00B4
        gbc.setState(0x7e8b, 0x284e, 0x760, 0x935a, 0x59e2, 0x80ce, 0x1, 0x1);
        gbc.writeMem(0x7e8b, { 0x64 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x284e, gbc.sp());
        EXPECT(0x7e8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00B5
        gbc.setState(0xaa5, 0x2810, 0xda40, 0x7aca, 0x5db3, 0x9589, 0x1, 0x1);
        gbc.writeMem(0xaa5, { 0x64 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2810, gbc.sp());
        EXPECT(0xaa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00B6
        gbc.setState(0xa0cc, 0x7acc, 0xa800, 0x18af, 0x16cc, 0x4ede, 0x1, 0x1);
        gbc.writeMem(0xa0cc, { 0x64 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7acc, gbc.sp());
        EXPECT(0xa0cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa0cc));
        // 64 00B7
        gbc.setState(0x46f9, 0xc423, 0x65c0, 0xf250, 0xb081, 0x46ee, 0x1, 0x0);
        gbc.writeMem(0x46f9, { 0x64 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc423, gbc.sp());
        EXPECT(0x46fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00B8
        gbc.setState(0x6c8d, 0xa9b4, 0x82a0, 0x5179, 0x35f2, 0x1dd, 0x0, 0x0);
        gbc.writeMem(0x6c8d, { 0x64 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa9b4, gbc.sp());
        EXPECT(0x6c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00B9
        gbc.setState(0x2c5d, 0xfe84, 0x5900, 0x61c6, 0x6a5e, 0xbc09, 0x1, 0x1);
        gbc.writeMem(0x2c5d, { 0x64 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xfe84, gbc.sp());
        EXPECT(0x2c5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00BA
        gbc.setState(0xcfc8, 0x5e7d, 0x8f0, 0xf2d0, 0xe2b, 0x45f5, 0x1, 0x1);
        gbc.writeMem(0xcfc8, { 0x64 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5e7d, gbc.sp());
        EXPECT(0xcfc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xcfc8));
        // 64 00BC
        gbc.setState(0x1fba, 0x88c7, 0xb8b0, 0x28c3, 0x73ff, 0xed6d, 0x1, 0x1);
        gbc.writeMem(0x1fba, { 0x64 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x88c7, gbc.sp());
        EXPECT(0x1fbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 00BD
        gbc.setState(0x905d, 0xf82d, 0x7250, 0x1083, 0xdc0b, 0xf041, 0x0, 0x0);
        gbc.writeMem(0x905d, { 0x64 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf82d, gbc.sp());
        EXPECT(0x905e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x905d));
        // 64 00BE
        gbc.setState(0x4c6a, 0x4cd8, 0xbac0, 0xf075, 0x817b, 0x1f2e, 0x0, 0x0);
        gbc.writeMem(0x4c6a, { 0x64 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4cd8, gbc.sp());
        EXPECT(0x4c6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00BF
        gbc.setState(0x6812, 0x6870, 0x4380, 0xc41f, 0x6d4e, 0x9d49, 0x0, 0x1);
        gbc.writeMem(0x6812, { 0x64 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6870, gbc.sp());
        EXPECT(0x6813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00C0
        gbc.setState(0x267c, 0x22ec, 0x8040, 0xf21b, 0x478c, 0xc1d7, 0x1, 0x0);
        gbc.writeMem(0x267c, { 0x64 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x22ec, gbc.sp());
        EXPECT(0x267d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00C1
        gbc.setState(0xa271, 0xee66, 0x5990, 0xfa2b, 0x32e2, 0xfffb, 0x1, 0x0);
        gbc.writeMem(0xa271, { 0x64 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xee66, gbc.sp());
        EXPECT(0xa272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa271));
        // 64 00C2
        gbc.setState(0x2018, 0x386, 0xa620, 0xa562, 0x51c0, 0x1e20, 0x1, 0x1);
        gbc.writeMem(0x2018, { 0x64 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x386, gbc.sp());
        EXPECT(0x2019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00C3
        gbc.setState(0x3215, 0xd4c9, 0x58c0, 0x52b6, 0xd9a7, 0xb73d, 0x0, 0x0);
        gbc.writeMem(0x3215, { 0x64 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd4c9, gbc.sp());
        EXPECT(0x3216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00C4
        gbc.setState(0x58a1, 0x736e, 0x40e0, 0xb7d0, 0x20ce, 0xe3a7, 0x0, 0x0);
        gbc.writeMem(0x58a1, { 0x64 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x736e, gbc.sp());
        EXPECT(0x58a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00C5
        gbc.setState(0xe0ff, 0x99e8, 0x6a60, 0x5731, 0x78d1, 0xecec, 0x1, 0x1);
        gbc.writeMem(0xe0ff, { 0x64 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x99e8, gbc.sp());
        EXPECT(0xe100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe0ff));
        // 64 00C6
        gbc.setState(0x4127, 0x4b03, 0x1270, 0x606, 0x58b9, 0xf286, 0x0, 0x0);
        gbc.writeMem(0x4127, { 0x64 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4b03, gbc.sp());
        EXPECT(0x4128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 00C7
        gbc.setState(0xa204, 0x1db, 0xbcc0, 0xb9c3, 0xc840, 0xe41e, 0x0, 0x1);
        gbc.writeMem(0xa204, { 0x64 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1db, gbc.sp());
        EXPECT(0xa205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa204));
        // 64 00C8
        gbc.setState(0x8335, 0xcaf, 0x46d0, 0x734b, 0x16cb, 0xae8c, 0x1, 0x0);
        gbc.writeMem(0x8335, { 0x64 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcaf, gbc.sp());
        EXPECT(0x8336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8335));
        // 64 00C9
        gbc.setState(0x1f04, 0x9a78, 0x2ed0, 0x7f49, 0xa9b8, 0x911b, 0x0, 0x1);
        gbc.writeMem(0x1f04, { 0x64 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9a78, gbc.sp());
        EXPECT(0x1f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 00CA
        gbc.setState(0xeeb0, 0x511c, 0x5600, 0x71b0, 0xe063, 0x345e, 0x0, 0x0);
        gbc.writeMem(0xeeb0, { 0x64 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x511c, gbc.sp());
        EXPECT(0xeeb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xeeb0));
        // 64 00CB
        gbc.setState(0xc6cc, 0x4563, 0x88d0, 0x5386, 0x3b45, 0x1a8c, 0x0, 0x0);
        gbc.writeMem(0xc6cc, { 0x64 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4563, gbc.sp());
        EXPECT(0xc6cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc6cc));
        // 64 00CC
        gbc.setState(0x911a, 0x31ca, 0xb630, 0xa2b8, 0xe48, 0x2e5e, 0x1, 0x1);
        gbc.writeMem(0x911a, { 0x64 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x31ca, gbc.sp());
        EXPECT(0x911b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x911a));
        // 64 00CD
        gbc.setState(0x2de5, 0x5f8a, 0x71c0, 0xbf98, 0xa2e3, 0x798, 0x0, 0x0);
        gbc.writeMem(0x2de5, { 0x64 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5f8a, gbc.sp());
        EXPECT(0x2de6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00CE
        gbc.setState(0xc4d7, 0xdf3a, 0xd470, 0x6496, 0xa53b, 0x3114, 0x1, 0x0);
        gbc.writeMem(0xc4d7, { 0x64 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdf3a, gbc.sp());
        EXPECT(0xc4d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc4d7));
        // 64 00CF
        gbc.setState(0xbe51, 0x7cbe, 0xdda0, 0x516d, 0x147c, 0x6deb, 0x1, 0x1);
        gbc.writeMem(0xbe51, { 0x64 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7cbe, gbc.sp());
        EXPECT(0xbe52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xbe51));
        // 64 00D0
        gbc.setState(0xb980, 0x2218, 0x40e0, 0xa474, 0x7d09, 0xf8dd, 0x0, 0x1);
        gbc.writeMem(0xb980, { 0x64 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2218, gbc.sp());
        EXPECT(0xb981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb980));
        // 64 00D1
        gbc.setState(0x7279, 0x9642, 0x1760, 0xa2d, 0x27bf, 0x526f, 0x0, 0x1);
        gbc.writeMem(0x7279, { 0x64 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9642, gbc.sp());
        EXPECT(0x727a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00D2
        gbc.setState(0xd06e, 0x9839, 0x7ef0, 0x6dcb, 0xa06a, 0xbec1, 0x1, 0x0);
        gbc.writeMem(0xd06e, { 0x64 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9839, gbc.sp());
        EXPECT(0xd06f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd06e));
        // 64 00D3
        gbc.setState(0x8e72, 0x97c2, 0x1a0, 0xa85a, 0x7995, 0x9356, 0x0, 0x0);
        gbc.writeMem(0x8e72, { 0x64 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x97c2, gbc.sp());
        EXPECT(0x8e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8e72));
        // 64 00D4
        gbc.setState(0xadce, 0x4a9, 0x1b40, 0xd99d, 0x9268, 0xdb3a, 0x0, 0x1);
        gbc.writeMem(0xadce, { 0x64 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4a9, gbc.sp());
        EXPECT(0xadcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xadce));
        // 64 00D5
        gbc.setState(0x91f5, 0x2135, 0xa8d0, 0x91f0, 0xb5e0, 0x7f44, 0x0, 0x0);
        gbc.writeMem(0x91f5, { 0x64 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2135, gbc.sp());
        EXPECT(0x91f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x91f5));
        // 64 00D6
        gbc.setState(0x4211, 0xd6d2, 0x4720, 0xcd07, 0x1916, 0x8d36, 0x0, 0x0);
        gbc.writeMem(0x4211, { 0x64 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd6d2, gbc.sp());
        EXPECT(0x4212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00D7
        gbc.setState(0xd5b7, 0x178e, 0x260, 0x22f4, 0x3dd6, 0x8b9, 0x1, 0x1);
        gbc.writeMem(0xd5b7, { 0x64 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x178e, gbc.sp());
        EXPECT(0xd5b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd5b7));
        // 64 00D8
        gbc.setState(0xbdc0, 0x26b4, 0xfd80, 0x8115, 0xf036, 0xa20e, 0x0, 0x0);
        gbc.writeMem(0xbdc0, { 0x64 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x26b4, gbc.sp());
        EXPECT(0xbdc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xbdc0));
        // 64 00D9
        gbc.setState(0x7836, 0x2b5e, 0x5f60, 0xe3ec, 0xf65, 0xb9f3, 0x0, 0x0);
        gbc.writeMem(0x7836, { 0x64 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2b5e, gbc.sp());
        EXPECT(0x7837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00DA
        gbc.setState(0x3f7f, 0x2a2b, 0x1660, 0x375d, 0xc6be, 0xabb1, 0x0, 0x0);
        gbc.writeMem(0x3f7f, { 0x64 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2a2b, gbc.sp());
        EXPECT(0x3f80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00DB
        gbc.setState(0x5ff3, 0x14c3, 0xfe70, 0xede0, 0x24c7, 0x8059, 0x1, 0x1);
        gbc.writeMem(0x5ff3, { 0x64 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x14c3, gbc.sp());
        EXPECT(0x5ff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 00DC
        gbc.setState(0x3142, 0x94e3, 0x8d60, 0x2a2e, 0xc757, 0xe9fc, 0x1, 0x0);
        gbc.writeMem(0x3142, { 0x64 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x94e3, gbc.sp());
        EXPECT(0x3143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00DD
        gbc.setState(0xac8a, 0xdad1, 0x2850, 0x4a50, 0x1b7f, 0x7af8, 0x1, 0x1);
        gbc.writeMem(0xac8a, { 0x64 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdad1, gbc.sp());
        EXPECT(0xac8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xac8a));
        // 64 00E0
        gbc.setState(0x2547, 0x6484, 0x5780, 0x871d, 0x254f, 0xd38e, 0x1, 0x1);
        gbc.writeMem(0x2547, { 0x64 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6484, gbc.sp());
        EXPECT(0x2548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00E2
        gbc.setState(0x7807, 0x4c13, 0x2580, 0xbcf5, 0x99f5, 0x987c, 0x0, 0x1);
        gbc.writeMem(0x7807, { 0x64 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4c13, gbc.sp());
        EXPECT(0x7808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00E3
        gbc.setState(0x223, 0xf725, 0x6710, 0xe47, 0xc086, 0xe63, 0x0, 0x1);
        gbc.writeMem(0x223, { 0x64 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf725, gbc.sp());
        EXPECT(0x224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 00E4
        gbc.setState(0x985b, 0x1c78, 0x81e0, 0xa4d3, 0x50f, 0x6bd2, 0x1, 0x0);
        gbc.writeMem(0x985b, { 0x64 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1c78, gbc.sp());
        EXPECT(0x985c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x985b));
        // 64 00E5
        gbc.setState(0xb9cd, 0x8405, 0x2140, 0x45d4, 0x7f8a, 0xfa24, 0x1, 0x0);
        gbc.writeMem(0xb9cd, { 0x64 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8405, gbc.sp());
        EXPECT(0xb9ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb9cd));
        // 64 00E6
        gbc.setState(0x24b4, 0x47f2, 0x1270, 0xebe4, 0x1d95, 0x7063, 0x1, 0x1);
        gbc.writeMem(0x24b4, { 0x64 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x47f2, gbc.sp());
        EXPECT(0x24b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 00E7
        gbc.setState(0x148f, 0xe97e, 0x57f0, 0xa1ba, 0xf5d3, 0x2dec, 0x1, 0x1);
        gbc.writeMem(0x148f, { 0x64 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe97e, gbc.sp());
        EXPECT(0x1490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 00E8
        gbc.setState(0x2836, 0x4b8b, 0x5360, 0xaef0, 0xea4b, 0x8bbb, 0x0, 0x0);
        gbc.writeMem(0x2836, { 0x64 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4b8b, gbc.sp());
        EXPECT(0x2837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00E9
        gbc.setState(0x15bb, 0x5d4a, 0x1bb0, 0x4d8d, 0xf588, 0x7522, 0x1, 0x1);
        gbc.writeMem(0x15bb, { 0x64 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5d4a, gbc.sp());
        EXPECT(0x15bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 00EA
        gbc.setState(0xbbc6, 0xf333, 0x8410, 0x9187, 0x1346, 0xf60e, 0x1, 0x1);
        gbc.writeMem(0xbbc6, { 0x64 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf333, gbc.sp());
        EXPECT(0xbbc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xbbc6));
        // 64 00EB
        gbc.setState(0xccc0, 0x905, 0xf440, 0xae83, 0xc2b, 0xa2ff, 0x1, 0x1);
        gbc.writeMem(0xccc0, { 0x64 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x905, gbc.sp());
        EXPECT(0xccc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xccc0));
        // 64 00EC
        gbc.setState(0x9c29, 0xa12b, 0xad20, 0xb60a, 0xce2a, 0xb8e4, 0x1, 0x0);
        gbc.writeMem(0x9c29, { 0x64 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa12b, gbc.sp());
        EXPECT(0x9c2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9c29));
        // 64 00ED
        gbc.setState(0x2616, 0xdb4c, 0xaa40, 0x68c3, 0x5a9d, 0xfdbb, 0x0, 0x0);
        gbc.writeMem(0x2616, { 0x64 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdb4c, gbc.sp());
        EXPECT(0x2617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00EE
        gbc.setState(0x80e0, 0xb034, 0xf050, 0x3947, 0xc103, 0x12ca, 0x1, 0x1);
        gbc.writeMem(0x80e0, { 0x64 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb034, gbc.sp());
        EXPECT(0x80e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x80e0));
        // 64 00F0
        gbc.setState(0xc53c, 0x80e5, 0x42a0, 0xde2e, 0x585f, 0x1bb4, 0x1, 0x1);
        gbc.writeMem(0xc53c, { 0x64 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x80e5, gbc.sp());
        EXPECT(0xc53d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc53c));
        // 64 00F1
        gbc.setState(0x9b54, 0x8643, 0x35a0, 0x6674, 0x9002, 0x6365, 0x1, 0x1);
        gbc.writeMem(0x9b54, { 0x64 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8643, gbc.sp());
        EXPECT(0x9b55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9b54));
        // 64 00F2
        gbc.setState(0x7392, 0x8e21, 0xda50, 0x7dd0, 0x478e, 0x4d8b, 0x1, 0x0);
        gbc.writeMem(0x7392, { 0x64 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8e21, gbc.sp());
        EXPECT(0x7393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 00F3
        gbc.setState(0xad58, 0x41f3, 0x4370, 0x355d, 0x6c86, 0x117e, 0x1, 0x0);
        gbc.writeMem(0xad58, { 0x64 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x41f3, gbc.sp());
        EXPECT(0xad59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xad58));
        // 64 00F4
        gbc.setState(0x1c04, 0x9b5e, 0xf5d0, 0xd0cc, 0x4c4, 0x2ba8, 0x0, 0x1);
        gbc.writeMem(0x1c04, { 0x64 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9b5e, gbc.sp());
        EXPECT(0x1c05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 00F5
        gbc.setState(0xd73a, 0xc345, 0x3aa0, 0xe8f5, 0x4a3, 0xa02a, 0x0, 0x0);
        gbc.writeMem(0xd73a, { 0x64 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc345, gbc.sp());
        EXPECT(0xd73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd73a));
        // 64 00F6
        gbc.setState(0x250b, 0x35bf, 0x7a80, 0x99c4, 0x72b2, 0xbc5d, 0x1, 0x0);
        gbc.writeMem(0x250b, { 0x64 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x35bf, gbc.sp());
        EXPECT(0x250c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 00F7
        gbc.setState(0x7d74, 0xb984, 0x30f0, 0x2058, 0xb320, 0xf7a4, 0x1, 0x0);
        gbc.writeMem(0x7d74, { 0x64 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb984, gbc.sp());
        EXPECT(0x7d75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 00F8
        gbc.setState(0x9029, 0x7fbe, 0x6d40, 0xb6b2, 0xc807, 0x32b4, 0x0, 0x0);
        gbc.writeMem(0x9029, { 0x64 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7fbe, gbc.sp());
        EXPECT(0x902a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9029));
        // 64 00F9
        gbc.setState(0xa880, 0x58c5, 0xffb0, 0xc22f, 0xf495, 0x6d54, 0x1, 0x1);
        gbc.writeMem(0xa880, { 0x64 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x58c5, gbc.sp());
        EXPECT(0xa881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa880));
        // 64 00FA
        gbc.setState(0x8b02, 0x4fdd, 0xc8d0, 0x81df, 0xc017, 0xe43a, 0x1, 0x0);
        gbc.writeMem(0x8b02, { 0x64 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4fdd, gbc.sp());
        EXPECT(0x8b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8b02));
        // 64 00FC
        gbc.setState(0xaeca, 0xa859, 0x71b0, 0x498e, 0xdc1d, 0xaca4, 0x0, 0x0);
        gbc.writeMem(0xaeca, { 0x64 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa859, gbc.sp());
        EXPECT(0xaecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xaeca));
        // 64 00FD
        gbc.setState(0x733, 0x9d7f, 0xc2d0, 0xb716, 0x2cb1, 0x41a8, 0x1, 0x0);
        gbc.writeMem(0x733, { 0x64 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9d7f, gbc.sp());
        EXPECT(0x734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 00FF
        gbc.setState(0x90cf, 0xa0d8, 0xa780, 0xea0e, 0x60af, 0x25c6, 0x0, 0x0);
        gbc.writeMem(0x90cf, { 0x64 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa0d8, gbc.sp());
        EXPECT(0x90d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x90cf));
        // 64 0100
        gbc.setState(0x3ff9, 0x88ea, 0xfac0, 0xe1c8, 0x6634, 0xb7b5, 0x0, 0x1);
        gbc.writeMem(0x3ff9, { 0x64 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x88ea, gbc.sp());
        EXPECT(0x3ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0101
        gbc.setState(0x1972, 0xcb39, 0x46b0, 0x5591, 0xe600, 0x171f, 0x1, 0x1);
        gbc.writeMem(0x1972, { 0x64 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xcb39, gbc.sp());
        EXPECT(0x1973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0102
        gbc.setState(0x93ec, 0xbfcb, 0x2170, 0x7e68, 0x83d8, 0xab81, 0x1, 0x1);
        gbc.writeMem(0x93ec, { 0x64 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbfcb, gbc.sp());
        EXPECT(0x93ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x93ec));
        // 64 0103
        gbc.setState(0x6df8, 0x9811, 0x7a00, 0x41f, 0xca5d, 0x415e, 0x0, 0x0);
        gbc.writeMem(0x6df8, { 0x64 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9811, gbc.sp());
        EXPECT(0x6df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0104
        gbc.setState(0x3e44, 0x2b23, 0x6c60, 0xa324, 0x1b9d, 0x91fe, 0x0, 0x0);
        gbc.writeMem(0x3e44, { 0x64 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2b23, gbc.sp());
        EXPECT(0x3e45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0105
        gbc.setState(0x2bd5, 0xce6e, 0xd910, 0xe798, 0x8010, 0xc201, 0x1, 0x0);
        gbc.writeMem(0x2bd5, { 0x64 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xce6e, gbc.sp());
        EXPECT(0x2bd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0106
        gbc.setState(0xd9de, 0x4352, 0x16a0, 0xaa7a, 0x74e8, 0x6501, 0x0, 0x0);
        gbc.writeMem(0xd9de, { 0x64 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4352, gbc.sp());
        EXPECT(0xd9df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd9de));
        // 64 0107
        gbc.setState(0xabf6, 0x6130, 0x6ba0, 0xe518, 0x1a12, 0x1a1, 0x0, 0x0);
        gbc.writeMem(0xabf6, { 0x64 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6130, gbc.sp());
        EXPECT(0xabf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xabf6));
        // 64 0108
        gbc.setState(0x39dd, 0x58c8, 0x7290, 0xff62, 0x71c2, 0xee5e, 0x0, 0x1);
        gbc.writeMem(0x39dd, { 0x64 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x58c8, gbc.sp());
        EXPECT(0x39de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0109
        gbc.setState(0x3eae, 0x9ca3, 0xd680, 0x12e2, 0x1781, 0x6913, 0x1, 0x1);
        gbc.writeMem(0x3eae, { 0x64 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9ca3, gbc.sp());
        EXPECT(0x3eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 010A
        gbc.setState(0xa0d4, 0xdb03, 0x3020, 0xd20b, 0xe797, 0xd0f5, 0x1, 0x1);
        gbc.writeMem(0xa0d4, { 0x64 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdb03, gbc.sp());
        EXPECT(0xa0d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa0d4));
        // 64 010B
        gbc.setState(0xe262, 0x5986, 0xfe80, 0x12da, 0xb0f4, 0x9aed, 0x1, 0x0);
        gbc.writeMem(0xe262, { 0x64 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5986, gbc.sp());
        EXPECT(0xe263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe262));
        // 64 010C
        gbc.setState(0x359c, 0x9e39, 0x1ad0, 0x37bf, 0x6c2f, 0xe15c, 0x0, 0x0);
        gbc.writeMem(0x359c, { 0x64 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9e39, gbc.sp());
        EXPECT(0x359d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 010D
        gbc.setState(0x83c0, 0xa7ed, 0x4ca0, 0xc717, 0x7424, 0x725d, 0x0, 0x0);
        gbc.writeMem(0x83c0, { 0x64 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa7ed, gbc.sp());
        EXPECT(0x83c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x83c0));
        // 64 010E
        gbc.setState(0x9a11, 0xf924, 0x7840, 0x2502, 0x8ae0, 0x16a8, 0x0, 0x1);
        gbc.writeMem(0x9a11, { 0x64 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf924, gbc.sp());
        EXPECT(0x9a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9a11));
        // 64 010F
        gbc.setState(0xaf5c, 0x7a05, 0x540, 0xf199, 0x460, 0xc0d8, 0x1, 0x1);
        gbc.writeMem(0xaf5c, { 0x64 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7a05, gbc.sp());
        EXPECT(0xaf5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xaf5c));
        // 64 0110
        gbc.setState(0x8a09, 0xba2c, 0x17b0, 0x5286, 0x3493, 0x75f8, 0x0, 0x1);
        gbc.writeMem(0x8a09, { 0x64 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xba2c, gbc.sp());
        EXPECT(0x8a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8a09));
        // 64 0111
        gbc.setState(0x5725, 0x904d, 0x5b0, 0xdcf, 0xe30b, 0x9b00, 0x1, 0x1);
        gbc.writeMem(0x5725, { 0x64 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x904d, gbc.sp());
        EXPECT(0x5726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0112
        gbc.setState(0xe828, 0x2401, 0x6c30, 0x1c66, 0xb1e, 0xf291, 0x1, 0x1);
        gbc.writeMem(0xe828, { 0x64 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2401, gbc.sp());
        EXPECT(0xe829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe828));
        // 64 0113
        gbc.setState(0x66e2, 0x3dc4, 0x30c0, 0xeff0, 0x4cd, 0x1500, 0x0, 0x1);
        gbc.writeMem(0x66e2, { 0x64 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3dc4, gbc.sp());
        EXPECT(0x66e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0114
        gbc.setState(0xd7cf, 0x3fd1, 0xd840, 0x5fb9, 0x1db5, 0xcfff, 0x0, 0x1);
        gbc.writeMem(0xd7cf, { 0x64 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3fd1, gbc.sp());
        EXPECT(0xd7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd7cf));
        // 64 0115
        gbc.setState(0x9146, 0x8e5d, 0x1e80, 0x36e5, 0x55b8, 0xcece, 0x0, 0x0);
        gbc.writeMem(0x9146, { 0x64 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8e5d, gbc.sp());
        EXPECT(0x9147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9146));
        // 64 0116
        gbc.setState(0x434e, 0xd7df, 0x9050, 0x8cb1, 0x6e05, 0x43ad, 0x0, 0x0);
        gbc.writeMem(0x434e, { 0x64 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd7df, gbc.sp());
        EXPECT(0x434f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0117
        gbc.setState(0x8ac9, 0xd42c, 0xcbe0, 0xde31, 0xe4ca, 0xc9e8, 0x1, 0x0);
        gbc.writeMem(0x8ac9, { 0x64 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd42c, gbc.sp());
        EXPECT(0x8aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8ac9));
        // 64 0118
        gbc.setState(0x7b81, 0xc84a, 0x4360, 0x94ed, 0x87c5, 0xefbd, 0x0, 0x0);
        gbc.writeMem(0x7b81, { 0x64 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc84a, gbc.sp());
        EXPECT(0x7b82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0119
        gbc.setState(0x1876, 0xbaac, 0x11f0, 0x66be, 0x285, 0x15f2, 0x1, 0x0);
        gbc.writeMem(0x1876, { 0x64 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xbaac, gbc.sp());
        EXPECT(0x1877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 011A
        gbc.setState(0x756, 0x61a9, 0x8e60, 0x84f, 0x548a, 0x44b5, 0x0, 0x1);
        gbc.writeMem(0x756, { 0x64 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x61a9, gbc.sp());
        EXPECT(0x757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 011B
        gbc.setState(0x9be7, 0x33df, 0x66d0, 0x574d, 0xe98a, 0xeb5f, 0x1, 0x1);
        gbc.writeMem(0x9be7, { 0x64 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x33df, gbc.sp());
        EXPECT(0x9be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9be7));
        // 64 011C
        gbc.setState(0x817f, 0x4792, 0x11d0, 0x3de8, 0x9f42, 0xdcba, 0x1, 0x0);
        gbc.writeMem(0x817f, { 0x64 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4792, gbc.sp());
        EXPECT(0x8180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x817f));
        // 64 011D
        gbc.setState(0xd95d, 0xcc60, 0xd290, 0xa477, 0x1079, 0x743b, 0x1, 0x0);
        gbc.writeMem(0xd95d, { 0x64 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xcc60, gbc.sp());
        EXPECT(0xd95e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd95d));
        // 64 011E
        gbc.setState(0xa4c1, 0x42ed, 0x1500, 0xe491, 0x2769, 0xe3b2, 0x1, 0x1);
        gbc.writeMem(0xa4c1, { 0x64 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x42ed, gbc.sp());
        EXPECT(0xa4c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa4c1));
        // 64 0120
        gbc.setState(0x2140, 0x38d9, 0xe9e0, 0x2aae, 0x96c2, 0x89a0, 0x1, 0x0);
        gbc.writeMem(0x2140, { 0x64 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x38d9, gbc.sp());
        EXPECT(0x2141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0121
        gbc.setState(0x5d20, 0xc623, 0x6bf0, 0xc3a8, 0xee7c, 0x5b94, 0x1, 0x1);
        gbc.writeMem(0x5d20, { 0x64 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc623, gbc.sp());
        EXPECT(0x5d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0122
        gbc.setState(0xe0ce, 0x973b, 0xbf60, 0x1de, 0x5ef4, 0x584d, 0x1, 0x0);
        gbc.writeMem(0xe0ce, { 0x64 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x973b, gbc.sp());
        EXPECT(0xe0cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe0ce));
        // 64 0123
        gbc.setState(0xd839, 0x3cd7, 0xa280, 0xebfa, 0x6eb2, 0xe650, 0x1, 0x0);
        gbc.writeMem(0xd839, { 0x64 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3cd7, gbc.sp());
        EXPECT(0xd83a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd839));
        // 64 0124
        gbc.setState(0x7114, 0xdf0a, 0x7940, 0x52ef, 0xebd5, 0x54c4, 0x1, 0x0);
        gbc.writeMem(0x7114, { 0x64 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdf0a, gbc.sp());
        EXPECT(0x7115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0125
        gbc.setState(0x5f8f, 0x76f, 0xe430, 0x5177, 0xc2b2, 0x3e15, 0x0, 0x0);
        gbc.writeMem(0x5f8f, { 0x64 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x76f, gbc.sp());
        EXPECT(0x5f90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0126
        gbc.setState(0x26c3, 0x986a, 0xa970, 0x8f3a, 0xeaa3, 0xce1d, 0x1, 0x1);
        gbc.writeMem(0x26c3, { 0x64 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x986a, gbc.sp());
        EXPECT(0x26c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0127
        gbc.setState(0xd503, 0x47e4, 0xd660, 0x9324, 0x2e44, 0xcc8d, 0x0, 0x1);
        gbc.writeMem(0xd503, { 0x64 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x47e4, gbc.sp());
        EXPECT(0xd504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd503));
        // 64 0129
        gbc.setState(0xb45a, 0x87e4, 0x2750, 0x1884, 0xd260, 0xd9e6, 0x1, 0x1);
        gbc.writeMem(0xb45a, { 0x64 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x87e4, gbc.sp());
        EXPECT(0xb45b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb45a));
        // 64 012A
        gbc.setState(0x7279, 0xab40, 0x87f0, 0x5ec1, 0xcd02, 0xca55, 0x0, 0x0);
        gbc.writeMem(0x7279, { 0x64 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xab40, gbc.sp());
        EXPECT(0x727a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 012B
        gbc.setState(0x79ce, 0x7e14, 0x3360, 0x48ab, 0xa4f5, 0xe330, 0x0, 0x0);
        gbc.writeMem(0x79ce, { 0x64 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7e14, gbc.sp());
        EXPECT(0x79cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 012C
        gbc.setState(0x7590, 0x4060, 0x9070, 0x821f, 0x674d, 0xec7b, 0x1, 0x0);
        gbc.writeMem(0x7590, { 0x64 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4060, gbc.sp());
        EXPECT(0x7591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 012D
        gbc.setState(0x1676, 0x6383, 0xc730, 0x784a, 0xb3c0, 0xea0e, 0x1, 0x1);
        gbc.writeMem(0x1676, { 0x64 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6383, gbc.sp());
        EXPECT(0x1677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 012E
        gbc.setState(0xcfe6, 0x7fa6, 0xf0b0, 0x75a7, 0xf0d1, 0x9527, 0x0, 0x0);
        gbc.writeMem(0xcfe6, { 0x64 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7fa6, gbc.sp());
        EXPECT(0xcfe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xcfe6));
        // 64 012F
        gbc.setState(0xb0f5, 0x1630, 0xd990, 0x2db2, 0xf6d0, 0xd6db, 0x1, 0x1);
        gbc.writeMem(0xb0f5, { 0x64 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1630, gbc.sp());
        EXPECT(0xb0f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb0f5));
        // 64 0130
        gbc.setState(0x810a, 0x726d, 0x40f0, 0xa6bb, 0xc265, 0xf12, 0x1, 0x0);
        gbc.writeMem(0x810a, { 0x64 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x726d, gbc.sp());
        EXPECT(0x810b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x810a));
        // 64 0131
        gbc.setState(0x7e45, 0xfd6b, 0xc910, 0x5430, 0x8013, 0xe51b, 0x1, 0x1);
        gbc.writeMem(0x7e45, { 0x64 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfd6b, gbc.sp());
        EXPECT(0x7e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0132
        gbc.setState(0xa25b, 0xf79e, 0xc820, 0x1aae, 0x5a0e, 0x5041, 0x1, 0x1);
        gbc.writeMem(0xa25b, { 0x64 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf79e, gbc.sp());
        EXPECT(0xa25c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa25b));
        // 64 0133
        gbc.setState(0xc04b, 0x3120, 0x2fb0, 0x34dd, 0xca59, 0x6bc3, 0x0, 0x0);
        gbc.writeMem(0xc04b, { 0x64 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3120, gbc.sp());
        EXPECT(0xc04c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc04b));
        // 64 0134
        gbc.setState(0x7af1, 0xe64e, 0xfcc0, 0x6b60, 0xe2d3, 0xdecf, 0x1, 0x1);
        gbc.writeMem(0x7af1, { 0x64 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe64e, gbc.sp());
        EXPECT(0x7af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0135
        gbc.setState(0x5f78, 0xfadc, 0x8b60, 0x9652, 0xc7f3, 0x7a0e, 0x1, 0x0);
        gbc.writeMem(0x5f78, { 0x64 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfadc, gbc.sp());
        EXPECT(0x5f79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0136
        gbc.setState(0x777f, 0xe9e1, 0xe480, 0x6228, 0x1be6, 0x5d7c, 0x1, 0x1);
        gbc.writeMem(0x777f, { 0x64 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe9e1, gbc.sp());
        EXPECT(0x7780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0137
        gbc.setState(0xcde9, 0x59d6, 0xc280, 0x9d05, 0x7e1, 0x8c11, 0x0, 0x0);
        gbc.writeMem(0xcde9, { 0x64 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x59d6, gbc.sp());
        EXPECT(0xcdea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xcde9));
        // 64 0138
        gbc.setState(0xadc9, 0xd0c6, 0x5d50, 0xf920, 0x412b, 0xbaad, 0x0, 0x1);
        gbc.writeMem(0xadc9, { 0x64 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd0c6, gbc.sp());
        EXPECT(0xadca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xadc9));
        // 64 0139
        gbc.setState(0xb2ec, 0x6809, 0xe0, 0x6301, 0x8109, 0x239b, 0x1, 0x1);
        gbc.writeMem(0xb2ec, { 0x64 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6809, gbc.sp());
        EXPECT(0xb2ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb2ec));
        // 64 013A
        gbc.setState(0xbc3d, 0xa1fe, 0xdd10, 0x1795, 0xbb52, 0xaad7, 0x0, 0x1);
        gbc.writeMem(0xbc3d, { 0x64 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa1fe, gbc.sp());
        EXPECT(0xbc3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xbc3d));
        // 64 013B
        gbc.setState(0xc9c4, 0x4efa, 0x2e80, 0xe661, 0xf8f6, 0xe67e, 0x1, 0x0);
        gbc.writeMem(0xc9c4, { 0x64 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4efa, gbc.sp());
        EXPECT(0xc9c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc9c4));
        // 64 013C
        gbc.setState(0xa41c, 0x8fa8, 0x25d0, 0xe0ce, 0x2369, 0xa5cc, 0x0, 0x1);
        gbc.writeMem(0xa41c, { 0x64 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8fa8, gbc.sp());
        EXPECT(0xa41d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa41c));
        // 64 013D
        gbc.setState(0x7679, 0x12e, 0xcad0, 0x7b33, 0xdd5c, 0x9064, 0x1, 0x0);
        gbc.writeMem(0x7679, { 0x64 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x12e, gbc.sp());
        EXPECT(0x767a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 013E
        gbc.setState(0x5120, 0x8337, 0x2ba0, 0x7ceb, 0x6029, 0x60c1, 0x1, 0x1);
        gbc.writeMem(0x5120, { 0x64 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8337, gbc.sp());
        EXPECT(0x5121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 013F
        gbc.setState(0x94d6, 0xc0e0, 0xed70, 0x13e7, 0x72e7, 0xb3a0, 0x0, 0x1);
        gbc.writeMem(0x94d6, { 0x64 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc0e0, gbc.sp());
        EXPECT(0x94d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x94d6));
        // 64 0140
        gbc.setState(0x14a9, 0xeab8, 0xc890, 0x1b33, 0xfdf6, 0x9317, 0x1, 0x1);
        gbc.writeMem(0x14a9, { 0x64 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xeab8, gbc.sp());
        EXPECT(0x14aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0141
        gbc.setState(0xd1fd, 0xafa9, 0x3840, 0x5224, 0x3c1d, 0xdf91, 0x0, 0x1);
        gbc.writeMem(0xd1fd, { 0x64 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xafa9, gbc.sp());
        EXPECT(0xd1fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd1fd));
        // 64 0142
        gbc.setState(0x8846, 0xbbb1, 0xbb80, 0xce38, 0x31d2, 0x6e19, 0x0, 0x1);
        gbc.writeMem(0x8846, { 0x64 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbbb1, gbc.sp());
        EXPECT(0x8847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8846));
        // 64 0143
        gbc.setState(0x353f, 0x1739, 0x4870, 0x7bb2, 0x1d1a, 0x23a0, 0x1, 0x1);
        gbc.writeMem(0x353f, { 0x64 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1739, gbc.sp());
        EXPECT(0x3540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0144
        gbc.setState(0xa6c7, 0x55c8, 0x9050, 0xed48, 0x512f, 0xdb1, 0x0, 0x1);
        gbc.writeMem(0xa6c7, { 0x64 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x55c8, gbc.sp());
        EXPECT(0xa6c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa6c7));
        // 64 0145
        gbc.setState(0x4ba3, 0xd5d2, 0x1dc0, 0x8d99, 0x2f0d, 0xb77a, 0x1, 0x1);
        gbc.writeMem(0x4ba3, { 0x64 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd5d2, gbc.sp());
        EXPECT(0x4ba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0146
        gbc.setState(0x807e, 0x3bcb, 0x28a0, 0xa6cc, 0x6400, 0xcc1f, 0x0, 0x0);
        gbc.writeMem(0x807e, { 0x64 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3bcb, gbc.sp());
        EXPECT(0x807f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x807e));
        // 64 0147
        gbc.setState(0x4604, 0x8338, 0xf170, 0x8b44, 0xaf7e, 0xa86c, 0x0, 0x1);
        gbc.writeMem(0x4604, { 0x64 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8338, gbc.sp());
        EXPECT(0x4605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0148
        gbc.setState(0x8d8e, 0x4e51, 0x6640, 0x577f, 0x8c4e, 0x17e2, 0x0, 0x1);
        gbc.writeMem(0x8d8e, { 0x64 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4e51, gbc.sp());
        EXPECT(0x8d8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8d8e));
        // 64 0149
        gbc.setState(0xd346, 0x615, 0x7ed0, 0xe384, 0x586f, 0x761d, 0x0, 0x1);
        gbc.writeMem(0xd346, { 0x64 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x615, gbc.sp());
        EXPECT(0xd347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd346));
        // 64 014A
        gbc.setState(0x7459, 0xf51, 0xefe0, 0x433e, 0xe4b3, 0x2880, 0x1, 0x1);
        gbc.writeMem(0x7459, { 0x64 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf51, gbc.sp());
        EXPECT(0x745a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 014B
        gbc.setState(0x8866, 0xea4e, 0x6230, 0x8580, 0x147b, 0xda1f, 0x1, 0x0);
        gbc.writeMem(0x8866, { 0x64 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xea4e, gbc.sp());
        EXPECT(0x8867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8866));
        // 64 014C
        gbc.setState(0x9935, 0x4986, 0xc4e0, 0x7278, 0xd000, 0x1e05, 0x0, 0x1);
        gbc.writeMem(0x9935, { 0x64 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4986, gbc.sp());
        EXPECT(0x9936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9935));
        // 64 014D
        gbc.setState(0xd108, 0x9d42, 0x2460, 0x4b74, 0x3d92, 0xd4fb, 0x1, 0x1);
        gbc.writeMem(0xd108, { 0x64 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9d42, gbc.sp());
        EXPECT(0xd109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd108));
        // 64 014E
        gbc.setState(0xa4d2, 0xd829, 0x3010, 0xd58c, 0xa754, 0xb004, 0x1, 0x0);
        gbc.writeMem(0xa4d2, { 0x64 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd829, gbc.sp());
        EXPECT(0xa4d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa4d2));
        // 64 014F
        gbc.setState(0xb72b, 0x83fb, 0xc7b0, 0xeab3, 0xc60c, 0x8ac5, 0x0, 0x1);
        gbc.writeMem(0xb72b, { 0x64 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x83fb, gbc.sp());
        EXPECT(0xb72c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb72b));
        // 64 0151
        gbc.setState(0x566a, 0xc947, 0xba10, 0xc609, 0x602e, 0x2f1b, 0x1, 0x0);
        gbc.writeMem(0x566a, { 0x64 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc947, gbc.sp());
        EXPECT(0x566b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0152
        gbc.setState(0xb2c8, 0x80db, 0xdc90, 0x271b, 0x374f, 0x73f2, 0x1, 0x1);
        gbc.writeMem(0xb2c8, { 0x64 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x80db, gbc.sp());
        EXPECT(0xb2c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb2c8));
        // 64 0154
        gbc.setState(0x1a49, 0xc1a2, 0xb370, 0xeeb2, 0xd6fa, 0x1c1b, 0x1, 0x0);
        gbc.writeMem(0x1a49, { 0x64 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc1a2, gbc.sp());
        EXPECT(0x1a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0155
        gbc.setState(0x191c, 0x12dc, 0x81d0, 0x5ab6, 0x57f8, 0xf4, 0x0, 0x0);
        gbc.writeMem(0x191c, { 0x64 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x12dc, gbc.sp());
        EXPECT(0x191d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0156
        gbc.setState(0x117d, 0x3e46, 0x7f10, 0x8f28, 0x7bab, 0xd0c1, 0x1, 0x0);
        gbc.writeMem(0x117d, { 0x64 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3e46, gbc.sp());
        EXPECT(0x117e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0157
        gbc.setState(0xecd3, 0xc00c, 0xd750, 0xe00, 0x459c, 0x580c, 0x0, 0x0);
        gbc.writeMem(0xecd3, { 0x64 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc00c, gbc.sp());
        EXPECT(0xecd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xecd3));
        // 64 0158
        gbc.setState(0xd44f, 0x14ab, 0x50f0, 0x3334, 0x6fce, 0x1183, 0x0, 0x0);
        gbc.writeMem(0xd44f, { 0x64 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x14ab, gbc.sp());
        EXPECT(0xd450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd44f));
        // 64 0159
        gbc.setState(0x2732, 0x6baa, 0x5460, 0x67b3, 0x5c28, 0x58aa, 0x0, 0x0);
        gbc.writeMem(0x2732, { 0x64 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6baa, gbc.sp());
        EXPECT(0x2733, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 015A
        gbc.setState(0xa2b1, 0x7258, 0x8100, 0xb417, 0xda1a, 0x71b0, 0x0, 0x0);
        gbc.writeMem(0xa2b1, { 0x64 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7258, gbc.sp());
        EXPECT(0xa2b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa2b1));
        // 64 015B
        gbc.setState(0xdc76, 0x37a1, 0xede0, 0xaa10, 0x110f, 0x675e, 0x0, 0x0);
        gbc.writeMem(0xdc76, { 0x64 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x37a1, gbc.sp());
        EXPECT(0xdc77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xdc76));
        // 64 015C
        gbc.setState(0x79e0, 0x7c83, 0x69e0, 0xabeb, 0xaf16, 0xf353, 0x0, 0x0);
        gbc.writeMem(0x79e0, { 0x64 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7c83, gbc.sp());
        EXPECT(0x79e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 015D
        gbc.setState(0x1d77, 0x71e5, 0xed90, 0x15a, 0x12ba, 0xd970, 0x0, 0x1);
        gbc.writeMem(0x1d77, { 0x64 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x71e5, gbc.sp());
        EXPECT(0x1d78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 015E
        gbc.setState(0x7bfc, 0xfe60, 0xc5b0, 0xbe85, 0x69c3, 0x541b, 0x0, 0x1);
        gbc.writeMem(0x7bfc, { 0x64 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfe60, gbc.sp());
        EXPECT(0x7bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 015F
        gbc.setState(0xa885, 0xea4, 0xc7c0, 0x30e8, 0xa895, 0x2f03, 0x0, 0x0);
        gbc.writeMem(0xa885, { 0x64 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xea4, gbc.sp());
        EXPECT(0xa886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa885));
        // 64 0160
        gbc.setState(0x1d06, 0x9687, 0xef10, 0x3490, 0x9fa3, 0xdde, 0x1, 0x0);
        gbc.writeMem(0x1d06, { 0x64 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9687, gbc.sp());
        EXPECT(0x1d07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0161
        gbc.setState(0x74a4, 0xc1cd, 0x5af0, 0x358e, 0x2c38, 0xe917, 0x1, 0x1);
        gbc.writeMem(0x74a4, { 0x64 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc1cd, gbc.sp());
        EXPECT(0x74a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0162
        gbc.setState(0x504c, 0x55c2, 0x7110, 0x338f, 0x650a, 0x1521, 0x1, 0x0);
        gbc.writeMem(0x504c, { 0x64 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x55c2, gbc.sp());
        EXPECT(0x504d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0163
        gbc.setState(0xc81a, 0xb7c4, 0xf960, 0xb76f, 0xcab, 0xacc3, 0x0, 0x0);
        gbc.writeMem(0xc81a, { 0x64 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb7c4, gbc.sp());
        EXPECT(0xc81b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc81a));
        // 64 0164
        gbc.setState(0x72b4, 0x7523, 0x98a0, 0x7709, 0xb55a, 0xbdf1, 0x0, 0x1);
        gbc.writeMem(0x72b4, { 0x64 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7523, gbc.sp());
        EXPECT(0x72b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0165
        gbc.setState(0x41bd, 0x1f86, 0x70c0, 0x8e6a, 0x25a8, 0xfb58, 0x0, 0x1);
        gbc.writeMem(0x41bd, { 0x64 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1f86, gbc.sp());
        EXPECT(0x41be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0166
        gbc.setState(0x2c26, 0x532, 0xecc0, 0x6782, 0xb5d3, 0x526f, 0x1, 0x1);
        gbc.writeMem(0x2c26, { 0x64 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x532, gbc.sp());
        EXPECT(0x2c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0167
        gbc.setState(0xb692, 0x1ceb, 0xed40, 0x1d3b, 0x6c3c, 0x77fd, 0x0, 0x1);
        gbc.writeMem(0xb692, { 0x64 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1ceb, gbc.sp());
        EXPECT(0xb693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb692));
        // 64 0169
        gbc.setState(0x7f9d, 0x551d, 0x9310, 0x1c4, 0x30b4, 0x6f9d, 0x0, 0x0);
        gbc.writeMem(0x7f9d, { 0x64 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x551d, gbc.sp());
        EXPECT(0x7f9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 016A
        gbc.setState(0x98ab, 0x567, 0x4cd0, 0xe08f, 0xf925, 0xeddc, 0x0, 0x1);
        gbc.writeMem(0x98ab, { 0x64 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x567, gbc.sp());
        EXPECT(0x98ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x98ab));
        // 64 016B
        gbc.setState(0xa66d, 0x547e, 0x5770, 0xf9c1, 0xa899, 0xf4f2, 0x0, 0x1);
        gbc.writeMem(0xa66d, { 0x64 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x547e, gbc.sp());
        EXPECT(0xa66e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa66d));
        // 64 016C
        gbc.setState(0x7b5b, 0x370a, 0xe8d0, 0x519f, 0xe109, 0xad1f, 0x1, 0x1);
        gbc.writeMem(0x7b5b, { 0x64 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x370a, gbc.sp());
        EXPECT(0x7b5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 016D
        gbc.setState(0xa38c, 0xe899, 0x5930, 0xf4e7, 0xbd31, 0x99eb, 0x0, 0x1);
        gbc.writeMem(0xa38c, { 0x64 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe899, gbc.sp());
        EXPECT(0xa38d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa38c));
        // 64 016E
        gbc.setState(0x6a5f, 0x833, 0xc3e0, 0xdf16, 0x1399, 0xb818, 0x0, 0x1);
        gbc.writeMem(0x6a5f, { 0x64 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x833, gbc.sp());
        EXPECT(0x6a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 016F
        gbc.setState(0x384, 0xcdd2, 0x4cd0, 0x4b06, 0x8d29, 0x5c96, 0x1, 0x0);
        gbc.writeMem(0x384, { 0x64 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xcdd2, gbc.sp());
        EXPECT(0x385, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0170
        gbc.setState(0x86aa, 0x7044, 0x45a0, 0xef22, 0x6383, 0xf399, 0x1, 0x0);
        gbc.writeMem(0x86aa, { 0x64 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7044, gbc.sp());
        EXPECT(0x86ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x86aa));
        // 64 0171
        gbc.setState(0xb5bf, 0xa1c8, 0x3c00, 0x6b73, 0x8491, 0x8b60, 0x1, 0x1);
        gbc.writeMem(0xb5bf, { 0x64 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa1c8, gbc.sp());
        EXPECT(0xb5c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb5bf));
        // 64 0172
        gbc.setState(0xbe9b, 0xe47d, 0xac80, 0x3e90, 0x9a90, 0xe91c, 0x0, 0x0);
        gbc.writeMem(0xbe9b, { 0x64 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe47d, gbc.sp());
        EXPECT(0xbe9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xbe9b));
        // 64 0173
        gbc.setState(0xce2f, 0xd596, 0x1c0, 0xed70, 0xc812, 0xad59, 0x0, 0x1);
        gbc.writeMem(0xce2f, { 0x64 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd596, gbc.sp());
        EXPECT(0xce30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xce2f));
        // 64 0174
        gbc.setState(0x2636, 0xe13b, 0xd250, 0xd290, 0xfd21, 0xe3d7, 0x1, 0x1);
        gbc.writeMem(0x2636, { 0x64 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe13b, gbc.sp());
        EXPECT(0x2637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0175
        gbc.setState(0x2c6f, 0x9df6, 0xf100, 0xbfce, 0x5459, 0xe524, 0x1, 0x1);
        gbc.writeMem(0x2c6f, { 0x64 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9df6, gbc.sp());
        EXPECT(0x2c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0176
        gbc.setState(0x75bb, 0x7ec9, 0x3560, 0x237f, 0x90b6, 0x142a, 0x0, 0x0);
        gbc.writeMem(0x75bb, { 0x64 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7ec9, gbc.sp());
        EXPECT(0x75bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0177
        gbc.setState(0xe263, 0xb39c, 0x2b00, 0xfe75, 0x26c9, 0xe7d4, 0x0, 0x0);
        gbc.writeMem(0xe263, { 0x64 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb39c, gbc.sp());
        EXPECT(0xe264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe263));
        // 64 0178
        gbc.setState(0xcc26, 0x4713, 0xc820, 0x65c1, 0xfcca, 0x8c99, 0x0, 0x1);
        gbc.writeMem(0xcc26, { 0x64 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4713, gbc.sp());
        EXPECT(0xcc27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xcc26));
        // 64 0179
        gbc.setState(0x7073, 0x460f, 0x3c80, 0xea67, 0x45de, 0xe2af, 0x1, 0x1);
        gbc.writeMem(0x7073, { 0x64 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x460f, gbc.sp());
        EXPECT(0x7074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 017A
        gbc.setState(0x2cb9, 0x878c, 0x3c50, 0xe196, 0x6334, 0xdc6c, 0x0, 0x1);
        gbc.writeMem(0x2cb9, { 0x64 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x878c, gbc.sp());
        EXPECT(0x2cba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 017B
        gbc.setState(0xd6a4, 0x1bea, 0x91b0, 0x9113, 0x5428, 0xc51d, 0x0, 0x1);
        gbc.writeMem(0xd6a4, { 0x64 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1bea, gbc.sp());
        EXPECT(0xd6a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd6a4));
        // 64 017C
        gbc.setState(0xc6b5, 0x615a, 0x9680, 0xee1b, 0x8627, 0x214f, 0x1, 0x0);
        gbc.writeMem(0xc6b5, { 0x64 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x615a, gbc.sp());
        EXPECT(0xc6b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc6b5));
        // 64 017D
        gbc.setState(0x4611, 0xddee, 0x19e0, 0xc5d4, 0xe9a2, 0x5734, 0x0, 0x0);
        gbc.writeMem(0x4611, { 0x64 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xddee, gbc.sp());
        EXPECT(0x4612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 017E
        gbc.setState(0x96b0, 0xa722, 0xb330, 0xc192, 0xae72, 0xfcc2, 0x0, 0x1);
        gbc.writeMem(0x96b0, { 0x64 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa722, gbc.sp());
        EXPECT(0x96b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x96b0));
        // 64 017F
        gbc.setState(0xd09f, 0x6d5d, 0x7b0, 0x15dc, 0xbae4, 0xe78f, 0x1, 0x1);
        gbc.writeMem(0xd09f, { 0x64 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6d5d, gbc.sp());
        EXPECT(0xd0a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd09f));
        // 64 0180
        gbc.setState(0xb741, 0xcac5, 0xa660, 0x5794, 0x3a34, 0x9343, 0x1, 0x0);
        gbc.writeMem(0xb741, { 0x64 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcac5, gbc.sp());
        EXPECT(0xb742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb741));
        // 64 0181
        gbc.setState(0x69ae, 0xfa12, 0x63f0, 0x7f05, 0x6fb3, 0xf7a4, 0x1, 0x0);
        gbc.writeMem(0x69ae, { 0x64 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xfa12, gbc.sp());
        EXPECT(0x69af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0182
        gbc.setState(0x523a, 0xa9df, 0x9ba0, 0x1197, 0x518a, 0xf410, 0x0, 0x0);
        gbc.writeMem(0x523a, { 0x64 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa9df, gbc.sp());
        EXPECT(0x523b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0183
        gbc.setState(0x4db9, 0xee88, 0x64f0, 0x8b52, 0xf46c, 0x40e3, 0x0, 0x0);
        gbc.writeMem(0x4db9, { 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xee88, gbc.sp());
        EXPECT(0x4dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0184
        gbc.setState(0xe339, 0xd9b5, 0xd170, 0x9d22, 0xd116, 0xc550, 0x1, 0x0);
        gbc.writeMem(0xe339, { 0x64 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd9b5, gbc.sp());
        EXPECT(0xe33a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe339));
        // 64 0185
        gbc.setState(0xc44b, 0x907a, 0x9cf0, 0xcdc, 0xf552, 0xffdf, 0x1, 0x0);
        gbc.writeMem(0xc44b, { 0x64 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x907a, gbc.sp());
        EXPECT(0xc44c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc44b));
        // 64 0186
        gbc.setState(0x92bd, 0x2b09, 0x7780, 0x3771, 0xf205, 0x676e, 0x1, 0x0);
        gbc.writeMem(0x92bd, { 0x64 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2b09, gbc.sp());
        EXPECT(0x92be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x92bd));
        // 64 0187
        gbc.setState(0x2afc, 0xd8a3, 0xc740, 0x46cc, 0x708f, 0xd92b, 0x0, 0x0);
        gbc.writeMem(0x2afc, { 0x64 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd8a3, gbc.sp());
        EXPECT(0x2afd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0188
        gbc.setState(0x99d4, 0x9443, 0x3b60, 0x3c77, 0xa7a1, 0x4f36, 0x0, 0x0);
        gbc.writeMem(0x99d4, { 0x64 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9443, gbc.sp());
        EXPECT(0x99d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x99d4));
        // 64 0189
        gbc.setState(0x89c4, 0x2789, 0xdbd0, 0x2da2, 0xde86, 0x9863, 0x1, 0x0);
        gbc.writeMem(0x89c4, { 0x64 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2789, gbc.sp());
        EXPECT(0x89c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x89c4));
        // 64 018A
        gbc.setState(0xc1d5, 0xdb7c, 0x3940, 0x46df, 0x3ee5, 0x864d, 0x0, 0x1);
        gbc.writeMem(0xc1d5, { 0x64 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xdb7c, gbc.sp());
        EXPECT(0xc1d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc1d5));
        // 64 018B
        gbc.setState(0x6166, 0xdaa4, 0x21b0, 0xcfac, 0xbb72, 0x650d, 0x1, 0x0);
        gbc.writeMem(0x6166, { 0x64 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdaa4, gbc.sp());
        EXPECT(0x6167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 018C
        gbc.setState(0xa7a7, 0x1ab1, 0xff40, 0xd97f, 0x9b0, 0x7def, 0x0, 0x1);
        gbc.writeMem(0xa7a7, { 0x64 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1ab1, gbc.sp());
        EXPECT(0xa7a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa7a7));
        // 64 018D
        gbc.setState(0x92c5, 0x8c69, 0x8a60, 0x5f22, 0x7571, 0x7780, 0x1, 0x1);
        gbc.writeMem(0x92c5, { 0x64 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8c69, gbc.sp());
        EXPECT(0x92c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x92c5));
        // 64 018E
        gbc.setState(0xba71, 0x7b0f, 0x960, 0xe720, 0xd060, 0xde8c, 0x0, 0x0);
        gbc.writeMem(0xba71, { 0x64 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7b0f, gbc.sp());
        EXPECT(0xba72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xba71));
        // 64 018F
        gbc.setState(0x6613, 0x5e64, 0x14d0, 0x7116, 0x9e1f, 0xb23e, 0x0, 0x1);
        gbc.writeMem(0x6613, { 0x64 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5e64, gbc.sp());
        EXPECT(0x6614, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0191
        gbc.setState(0x600e, 0xb46f, 0xc730, 0xc383, 0x4f47, 0xeb72, 0x0, 0x0);
        gbc.writeMem(0x600e, { 0x64 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb46f, gbc.sp());
        EXPECT(0x600f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0192
        gbc.setState(0xe406, 0xa545, 0x1cc0, 0xcb72, 0x33ba, 0x14c8, 0x0, 0x0);
        gbc.writeMem(0xe406, { 0x64 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa545, gbc.sp());
        EXPECT(0xe407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe406));
        // 64 0193
        gbc.setState(0x2e3b, 0x5645, 0x3a00, 0xc10, 0x719c, 0xea, 0x1, 0x1);
        gbc.writeMem(0x2e3b, { 0x64 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5645, gbc.sp());
        EXPECT(0x2e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0194
        gbc.setState(0x23a9, 0x324, 0xc070, 0x1353, 0xda41, 0x2297, 0x0, 0x1);
        gbc.writeMem(0x23a9, { 0x64 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x324, gbc.sp());
        EXPECT(0x23aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0195
        gbc.setState(0x5d78, 0xc6d0, 0xef50, 0x8054, 0x8e0a, 0xcaca, 0x0, 0x0);
        gbc.writeMem(0x5d78, { 0x64 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc6d0, gbc.sp());
        EXPECT(0x5d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0196
        gbc.setState(0x8e24, 0x826d, 0x8ab0, 0x172d, 0xfadb, 0xc2c, 0x0, 0x1);
        gbc.writeMem(0x8e24, { 0x64 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x826d, gbc.sp());
        EXPECT(0x8e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8e24));
        // 64 0197
        gbc.setState(0xda75, 0x2fb7, 0xf620, 0x3766, 0x3341, 0xabd0, 0x0, 0x0);
        gbc.writeMem(0xda75, { 0x64 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2fb7, gbc.sp());
        EXPECT(0xda76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xda75));
        // 64 0198
        gbc.setState(0xbbef, 0x59a0, 0x2790, 0xcb89, 0x73a3, 0xa5d2, 0x0, 0x1);
        gbc.writeMem(0xbbef, { 0x64 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x59a0, gbc.sp());
        EXPECT(0xbbf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xbbef));
        // 64 0199
        gbc.setState(0xc820, 0x531a, 0x85f0, 0xa5bc, 0x6c6e, 0x76d7, 0x1, 0x1);
        gbc.writeMem(0xc820, { 0x64 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x531a, gbc.sp());
        EXPECT(0xc821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc820));
        // 64 019A
        gbc.setState(0x825f, 0x8042, 0xa950, 0x7813, 0x674f, 0xdcbd, 0x0, 0x0);
        gbc.writeMem(0x825f, { 0x64 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8042, gbc.sp());
        EXPECT(0x8260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x825f));
        // 64 019B
        gbc.setState(0xd9a4, 0x8374, 0xe690, 0x37e5, 0xa57c, 0x461e, 0x0, 0x0);
        gbc.writeMem(0xd9a4, { 0x64 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8374, gbc.sp());
        EXPECT(0xd9a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd9a4));
        // 64 019C
        gbc.setState(0x5d1, 0xcbd3, 0xd2b0, 0xefb0, 0x6c28, 0xa19a, 0x1, 0x0);
        gbc.writeMem(0x5d1, { 0x64 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xcbd3, gbc.sp());
        EXPECT(0x5d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 019D
        gbc.setState(0x62af, 0x85fb, 0x3a10, 0x738e, 0x304f, 0x1830, 0x0, 0x1);
        gbc.writeMem(0x62af, { 0x64 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x85fb, gbc.sp());
        EXPECT(0x62b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 019E
        gbc.setState(0xbb46, 0x3260, 0x71f0, 0x2cb1, 0xa52d, 0xa3af, 0x0, 0x0);
        gbc.writeMem(0xbb46, { 0x64 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3260, gbc.sp());
        EXPECT(0xbb47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xbb46));
        // 64 019F
        gbc.setState(0x4984, 0xd3ab, 0xc810, 0xc1e5, 0x2122, 0xca43, 0x1, 0x1);
        gbc.writeMem(0x4984, { 0x64 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd3ab, gbc.sp());
        EXPECT(0x4985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01A0
        gbc.setState(0x647a, 0x3ea4, 0x2960, 0x7ac, 0xc0c2, 0x690e, 0x1, 0x1);
        gbc.writeMem(0x647a, { 0x64 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3ea4, gbc.sp());
        EXPECT(0x647b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 01A1
        gbc.setState(0x85, 0x677c, 0xc3c0, 0x6405, 0xef6, 0x3905, 0x1, 0x0);
        gbc.writeMem(0x85, { 0x64 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x677c, gbc.sp());
        EXPECT(0x86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 01A2
        gbc.setState(0xdc15, 0x1c66, 0xaa10, 0x7175, 0x3ee9, 0x2901, 0x0, 0x0);
        gbc.writeMem(0xdc15, { 0x64 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1c66, gbc.sp());
        EXPECT(0xdc16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xdc15));
        // 64 01A3
        gbc.setState(0x9c03, 0x21b2, 0x3100, 0xd6de, 0xae3a, 0xc3e3, 0x1, 0x1);
        gbc.writeMem(0x9c03, { 0x64 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x21b2, gbc.sp());
        EXPECT(0x9c04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9c03));
        // 64 01A4
        gbc.setState(0xc88d, 0x9cf9, 0x3090, 0x894a, 0x4b25, 0xfb24, 0x1, 0x1);
        gbc.writeMem(0xc88d, { 0x64 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9cf9, gbc.sp());
        EXPECT(0xc88e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc88d));
        // 64 01A5
        gbc.setState(0x483, 0xeea6, 0x6aa0, 0x1def, 0xb43, 0x12f3, 0x0, 0x0);
        gbc.writeMem(0x483, { 0x64 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xeea6, gbc.sp());
        EXPECT(0x484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 01A6
        gbc.setState(0x367a, 0xed38, 0x8dd0, 0xbf00, 0xdf4d, 0xf79b, 0x0, 0x1);
        gbc.writeMem(0x367a, { 0x64 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xed38, gbc.sp());
        EXPECT(0x367b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01A7
        gbc.setState(0xb5cf, 0x78df, 0x9260, 0xdf3d, 0x97fa, 0xe36d, 0x0, 0x0);
        gbc.writeMem(0xb5cf, { 0x64 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x78df, gbc.sp());
        EXPECT(0xb5d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb5cf));
        // 64 01A8
        gbc.setState(0xd564, 0x769e, 0xdd20, 0xed85, 0xc0bf, 0x540c, 0x0, 0x0);
        gbc.writeMem(0xd564, { 0x64 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x769e, gbc.sp());
        EXPECT(0xd565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd564));
        // 64 01A9
        gbc.setState(0x8202, 0xdb08, 0x170, 0x40cb, 0x9c92, 0x8a3, 0x1, 0x0);
        gbc.writeMem(0x8202, { 0x64 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xdb08, gbc.sp());
        EXPECT(0x8203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8202));
        // 64 01AA
        gbc.setState(0x9b5, 0x5979, 0x63f0, 0xf61c, 0x784a, 0xebad, 0x0, 0x1);
        gbc.writeMem(0x9b5, { 0x64 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5979, gbc.sp());
        EXPECT(0x9b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01AB
        gbc.setState(0x50d8, 0xe424, 0x6f10, 0xbda, 0x2c6c, 0x91f4, 0x0, 0x0);
        gbc.writeMem(0x50d8, { 0x64 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe424, gbc.sp());
        EXPECT(0x50d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01AC
        gbc.setState(0xb6e6, 0x479a, 0x92e0, 0xeaaf, 0x9f23, 0xf964, 0x1, 0x1);
        gbc.writeMem(0xb6e6, { 0x64 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x479a, gbc.sp());
        EXPECT(0xb6e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb6e6));
        // 64 01AD
        gbc.setState(0x22f, 0x8c99, 0x4e80, 0xcc1e, 0x18df, 0xc91b, 0x1, 0x0);
        gbc.writeMem(0x22f, { 0x64 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8c99, gbc.sp());
        EXPECT(0x230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 01AE
        gbc.setState(0x6533, 0xc9f3, 0x6ef0, 0x5067, 0xb2dd, 0x4634, 0x0, 0x0);
        gbc.writeMem(0x6533, { 0x64 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc9f3, gbc.sp());
        EXPECT(0x6534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01AF
        gbc.setState(0x9427, 0xd67e, 0x77d0, 0xdb3a, 0x7433, 0xe4ca, 0x0, 0x0);
        gbc.writeMem(0x9427, { 0x64 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd67e, gbc.sp());
        EXPECT(0x9428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9427));
        // 64 01B0
        gbc.setState(0x4210, 0xa31, 0x7640, 0xae38, 0x4493, 0x7996, 0x0, 0x0);
        gbc.writeMem(0x4210, { 0x64 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa31, gbc.sp());
        EXPECT(0x4211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 01B1
        gbc.setState(0x275d, 0x1cf6, 0xaed0, 0x7ccf, 0x46c4, 0x3988, 0x1, 0x0);
        gbc.writeMem(0x275d, { 0x64 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1cf6, gbc.sp());
        EXPECT(0x275e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01B2
        gbc.setState(0x89dd, 0xc3c4, 0x29a0, 0x1532, 0x5cd0, 0x72ab, 0x1, 0x0);
        gbc.writeMem(0x89dd, { 0x64 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc3c4, gbc.sp());
        EXPECT(0x89de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x89dd));
        // 64 01B3
        gbc.setState(0x8bc1, 0x3380, 0x4b00, 0x8794, 0x44b5, 0x7dcf, 0x1, 0x0);
        gbc.writeMem(0x8bc1, { 0x64 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3380, gbc.sp());
        EXPECT(0x8bc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8bc1));
        // 64 01B4
        gbc.setState(0x7746, 0x7396, 0x2360, 0xd8ca, 0xfba6, 0x570b, 0x0, 0x0);
        gbc.writeMem(0x7746, { 0x64 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7396, gbc.sp());
        EXPECT(0x7747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 01B5
        gbc.setState(0x114a, 0x1c7c, 0x7f20, 0xb232, 0xf5e5, 0x1e10, 0x0, 0x1);
        gbc.writeMem(0x114a, { 0x64 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1c7c, gbc.sp());
        EXPECT(0x114b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 01B6
        gbc.setState(0xa69e, 0x9687, 0x3200, 0x6c85, 0xa393, 0xc4d9, 0x0, 0x1);
        gbc.writeMem(0xa69e, { 0x64 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9687, gbc.sp());
        EXPECT(0xa69f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa69e));
        // 64 01B7
        gbc.setState(0xeb69, 0xaf0b, 0xc590, 0x58f8, 0xce55, 0xada2, 0x0, 0x0);
        gbc.writeMem(0xeb69, { 0x64 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xaf0b, gbc.sp());
        EXPECT(0xeb6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xeb69));
        // 64 01B8
        gbc.setState(0x6007, 0x6797, 0x9a50, 0x875, 0x36d3, 0x26f7, 0x0, 0x0);
        gbc.writeMem(0x6007, { 0x64 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6797, gbc.sp());
        EXPECT(0x6008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01B9
        gbc.setState(0x1c22, 0x4c15, 0x10f0, 0x7937, 0x5343, 0x812a, 0x0, 0x1);
        gbc.writeMem(0x1c22, { 0x64 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4c15, gbc.sp());
        EXPECT(0x1c23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01BA
        gbc.setState(0x525b, 0xdbe5, 0xce50, 0x3690, 0x8699, 0xa773, 0x1, 0x0);
        gbc.writeMem(0x525b, { 0x64 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xdbe5, gbc.sp());
        EXPECT(0x525c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01BB
        gbc.setState(0xc191, 0x9e01, 0xc540, 0xe52e, 0xbf32, 0x50af, 0x0, 0x0);
        gbc.writeMem(0xc191, { 0x64 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9e01, gbc.sp());
        EXPECT(0xc192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc191));
        // 64 01BD
        gbc.setState(0x9ac4, 0x1a6f, 0x8c60, 0x4a35, 0x57e6, 0x4301, 0x0, 0x1);
        gbc.writeMem(0x9ac4, { 0x64 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1a6f, gbc.sp());
        EXPECT(0x9ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9ac4));
        // 64 01BE
        gbc.setState(0x30c, 0x2247, 0x9cb0, 0xe837, 0xf3b2, 0x9075, 0x0, 0x1);
        gbc.writeMem(0x30c, { 0x64 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2247, gbc.sp());
        EXPECT(0x30d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01BF
        gbc.setState(0x7b3c, 0xfe41, 0x92d0, 0x5abc, 0x9e4c, 0x4a00, 0x0, 0x1);
        gbc.writeMem(0x7b3c, { 0x64 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfe41, gbc.sp());
        EXPECT(0x7b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01C0
        gbc.setState(0x1845, 0x9bea, 0x53e0, 0xba0, 0x2201, 0x3023, 0x0, 0x1);
        gbc.writeMem(0x1845, { 0x64 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9bea, gbc.sp());
        EXPECT(0x1846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 01C1
        gbc.setState(0x8ff3, 0xfad9, 0x9a60, 0x9c9b, 0xec29, 0x1fa7, 0x0, 0x1);
        gbc.writeMem(0x8ff3, { 0x64 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xfad9, gbc.sp());
        EXPECT(0x8ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8ff3));
        // 64 01C2
        gbc.setState(0xa5ef, 0x683e, 0x230, 0xb640, 0x9cfc, 0x79c3, 0x0, 0x1);
        gbc.writeMem(0xa5ef, { 0x64 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x683e, gbc.sp());
        EXPECT(0xa5f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa5ef));
        // 64 01C3
        gbc.setState(0x1ed8, 0x2b7e, 0xe840, 0x26c9, 0x1ea6, 0x22dd, 0x1, 0x1);
        gbc.writeMem(0x1ed8, { 0x64 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2b7e, gbc.sp());
        EXPECT(0x1ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 01C4
        gbc.setState(0x1e58, 0x5d81, 0xd370, 0xbdc, 0x3162, 0xc6ec, 0x1, 0x1);
        gbc.writeMem(0x1e58, { 0x64 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5d81, gbc.sp());
        EXPECT(0x1e59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01C5
        gbc.setState(0x44a6, 0x1ce5, 0x8d30, 0xa4ee, 0xb4a, 0xbd30, 0x1, 0x0);
        gbc.writeMem(0x44a6, { 0x64 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1ce5, gbc.sp());
        EXPECT(0x44a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01C6
        gbc.setState(0x9533, 0xa9e3, 0x82e0, 0xde92, 0x9781, 0x42bc, 0x1, 0x0);
        gbc.writeMem(0x9533, { 0x64 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa9e3, gbc.sp());
        EXPECT(0x9534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9533));
        // 64 01C7
        gbc.setState(0x2b95, 0xea94, 0xbed0, 0x4a92, 0xd389, 0xaddb, 0x1, 0x0);
        gbc.writeMem(0x2b95, { 0x64 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xea94, gbc.sp());
        EXPECT(0x2b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01C8
        gbc.setState(0x27e5, 0xd0c9, 0xa570, 0xfa3b, 0xd27b, 0x8502, 0x0, 0x1);
        gbc.writeMem(0x27e5, { 0x64 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd0c9, gbc.sp());
        EXPECT(0x27e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01C9
        gbc.setState(0x7bd7, 0x9158, 0x8750, 0xd6b4, 0xe86f, 0x6cbd, 0x0, 0x0);
        gbc.writeMem(0x7bd7, { 0x64 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9158, gbc.sp());
        EXPECT(0x7bd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01CA
        gbc.setState(0xe967, 0xeed4, 0xc240, 0x530b, 0x15af, 0x5e58, 0x1, 0x1);
        gbc.writeMem(0xe967, { 0x64 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xeed4, gbc.sp());
        EXPECT(0xe968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe967));
        // 64 01CB
        gbc.setState(0x3a71, 0x7369, 0xb690, 0xd6dd, 0x1bd3, 0xb7a0, 0x1, 0x1);
        gbc.writeMem(0x3a71, { 0x64 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7369, gbc.sp());
        EXPECT(0x3a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01CC
        gbc.setState(0xa3c0, 0x60bb, 0x6e20, 0x23b4, 0xacff, 0x8aa3, 0x0, 0x1);
        gbc.writeMem(0xa3c0, { 0x64 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x60bb, gbc.sp());
        EXPECT(0xa3c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa3c0));
        // 64 01CD
        gbc.setState(0xc50c, 0x9839, 0x3ba0, 0x82c1, 0xafb4, 0x939d, 0x1, 0x1);
        gbc.writeMem(0xc50c, { 0x64 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9839, gbc.sp());
        EXPECT(0xc50d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc50c));
        // 64 01CE
        gbc.setState(0x2a09, 0x8c4a, 0xb590, 0x5cc3, 0xd04a, 0x244c, 0x1, 0x1);
        gbc.writeMem(0x2a09, { 0x64 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8c4a, gbc.sp());
        EXPECT(0x2a0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01CF
        gbc.setState(0xd118, 0x98e7, 0xb160, 0x9c28, 0x3fd, 0xeac4, 0x1, 0x1);
        gbc.writeMem(0xd118, { 0x64 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x98e7, gbc.sp());
        EXPECT(0xd119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd118));
        // 64 01D0
        gbc.setState(0xcb11, 0xb31a, 0x7200, 0x4e18, 0x9474, 0xd2c4, 0x1, 0x1);
        gbc.writeMem(0xcb11, { 0x64 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb31a, gbc.sp());
        EXPECT(0xcb12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xcb11));
        // 64 01D1
        gbc.setState(0x1f73, 0xbd93, 0xdf70, 0x4331, 0xbd, 0x90c8, 0x1, 0x1);
        gbc.writeMem(0x1f73, { 0x64 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbd93, gbc.sp());
        EXPECT(0x1f74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01D2
        gbc.setState(0x4f37, 0xe8b6, 0x9fd0, 0x6d52, 0x874a, 0xd63c, 0x1, 0x0);
        gbc.writeMem(0x4f37, { 0x64 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe8b6, gbc.sp());
        EXPECT(0x4f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01D3
        gbc.setState(0xd02f, 0x5be5, 0xefc0, 0x6a03, 0xbd3e, 0x12bc, 0x0, 0x1);
        gbc.writeMem(0xd02f, { 0x64 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5be5, gbc.sp());
        EXPECT(0xd030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd02f));
        // 64 01D4
        gbc.setState(0x8912, 0x127e, 0x5200, 0xd499, 0x6459, 0x5acc, 0x0, 0x1);
        gbc.writeMem(0x8912, { 0x64 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x127e, gbc.sp());
        EXPECT(0x8913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8912));
        // 64 01D5
        gbc.setState(0x37d, 0x61d6, 0x3f20, 0xdc63, 0x4e55, 0x2e9f, 0x1, 0x1);
        gbc.writeMem(0x37d, { 0x64 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x61d6, gbc.sp());
        EXPECT(0x37e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 01D6
        gbc.setState(0x929d, 0x313a, 0xcd90, 0x28a8, 0x1eb3, 0xb5d5, 0x0, 0x1);
        gbc.writeMem(0x929d, { 0x64 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x313a, gbc.sp());
        EXPECT(0x929e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x929d));
        // 64 01D7
        gbc.setState(0x5a5d, 0xc252, 0xf610, 0x8d35, 0xc20d, 0xe06a, 0x1, 0x1);
        gbc.writeMem(0x5a5d, { 0x64 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc252, gbc.sp());
        EXPECT(0x5a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01D8
        gbc.setState(0x4578, 0x4593, 0x16e0, 0x6ff, 0xa556, 0xc3ec, 0x0, 0x1);
        gbc.writeMem(0x4578, { 0x64 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4593, gbc.sp());
        EXPECT(0x4579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 01D9
        gbc.setState(0x95ee, 0xe179, 0x9640, 0x72d8, 0x48dd, 0xdfee, 0x1, 0x1);
        gbc.writeMem(0x95ee, { 0x64 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe179, gbc.sp());
        EXPECT(0x95ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x95ee));
        // 64 01DA
        gbc.setState(0xd1a6, 0x5602, 0xec70, 0xa898, 0x68ba, 0xe67d, 0x0, 0x0);
        gbc.writeMem(0xd1a6, { 0x64 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5602, gbc.sp());
        EXPECT(0xd1a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd1a6));
        // 64 01DB
        gbc.setState(0xa1d4, 0x5ed6, 0xb120, 0xa5f4, 0xf4db, 0x3719, 0x1, 0x1);
        gbc.writeMem(0xa1d4, { 0x64 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5ed6, gbc.sp());
        EXPECT(0xa1d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa1d4));
        // 64 01DC
        gbc.setState(0x623d, 0x4f70, 0xb790, 0x7e04, 0xa588, 0xd10a, 0x1, 0x0);
        gbc.writeMem(0x623d, { 0x64 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4f70, gbc.sp());
        EXPECT(0x623e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01DD
        gbc.setState(0x21aa, 0xfa30, 0xc4f0, 0xa521, 0xf73f, 0x3ee8, 0x1, 0x0);
        gbc.writeMem(0x21aa, { 0x64 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfa30, gbc.sp());
        EXPECT(0x21ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01DE
        gbc.setState(0x1114, 0xe29a, 0xb630, 0x5e48, 0x38fc, 0xfb38, 0x0, 0x0);
        gbc.writeMem(0x1114, { 0x64 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe29a, gbc.sp());
        EXPECT(0x1115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01DF
        gbc.setState(0xc224, 0xb728, 0x9570, 0x3d51, 0xd7e5, 0x2083, 0x1, 0x0);
        gbc.writeMem(0xc224, { 0x64 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb728, gbc.sp());
        EXPECT(0xc225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc224));
        // 64 01E0
        gbc.setState(0xcf46, 0xc33c, 0x1da0, 0x5a2e, 0x6921, 0xde26, 0x1, 0x1);
        gbc.writeMem(0xcf46, { 0x64 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc33c, gbc.sp());
        EXPECT(0xcf47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xcf46));
        // 64 01E1
        gbc.setState(0x519b, 0x32ec, 0xd6b0, 0x2e6d, 0x1253, 0x87da, 0x0, 0x1);
        gbc.writeMem(0x519b, { 0x64 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x32ec, gbc.sp());
        EXPECT(0x519c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01E2
        gbc.setState(0xd1c0, 0x2c81, 0xf2c0, 0xc790, 0x9319, 0x6a97, 0x1, 0x1);
        gbc.writeMem(0xd1c0, { 0x64 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2c81, gbc.sp());
        EXPECT(0xd1c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd1c0));
        // 64 01E3
        gbc.setState(0x546d, 0x2c9, 0x7a60, 0x6f5a, 0x856a, 0xe75e, 0x1, 0x0);
        gbc.writeMem(0x546d, { 0x64 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2c9, gbc.sp());
        EXPECT(0x546e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 01E4
        gbc.setState(0x1603, 0x28b3, 0xfe60, 0x985d, 0x4af5, 0x3e18, 0x1, 0x0);
        gbc.writeMem(0x1603, { 0x64 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x28b3, gbc.sp());
        EXPECT(0x1604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 01E5
        gbc.setState(0x5add, 0x12e7, 0x7a40, 0x373c, 0x2627, 0xe8d4, 0x0, 0x1);
        gbc.writeMem(0x5add, { 0x64 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x12e7, gbc.sp());
        EXPECT(0x5ade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 01E6
        gbc.setState(0xeef3, 0x18f7, 0x69d0, 0xd109, 0xd95a, 0xf5a1, 0x1, 0x1);
        gbc.writeMem(0xeef3, { 0x64 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x18f7, gbc.sp());
        EXPECT(0xeef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xeef3));
        // 64 01E7
        gbc.setState(0x6312, 0xc6ba, 0x8dd0, 0x8d9d, 0xec5a, 0x60a, 0x0, 0x0);
        gbc.writeMem(0x6312, { 0x64 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc6ba, gbc.sp());
        EXPECT(0x6313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01E8
        gbc.setState(0xd79c, 0xe582, 0xd000, 0x7cc, 0x9968, 0x5869, 0x0, 0x0);
        gbc.writeMem(0xd79c, { 0x64 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe582, gbc.sp());
        EXPECT(0xd79d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd79c));
        // 64 01E9
        gbc.setState(0x21ea, 0xfd19, 0x79d0, 0xcf4a, 0xd3a, 0x3475, 0x0, 0x1);
        gbc.writeMem(0x21ea, { 0x64 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfd19, gbc.sp());
        EXPECT(0x21eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01EA
        gbc.setState(0xa9b, 0x4fcb, 0x8fb0, 0xb7f1, 0x9886, 0x176d, 0x1, 0x0);
        gbc.writeMem(0xa9b, { 0x64 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4fcb, gbc.sp());
        EXPECT(0xa9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01EB
        gbc.setState(0x135e, 0x1389, 0x80d0, 0x2a6a, 0xea62, 0xc906, 0x1, 0x1);
        gbc.writeMem(0x135e, { 0x64 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1389, gbc.sp());
        EXPECT(0x135f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01EC
        gbc.setState(0xc8da, 0x481d, 0x3020, 0xd5e9, 0x2411, 0x82ae, 0x0, 0x1);
        gbc.writeMem(0xc8da, { 0x64 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x481d, gbc.sp());
        EXPECT(0xc8db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc8da));
        // 64 01ED
        gbc.setState(0x45f9, 0xcf36, 0x5340, 0xf418, 0x58cb, 0x222a, 0x1, 0x0);
        gbc.writeMem(0x45f9, { 0x64 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xcf36, gbc.sp());
        EXPECT(0x45fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 01EE
        gbc.setState(0x2870, 0x8c1f, 0x2a00, 0xaa17, 0xa24b, 0x28cc, 0x0, 0x0);
        gbc.writeMem(0x2870, { 0x64 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8c1f, gbc.sp());
        EXPECT(0x2871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 01EF
        gbc.setState(0x719c, 0x56be, 0x9180, 0xe09c, 0xac38, 0x62dd, 0x0, 0x1);
        gbc.writeMem(0x719c, { 0x64 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x56be, gbc.sp());
        EXPECT(0x719d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 01F0
        gbc.setState(0x69ef, 0x306d, 0xda10, 0x7328, 0x563f, 0xd74e, 0x0, 0x1);
        gbc.writeMem(0x69ef, { 0x64 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x306d, gbc.sp());
        EXPECT(0x69f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01F1
        gbc.setState(0x7d84, 0x27ce, 0xda0, 0x84de, 0x25b8, 0xc0e2, 0x0, 0x1);
        gbc.writeMem(0x7d84, { 0x64 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x27ce, gbc.sp());
        EXPECT(0x7d85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 01F2
        gbc.setState(0x6cd6, 0x4037, 0x9540, 0xfc02, 0xf403, 0x928f, 0x1, 0x1);
        gbc.writeMem(0x6cd6, { 0x64 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4037, gbc.sp());
        EXPECT(0x6cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 01F3
        gbc.setState(0xc1b0, 0xb01d, 0x0, 0x7d0e, 0xd090, 0xf611, 0x0, 0x0);
        gbc.writeMem(0xc1b0, { 0x64 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb01d, gbc.sp());
        EXPECT(0xc1b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc1b0));
        // 64 01F4
        gbc.setState(0x38fb, 0x12fe, 0x74d0, 0x586c, 0x5059, 0xa6ef, 0x0, 0x1);
        gbc.writeMem(0x38fb, { 0x64 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x12fe, gbc.sp());
        EXPECT(0x38fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01F5
        gbc.setState(0x1538, 0xe6e6, 0xf5d0, 0x81aa, 0xead, 0x4a34, 0x0, 0x1);
        gbc.writeMem(0x1538, { 0x64 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe6e6, gbc.sp());
        EXPECT(0x1539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01F6
        gbc.setState(0x5b52, 0x598c, 0x2150, 0x10b8, 0xe116, 0x5460, 0x0, 0x0);
        gbc.writeMem(0x5b52, { 0x64 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x598c, gbc.sp());
        EXPECT(0x5b53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01F8
        gbc.setState(0x70b3, 0x4380, 0xff20, 0x2899, 0x804c, 0xf60f, 0x1, 0x1);
        gbc.writeMem(0x70b3, { 0x64 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4380, gbc.sp());
        EXPECT(0x70b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 01F9
        gbc.setState(0x8fe8, 0x1f90, 0x2a60, 0x26bc, 0x652d, 0xd892, 0x1, 0x0);
        gbc.writeMem(0x8fe8, { 0x64 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1f90, gbc.sp());
        EXPECT(0x8fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8fe8));
        // 64 01FA
        gbc.setState(0xcab2, 0x1b19, 0x1dc0, 0x1026, 0xc42d, 0x3f33, 0x0, 0x0);
        gbc.writeMem(0xcab2, { 0x64 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1b19, gbc.sp());
        EXPECT(0xcab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xcab2));
        // 64 01FB
        gbc.setState(0x6d36, 0x66a2, 0xd5d0, 0x432c, 0xf597, 0x6a97, 0x1, 0x0);
        gbc.writeMem(0x6d36, { 0x64 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x66a2, gbc.sp());
        EXPECT(0x6d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 01FD
        gbc.setState(0x65e9, 0xdd04, 0xae00, 0x3258, 0x50e6, 0xf449, 0x0, 0x1);
        gbc.writeMem(0x65e9, { 0x64 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xdd04, gbc.sp());
        EXPECT(0x65ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 01FE
        gbc.setState(0x7b59, 0xbc23, 0x95a0, 0x8063, 0x8070, 0x772f, 0x0, 0x0);
        gbc.writeMem(0x7b59, { 0x64 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbc23, gbc.sp());
        EXPECT(0x7b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 01FF
        gbc.setState(0x7bcf, 0x7dfe, 0x6eb0, 0x1002, 0xc2b1, 0xcb3e, 0x1, 0x0);
        gbc.writeMem(0x7bcf, { 0x64 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7dfe, gbc.sp());
        EXPECT(0x7bd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0201
        gbc.setState(0x1412, 0xf267, 0x8e70, 0xa61b, 0xacb2, 0xa721, 0x1, 0x0);
        gbc.writeMem(0x1412, { 0x64 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf267, gbc.sp());
        EXPECT(0x1413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0202
        gbc.setState(0xb0e6, 0x3e1e, 0x6690, 0xd974, 0x2016, 0x5b75, 0x0, 0x1);
        gbc.writeMem(0xb0e6, { 0x64 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3e1e, gbc.sp());
        EXPECT(0xb0e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb0e6));
        // 64 0204
        gbc.setState(0xb612, 0x1c5f, 0x1eb0, 0x196d, 0x3d2c, 0xda31, 0x1, 0x0);
        gbc.writeMem(0xb612, { 0x64 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1c5f, gbc.sp());
        EXPECT(0xb613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb612));
        // 64 0205
        gbc.setState(0xd283, 0xeef3, 0x5a00, 0x7195, 0x86f4, 0x337b, 0x0, 0x1);
        gbc.writeMem(0xd283, { 0x64 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xeef3, gbc.sp());
        EXPECT(0xd284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd283));
        // 64 0206
        gbc.setState(0x4056, 0x6d73, 0x6680, 0xab85, 0x25e2, 0xd0fb, 0x1, 0x1);
        gbc.writeMem(0x4056, { 0x64 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6d73, gbc.sp());
        EXPECT(0x4057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0207
        gbc.setState(0xb4ba, 0xfb15, 0xaf00, 0x5c7b, 0x2d08, 0xf814, 0x1, 0x0);
        gbc.writeMem(0xb4ba, { 0x64 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfb15, gbc.sp());
        EXPECT(0xb4bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb4ba));
        // 64 0208
        gbc.setState(0x1345, 0x80f5, 0xed60, 0xc5ec, 0x571f, 0x8f90, 0x1, 0x0);
        gbc.writeMem(0x1345, { 0x64 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x80f5, gbc.sp());
        EXPECT(0x1346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0209
        gbc.setState(0xa2a2, 0xff5e, 0xa100, 0xe9a1, 0x5321, 0x7ca4, 0x1, 0x1);
        gbc.writeMem(0xa2a2, { 0x64 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xff5e, gbc.sp());
        EXPECT(0xa2a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa2a2));
        // 64 020A
        gbc.setState(0x2dee, 0x3bd6, 0x6960, 0xf7cf, 0x96c5, 0x1ecc, 0x1, 0x0);
        gbc.writeMem(0x2dee, { 0x64 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3bd6, gbc.sp());
        EXPECT(0x2def, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 020B
        gbc.setState(0x4102, 0xe4b3, 0x2fd0, 0x6780, 0xd1a2, 0x1594, 0x1, 0x0);
        gbc.writeMem(0x4102, { 0x64 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe4b3, gbc.sp());
        EXPECT(0x4103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 020C
        gbc.setState(0xa3bd, 0xaae7, 0x5b20, 0xac92, 0x5b70, 0xd62c, 0x1, 0x0);
        gbc.writeMem(0xa3bd, { 0x64 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xaae7, gbc.sp());
        EXPECT(0xa3be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa3bd));
        // 64 020D
        gbc.setState(0x2e24, 0x8c03, 0x840, 0xe255, 0xbf54, 0x3da5, 0x1, 0x1);
        gbc.writeMem(0x2e24, { 0x64 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8c03, gbc.sp());
        EXPECT(0x2e25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 020E
        gbc.setState(0x61f3, 0x4bef, 0xfbf0, 0xba74, 0x27d9, 0x48c9, 0x1, 0x1);
        gbc.writeMem(0x61f3, { 0x64 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4bef, gbc.sp());
        EXPECT(0x61f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 020F
        gbc.setState(0x24f2, 0x26e2, 0xce30, 0xb9de, 0x9e18, 0x65e6, 0x1, 0x0);
        gbc.writeMem(0x24f2, { 0x64 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x26e2, gbc.sp());
        EXPECT(0x24f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0210
        gbc.setState(0x90f4, 0x48b1, 0x7310, 0x722, 0x7c95, 0x42d8, 0x1, 0x0);
        gbc.writeMem(0x90f4, { 0x64 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x48b1, gbc.sp());
        EXPECT(0x90f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x90f4));
        // 64 0212
        gbc.setState(0x6135, 0xd8a2, 0x30d0, 0x5b9f, 0xeea5, 0x8ab, 0x0, 0x1);
        gbc.writeMem(0x6135, { 0x64 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd8a2, gbc.sp());
        EXPECT(0x6136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0213
        gbc.setState(0xa9a4, 0x9003, 0xba50, 0xeb44, 0x3a81, 0xadf5, 0x0, 0x0);
        gbc.writeMem(0xa9a4, { 0x64 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9003, gbc.sp());
        EXPECT(0xa9a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa9a4));
        // 64 0214
        gbc.setState(0x16ce, 0x2d9d, 0x8230, 0x2697, 0x3093, 0x5fba, 0x0, 0x0);
        gbc.writeMem(0x16ce, { 0x64 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2d9d, gbc.sp());
        EXPECT(0x16cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0215
        gbc.setState(0x1233, 0xce67, 0x1560, 0x69fb, 0x80c5, 0xe37d, 0x0, 0x1);
        gbc.writeMem(0x1233, { 0x64 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xce67, gbc.sp());
        EXPECT(0x1234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0216
        gbc.setState(0x50b0, 0x6052, 0xa750, 0xdf7e, 0xc116, 0xf8b6, 0x0, 0x0);
        gbc.writeMem(0x50b0, { 0x64 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6052, gbc.sp());
        EXPECT(0x50b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0217
        gbc.setState(0x3fe5, 0xe875, 0xf9b0, 0xaf47, 0xb871, 0x4225, 0x0, 0x0);
        gbc.writeMem(0x3fe5, { 0x64 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe875, gbc.sp());
        EXPECT(0x3fe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0218
        gbc.setState(0x25, 0x5538, 0x3950, 0x9c0b, 0x1544, 0x628a, 0x0, 0x0);
        gbc.writeMem(0x25, { 0x64 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5538, gbc.sp());
        EXPECT(0x26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0219
        gbc.setState(0x164e, 0xba20, 0x6ba0, 0x1c0a, 0xbdc6, 0xafc0, 0x0, 0x1);
        gbc.writeMem(0x164e, { 0x64 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xba20, gbc.sp());
        EXPECT(0x164f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 021A
        gbc.setState(0xd6bf, 0x71be, 0x250, 0xf771, 0xb6d1, 0xafb8, 0x0, 0x0);
        gbc.writeMem(0xd6bf, { 0x64 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x71be, gbc.sp());
        EXPECT(0xd6c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd6bf));
        // 64 021B
        gbc.setState(0x8652, 0xe79d, 0x1350, 0xe89c, 0x4f0f, 0x3327, 0x1, 0x0);
        gbc.writeMem(0x8652, { 0x64 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe79d, gbc.sp());
        EXPECT(0x8653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8652));
        // 64 021C
        gbc.setState(0x8299, 0x80bd, 0x1ed0, 0xb295, 0x18, 0x2a51, 0x0, 0x1);
        gbc.writeMem(0x8299, { 0x64 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x80bd, gbc.sp());
        EXPECT(0x829a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8299));
        // 64 021D
        gbc.setState(0xcc3c, 0x152b, 0xca60, 0x9df8, 0xfafe, 0x661e, 0x1, 0x0);
        gbc.writeMem(0xcc3c, { 0x64 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x152b, gbc.sp());
        EXPECT(0xcc3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xcc3c));
        // 64 021E
        gbc.setState(0x8c7c, 0xefd5, 0x48c0, 0x597f, 0x7a45, 0xf3a3, 0x1, 0x1);
        gbc.writeMem(0x8c7c, { 0x64 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xefd5, gbc.sp());
        EXPECT(0x8c7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8c7c));
        // 64 021F
        gbc.setState(0xa254, 0x83df, 0x6240, 0xa086, 0x4cea, 0x426a, 0x0, 0x0);
        gbc.writeMem(0xa254, { 0x64 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x83df, gbc.sp());
        EXPECT(0xa255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa254));
        // 64 0220
        gbc.setState(0xa2eb, 0x5081, 0xfda0, 0xee42, 0x756c, 0x1bd0, 0x1, 0x1);
        gbc.writeMem(0xa2eb, { 0x64 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5081, gbc.sp());
        EXPECT(0xa2ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa2eb));
        // 64 0221
        gbc.setState(0x3701, 0xb46e, 0xc260, 0x2918, 0x88b2, 0x793e, 0x0, 0x1);
        gbc.writeMem(0x3701, { 0x64 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb46e, gbc.sp());
        EXPECT(0x3702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0222
        gbc.setState(0xa107, 0xdbb0, 0x25f0, 0x5991, 0x7f6, 0x8c5f, 0x0, 0x0);
        gbc.writeMem(0xa107, { 0x64 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xdbb0, gbc.sp());
        EXPECT(0xa108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa107));
        // 64 0223
        gbc.setState(0x775, 0x23ea, 0x81e0, 0xa68e, 0x8dd5, 0x3b21, 0x0, 0x0);
        gbc.writeMem(0x775, { 0x64 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x23ea, gbc.sp());
        EXPECT(0x776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0224
        gbc.setState(0x5257, 0xc9d2, 0x29f0, 0xffdd, 0x352a, 0xdbcf, 0x1, 0x1);
        gbc.writeMem(0x5257, { 0x64 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc9d2, gbc.sp());
        EXPECT(0x5258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0225
        gbc.setState(0x5967, 0xef5, 0x9ae0, 0x2c66, 0x6e4e, 0xec32, 0x1, 0x0);
        gbc.writeMem(0x5967, { 0x64 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xef5, gbc.sp());
        EXPECT(0x5968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0226
        gbc.setState(0x8639, 0xb948, 0xd130, 0x34f8, 0xf234, 0xb95, 0x0, 0x1);
        gbc.writeMem(0x8639, { 0x64 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb948, gbc.sp());
        EXPECT(0x863a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8639));
        // 64 0227
        gbc.setState(0x25e8, 0xb13d, 0x8920, 0x641b, 0x23a8, 0x7845, 0x0, 0x0);
        gbc.writeMem(0x25e8, { 0x64 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb13d, gbc.sp());
        EXPECT(0x25e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0228
        gbc.setState(0x4a5f, 0x8348, 0xf1e0, 0x4b2b, 0x2569, 0x96bf, 0x1, 0x1);
        gbc.writeMem(0x4a5f, { 0x64 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8348, gbc.sp());
        EXPECT(0x4a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0229
        gbc.setState(0xd9a1, 0x3dc3, 0xc610, 0x39ab, 0xec13, 0xfa54, 0x0, 0x0);
        gbc.writeMem(0xd9a1, { 0x64 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3dc3, gbc.sp());
        EXPECT(0xd9a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd9a1));
        // 64 022A
        gbc.setState(0xc3ac, 0x4660, 0xf660, 0x1500, 0x6010, 0x9617, 0x0, 0x1);
        gbc.writeMem(0xc3ac, { 0x64 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4660, gbc.sp());
        EXPECT(0xc3ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc3ac));
        // 64 022B
        gbc.setState(0xc834, 0x3107, 0xb300, 0x1100, 0x107e, 0xd6ce, 0x0, 0x0);
        gbc.writeMem(0xc834, { 0x64 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3107, gbc.sp());
        EXPECT(0xc835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc834));
        // 64 022C
        gbc.setState(0x31a4, 0x7614, 0xb4f0, 0x2187, 0xbec0, 0xc69a, 0x1, 0x1);
        gbc.writeMem(0x31a4, { 0x64 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7614, gbc.sp());
        EXPECT(0x31a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 022D
        gbc.setState(0x2bbf, 0x87c, 0xb4f0, 0x850f, 0xfcf3, 0x3693, 0x1, 0x1);
        gbc.writeMem(0x2bbf, { 0x64 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x87c, gbc.sp());
        EXPECT(0x2bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 022E
        gbc.setState(0xc725, 0x97f6, 0xbcf0, 0x7fd4, 0x107, 0xa68e, 0x0, 0x1);
        gbc.writeMem(0xc725, { 0x64 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x97f6, gbc.sp());
        EXPECT(0xc726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc725));
        // 64 022F
        gbc.setState(0xa13, 0xf713, 0x6e80, 0x92f3, 0x75e8, 0xdcd1, 0x0, 0x1);
        gbc.writeMem(0xa13, { 0x64 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf713, gbc.sp());
        EXPECT(0xa14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0230
        gbc.setState(0x9754, 0xe74a, 0x2ee0, 0x3950, 0xe721, 0x70ff, 0x0, 0x1);
        gbc.writeMem(0x9754, { 0x64 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe74a, gbc.sp());
        EXPECT(0x9755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9754));
        // 64 0231
        gbc.setState(0xdf15, 0xcce, 0x3db0, 0xeef, 0x8e32, 0xa635, 0x0, 0x1);
        gbc.writeMem(0xdf15, { 0x64 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcce, gbc.sp());
        EXPECT(0xdf16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xdf15));
        // 64 0232
        gbc.setState(0x541f, 0xcd1, 0xc430, 0x925b, 0xb749, 0x8687, 0x0, 0x1);
        gbc.writeMem(0x541f, { 0x64 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xcd1, gbc.sp());
        EXPECT(0x5420, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0233
        gbc.setState(0x9172, 0xf701, 0x2620, 0x96b4, 0xa631, 0x45f2, 0x0, 0x1);
        gbc.writeMem(0x9172, { 0x64 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf701, gbc.sp());
        EXPECT(0x9173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9172));
        // 64 0234
        gbc.setState(0x13ff, 0xc3f9, 0x5f60, 0x6468, 0xe7d1, 0x8a93, 0x0, 0x0);
        gbc.writeMem(0x13ff, { 0x64 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc3f9, gbc.sp());
        EXPECT(0x1400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0236
        gbc.setState(0xdda9, 0x1d71, 0xad0, 0x32ff, 0x626c, 0x2102, 0x0, 0x0);
        gbc.writeMem(0xdda9, { 0x64 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1d71, gbc.sp());
        EXPECT(0xddaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xdda9));
        // 64 0237
        gbc.setState(0x91f8, 0x6f2f, 0xd770, 0xc608, 0x16c1, 0xcfa0, 0x1, 0x1);
        gbc.writeMem(0x91f8, { 0x64 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6f2f, gbc.sp());
        EXPECT(0x91f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x91f8));
        // 64 0239
        gbc.setState(0x52f, 0x7a43, 0x670, 0xb5ec, 0x96fe, 0xf788, 0x1, 0x1);
        gbc.writeMem(0x52f, { 0x64 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7a43, gbc.sp());
        EXPECT(0x530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 023A
        gbc.setState(0x2dd5, 0xb056, 0xe330, 0x3f1e, 0xc91e, 0x2230, 0x0, 0x1);
        gbc.writeMem(0x2dd5, { 0x64 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb056, gbc.sp());
        EXPECT(0x2dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 023B
        gbc.setState(0xca83, 0xe582, 0x9c60, 0xeafc, 0xd217, 0x12c3, 0x0, 0x0);
        gbc.writeMem(0xca83, { 0x64 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe582, gbc.sp());
        EXPECT(0xca84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xca83));
        // 64 023C
        gbc.setState(0x86d6, 0xe1dc, 0xb350, 0x4b63, 0xdce7, 0x6cfe, 0x0, 0x1);
        gbc.writeMem(0x86d6, { 0x64 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe1dc, gbc.sp());
        EXPECT(0x86d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x86d6));
        // 64 023D
        gbc.setState(0xc26a, 0x5110, 0x1e20, 0x70a8, 0x248d, 0x7cf2, 0x0, 0x1);
        gbc.writeMem(0xc26a, { 0x64 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5110, gbc.sp());
        EXPECT(0xc26b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc26a));
        // 64 023E
        gbc.setState(0x4c4e, 0x657b, 0x1ca0, 0x60f3, 0xbfb5, 0x6bcf, 0x0, 0x1);
        gbc.writeMem(0x4c4e, { 0x64 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x657b, gbc.sp());
        EXPECT(0x4c4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 023F
        gbc.setState(0x405f, 0xb615, 0x23a0, 0x874c, 0x90d7, 0x87b0, 0x1, 0x1);
        gbc.writeMem(0x405f, { 0x64 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb615, gbc.sp());
        EXPECT(0x4060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0240
        gbc.setState(0xc609, 0xabde, 0x87f0, 0x793d, 0xcc48, 0x62c6, 0x1, 0x0);
        gbc.writeMem(0xc609, { 0x64 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xabde, gbc.sp());
        EXPECT(0xc60a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc609));
        // 64 0241
        gbc.setState(0x1140, 0x5d8a, 0xcdf0, 0xa952, 0x2196, 0x193, 0x1, 0x0);
        gbc.writeMem(0x1140, { 0x64 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5d8a, gbc.sp());
        EXPECT(0x1141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0242
        gbc.setState(0xd848, 0x3327, 0x5c90, 0x6bdf, 0xeb30, 0x22bd, 0x1, 0x1);
        gbc.writeMem(0xd848, { 0x64 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3327, gbc.sp());
        EXPECT(0xd849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd848));
        // 64 0243
        gbc.setState(0x45ea, 0x4c96, 0xc420, 0x45e2, 0x4c31, 0x1ebf, 0x0, 0x0);
        gbc.writeMem(0x45ea, { 0x64 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4c96, gbc.sp());
        EXPECT(0x45eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0244
        gbc.setState(0x2050, 0x5b6a, 0x8730, 0x4e24, 0xc4cb, 0x87b4, 0x1, 0x1);
        gbc.writeMem(0x2050, { 0x64 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5b6a, gbc.sp());
        EXPECT(0x2051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0245
        gbc.setState(0x70f1, 0x4f5e, 0xb5c0, 0x52b4, 0xd4a3, 0x59ad, 0x1, 0x1);
        gbc.writeMem(0x70f1, { 0x64 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4f5e, gbc.sp());
        EXPECT(0x70f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0247
        gbc.setState(0xd58d, 0xee64, 0x1170, 0x2a24, 0x991c, 0xc959, 0x1, 0x1);
        gbc.writeMem(0xd58d, { 0x64 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xee64, gbc.sp());
        EXPECT(0xd58e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd58d));
        // 64 0248
        gbc.setState(0x4ede, 0x6259, 0xdb50, 0x4423, 0x5511, 0x89bc, 0x1, 0x0);
        gbc.writeMem(0x4ede, { 0x64 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6259, gbc.sp());
        EXPECT(0x4edf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0249
        gbc.setState(0x644, 0x2fd5, 0xf490, 0x14aa, 0x59c8, 0x71bc, 0x1, 0x1);
        gbc.writeMem(0x644, { 0x64 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2fd5, gbc.sp());
        EXPECT(0x645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 024A
        gbc.setState(0xe8dd, 0xf08a, 0xa890, 0x5257, 0x87ba, 0x7398, 0x1, 0x0);
        gbc.writeMem(0xe8dd, { 0x64 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf08a, gbc.sp());
        EXPECT(0xe8de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe8dd));
        // 64 024B
        gbc.setState(0xc686, 0xef26, 0x5f70, 0xa80, 0xf5a8, 0x9acc, 0x1, 0x1);
        gbc.writeMem(0xc686, { 0x64 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xef26, gbc.sp());
        EXPECT(0xc687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc686));
        // 64 024C
        gbc.setState(0x3752, 0xf437, 0xb450, 0xb847, 0x3bd, 0x2b91, 0x0, 0x0);
        gbc.writeMem(0x3752, { 0x64 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf437, gbc.sp());
        EXPECT(0x3753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 024D
        gbc.setState(0x986a, 0x3b01, 0xacd0, 0x6561, 0xf6d1, 0x6e30, 0x0, 0x0);
        gbc.writeMem(0x986a, { 0x64 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3b01, gbc.sp());
        EXPECT(0x986b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x986a));
        // 64 024E
        gbc.setState(0xe9f7, 0x4d5f, 0xaa0, 0x6463, 0x4810, 0x8e3e, 0x1, 0x1);
        gbc.writeMem(0xe9f7, { 0x64 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4d5f, gbc.sp());
        EXPECT(0xe9f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe9f7));
        // 64 024F
        gbc.setState(0xa614, 0x7cba, 0xf710, 0x22af, 0x214b, 0xd983, 0x0, 0x1);
        gbc.writeMem(0xa614, { 0x64 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7cba, gbc.sp());
        EXPECT(0xa615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa614));
        // 64 0250
        gbc.setState(0xa651, 0x6c18, 0x23a0, 0xebea, 0xed4f, 0x827a, 0x1, 0x1);
        gbc.writeMem(0xa651, { 0x64 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6c18, gbc.sp());
        EXPECT(0xa652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa651));
        // 64 0251
        gbc.setState(0x3c0b, 0xc4f1, 0x820, 0xd10e, 0xd6be, 0x777f, 0x1, 0x1);
        gbc.writeMem(0x3c0b, { 0x64 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc4f1, gbc.sp());
        EXPECT(0x3c0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0252
        gbc.setState(0xd0e6, 0xca76, 0x49c0, 0x77a9, 0x6cd5, 0x8487, 0x1, 0x0);
        gbc.writeMem(0xd0e6, { 0x64 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xca76, gbc.sp());
        EXPECT(0xd0e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd0e6));
        // 64 0253
        gbc.setState(0x6373, 0xe7c1, 0xdf40, 0xedf, 0x3077, 0xc29, 0x0, 0x1);
        gbc.writeMem(0x6373, { 0x64 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe7c1, gbc.sp());
        EXPECT(0x6374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0254
        gbc.setState(0xbc34, 0xbcd0, 0xdfc0, 0xebd8, 0x392e, 0x9fe5, 0x1, 0x0);
        gbc.writeMem(0xbc34, { 0x64 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbcd0, gbc.sp());
        EXPECT(0xbc35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xbc34));
        // 64 0255
        gbc.setState(0x64e4, 0xcfcf, 0xc830, 0xb412, 0x31a, 0x2085, 0x1, 0x0);
        gbc.writeMem(0x64e4, { 0x64 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xcfcf, gbc.sp());
        EXPECT(0x64e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0256
        gbc.setState(0xb73a, 0x7670, 0x42f0, 0xb847, 0xb62f, 0xf625, 0x0, 0x1);
        gbc.writeMem(0xb73a, { 0x64 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7670, gbc.sp());
        EXPECT(0xb73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb73a));
        // 64 0257
        gbc.setState(0x5459, 0x5b24, 0x73c0, 0x950b, 0x9ba4, 0x478a, 0x0, 0x1);
        gbc.writeMem(0x5459, { 0x64 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5b24, gbc.sp());
        EXPECT(0x545a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0258
        gbc.setState(0x7821, 0x2a47, 0x23d0, 0xef78, 0x2642, 0x36ef, 0x0, 0x0);
        gbc.writeMem(0x7821, { 0x64 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2a47, gbc.sp());
        EXPECT(0x7822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0259
        gbc.setState(0x23b9, 0xb06f, 0xd940, 0x53b4, 0x3d13, 0x1b5e, 0x1, 0x0);
        gbc.writeMem(0x23b9, { 0x64 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb06f, gbc.sp());
        EXPECT(0x23ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 025A
        gbc.setState(0x5acc, 0x3546, 0x94d0, 0xfaeb, 0xfea5, 0x8445, 0x1, 0x0);
        gbc.writeMem(0x5acc, { 0x64 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3546, gbc.sp());
        EXPECT(0x5acd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 025C
        gbc.setState(0x241a, 0xf00c, 0xc0d0, 0xdc3b, 0x3372, 0x3bb4, 0x0, 0x0);
        gbc.writeMem(0x241a, { 0x64 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf00c, gbc.sp());
        EXPECT(0x241b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 025D
        gbc.setState(0x5931, 0x972c, 0x94d0, 0x43c5, 0x958d, 0x1f24, 0x1, 0x0);
        gbc.writeMem(0x5931, { 0x64 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x972c, gbc.sp());
        EXPECT(0x5932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 025E
        gbc.setState(0xd0b9, 0x4b06, 0x7000, 0xf75, 0xc1e5, 0xd2a6, 0x0, 0x0);
        gbc.writeMem(0xd0b9, { 0x64 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4b06, gbc.sp());
        EXPECT(0xd0ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd0b9));
        // 64 025F
        gbc.setState(0x386d, 0x70c, 0x2c60, 0x43c1, 0xc609, 0xa614, 0x0, 0x1);
        gbc.writeMem(0x386d, { 0x64 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x70c, gbc.sp());
        EXPECT(0x386e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0260
        gbc.setState(0x3c5a, 0xa3fc, 0x8ac0, 0x91dc, 0xcaa0, 0x3d5e, 0x0, 0x0);
        gbc.writeMem(0x3c5a, { 0x64 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa3fc, gbc.sp());
        EXPECT(0x3c5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0262
        gbc.setState(0x9d2b, 0xdad1, 0x86c0, 0x912a, 0xbb6f, 0xe1ca, 0x0, 0x1);
        gbc.writeMem(0x9d2b, { 0x64 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdad1, gbc.sp());
        EXPECT(0x9d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9d2b));
        // 64 0264
        gbc.setState(0xe8ae, 0x135e, 0x25e0, 0xd9aa, 0xd7df, 0x1774, 0x0, 0x1);
        gbc.writeMem(0xe8ae, { 0x64 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x135e, gbc.sp());
        EXPECT(0xe8af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe8ae));
        // 64 0265
        gbc.setState(0xa13b, 0xa403, 0x5620, 0x9140, 0x6a2f, 0x8952, 0x0, 0x1);
        gbc.writeMem(0xa13b, { 0x64 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa403, gbc.sp());
        EXPECT(0xa13c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa13b));
        // 64 0266
        gbc.setState(0xc0fc, 0x8335, 0x8ec0, 0xc57e, 0x9748, 0x5ecc, 0x0, 0x1);
        gbc.writeMem(0xc0fc, { 0x64 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8335, gbc.sp());
        EXPECT(0xc0fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc0fc));
        // 64 0267
        gbc.setState(0x54c8, 0x1ff7, 0x1d30, 0xcdb4, 0xc3f0, 0x4ff1, 0x0, 0x0);
        gbc.writeMem(0x54c8, { 0x64 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1ff7, gbc.sp());
        EXPECT(0x54c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0268
        gbc.setState(0xdb2d, 0xa78b, 0x8130, 0x36c2, 0xc887, 0xe97, 0x1, 0x0);
        gbc.writeMem(0xdb2d, { 0x64 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa78b, gbc.sp());
        EXPECT(0xdb2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xdb2d));
        // 64 0269
        gbc.setState(0xd089, 0x310c, 0xf0a0, 0xbd3f, 0x6a0, 0xdfde, 0x0, 0x1);
        gbc.writeMem(0xd089, { 0x64 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x310c, gbc.sp());
        EXPECT(0xd08a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd089));
        // 64 026B
        gbc.setState(0x6f39, 0xe2ef, 0x82d0, 0xc8f5, 0x459e, 0xb676, 0x0, 0x0);
        gbc.writeMem(0x6f39, { 0x64 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe2ef, gbc.sp());
        EXPECT(0x6f3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 026C
        gbc.setState(0xe620, 0x33da, 0xee70, 0xe04e, 0x97ec, 0xd7fd, 0x0, 0x0);
        gbc.writeMem(0xe620, { 0x64 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x33da, gbc.sp());
        EXPECT(0xe621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe620));
        // 64 026D
        gbc.setState(0x663f, 0xe965, 0x380, 0x922, 0xa2b, 0x133e, 0x1, 0x1);
        gbc.writeMem(0x663f, { 0x64 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe965, gbc.sp());
        EXPECT(0x6640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 026E
        gbc.setState(0xb479, 0x4f83, 0xbd0, 0xaa8f, 0x53c5, 0x1e8, 0x1, 0x0);
        gbc.writeMem(0xb479, { 0x64 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4f83, gbc.sp());
        EXPECT(0xb47a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb479));
        // 64 026F
        gbc.setState(0xa4fc, 0x5603, 0x80e0, 0x688e, 0x6e4f, 0x98fd, 0x1, 0x0);
        gbc.writeMem(0xa4fc, { 0x64 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5603, gbc.sp());
        EXPECT(0xa4fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa4fc));
        // 64 0270
        gbc.setState(0x47aa, 0x2983, 0xc070, 0x5f7e, 0xeacb, 0x3923, 0x1, 0x1);
        gbc.writeMem(0x47aa, { 0x64 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2983, gbc.sp());
        EXPECT(0x47ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0271
        gbc.setState(0xcb72, 0xf237, 0xf330, 0xbdf4, 0xb35e, 0x4929, 0x1, 0x0);
        gbc.writeMem(0xcb72, { 0x64 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf237, gbc.sp());
        EXPECT(0xcb73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xcb72));
        // 64 0272
        gbc.setState(0x636f, 0x5300, 0x23c0, 0xe433, 0x4055, 0xa956, 0x0, 0x0);
        gbc.writeMem(0x636f, { 0x64 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5300, gbc.sp());
        EXPECT(0x6370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0273
        gbc.setState(0x120a, 0x54e1, 0xa0, 0x1c6e, 0x4a0f, 0x5038, 0x1, 0x1);
        gbc.writeMem(0x120a, { 0x64 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x54e1, gbc.sp());
        EXPECT(0x120b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0274
        gbc.setState(0x8497, 0x66aa, 0x420, 0x90cc, 0xe756, 0x3810, 0x1, 0x0);
        gbc.writeMem(0x8497, { 0x64 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x66aa, gbc.sp());
        EXPECT(0x8498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8497));
        // 64 0275
        gbc.setState(0x1a98, 0xa6e5, 0x9420, 0xe488, 0x58ef, 0xae27, 0x0, 0x1);
        gbc.writeMem(0x1a98, { 0x64 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa6e5, gbc.sp());
        EXPECT(0x1a99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0276
        gbc.setState(0x693b, 0xd1ed, 0x95b0, 0xc6e3, 0x6ded, 0xcc53, 0x0, 0x0);
        gbc.writeMem(0x693b, { 0x64 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd1ed, gbc.sp());
        EXPECT(0x693c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0277
        gbc.setState(0xe08e, 0x39de, 0xc4f0, 0x8668, 0x7648, 0x8e02, 0x1, 0x0);
        gbc.writeMem(0xe08e, { 0x64 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x39de, gbc.sp());
        EXPECT(0xe08f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe08e));
        // 64 0278
        gbc.setState(0xd85c, 0xc571, 0xa930, 0xc40, 0xbf2a, 0xe1c3, 0x1, 0x1);
        gbc.writeMem(0xd85c, { 0x64 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc571, gbc.sp());
        EXPECT(0xd85d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd85c));
        // 64 0279
        gbc.setState(0x3eef, 0xe685, 0x16a0, 0x79b6, 0x948e, 0x3118, 0x0, 0x0);
        gbc.writeMem(0x3eef, { 0x64 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe685, gbc.sp());
        EXPECT(0x3ef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 027A
        gbc.setState(0xdede, 0x583, 0xd080, 0x1bf3, 0xaca9, 0x8e85, 0x1, 0x1);
        gbc.writeMem(0xdede, { 0x64 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x583, gbc.sp());
        EXPECT(0xdedf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xdede));
        // 64 027B
        gbc.setState(0xa33a, 0x3bea, 0xc980, 0x629, 0x703a, 0x25d1, 0x1, 0x1);
        gbc.writeMem(0xa33a, { 0x64 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3bea, gbc.sp());
        EXPECT(0xa33b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa33a));
        // 64 027C
        gbc.setState(0x6967, 0x6e46, 0x80e0, 0x9ab2, 0x8dd9, 0xe41c, 0x1, 0x0);
        gbc.writeMem(0x6967, { 0x64 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6e46, gbc.sp());
        EXPECT(0x6968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 027D
        gbc.setState(0x441c, 0x8df4, 0xb950, 0xc512, 0xe347, 0x7f88, 0x0, 0x1);
        gbc.writeMem(0x441c, { 0x64 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8df4, gbc.sp());
        EXPECT(0x441d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 027E
        gbc.setState(0xa2ba, 0x7ff9, 0x4e30, 0x34ef, 0x1053, 0xa1cd, 0x1, 0x0);
        gbc.writeMem(0xa2ba, { 0x64 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7ff9, gbc.sp());
        EXPECT(0xa2bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa2ba));
        // 64 027F
        gbc.setState(0xd41b, 0x5f42, 0x4be0, 0xea57, 0x4ccf, 0x3301, 0x1, 0x0);
        gbc.writeMem(0xd41b, { 0x64 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5f42, gbc.sp());
        EXPECT(0xd41c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd41b));
        // 64 0280
        gbc.setState(0xfca, 0x47bb, 0x3ed0, 0x91c9, 0xc5a9, 0x4d47, 0x0, 0x1);
        gbc.writeMem(0xfca, { 0x64 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x47bb, gbc.sp());
        EXPECT(0xfcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0281
        gbc.setState(0x18bd, 0x4b07, 0x6ef0, 0x85c4, 0x7301, 0xd039, 0x1, 0x1);
        gbc.writeMem(0x18bd, { 0x64 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4b07, gbc.sp());
        EXPECT(0x18be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0282
        gbc.setState(0x64bf, 0xf131, 0x5c10, 0x86e5, 0x587a, 0xf671, 0x0, 0x1);
        gbc.writeMem(0x64bf, { 0x64 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf131, gbc.sp());
        EXPECT(0x64c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0283
        gbc.setState(0x641c, 0x578d, 0xd850, 0xe265, 0x2f68, 0x9495, 0x1, 0x0);
        gbc.writeMem(0x641c, { 0x64 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x578d, gbc.sp());
        EXPECT(0x641d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0284
        gbc.setState(0x2e5f, 0x1ebd, 0x7f10, 0x538, 0x5534, 0x56a4, 0x0, 0x1);
        gbc.writeMem(0x2e5f, { 0x64 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1ebd, gbc.sp());
        EXPECT(0x2e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0285
        gbc.setState(0xd66a, 0x4b81, 0x250, 0x852f, 0x29d6, 0xc29b, 0x1, 0x0);
        gbc.writeMem(0xd66a, { 0x64 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4b81, gbc.sp());
        EXPECT(0xd66b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd66a));
        // 64 0287
        gbc.setState(0xd2b2, 0x23c9, 0xc090, 0xe26e, 0x9e66, 0x7012, 0x1, 0x0);
        gbc.writeMem(0xd2b2, { 0x64 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x23c9, gbc.sp());
        EXPECT(0xd2b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd2b2));
        // 64 0288
        gbc.setState(0xc593, 0xaed4, 0x5da0, 0xea4f, 0x5485, 0x91f2, 0x1, 0x0);
        gbc.writeMem(0xc593, { 0x64 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xaed4, gbc.sp());
        EXPECT(0xc594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc593));
        // 64 0289
        gbc.setState(0x84fa, 0x901e, 0x42e0, 0xf7d7, 0xb9b9, 0xdea6, 0x0, 0x1);
        gbc.writeMem(0x84fa, { 0x64 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x901e, gbc.sp());
        EXPECT(0x84fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x84fa));
        // 64 028A
        gbc.setState(0x77ab, 0x61df, 0xbb60, 0x7ea7, 0x753f, 0xe225, 0x1, 0x0);
        gbc.writeMem(0x77ab, { 0x64 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x61df, gbc.sp());
        EXPECT(0x77ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 028B
        gbc.setState(0x37be, 0x36e2, 0xd0d0, 0xdb55, 0xe606, 0x6641, 0x1, 0x0);
        gbc.writeMem(0x37be, { 0x64 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x36e2, gbc.sp());
        EXPECT(0x37bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 028C
        gbc.setState(0x7c3, 0x7818, 0xbb90, 0xb328, 0xa177, 0x6b8c, 0x1, 0x0);
        gbc.writeMem(0x7c3, { 0x64 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7818, gbc.sp());
        EXPECT(0x7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 028D
        gbc.setState(0xff, 0x2ddf, 0xa4c0, 0x44e0, 0xe7fa, 0x6bb5, 0x1, 0x0);
        gbc.writeMem(0xff, { 0x64 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2ddf, gbc.sp());
        EXPECT(0x100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 028E
        gbc.setState(0x3905, 0xf5c6, 0xb950, 0x325e, 0xd49d, 0xd56f, 0x1, 0x0);
        gbc.writeMem(0x3905, { 0x64 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf5c6, gbc.sp());
        EXPECT(0x3906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 028F
        gbc.setState(0x1a67, 0xc4ca, 0x2d40, 0x9cdb, 0x9a8c, 0x6ed9, 0x0, 0x1);
        gbc.writeMem(0x1a67, { 0x64 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc4ca, gbc.sp());
        EXPECT(0x1a68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0290
        gbc.setState(0x31a4, 0x280a, 0x4060, 0xe19, 0xf286, 0xb43c, 0x0, 0x0);
        gbc.writeMem(0x31a4, { 0x64 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x280a, gbc.sp());
        EXPECT(0x31a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0291
        gbc.setState(0xb33a, 0xfc82, 0xae0, 0xc92b, 0x8011, 0x52e4, 0x1, 0x0);
        gbc.writeMem(0xb33a, { 0x64 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfc82, gbc.sp());
        EXPECT(0xb33b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb33a));
        // 64 0292
        gbc.setState(0x380, 0x6b28, 0x2b20, 0x276, 0xa5c7, 0x5bdd, 0x0, 0x1);
        gbc.writeMem(0x380, { 0x64 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6b28, gbc.sp());
        EXPECT(0x381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0293
        gbc.setState(0xfc2, 0x6bb3, 0x9f30, 0x3559, 0xcf65, 0xca32, 0x1, 0x1);
        gbc.writeMem(0xfc2, { 0x64 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6bb3, gbc.sp());
        EXPECT(0xfc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0294
        gbc.setState(0x3dc6, 0x4720, 0x4840, 0xdccc, 0xaf15, 0x3474, 0x0, 0x1);
        gbc.writeMem(0x3dc6, { 0x64 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4720, gbc.sp());
        EXPECT(0x3dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0296
        gbc.setState(0x1a65, 0x98cd, 0xb200, 0xc75b, 0x64d3, 0x534a, 0x0, 0x1);
        gbc.writeMem(0x1a65, { 0x64 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x98cd, gbc.sp());
        EXPECT(0x1a66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0297
        gbc.setState(0xd037, 0xf19f, 0xb540, 0x6770, 0x91f3, 0x5518, 0x1, 0x0);
        gbc.writeMem(0xd037, { 0x64 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf19f, gbc.sp());
        EXPECT(0xd038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd037));
        // 64 0298
        gbc.setState(0x7356, 0x9543, 0xd10, 0x9ee2, 0xc15f, 0x492b, 0x1, 0x1);
        gbc.writeMem(0x7356, { 0x64 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9543, gbc.sp());
        EXPECT(0x7357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0299
        gbc.setState(0x3434, 0xcda2, 0x730, 0xc267, 0x4a23, 0x9717, 0x1, 0x0);
        gbc.writeMem(0x3434, { 0x64 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xcda2, gbc.sp());
        EXPECT(0x3435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 029A
        gbc.setState(0xceb0, 0x2053, 0x1320, 0x6144, 0x159b, 0xfebb, 0x0, 0x1);
        gbc.writeMem(0xceb0, { 0x64 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2053, gbc.sp());
        EXPECT(0xceb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xceb0));
        // 64 029B
        gbc.setState(0xb549, 0xf66f, 0xa740, 0x593f, 0x8464, 0x494e, 0x1, 0x0);
        gbc.writeMem(0xb549, { 0x64 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf66f, gbc.sp());
        EXPECT(0xb54a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb549));
        // 64 029D
        gbc.setState(0xabd7, 0xc13e, 0x19b0, 0xdb87, 0x4154, 0x974d, 0x1, 0x0);
        gbc.writeMem(0xabd7, { 0x64 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc13e, gbc.sp());
        EXPECT(0xabd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xabd7));
        // 64 029E
        gbc.setState(0x7222, 0xfe02, 0x7d40, 0x26ac, 0x266d, 0xcd3f, 0x1, 0x1);
        gbc.writeMem(0x7222, { 0x64 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xfe02, gbc.sp());
        EXPECT(0x7223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 029F
        gbc.setState(0x5ca6, 0x97c4, 0x6650, 0xe4ae, 0x32d0, 0x46ad, 0x0, 0x1);
        gbc.writeMem(0x5ca6, { 0x64 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x97c4, gbc.sp());
        EXPECT(0x5ca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02A0
        gbc.setState(0x78cc, 0xb513, 0x2dd0, 0xc59f, 0xf42d, 0x2a5d, 0x0, 0x0);
        gbc.writeMem(0x78cc, { 0x64 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb513, gbc.sp());
        EXPECT(0x78cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02A1
        gbc.setState(0x4de0, 0xa341, 0xb5b0, 0x8965, 0xe6c3, 0x465d, 0x1, 0x0);
        gbc.writeMem(0x4de0, { 0x64 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa341, gbc.sp());
        EXPECT(0x4de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02A2
        gbc.setState(0x507b, 0x28ad, 0xfdd0, 0x7399, 0xce7e, 0x54dd, 0x1, 0x1);
        gbc.writeMem(0x507b, { 0x64 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x28ad, gbc.sp());
        EXPECT(0x507c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02A3
        gbc.setState(0xd732, 0x6785, 0x7be0, 0x9d1d, 0xa673, 0xf523, 0x0, 0x0);
        gbc.writeMem(0xd732, { 0x64 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6785, gbc.sp());
        EXPECT(0xd733, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd732));
        // 64 02A4
        gbc.setState(0x3ad6, 0xc7db, 0xf810, 0x2fda, 0xf298, 0x9038, 0x0, 0x0);
        gbc.writeMem(0x3ad6, { 0x64 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc7db, gbc.sp());
        EXPECT(0x3ad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02A5
        gbc.setState(0x43b2, 0x7464, 0xab70, 0xe18f, 0x3749, 0x4747, 0x0, 0x1);
        gbc.writeMem(0x43b2, { 0x64 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7464, gbc.sp());
        EXPECT(0x43b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02A6
        gbc.setState(0x6490, 0x3a3f, 0xc510, 0x5bd2, 0x19b1, 0xfd1f, 0x1, 0x0);
        gbc.writeMem(0x6490, { 0x64 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3a3f, gbc.sp());
        EXPECT(0x6491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02A7
        gbc.setState(0x9559, 0x7c7, 0xd170, 0x58c5, 0x7714, 0xf9a8, 0x0, 0x1);
        gbc.writeMem(0x9559, { 0x64 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7c7, gbc.sp());
        EXPECT(0x955a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9559));
        // 64 02A8
        gbc.setState(0x8a57, 0x63d7, 0x9250, 0x1dc5, 0x5ac8, 0x4fa5, 0x1, 0x1);
        gbc.writeMem(0x8a57, { 0x64 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x63d7, gbc.sp());
        EXPECT(0x8a58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8a57));
        // 64 02A9
        gbc.setState(0xc411, 0x982e, 0x9330, 0xfe86, 0x364e, 0xaae5, 0x1, 0x0);
        gbc.writeMem(0xc411, { 0x64 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x982e, gbc.sp());
        EXPECT(0xc412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc411));
        // 64 02AA
        gbc.setState(0xbfc1, 0xdacf, 0x3d50, 0x1f16, 0xa03b, 0x6d1b, 0x1, 0x0);
        gbc.writeMem(0xbfc1, { 0x64 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xdacf, gbc.sp());
        EXPECT(0xbfc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xbfc1));
        // 64 02AC
        gbc.setState(0x3b83, 0xeba6, 0xcbf0, 0x6c5a, 0x4005, 0xb949, 0x0, 0x0);
        gbc.writeMem(0x3b83, { 0x64 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xeba6, gbc.sp());
        EXPECT(0x3b84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02AD
        gbc.setState(0xebc8, 0x4b97, 0xb3e0, 0x473d, 0x4fb6, 0xc655, 0x1, 0x1);
        gbc.writeMem(0xebc8, { 0x64 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4b97, gbc.sp());
        EXPECT(0xebc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xebc8));
        // 64 02AE
        gbc.setState(0xa159, 0x61d1, 0x4390, 0x97b8, 0x2960, 0x83e0, 0x1, 0x0);
        gbc.writeMem(0xa159, { 0x64 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x61d1, gbc.sp());
        EXPECT(0xa15a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa159));
        // 64 02AF
        gbc.setState(0xbe3e, 0x8cc3, 0x4230, 0xf9cb, 0x1bc8, 0xd995, 0x1, 0x1);
        gbc.writeMem(0xbe3e, { 0x64 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8cc3, gbc.sp());
        EXPECT(0xbe3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xbe3e));
        // 64 02B0
        gbc.setState(0xe8b4, 0x7fdd, 0xdb80, 0x20a0, 0x902e, 0x7418, 0x1, 0x0);
        gbc.writeMem(0xe8b4, { 0x64 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7fdd, gbc.sp());
        EXPECT(0xe8b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe8b4));
        // 64 02B1
        gbc.setState(0x48e3, 0x3312, 0x3e80, 0xf1e7, 0xf6bf, 0xb916, 0x0, 0x0);
        gbc.writeMem(0x48e3, { 0x64 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3312, gbc.sp());
        EXPECT(0x48e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 02B2
        gbc.setState(0x601f, 0xd030, 0xde60, 0xa76b, 0xb156, 0xfe57, 0x1, 0x0);
        gbc.writeMem(0x601f, { 0x64 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd030, gbc.sp());
        EXPECT(0x6020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 02B3
        gbc.setState(0xee01, 0x65fa, 0x5180, 0xfb2f, 0xca64, 0x684, 0x1, 0x1);
        gbc.writeMem(0xee01, { 0x64 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x65fa, gbc.sp());
        EXPECT(0xee02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xee01));
        // 64 02B4
        gbc.setState(0x8c6c, 0x2c4c, 0x3110, 0x741d, 0x71d0, 0xf65, 0x1, 0x1);
        gbc.writeMem(0x8c6c, { 0x64 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2c4c, gbc.sp());
        EXPECT(0x8c6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8c6c));
        // 64 02B5
        gbc.setState(0x86e6, 0x16af, 0xdd0, 0x448d, 0x183e, 0xe19f, 0x0, 0x1);
        gbc.writeMem(0x86e6, { 0x64 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x16af, gbc.sp());
        EXPECT(0x86e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x86e6));
        // 64 02B6
        gbc.setState(0x4f4a, 0x1156, 0xd160, 0x5066, 0xf4ba, 0xe562, 0x0, 0x0);
        gbc.writeMem(0x4f4a, { 0x64 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1156, gbc.sp());
        EXPECT(0x4f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 02B7
        gbc.setState(0xabdd, 0xe234, 0xa260, 0x904b, 0xf0a7, 0x3562, 0x1, 0x1);
        gbc.writeMem(0xabdd, { 0x64 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe234, gbc.sp());
        EXPECT(0xabde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xabdd));
        // 64 02B8
        gbc.setState(0x67c8, 0xea24, 0xcba0, 0x704a, 0x873e, 0x458a, 0x1, 0x1);
        gbc.writeMem(0x67c8, { 0x64 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xea24, gbc.sp());
        EXPECT(0x67c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 02B9
        gbc.setState(0xa077, 0xf80e, 0xa1c0, 0x63c6, 0x1157, 0x80dd, 0x1, 0x1);
        gbc.writeMem(0xa077, { 0x64 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf80e, gbc.sp());
        EXPECT(0xa078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa077));
        // 64 02BA
        gbc.setState(0xda72, 0xe906, 0x56e0, 0x94cf, 0x92d7, 0xeed0, 0x0, 0x1);
        gbc.writeMem(0xda72, { 0x64 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe906, gbc.sp());
        EXPECT(0xda73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xda72));
        // 64 02BB
        gbc.setState(0x7627, 0x7960, 0xad10, 0xacf, 0xff19, 0xeae5, 0x1, 0x0);
        gbc.writeMem(0x7627, { 0x64 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7960, gbc.sp());
        EXPECT(0x7628, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02BC
        gbc.setState(0xe429, 0x8b67, 0xc440, 0xc8cd, 0x5ac5, 0xb412, 0x0, 0x1);
        gbc.writeMem(0xe429, { 0x64 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8b67, gbc.sp());
        EXPECT(0xe42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe429));
        // 64 02BD
        gbc.setState(0x23e2, 0xd9b6, 0x8d90, 0xb04e, 0x5c2c, 0x2efa, 0x0, 0x0);
        gbc.writeMem(0x23e2, { 0x64 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd9b6, gbc.sp());
        EXPECT(0x23e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02BE
        gbc.setState(0xa657, 0xf1d3, 0x5ff0, 0x3a82, 0x430f, 0xb5c7, 0x1, 0x1);
        gbc.writeMem(0xa657, { 0x64 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf1d3, gbc.sp());
        EXPECT(0xa658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa657));
        // 64 02BF
        gbc.setState(0xb5b7, 0xddb5, 0xd1a0, 0xfe3f, 0xa216, 0xbbe0, 0x0, 0x1);
        gbc.writeMem(0xb5b7, { 0x64 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xddb5, gbc.sp());
        EXPECT(0xb5b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb5b7));
        // 64 02C0
        gbc.setState(0x4f43, 0x4424, 0x22b0, 0x72b0, 0xfe8f, 0x351b, 0x0, 0x0);
        gbc.writeMem(0x4f43, { 0x64 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4424, gbc.sp());
        EXPECT(0x4f44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02C1
        gbc.setState(0x6023, 0x4732, 0x91f0, 0x288d, 0x618f, 0x1f5b, 0x0, 0x1);
        gbc.writeMem(0x6023, { 0x64 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4732, gbc.sp());
        EXPECT(0x6024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02C2
        gbc.setState(0x1ecc, 0xbd19, 0x5c0, 0x173f, 0x6557, 0xf4a3, 0x1, 0x0);
        gbc.writeMem(0x1ecc, { 0x64 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbd19, gbc.sp());
        EXPECT(0x1ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 02C3
        gbc.setState(0x4776, 0xd0b8, 0xd550, 0xcc2d, 0xe1af, 0xf71a, 0x0, 0x0);
        gbc.writeMem(0x4776, { 0x64 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd0b8, gbc.sp());
        EXPECT(0x4777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02C4
        gbc.setState(0x6319, 0x66d6, 0xa800, 0xb731, 0x8f41, 0xe911, 0x0, 0x1);
        gbc.writeMem(0x6319, { 0x64 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x66d6, gbc.sp());
        EXPECT(0x631a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 02C5
        gbc.setState(0x1396, 0x3198, 0x2010, 0x430c, 0x3cfc, 0x44f2, 0x0, 0x0);
        gbc.writeMem(0x1396, { 0x64 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3198, gbc.sp());
        EXPECT(0x1397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02C6
        gbc.setState(0x7389, 0x8e0b, 0xa6a0, 0x4f5f, 0x5e0d, 0xc16d, 0x0, 0x0);
        gbc.writeMem(0x7389, { 0x64 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8e0b, gbc.sp());
        EXPECT(0x738a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 02C7
        gbc.setState(0xe579, 0xcb00, 0x79c0, 0x3d17, 0x41bc, 0xf379, 0x0, 0x1);
        gbc.writeMem(0xe579, { 0x64 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xcb00, gbc.sp());
        EXPECT(0xe57a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe579));
        // 64 02C8
        gbc.setState(0x73c, 0xfda5, 0x81e0, 0x74ad, 0xdc62, 0x5ace, 0x1, 0x1);
        gbc.writeMem(0x73c, { 0x64 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfda5, gbc.sp());
        EXPECT(0x73d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 02C9
        gbc.setState(0xd450, 0x3235, 0x2db0, 0x5a57, 0x9a36, 0xe30e, 0x1, 0x0);
        gbc.writeMem(0xd450, { 0x64 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3235, gbc.sp());
        EXPECT(0xd451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd450));
        // 64 02CA
        gbc.setState(0x4f38, 0xe4ee, 0xf070, 0x7afb, 0xfdcc, 0x53b6, 0x1, 0x1);
        gbc.writeMem(0x4f38, { 0x64 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe4ee, gbc.sp());
        EXPECT(0x4f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02CB
        gbc.setState(0x63ec, 0xe028, 0xcf60, 0x3343, 0xd3ee, 0x16e3, 0x0, 0x0);
        gbc.writeMem(0x63ec, { 0x64 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe028, gbc.sp());
        EXPECT(0x63ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 02CC
        gbc.setState(0x77d6, 0x333b, 0x5930, 0x270a, 0xc6d9, 0x9c0f, 0x0, 0x1);
        gbc.writeMem(0x77d6, { 0x64 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x333b, gbc.sp());
        EXPECT(0x77d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02CD
        gbc.setState(0x7a59, 0xda1b, 0x9a60, 0x95ee, 0xca21, 0x25c2, 0x1, 0x1);
        gbc.writeMem(0x7a59, { 0x64 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xda1b, gbc.sp());
        EXPECT(0x7a5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 02CE
        gbc.setState(0x9e49, 0x9bde, 0xe820, 0x8c0f, 0xff50, 0x751c, 0x0, 0x0);
        gbc.writeMem(0x9e49, { 0x64 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9bde, gbc.sp());
        EXPECT(0x9e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9e49));
        // 64 02CF
        gbc.setState(0x4a30, 0x282a, 0x4be0, 0x55f2, 0x4ca9, 0x61f5, 0x1, 0x0);
        gbc.writeMem(0x4a30, { 0x64 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x282a, gbc.sp());
        EXPECT(0x4a31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 02D0
        gbc.setState(0xa0ca, 0x31b, 0x85c0, 0x477e, 0x21eb, 0xa0c8, 0x0, 0x0);
        gbc.writeMem(0xa0ca, { 0x64 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x31b, gbc.sp());
        EXPECT(0xa0cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa0ca));
        // 64 02D1
        gbc.setState(0x2e99, 0x5e30, 0xde20, 0xed04, 0x621f, 0xa96c, 0x0, 0x1);
        gbc.writeMem(0x2e99, { 0x64 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5e30, gbc.sp());
        EXPECT(0x2e9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 02D2
        gbc.setState(0xbcfe, 0xcc9a, 0x9180, 0x9bc1, 0x8df8, 0xa128, 0x1, 0x1);
        gbc.writeMem(0xbcfe, { 0x64 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xcc9a, gbc.sp());
        EXPECT(0xbcff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xbcfe));
        // 64 02D3
        gbc.setState(0x1d2e, 0x2c56, 0x8f30, 0x4380, 0x7495, 0x2c52, 0x0, 0x0);
        gbc.writeMem(0x1d2e, { 0x64 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2c56, gbc.sp());
        EXPECT(0x1d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02D4
        gbc.setState(0xc9ee, 0x6db1, 0xd470, 0x554c, 0x5552, 0xeea7, 0x0, 0x0);
        gbc.writeMem(0xc9ee, { 0x64 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6db1, gbc.sp());
        EXPECT(0xc9ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc9ee));
        // 64 02D5
        gbc.setState(0xe762, 0xec24, 0x3880, 0x24e2, 0x855, 0x10a0, 0x0, 0x0);
        gbc.writeMem(0xe762, { 0x64 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xec24, gbc.sp());
        EXPECT(0xe763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe762));
        // 64 02D6
        gbc.setState(0x44a4, 0xbac1, 0xd6b0, 0x65a9, 0x64ad, 0xfe4c, 0x0, 0x1);
        gbc.writeMem(0x44a4, { 0x64 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xbac1, gbc.sp());
        EXPECT(0x44a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02D7
        gbc.setState(0xe390, 0x6def, 0x9df0, 0xb7ac, 0xeddb, 0x88c4, 0x1, 0x0);
        gbc.writeMem(0xe390, { 0x64 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6def, gbc.sp());
        EXPECT(0xe391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe390));
        // 64 02D8
        gbc.setState(0xc715, 0x25c3, 0x2060, 0xebe4, 0x673b, 0x3be6, 0x0, 0x1);
        gbc.writeMem(0xc715, { 0x64 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x25c3, gbc.sp());
        EXPECT(0xc716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc715));
        // 64 02D9
        gbc.setState(0x25bc, 0xf016, 0xce00, 0xbad2, 0xa5ba, 0xbe9b, 0x1, 0x1);
        gbc.writeMem(0x25bc, { 0x64 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf016, gbc.sp());
        EXPECT(0x25bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 02DA
        gbc.setState(0xc4c9, 0x401, 0x25e0, 0xe17f, 0x25d8, 0xc434, 0x1, 0x0);
        gbc.writeMem(0xc4c9, { 0x64 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x401, gbc.sp());
        EXPECT(0xc4ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc4c9));
        // 64 02DB
        gbc.setState(0x55f1, 0xc3d6, 0xb410, 0x6ca8, 0x3783, 0xd80b, 0x1, 0x1);
        gbc.writeMem(0x55f1, { 0x64 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc3d6, gbc.sp());
        EXPECT(0x55f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02DC
        gbc.setState(0xabc1, 0xa0dd, 0x7fc0, 0x4583, 0x2db8, 0x75d9, 0x0, 0x0);
        gbc.writeMem(0xabc1, { 0x64 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa0dd, gbc.sp());
        EXPECT(0xabc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xabc1));
        // 64 02DD
        gbc.setState(0x7b43, 0x4916, 0x3ff0, 0x6613, 0xe438, 0x877f, 0x1, 0x0);
        gbc.writeMem(0x7b43, { 0x64 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4916, gbc.sp());
        EXPECT(0x7b44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02DE
        gbc.setState(0x4892, 0x3133, 0x90c0, 0xa4cc, 0xe983, 0x84db, 0x1, 0x0);
        gbc.writeMem(0x4892, { 0x64 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3133, gbc.sp());
        EXPECT(0x4893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 02DF
        gbc.setState(0x477e, 0xc4a3, 0x8a70, 0xd417, 0xb184, 0x46fc, 0x0, 0x1);
        gbc.writeMem(0x477e, { 0x64 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc4a3, gbc.sp());
        EXPECT(0x477f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02E0
        gbc.setState(0x7c73, 0x422, 0x94b0, 0xbe6, 0xcd5d, 0xf780, 0x0, 0x1);
        gbc.writeMem(0x7c73, { 0x64 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x422, gbc.sp());
        EXPECT(0x7c74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02E1
        gbc.setState(0x65d2, 0x7461, 0x6790, 0x1409, 0x27de, 0xd9ee, 0x1, 0x0);
        gbc.writeMem(0x65d2, { 0x64 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7461, gbc.sp());
        EXPECT(0x65d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02E2
        gbc.setState(0xe5f7, 0xa852, 0xaeb0, 0x1285, 0xe31b, 0xb019, 0x1, 0x1);
        gbc.writeMem(0xe5f7, { 0x64 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa852, gbc.sp());
        EXPECT(0xe5f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe5f7));
        // 64 02E3
        gbc.setState(0xddce, 0x3a56, 0xb9c0, 0x1ad3, 0x148, 0x19ee, 0x0, 0x1);
        gbc.writeMem(0xddce, { 0x64 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3a56, gbc.sp());
        EXPECT(0xddcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xddce));
        // 64 02E5
        gbc.setState(0xc8a9, 0x6bcb, 0xcc90, 0xcc9e, 0xf0f0, 0x7068, 0x0, 0x1);
        gbc.writeMem(0xc8a9, { 0x64 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6bcb, gbc.sp());
        EXPECT(0xc8aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc8a9));
        // 64 02E6
        gbc.setState(0x652a, 0x590e, 0xae50, 0x312c, 0x3e42, 0xf78b, 0x0, 0x0);
        gbc.writeMem(0x652a, { 0x64 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x590e, gbc.sp());
        EXPECT(0x652b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02E7
        gbc.setState(0x4158, 0x5a4f, 0xf340, 0xc3ca, 0x29b3, 0x92f, 0x1, 0x1);
        gbc.writeMem(0x4158, { 0x64 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5a4f, gbc.sp());
        EXPECT(0x4159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 02E8
        gbc.setState(0xec6d, 0x2edf, 0x84a0, 0xc924, 0x3be9, 0x4dba, 0x0, 0x1);
        gbc.writeMem(0xec6d, { 0x64 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2edf, gbc.sp());
        EXPECT(0xec6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xec6d));
        // 64 02EA
        gbc.setState(0x7eca, 0xfb25, 0x20e0, 0x480b, 0x516, 0xfa9a, 0x0, 0x0);
        gbc.writeMem(0x7eca, { 0x64 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfb25, gbc.sp());
        EXPECT(0x7ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 02EB
        gbc.setState(0xda91, 0x6f84, 0x5800, 0xb8f1, 0x7477, 0x8c19, 0x1, 0x0);
        gbc.writeMem(0xda91, { 0x64 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6f84, gbc.sp());
        EXPECT(0xda92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xda91));
        // 64 02EC
        gbc.setState(0xe4bb, 0xc2dd, 0x3d30, 0x4fdf, 0xa58b, 0x429, 0x1, 0x0);
        gbc.writeMem(0xe4bb, { 0x64 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc2dd, gbc.sp());
        EXPECT(0xe4bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe4bb));
        // 64 02ED
        gbc.setState(0x66d4, 0xa0cf, 0x9e70, 0x9f70, 0x3442, 0x4fe7, 0x0, 0x1);
        gbc.writeMem(0x66d4, { 0x64 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa0cf, gbc.sp());
        EXPECT(0x66d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02EF
        gbc.setState(0x141c, 0xc046, 0xc070, 0x8f17, 0x5a52, 0x3203, 0x1, 0x1);
        gbc.writeMem(0x141c, { 0x64 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc046, gbc.sp());
        EXPECT(0x141d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02F0
        gbc.setState(0x8401, 0xe57e, 0x57b0, 0xd6e5, 0xdc52, 0xdcc1, 0x0, 0x0);
        gbc.writeMem(0x8401, { 0x64 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe57e, gbc.sp());
        EXPECT(0x8402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8401));
        // 64 02F1
        gbc.setState(0xc2b5, 0x7466, 0xded0, 0xe2e, 0x8cc9, 0xd295, 0x1, 0x0);
        gbc.writeMem(0xc2b5, { 0x64 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7466, gbc.sp());
        EXPECT(0xc2b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc2b5));
        // 64 02F2
        gbc.setState(0xe0ef, 0x1c6c, 0xfde0, 0xe9fe, 0x434c, 0x9a75, 0x0, 0x0);
        gbc.writeMem(0xe0ef, { 0x64 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1c6c, gbc.sp());
        EXPECT(0xe0f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe0ef));
        // 64 02F3
        gbc.setState(0xd32, 0x899b, 0x7a60, 0x9fe7, 0x7b09, 0x7478, 0x1, 0x1);
        gbc.writeMem(0xd32, { 0x64 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x899b, gbc.sp());
        EXPECT(0xd33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 02F4
        gbc.setState(0x76e9, 0xea38, 0x8400, 0x215a, 0xb17a, 0xa732, 0x1, 0x1);
        gbc.writeMem(0x76e9, { 0x64 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xea38, gbc.sp());
        EXPECT(0x76ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 02F5
        gbc.setState(0x68f7, 0x6bc7, 0x8a30, 0x6d11, 0x47f7, 0xb129, 0x0, 0x1);
        gbc.writeMem(0x68f7, { 0x64 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6bc7, gbc.sp());
        EXPECT(0x68f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02F6
        gbc.setState(0x458d, 0x7c0d, 0x6a90, 0x3cbb, 0x27fd, 0xe561, 0x0, 0x0);
        gbc.writeMem(0x458d, { 0x64 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7c0d, gbc.sp());
        EXPECT(0x458e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02F7
        gbc.setState(0xb73a, 0x64a3, 0x9900, 0x6e4e, 0x3496, 0xe3b3, 0x1, 0x1);
        gbc.writeMem(0xb73a, { 0x64 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x64a3, gbc.sp());
        EXPECT(0xb73b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb73a));
        // 64 02F8
        gbc.setState(0xcec0, 0x2f76, 0xec70, 0x6d35, 0x1ecb, 0x678b, 0x1, 0x0);
        gbc.writeMem(0xcec0, { 0x64 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2f76, gbc.sp());
        EXPECT(0xcec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xcec0));
        // 64 02F9
        gbc.setState(0x3ede, 0xc9a6, 0xdea0, 0x4790, 0x4e5, 0xb40, 0x0, 0x0);
        gbc.writeMem(0x3ede, { 0x64 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc9a6, gbc.sp());
        EXPECT(0x3edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 02FA
        gbc.setState(0x1830, 0xabe6, 0xaf90, 0x4b91, 0x81bd, 0x7adc, 0x0, 0x1);
        gbc.writeMem(0x1830, { 0x64 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xabe6, gbc.sp());
        EXPECT(0x1831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02FB
        gbc.setState(0x9b58, 0xd0cd, 0x8a20, 0x654c, 0x4ad5, 0x12f0, 0x0, 0x1);
        gbc.writeMem(0x9b58, { 0x64 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd0cd, gbc.sp());
        EXPECT(0x9b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9b58));
        // 64 02FC
        gbc.setState(0x7f7b, 0xbb9e, 0xa280, 0x3d9a, 0xb49a, 0x1c02, 0x0, 0x1);
        gbc.writeMem(0x7f7b, { 0x64 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbb9e, gbc.sp());
        EXPECT(0x7f7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 02FD
        gbc.setState(0xc0e5, 0xaea0, 0xe080, 0x7e05, 0x1d82, 0x2062, 0x0, 0x1);
        gbc.writeMem(0xc0e5, { 0x64 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xaea0, gbc.sp());
        EXPECT(0xc0e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc0e5));
        // 64 02FE
        gbc.setState(0x22ef, 0x6f78, 0xbe10, 0x87ce, 0x8b24, 0xdf7e, 0x1, 0x0);
        gbc.writeMem(0x22ef, { 0x64 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6f78, gbc.sp());
        EXPECT(0x22f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 02FF
        gbc.setState(0xb22d, 0x400a, 0x8230, 0x6a82, 0xcb0f, 0x8aec, 0x1, 0x1);
        gbc.writeMem(0xb22d, { 0x64 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x400a, gbc.sp());
        EXPECT(0xb22e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb22d));
        // 64 0300
        gbc.setState(0x9c7, 0xc0cc, 0xc770, 0xb28, 0x477d, 0x8d32, 0x1, 0x1);
        gbc.writeMem(0x9c7, { 0x64 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc0cc, gbc.sp());
        EXPECT(0x9c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0301
        gbc.setState(0x1d16, 0x43b7, 0x5a70, 0xd651, 0x6173, 0xe769, 0x0, 0x1);
        gbc.writeMem(0x1d16, { 0x64 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x43b7, gbc.sp());
        EXPECT(0x1d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0302
        gbc.setState(0x6808, 0x3389, 0xf190, 0xec9e, 0xbd71, 0xac86, 0x1, 0x0);
        gbc.writeMem(0x6808, { 0x64 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3389, gbc.sp());
        EXPECT(0x6809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0303
        gbc.setState(0x95f8, 0xb4b2, 0xa4d0, 0xcd5, 0xa347, 0xf49e, 0x1, 0x1);
        gbc.writeMem(0x95f8, { 0x64 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb4b2, gbc.sp());
        EXPECT(0x95f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x95f8));
        // 64 0304
        gbc.setState(0x5e66, 0x4d4d, 0x88a0, 0x443f, 0x57de, 0x96e, 0x1, 0x0);
        gbc.writeMem(0x5e66, { 0x64 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4d4d, gbc.sp());
        EXPECT(0x5e67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0305
        gbc.setState(0xbab7, 0xfadf, 0x7840, 0x5d25, 0x37cc, 0x6e9, 0x0, 0x1);
        gbc.writeMem(0xbab7, { 0x64 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xfadf, gbc.sp());
        EXPECT(0xbab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xbab7));
        // 64 0308
        gbc.setState(0xd3f1, 0xb0fc, 0x3b90, 0xc49c, 0xb460, 0xf9f4, 0x0, 0x1);
        gbc.writeMem(0xd3f1, { 0x64 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb0fc, gbc.sp());
        EXPECT(0xd3f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd3f1));
        // 64 0309
        gbc.setState(0x4cea, 0x666d, 0x8850, 0x779f, 0x1fa0, 0x36f8, 0x1, 0x0);
        gbc.writeMem(0x4cea, { 0x64 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x666d, gbc.sp());
        EXPECT(0x4ceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 030A
        gbc.setState(0x62a0, 0x7c31, 0x2130, 0x1c95, 0x90fe, 0xa8b0, 0x1, 0x1);
        gbc.writeMem(0x62a0, { 0x64 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7c31, gbc.sp());
        EXPECT(0x62a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 030B
        gbc.setState(0x1b52, 0x1c1, 0x20, 0x7342, 0x502f, 0x6c81, 0x0, 0x0);
        gbc.writeMem(0x1b52, { 0x64 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1c1, gbc.sp());
        EXPECT(0x1b53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 030C
        gbc.setState(0x28e, 0xbc9c, 0x65f0, 0x978e, 0xae45, 0x3569, 0x0, 0x0);
        gbc.writeMem(0x28e, { 0x64 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbc9c, gbc.sp());
        EXPECT(0x28f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 030D
        gbc.setState(0xd83f, 0x6d10, 0x7550, 0xe61f, 0xec58, 0x8b48, 0x1, 0x0);
        gbc.writeMem(0xd83f, { 0x64 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6d10, gbc.sp());
        EXPECT(0xd840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd83f));
        // 64 030E
        gbc.setState(0xe87e, 0x1f3d, 0x2320, 0xf265, 0xf027, 0x9514, 0x1, 0x0);
        gbc.writeMem(0xe87e, { 0x64 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1f3d, gbc.sp());
        EXPECT(0xe87f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe87e));
        // 64 030F
        gbc.setState(0x2ba3, 0x62b9, 0x29d0, 0x33df, 0x32bc, 0xfa3f, 0x0, 0x0);
        gbc.writeMem(0x2ba3, { 0x64 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x62b9, gbc.sp());
        EXPECT(0x2ba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0310
        gbc.setState(0xb7c3, 0xaf02, 0x4360, 0x43a2, 0x8c3c, 0x705a, 0x1, 0x1);
        gbc.writeMem(0xb7c3, { 0x64 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xaf02, gbc.sp());
        EXPECT(0xb7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb7c3));
        // 64 0312
        gbc.setState(0x9924, 0xcf6, 0x9120, 0x1596, 0x5525, 0xd0cd, 0x1, 0x1);
        gbc.writeMem(0x9924, { 0x64 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcf6, gbc.sp());
        EXPECT(0x9925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9924));
        // 64 0313
        gbc.setState(0x1cdb, 0xc87d, 0xfbe0, 0xa9e2, 0x3551, 0x4ab3, 0x0, 0x0);
        gbc.writeMem(0x1cdb, { 0x64 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc87d, gbc.sp());
        EXPECT(0x1cdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0314
        gbc.setState(0xa4eb, 0x2b45, 0x63a0, 0xfa0d, 0x8df4, 0x8509, 0x0, 0x0);
        gbc.writeMem(0xa4eb, { 0x64 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2b45, gbc.sp());
        EXPECT(0xa4ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa4eb));
        // 64 0315
        gbc.setState(0xa5, 0xdc28, 0x550, 0xbc2f, 0x211f, 0x4b5c, 0x1, 0x0);
        gbc.writeMem(0xa5, { 0x64 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdc28, gbc.sp());
        EXPECT(0xa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0316
        gbc.setState(0x7365, 0x1364, 0x3c30, 0x931b, 0xf3d0, 0xb83d, 0x1, 0x0);
        gbc.writeMem(0x7365, { 0x64 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1364, gbc.sp());
        EXPECT(0x7366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0317
        gbc.setState(0x3b0e, 0x4c2c, 0x2480, 0xf69c, 0x32b6, 0xf6cb, 0x1, 0x1);
        gbc.writeMem(0x3b0e, { 0x64 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4c2c, gbc.sp());
        EXPECT(0x3b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0318
        gbc.setState(0x548e, 0x6b07, 0x1660, 0x3467, 0x373c, 0xc0ba, 0x0, 0x0);
        gbc.writeMem(0x548e, { 0x64 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6b07, gbc.sp());
        EXPECT(0x548f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0319
        gbc.setState(0xa96d, 0xc30a, 0x3550, 0xa27f, 0x308a, 0x99fe, 0x1, 0x1);
        gbc.writeMem(0xa96d, { 0x64 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc30a, gbc.sp());
        EXPECT(0xa96e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa96d));
        // 64 031A
        gbc.setState(0x8274, 0x9805, 0x93d0, 0xcc84, 0xa775, 0x4c4a, 0x1, 0x0);
        gbc.writeMem(0x8274, { 0x64 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9805, gbc.sp());
        EXPECT(0x8275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8274));
        // 64 031B
        gbc.setState(0xa3d9, 0x2743, 0xdcd0, 0x9988, 0xa9e2, 0xfd43, 0x0, 0x1);
        gbc.writeMem(0xa3d9, { 0x64 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2743, gbc.sp());
        EXPECT(0xa3da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa3d9));
        // 64 031C
        gbc.setState(0x2c1a, 0x2095, 0x1cb0, 0x5b77, 0x6c73, 0x7d54, 0x0, 0x0);
        gbc.writeMem(0x2c1a, { 0x64 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2095, gbc.sp());
        EXPECT(0x2c1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 031D
        gbc.setState(0x46ec, 0x1a49, 0x2100, 0x72ec, 0x5ac7, 0x456, 0x1, 0x0);
        gbc.writeMem(0x46ec, { 0x64 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1a49, gbc.sp());
        EXPECT(0x46ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 031E
        gbc.setState(0xaf0, 0xa8f3, 0x49f0, 0xe8b3, 0x7a3b, 0xa050, 0x0, 0x0);
        gbc.writeMem(0xaf0, { 0x64 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa8f3, gbc.sp());
        EXPECT(0xaf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 031F
        gbc.setState(0xb72, 0xa573, 0xdc0, 0x15b4, 0x3c4, 0xd0e2, 0x0, 0x0);
        gbc.writeMem(0xb72, { 0x64 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa573, gbc.sp());
        EXPECT(0xb73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0320
        gbc.setState(0xd070, 0x43ff, 0x90d0, 0xa779, 0xa09, 0x9e22, 0x0, 0x0);
        gbc.writeMem(0xd070, { 0x64 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x43ff, gbc.sp());
        EXPECT(0xd071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd070));
        // 64 0321
        gbc.setState(0xd3d0, 0x2a37, 0x6cd0, 0x9408, 0x1fbf, 0xbd89, 0x1, 0x0);
        gbc.writeMem(0xd3d0, { 0x64 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2a37, gbc.sp());
        EXPECT(0xd3d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd3d0));
        // 64 0322
        gbc.setState(0x7aea, 0xe9a6, 0x9940, 0x85f, 0x8b9f, 0xbf8d, 0x1, 0x0);
        gbc.writeMem(0x7aea, { 0x64 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe9a6, gbc.sp());
        EXPECT(0x7aeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0323
        gbc.setState(0x3174, 0xba00, 0x2d0, 0x605b, 0x975d, 0x49f7, 0x0, 0x1);
        gbc.writeMem(0x3174, { 0x64 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xba00, gbc.sp());
        EXPECT(0x3175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0324
        gbc.setState(0xd40e, 0x69d8, 0x3160, 0x7c3f, 0x4f26, 0x887, 0x0, 0x1);
        gbc.writeMem(0xd40e, { 0x64 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x69d8, gbc.sp());
        EXPECT(0xd40f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd40e));
        // 64 0325
        gbc.setState(0xe677, 0xcaf, 0xd150, 0x70e2, 0xcf0d, 0xb2c4, 0x1, 0x0);
        gbc.writeMem(0xe677, { 0x64 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xcaf, gbc.sp());
        EXPECT(0xe678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe677));
        // 64 0326
        gbc.setState(0xa89b, 0x11a2, 0xac40, 0x8acf, 0x1b41, 0xa08c, 0x0, 0x0);
        gbc.writeMem(0xa89b, { 0x64 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x11a2, gbc.sp());
        EXPECT(0xa89c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa89b));
        // 64 0327
        gbc.setState(0x13e7, 0x4c3d, 0x45c0, 0xef84, 0x73a3, 0xacc2, 0x1, 0x1);
        gbc.writeMem(0x13e7, { 0x64 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4c3d, gbc.sp());
        EXPECT(0x13e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0328
        gbc.setState(0x2394, 0x2a5, 0x3290, 0x7b03, 0x8ff9, 0xf4ec, 0x0, 0x0);
        gbc.writeMem(0x2394, { 0x64 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2a5, gbc.sp());
        EXPECT(0x2395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0329
        gbc.setState(0x49c1, 0x25e0, 0x3b90, 0xde27, 0x3d5b, 0xf1b3, 0x1, 0x0);
        gbc.writeMem(0x49c1, { 0x64 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x25e0, gbc.sp());
        EXPECT(0x49c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 032A
        gbc.setState(0x7816, 0x97d7, 0x85c0, 0xb4af, 0x72e5, 0xa160, 0x0, 0x0);
        gbc.writeMem(0x7816, { 0x64 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x97d7, gbc.sp());
        EXPECT(0x7817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 032B
        gbc.setState(0xb924, 0x8de8, 0xe000, 0x98ec, 0xfbdc, 0xfcb0, 0x1, 0x0);
        gbc.writeMem(0xb924, { 0x64 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8de8, gbc.sp());
        EXPECT(0xb925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb924));
        // 64 032C
        gbc.setState(0xf79, 0x2cd4, 0xf9e0, 0x2177, 0x2612, 0xd515, 0x1, 0x1);
        gbc.writeMem(0xf79, { 0x64 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2cd4, gbc.sp());
        EXPECT(0xf7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 032D
        gbc.setState(0xc21b, 0x977c, 0x7ef0, 0xdaae, 0x34c9, 0x108, 0x0, 0x0);
        gbc.writeMem(0xc21b, { 0x64 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x977c, gbc.sp());
        EXPECT(0xc21c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc21b));
        // 64 032E
        gbc.setState(0xabcb, 0x76cb, 0x4710, 0xc931, 0x96d8, 0x183a, 0x1, 0x1);
        gbc.writeMem(0xabcb, { 0x64 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x76cb, gbc.sp());
        EXPECT(0xabcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xabcb));
        // 64 032F
        gbc.setState(0xd938, 0x7e02, 0xf2c0, 0xa805, 0xc0f0, 0xc7be, 0x1, 0x1);
        gbc.writeMem(0xd938, { 0x64 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7e02, gbc.sp());
        EXPECT(0xd939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd938));
        // 64 0330
        gbc.setState(0xe101, 0xa086, 0x61d0, 0xf8d9, 0xc6de, 0xc6de, 0x0, 0x1);
        gbc.writeMem(0xe101, { 0x64 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa086, gbc.sp());
        EXPECT(0xe102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe101));
        // 64 0331
        gbc.setState(0x8095, 0x8eba, 0xa300, 0x33c4, 0x9479, 0xdb04, 0x0, 0x0);
        gbc.writeMem(0x8095, { 0x64 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8eba, gbc.sp());
        EXPECT(0x8096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8095));
        // 64 0332
        gbc.setState(0xbc8a, 0x1eb4, 0x2350, 0x3c83, 0x9532, 0x46ec, 0x1, 0x0);
        gbc.writeMem(0xbc8a, { 0x64 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1eb4, gbc.sp());
        EXPECT(0xbc8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xbc8a));
        // 64 0333
        gbc.setState(0x3fcd, 0xa0ab, 0xfcd0, 0xcc88, 0x8df8, 0x8c45, 0x1, 0x0);
        gbc.writeMem(0x3fcd, { 0x64 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa0ab, gbc.sp());
        EXPECT(0x3fce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0334
        gbc.setState(0x579d, 0x1b03, 0xe420, 0xf874, 0x40c8, 0x6180, 0x1, 0x0);
        gbc.writeMem(0x579d, { 0x64 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1b03, gbc.sp());
        EXPECT(0x579e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0335
        gbc.setState(0x9a35, 0x237e, 0x66a0, 0x9680, 0x8277, 0x9347, 0x1, 0x1);
        gbc.writeMem(0x9a35, { 0x64 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x237e, gbc.sp());
        EXPECT(0x9a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9a35));
        // 64 0336
        gbc.setState(0x68da, 0xfe83, 0x70b0, 0x9cc8, 0x170e, 0xad78, 0x0, 0x0);
        gbc.writeMem(0x68da, { 0x64 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xfe83, gbc.sp());
        EXPECT(0x68db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0337
        gbc.setState(0xa2db, 0x2d09, 0xc500, 0x792d, 0x1032, 0x2eb9, 0x1, 0x0);
        gbc.writeMem(0xa2db, { 0x64 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2d09, gbc.sp());
        EXPECT(0xa2dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa2db));
        // 64 0339
        gbc.setState(0x775b, 0x7bb8, 0x2e90, 0x3aa2, 0x993b, 0xac1f, 0x0, 0x0);
        gbc.writeMem(0x775b, { 0x64 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7bb8, gbc.sp());
        EXPECT(0x775c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 033A
        gbc.setState(0x6d82, 0x3444, 0x5d80, 0x199f, 0x9bf0, 0x1ef2, 0x1, 0x1);
        gbc.writeMem(0x6d82, { 0x64 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3444, gbc.sp());
        EXPECT(0x6d83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 033B
        gbc.setState(0x81a3, 0xd537, 0x25a0, 0xfa1a, 0xff3a, 0xd226, 0x0, 0x1);
        gbc.writeMem(0x81a3, { 0x64 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd537, gbc.sp());
        EXPECT(0x81a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x81a3));
        // 64 033C
        gbc.setState(0xb509, 0x91ef, 0x8a10, 0x887d, 0xe815, 0x49b, 0x0, 0x1);
        gbc.writeMem(0xb509, { 0x64 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x91ef, gbc.sp());
        EXPECT(0xb50a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb509));
        // 64 033D
        gbc.setState(0x59a8, 0x506e, 0x2b30, 0xcaa1, 0x1349, 0xd2d2, 0x1, 0x0);
        gbc.writeMem(0x59a8, { 0x64 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x506e, gbc.sp());
        EXPECT(0x59a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 033E
        gbc.setState(0x6cce, 0xf42c, 0xae90, 0xb453, 0x85d2, 0xf597, 0x0, 0x0);
        gbc.writeMem(0x6cce, { 0x64 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf42c, gbc.sp());
        EXPECT(0x6ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 033F
        gbc.setState(0x90ad, 0xbcd5, 0x4010, 0xf0b1, 0xb06d, 0x1dae, 0x0, 0x1);
        gbc.writeMem(0x90ad, { 0x64 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xbcd5, gbc.sp());
        EXPECT(0x90ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x90ad));
        // 64 0340
        gbc.setState(0xe391, 0xba49, 0xf2e0, 0xcc02, 0xb6c, 0x6d61, 0x1, 0x1);
        gbc.writeMem(0xe391, { 0x64 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xba49, gbc.sp());
        EXPECT(0xe392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe391));
        // 64 0341
        gbc.setState(0x6dfb, 0xda51, 0x7c80, 0x1814, 0x98ac, 0xfbce, 0x1, 0x0);
        gbc.writeMem(0x6dfb, { 0x64 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xda51, gbc.sp());
        EXPECT(0x6dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0342
        gbc.setState(0x9854, 0x4824, 0xfe10, 0x6a72, 0x2ddf, 0x94dc, 0x0, 0x0);
        gbc.writeMem(0x9854, { 0x64 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4824, gbc.sp());
        EXPECT(0x9855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9854));
        // 64 0343
        gbc.setState(0xa1e3, 0xee45, 0x9b90, 0xe785, 0x86c4, 0x5fce, 0x0, 0x0);
        gbc.writeMem(0xa1e3, { 0x64 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xee45, gbc.sp());
        EXPECT(0xa1e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa1e3));
        // 64 0344
        gbc.setState(0x2582, 0xa154, 0x33e0, 0x1ad7, 0x753b, 0x2431, 0x0, 0x0);
        gbc.writeMem(0x2582, { 0x64 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa154, gbc.sp());
        EXPECT(0x2583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0345
        gbc.setState(0x3d89, 0xb7a4, 0x75d0, 0x447a, 0x1b4e, 0x7427, 0x0, 0x0);
        gbc.writeMem(0x3d89, { 0x64 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb7a4, gbc.sp());
        EXPECT(0x3d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0347
        gbc.setState(0x3b8, 0x76ac, 0xff0, 0xe7e2, 0xe84c, 0x4160, 0x0, 0x0);
        gbc.writeMem(0x3b8, { 0x64 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x76ac, gbc.sp());
        EXPECT(0x3b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0348
        gbc.setState(0x2537, 0x5671, 0x7b50, 0x7b18, 0x772e, 0x1982, 0x1, 0x0);
        gbc.writeMem(0x2537, { 0x64 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5671, gbc.sp());
        EXPECT(0x2538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0349
        gbc.setState(0x973f, 0x2f9e, 0x760, 0xab0e, 0x6817, 0xfdbd, 0x1, 0x1);
        gbc.writeMem(0x973f, { 0x64 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2f9e, gbc.sp());
        EXPECT(0x9740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x973f));
        // 64 034A
        gbc.setState(0x1462, 0x4df1, 0x2e90, 0x3a77, 0x4b8d, 0xe513, 0x0, 0x1);
        gbc.writeMem(0x1462, { 0x64 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4df1, gbc.sp());
        EXPECT(0x1463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 034B
        gbc.setState(0x1fd, 0x9aee, 0x6490, 0x2f2, 0x9e4d, 0x9339, 0x1, 0x0);
        gbc.writeMem(0x1fd, { 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9aee, gbc.sp());
        EXPECT(0x1fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 034C
        gbc.setState(0x3d08, 0x9f01, 0x7610, 0xef89, 0x82d, 0xc85b, 0x1, 0x1);
        gbc.writeMem(0x3d08, { 0x64 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9f01, gbc.sp());
        EXPECT(0x3d09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 034D
        gbc.setState(0x27c, 0x42af, 0x6c20, 0x2e1e, 0xa8b8, 0x8c99, 0x0, 0x1);
        gbc.writeMem(0x27c, { 0x64 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x42af, gbc.sp());
        EXPECT(0x27d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 034E
        gbc.setState(0xeeb8, 0x4a7, 0xc40, 0xcc92, 0xb637, 0x76a4, 0x1, 0x1);
        gbc.writeMem(0xeeb8, { 0x64 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4a7, gbc.sp());
        EXPECT(0xeeb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xeeb8));
        // 64 034F
        gbc.setState(0x9551, 0xdd83, 0xe080, 0x56c5, 0x844e, 0xaaf6, 0x1, 0x1);
        gbc.writeMem(0x9551, { 0x64 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xdd83, gbc.sp());
        EXPECT(0x9552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9551));
        // 64 0350
        gbc.setState(0x35e3, 0xf970, 0xc1c0, 0x4e87, 0x45c3, 0xc7c2, 0x0, 0x0);
        gbc.writeMem(0x35e3, { 0x64 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf970, gbc.sp());
        EXPECT(0x35e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0351
        gbc.setState(0x7c41, 0x8ec1, 0x55d0, 0x1c08, 0x9406, 0xcec8, 0x0, 0x1);
        gbc.writeMem(0x7c41, { 0x64 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8ec1, gbc.sp());
        EXPECT(0x7c42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0352
        gbc.setState(0xb93a, 0xb4b1, 0x2740, 0x862d, 0x370e, 0xa05b, 0x0, 0x1);
        gbc.writeMem(0xb93a, { 0x64 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb4b1, gbc.sp());
        EXPECT(0xb93b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb93a));
        // 64 0353
        gbc.setState(0x281f, 0x461, 0x3830, 0x9e02, 0xb1f9, 0x7aa1, 0x1, 0x1);
        gbc.writeMem(0x281f, { 0x64 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x461, gbc.sp());
        EXPECT(0x2820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0354
        gbc.setState(0x41b9, 0xf96a, 0x35d0, 0xd720, 0xf51b, 0xfa23, 0x0, 0x1);
        gbc.writeMem(0x41b9, { 0x64 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf96a, gbc.sp());
        EXPECT(0x41ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0355
        gbc.setState(0x1068, 0x44a4, 0x9470, 0xe6f4, 0x254, 0xf1a1, 0x0, 0x0);
        gbc.writeMem(0x1068, { 0x64 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x44a4, gbc.sp());
        EXPECT(0x1069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0356
        gbc.setState(0xa8f8, 0xf05f, 0xd5f0, 0x56b8, 0x3b94, 0x3f6c, 0x1, 0x1);
        gbc.writeMem(0xa8f8, { 0x64 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf05f, gbc.sp());
        EXPECT(0xa8f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa8f8));
        // 64 0357
        gbc.setState(0xbdcc, 0xcb45, 0xabc0, 0x7b1d, 0x2357, 0xd1a6, 0x0, 0x1);
        gbc.writeMem(0xbdcc, { 0x64 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcb45, gbc.sp());
        EXPECT(0xbdcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xbdcc));
        // 64 0358
        gbc.setState(0x9d60, 0xa687, 0xb360, 0xe5f3, 0xd30e, 0x5066, 0x0, 0x0);
        gbc.writeMem(0x9d60, { 0x64 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa687, gbc.sp());
        EXPECT(0x9d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9d60));
        // 64 0359
        gbc.setState(0xb589, 0xadb0, 0xed20, 0x4e16, 0x4e1c, 0xefa0, 0x1, 0x0);
        gbc.writeMem(0xb589, { 0x64 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xadb0, gbc.sp());
        EXPECT(0xb58a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb589));
        // 64 035A
        gbc.setState(0x1736, 0x4bd0, 0x5fc0, 0x2fc5, 0xc14, 0xe168, 0x0, 0x1);
        gbc.writeMem(0x1736, { 0x64 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4bd0, gbc.sp());
        EXPECT(0x1737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 035C
        gbc.setState(0x4073, 0xc75e, 0xa990, 0x6c23, 0x4b88, 0x6fdd, 0x1, 0x1);
        gbc.writeMem(0x4073, { 0x64 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc75e, gbc.sp());
        EXPECT(0x4074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 035D
        gbc.setState(0xd3fa, 0x4c22, 0x70a0, 0x853c, 0x7243, 0x5dc, 0x0, 0x1);
        gbc.writeMem(0xd3fa, { 0x64 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4c22, gbc.sp());
        EXPECT(0xd3fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd3fa));
        // 64 035E
        gbc.setState(0xebe6, 0xc887, 0x3da0, 0x5a90, 0x84b2, 0x9066, 0x1, 0x0);
        gbc.writeMem(0xebe6, { 0x64 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc887, gbc.sp());
        EXPECT(0xebe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xebe6));
        // 64 035F
        gbc.setState(0x50ac, 0x82c, 0x1c30, 0x45fe, 0x3e6a, 0xb1b6, 0x1, 0x0);
        gbc.writeMem(0x50ac, { 0x64 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x82c, gbc.sp());
        EXPECT(0x50ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0360
        gbc.setState(0xa133, 0x3bd, 0xee20, 0x2919, 0x4a07, 0xd21d, 0x0, 0x1);
        gbc.writeMem(0xa133, { 0x64 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3bd, gbc.sp());
        EXPECT(0xa134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa133));
        // 64 0361
        gbc.setState(0x946e, 0x4cd2, 0xd8e0, 0x9998, 0x5a33, 0x49e2, 0x0, 0x0);
        gbc.writeMem(0x946e, { 0x64 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4cd2, gbc.sp());
        EXPECT(0x946f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x946e));
        // 64 0362
        gbc.setState(0x8f17, 0x33fb, 0xc380, 0x8db8, 0xe508, 0x259a, 0x1, 0x1);
        gbc.writeMem(0x8f17, { 0x64 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x33fb, gbc.sp());
        EXPECT(0x8f18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8f17));
        // 64 0363
        gbc.setState(0xa947, 0x6789, 0x97a0, 0x783, 0xeb1b, 0x4871, 0x0, 0x1);
        gbc.writeMem(0xa947, { 0x64 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6789, gbc.sp());
        EXPECT(0xa948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa947));
        // 64 0364
        gbc.setState(0x95d2, 0x3d56, 0xa620, 0xdd0a, 0xd3c8, 0xe56, 0x1, 0x1);
        gbc.writeMem(0x95d2, { 0x64 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3d56, gbc.sp());
        EXPECT(0x95d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x95d2));
        // 64 0365
        gbc.setState(0xd43c, 0xcad, 0xaad0, 0xdaad, 0xbb82, 0xd21b, 0x0, 0x0);
        gbc.writeMem(0xd43c, { 0x64 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xcad, gbc.sp());
        EXPECT(0xd43d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd43c));
        // 64 0366
        gbc.setState(0xa5a8, 0x607, 0x4260, 0x40c5, 0x4abf, 0xeabb, 0x1, 0x1);
        gbc.writeMem(0xa5a8, { 0x64 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x607, gbc.sp());
        EXPECT(0xa5a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa5a8));
        // 64 0367
        gbc.setState(0x31ef, 0xe9e9, 0x60c0, 0x2fa8, 0x402, 0x4565, 0x1, 0x0);
        gbc.writeMem(0x31ef, { 0x64 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe9e9, gbc.sp());
        EXPECT(0x31f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0368
        gbc.setState(0xb18, 0xd547, 0x14f0, 0x2c9c, 0xfe6a, 0xa3df, 0x1, 0x0);
        gbc.writeMem(0xb18, { 0x64 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd547, gbc.sp());
        EXPECT(0xb19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0369
        gbc.setState(0x2891, 0xeac5, 0x14b0, 0xc21e, 0xaa9b, 0x51dd, 0x0, 0x0);
        gbc.writeMem(0x2891, { 0x64 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xeac5, gbc.sp());
        EXPECT(0x2892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 036A
        gbc.setState(0x106c, 0xf35f, 0x2490, 0xd61d, 0x6e1b, 0x9ac1, 0x1, 0x0);
        gbc.writeMem(0x106c, { 0x64 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf35f, gbc.sp());
        EXPECT(0x106d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 036B
        gbc.setState(0x28b5, 0x6be, 0xcd50, 0x99b3, 0x8b83, 0x7cc0, 0x1, 0x0);
        gbc.writeMem(0x28b5, { 0x64 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6be, gbc.sp());
        EXPECT(0x28b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 036C
        gbc.setState(0x73c, 0x62ea, 0x5680, 0xac20, 0xc3f3, 0x39af, 0x1, 0x0);
        gbc.writeMem(0x73c, { 0x64 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x62ea, gbc.sp());
        EXPECT(0x73d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 036D
        gbc.setState(0x586c, 0xbc5b, 0xb10, 0x5649, 0xbcb5, 0xc80, 0x1, 0x0);
        gbc.writeMem(0x586c, { 0x64 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbc5b, gbc.sp());
        EXPECT(0x586d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 036E
        gbc.setState(0x3a94, 0xc39f, 0x6840, 0x4931, 0x9cb9, 0x9068, 0x0, 0x0);
        gbc.writeMem(0x3a94, { 0x64 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc39f, gbc.sp());
        EXPECT(0x3a95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 036F
        gbc.setState(0x3ac1, 0xd2e7, 0xe1b0, 0x3624, 0x504e, 0xa14b, 0x1, 0x1);
        gbc.writeMem(0x3ac1, { 0x64 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd2e7, gbc.sp());
        EXPECT(0x3ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0370
        gbc.setState(0x3367, 0xf466, 0x3070, 0xabf4, 0x5c93, 0xd2c3, 0x1, 0x0);
        gbc.writeMem(0x3367, { 0x64 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf466, gbc.sp());
        EXPECT(0x3368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0371
        gbc.setState(0x4c84, 0xec60, 0x1ac0, 0x10a9, 0xcccd, 0x1ece, 0x1, 0x1);
        gbc.writeMem(0x4c84, { 0x64 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xec60, gbc.sp());
        EXPECT(0x4c85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0372
        gbc.setState(0x4a02, 0xda7d, 0x8cc0, 0xf051, 0x289, 0xc0f1, 0x1, 0x1);
        gbc.writeMem(0x4a02, { 0x64 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xda7d, gbc.sp());
        EXPECT(0x4a03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0373
        gbc.setState(0x23a8, 0x40c4, 0xf130, 0xd133, 0x2e3a, 0x9b04, 0x0, 0x1);
        gbc.writeMem(0x23a8, { 0x64 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x40c4, gbc.sp());
        EXPECT(0x23a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0374
        gbc.setState(0x5e73, 0xb611, 0x38d0, 0xe55b, 0xcabc, 0x5cea, 0x0, 0x0);
        gbc.writeMem(0x5e73, { 0x64 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb611, gbc.sp());
        EXPECT(0x5e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0375
        gbc.setState(0xaab3, 0xe5a, 0xc8d0, 0xa274, 0x88dc, 0x4151, 0x0, 0x0);
        gbc.writeMem(0xaab3, { 0x64 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe5a, gbc.sp());
        EXPECT(0xaab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xaab3));
        // 64 0376
        gbc.setState(0xa76a, 0xebc5, 0x7380, 0xd019, 0xbade, 0xc736, 0x1, 0x0);
        gbc.writeMem(0xa76a, { 0x64 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xebc5, gbc.sp());
        EXPECT(0xa76b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa76a));
        // 64 0377
        gbc.setState(0xdc82, 0x91b5, 0xe910, 0xd838, 0x46dc, 0x4051, 0x1, 0x1);
        gbc.writeMem(0xdc82, { 0x64 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x91b5, gbc.sp());
        EXPECT(0xdc83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xdc82));
        // 64 0378
        gbc.setState(0x98cf, 0x26d6, 0x20c0, 0x4db3, 0x3c06, 0x9741, 0x1, 0x0);
        gbc.writeMem(0x98cf, { 0x64 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x26d6, gbc.sp());
        EXPECT(0x98d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x98cf));
        // 64 037A
        gbc.setState(0x3e51, 0x128f, 0xcf20, 0x48ee, 0x6517, 0xc3b6, 0x0, 0x1);
        gbc.writeMem(0x3e51, { 0x64 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x128f, gbc.sp());
        EXPECT(0x3e52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 037B
        gbc.setState(0x7363, 0xcdac, 0x4c80, 0x355c, 0x63c0, 0x73db, 0x0, 0x0);
        gbc.writeMem(0x7363, { 0x64 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcdac, gbc.sp());
        EXPECT(0x7364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 037C
        gbc.setState(0xafe7, 0xa10d, 0x56f0, 0x6804, 0x2bec, 0x4e44, 0x0, 0x1);
        gbc.writeMem(0xafe7, { 0x64 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa10d, gbc.sp());
        EXPECT(0xafe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xafe7));
        // 64 037D
        gbc.setState(0x6e05, 0xee8e, 0x53e0, 0x8e66, 0x4f3f, 0x989a, 0x1, 0x0);
        gbc.writeMem(0x6e05, { 0x64 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xee8e, gbc.sp());
        EXPECT(0x6e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 037F
        gbc.setState(0xd519, 0x655f, 0xbe20, 0x3d97, 0xfe0c, 0xa820, 0x0, 0x0);
        gbc.writeMem(0xd519, { 0x64 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x655f, gbc.sp());
        EXPECT(0xd51a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd519));
        // 64 0380
        gbc.setState(0x1170, 0xcbbf, 0x6fe0, 0x8047, 0x70f0, 0x8ee5, 0x0, 0x0);
        gbc.writeMem(0x1170, { 0x64 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcbbf, gbc.sp());
        EXPECT(0x1171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0381
        gbc.setState(0x93ed, 0x4e3f, 0xbd00, 0x4d7c, 0xbdb9, 0xfb51, 0x1, 0x0);
        gbc.writeMem(0x93ed, { 0x64 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4e3f, gbc.sp());
        EXPECT(0x93ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x93ed));
        // 64 0382
        gbc.setState(0x5ad7, 0x13c9, 0xf7e0, 0x4ab9, 0xbea1, 0xdf1d, 0x0, 0x0);
        gbc.writeMem(0x5ad7, { 0x64 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x13c9, gbc.sp());
        EXPECT(0x5ad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0383
        gbc.setState(0x6daf, 0x2d03, 0xa110, 0x5cf9, 0x1257, 0x8a1d, 0x1, 0x0);
        gbc.writeMem(0x6daf, { 0x64 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2d03, gbc.sp());
        EXPECT(0x6db0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0384
        gbc.setState(0x4986, 0x85b6, 0xec70, 0xebc4, 0x9bba, 0x7b04, 0x0, 0x0);
        gbc.writeMem(0x4986, { 0x64 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x85b6, gbc.sp());
        EXPECT(0x4987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0385
        gbc.setState(0x925b, 0xaf2a, 0xc180, 0x10d9, 0x1991, 0xb55b, 0x1, 0x0);
        gbc.writeMem(0x925b, { 0x64 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xaf2a, gbc.sp());
        EXPECT(0x925c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x925b));
        // 64 0386
        gbc.setState(0xcb0e, 0x5203, 0x3f30, 0x168e, 0x59ad, 0xc1bf, 0x1, 0x0);
        gbc.writeMem(0xcb0e, { 0x64 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5203, gbc.sp());
        EXPECT(0xcb0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xcb0e));
        // 64 0387
        gbc.setState(0x1c23, 0x1ae5, 0x5bc0, 0xc33a, 0xcddc, 0x1ed9, 0x0, 0x1);
        gbc.writeMem(0x1c23, { 0x64 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1ae5, gbc.sp());
        EXPECT(0x1c24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0388
        gbc.setState(0xe51c, 0x1174, 0x3280, 0x1212, 0xf998, 0x3a17, 0x0, 0x1);
        gbc.writeMem(0xe51c, { 0x64 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1174, gbc.sp());
        EXPECT(0xe51d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe51c));
        // 64 0389
        gbc.setState(0x74e8, 0xa553, 0x2a50, 0xf15b, 0xe05e, 0xc72d, 0x0, 0x1);
        gbc.writeMem(0x74e8, { 0x64 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa553, gbc.sp());
        EXPECT(0x74e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 038A
        gbc.setState(0x5b49, 0xa251, 0xa650, 0xbba6, 0xf6dd, 0x150a, 0x0, 0x1);
        gbc.writeMem(0x5b49, { 0x64 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa251, gbc.sp());
        EXPECT(0x5b4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 038B
        gbc.setState(0x3707, 0x6519, 0xb40, 0xfc19, 0xb986, 0x5781, 0x1, 0x1);
        gbc.writeMem(0x3707, { 0x64 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6519, gbc.sp());
        EXPECT(0x3708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 038C
        gbc.setState(0xb819, 0x2da0, 0x7e90, 0x81a3, 0xf569, 0xfc5c, 0x0, 0x1);
        gbc.writeMem(0xb819, { 0x64 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2da0, gbc.sp());
        EXPECT(0xb81a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb819));
        // 64 038D
        gbc.setState(0x111d, 0x40ee, 0x11c0, 0xbe03, 0x60ca, 0xa494, 0x1, 0x1);
        gbc.writeMem(0x111d, { 0x64 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x40ee, gbc.sp());
        EXPECT(0x111e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 038E
        gbc.setState(0x964c, 0xc4b2, 0xa080, 0xb9ab, 0x1b97, 0x28aa, 0x0, 0x1);
        gbc.writeMem(0x964c, { 0x64 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc4b2, gbc.sp());
        EXPECT(0x964d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x964c));
        // 64 038F
        gbc.setState(0xe392, 0x2504, 0xd8d0, 0xb06c, 0x3e24, 0x3060, 0x1, 0x0);
        gbc.writeMem(0xe392, { 0x64 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2504, gbc.sp());
        EXPECT(0xe393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe392));
        // 64 0390
        gbc.setState(0x6b4d, 0xa1a1, 0xe070, 0x3d55, 0xf017, 0x4d11, 0x0, 0x1);
        gbc.writeMem(0x6b4d, { 0x64 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa1a1, gbc.sp());
        EXPECT(0x6b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0391
        gbc.setState(0x3968, 0xd0d7, 0x6e90, 0x2781, 0xdddb, 0x7f25, 0x1, 0x1);
        gbc.writeMem(0x3968, { 0x64 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd0d7, gbc.sp());
        EXPECT(0x3969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0392
        gbc.setState(0x4ed7, 0xe582, 0xf090, 0x37fc, 0xd0b9, 0x955e, 0x1, 0x0);
        gbc.writeMem(0x4ed7, { 0x64 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe582, gbc.sp());
        EXPECT(0x4ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 0393
        gbc.setState(0x36a4, 0x708e, 0x3de0, 0x52a1, 0xcc59, 0xf76b, 0x1, 0x1);
        gbc.writeMem(0x36a4, { 0x64 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x708e, gbc.sp());
        EXPECT(0x36a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0394
        gbc.setState(0x9ef, 0x7ca3, 0xeea0, 0xc3f5, 0xfb4b, 0x13a4, 0x1, 0x1);
        gbc.writeMem(0x9ef, { 0x64 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7ca3, gbc.sp());
        EXPECT(0x9f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0395
        gbc.setState(0x3e50, 0x8d79, 0x5620, 0x60d6, 0x5eae, 0x80b, 0x1, 0x1);
        gbc.writeMem(0x3e50, { 0x64 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8d79, gbc.sp());
        EXPECT(0x3e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0396
        gbc.setState(0x3d25, 0x525c, 0xf1a0, 0x1c31, 0x59c4, 0x6127, 0x0, 0x1);
        gbc.writeMem(0x3d25, { 0x64 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x525c, gbc.sp());
        EXPECT(0x3d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0397
        gbc.setState(0xec40, 0x4ff1, 0x56f0, 0x9cb7, 0x6f8f, 0xbd9e, 0x0, 0x1);
        gbc.writeMem(0xec40, { 0x64 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4ff1, gbc.sp());
        EXPECT(0xec41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xec40));
        // 64 0398
        gbc.setState(0x35cc, 0xbe69, 0x5d20, 0xd5dc, 0x4717, 0x2541, 0x1, 0x0);
        gbc.writeMem(0x35cc, { 0x64 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbe69, gbc.sp());
        EXPECT(0x35cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 0399
        gbc.setState(0xb00d, 0x4b20, 0xdb70, 0x5dbf, 0x5f2b, 0x8543, 0x1, 0x1);
        gbc.writeMem(0xb00d, { 0x64 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4b20, gbc.sp());
        EXPECT(0xb00e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb00d));
        // 64 039A
        gbc.setState(0xad21, 0x300a, 0xfd50, 0x2b35, 0x5fd4, 0x200d, 0x1, 0x1);
        gbc.writeMem(0xad21, { 0x64 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x300a, gbc.sp());
        EXPECT(0xad22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xad21));
        // 64 039D
        gbc.setState(0xbb1c, 0xed08, 0xac60, 0xb27, 0x45ba, 0x2921, 0x1, 0x0);
        gbc.writeMem(0xbb1c, { 0x64 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xed08, gbc.sp());
        EXPECT(0xbb1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xbb1c));
        // 64 039E
        gbc.setState(0x8a77, 0xc9f6, 0x55a0, 0x24c3, 0xc730, 0xf941, 0x0, 0x0);
        gbc.writeMem(0x8a77, { 0x64 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc9f6, gbc.sp());
        EXPECT(0x8a78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8a77));
        // 64 039F
        gbc.setState(0x356d, 0xdd36, 0xca50, 0x540d, 0x5259, 0x7b60, 0x1, 0x0);
        gbc.writeMem(0x356d, { 0x64 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdd36, gbc.sp());
        EXPECT(0x356e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03A0
        gbc.setState(0x5561, 0x537f, 0xfa10, 0xd699, 0x80d7, 0x7f6, 0x1, 0x1);
        gbc.writeMem(0x5561, { 0x64 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x537f, gbc.sp());
        EXPECT(0x5562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03A1
        gbc.setState(0x699c, 0x9be2, 0x97e0, 0x7de, 0x746b, 0x6d0a, 0x1, 0x0);
        gbc.writeMem(0x699c, { 0x64 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9be2, gbc.sp());
        EXPECT(0x699d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 03A2
        gbc.setState(0x7ae6, 0x517f, 0xb490, 0x20d9, 0x7f62, 0x5ad0, 0x1, 0x1);
        gbc.writeMem(0x7ae6, { 0x64 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x517f, gbc.sp());
        EXPECT(0x7ae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03A4
        gbc.setState(0x5ebc, 0xcb87, 0x39b0, 0xc74e, 0xc882, 0x2941, 0x1, 0x0);
        gbc.writeMem(0x5ebc, { 0x64 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcb87, gbc.sp());
        EXPECT(0x5ebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03A5
        gbc.setState(0xe5f3, 0x324c, 0xde50, 0xe0e6, 0x7241, 0x91e8, 0x0, 0x1);
        gbc.writeMem(0xe5f3, { 0x64 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x324c, gbc.sp());
        EXPECT(0xe5f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe5f3));
        // 64 03A6
        gbc.setState(0x660c, 0x33b0, 0x5bd0, 0xf73a, 0x5d6e, 0xfb0e, 0x1, 0x1);
        gbc.writeMem(0x660c, { 0x64 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x33b0, gbc.sp());
        EXPECT(0x660d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03A7
        gbc.setState(0xc9, 0xc3dd, 0x7930, 0xc74d, 0xc7d4, 0xc78a, 0x0, 0x1);
        gbc.writeMem(0xc9, { 0x64 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc3dd, gbc.sp());
        EXPECT(0xca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03A8
        gbc.setState(0x64d8, 0xfd5, 0x7470, 0x3ebc, 0x40b8, 0x9e29, 0x1, 0x0);
        gbc.writeMem(0x64d8, { 0x64 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfd5, gbc.sp());
        EXPECT(0x64d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03A9
        gbc.setState(0x305e, 0xcf48, 0x9010, 0x8668, 0xc55e, 0xc72, 0x0, 0x1);
        gbc.writeMem(0x305e, { 0x64 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xcf48, gbc.sp());
        EXPECT(0x305f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03AA
        gbc.setState(0x49f6, 0xe42d, 0xf450, 0x8344, 0xc667, 0xacf6, 0x1, 0x1);
        gbc.writeMem(0x49f6, { 0x64 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe42d, gbc.sp());
        EXPECT(0x49f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03AB
        gbc.setState(0xb4d4, 0x8183, 0x5300, 0x233, 0x44d7, 0x8a16, 0x1, 0x1);
        gbc.writeMem(0xb4d4, { 0x64 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8183, gbc.sp());
        EXPECT(0xb4d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb4d4));
        // 64 03AC
        gbc.setState(0x408c, 0x678d, 0xc20, 0xd678, 0x5d4, 0x73fa, 0x0, 0x0);
        gbc.writeMem(0x408c, { 0x64 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x678d, gbc.sp());
        EXPECT(0x408d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 03AD
        gbc.setState(0x38d4, 0x55fd, 0xabc0, 0x549a, 0xbf2d, 0x1b73, 0x0, 0x1);
        gbc.writeMem(0x38d4, { 0x64 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x55fd, gbc.sp());
        EXPECT(0x38d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 03AE
        gbc.setState(0xb05d, 0xc40f, 0x1240, 0xe3c0, 0xb4bf, 0x794e, 0x0, 0x0);
        gbc.writeMem(0xb05d, { 0x64 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc40f, gbc.sp());
        EXPECT(0xb05e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb05d));
        // 64 03AF
        gbc.setState(0xefa1, 0xfd76, 0xa0f0, 0x825b, 0x278a, 0xc2a3, 0x1, 0x1);
        gbc.writeMem(0xefa1, { 0x64 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xfd76, gbc.sp());
        EXPECT(0xefa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xefa1));
        // 64 03B0
        gbc.setState(0x633c, 0x11b8, 0x4b30, 0xccaf, 0x57f9, 0x8fb4, 0x1, 0x1);
        gbc.writeMem(0x633c, { 0x64 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x11b8, gbc.sp());
        EXPECT(0x633d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03B1
        gbc.setState(0x73c5, 0xfd8a, 0x6af0, 0x2cc6, 0x8fb0, 0xde92, 0x0, 0x0);
        gbc.writeMem(0x73c5, { 0x64 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfd8a, gbc.sp());
        EXPECT(0x73c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03B2
        gbc.setState(0x22f4, 0xc586, 0x160, 0x5236, 0x93dc, 0x14b3, 0x1, 0x0);
        gbc.writeMem(0x22f4, { 0x64 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc586, gbc.sp());
        EXPECT(0x22f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 03B3
        gbc.setState(0xb867, 0x5347, 0xad30, 0xe25d, 0xf573, 0xdfea, 0x1, 0x1);
        gbc.writeMem(0xb867, { 0x64 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5347, gbc.sp());
        EXPECT(0xb868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb867));
        // 64 03B4
        gbc.setState(0x2f56, 0x5554, 0xe380, 0xa40d, 0x7e43, 0xfc3d, 0x1, 0x0);
        gbc.writeMem(0x2f56, { 0x64 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5554, gbc.sp());
        EXPECT(0x2f57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 03B5
        gbc.setState(0x73f7, 0x532a, 0x2850, 0x7, 0x109d, 0x45a2, 0x1, 0x1);
        gbc.writeMem(0x73f7, { 0x64 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x532a, gbc.sp());
        EXPECT(0x73f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03B6
        gbc.setState(0xd567, 0x43a7, 0xa7c0, 0x2ff6, 0xf046, 0xf658, 0x1, 0x0);
        gbc.writeMem(0xd567, { 0x64 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x43a7, gbc.sp());
        EXPECT(0xd568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd567));
        // 64 03B7
        gbc.setState(0xa630, 0x7c97, 0x75b0, 0x92b7, 0x3e3a, 0xaf9e, 0x1, 0x1);
        gbc.writeMem(0xa630, { 0x64 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7c97, gbc.sp());
        EXPECT(0xa631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa630));
        // 64 03B8
        gbc.setState(0x88ff, 0xf259, 0x9fd0, 0x6348, 0x1f19, 0x957f, 0x1, 0x0);
        gbc.writeMem(0x88ff, { 0x64 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf259, gbc.sp());
        EXPECT(0x8900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x88ff));
        // 64 03BA
        gbc.setState(0x60a6, 0x2876, 0xe900, 0x2ddb, 0xf778, 0x72f, 0x0, 0x0);
        gbc.writeMem(0x60a6, { 0x64 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2876, gbc.sp());
        EXPECT(0x60a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 03BB
        gbc.setState(0xa350, 0x2ee3, 0xd770, 0x9f97, 0xfdbb, 0xcef7, 0x0, 0x1);
        gbc.writeMem(0xa350, { 0x64 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2ee3, gbc.sp());
        EXPECT(0xa351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa350));
        // 64 03BC
        gbc.setState(0xb758, 0x85eb, 0xc940, 0x30cf, 0x5d1c, 0x9c59, 0x1, 0x0);
        gbc.writeMem(0xb758, { 0x64 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x85eb, gbc.sp());
        EXPECT(0xb759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb758));
        // 64 03BD
        gbc.setState(0xd4d3, 0xf6f9, 0x75e0, 0xe9ab, 0x3c43, 0x819a, 0x1, 0x0);
        gbc.writeMem(0xd4d3, { 0x64 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf6f9, gbc.sp());
        EXPECT(0xd4d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd4d3));
        // 64 03BE
        gbc.setState(0x39b1, 0x1bed, 0xdb90, 0x66bb, 0xa990, 0x9cf3, 0x1, 0x0);
        gbc.writeMem(0x39b1, { 0x64 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1bed, gbc.sp());
        EXPECT(0x39b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03BF
        gbc.setState(0xc07f, 0x722e, 0xcfd0, 0xb834, 0x30bb, 0xbfed, 0x0, 0x1);
        gbc.writeMem(0xc07f, { 0x64 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x722e, gbc.sp());
        EXPECT(0xc080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc07f));
        // 64 03C0
        gbc.setState(0x1fdd, 0x97b9, 0x75c0, 0xd41c, 0x7a14, 0x40d6, 0x0, 0x1);
        gbc.writeMem(0x1fdd, { 0x64 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x97b9, gbc.sp());
        EXPECT(0x1fde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 03C1
        gbc.setState(0x7d1f, 0x1518, 0x55b0, 0x4ce8, 0x6673, 0xd24a, 0x0, 0x0);
        gbc.writeMem(0x7d1f, { 0x64 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1518, gbc.sp());
        EXPECT(0x7d20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03C2
        gbc.setState(0x1f03, 0xb3d5, 0x9d40, 0xeeda, 0xae96, 0xd6de, 0x1, 0x0);
        gbc.writeMem(0x1f03, { 0x64 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb3d5, gbc.sp());
        EXPECT(0x1f04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 03C3
        gbc.setState(0xea01, 0x4081, 0xd1a0, 0xf3d8, 0x291f, 0x814b, 0x1, 0x0);
        gbc.writeMem(0xea01, { 0x64 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4081, gbc.sp());
        EXPECT(0xea02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xea01));
        // 64 03C4
        gbc.setState(0xdf3d, 0xe46, 0x6e50, 0xc21, 0x1a6a, 0xefff, 0x0, 0x1);
        gbc.writeMem(0xdf3d, { 0x64 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe46, gbc.sp());
        EXPECT(0xdf3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xdf3d));
        // 64 03C5
        gbc.setState(0x5b40, 0x5b6f, 0xc0, 0xfca0, 0xe080, 0xb78a, 0x1, 0x0);
        gbc.writeMem(0x5b40, { 0x64 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5b6f, gbc.sp());
        EXPECT(0x5b41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 03C6
        gbc.setState(0x248e, 0x436a, 0x4280, 0x42ac, 0xcaba, 0x77d4, 0x1, 0x0);
        gbc.writeMem(0x248e, { 0x64 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x436a, gbc.sp());
        EXPECT(0x248f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 03C7
        gbc.setState(0x4b15, 0x1ab0, 0x4f10, 0x937, 0xd2bc, 0x88ec, 0x0, 0x0);
        gbc.writeMem(0x4b15, { 0x64 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1ab0, gbc.sp());
        EXPECT(0x4b16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03C8
        gbc.setState(0x2c58, 0x1be2, 0x9110, 0x414c, 0xa3e7, 0x12af, 0x0, 0x0);
        gbc.writeMem(0x2c58, { 0x64 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1be2, gbc.sp());
        EXPECT(0x2c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03C9
        gbc.setState(0xec3a, 0xceca, 0xfd70, 0x50d, 0xe6b6, 0x9781, 0x1, 0x1);
        gbc.writeMem(0xec3a, { 0x64 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xceca, gbc.sp());
        EXPECT(0xec3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xec3a));
        // 64 03CA
        gbc.setState(0xc8ad, 0x3f01, 0xec0, 0x5334, 0x7eb0, 0x3198, 0x0, 0x1);
        gbc.writeMem(0xc8ad, { 0x64 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3f01, gbc.sp());
        EXPECT(0xc8ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc8ad));
        // 64 03CB
        gbc.setState(0x4b90, 0x2b40, 0xf2f0, 0x103e, 0xb9f7, 0x5bb3, 0x0, 0x0);
        gbc.writeMem(0x4b90, { 0x64 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2b40, gbc.sp());
        EXPECT(0x4b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03CC
        gbc.setState(0x363a, 0x76e2, 0xa680, 0x9110, 0xec6d, 0xd847, 0x1, 0x0);
        gbc.writeMem(0x363a, { 0x64 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x76e2, gbc.sp());
        EXPECT(0x363b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 03CD
        gbc.setState(0x66a4, 0x54b4, 0x5cf0, 0x456d, 0x673e, 0x7a78, 0x0, 0x1);
        gbc.writeMem(0x66a4, { 0x64 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x54b4, gbc.sp());
        EXPECT(0x66a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03CE
        gbc.setState(0x7bb0, 0xee62, 0xab20, 0x5520, 0x8417, 0x1540, 0x0, 0x0);
        gbc.writeMem(0x7bb0, { 0x64 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xee62, gbc.sp());
        EXPECT(0x7bb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 03CF
        gbc.setState(0x1ed6, 0xed03, 0x4cf0, 0x51b9, 0x9a12, 0x7247, 0x0, 0x0);
        gbc.writeMem(0x1ed6, { 0x64 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xed03, gbc.sp());
        EXPECT(0x1ed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03D0
        gbc.setState(0xdf56, 0x4acd, 0xbdf0, 0x6a0b, 0x9755, 0xa727, 0x1, 0x1);
        gbc.writeMem(0xdf56, { 0x64 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4acd, gbc.sp());
        EXPECT(0xdf57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xdf56));
        // 64 03D1
        gbc.setState(0x3066, 0x6a8e, 0x3010, 0x869d, 0x4bee, 0x6257, 0x1, 0x0);
        gbc.writeMem(0x3066, { 0x64 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6a8e, gbc.sp());
        EXPECT(0x3067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03D2
        gbc.setState(0x7f2f, 0x11bd, 0xc610, 0x5e2d, 0xb6e3, 0x7a5d, 0x0, 0x1);
        gbc.writeMem(0x7f2f, { 0x64 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x11bd, gbc.sp());
        EXPECT(0x7f30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03D3
        gbc.setState(0xabad, 0xd1cf, 0x8800, 0xb442, 0x8b5, 0x8851, 0x0, 0x1);
        gbc.writeMem(0xabad, { 0x64 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd1cf, gbc.sp());
        EXPECT(0xabae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xabad));
        // 64 03D4
        gbc.setState(0xd3b, 0x5f33, 0xdac0, 0x4727, 0xbd28, 0x35e4, 0x1, 0x1);
        gbc.writeMem(0xd3b, { 0x64 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5f33, gbc.sp());
        EXPECT(0xd3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 03D5
        gbc.setState(0x3fb8, 0xae48, 0x6550, 0xb8b7, 0x71a7, 0x52f0, 0x0, 0x0);
        gbc.writeMem(0x3fb8, { 0x64 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xae48, gbc.sp());
        EXPECT(0x3fb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03D6
        gbc.setState(0x12dc, 0xedeb, 0xab80, 0x3398, 0xa99e, 0xcf73, 0x0, 0x0);
        gbc.writeMem(0x12dc, { 0x64 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xedeb, gbc.sp());
        EXPECT(0x12dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 03D7
        gbc.setState(0xd596, 0x1e79, 0xa270, 0x9328, 0xa084, 0x34ec, 0x0, 0x1);
        gbc.writeMem(0xd596, { 0x64 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1e79, gbc.sp());
        EXPECT(0xd597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd596));
        // 64 03D8
        gbc.setState(0xe961, 0x8713, 0x4fd0, 0xaa22, 0x35e3, 0x9a8a, 0x0, 0x1);
        gbc.writeMem(0xe961, { 0x64 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8713, gbc.sp());
        EXPECT(0xe962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe961));
        // 64 03D9
        gbc.setState(0xf02, 0xe26d, 0x5830, 0x17b1, 0x1cdf, 0x5a6d, 0x0, 0x1);
        gbc.writeMem(0xf02, { 0x64 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe26d, gbc.sp());
        EXPECT(0xf03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03DA
        gbc.setState(0x97d5, 0xff9d, 0xc080, 0x9345, 0xaeb6, 0x137c, 0x1, 0x1);
        gbc.writeMem(0x97d5, { 0x64 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xff9d, gbc.sp());
        EXPECT(0x97d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x97d5));
        // 64 03DB
        gbc.setState(0x223d, 0x82db, 0xb930, 0xc8f6, 0x23eb, 0xd469, 0x1, 0x1);
        gbc.writeMem(0x223d, { 0x64 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x82db, gbc.sp());
        EXPECT(0x223e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03DC
        gbc.setState(0x5bf4, 0x7ea5, 0xe6e0, 0x9a97, 0xe703, 0xadab, 0x1, 0x1);
        gbc.writeMem(0x5bf4, { 0x64 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7ea5, gbc.sp());
        EXPECT(0x5bf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 03DD
        gbc.setState(0xc6a6, 0xc901, 0xca60, 0x97e2, 0x4995, 0xa51a, 0x1, 0x0);
        gbc.writeMem(0xc6a6, { 0x64 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc901, gbc.sp());
        EXPECT(0xc6a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc6a6));
        // 64 03DF
        gbc.setState(0xc553, 0x1ca9, 0xcec0, 0x64c9, 0x6653, 0x213f, 0x1, 0x1);
        gbc.writeMem(0xc553, { 0x64 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1ca9, gbc.sp());
        EXPECT(0xc554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc553));
        // 64 03E0
        gbc.setState(0xa0c2, 0x28ff, 0x6530, 0x689b, 0xac8c, 0x3618, 0x0, 0x1);
        gbc.writeMem(0xa0c2, { 0x64 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x28ff, gbc.sp());
        EXPECT(0xa0c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa0c2));
        // 64 03E1
        gbc.setState(0x572a, 0x4b6a, 0x6050, 0xc923, 0x19d, 0xde1b, 0x1, 0x0);
        gbc.writeMem(0x572a, { 0x64 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4b6a, gbc.sp());
        EXPECT(0x572b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03E2
        gbc.setState(0x416f, 0xa714, 0x7220, 0x4ba3, 0x60ba, 0x6be1, 0x0, 0x1);
        gbc.writeMem(0x416f, { 0x64 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa714, gbc.sp());
        EXPECT(0x4170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 03E3
        gbc.setState(0x1c2a, 0x76e8, 0x5840, 0x7d5, 0xdb95, 0x9357, 0x0, 0x1);
        gbc.writeMem(0x1c2a, { 0x64 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x76e8, gbc.sp());
        EXPECT(0x1c2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 64 03E4
        gbc.setState(0xdacf, 0x2f5d, 0xb070, 0x924d, 0x6611, 0x572c, 0x0, 0x1);
        gbc.writeMem(0xdacf, { 0x64 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2f5d, gbc.sp());
        EXPECT(0xdad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xdacf));
        // 64 03E5
        gbc.setState(0xd93f, 0x6f00, 0x8000, 0x616f, 0xef73, 0xb193, 0x0, 0x1);
        gbc.writeMem(0xd93f, { 0x64 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6f00, gbc.sp());
        EXPECT(0xd940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd93f));
        // 64 03E6
        gbc.setState(0x545b, 0x5189, 0xaa90, 0x314d, 0x6279, 0x146d, 0x0, 0x1);
        gbc.writeMem(0x545b, { 0x64 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5189, gbc.sp());
        EXPECT(0x545c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 64 03E7
        gbc.setState(0x1a29, 0x417c, 0xec70, 0xfca9, 0xcf51, 0x3c5c, 0x1, 0x1);
        gbc.writeMem(0x1a29, { 0x64 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x417c, gbc.sp());
        EXPECT(0x1a2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
